// Compiled by ClojureScript 0.0-3308 {:static-fns true, :optimize-constants true}
goog.provide('content.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('content.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
content.sicp.texts.ch2sect1.content = (function() { 
var content$sicp$texts$ch2sect1$content__delegate = function (args__10403__auto__){
var vec__114459 = tailrecursion.hoplon.parse_args(args__10403__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__114459,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__114459,(1),null);
var G__114460 = cljs.core.PersistentArrayMap.EMPTY;
var G__114461 = content.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_114482 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114483 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_114484 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114485 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__114486 = cljs.core.PersistentArrayMap.EMPTY;
var G__114487 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114486,G__114487) : tailrecursion.hoplon.markdown.para_node.call(null,G__114486,G__114487));
})(),(function (){var G__114488 = cljs.core.PersistentArrayMap.EMPTY;
var G__114489 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__114490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114491 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114490,G__114491) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114490,G__114491));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__114492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114493 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114492,G__114493) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114492,G__114493));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114488,G__114489) : tailrecursion.hoplon.markdown.para_node.call(null,G__114488,G__114489));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114485;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114484;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114483;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114482;
}})()], 0));
var G__114462 = "";
var G__114463 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_114494 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114495 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_114496 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114497 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__114498 = cljs.core.PersistentArrayMap.EMPTY;
var G__114499 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114498,G__114499) : tailrecursion.hoplon.markdown.para_node.call(null,G__114498,G__114499));
})(),(function (){var G__114500 = cljs.core.PersistentArrayMap.EMPTY;
var G__114501 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114500,G__114501) : tailrecursion.hoplon.markdown.para_node.call(null,G__114500,G__114501));
})(),(function (){var G__114502 = cljs.core.PersistentArrayMap.EMPTY;
var G__114503 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__114504 = cljs.core.PersistentArrayMap.EMPTY;
var G__114505 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_114506 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114507 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__114508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(make-rat <n> <d>)"], null);
var G__114509 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114508,G__114509) : tailrecursion.hoplon.markdown.code_node.call(null,G__114508,G__114509));
})()," returns the rational number whose numerator is the integer ",(function (){var G__114510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<n>"], null);
var G__114511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114510,G__114511) : tailrecursion.hoplon.markdown.code_node.call(null,G__114510,G__114511));
})()," and whose denominator is the integer ",(function (){var G__114512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<d>"], null);
var G__114513 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114512,G__114513) : tailrecursion.hoplon.markdown.code_node.call(null,G__114512,G__114513));
})(),". - ",(function (){var G__114514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(numer <x>)"], null);
var G__114515 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114514,G__114515) : tailrecursion.hoplon.markdown.code_node.call(null,G__114514,G__114515));
})()," returns the numerator of the rational number ",(function (){var G__114516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<x>"], null);
var G__114517 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114516,G__114517) : tailrecursion.hoplon.markdown.code_node.call(null,G__114516,G__114517));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114507;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114506;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__114504,G__114505) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__114504,G__114505));
})(),(function (){var G__114518 = cljs.core.PersistentArrayMap.EMPTY;
var G__114519 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_114520 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114521 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__114522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(denom <x>)"], null);
var G__114523 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114522,G__114523) : tailrecursion.hoplon.markdown.code_node.call(null,G__114522,G__114523));
})()," returns the denominator of the rational number ",(function (){var G__114524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<x>"], null);
var G__114525 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114524,G__114525) : tailrecursion.hoplon.markdown.code_node.call(null,G__114524,G__114525));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114521;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114520;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__114518,G__114519) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__114518,G__114519));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__114502,G__114503) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__114502,G__114503));
})(),(function (){var G__114526 = cljs.core.PersistentArrayMap.EMPTY;
var G__114527 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__114528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__114529 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__114528,G__114529) : tailrecursion.hoplon.markdown.simple_node.call(null,G__114528,G__114529));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__114530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__114531 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114530,G__114531) : tailrecursion.hoplon.markdown.code_node.call(null,G__114530,G__114531));
})(),", ",(function (){var G__114532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__114533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114532,G__114533) : tailrecursion.hoplon.markdown.code_node.call(null,G__114532,G__114533));
})(),", and ",(function (){var G__114534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__114535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114534,G__114535) : tailrecursion.hoplon.markdown.code_node.call(null,G__114534,G__114535));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114526,G__114527) : tailrecursion.hoplon.markdown.para_node.call(null,G__114526,G__114527));
})(),(function (){var G__114536 = cljs.core.PersistentArrayMap.EMPTY;
var G__114537 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114536,G__114537) : tailrecursion.hoplon.markdown.para_node.call(null,G__114536,G__114537));
})(),(function (){var G__114538 = cljs.core.PersistentArrayMap.EMPTY;
var G__114539 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114538,G__114539) : tailrecursion.hoplon.markdown.para_node.call(null,G__114538,G__114539));
})(),(function (){var G__114540 = (function (){var G__114541 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__114542 = (function (){var G__114543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__114544 = "(";
var G__114545 = (function (){var G__114718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__114719 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114718,G__114719) : tailrecursion.hoplon.span.call(null,G__114718,G__114719));
})();
var G__114546 = (function (){var G__114720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114721 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114720,G__114721) : tailrecursion.hoplon.span.call(null,G__114720,G__114721));
})();
var G__114547 = " [";
var G__114548 = (function (){var G__114722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114723 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114722,G__114723) : tailrecursion.hoplon.span.call(null,G__114722,G__114723));
})();
var G__114549 = " ";
var G__114550 = (function (){var G__114724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114725 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114724,G__114725) : tailrecursion.hoplon.span.call(null,G__114724,G__114725));
})();
var G__114551 = "]\n  (";
var G__114552 = (function (){var G__114726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114727 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114726,G__114727) : tailrecursion.hoplon.span.call(null,G__114726,G__114727));
})();
var G__114553 = " (";
var G__114554 = (function (){var G__114728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114729 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114728,G__114729) : tailrecursion.hoplon.span.call(null,G__114728,G__114729));
})();
var G__114555 = "(";
var G__114556 = (function (){var G__114730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114731 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114730,G__114731) : tailrecursion.hoplon.span.call(null,G__114730,G__114731));
})();
var G__114557 = "(";
var G__114558 = (function (){var G__114732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114733 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114732,G__114733) : tailrecursion.hoplon.span.call(null,G__114732,G__114733));
})();
var G__114559 = " ";
var G__114560 = (function (){var G__114734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114735 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114734,G__114735) : tailrecursion.hoplon.span.call(null,G__114734,G__114735));
})();
var G__114561 = ") (";
var G__114562 = (function (){var G__114736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114737 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114736,G__114737) : tailrecursion.hoplon.span.call(null,G__114736,G__114737));
})();
var G__114563 = (function (){var G__114738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114739 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114738,G__114739) : tailrecursion.hoplon.span.call(null,G__114738,G__114739));
})();
var G__114564 = " ";
var G__114565 = (function (){var G__114740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114741 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114740,G__114741) : tailrecursion.hoplon.span.call(null,G__114740,G__114741));
})();
var G__114566 = "))\n               (";
var G__114567 = (function (){var G__114742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114743 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114742,G__114743) : tailrecursion.hoplon.span.call(null,G__114742,G__114743));
})();
var G__114568 = "(";
var G__114569 = (function (){var G__114744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114745 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114744,G__114745) : tailrecursion.hoplon.span.call(null,G__114744,G__114745));
})();
var G__114570 = " ";
var G__114571 = (function (){var G__114746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114747 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114746,G__114747) : tailrecursion.hoplon.span.call(null,G__114746,G__114747));
})();
var G__114572 = ") (";
var G__114573 = (function (){var G__114748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114749 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114748,G__114749) : tailrecursion.hoplon.span.call(null,G__114748,G__114749));
})();
var G__114574 = (function (){var G__114750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114751 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114750,G__114751) : tailrecursion.hoplon.span.call(null,G__114750,G__114751));
})();
var G__114575 = " ";
var G__114576 = (function (){var G__114752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114753 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114752,G__114753) : tailrecursion.hoplon.span.call(null,G__114752,G__114753));
})();
var G__114577 = ")))\n            (";
var G__114578 = (function (){var G__114754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114755 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114754,G__114755) : tailrecursion.hoplon.span.call(null,G__114754,G__114755));
})();
var G__114579 = "(";
var G__114580 = (function (){var G__114756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114757 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114756,G__114757) : tailrecursion.hoplon.span.call(null,G__114756,G__114757));
})();
var G__114581 = " ";
var G__114582 = (function (){var G__114758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114759 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114758,G__114759) : tailrecursion.hoplon.span.call(null,G__114758,G__114759));
})();
var G__114583 = ") (";
var G__114584 = (function (){var G__114760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114761 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114760,G__114761) : tailrecursion.hoplon.span.call(null,G__114760,G__114761));
})();
var G__114585 = " ";
var G__114586 = (function (){var G__114762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114763 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114762,G__114763) : tailrecursion.hoplon.span.call(null,G__114762,G__114763));
})();
var G__114587 = "))))\n(";
var G__114588 = (function (){var G__114764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__114765 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114764,G__114765) : tailrecursion.hoplon.span.call(null,G__114764,G__114765));
})();
var G__114589 = (function (){var G__114766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114767 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114766,G__114767) : tailrecursion.hoplon.span.call(null,G__114766,G__114767));
})();
var G__114590 = " [";
var G__114591 = (function (){var G__114768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114769 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114768,G__114769) : tailrecursion.hoplon.span.call(null,G__114768,G__114769));
})();
var G__114592 = " ";
var G__114593 = (function (){var G__114770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114771 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114770,G__114771) : tailrecursion.hoplon.span.call(null,G__114770,G__114771));
})();
var G__114594 = "]\n  (";
var G__114595 = (function (){var G__114772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114773 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114772,G__114773) : tailrecursion.hoplon.span.call(null,G__114772,G__114773));
})();
var G__114596 = " (";
var G__114597 = (function (){var G__114774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114775 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114774,G__114775) : tailrecursion.hoplon.span.call(null,G__114774,G__114775));
})();
var G__114598 = "(";
var G__114599 = (function (){var G__114776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114777 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114776,G__114777) : tailrecursion.hoplon.span.call(null,G__114776,G__114777));
})();
var G__114600 = "(";
var G__114601 = (function (){var G__114778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114779 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114778,G__114779) : tailrecursion.hoplon.span.call(null,G__114778,G__114779));
})();
var G__114602 = " ";
var G__114603 = (function (){var G__114780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114781 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114780,G__114781) : tailrecursion.hoplon.span.call(null,G__114780,G__114781));
})();
var G__114604 = ") (";
var G__114605 = (function (){var G__114782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114783 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114782,G__114783) : tailrecursion.hoplon.span.call(null,G__114782,G__114783));
})();
var G__114606 = (function (){var G__114784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114785 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114784,G__114785) : tailrecursion.hoplon.span.call(null,G__114784,G__114785));
})();
var G__114607 = " ";
var G__114608 = (function (){var G__114786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114787 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114786,G__114787) : tailrecursion.hoplon.span.call(null,G__114786,G__114787));
})();
var G__114609 = "))\n               (";
var G__114610 = (function (){var G__114788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114789 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114788,G__114789) : tailrecursion.hoplon.span.call(null,G__114788,G__114789));
})();
var G__114611 = "(";
var G__114612 = (function (){var G__114790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114791 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114790,G__114791) : tailrecursion.hoplon.span.call(null,G__114790,G__114791));
})();
var G__114613 = " ";
var G__114614 = (function (){var G__114792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114793 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114792,G__114793) : tailrecursion.hoplon.span.call(null,G__114792,G__114793));
})();
var G__114615 = ") (";
var G__114616 = (function (){var G__114794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114795 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114794,G__114795) : tailrecursion.hoplon.span.call(null,G__114794,G__114795));
})();
var G__114617 = (function (){var G__114796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114797 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114796,G__114797) : tailrecursion.hoplon.span.call(null,G__114796,G__114797));
})();
var G__114618 = " ";
var G__114619 = (function (){var G__114798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114799 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114798,G__114799) : tailrecursion.hoplon.span.call(null,G__114798,G__114799));
})();
var G__114620 = ")))\n            (";
var G__114621 = (function (){var G__114800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114801 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114800,G__114801) : tailrecursion.hoplon.span.call(null,G__114800,G__114801));
})();
var G__114622 = "(";
var G__114623 = (function (){var G__114802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114803 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114802,G__114803) : tailrecursion.hoplon.span.call(null,G__114802,G__114803));
})();
var G__114624 = " ";
var G__114625 = (function (){var G__114804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114805 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114804,G__114805) : tailrecursion.hoplon.span.call(null,G__114804,G__114805));
})();
var G__114626 = ") (";
var G__114627 = (function (){var G__114806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114807 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114806,G__114807) : tailrecursion.hoplon.span.call(null,G__114806,G__114807));
})();
var G__114628 = " ";
var G__114629 = (function (){var G__114808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114809 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114808,G__114809) : tailrecursion.hoplon.span.call(null,G__114808,G__114809));
})();
var G__114630 = "))))\n(";
var G__114631 = (function (){var G__114810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__114811 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114810,G__114811) : tailrecursion.hoplon.span.call(null,G__114810,G__114811));
})();
var G__114632 = (function (){var G__114812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114813 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114812,G__114813) : tailrecursion.hoplon.span.call(null,G__114812,G__114813));
})();
var G__114633 = " [";
var G__114634 = (function (){var G__114814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114815 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114814,G__114815) : tailrecursion.hoplon.span.call(null,G__114814,G__114815));
})();
var G__114635 = " ";
var G__114636 = (function (){var G__114816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114817 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114816,G__114817) : tailrecursion.hoplon.span.call(null,G__114816,G__114817));
})();
var G__114637 = "]\n  (";
var G__114638 = (function (){var G__114818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114819 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114818,G__114819) : tailrecursion.hoplon.span.call(null,G__114818,G__114819));
})();
var G__114639 = " (";
var G__114640 = (function (){var G__114820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114821 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114820,G__114821) : tailrecursion.hoplon.span.call(null,G__114820,G__114821));
})();
var G__114641 = "(";
var G__114642 = (function (){var G__114822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114823 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114822,G__114823) : tailrecursion.hoplon.span.call(null,G__114822,G__114823));
})();
var G__114643 = " ";
var G__114644 = (function (){var G__114824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114825 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114824,G__114825) : tailrecursion.hoplon.span.call(null,G__114824,G__114825));
})();
var G__114645 = ") (";
var G__114646 = (function (){var G__114826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114827 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114826,G__114827) : tailrecursion.hoplon.span.call(null,G__114826,G__114827));
})();
var G__114647 = " ";
var G__114648 = (function (){var G__114828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114829 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114828,G__114829) : tailrecursion.hoplon.span.call(null,G__114828,G__114829));
})();
var G__114649 = "))\n            (";
var G__114650 = (function (){var G__114830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114831 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114830,G__114831) : tailrecursion.hoplon.span.call(null,G__114830,G__114831));
})();
var G__114651 = "(";
var G__114652 = (function (){var G__114832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114833 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114832,G__114833) : tailrecursion.hoplon.span.call(null,G__114832,G__114833));
})();
var G__114653 = " ";
var G__114654 = (function (){var G__114834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114835 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114834,G__114835) : tailrecursion.hoplon.span.call(null,G__114834,G__114835));
})();
var G__114655 = ") (";
var G__114656 = (function (){var G__114836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114837 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114836,G__114837) : tailrecursion.hoplon.span.call(null,G__114836,G__114837));
})();
var G__114657 = " ";
var G__114658 = (function (){var G__114838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114839 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114838,G__114839) : tailrecursion.hoplon.span.call(null,G__114838,G__114839));
})();
var G__114659 = "))))\n(";
var G__114660 = (function (){var G__114840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__114841 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114840,G__114841) : tailrecursion.hoplon.span.call(null,G__114840,G__114841));
})();
var G__114661 = (function (){var G__114842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114843 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114842,G__114843) : tailrecursion.hoplon.span.call(null,G__114842,G__114843));
})();
var G__114662 = " [";
var G__114663 = (function (){var G__114844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114845 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114844,G__114845) : tailrecursion.hoplon.span.call(null,G__114844,G__114845));
})();
var G__114664 = " ";
var G__114665 = (function (){var G__114846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114847 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114846,G__114847) : tailrecursion.hoplon.span.call(null,G__114846,G__114847));
})();
var G__114666 = "]\n  (";
var G__114667 = (function (){var G__114848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114849 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114848,G__114849) : tailrecursion.hoplon.span.call(null,G__114848,G__114849));
})();
var G__114668 = " (";
var G__114669 = (function (){var G__114850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114851 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114850,G__114851) : tailrecursion.hoplon.span.call(null,G__114850,G__114851));
})();
var G__114670 = "(";
var G__114671 = (function (){var G__114852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114853 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114852,G__114853) : tailrecursion.hoplon.span.call(null,G__114852,G__114853));
})();
var G__114672 = " ";
var G__114673 = (function (){var G__114854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114855 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114854,G__114855) : tailrecursion.hoplon.span.call(null,G__114854,G__114855));
})();
var G__114674 = ") (";
var G__114675 = (function (){var G__114856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114857 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114856,G__114857) : tailrecursion.hoplon.span.call(null,G__114856,G__114857));
})();
var G__114676 = " ";
var G__114677 = (function (){var G__114858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114859 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114858,G__114859) : tailrecursion.hoplon.span.call(null,G__114858,G__114859));
})();
var G__114678 = "))\n            (";
var G__114679 = (function (){var G__114860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114861 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114860,G__114861) : tailrecursion.hoplon.span.call(null,G__114860,G__114861));
})();
var G__114680 = "(";
var G__114681 = (function (){var G__114862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114863 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114862,G__114863) : tailrecursion.hoplon.span.call(null,G__114862,G__114863));
})();
var G__114682 = " ";
var G__114683 = (function (){var G__114864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114865 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114864,G__114865) : tailrecursion.hoplon.span.call(null,G__114864,G__114865));
})();
var G__114684 = ") (";
var G__114685 = (function (){var G__114866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114867 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114866,G__114867) : tailrecursion.hoplon.span.call(null,G__114866,G__114867));
})();
var G__114686 = " ";
var G__114687 = (function (){var G__114868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114869 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114868,G__114869) : tailrecursion.hoplon.span.call(null,G__114868,G__114869));
})();
var G__114688 = "))))\n(";
var G__114689 = (function (){var G__114870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__114871 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114870,G__114871) : tailrecursion.hoplon.span.call(null,G__114870,G__114871));
})();
var G__114690 = (function (){var G__114872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114873 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114872,G__114873) : tailrecursion.hoplon.span.call(null,G__114872,G__114873));
})();
var G__114691 = " [";
var G__114692 = (function (){var G__114874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114875 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114874,G__114875) : tailrecursion.hoplon.span.call(null,G__114874,G__114875));
})();
var G__114693 = " ";
var G__114694 = (function (){var G__114876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114877 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114876,G__114877) : tailrecursion.hoplon.span.call(null,G__114876,G__114877));
})();
var G__114695 = "]\n  (";
var G__114696 = (function (){var G__114878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114879 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114878,G__114879) : tailrecursion.hoplon.span.call(null,G__114878,G__114879));
})();
var G__114697 = "(";
var G__114698 = (function (){var G__114880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114881 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114880,G__114881) : tailrecursion.hoplon.span.call(null,G__114880,G__114881));
})();
var G__114699 = "(";
var G__114700 = (function (){var G__114882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114883 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114882,G__114883) : tailrecursion.hoplon.span.call(null,G__114882,G__114883));
})();
var G__114701 = " ";
var G__114702 = (function (){var G__114884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114885 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114884,G__114885) : tailrecursion.hoplon.span.call(null,G__114884,G__114885));
})();
var G__114703 = ") (";
var G__114704 = (function (){var G__114886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114887 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114886,G__114887) : tailrecursion.hoplon.span.call(null,G__114886,G__114887));
})();
var G__114705 = " ";
var G__114706 = (function (){var G__114888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114889 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114888,G__114889) : tailrecursion.hoplon.span.call(null,G__114888,G__114889));
})();
var G__114707 = "))\n     (";
var G__114708 = (function (){var G__114890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__114891 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114890,G__114891) : tailrecursion.hoplon.span.call(null,G__114890,G__114891));
})();
var G__114709 = "(";
var G__114710 = (function (){var G__114892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114893 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114892,G__114893) : tailrecursion.hoplon.span.call(null,G__114892,G__114893));
})();
var G__114711 = " ";
var G__114712 = (function (){var G__114894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114895 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114894,G__114895) : tailrecursion.hoplon.span.call(null,G__114894,G__114895));
})();
var G__114713 = ") (";
var G__114714 = (function (){var G__114896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__114897 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114896,G__114897) : tailrecursion.hoplon.span.call(null,G__114896,G__114897));
})();
var G__114715 = " ";
var G__114716 = (function (){var G__114898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__114899 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__114898,G__114899) : tailrecursion.hoplon.span.call(null,G__114898,G__114899));
})();
var G__114717 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__114543,G__114544,G__114545,G__114546,G__114547,G__114548,G__114549,G__114550,G__114551,G__114552,G__114553,G__114554,G__114555,G__114556,G__114557,G__114558,G__114559,G__114560,G__114561,G__114562,G__114563,G__114564,G__114565,G__114566,G__114567,G__114568,G__114569,G__114570,G__114571,G__114572,G__114573,G__114574,G__114575,G__114576,G__114577,G__114578,G__114579,G__114580,G__114581,G__114582,G__114583,G__114584,G__114585,G__114586,G__114587,G__114588,G__114589,G__114590,G__114591,G__114592,G__114593,G__114594,G__114595,G__114596,G__114597,G__114598,G__114599,G__114600,G__114601,G__114602,G__114603,G__114604,G__114605,G__114606,G__114607,G__114608,G__114609,G__114610,G__114611,G__114612,G__114613,G__114614,G__114615,G__114616,G__114617,G__114618,G__114619,G__114620,G__114621,G__114622,G__114623,G__114624,G__114625,G__114626,G__114627,G__114628,G__114629,G__114630,G__114631,G__114632,G__114633,G__114634,G__114635,G__114636,G__114637,G__114638,G__114639,G__114640,G__114641,G__114642,G__114643,G__114644,G__114645,G__114646,G__114647,G__114648,G__114649,G__114650,G__114651,G__114652,G__114653,G__114654,G__114655,G__114656,G__114657,G__114658,G__114659,G__114660,G__114661,G__114662,G__114663,G__114664,G__114665,G__114666,G__114667,G__114668,G__114669,G__114670,G__114671,G__114672,G__114673,G__114674,G__114675,G__114676,G__114677,G__114678,G__114679,G__114680,G__114681,G__114682,G__114683,G__114684,G__114685,G__114686,G__114687,G__114688,G__114689,G__114690,G__114691,G__114692,G__114693,G__114694,G__114695,G__114696,G__114697,G__114698,G__114699,G__114700,G__114701,G__114702,G__114703,G__114704,G__114705,G__114706,G__114707,G__114708,G__114709,G__114710,G__114711,G__114712,G__114713,G__114714,G__114715,G__114716,G__114717) : tailrecursion.hoplon.pre.call(null,G__114543,G__114544,G__114545,G__114546,G__114547,G__114548,G__114549,G__114550,G__114551,G__114552,G__114553,G__114554,G__114555,G__114556,G__114557,G__114558,G__114559,G__114560,G__114561,G__114562,G__114563,G__114564,G__114565,G__114566,G__114567,G__114568,G__114569,G__114570,G__114571,G__114572,G__114573,G__114574,G__114575,G__114576,G__114577,G__114578,G__114579,G__114580,G__114581,G__114582,G__114583,G__114584,G__114585,G__114586,G__114587,G__114588,G__114589,G__114590,G__114591,G__114592,G__114593,G__114594,G__114595,G__114596,G__114597,G__114598,G__114599,G__114600,G__114601,G__114602,G__114603,G__114604,G__114605,G__114606,G__114607,G__114608,G__114609,G__114610,G__114611,G__114612,G__114613,G__114614,G__114615,G__114616,G__114617,G__114618,G__114619,G__114620,G__114621,G__114622,G__114623,G__114624,G__114625,G__114626,G__114627,G__114628,G__114629,G__114630,G__114631,G__114632,G__114633,G__114634,G__114635,G__114636,G__114637,G__114638,G__114639,G__114640,G__114641,G__114642,G__114643,G__114644,G__114645,G__114646,G__114647,G__114648,G__114649,G__114650,G__114651,G__114652,G__114653,G__114654,G__114655,G__114656,G__114657,G__114658,G__114659,G__114660,G__114661,G__114662,G__114663,G__114664,G__114665,G__114666,G__114667,G__114668,G__114669,G__114670,G__114671,G__114672,G__114673,G__114674,G__114675,G__114676,G__114677,G__114678,G__114679,G__114680,G__114681,G__114682,G__114683,G__114684,G__114685,G__114686,G__114687,G__114688,G__114689,G__114690,G__114691,G__114692,G__114693,G__114694,G__114695,G__114696,G__114697,G__114698,G__114699,G__114700,G__114701,G__114702,G__114703,G__114704,G__114705,G__114706,G__114707,G__114708,G__114709,G__114710,G__114711,G__114712,G__114713,G__114714,G__114715,G__114716,G__114717));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__114541,G__114542) : tailrecursion.hoplon.div.call(null,G__114541,G__114542));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__114540) : tailrecursion.hoplon.div.call(null,G__114540));
})(),(function (){var G__114900 = cljs.core.PersistentArrayMap.EMPTY;
var G__114901 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__114902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__114903 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114902,G__114903) : tailrecursion.hoplon.markdown.code_node.call(null,G__114902,G__114903));
})(),", ",(function (){var G__114904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__114905 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114904,G__114905) : tailrecursion.hoplon.markdown.code_node.call(null,G__114904,G__114905));
})(),", and ",(function (){var G__114906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__114907 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114906,G__114907) : tailrecursion.hoplon.markdown.code_node.call(null,G__114906,G__114907));
})(),". But we haven",(function (){var G__114908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__114909 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__114908,G__114909) : tailrecursion.hoplon.markdown.simple_node.call(null,G__114908,G__114909));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114900,G__114901) : tailrecursion.hoplon.markdown.para_node.call(null,G__114900,G__114901));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114497;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114496;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114495;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114494;
}})()], 0));
var G__114464 = "";
var G__114465 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_114910 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114911 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_114912 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_114913 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__114914 = cljs.core.PersistentArrayMap.EMPTY;
var G__114915 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__114916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__114917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114916,G__114917) : tailrecursion.hoplon.markdown.code_node.call(null,G__114916,G__114917));
})()," and ",(function (){var G__114918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__114919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114918,G__114919) : tailrecursion.hoplon.markdown.code_node.call(null,G__114918,G__114919));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__114920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__114921 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__114920,G__114921) : tailrecursion.hoplon.markdown.simple_node.call(null,G__114920,G__114921));
})()," the one we will be using instead of the ",(function (){var G__114922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114923 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114922,G__114923) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114922,G__114923));
})()," they use for this section in Scheme ",(function (){var G__114924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__114925 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__114924,G__114925) : tailrecursion.hoplon.markdown.simple_node.call(null,G__114924,G__114925));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__114926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__114927 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114926,G__114927) : tailrecursion.hoplon.markdown.code_node.call(null,G__114926,G__114927));
})()," like so ",(function (){var G__114928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 2 3)"], null);
var G__114929 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114928,G__114929) : tailrecursion.hoplon.markdown.code_node.call(null,G__114928,G__114929));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__114930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(first (list 1 2 3))"], null);
var G__114931 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114930,G__114931) : tailrecursion.hoplon.markdown.code_node.call(null,G__114930,G__114931));
})()," would return ",(function (){var G__114932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"1"], null);
var G__114933 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114932,G__114933) : tailrecursion.hoplon.markdown.code_node.call(null,G__114932,G__114933));
})(),", and ",(function (){var G__114934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(rest (list 1 2 3))"], null);
var G__114935 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114934,G__114935) : tailrecursion.hoplon.markdown.code_node.call(null,G__114934,G__114935));
})()," returns ",(function (){var G__114936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(2 3)"], null);
var G__114937 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114936,G__114937) : tailrecursion.hoplon.markdown.code_node.call(null,G__114936,G__114937));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__114938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__114939 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__114938,G__114939) : tailrecursion.hoplon.markdown.simple_node.call(null,G__114938,G__114939));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__114940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list?"], null);
var G__114941 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114940,G__114941) : tailrecursion.hoplon.markdown.code_node.call(null,G__114940,G__114941));
})()," like so: ",(function (){var G__114942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list? (rest (list 1 2 3)))"], null);
var G__114943 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114942,G__114943) : tailrecursion.hoplon.markdown.code_node.call(null,G__114942,G__114943));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__114944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__114945 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114944,G__114945) : tailrecursion.hoplon.markdown.code_node.call(null,G__114944,G__114945));
})(),".",(function (){var G__114946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__114947 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__114948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114949 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114948,G__114949) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114948,G__114949));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114946,G__114947) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114946,G__114947));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__114950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__114951 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114950,G__114951) : tailrecursion.hoplon.markdown.code_node.call(null,G__114950,G__114951));
})()," does exactly that. Hence, ",(function (){var G__114952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(conj (list 1 2 3) 4)"], null);
var G__114953 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114952,G__114953) : tailrecursion.hoplon.markdown.code_node.call(null,G__114952,G__114953));
})()," returns ",(function (){var G__114954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(4 1\n2 3)"], null);
var G__114955 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114954,G__114955) : tailrecursion.hoplon.markdown.code_node.call(null,G__114954,G__114955));
})(),", and ",(function (){var G__114956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(conj (list 1 2 3) 4 5)"], null);
var G__114957 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114956,G__114957) : tailrecursion.hoplon.markdown.code_node.call(null,G__114956,G__114957));
})()," returns ",(function (){var G__114958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(5 4 1 2 3)"], null);
var G__114959 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114958,G__114959) : tailrecursion.hoplon.markdown.code_node.call(null,G__114958,G__114959));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114914,G__114915) : tailrecursion.hoplon.markdown.para_node.call(null,G__114914,G__114915));
})(),(function (){var G__114960 = cljs.core.PersistentArrayMap.EMPTY;
var G__114961 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__114962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__114963 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114962,G__114963) : tailrecursion.hoplon.markdown.code_node.call(null,G__114962,G__114963));
})()," (which also works in Clojure",(function (){var G__114964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__114965 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__114964,G__114965) : tailrecursion.hoplon.markdown.simple_node.call(null,G__114964,G__114965));
})()," kinda) and has procedures ",(function (){var G__114966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__114967 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114966,G__114967) : tailrecursion.hoplon.markdown.code_node.call(null,G__114966,G__114967));
})()," and ",(function (){var G__114968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__114969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114968,G__114969) : tailrecursion.hoplon.markdown.code_node.call(null,G__114968,G__114969));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__114970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__114971 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__114972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__114973 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114972,G__114973) : tailrecursion.hoplon.markdown.code_node.call(null,G__114972,G__114973));
})()," stands for ",(function (){var G__114974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114975 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114974,G__114975) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114974,G__114975));
})()," The names ",(function (){var G__114976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__114977 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114976,G__114977) : tailrecursion.hoplon.markdown.code_node.call(null,G__114976,G__114977));
})()," and ",(function (){var G__114978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__114979 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114978,G__114979) : tailrecursion.hoplon.markdown.code_node.call(null,G__114978,G__114979));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__114980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114981 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114980,G__114981) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114980,G__114981));
})()," and ",(function (){var G__114982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114983 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114982,G__114983) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114982,G__114983));
})()," parts of a memory location. ",(function (){var G__114984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__114985 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114984,G__114985) : tailrecursion.hoplon.markdown.code_node.call(null,G__114984,G__114985));
})()," stands for ",(function (){var G__114986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114987 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114986,G__114987) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114986,G__114987));
})()," and ",(function (){var G__114988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__114989 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114988,G__114989) : tailrecursion.hoplon.markdown.code_node.call(null,G__114988,G__114989));
})()," (pronounced ",(function (){var G__114990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114991 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114990,G__114991) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114990,G__114991));
})(),") stands for ",(function (){var G__114992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__114993 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114992,G__114993) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114992,G__114993));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__114970,G__114971) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__114970,G__114971));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__114994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__114995 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114994,G__114995) : tailrecursion.hoplon.markdown.code_node.call(null,G__114994,G__114995));
})(),", ",(function (){var G__114996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__114997 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114996,G__114997) : tailrecursion.hoplon.markdown.code_node.call(null,G__114996,G__114997));
})(),", and ",(function (){var G__114998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__114999 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__114998,G__114999) : tailrecursion.hoplon.markdown.code_node.call(null,G__114998,G__114999));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__114960,G__114961) : tailrecursion.hoplon.markdown.para_node.call(null,G__114960,G__114961));
})(),(function (){var G__115000 = (function (){var G__115001 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115002 = (function (){var G__115003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115004 = "(";
var G__115005 = (function (){var G__115013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115014 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115013,G__115014) : tailrecursion.hoplon.span.call(null,G__115013,G__115014));
})();
var G__115006 = (function (){var G__115015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115016 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115015,G__115016) : tailrecursion.hoplon.span.call(null,G__115015,G__115016));
})();
var G__115007 = " (";
var G__115008 = (function (){var G__115017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115018 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115017,G__115018) : tailrecursion.hoplon.span.call(null,G__115017,G__115018));
})();
var G__115009 = (function (){var G__115019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115020 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115019,G__115020) : tailrecursion.hoplon.span.call(null,G__115019,G__115020));
})();
var G__115010 = " ";
var G__115011 = (function (){var G__115021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115022 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115021,G__115022) : tailrecursion.hoplon.span.call(null,G__115021,G__115022));
})();
var G__115012 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__115003,G__115004,G__115005,G__115006,G__115007,G__115008,G__115009,G__115010,G__115011,G__115012) : tailrecursion.hoplon.pre.call(null,G__115003,G__115004,G__115005,G__115006,G__115007,G__115008,G__115009,G__115010,G__115011,G__115012));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115001,G__115002) : tailrecursion.hoplon.div.call(null,G__115001,G__115002));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115000) : tailrecursion.hoplon.div.call(null,G__115000));
})(),(function (){var G__115023 = cljs.core.PersistentArrayMap.EMPTY;
var G__115024 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115023,G__115024) : tailrecursion.hoplon.markdown.para_node.call(null,G__115023,G__115024));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114913;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114912;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_114911;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_114910;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_115025 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115026 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_115027 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115028 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__115029 = cljs.core.PersistentArrayMap.EMPTY;
var G__115030 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__115031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115031,G__115032) : tailrecursion.hoplon.markdown.code_node.call(null,G__115031,G__115032));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115029,G__115030) : tailrecursion.hoplon.markdown.para_node.call(null,G__115029,G__115030));
})(),(function (){var G__115033 = (function (){var G__115034 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115035 = (function (){var G__115036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115037 = "(";
var G__115038 = (function (){var G__115049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115050 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115049,G__115050) : tailrecursion.hoplon.span.call(null,G__115049,G__115050));
})();
var G__115039 = (function (){var G__115051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115052 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115051,G__115052) : tailrecursion.hoplon.span.call(null,G__115051,G__115052));
})();
var G__115040 = " (";
var G__115041 = (function (){var G__115053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115054 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115053,G__115054) : tailrecursion.hoplon.span.call(null,G__115053,G__115054));
})();
var G__115042 = (function (){var G__115055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115056 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115055,G__115056) : tailrecursion.hoplon.span.call(null,G__115055,G__115056));
})();
var G__115043 = " (";
var G__115044 = (function (){var G__115057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115058 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115057,G__115058) : tailrecursion.hoplon.span.call(null,G__115057,G__115058));
})();
var G__115045 = (function (){var G__115059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115060 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115059,G__115060) : tailrecursion.hoplon.span.call(null,G__115059,G__115060));
})();
var G__115046 = " ";
var G__115047 = (function (){var G__115061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115062 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115061,G__115062) : tailrecursion.hoplon.span.call(null,G__115061,G__115062));
})();
var G__115048 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__115036,G__115037,G__115038,G__115039,G__115040,G__115041,G__115042,G__115043,G__115044,G__115045,G__115046,G__115047,G__115048) : tailrecursion.hoplon.pre.call(null,G__115036,G__115037,G__115038,G__115039,G__115040,G__115041,G__115042,G__115043,G__115044,G__115045,G__115046,G__115047,G__115048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115034,G__115035) : tailrecursion.hoplon.div.call(null,G__115034,G__115035));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115033) : tailrecursion.hoplon.div.call(null,G__115033));
})(),(function (){var G__115063 = cljs.core.PersistentArrayMap.EMPTY;
var G__115064 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__115065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__115066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__115065,G__115066) : tailrecursion.hoplon.markdown.simple_node.call(null,G__115065,G__115066));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__115067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115067,G__115068) : tailrecursion.hoplon.markdown.code_node.call(null,G__115067,G__115068));
})()," must be sequential object (or ",(function (){var G__115069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__115070 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115069,G__115070) : tailrecursion.hoplon.markdown.code_node.call(null,G__115069,G__115070));
})(),"). Either way, we will not be using ",(function (){var G__115071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115071,G__115072) : tailrecursion.hoplon.markdown.code_node.call(null,G__115071,G__115072));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__115073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__115074 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115073,G__115074) : tailrecursion.hoplon.markdown.code_node.call(null,G__115073,G__115074));
})()," and ",(function (){var G__115075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__115076 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115075,G__115076) : tailrecursion.hoplon.markdown.code_node.call(null,G__115075,G__115076));
})(),", which are more general anyway. Along with ",(function (){var G__115077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__115078 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115077,G__115078) : tailrecursion.hoplon.markdown.code_node.call(null,G__115077,G__115078));
})()," and ",(function (){var G__115079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__115080 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115079,G__115080) : tailrecursion.hoplon.markdown.code_node.call(null,G__115079,G__115080));
})(),", lists also have ",(function (){var G__115081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__115082 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115081,G__115082) : tailrecursion.hoplon.markdown.code_node.call(null,G__115081,G__115082));
})()," and ",(function (){var G__115083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__115084 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115083,G__115084) : tailrecursion.hoplon.markdown.code_node.call(null,G__115083,G__115084));
})()," which give you exactly what you",(function (){var G__115085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__115086 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__115085,G__115086) : tailrecursion.hoplon.markdown.simple_node.call(null,G__115085,G__115086));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115063,G__115064) : tailrecursion.hoplon.markdown.para_node.call(null,G__115063,G__115064));
})(),(function (){var G__115087 = (function (){var G__115088 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115089 = (function (){var G__115090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115091 = "(";
var G__115092 = (function (){var G__115110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115111 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115110,G__115111) : tailrecursion.hoplon.span.call(null,G__115110,G__115111));
})();
var G__115093 = (function (){var G__115112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115113 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115112,G__115113) : tailrecursion.hoplon.span.call(null,G__115112,G__115113));
})();
var G__115094 = " (";
var G__115095 = (function (){var G__115114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115115 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115114,G__115115) : tailrecursion.hoplon.span.call(null,G__115114,G__115115));
})();
var G__115096 = (function (){var G__115116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115117 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115116,G__115117) : tailrecursion.hoplon.span.call(null,G__115116,G__115117));
})();
var G__115097 = " ";
var G__115098 = (function (){var G__115118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115119 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115118,G__115119) : tailrecursion.hoplon.span.call(null,G__115118,G__115119));
})();
var G__115099 = "))\n(";
var G__115100 = (function (){var G__115120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115121 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115120,G__115121) : tailrecursion.hoplon.span.call(null,G__115120,G__115121));
})();
var G__115101 = (function (){var G__115122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115123 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115122,G__115123) : tailrecursion.hoplon.span.call(null,G__115122,G__115123));
})();
var G__115102 = ")\n";
var G__115103 = (function (){var G__115124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115125 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115124,G__115125) : tailrecursion.hoplon.span.call(null,G__115124,G__115125));
})();
var G__115104 = "\n(";
var G__115105 = (function (){var G__115126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115127 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115126,G__115127) : tailrecursion.hoplon.span.call(null,G__115126,G__115127));
})();
var G__115106 = (function (){var G__115128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115129 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115128,G__115129) : tailrecursion.hoplon.span.call(null,G__115128,G__115129));
})();
var G__115107 = ")\n";
var G__115108 = (function (){var G__115130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115131 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115130,G__115131) : tailrecursion.hoplon.span.call(null,G__115130,G__115131));
})();
var G__115109 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__115090,G__115091,G__115092,G__115093,G__115094,G__115095,G__115096,G__115097,G__115098,G__115099,G__115100,G__115101,G__115102,G__115103,G__115104,G__115105,G__115106,G__115107,G__115108,G__115109) : tailrecursion.hoplon.pre.call(null,G__115090,G__115091,G__115092,G__115093,G__115094,G__115095,G__115096,G__115097,G__115098,G__115099,G__115100,G__115101,G__115102,G__115103,G__115104,G__115105,G__115106,G__115107,G__115108,G__115109));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115088,G__115089) : tailrecursion.hoplon.div.call(null,G__115088,G__115089));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115087) : tailrecursion.hoplon.div.call(null,G__115087));
})(),(function (){var G__115132 = cljs.core.PersistentArrayMap.EMPTY;
var G__115133 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__115134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__115135 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115134,G__115135) : tailrecursion.hoplon.markdown.code_node.call(null,G__115134,G__115135));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115132,G__115133) : tailrecursion.hoplon.markdown.para_node.call(null,G__115132,G__115133));
})(),(function (){var G__115136 = (function (){var G__115137 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115138 = (function (){var G__115139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115140 = "(";
var G__115141 = (function (){var G__115185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115186 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115185,G__115186) : tailrecursion.hoplon.span.call(null,G__115185,G__115186));
})();
var G__115142 = (function (){var G__115187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115188 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115187,G__115188) : tailrecursion.hoplon.span.call(null,G__115187,G__115188));
})();
var G__115143 = " (";
var G__115144 = (function (){var G__115189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115190 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115189,G__115190) : tailrecursion.hoplon.span.call(null,G__115189,G__115190));
})();
var G__115145 = (function (){var G__115191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115192 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115191,G__115192) : tailrecursion.hoplon.span.call(null,G__115191,G__115192));
})();
var G__115146 = " (";
var G__115147 = (function (){var G__115193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115194 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115193,G__115194) : tailrecursion.hoplon.span.call(null,G__115193,G__115194));
})();
var G__115148 = (function (){var G__115195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115196 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115195,G__115196) : tailrecursion.hoplon.span.call(null,G__115195,G__115196));
})();
var G__115149 = " ";
var G__115150 = (function (){var G__115197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115198 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115197,G__115198) : tailrecursion.hoplon.span.call(null,G__115197,G__115198));
})();
var G__115151 = ")))\n(";
var G__115152 = (function (){var G__115199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115200 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115199,G__115200) : tailrecursion.hoplon.span.call(null,G__115199,G__115200));
})();
var G__115153 = (function (){var G__115201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115202 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115201,G__115202) : tailrecursion.hoplon.span.call(null,G__115201,G__115202));
})();
var G__115154 = " (";
var G__115155 = (function (){var G__115203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115204 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115203,G__115204) : tailrecursion.hoplon.span.call(null,G__115203,G__115204));
})();
var G__115156 = (function (){var G__115205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115206 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115205,G__115206) : tailrecursion.hoplon.span.call(null,G__115205,G__115206));
})();
var G__115157 = " (";
var G__115158 = (function (){var G__115207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115208 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115207,G__115208) : tailrecursion.hoplon.span.call(null,G__115207,G__115208));
})();
var G__115159 = (function (){var G__115209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115210 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115209,G__115210) : tailrecursion.hoplon.span.call(null,G__115209,G__115210));
})();
var G__115160 = " ";
var G__115161 = (function (){var G__115211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115212 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115211,G__115212) : tailrecursion.hoplon.span.call(null,G__115211,G__115212));
})();
var G__115162 = ")))\n(";
var G__115163 = (function (){var G__115213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115214 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115213,G__115214) : tailrecursion.hoplon.span.call(null,G__115213,G__115214));
})();
var G__115164 = (function (){var G__115215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115216 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115215,G__115216) : tailrecursion.hoplon.span.call(null,G__115215,G__115216));
})();
var G__115165 = " (";
var G__115166 = (function (){var G__115217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115218 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115217,G__115218) : tailrecursion.hoplon.span.call(null,G__115217,G__115218));
})();
var G__115167 = (function (){var G__115219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115220 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115219,G__115220) : tailrecursion.hoplon.span.call(null,G__115219,G__115220));
})();
var G__115168 = " ";
var G__115169 = (function (){var G__115221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115222 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115221,G__115222) : tailrecursion.hoplon.span.call(null,G__115221,G__115222));
})();
var G__115170 = "))\n\n(";
var G__115171 = (function (){var G__115223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115224 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115223,G__115224) : tailrecursion.hoplon.span.call(null,G__115223,G__115224));
})();
var G__115172 = "(";
var G__115173 = (function (){var G__115225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115226 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115225,G__115226) : tailrecursion.hoplon.span.call(null,G__115225,G__115226));
})();
var G__115174 = (function (){var G__115227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115228 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115227,G__115228) : tailrecursion.hoplon.span.call(null,G__115227,G__115228));
})();
var G__115175 = "))\n";
var G__115176 = (function (){var G__115229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115230 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115229,G__115230) : tailrecursion.hoplon.span.call(null,G__115229,G__115230));
})();
var G__115177 = "\n(";
var G__115178 = (function (){var G__115231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115232 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115231,G__115232) : tailrecursion.hoplon.span.call(null,G__115231,G__115232));
})();
var G__115179 = "(";
var G__115180 = (function (){var G__115233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115234 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115233,G__115234) : tailrecursion.hoplon.span.call(null,G__115233,G__115234));
})();
var G__115181 = (function (){var G__115235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115236 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115235,G__115236) : tailrecursion.hoplon.span.call(null,G__115235,G__115236));
})();
var G__115182 = "))\n";
var G__115183 = (function (){var G__115237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115238 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115237,G__115238) : tailrecursion.hoplon.span.call(null,G__115237,G__115238));
})();
var G__115184 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__115139,G__115140,G__115141,G__115142,G__115143,G__115144,G__115145,G__115146,G__115147,G__115148,G__115149,G__115150,G__115151,G__115152,G__115153,G__115154,G__115155,G__115156,G__115157,G__115158,G__115159,G__115160,G__115161,G__115162,G__115163,G__115164,G__115165,G__115166,G__115167,G__115168,G__115169,G__115170,G__115171,G__115172,G__115173,G__115174,G__115175,G__115176,G__115177,G__115178,G__115179,G__115180,G__115181,G__115182,G__115183,G__115184) : tailrecursion.hoplon.pre.call(null,G__115139,G__115140,G__115141,G__115142,G__115143,G__115144,G__115145,G__115146,G__115147,G__115148,G__115149,G__115150,G__115151,G__115152,G__115153,G__115154,G__115155,G__115156,G__115157,G__115158,G__115159,G__115160,G__115161,G__115162,G__115163,G__115164,G__115165,G__115166,G__115167,G__115168,G__115169,G__115170,G__115171,G__115172,G__115173,G__115174,G__115175,G__115176,G__115177,G__115178,G__115179,G__115180,G__115181,G__115182,G__115183,G__115184));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115137,G__115138) : tailrecursion.hoplon.div.call(null,G__115137,G__115138));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115136) : tailrecursion.hoplon.div.call(null,G__115136));
})(),(function (){var G__115239 = cljs.core.PersistentArrayMap.EMPTY;
var G__115240 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__115241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115242 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115241,G__115242) : tailrecursion.hoplon.markdown.code_node.call(null,G__115241,G__115242));
})(),", ",(function (){var G__115243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__115244 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115243,G__115244) : tailrecursion.hoplon.markdown.code_node.call(null,G__115243,G__115244));
})(),", and ",(function (){var G__115245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__115246 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115245,G__115246) : tailrecursion.hoplon.markdown.code_node.call(null,G__115245,G__115246));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__115247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__115248 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__115247,G__115248) : tailrecursion.hoplon.markdown.simple_node.call(null,G__115247,G__115248));
})(),"s pretend like our ",(function (){var G__115249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__115250 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115249,G__115250) : tailrecursion.hoplon.markdown.code_node.call(null,G__115249,G__115250));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115239,G__115240) : tailrecursion.hoplon.markdown.para_node.call(null,G__115239,G__115240));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115028;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115027;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115026;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115025;
}})()], 0));
var G__114466 = "";
var G__114467 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_115251 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115252 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_115253 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115254 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__115255 = cljs.core.PersistentArrayMap.EMPTY;
var G__115256 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__115257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115258 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115257,G__115258) : tailrecursion.hoplon.markdown.code_node.call(null,G__115257,G__115258));
})(),", ",(function (){var G__115259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__115260 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115259,G__115260) : tailrecursion.hoplon.markdown.code_node.call(null,G__115259,G__115260));
})(),", and ",(function (){var G__115261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__115262 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115261,G__115262) : tailrecursion.hoplon.markdown.code_node.call(null,G__115261,G__115262));
})()," are readily implemented as follows:",(function (){var G__115263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__115264 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__115265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(define make-rat cons)"], null);
var G__115266 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115265,G__115266) : tailrecursion.hoplon.markdown.code_node.call(null,G__115265,G__115266));
})()," ",(function (){var G__115267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(define numer car)"], null);
var G__115268 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115267,G__115268) : tailrecursion.hoplon.markdown.code_node.call(null,G__115267,G__115268));
})()," ",(function (){var G__115269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(define denom cdr)"], null);
var G__115270 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115269,G__115270) : tailrecursion.hoplon.markdown.code_node.call(null,G__115269,G__115270));
})()," The first definition associates the name ",(function (){var G__115271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115272 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115271,G__115272) : tailrecursion.hoplon.markdown.code_node.call(null,G__115271,G__115272));
})()," with the value of the expression ",(function (){var G__115273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115274 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115273,G__115274) : tailrecursion.hoplon.markdown.code_node.call(null,G__115273,G__115274));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__115275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115276 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115275,G__115276) : tailrecursion.hoplon.markdown.code_node.call(null,G__115275,G__115276));
})()," and ",(function (){var G__115277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115278 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115277,G__115278) : tailrecursion.hoplon.markdown.code_node.call(null,G__115277,G__115278));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__115279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115280 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115279,G__115280) : tailrecursion.hoplon.markdown.code_node.call(null,G__115279,G__115280));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__115281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115282 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115281,G__115282) : tailrecursion.hoplon.markdown.code_node.call(null,G__115281,G__115282));
})(),", ",(function (){var G__115283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115284 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115283,G__115284) : tailrecursion.hoplon.markdown.code_node.call(null,G__115283,G__115284));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__115285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115286 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115285,G__115286) : tailrecursion.hoplon.markdown.code_node.call(null,G__115285,G__115286));
})(),", so there is only one procedure called, not two, when ",(function (){var G__115287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115288 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115287,G__115288) : tailrecursion.hoplon.markdown.code_node.call(null,G__115287,G__115288));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__115289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115290 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115289,G__115290) : tailrecursion.hoplon.markdown.code_node.call(null,G__115289,G__115290));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__115291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__115292 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115291,G__115292) : tailrecursion.hoplon.markdown.code_node.call(null,G__115291,G__115292));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__115263,G__115264) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__115263,G__115264));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115255,G__115256) : tailrecursion.hoplon.markdown.para_node.call(null,G__115255,G__115256));
})(),(function (){var G__115293 = (function (){var G__115294 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115295 = (function (){var G__115296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115297 = "(";
var G__115298 = (function (){var G__115331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115332 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115331,G__115332) : tailrecursion.hoplon.span.call(null,G__115331,G__115332));
})();
var G__115299 = "(";
var G__115300 = (function (){var G__115333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115334 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115333,G__115334) : tailrecursion.hoplon.span.call(null,G__115333,G__115334));
})();
var G__115301 = " ";
var G__115302 = (function (){var G__115335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115336 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115335,G__115336) : tailrecursion.hoplon.span.call(null,G__115335,G__115336));
})();
var G__115303 = " ";
var G__115304 = (function (){var G__115337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115338 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115337,G__115338) : tailrecursion.hoplon.span.call(null,G__115337,G__115338));
})();
var G__115305 = ") (";
var G__115306 = (function (){var G__115339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115340 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115339,G__115340) : tailrecursion.hoplon.span.call(null,G__115339,G__115340));
})();
var G__115307 = (function (){var G__115341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115342 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115341,G__115342) : tailrecursion.hoplon.span.call(null,G__115341,G__115342));
})();
var G__115308 = " ";
var G__115309 = (function (){var G__115343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115344 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115343,G__115344) : tailrecursion.hoplon.span.call(null,G__115343,G__115344));
})();
var G__115310 = "))\n(";
var G__115311 = (function (){var G__115345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115346 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115345,G__115346) : tailrecursion.hoplon.span.call(null,G__115345,G__115346));
})();
var G__115312 = "(";
var G__115313 = (function (){var G__115347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115348 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115347,G__115348) : tailrecursion.hoplon.span.call(null,G__115347,G__115348));
})();
var G__115314 = " ";
var G__115315 = (function (){var G__115349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115350 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115349,G__115350) : tailrecursion.hoplon.span.call(null,G__115349,G__115350));
})();
var G__115316 = ") (";
var G__115317 = (function (){var G__115351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115352 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115351,G__115352) : tailrecursion.hoplon.span.call(null,G__115351,G__115352));
})();
var G__115318 = " ";
var G__115319 = (function (){var G__115353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115354 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115353,G__115354) : tailrecursion.hoplon.span.call(null,G__115353,G__115354));
})();
var G__115320 = "))\n(";
var G__115321 = (function (){var G__115355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115356 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115355,G__115356) : tailrecursion.hoplon.span.call(null,G__115355,G__115356));
})();
var G__115322 = "(";
var G__115323 = (function (){var G__115357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115358 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115357,G__115358) : tailrecursion.hoplon.span.call(null,G__115357,G__115358));
})();
var G__115324 = " ";
var G__115325 = (function (){var G__115359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115360 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115359,G__115360) : tailrecursion.hoplon.span.call(null,G__115359,G__115360));
})();
var G__115326 = ") (";
var G__115327 = (function (){var G__115361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115362 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115361,G__115362) : tailrecursion.hoplon.span.call(null,G__115361,G__115362));
})();
var G__115328 = " ";
var G__115329 = (function (){var G__115363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115364 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115363,G__115364) : tailrecursion.hoplon.span.call(null,G__115363,G__115364));
})();
var G__115330 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__115296,G__115297,G__115298,G__115299,G__115300,G__115301,G__115302,G__115303,G__115304,G__115305,G__115306,G__115307,G__115308,G__115309,G__115310,G__115311,G__115312,G__115313,G__115314,G__115315,G__115316,G__115317,G__115318,G__115319,G__115320,G__115321,G__115322,G__115323,G__115324,G__115325,G__115326,G__115327,G__115328,G__115329,G__115330) : tailrecursion.hoplon.pre.call(null,G__115296,G__115297,G__115298,G__115299,G__115300,G__115301,G__115302,G__115303,G__115304,G__115305,G__115306,G__115307,G__115308,G__115309,G__115310,G__115311,G__115312,G__115313,G__115314,G__115315,G__115316,G__115317,G__115318,G__115319,G__115320,G__115321,G__115322,G__115323,G__115324,G__115325,G__115326,G__115327,G__115328,G__115329,G__115330));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115294,G__115295) : tailrecursion.hoplon.div.call(null,G__115294,G__115295));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115293) : tailrecursion.hoplon.div.call(null,G__115293));
})(),(function (){var G__115365 = cljs.core.PersistentArrayMap.EMPTY;
var G__115366 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__115367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__115368 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__115369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"print"], null);
var G__115370 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115369,G__115370) : tailrecursion.hoplon.markdown.code_node.call(null,G__115369,G__115370));
})()," and ",(function (){var G__115371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"println"], null);
var G__115372 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115371,G__115372) : tailrecursion.hoplon.markdown.code_node.call(null,G__115371,G__115372));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__115367,G__115368) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__115367,G__115368));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115365,G__115366) : tailrecursion.hoplon.markdown.para_node.call(null,G__115365,G__115366));
})(),(function (){var G__115373 = (function (){var G__115374 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115375 = (function (){var G__115376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115377 = "(";
var G__115378 = (function (){var G__115395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115396 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115395,G__115396) : tailrecursion.hoplon.span.call(null,G__115395,G__115396));
})();
var G__115379 = (function (){var G__115397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115398 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115397,G__115398) : tailrecursion.hoplon.span.call(null,G__115397,G__115398));
})();
var G__115380 = " [";
var G__115381 = (function (){var G__115399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115400 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115399,G__115400) : tailrecursion.hoplon.span.call(null,G__115399,G__115400));
})();
var G__115382 = "]\n  (";
var G__115383 = (function (){var G__115401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115402 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115401,G__115402) : tailrecursion.hoplon.span.call(null,G__115401,G__115402));
})();
var G__115384 = "(";
var G__115385 = (function (){var G__115403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115404 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115403,G__115404) : tailrecursion.hoplon.span.call(null,G__115403,G__115404));
})();
var G__115386 = " ";
var G__115387 = (function (){var G__115405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115406 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115405,G__115406) : tailrecursion.hoplon.span.call(null,G__115405,G__115406));
})();
var G__115388 = ") ";
var G__115389 = (function (){var G__115407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__115408 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115407,G__115408) : tailrecursion.hoplon.span.call(null,G__115407,G__115408));
})();
var G__115390 = " (";
var G__115391 = (function (){var G__115409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115410 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115409,G__115410) : tailrecursion.hoplon.span.call(null,G__115409,G__115410));
})();
var G__115392 = " ";
var G__115393 = (function (){var G__115411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115412 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115411,G__115412) : tailrecursion.hoplon.span.call(null,G__115411,G__115412));
})();
var G__115394 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__115376,G__115377,G__115378,G__115379,G__115380,G__115381,G__115382,G__115383,G__115384,G__115385,G__115386,G__115387,G__115388,G__115389,G__115390,G__115391,G__115392,G__115393,G__115394) : tailrecursion.hoplon.pre.call(null,G__115376,G__115377,G__115378,G__115379,G__115380,G__115381,G__115382,G__115383,G__115384,G__115385,G__115386,G__115387,G__115388,G__115389,G__115390,G__115391,G__115392,G__115393,G__115394));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115374,G__115375) : tailrecursion.hoplon.div.call(null,G__115374,G__115375));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115373) : tailrecursion.hoplon.div.call(null,G__115373));
})(),(function (){var G__115413 = cljs.core.PersistentArrayMap.EMPTY;
var G__115414 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__115415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"println"], null);
var G__115416 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115415,G__115416) : tailrecursion.hoplon.markdown.code_node.call(null,G__115415,G__115416));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__115417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__115418 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115417,G__115418) : tailrecursion.hoplon.markdown.code_node.call(null,G__115417,G__115418));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115413,G__115414) : tailrecursion.hoplon.markdown.para_node.call(null,G__115413,G__115414));
})(),(function (){var G__115419 = cljs.core.PersistentArrayMap.EMPTY;
var G__115420 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115419,G__115420) : tailrecursion.hoplon.markdown.para_node.call(null,G__115419,G__115420));
})(),(function (){var G__115421 = (function (){var G__115422 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115423 = (function (){var G__115424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115425 = "(";
var G__115426 = (function (){var G__115484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115485 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115484,G__115485) : tailrecursion.hoplon.span.call(null,G__115484,G__115485));
})();
var G__115427 = (function (){var G__115486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115487 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115486,G__115487) : tailrecursion.hoplon.span.call(null,G__115486,G__115487));
})();
var G__115428 = " (";
var G__115429 = (function (){var G__115488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115489 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115488,G__115489) : tailrecursion.hoplon.span.call(null,G__115488,G__115489));
})();
var G__115430 = " ";
var G__115431 = (function (){var G__115490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115491 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115490,G__115491) : tailrecursion.hoplon.span.call(null,G__115490,G__115491));
})();
var G__115432 = " ";
var G__115433 = (function (){var G__115492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115493 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115492,G__115493) : tailrecursion.hoplon.span.call(null,G__115492,G__115493));
})();
var G__115434 = "))\n(";
var G__115435 = (function (){var G__115494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115495 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115494,G__115495) : tailrecursion.hoplon.span.call(null,G__115494,G__115495));
})();
var G__115436 = " ";
var G__115437 = (function (){var G__115496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115497 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115496,G__115497) : tailrecursion.hoplon.span.call(null,G__115496,G__115497));
})();
var G__115438 = ")\n";
var G__115439 = (function (){var G__115498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115499 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115498,G__115499) : tailrecursion.hoplon.span.call(null,G__115498,G__115499));
})();
var G__115440 = (function (){var G__115500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115501 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115500,G__115501) : tailrecursion.hoplon.span.call(null,G__115500,G__115501));
})();
var G__115441 = "\n\n(";
var G__115442 = (function (){var G__115502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115503 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115502,G__115503) : tailrecursion.hoplon.span.call(null,G__115502,G__115503));
})();
var G__115443 = (function (){var G__115504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115505 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115504,G__115505) : tailrecursion.hoplon.span.call(null,G__115504,G__115505));
})();
var G__115444 = " (";
var G__115445 = (function (){var G__115506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115507 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115506,G__115507) : tailrecursion.hoplon.span.call(null,G__115506,G__115507));
})();
var G__115446 = " ";
var G__115447 = (function (){var G__115508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115509 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115508,G__115509) : tailrecursion.hoplon.span.call(null,G__115508,G__115509));
})();
var G__115448 = " ";
var G__115449 = (function (){var G__115510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115511 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115510,G__115511) : tailrecursion.hoplon.span.call(null,G__115510,G__115511));
})();
var G__115450 = "))\n(";
var G__115451 = (function (){var G__115512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115513 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115512,G__115513) : tailrecursion.hoplon.span.call(null,G__115512,G__115513));
})();
var G__115452 = " (";
var G__115453 = (function (){var G__115514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115515 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115514,G__115515) : tailrecursion.hoplon.span.call(null,G__115514,G__115515));
})();
var G__115454 = " ";
var G__115455 = (function (){var G__115516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115517 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115516,G__115517) : tailrecursion.hoplon.span.call(null,G__115516,G__115517));
})();
var G__115456 = " ";
var G__115457 = (function (){var G__115518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115519 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115518,G__115519) : tailrecursion.hoplon.span.call(null,G__115518,G__115519));
})();
var G__115458 = "))\n";
var G__115459 = (function (){var G__115520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115521 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115520,G__115521) : tailrecursion.hoplon.span.call(null,G__115520,G__115521));
})();
var G__115460 = (function (){var G__115522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115523 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115522,G__115523) : tailrecursion.hoplon.span.call(null,G__115522,G__115523));
})();
var G__115461 = "\n\n(";
var G__115462 = (function (){var G__115524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115525 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115524,G__115525) : tailrecursion.hoplon.span.call(null,G__115524,G__115525));
})();
var G__115463 = " (";
var G__115464 = (function (){var G__115526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115527 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115526,G__115527) : tailrecursion.hoplon.span.call(null,G__115526,G__115527));
})();
var G__115465 = " ";
var G__115466 = (function (){var G__115528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115529 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115528,G__115529) : tailrecursion.hoplon.span.call(null,G__115528,G__115529));
})();
var G__115467 = " ";
var G__115468 = (function (){var G__115530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115531 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115530,G__115531) : tailrecursion.hoplon.span.call(null,G__115530,G__115531));
})();
var G__115469 = "))\n";
var G__115470 = (function (){var G__115532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115533 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115532,G__115533) : tailrecursion.hoplon.span.call(null,G__115532,G__115533));
})();
var G__115471 = (function (){var G__115534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115535 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115534,G__115535) : tailrecursion.hoplon.span.call(null,G__115534,G__115535));
})();
var G__115472 = "\n\n(";
var G__115473 = (function (){var G__115536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115537 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115536,G__115537) : tailrecursion.hoplon.span.call(null,G__115536,G__115537));
})();
var G__115474 = " (";
var G__115475 = (function (){var G__115538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115539 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115538,G__115539) : tailrecursion.hoplon.span.call(null,G__115538,G__115539));
})();
var G__115476 = " ";
var G__115477 = (function (){var G__115540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115541 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115540,G__115541) : tailrecursion.hoplon.span.call(null,G__115540,G__115541));
})();
var G__115478 = " ";
var G__115479 = (function (){var G__115542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115543 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115542,G__115543) : tailrecursion.hoplon.span.call(null,G__115542,G__115543));
})();
var G__115480 = "))\n";
var G__115481 = (function (){var G__115544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115545 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115544,G__115545) : tailrecursion.hoplon.span.call(null,G__115544,G__115545));
})();
var G__115482 = (function (){var G__115546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115547 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115546,G__115547) : tailrecursion.hoplon.span.call(null,G__115546,G__115547));
})();
var G__115483 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__115424,G__115425,G__115426,G__115427,G__115428,G__115429,G__115430,G__115431,G__115432,G__115433,G__115434,G__115435,G__115436,G__115437,G__115438,G__115439,G__115440,G__115441,G__115442,G__115443,G__115444,G__115445,G__115446,G__115447,G__115448,G__115449,G__115450,G__115451,G__115452,G__115453,G__115454,G__115455,G__115456,G__115457,G__115458,G__115459,G__115460,G__115461,G__115462,G__115463,G__115464,G__115465,G__115466,G__115467,G__115468,G__115469,G__115470,G__115471,G__115472,G__115473,G__115474,G__115475,G__115476,G__115477,G__115478,G__115479,G__115480,G__115481,G__115482,G__115483) : tailrecursion.hoplon.pre.call(null,G__115424,G__115425,G__115426,G__115427,G__115428,G__115429,G__115430,G__115431,G__115432,G__115433,G__115434,G__115435,G__115436,G__115437,G__115438,G__115439,G__115440,G__115441,G__115442,G__115443,G__115444,G__115445,G__115446,G__115447,G__115448,G__115449,G__115450,G__115451,G__115452,G__115453,G__115454,G__115455,G__115456,G__115457,G__115458,G__115459,G__115460,G__115461,G__115462,G__115463,G__115464,G__115465,G__115466,G__115467,G__115468,G__115469,G__115470,G__115471,G__115472,G__115473,G__115474,G__115475,G__115476,G__115477,G__115478,G__115479,G__115480,G__115481,G__115482,G__115483));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115422,G__115423) : tailrecursion.hoplon.div.call(null,G__115422,G__115423));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115421) : tailrecursion.hoplon.div.call(null,G__115421));
})(),(function (){var G__115548 = cljs.core.PersistentArrayMap.EMPTY;
var G__115549 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__115550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115551 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115550,G__115551) : tailrecursion.hoplon.markdown.code_node.call(null,G__115550,G__115551));
})(),". If we have a ",(function (){var G__115552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__115553 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115552,G__115553) : tailrecursion.hoplon.markdown.code_node.call(null,G__115552,G__115553));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__115554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__115555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115554,G__115555) : tailrecursion.hoplon.markdown.code_node.call(null,G__115554,G__115555));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115548,G__115549) : tailrecursion.hoplon.markdown.para_node.call(null,G__115548,G__115549));
})(),(function (){var G__115556 = (function (){var G__115557 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115558 = (function (){var G__115559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115560 = "(";
var G__115561 = (function (){var G__115590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115591 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115590,G__115591) : tailrecursion.hoplon.span.call(null,G__115590,G__115591));
})();
var G__115562 = (function (){var G__115592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115593 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115592,G__115593) : tailrecursion.hoplon.span.call(null,G__115592,G__115593));
})();
var G__115563 = " [";
var G__115564 = (function (){var G__115594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115595 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115594,G__115595) : tailrecursion.hoplon.span.call(null,G__115594,G__115595));
})();
var G__115565 = " ";
var G__115566 = (function (){var G__115596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115597 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115596,G__115597) : tailrecursion.hoplon.span.call(null,G__115596,G__115597));
})();
var G__115567 = "]\n  (";
var G__115568 = (function (){var G__115598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115599 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115598,G__115599) : tailrecursion.hoplon.span.call(null,G__115598,G__115599));
})();
var G__115569 = "[";
var G__115570 = (function (){var G__115600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115601 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115600,G__115601) : tailrecursion.hoplon.span.call(null,G__115600,G__115601));
})();
var G__115571 = " (";
var G__115572 = (function (){var G__115602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115603 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115602,G__115603) : tailrecursion.hoplon.span.call(null,G__115602,G__115603));
})();
var G__115573 = " ";
var G__115574 = (function (){var G__115604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115605 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115604,G__115605) : tailrecursion.hoplon.span.call(null,G__115604,G__115605));
})();
var G__115575 = " ";
var G__115576 = (function (){var G__115606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115607 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115606,G__115607) : tailrecursion.hoplon.span.call(null,G__115606,G__115607));
})();
var G__115577 = ")]\n    (";
var G__115578 = (function (){var G__115608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115609 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115608,G__115609) : tailrecursion.hoplon.span.call(null,G__115608,G__115609));
})();
var G__115579 = "(";
var G__115580 = (function (){var G__115610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115611 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115610,G__115611) : tailrecursion.hoplon.span.call(null,G__115610,G__115611));
})();
var G__115581 = (function (){var G__115612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115613 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115612,G__115613) : tailrecursion.hoplon.span.call(null,G__115612,G__115613));
})();
var G__115582 = " ";
var G__115583 = (function (){var G__115614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115615 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115614,G__115615) : tailrecursion.hoplon.span.call(null,G__115614,G__115615));
})();
var G__115584 = ") (";
var G__115585 = (function (){var G__115616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115617 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115616,G__115617) : tailrecursion.hoplon.span.call(null,G__115616,G__115617));
})();
var G__115586 = (function (){var G__115618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115619 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115618,G__115619) : tailrecursion.hoplon.span.call(null,G__115618,G__115619));
})();
var G__115587 = " ";
var G__115588 = (function (){var G__115620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115621 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115620,G__115621) : tailrecursion.hoplon.span.call(null,G__115620,G__115621));
})();
var G__115589 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__115559,G__115560,G__115561,G__115562,G__115563,G__115564,G__115565,G__115566,G__115567,G__115568,G__115569,G__115570,G__115571,G__115572,G__115573,G__115574,G__115575,G__115576,G__115577,G__115578,G__115579,G__115580,G__115581,G__115582,G__115583,G__115584,G__115585,G__115586,G__115587,G__115588,G__115589) : tailrecursion.hoplon.pre.call(null,G__115559,G__115560,G__115561,G__115562,G__115563,G__115564,G__115565,G__115566,G__115567,G__115568,G__115569,G__115570,G__115571,G__115572,G__115573,G__115574,G__115575,G__115576,G__115577,G__115578,G__115579,G__115580,G__115581,G__115582,G__115583,G__115584,G__115585,G__115586,G__115587,G__115588,G__115589));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115557,G__115558) : tailrecursion.hoplon.div.call(null,G__115557,G__115558));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115556) : tailrecursion.hoplon.div.call(null,G__115556));
})(),(function (){var G__115622 = cljs.core.PersistentArrayMap.EMPTY;
var G__115623 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115622,G__115623) : tailrecursion.hoplon.markdown.para_node.call(null,G__115622,G__115623));
})(),(function (){var G__115624 = (function (){var G__115625 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115626 = (function (){var G__115627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115628 = "(";
var G__115629 = (function (){var G__115640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115641 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115640,G__115641) : tailrecursion.hoplon.span.call(null,G__115640,G__115641));
})();
var G__115630 = " (";
var G__115631 = (function (){var G__115642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115643 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115642,G__115643) : tailrecursion.hoplon.span.call(null,G__115642,G__115643));
})();
var G__115632 = " ";
var G__115633 = (function (){var G__115644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115645 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115644,G__115645) : tailrecursion.hoplon.span.call(null,G__115644,G__115645));
})();
var G__115634 = " ";
var G__115635 = (function (){var G__115646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115647 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115646,G__115647) : tailrecursion.hoplon.span.call(null,G__115646,G__115647));
})();
var G__115636 = "))\n";
var G__115637 = (function (){var G__115648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115649 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115648,G__115649) : tailrecursion.hoplon.span.call(null,G__115648,G__115649));
})();
var G__115638 = (function (){var G__115650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115651 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115650,G__115651) : tailrecursion.hoplon.span.call(null,G__115650,G__115651));
})();
var G__115639 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__115627,G__115628,G__115629,G__115630,G__115631,G__115632,G__115633,G__115634,G__115635,G__115636,G__115637,G__115638,G__115639) : tailrecursion.hoplon.pre.call(null,G__115627,G__115628,G__115629,G__115630,G__115631,G__115632,G__115633,G__115634,G__115635,G__115636,G__115637,G__115638,G__115639));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115625,G__115626) : tailrecursion.hoplon.div.call(null,G__115625,G__115626));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115624) : tailrecursion.hoplon.div.call(null,G__115624));
})(),(function (){var G__115652 = cljs.core.PersistentArrayMap.EMPTY;
var G__115653 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__115654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115655 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115654,G__115655) : tailrecursion.hoplon.markdown.code_node.call(null,G__115654,G__115655));
})()," without changing any of the procedures (such as ",(function (){var G__115656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__115657 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115656,G__115657) : tailrecursion.hoplon.markdown.code_node.call(null,G__115656,G__115657));
})()," and ",(function (){var G__115658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mul-rat"], null);
var G__115659 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115658,G__115659) : tailrecursion.hoplon.markdown.code_node.call(null,G__115658,G__115659));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115652,G__115653) : tailrecursion.hoplon.markdown.para_node.call(null,G__115652,G__115653));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115254;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115253;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115252;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115251;
}})()], 0));
var G__114468 = "";
var G__114469 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_115660 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115661 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_115662 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115663 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__115664 = cljs.core.PersistentArrayMap.EMPTY;
var G__115665 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__115666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115666,G__115667) : tailrecursion.hoplon.markdown.code_node.call(null,G__115666,G__115667));
})()," that handles both positive and negative arguments. ",(function (){var G__115668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115668,G__115669) : tailrecursion.hoplon.markdown.code_node.call(null,G__115668,G__115669));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115664,G__115665) : tailrecursion.hoplon.markdown.para_node.call(null,G__115664,G__115665));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115663;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115662;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115661;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115660;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_115670 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115671 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_115672 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115673 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__115674 = (function (){var G__115675 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115676 = (function (){var G__115677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115678 = "(";
var G__115679 = (function (){var G__115747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115748 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115747,G__115748) : tailrecursion.hoplon.span.call(null,G__115747,G__115748));
})();
var G__115680 = (function (){var G__115749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115750 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115749,G__115750) : tailrecursion.hoplon.span.call(null,G__115749,G__115750));
})();
var G__115681 = " [";
var G__115682 = (function (){var G__115751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115752 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115751,G__115752) : tailrecursion.hoplon.span.call(null,G__115751,G__115752));
})();
var G__115683 = " ";
var G__115684 = (function (){var G__115753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115754 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115753,G__115754) : tailrecursion.hoplon.span.call(null,G__115753,G__115754));
})();
var G__115685 = "]\n  (";
var G__115686 = (function (){var G__115755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115756 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115755,G__115756) : tailrecursion.hoplon.span.call(null,G__115755,G__115756));
})();
var G__115687 = "[";
var G__115688 = (function (){var G__115757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115758 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115757,G__115758) : tailrecursion.hoplon.span.call(null,G__115757,G__115758));
})();
var G__115689 = " ";
var G__115690 = (function (){var G__115759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115760 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115759,G__115760) : tailrecursion.hoplon.span.call(null,G__115759,G__115760));
})();
var G__115691 = "(";
var G__115692 = (function (){var G__115761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115762 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115761,G__115762) : tailrecursion.hoplon.span.call(null,G__115761,G__115762));
})();
var G__115693 = "[";
var G__115694 = (function (){var G__115763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115764 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115763,G__115764) : tailrecursion.hoplon.span.call(null,G__115763,G__115764));
})();
var G__115695 = " (";
var G__115696 = (function (){var G__115765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115766 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115765,G__115766) : tailrecursion.hoplon.span.call(null,G__115765,G__115766));
})();
var G__115697 = " ";
var G__115698 = (function (){var G__115767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115768 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115767,G__115768) : tailrecursion.hoplon.span.call(null,G__115767,G__115768));
})();
var G__115699 = " ";
var G__115700 = (function (){var G__115769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115770 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115769,G__115770) : tailrecursion.hoplon.span.call(null,G__115769,G__115770));
})();
var G__115701 = ")]\n                (";
var G__115702 = (function (){var G__115771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115772 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115771,G__115772) : tailrecursion.hoplon.span.call(null,G__115771,G__115772));
})();
var G__115703 = "(";
var G__115704 = (function (){var G__115773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115774 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115773,G__115774) : tailrecursion.hoplon.span.call(null,G__115773,G__115774));
})();
var G__115705 = (function (){var G__115775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115776 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115775,G__115776) : tailrecursion.hoplon.span.call(null,G__115775,G__115776));
})();
var G__115706 = " ";
var G__115707 = (function (){var G__115777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115778 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115777,G__115778) : tailrecursion.hoplon.span.call(null,G__115777,G__115778));
})();
var G__115708 = ") (";
var G__115709 = (function (){var G__115779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115780 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115779,G__115780) : tailrecursion.hoplon.span.call(null,G__115779,G__115780));
})();
var G__115710 = (function (){var G__115781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115782 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115781,G__115782) : tailrecursion.hoplon.span.call(null,G__115781,G__115782));
})();
var G__115711 = " ";
var G__115712 = (function (){var G__115783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115784 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115783,G__115784) : tailrecursion.hoplon.span.call(null,G__115783,G__115784));
})();
var G__115713 = ")))]\n    (";
var G__115714 = (function (){var G__115785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115786 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115785,G__115786) : tailrecursion.hoplon.span.call(null,G__115785,G__115786));
})();
var G__115715 = "(";
var G__115716 = (function (){var G__115787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115788 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115787,G__115788) : tailrecursion.hoplon.span.call(null,G__115787,G__115788));
})();
var G__115717 = "(";
var G__115718 = (function (){var G__115789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115790 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115789,G__115790) : tailrecursion.hoplon.span.call(null,G__115789,G__115790));
})();
var G__115719 = (function (){var G__115791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115792 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115791,G__115792) : tailrecursion.hoplon.span.call(null,G__115791,G__115792));
})();
var G__115720 = " ";
var G__115721 = (function (){var G__115793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115794 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115793,G__115794) : tailrecursion.hoplon.span.call(null,G__115793,G__115794));
})();
var G__115722 = ") ";
var G__115723 = (function (){var G__115795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__115796 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115795,G__115796) : tailrecursion.hoplon.span.call(null,G__115795,G__115796));
})();
var G__115724 = ")\n        (";
var G__115725 = (function (){var G__115797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115798 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115797,G__115798) : tailrecursion.hoplon.span.call(null,G__115797,G__115798));
})();
var G__115726 = " (";
var G__115727 = (function (){var G__115799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115800 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115799,G__115800) : tailrecursion.hoplon.span.call(null,G__115799,G__115800));
})();
var G__115728 = " ";
var G__115729 = (function (){var G__115801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115802 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115801,G__115802) : tailrecursion.hoplon.span.call(null,G__115801,G__115802));
})();
var G__115730 = ") (";
var G__115731 = (function (){var G__115803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115804 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115803,G__115804) : tailrecursion.hoplon.span.call(null,G__115803,G__115804));
})();
var G__115732 = " ";
var G__115733 = (function (){var G__115805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115806 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115805,G__115806) : tailrecursion.hoplon.span.call(null,G__115805,G__115806));
})();
var G__115734 = "))\n        (";
var G__115735 = (function (){var G__115807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115808 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115807,G__115808) : tailrecursion.hoplon.span.call(null,G__115807,G__115808));
})();
var G__115736 = " (";
var G__115737 = (function (){var G__115809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115810 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115809,G__115810) : tailrecursion.hoplon.span.call(null,G__115809,G__115810));
})();
var G__115738 = "(";
var G__115739 = (function (){var G__115811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115812 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115811,G__115812) : tailrecursion.hoplon.span.call(null,G__115811,G__115812));
})();
var G__115740 = " ";
var G__115741 = (function (){var G__115813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115814 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115813,G__115814) : tailrecursion.hoplon.span.call(null,G__115813,G__115814));
})();
var G__115742 = ")) (";
var G__115743 = (function (){var G__115815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115816 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115815,G__115816) : tailrecursion.hoplon.span.call(null,G__115815,G__115816));
})();
var G__115744 = " ";
var G__115745 = (function (){var G__115817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115818 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115817,G__115818) : tailrecursion.hoplon.span.call(null,G__115817,G__115818));
})();
var G__115746 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__115677,G__115678,G__115679,G__115680,G__115681,G__115682,G__115683,G__115684,G__115685,G__115686,G__115687,G__115688,G__115689,G__115690,G__115691,G__115692,G__115693,G__115694,G__115695,G__115696,G__115697,G__115698,G__115699,G__115700,G__115701,G__115702,G__115703,G__115704,G__115705,G__115706,G__115707,G__115708,G__115709,G__115710,G__115711,G__115712,G__115713,G__115714,G__115715,G__115716,G__115717,G__115718,G__115719,G__115720,G__115721,G__115722,G__115723,G__115724,G__115725,G__115726,G__115727,G__115728,G__115729,G__115730,G__115731,G__115732,G__115733,G__115734,G__115735,G__115736,G__115737,G__115738,G__115739,G__115740,G__115741,G__115742,G__115743,G__115744,G__115745,G__115746) : tailrecursion.hoplon.pre.call(null,G__115677,G__115678,G__115679,G__115680,G__115681,G__115682,G__115683,G__115684,G__115685,G__115686,G__115687,G__115688,G__115689,G__115690,G__115691,G__115692,G__115693,G__115694,G__115695,G__115696,G__115697,G__115698,G__115699,G__115700,G__115701,G__115702,G__115703,G__115704,G__115705,G__115706,G__115707,G__115708,G__115709,G__115710,G__115711,G__115712,G__115713,G__115714,G__115715,G__115716,G__115717,G__115718,G__115719,G__115720,G__115721,G__115722,G__115723,G__115724,G__115725,G__115726,G__115727,G__115728,G__115729,G__115730,G__115731,G__115732,G__115733,G__115734,G__115735,G__115736,G__115737,G__115738,G__115739,G__115740,G__115741,G__115742,G__115743,G__115744,G__115745,G__115746));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115675,G__115676) : tailrecursion.hoplon.div.call(null,G__115675,G__115676));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115674) : tailrecursion.hoplon.div.call(null,G__115674));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115673;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115672;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115671;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115670;
}})()], 0))], 0))], 0));
var G__114470 = "";
var G__114471 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_115819 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115820 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_115821 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115822 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__115823 = cljs.core.PersistentArrayMap.EMPTY;
var G__115824 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__115825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__115826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115825,G__115826) : tailrecursion.hoplon.markdown.code_node.call(null,G__115825,G__115826));
})()," and selectors ",(function (){var G__115827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__115828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115827,G__115828) : tailrecursion.hoplon.markdown.code_node.call(null,G__115827,G__115828));
})()," and ",(function (){var G__115829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__115830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115829,G__115830) : tailrecursion.hoplon.markdown.code_node.call(null,G__115829,G__115830));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115823,G__115824) : tailrecursion.hoplon.markdown.para_node.call(null,G__115823,G__115824));
})(),(function (){var G__115831 = cljs.core.PersistentArrayMap.EMPTY;
var G__115832 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__115833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__115834 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__115833,G__115834) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__115833,G__115834));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__115835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__115836 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__115835,G__115836) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__115835,G__115836));
})()," by the rational-number package: ",(function (){var G__115837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__115838 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115837,G__115838) : tailrecursion.hoplon.markdown.code_node.call(null,G__115837,G__115838));
})(),", ",(function (){var G__115839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-rat"], null);
var G__115840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115839,G__115840) : tailrecursion.hoplon.markdown.code_node.call(null,G__115839,G__115840));
})(),", ",(function (){var G__115841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mul-rat"], null);
var G__115842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115841,G__115842) : tailrecursion.hoplon.markdown.code_node.call(null,G__115841,G__115842));
})(),", ",(function (){var G__115843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"div-rat"], null);
var G__115844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115843,G__115844) : tailrecursion.hoplon.markdown.code_node.call(null,G__115843,G__115844));
})(),", ",(function (){var G__115845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__115846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115845,G__115846) : tailrecursion.hoplon.markdown.code_node.call(null,G__115845,G__115846));
})(),", and ",(function (){var G__115847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__115848 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115847,G__115848) : tailrecursion.hoplon.markdown.code_node.call(null,G__115847,G__115848));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__115849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__115850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115849,G__115850) : tailrecursion.hoplon.markdown.code_node.call(null,G__115849,G__115850));
})(),", ",(function (){var G__115851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__115852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115851,G__115852) : tailrecursion.hoplon.markdown.code_node.call(null,G__115851,G__115852));
})(),", and ",(function (){var G__115853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__115854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__115853,G__115854) : tailrecursion.hoplon.markdown.code_node.call(null,G__115853,G__115854));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115831,G__115832) : tailrecursion.hoplon.markdown.para_node.call(null,G__115831,G__115832));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115822;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115821;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115820;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115819;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_115855 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115856 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_115857 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_115858 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__115859 = cljs.core.PersistentArrayMap.EMPTY;
var G__115860 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115859,G__115860) : tailrecursion.hoplon.markdown.para_node.call(null,G__115859,G__115860));
})(),(function (){var G__115861 = cljs.core.PersistentArrayMap.EMPTY;
var G__115862 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115861,G__115862) : tailrecursion.hoplon.markdown.para_node.call(null,G__115861,G__115862));
})(),(function (){var G__115863 = (function (){var G__115864 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__115865 = (function (){var G__115866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__115867 = "(";
var G__115868 = (function (){var G__115928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115929 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115928,G__115929) : tailrecursion.hoplon.span.call(null,G__115928,G__115929));
})();
var G__115869 = (function (){var G__115930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115931 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115930,G__115931) : tailrecursion.hoplon.span.call(null,G__115930,G__115931));
})();
var G__115870 = " [";
var G__115871 = (function (){var G__115932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115933 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115932,G__115933) : tailrecursion.hoplon.span.call(null,G__115932,G__115933));
})();
var G__115872 = " ";
var G__115873 = (function (){var G__115934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115935 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115934,G__115935) : tailrecursion.hoplon.span.call(null,G__115934,G__115935));
})();
var G__115874 = "]\n  (";
var G__115875 = (function (){var G__115936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115937 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115936,G__115937) : tailrecursion.hoplon.span.call(null,G__115936,G__115937));
})();
var G__115876 = (function (){var G__115938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115939 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115938,G__115939) : tailrecursion.hoplon.span.call(null,G__115938,G__115939));
})();
var G__115877 = " ";
var G__115878 = (function (){var G__115940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115941 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115940,G__115941) : tailrecursion.hoplon.span.call(null,G__115940,G__115941));
})();
var G__115879 = "))\n(";
var G__115880 = (function (){var G__115942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115943 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115942,G__115943) : tailrecursion.hoplon.span.call(null,G__115942,G__115943));
})();
var G__115881 = (function (){var G__115944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115945 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115944,G__115945) : tailrecursion.hoplon.span.call(null,G__115944,G__115945));
})();
var G__115882 = " [";
var G__115883 = (function (){var G__115946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115947 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115946,G__115947) : tailrecursion.hoplon.span.call(null,G__115946,G__115947));
})();
var G__115884 = "]\n  (";
var G__115885 = (function (){var G__115948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115949 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115948,G__115949) : tailrecursion.hoplon.span.call(null,G__115948,G__115949));
})();
var G__115886 = "[";
var G__115887 = (function (){var G__115950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115951 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115950,G__115951) : tailrecursion.hoplon.span.call(null,G__115950,G__115951));
})();
var G__115888 = " (";
var G__115889 = (function (){var G__115952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115953 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115952,G__115953) : tailrecursion.hoplon.span.call(null,G__115952,G__115953));
})();
var G__115890 = " (";
var G__115891 = (function (){var G__115954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115955 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115954,G__115955) : tailrecursion.hoplon.span.call(null,G__115954,G__115955));
})();
var G__115892 = (function (){var G__115956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115957 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115956,G__115957) : tailrecursion.hoplon.span.call(null,G__115956,G__115957));
})();
var G__115893 = ") (";
var G__115894 = (function (){var G__115958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115959 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115958,G__115959) : tailrecursion.hoplon.span.call(null,G__115958,G__115959));
})();
var G__115895 = (function (){var G__115960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115961 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115960,G__115961) : tailrecursion.hoplon.span.call(null,G__115960,G__115961));
})();
var G__115896 = "))]\n    (";
var G__115897 = (function (){var G__115962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115963 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115962,G__115963) : tailrecursion.hoplon.span.call(null,G__115962,G__115963));
})();
var G__115898 = "(";
var G__115899 = (function (){var G__115964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115965 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115964,G__115965) : tailrecursion.hoplon.span.call(null,G__115964,G__115965));
})();
var G__115900 = (function (){var G__115966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115967 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115966,G__115967) : tailrecursion.hoplon.span.call(null,G__115966,G__115967));
})();
var G__115901 = ") ";
var G__115902 = (function (){var G__115968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115969 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115968,G__115969) : tailrecursion.hoplon.span.call(null,G__115968,G__115969));
})();
var G__115903 = ")))\n(";
var G__115904 = (function (){var G__115970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115971 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115970,G__115971) : tailrecursion.hoplon.span.call(null,G__115970,G__115971));
})();
var G__115905 = (function (){var G__115972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115973 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115972,G__115973) : tailrecursion.hoplon.span.call(null,G__115972,G__115973));
})();
var G__115906 = " [";
var G__115907 = (function (){var G__115974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115975 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115974,G__115975) : tailrecursion.hoplon.span.call(null,G__115974,G__115975));
})();
var G__115908 = "]\n  (";
var G__115909 = (function (){var G__115976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__115977 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115976,G__115977) : tailrecursion.hoplon.span.call(null,G__115976,G__115977));
})();
var G__115910 = "[";
var G__115911 = (function (){var G__115978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115979 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115978,G__115979) : tailrecursion.hoplon.span.call(null,G__115978,G__115979));
})();
var G__115912 = " (";
var G__115913 = (function (){var G__115980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__115981 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115980,G__115981) : tailrecursion.hoplon.span.call(null,G__115980,G__115981));
})();
var G__115914 = " (";
var G__115915 = (function (){var G__115982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115983 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115982,G__115983) : tailrecursion.hoplon.span.call(null,G__115982,G__115983));
})();
var G__115916 = (function (){var G__115984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115985 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115984,G__115985) : tailrecursion.hoplon.span.call(null,G__115984,G__115985));
})();
var G__115917 = ") (";
var G__115918 = (function (){var G__115986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115987 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115986,G__115987) : tailrecursion.hoplon.span.call(null,G__115986,G__115987));
})();
var G__115919 = (function (){var G__115988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115989 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115988,G__115989) : tailrecursion.hoplon.span.call(null,G__115988,G__115989));
})();
var G__115920 = "))]\n    (";
var G__115921 = (function (){var G__115990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115991 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115990,G__115991) : tailrecursion.hoplon.span.call(null,G__115990,G__115991));
})();
var G__115922 = "(";
var G__115923 = (function (){var G__115992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__115993 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115992,G__115993) : tailrecursion.hoplon.span.call(null,G__115992,G__115993));
})();
var G__115924 = (function (){var G__115994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115995 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115994,G__115995) : tailrecursion.hoplon.span.call(null,G__115994,G__115995));
})();
var G__115925 = ") ";
var G__115926 = (function (){var G__115996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__115997 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__115996,G__115997) : tailrecursion.hoplon.span.call(null,G__115996,G__115997));
})();
var G__115927 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__115866,G__115867,G__115868,G__115869,G__115870,G__115871,G__115872,G__115873,G__115874,G__115875,G__115876,G__115877,G__115878,G__115879,G__115880,G__115881,G__115882,G__115883,G__115884,G__115885,G__115886,G__115887,G__115888,G__115889,G__115890,G__115891,G__115892,G__115893,G__115894,G__115895,G__115896,G__115897,G__115898,G__115899,G__115900,G__115901,G__115902,G__115903,G__115904,G__115905,G__115906,G__115907,G__115908,G__115909,G__115910,G__115911,G__115912,G__115913,G__115914,G__115915,G__115916,G__115917,G__115918,G__115919,G__115920,G__115921,G__115922,G__115923,G__115924,G__115925,G__115926,G__115927) : tailrecursion.hoplon.pre.call(null,G__115866,G__115867,G__115868,G__115869,G__115870,G__115871,G__115872,G__115873,G__115874,G__115875,G__115876,G__115877,G__115878,G__115879,G__115880,G__115881,G__115882,G__115883,G__115884,G__115885,G__115886,G__115887,G__115888,G__115889,G__115890,G__115891,G__115892,G__115893,G__115894,G__115895,G__115896,G__115897,G__115898,G__115899,G__115900,G__115901,G__115902,G__115903,G__115904,G__115905,G__115906,G__115907,G__115908,G__115909,G__115910,G__115911,G__115912,G__115913,G__115914,G__115915,G__115916,G__115917,G__115918,G__115919,G__115920,G__115921,G__115922,G__115923,G__115924,G__115925,G__115926,G__115927));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__115864,G__115865) : tailrecursion.hoplon.div.call(null,G__115864,G__115865));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__115863) : tailrecursion.hoplon.div.call(null,G__115863));
})(),(function (){var G__115998 = cljs.core.PersistentArrayMap.EMPTY;
var G__115999 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__116000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__116001 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116000,G__116001) : tailrecursion.hoplon.markdown.code_node.call(null,G__116000,G__116001));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__116002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__116003 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116002,G__116003) : tailrecursion.hoplon.markdown.code_node.call(null,G__116002,G__116003));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__116004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__116005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116004,G__116005) : tailrecursion.hoplon.markdown.code_node.call(null,G__116004,G__116005));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__116006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__116007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116006,G__116007) : tailrecursion.hoplon.markdown.code_node.call(null,G__116006,G__116007));
})(),", ",(function (){var G__116008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-rat"], null);
var G__116009 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116008,G__116009) : tailrecursion.hoplon.markdown.code_node.call(null,G__116008,G__116009));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__115998,G__115999) : tailrecursion.hoplon.markdown.para_node.call(null,G__115998,G__115999));
})(),(function (){var G__116010 = cljs.core.PersistentArrayMap.EMPTY;
var G__116011 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__116012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116012,G__116013) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116012,G__116013));
})(),"t decide initially whether to perform the ",(function (){var G__116014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__116015 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116014,G__116015) : tailrecursion.hoplon.markdown.code_node.call(null,G__116014,G__116015));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116010,G__116011) : tailrecursion.hoplon.markdown.para_node.call(null,G__116010,G__116011));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115858;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115857;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_115856;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_115855;
}})()], 0));
var G__114472 = "";
var G__114473 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_116016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_116018 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116019 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__116020 = cljs.core.PersistentArrayMap.EMPTY;
var G__116021 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__116022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-segment"], null);
var G__116023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116022,G__116023) : tailrecursion.hoplon.markdown.code_node.call(null,G__116022,G__116023));
})()," and selectors ",(function (){var G__116024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"start-segment"], null);
var G__116025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116024,G__116025) : tailrecursion.hoplon.markdown.code_node.call(null,G__116024,G__116025));
})()," and ",(function (){var G__116026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"end-segment"], null);
var G__116027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116026,G__116027) : tailrecursion.hoplon.markdown.code_node.call(null,G__116026,G__116027));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__116028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-point"], null);
var G__116029 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116028,G__116029) : tailrecursion.hoplon.markdown.code_node.call(null,G__116028,G__116029));
})()," and selectors ",(function (){var G__116030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x-point"], null);
var G__116031 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116030,G__116031) : tailrecursion.hoplon.markdown.code_node.call(null,G__116030,G__116031));
})()," and ",(function (){var G__116032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y-point"], null);
var G__116033 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116032,G__116033) : tailrecursion.hoplon.markdown.code_node.call(null,G__116032,G__116033));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__116034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"midpoint-segment"], null);
var G__116035 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116034,G__116035) : tailrecursion.hoplon.markdown.code_node.call(null,G__116034,G__116035));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__116036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116036,G__116037) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116036,G__116037));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116020,G__116021) : tailrecursion.hoplon.markdown.para_node.call(null,G__116020,G__116021));
})(),(function (){var G__116038 = (function (){var G__116039 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116040 = (function (){var G__116041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116042 = "(";
var G__116043 = (function (){var G__116063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116064 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116063,G__116064) : tailrecursion.hoplon.span.call(null,G__116063,G__116064));
})();
var G__116044 = (function (){var G__116065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116066 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116065,G__116066) : tailrecursion.hoplon.span.call(null,G__116065,G__116066));
})();
var G__116045 = " [";
var G__116046 = (function (){var G__116067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116068 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116067,G__116068) : tailrecursion.hoplon.span.call(null,G__116067,G__116068));
})();
var G__116047 = "]\n  (";
var G__116048 = (function (){var G__116069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116070 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116069,G__116070) : tailrecursion.hoplon.span.call(null,G__116069,G__116070));
})();
var G__116049 = (function (){var G__116071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__116072 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116071,G__116072) : tailrecursion.hoplon.span.call(null,G__116071,G__116072));
})();
var G__116050 = " (";
var G__116051 = (function (){var G__116073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116074 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116073,G__116074) : tailrecursion.hoplon.span.call(null,G__116073,G__116074));
})();
var G__116052 = " ";
var G__116053 = (function (){var G__116075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116076 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116075,G__116076) : tailrecursion.hoplon.span.call(null,G__116075,G__116076));
})();
var G__116054 = ") ";
var G__116055 = (function (){var G__116077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__116078 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116077,G__116078) : tailrecursion.hoplon.span.call(null,G__116077,G__116078));
})();
var G__116056 = " (";
var G__116057 = (function (){var G__116079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116080 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116079,G__116080) : tailrecursion.hoplon.span.call(null,G__116079,G__116080));
})();
var G__116058 = " ";
var G__116059 = (function (){var G__116081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116082 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116081,G__116082) : tailrecursion.hoplon.span.call(null,G__116081,G__116082));
})();
var G__116060 = ") ";
var G__116061 = (function (){var G__116083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__116084 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116083,G__116084) : tailrecursion.hoplon.span.call(null,G__116083,G__116084));
})();
var G__116062 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__116041,G__116042,G__116043,G__116044,G__116045,G__116046,G__116047,G__116048,G__116049,G__116050,G__116051,G__116052,G__116053,G__116054,G__116055,G__116056,G__116057,G__116058,G__116059,G__116060,G__116061,G__116062) : tailrecursion.hoplon.pre.call(null,G__116041,G__116042,G__116043,G__116044,G__116045,G__116046,G__116047,G__116048,G__116049,G__116050,G__116051,G__116052,G__116053,G__116054,G__116055,G__116056,G__116057,G__116058,G__116059,G__116060,G__116061,G__116062));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116039,G__116040) : tailrecursion.hoplon.div.call(null,G__116039,G__116040));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116038) : tailrecursion.hoplon.div.call(null,G__116038));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116019;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116018;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116016;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_116085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_116087 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116088 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__116089 = (function (){var G__116090 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116091 = (function (){var G__116092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116093 = "(";
var G__116094 = (function (){var G__116150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116151 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116150,G__116151) : tailrecursion.hoplon.span.call(null,G__116150,G__116151));
})();
var G__116095 = (function (){var G__116152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116153 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116152,G__116153) : tailrecursion.hoplon.span.call(null,G__116152,G__116153));
})();
var G__116096 = " [";
var G__116097 = (function (){var G__116154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116155 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116154,G__116155) : tailrecursion.hoplon.span.call(null,G__116154,G__116155));
})();
var G__116098 = " ";
var G__116099 = (function (){var G__116156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116157 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116156,G__116157) : tailrecursion.hoplon.span.call(null,G__116156,G__116157));
})();
var G__116100 = "]\n  (";
var G__116101 = (function (){var G__116158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116159 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116158,G__116159) : tailrecursion.hoplon.span.call(null,G__116158,G__116159));
})();
var G__116102 = (function (){var G__116160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116161 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116160,G__116161) : tailrecursion.hoplon.span.call(null,G__116160,G__116161));
})();
var G__116103 = " ";
var G__116104 = (function (){var G__116162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116163 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116162,G__116163) : tailrecursion.hoplon.span.call(null,G__116162,G__116163));
})();
var G__116105 = "))\n(";
var G__116106 = (function (){var G__116164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116165 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116164,G__116165) : tailrecursion.hoplon.span.call(null,G__116164,G__116165));
})();
var G__116107 = (function (){var G__116166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116167 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116166,G__116167) : tailrecursion.hoplon.span.call(null,G__116166,G__116167));
})();
var G__116108 = " [";
var G__116109 = (function (){var G__116168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116169 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116168,G__116169) : tailrecursion.hoplon.span.call(null,G__116168,G__116169));
})();
var G__116110 = "]\n  (";
var G__116111 = (function (){var G__116170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116171 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116170,G__116171) : tailrecursion.hoplon.span.call(null,G__116170,G__116171));
})();
var G__116112 = (function (){var G__116172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116173 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116172,G__116173) : tailrecursion.hoplon.span.call(null,G__116172,G__116173));
})();
var G__116113 = "))\n(";
var G__116114 = (function (){var G__116174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116175 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116174,G__116175) : tailrecursion.hoplon.span.call(null,G__116174,G__116175));
})();
var G__116115 = (function (){var G__116176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116177 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116176,G__116177) : tailrecursion.hoplon.span.call(null,G__116176,G__116177));
})();
var G__116116 = " [";
var G__116117 = (function (){var G__116178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116179 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116178,G__116179) : tailrecursion.hoplon.span.call(null,G__116178,G__116179));
})();
var G__116118 = "]\n  (";
var G__116119 = (function (){var G__116180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116181 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116180,G__116181) : tailrecursion.hoplon.span.call(null,G__116180,G__116181));
})();
var G__116120 = (function (){var G__116182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116183 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116182,G__116183) : tailrecursion.hoplon.span.call(null,G__116182,G__116183));
})();
var G__116121 = "))\n(";
var G__116122 = (function (){var G__116184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116185 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116184,G__116185) : tailrecursion.hoplon.span.call(null,G__116184,G__116185));
})();
var G__116123 = (function (){var G__116186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116187 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116186,G__116187) : tailrecursion.hoplon.span.call(null,G__116186,G__116187));
})();
var G__116124 = " [";
var G__116125 = (function (){var G__116188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116189 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116188,G__116189) : tailrecursion.hoplon.span.call(null,G__116188,G__116189));
})();
var G__116126 = " ";
var G__116127 = (function (){var G__116190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116191 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116190,G__116191) : tailrecursion.hoplon.span.call(null,G__116190,G__116191));
})();
var G__116128 = "]\n  (";
var G__116129 = (function (){var G__116192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116193 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116192,G__116193) : tailrecursion.hoplon.span.call(null,G__116192,G__116193));
})();
var G__116130 = (function (){var G__116194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116195 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116194,G__116195) : tailrecursion.hoplon.span.call(null,G__116194,G__116195));
})();
var G__116131 = " ";
var G__116132 = (function (){var G__116196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116197 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116196,G__116197) : tailrecursion.hoplon.span.call(null,G__116196,G__116197));
})();
var G__116133 = "))\n(";
var G__116134 = (function (){var G__116198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116199 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116198,G__116199) : tailrecursion.hoplon.span.call(null,G__116198,G__116199));
})();
var G__116135 = (function (){var G__116200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116201 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116200,G__116201) : tailrecursion.hoplon.span.call(null,G__116200,G__116201));
})();
var G__116136 = " [";
var G__116137 = (function (){var G__116202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116203 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116202,G__116203) : tailrecursion.hoplon.span.call(null,G__116202,G__116203));
})();
var G__116138 = "]\n  (";
var G__116139 = (function (){var G__116204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116205 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116204,G__116205) : tailrecursion.hoplon.span.call(null,G__116204,G__116205));
})();
var G__116140 = (function (){var G__116206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116207 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116206,G__116207) : tailrecursion.hoplon.span.call(null,G__116206,G__116207));
})();
var G__116141 = "))\n(";
var G__116142 = (function (){var G__116208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116209 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116208,G__116209) : tailrecursion.hoplon.span.call(null,G__116208,G__116209));
})();
var G__116143 = (function (){var G__116210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116211 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116210,G__116211) : tailrecursion.hoplon.span.call(null,G__116210,G__116211));
})();
var G__116144 = " [";
var G__116145 = (function (){var G__116212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116213 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116212,G__116213) : tailrecursion.hoplon.span.call(null,G__116212,G__116213));
})();
var G__116146 = "]\n  (";
var G__116147 = (function (){var G__116214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116215 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116214,G__116215) : tailrecursion.hoplon.span.call(null,G__116214,G__116215));
})();
var G__116148 = (function (){var G__116216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116217 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116216,G__116217) : tailrecursion.hoplon.span.call(null,G__116216,G__116217));
})();
var G__116149 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__116092,G__116093,G__116094,G__116095,G__116096,G__116097,G__116098,G__116099,G__116100,G__116101,G__116102,G__116103,G__116104,G__116105,G__116106,G__116107,G__116108,G__116109,G__116110,G__116111,G__116112,G__116113,G__116114,G__116115,G__116116,G__116117,G__116118,G__116119,G__116120,G__116121,G__116122,G__116123,G__116124,G__116125,G__116126,G__116127,G__116128,G__116129,G__116130,G__116131,G__116132,G__116133,G__116134,G__116135,G__116136,G__116137,G__116138,G__116139,G__116140,G__116141,G__116142,G__116143,G__116144,G__116145,G__116146,G__116147,G__116148,G__116149) : tailrecursion.hoplon.pre.call(null,G__116092,G__116093,G__116094,G__116095,G__116096,G__116097,G__116098,G__116099,G__116100,G__116101,G__116102,G__116103,G__116104,G__116105,G__116106,G__116107,G__116108,G__116109,G__116110,G__116111,G__116112,G__116113,G__116114,G__116115,G__116116,G__116117,G__116118,G__116119,G__116120,G__116121,G__116122,G__116123,G__116124,G__116125,G__116126,G__116127,G__116128,G__116129,G__116130,G__116131,G__116132,G__116133,G__116134,G__116135,G__116136,G__116137,G__116138,G__116139,G__116140,G__116141,G__116142,G__116143,G__116144,G__116145,G__116146,G__116147,G__116148,G__116149));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116090,G__116091) : tailrecursion.hoplon.div.call(null,G__116090,G__116091));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116089) : tailrecursion.hoplon.div.call(null,G__116089));
})(),(function (){var G__116218 = cljs.core.PersistentArrayMap.EMPTY;
var G__116219 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116218,G__116219) : tailrecursion.hoplon.markdown.para_node.call(null,G__116218,G__116219));
})(),(function (){var G__116220 = (function (){var G__116221 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116222 = (function (){var G__116223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116224 = "(";
var G__116225 = (function (){var G__116282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116283 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116282,G__116283) : tailrecursion.hoplon.span.call(null,G__116282,G__116283));
})();
var G__116226 = (function (){var G__116284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116285 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116284,G__116285) : tailrecursion.hoplon.span.call(null,G__116284,G__116285));
})();
var G__116227 = " [";
var G__116228 = (function (){var G__116286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116287 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116286,G__116287) : tailrecursion.hoplon.span.call(null,G__116286,G__116287));
})();
var G__116229 = "]\n  (";
var G__116230 = (function (){var G__116288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116289 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116288,G__116289) : tailrecursion.hoplon.span.call(null,G__116288,G__116289));
})();
var G__116231 = "[";
var G__116232 = (function (){var G__116290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116291 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116290,G__116291) : tailrecursion.hoplon.span.call(null,G__116290,G__116291));
})();
var G__116233 = "  (";
var G__116234 = (function (){var G__116292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116293 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116292,G__116293) : tailrecursion.hoplon.span.call(null,G__116292,G__116293));
})();
var G__116235 = " ";
var G__116236 = (function (){var G__116294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116295 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116294,G__116295) : tailrecursion.hoplon.span.call(null,G__116294,G__116295));
})();
var G__116237 = ")\n        ";
var G__116238 = (function (){var G__116296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116297 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116296,G__116297) : tailrecursion.hoplon.span.call(null,G__116296,G__116297));
})();
var G__116239 = "  (";
var G__116240 = (function (){var G__116298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116299 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116298,G__116299) : tailrecursion.hoplon.span.call(null,G__116298,G__116299));
})();
var G__116241 = " ";
var G__116242 = (function (){var G__116300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116301 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116300,G__116301) : tailrecursion.hoplon.span.call(null,G__116300,G__116301));
})();
var G__116243 = ")\n        ";
var G__116244 = (function (){var G__116302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116303 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116302,G__116303) : tailrecursion.hoplon.span.call(null,G__116302,G__116303));
})();
var G__116245 = " (";
var G__116246 = (function (){var G__116304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116305 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116304,G__116305) : tailrecursion.hoplon.span.call(null,G__116304,G__116305));
})();
var G__116247 = " ";
var G__116248 = (function (){var G__116306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116307 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116306,G__116307) : tailrecursion.hoplon.span.call(null,G__116306,G__116307));
})();
var G__116249 = ")\n        ";
var G__116250 = (function (){var G__116308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116309 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116308,G__116309) : tailrecursion.hoplon.span.call(null,G__116308,G__116309));
})();
var G__116251 = " (";
var G__116252 = (function (){var G__116310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116311 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116310,G__116311) : tailrecursion.hoplon.span.call(null,G__116310,G__116311));
})();
var G__116253 = " ";
var G__116254 = (function (){var G__116312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116313 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116312,G__116313) : tailrecursion.hoplon.span.call(null,G__116312,G__116313));
})();
var G__116255 = ")\n        ";
var G__116256 = (function (){var G__116314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116315 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116314,G__116315) : tailrecursion.hoplon.span.call(null,G__116314,G__116315));
})();
var G__116257 = " (";
var G__116258 = (function (){var G__116316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116317 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116316,G__116317) : tailrecursion.hoplon.span.call(null,G__116316,G__116317));
})();
var G__116259 = " ";
var G__116260 = (function (){var G__116318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116319 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116318,G__116319) : tailrecursion.hoplon.span.call(null,G__116318,G__116319));
})();
var G__116261 = ")\n        ";
var G__116262 = (function (){var G__116320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116321 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116320,G__116321) : tailrecursion.hoplon.span.call(null,G__116320,G__116321));
})();
var G__116263 = " (";
var G__116264 = (function (){var G__116322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116323 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116322,G__116323) : tailrecursion.hoplon.span.call(null,G__116322,G__116323));
})();
var G__116265 = " ";
var G__116266 = (function (){var G__116324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116325 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116324,G__116325) : tailrecursion.hoplon.span.call(null,G__116324,G__116325));
})();
var G__116267 = ")]\n    (";
var G__116268 = (function (){var G__116326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116327 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116326,G__116327) : tailrecursion.hoplon.span.call(null,G__116326,G__116327));
})();
var G__116269 = " (";
var G__116270 = (function (){var G__116328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116329 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116328,G__116329) : tailrecursion.hoplon.span.call(null,G__116328,G__116329));
})();
var G__116271 = " ";
var G__116272 = (function (){var G__116330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116331 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116330,G__116331) : tailrecursion.hoplon.span.call(null,G__116330,G__116331));
})();
var G__116273 = " ";
var G__116274 = (function (){var G__116332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116333 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116332,G__116333) : tailrecursion.hoplon.span.call(null,G__116332,G__116333));
})();
var G__116275 = ") (";
var G__116276 = (function (){var G__116334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116335 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116334,G__116335) : tailrecursion.hoplon.span.call(null,G__116334,G__116335));
})();
var G__116277 = " ";
var G__116278 = (function (){var G__116336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116337 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116336,G__116337) : tailrecursion.hoplon.span.call(null,G__116336,G__116337));
})();
var G__116279 = " ";
var G__116280 = (function (){var G__116338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116339 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116338,G__116339) : tailrecursion.hoplon.span.call(null,G__116338,G__116339));
})();
var G__116281 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__116223,G__116224,G__116225,G__116226,G__116227,G__116228,G__116229,G__116230,G__116231,G__116232,G__116233,G__116234,G__116235,G__116236,G__116237,G__116238,G__116239,G__116240,G__116241,G__116242,G__116243,G__116244,G__116245,G__116246,G__116247,G__116248,G__116249,G__116250,G__116251,G__116252,G__116253,G__116254,G__116255,G__116256,G__116257,G__116258,G__116259,G__116260,G__116261,G__116262,G__116263,G__116264,G__116265,G__116266,G__116267,G__116268,G__116269,G__116270,G__116271,G__116272,G__116273,G__116274,G__116275,G__116276,G__116277,G__116278,G__116279,G__116280,G__116281) : tailrecursion.hoplon.pre.call(null,G__116223,G__116224,G__116225,G__116226,G__116227,G__116228,G__116229,G__116230,G__116231,G__116232,G__116233,G__116234,G__116235,G__116236,G__116237,G__116238,G__116239,G__116240,G__116241,G__116242,G__116243,G__116244,G__116245,G__116246,G__116247,G__116248,G__116249,G__116250,G__116251,G__116252,G__116253,G__116254,G__116255,G__116256,G__116257,G__116258,G__116259,G__116260,G__116261,G__116262,G__116263,G__116264,G__116265,G__116266,G__116267,G__116268,G__116269,G__116270,G__116271,G__116272,G__116273,G__116274,G__116275,G__116276,G__116277,G__116278,G__116279,G__116280,G__116281));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116221,G__116222) : tailrecursion.hoplon.div.call(null,G__116221,G__116222));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116220) : tailrecursion.hoplon.div.call(null,G__116220));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116088;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116087;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116085;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_116340 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116341 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_116342 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116343 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__116344 = cljs.core.PersistentArrayMap.EMPTY;
var G__116345 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116344,G__116345) : tailrecursion.hoplon.markdown.para_node.call(null,G__116344,G__116345));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116343;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116342;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116341;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116340;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_116346 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116347 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_116348 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116349 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__116350 = cljs.core.PersistentArrayMap.EMPTY;
var G__116351 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__116352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116353 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116352,G__116353) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116352,G__116353));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116350,G__116351) : tailrecursion.hoplon.markdown.para_node.call(null,G__116350,G__116351));
})(),(function (){var G__116354 = (function (){var G__116355 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116356 = (function (){var G__116357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116358 = "(";
var G__116359 = (function (){var G__116375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116376 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116375,G__116376) : tailrecursion.hoplon.span.call(null,G__116375,G__116376));
})();
var G__116360 = (function (){var G__116377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116378 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116377,G__116378) : tailrecursion.hoplon.span.call(null,G__116377,G__116378));
})();
var G__116361 = " [";
var G__116362 = (function (){var G__116379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116380 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116379,G__116380) : tailrecursion.hoplon.span.call(null,G__116379,G__116380));
})();
var G__116363 = " ";
var G__116364 = (function (){var G__116381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116382 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116381,G__116382) : tailrecursion.hoplon.span.call(null,G__116381,G__116382));
})();
var G__116365 = " ";
var G__116366 = (function (){var G__116383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116384 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116383,G__116384) : tailrecursion.hoplon.span.call(null,G__116383,G__116384));
})();
var G__116367 = "]\n  (";
var G__116368 = (function (){var G__116385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116386 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116385,G__116386) : tailrecursion.hoplon.span.call(null,G__116385,G__116386));
})();
var G__116369 = (function (){var G__116387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116388 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116387,G__116388) : tailrecursion.hoplon.span.call(null,G__116387,G__116388));
})();
var G__116370 = " ";
var G__116371 = (function (){var G__116389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116390 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116389,G__116390) : tailrecursion.hoplon.span.call(null,G__116389,G__116390));
})();
var G__116372 = " ";
var G__116373 = (function (){var G__116391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116392 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116391,G__116392) : tailrecursion.hoplon.span.call(null,G__116391,G__116392));
})();
var G__116374 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__116357,G__116358,G__116359,G__116360,G__116361,G__116362,G__116363,G__116364,G__116365,G__116366,G__116367,G__116368,G__116369,G__116370,G__116371,G__116372,G__116373,G__116374) : tailrecursion.hoplon.pre.call(null,G__116357,G__116358,G__116359,G__116360,G__116361,G__116362,G__116363,G__116364,G__116365,G__116366,G__116367,G__116368,G__116369,G__116370,G__116371,G__116372,G__116373,G__116374));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116355,G__116356) : tailrecursion.hoplon.div.call(null,G__116355,G__116356));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116354) : tailrecursion.hoplon.div.call(null,G__116354));
})(),(function (){var G__116393 = cljs.core.PersistentArrayMap.EMPTY;
var G__116394 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__116395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116396 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116395,G__116396) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116395,G__116396));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116393,G__116394) : tailrecursion.hoplon.markdown.para_node.call(null,G__116393,G__116394));
})(),(function (){var G__116397 = (function (){var G__116398 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116399 = (function (){var G__116400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116401 = "(";
var G__116402 = (function (){var G__116463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116464 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116463,G__116464) : tailrecursion.hoplon.span.call(null,G__116463,G__116464));
})();
var G__116403 = (function (){var G__116465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116466 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116465,G__116466) : tailrecursion.hoplon.span.call(null,G__116465,G__116466));
})();
var G__116404 = " [";
var G__116405 = (function (){var G__116467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116468 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116467,G__116468) : tailrecursion.hoplon.span.call(null,G__116467,G__116468));
})();
var G__116406 = "]\n  (";
var G__116407 = (function (){var G__116469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116470 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116469,G__116470) : tailrecursion.hoplon.span.call(null,G__116469,G__116470));
})();
var G__116408 = "[";
var G__116409 = (function (){var G__116471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116472 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116471,G__116472) : tailrecursion.hoplon.span.call(null,G__116471,G__116472));
})();
var G__116410 = "  (";
var G__116411 = (function (){var G__116473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116474 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116473,G__116474) : tailrecursion.hoplon.span.call(null,G__116473,G__116474));
})();
var G__116412 = " ";
var G__116413 = (function (){var G__116475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116476 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116475,G__116476) : tailrecursion.hoplon.span.call(null,G__116475,G__116476));
})();
var G__116414 = ")\n        ";
var G__116415 = (function (){var G__116477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116478 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116477,G__116478) : tailrecursion.hoplon.span.call(null,G__116477,G__116478));
})();
var G__116416 = "  (";
var G__116417 = (function (){var G__116479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116480 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116479,G__116480) : tailrecursion.hoplon.span.call(null,G__116479,G__116480));
})();
var G__116418 = " ";
var G__116419 = (function (){var G__116481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116482 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116481,G__116482) : tailrecursion.hoplon.span.call(null,G__116481,G__116482));
})();
var G__116420 = ")\n        ";
var G__116421 = (function (){var G__116483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116484 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116483,G__116484) : tailrecursion.hoplon.span.call(null,G__116483,G__116484));
})();
var G__116422 = " (";
var G__116423 = (function (){var G__116485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116486 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116485,G__116486) : tailrecursion.hoplon.span.call(null,G__116485,G__116486));
})();
var G__116424 = " ";
var G__116425 = (function (){var G__116487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116488 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116487,G__116488) : tailrecursion.hoplon.span.call(null,G__116487,G__116488));
})();
var G__116426 = ")\n        ";
var G__116427 = (function (){var G__116489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116490 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116489,G__116490) : tailrecursion.hoplon.span.call(null,G__116489,G__116490));
})();
var G__116428 = " (";
var G__116429 = (function (){var G__116491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116492 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116491,G__116492) : tailrecursion.hoplon.span.call(null,G__116491,G__116492));
})();
var G__116430 = " ";
var G__116431 = (function (){var G__116493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116494 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116493,G__116494) : tailrecursion.hoplon.span.call(null,G__116493,G__116494));
})();
var G__116432 = ")\n        ";
var G__116433 = (function (){var G__116495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116496 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116495,G__116496) : tailrecursion.hoplon.span.call(null,G__116495,G__116496));
})();
var G__116434 = " (";
var G__116435 = (function (){var G__116497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116498 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116497,G__116498) : tailrecursion.hoplon.span.call(null,G__116497,G__116498));
})();
var G__116436 = " ";
var G__116437 = (function (){var G__116499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116500 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116499,G__116500) : tailrecursion.hoplon.span.call(null,G__116499,G__116500));
})();
var G__116438 = ")\n        ";
var G__116439 = (function (){var G__116501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116502 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116501,G__116502) : tailrecursion.hoplon.span.call(null,G__116501,G__116502));
})();
var G__116440 = " (";
var G__116441 = (function (){var G__116503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116504 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116503,G__116504) : tailrecursion.hoplon.span.call(null,G__116503,G__116504));
})();
var G__116442 = " ";
var G__116443 = (function (){var G__116505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116506 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116505,G__116506) : tailrecursion.hoplon.span.call(null,G__116505,G__116506));
})();
var G__116444 = ")]\n    (";
var G__116445 = (function (){var G__116507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116508 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116507,G__116508) : tailrecursion.hoplon.span.call(null,G__116507,G__116508));
})();
var G__116446 = " (";
var G__116447 = (function (){var G__116509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116510 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116509,G__116510) : tailrecursion.hoplon.span.call(null,G__116509,G__116510));
})();
var G__116448 = "(";
var G__116449 = (function (){var G__116511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116512 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116511,G__116512) : tailrecursion.hoplon.span.call(null,G__116511,G__116512));
})();
var G__116450 = " (";
var G__116451 = (function (){var G__116513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116514 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116513,G__116514) : tailrecursion.hoplon.span.call(null,G__116513,G__116514));
})();
var G__116452 = (function (){var G__116515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116516 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116515,G__116516) : tailrecursion.hoplon.span.call(null,G__116515,G__116516));
})();
var G__116453 = " ";
var G__116454 = (function (){var G__116517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116518 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116517,G__116518) : tailrecursion.hoplon.span.call(null,G__116517,G__116518));
})();
var G__116455 = "))\n                  (";
var G__116456 = (function (){var G__116519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116520 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116519,G__116520) : tailrecursion.hoplon.span.call(null,G__116519,G__116520));
})();
var G__116457 = " (";
var G__116458 = (function (){var G__116521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116522 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116521,G__116522) : tailrecursion.hoplon.span.call(null,G__116521,G__116522));
})();
var G__116459 = (function (){var G__116523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116524 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116523,G__116524) : tailrecursion.hoplon.span.call(null,G__116523,G__116524));
})();
var G__116460 = " ";
var G__116461 = (function (){var G__116525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116526 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116525,G__116526) : tailrecursion.hoplon.span.call(null,G__116525,G__116526));
})();
var G__116462 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__116400,G__116401,G__116402,G__116403,G__116404,G__116405,G__116406,G__116407,G__116408,G__116409,G__116410,G__116411,G__116412,G__116413,G__116414,G__116415,G__116416,G__116417,G__116418,G__116419,G__116420,G__116421,G__116422,G__116423,G__116424,G__116425,G__116426,G__116427,G__116428,G__116429,G__116430,G__116431,G__116432,G__116433,G__116434,G__116435,G__116436,G__116437,G__116438,G__116439,G__116440,G__116441,G__116442,G__116443,G__116444,G__116445,G__116446,G__116447,G__116448,G__116449,G__116450,G__116451,G__116452,G__116453,G__116454,G__116455,G__116456,G__116457,G__116458,G__116459,G__116460,G__116461,G__116462) : tailrecursion.hoplon.pre.call(null,G__116400,G__116401,G__116402,G__116403,G__116404,G__116405,G__116406,G__116407,G__116408,G__116409,G__116410,G__116411,G__116412,G__116413,G__116414,G__116415,G__116416,G__116417,G__116418,G__116419,G__116420,G__116421,G__116422,G__116423,G__116424,G__116425,G__116426,G__116427,G__116428,G__116429,G__116430,G__116431,G__116432,G__116433,G__116434,G__116435,G__116436,G__116437,G__116438,G__116439,G__116440,G__116441,G__116442,G__116443,G__116444,G__116445,G__116446,G__116447,G__116448,G__116449,G__116450,G__116451,G__116452,G__116453,G__116454,G__116455,G__116456,G__116457,G__116458,G__116459,G__116460,G__116461,G__116462));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116398,G__116399) : tailrecursion.hoplon.div.call(null,G__116398,G__116399));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116397) : tailrecursion.hoplon.div.call(null,G__116397));
})(),(function (){var G__116527 = cljs.core.PersistentArrayMap.EMPTY;
var G__116528 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__116529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116530 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116529,G__116530) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116529,G__116530));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__116531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"let"], null);
var G__116532 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116531,G__116532) : tailrecursion.hoplon.markdown.code_node.call(null,G__116531,G__116532));
})()," binding instead. For now, let",(function (){var G__116533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116534 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116533,G__116534) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116533,G__116534));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116527,G__116528) : tailrecursion.hoplon.markdown.para_node.call(null,G__116527,G__116528));
})(),(function (){var G__116535 = (function (){var G__116536 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116537 = (function (){var G__116538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116539 = "(";
var G__116540 = (function (){var G__116568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116569 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116568,G__116569) : tailrecursion.hoplon.span.call(null,G__116568,G__116569));
})();
var G__116541 = (function (){var G__116570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116571 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116570,G__116571) : tailrecursion.hoplon.span.call(null,G__116570,G__116571));
})();
var G__116542 = " [";
var G__116543 = (function (){var G__116572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116573 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116572,G__116573) : tailrecursion.hoplon.span.call(null,G__116572,G__116573));
})();
var G__116544 = "]\n  (";
var G__116545 = (function (){var G__116574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116575 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116574,G__116575) : tailrecursion.hoplon.span.call(null,G__116574,G__116575));
})();
var G__116546 = " (";
var G__116547 = (function (){var G__116576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116577 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116576,G__116577) : tailrecursion.hoplon.span.call(null,G__116576,G__116577));
})();
var G__116548 = (function (){var G__116578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116579 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116578,G__116579) : tailrecursion.hoplon.span.call(null,G__116578,G__116579));
})();
var G__116549 = ") (";
var G__116550 = (function (){var G__116580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116581 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116580,G__116581) : tailrecursion.hoplon.span.call(null,G__116580,G__116581));
})();
var G__116551 = (function (){var G__116582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116583 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116582,G__116583) : tailrecursion.hoplon.span.call(null,G__116582,G__116583));
})();
var G__116552 = ")))\n(";
var G__116553 = (function (){var G__116584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116585 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116584,G__116585) : tailrecursion.hoplon.span.call(null,G__116584,G__116585));
})();
var G__116554 = (function (){var G__116586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116587 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116586,G__116587) : tailrecursion.hoplon.span.call(null,G__116586,G__116587));
})();
var G__116555 = " [";
var G__116556 = (function (){var G__116588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116589 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116588,G__116589) : tailrecursion.hoplon.span.call(null,G__116588,G__116589));
})();
var G__116557 = "]\n  (";
var G__116558 = (function (){var G__116590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116591 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116590,G__116591) : tailrecursion.hoplon.span.call(null,G__116590,G__116591));
})();
var G__116559 = " (";
var G__116560 = (function (){var G__116592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116593 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116592,G__116593) : tailrecursion.hoplon.span.call(null,G__116592,G__116593));
})();
var G__116561 = (function (){var G__116594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116595 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116594,G__116595) : tailrecursion.hoplon.span.call(null,G__116594,G__116595));
})();
var G__116562 = ") (";
var G__116563 = (function (){var G__116596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116597 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116596,G__116597) : tailrecursion.hoplon.span.call(null,G__116596,G__116597));
})();
var G__116564 = (function (){var G__116598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116599 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116598,G__116599) : tailrecursion.hoplon.span.call(null,G__116598,G__116599));
})();
var G__116565 = " ";
var G__116566 = (function (){var G__116600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__116601 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116600,G__116601) : tailrecursion.hoplon.span.call(null,G__116600,G__116601));
})();
var G__116567 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__116538,G__116539,G__116540,G__116541,G__116542,G__116543,G__116544,G__116545,G__116546,G__116547,G__116548,G__116549,G__116550,G__116551,G__116552,G__116553,G__116554,G__116555,G__116556,G__116557,G__116558,G__116559,G__116560,G__116561,G__116562,G__116563,G__116564,G__116565,G__116566,G__116567) : tailrecursion.hoplon.pre.call(null,G__116538,G__116539,G__116540,G__116541,G__116542,G__116543,G__116544,G__116545,G__116546,G__116547,G__116548,G__116549,G__116550,G__116551,G__116552,G__116553,G__116554,G__116555,G__116556,G__116557,G__116558,G__116559,G__116560,G__116561,G__116562,G__116563,G__116564,G__116565,G__116566,G__116567));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116536,G__116537) : tailrecursion.hoplon.div.call(null,G__116536,G__116537));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116535) : tailrecursion.hoplon.div.call(null,G__116535));
})(),(function (){var G__116602 = cljs.core.PersistentArrayMap.EMPTY;
var G__116603 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__116604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116604,G__116605) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116604,G__116605));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116602,G__116603) : tailrecursion.hoplon.markdown.para_node.call(null,G__116602,G__116603));
})(),(function (){var G__116606 = (function (){var G__116607 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116608 = (function (){var G__116609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116610 = "(";
var G__116611 = (function (){var G__116652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116653 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116652,G__116653) : tailrecursion.hoplon.span.call(null,G__116652,G__116653));
})();
var G__116612 = (function (){var G__116654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116655 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116654,G__116655) : tailrecursion.hoplon.span.call(null,G__116654,G__116655));
})();
var G__116613 = " [";
var G__116614 = (function (){var G__116656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116657 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116656,G__116657) : tailrecursion.hoplon.span.call(null,G__116656,G__116657));
})();
var G__116615 = "]\n  (";
var G__116616 = (function (){var G__116658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116659 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116658,G__116659) : tailrecursion.hoplon.span.call(null,G__116658,G__116659));
})();
var G__116617 = "(";
var G__116618 = (function (){var G__116660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116661 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116660,G__116661) : tailrecursion.hoplon.span.call(null,G__116660,G__116661));
})();
var G__116619 = " (";
var G__116620 = (function (){var G__116662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116663 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116662,G__116663) : tailrecursion.hoplon.span.call(null,G__116662,G__116663));
})();
var G__116621 = " ";
var G__116622 = (function (){var G__116664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116665 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116664,G__116665) : tailrecursion.hoplon.span.call(null,G__116664,G__116665));
})();
var G__116623 = "))\n     (";
var G__116624 = (function (){var G__116666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116667 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116666,G__116667) : tailrecursion.hoplon.span.call(null,G__116666,G__116667));
})();
var G__116625 = " (";
var G__116626 = (function (){var G__116668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116669 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116668,G__116669) : tailrecursion.hoplon.span.call(null,G__116668,G__116669));
})();
var G__116627 = " ";
var G__116628 = (function (){var G__116670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116671 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116670,G__116671) : tailrecursion.hoplon.span.call(null,G__116670,G__116671));
})();
var G__116629 = "))))\n(";
var G__116630 = (function (){var G__116672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116673 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116672,G__116673) : tailrecursion.hoplon.span.call(null,G__116672,G__116673));
})();
var G__116631 = (function (){var G__116674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116675 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116674,G__116675) : tailrecursion.hoplon.span.call(null,G__116674,G__116675));
})();
var G__116632 = " [";
var G__116633 = (function (){var G__116676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116677 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116676,G__116677) : tailrecursion.hoplon.span.call(null,G__116676,G__116677));
})();
var G__116634 = "]\n  (";
var G__116635 = (function (){var G__116678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116679 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116678,G__116679) : tailrecursion.hoplon.span.call(null,G__116678,G__116679));
})();
var G__116636 = (function (){var G__116680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__116681 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116680,G__116681) : tailrecursion.hoplon.span.call(null,G__116680,G__116681));
})();
var G__116637 = " (";
var G__116638 = (function (){var G__116682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116683 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116682,G__116683) : tailrecursion.hoplon.span.call(null,G__116682,G__116683));
})();
var G__116639 = "(";
var G__116640 = (function (){var G__116684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116685 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116684,G__116685) : tailrecursion.hoplon.span.call(null,G__116684,G__116685));
})();
var G__116641 = " (";
var G__116642 = (function (){var G__116686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116687 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116686,G__116687) : tailrecursion.hoplon.span.call(null,G__116686,G__116687));
})();
var G__116643 = " ";
var G__116644 = (function (){var G__116688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116689 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116688,G__116689) : tailrecursion.hoplon.span.call(null,G__116688,G__116689));
})();
var G__116645 = "))\n          (";
var G__116646 = (function (){var G__116690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116691 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116690,G__116691) : tailrecursion.hoplon.span.call(null,G__116690,G__116691));
})();
var G__116647 = " (";
var G__116648 = (function (){var G__116692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116693 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116692,G__116693) : tailrecursion.hoplon.span.call(null,G__116692,G__116693));
})();
var G__116649 = " ";
var G__116650 = (function (){var G__116694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116695 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116694,G__116695) : tailrecursion.hoplon.span.call(null,G__116694,G__116695));
})();
var G__116651 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__116609,G__116610,G__116611,G__116612,G__116613,G__116614,G__116615,G__116616,G__116617,G__116618,G__116619,G__116620,G__116621,G__116622,G__116623,G__116624,G__116625,G__116626,G__116627,G__116628,G__116629,G__116630,G__116631,G__116632,G__116633,G__116634,G__116635,G__116636,G__116637,G__116638,G__116639,G__116640,G__116641,G__116642,G__116643,G__116644,G__116645,G__116646,G__116647,G__116648,G__116649,G__116650,G__116651) : tailrecursion.hoplon.pre.call(null,G__116609,G__116610,G__116611,G__116612,G__116613,G__116614,G__116615,G__116616,G__116617,G__116618,G__116619,G__116620,G__116621,G__116622,G__116623,G__116624,G__116625,G__116626,G__116627,G__116628,G__116629,G__116630,G__116631,G__116632,G__116633,G__116634,G__116635,G__116636,G__116637,G__116638,G__116639,G__116640,G__116641,G__116642,G__116643,G__116644,G__116645,G__116646,G__116647,G__116648,G__116649,G__116650,G__116651));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116607,G__116608) : tailrecursion.hoplon.div.call(null,G__116607,G__116608));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116606) : tailrecursion.hoplon.div.call(null,G__116606));
})(),(function (){var G__116696 = cljs.core.PersistentArrayMap.EMPTY;
var G__116697 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116696,G__116697) : tailrecursion.hoplon.markdown.para_node.call(null,G__116696,G__116697));
})(),(function (){var G__116698 = (function (){var G__116699 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116700 = (function (){var G__116701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116702 = "(";
var G__116703 = (function (){var G__116724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116725 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116724,G__116725) : tailrecursion.hoplon.span.call(null,G__116724,G__116725));
})();
var G__116704 = (function (){var G__116726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116727 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116726,G__116727) : tailrecursion.hoplon.span.call(null,G__116726,G__116727));
})();
var G__116705 = " [";
var G__116706 = (function (){var G__116728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116729 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116728,G__116729) : tailrecursion.hoplon.span.call(null,G__116728,G__116729));
})();
var G__116707 = " ";
var G__116708 = (function (){var G__116730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116731 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116730,G__116731) : tailrecursion.hoplon.span.call(null,G__116730,G__116731));
})();
var G__116709 = " ";
var G__116710 = (function (){var G__116732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116733 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116732,G__116733) : tailrecursion.hoplon.span.call(null,G__116732,G__116733));
})();
var G__116711 = "]\n  (";
var G__116712 = (function (){var G__116734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116735 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116734,G__116735) : tailrecursion.hoplon.span.call(null,G__116734,G__116735));
})();
var G__116713 = "(";
var G__116714 = (function (){var G__116736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116737 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116736,G__116737) : tailrecursion.hoplon.span.call(null,G__116736,G__116737));
})();
var G__116715 = (function (){var G__116738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116739 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116738,G__116739) : tailrecursion.hoplon.span.call(null,G__116738,G__116739));
})();
var G__116716 = " ";
var G__116717 = (function (){var G__116740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116741 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116740,G__116741) : tailrecursion.hoplon.span.call(null,G__116740,G__116741));
})();
var G__116718 = ") (";
var G__116719 = (function (){var G__116742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116743 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116742,G__116743) : tailrecursion.hoplon.span.call(null,G__116742,G__116743));
})();
var G__116720 = (function (){var G__116744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116745 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116744,G__116745) : tailrecursion.hoplon.span.call(null,G__116744,G__116745));
})();
var G__116721 = " ";
var G__116722 = (function (){var G__116746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116747 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116746,G__116747) : tailrecursion.hoplon.span.call(null,G__116746,G__116747));
})();
var G__116723 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__116701,G__116702,G__116703,G__116704,G__116705,G__116706,G__116707,G__116708,G__116709,G__116710,G__116711,G__116712,G__116713,G__116714,G__116715,G__116716,G__116717,G__116718,G__116719,G__116720,G__116721,G__116722,G__116723) : tailrecursion.hoplon.pre.call(null,G__116701,G__116702,G__116703,G__116704,G__116705,G__116706,G__116707,G__116708,G__116709,G__116710,G__116711,G__116712,G__116713,G__116714,G__116715,G__116716,G__116717,G__116718,G__116719,G__116720,G__116721,G__116722,G__116723));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116699,G__116700) : tailrecursion.hoplon.div.call(null,G__116699,G__116700));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116698) : tailrecursion.hoplon.div.call(null,G__116698));
})(),(function (){var G__116748 = cljs.core.PersistentArrayMap.EMPTY;
var G__116749 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__116750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116751 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116750,G__116751) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116750,G__116751));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__116752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__116753 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116752,G__116753) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116752,G__116753));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116748,G__116749) : tailrecursion.hoplon.markdown.para_node.call(null,G__116748,G__116749));
})(),(function (){var G__116754 = (function (){var G__116755 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116756 = (function (){var G__116757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116758 = "(";
var G__116759 = (function (){var G__116775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116776 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116775,G__116776) : tailrecursion.hoplon.span.call(null,G__116775,G__116776));
})();
var G__116760 = (function (){var G__116777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116778 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116777,G__116778) : tailrecursion.hoplon.span.call(null,G__116777,G__116778));
})();
var G__116761 = " [";
var G__116762 = (function (){var G__116779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116780 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116779,G__116780) : tailrecursion.hoplon.span.call(null,G__116779,G__116780));
})();
var G__116763 = "]\n  (";
var G__116764 = (function (){var G__116781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116782 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116781,G__116782) : tailrecursion.hoplon.span.call(null,G__116781,G__116782));
})();
var G__116765 = (function (){var G__116783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116784 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116783,G__116784) : tailrecursion.hoplon.span.call(null,G__116783,G__116784));
})();
var G__116766 = "))\n(";
var G__116767 = (function (){var G__116785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__116786 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116785,G__116786) : tailrecursion.hoplon.span.call(null,G__116785,G__116786));
})();
var G__116768 = (function (){var G__116787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116788 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116787,G__116788) : tailrecursion.hoplon.span.call(null,G__116787,G__116788));
})();
var G__116769 = " [";
var G__116770 = (function (){var G__116789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116790 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116789,G__116790) : tailrecursion.hoplon.span.call(null,G__116789,G__116790));
})();
var G__116771 = "]\n  (";
var G__116772 = (function (){var G__116791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116792 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116791,G__116792) : tailrecursion.hoplon.span.call(null,G__116791,G__116792));
})();
var G__116773 = (function (){var G__116793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116794 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116793,G__116794) : tailrecursion.hoplon.span.call(null,G__116793,G__116794));
})();
var G__116774 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__116757,G__116758,G__116759,G__116760,G__116761,G__116762,G__116763,G__116764,G__116765,G__116766,G__116767,G__116768,G__116769,G__116770,G__116771,G__116772,G__116773,G__116774) : tailrecursion.hoplon.pre.call(null,G__116757,G__116758,G__116759,G__116760,G__116761,G__116762,G__116763,G__116764,G__116765,G__116766,G__116767,G__116768,G__116769,G__116770,G__116771,G__116772,G__116773,G__116774));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116755,G__116756) : tailrecursion.hoplon.div.call(null,G__116755,G__116756));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116754) : tailrecursion.hoplon.div.call(null,G__116754));
})(),(function (){var G__116795 = cljs.core.PersistentArrayMap.EMPTY;
var G__116796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116795,G__116796) : tailrecursion.hoplon.markdown.para_node.call(null,G__116795,G__116796));
})(),(function (){var G__116797 = cljs.core.PersistentArrayMap.EMPTY;
var G__116798 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__116799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"if"], null);
var G__116800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116799,G__116800) : tailrecursion.hoplon.markdown.code_node.call(null,G__116799,G__116800));
})()," statement to our definition of ",(function (){var G__116801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rectangle"], null);
var G__116802 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116801,G__116802) : tailrecursion.hoplon.markdown.code_node.call(null,G__116801,G__116802));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116797,G__116798) : tailrecursion.hoplon.markdown.para_node.call(null,G__116797,G__116798));
})(),(function (){var G__116803 = (function (){var G__116804 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116805 = (function (){var G__116806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116807 = "(";
var G__116808 = (function (){var G__116830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116831 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116830,G__116831) : tailrecursion.hoplon.span.call(null,G__116830,G__116831));
})();
var G__116809 = "(";
var G__116810 = (function (){var G__116832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116833 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116832,G__116833) : tailrecursion.hoplon.span.call(null,G__116832,G__116833));
})();
var G__116811 = " (";
var G__116812 = (function (){var G__116834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116835 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116834,G__116835) : tailrecursion.hoplon.span.call(null,G__116834,G__116835));
})();
var G__116813 = " ";
var G__116814 = (function (){var G__116836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116837 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116836,G__116837) : tailrecursion.hoplon.span.call(null,G__116836,G__116837));
})();
var G__116815 = ")) \n   (";
var G__116816 = (function (){var G__116838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__116839 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116838,G__116839) : tailrecursion.hoplon.span.call(null,G__116838,G__116839));
})();
var G__116817 = "(";
var G__116818 = (function (){var G__116840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116841 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116840,G__116841) : tailrecursion.hoplon.span.call(null,G__116840,G__116841));
})();
var G__116819 = " (";
var G__116820 = (function (){var G__116842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116843 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116842,G__116843) : tailrecursion.hoplon.span.call(null,G__116842,G__116843));
})();
var G__116821 = " ";
var G__116822 = (function (){var G__116844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116845 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116844,G__116845) : tailrecursion.hoplon.span.call(null,G__116844,G__116845));
})();
var G__116823 = ")) \n      (";
var G__116824 = (function (){var G__116846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116847 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116846,G__116847) : tailrecursion.hoplon.span.call(null,G__116846,G__116847));
})();
var G__116825 = " (";
var G__116826 = (function (){var G__116848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__116849 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116848,G__116849) : tailrecursion.hoplon.span.call(null,G__116848,G__116849));
})();
var G__116827 = " ";
var G__116828 = (function (){var G__116850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__116851 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__116850,G__116851) : tailrecursion.hoplon.span.call(null,G__116850,G__116851));
})();
var G__116829 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__116806,G__116807,G__116808,G__116809,G__116810,G__116811,G__116812,G__116813,G__116814,G__116815,G__116816,G__116817,G__116818,G__116819,G__116820,G__116821,G__116822,G__116823,G__116824,G__116825,G__116826,G__116827,G__116828,G__116829) : tailrecursion.hoplon.pre.call(null,G__116806,G__116807,G__116808,G__116809,G__116810,G__116811,G__116812,G__116813,G__116814,G__116815,G__116816,G__116817,G__116818,G__116819,G__116820,G__116821,G__116822,G__116823,G__116824,G__116825,G__116826,G__116827,G__116828,G__116829));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116804,G__116805) : tailrecursion.hoplon.div.call(null,G__116804,G__116805));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116803) : tailrecursion.hoplon.div.call(null,G__116803));
})(),(function (){var G__116852 = cljs.core.PersistentArrayMap.EMPTY;
var G__116853 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__116854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"diagonal-rectangle"], null);
var G__116855 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116854,G__116855) : tailrecursion.hoplon.markdown.code_node.call(null,G__116854,G__116855));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116852,G__116853) : tailrecursion.hoplon.markdown.para_node.call(null,G__116852,G__116853));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116349;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116348;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116347;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116346;
}})()], 0))], 0))], 0));
var G__114474 = "";
var G__114475 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_116856 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116857 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_116858 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_116859 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__116860 = cljs.core.PersistentArrayMap.EMPTY;
var G__116861 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__116862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__116863 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116862,G__116863) : tailrecursion.hoplon.markdown.code_node.call(null,G__116862,G__116863));
})(),", ",(function (){var G__116864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-rat"], null);
var G__116865 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116864,G__116865) : tailrecursion.hoplon.markdown.code_node.call(null,G__116864,G__116865));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__116866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__116867 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116866,G__116867) : tailrecursion.hoplon.markdown.code_node.call(null,G__116866,G__116867));
})(),", ",(function (){var G__116868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__116869 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116868,G__116869) : tailrecursion.hoplon.markdown.code_node.call(null,G__116868,G__116869));
})(),", and ",(function (){var G__116870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__116871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116870,G__116871) : tailrecursion.hoplon.markdown.code_node.call(null,G__116870,G__116871));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__116872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__116873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116872,G__116873) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116872,G__116873));
})()," numerators, denominators, and rational numbers ",(function (){var G__116874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__116875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__116874,G__116875) : tailrecursion.hoplon.markdown.simple_node.call(null,G__116874,G__116875));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116860,G__116861) : tailrecursion.hoplon.markdown.para_node.call(null,G__116860,G__116861));
})(),(function (){var G__116876 = cljs.core.PersistentArrayMap.EMPTY;
var G__116877 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__116878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__116879 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__116878,G__116879) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__116878,G__116879));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__116880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__116881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116880,G__116881) : tailrecursion.hoplon.markdown.code_node.call(null,G__116880,G__116881));
})()," from a pair of integers ",(function (){var G__116882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__116883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116882,G__116883) : tailrecursion.hoplon.markdown.code_node.call(null,G__116882,G__116883));
})()," and ",(function (){var G__116884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"d"], null);
var G__116885 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116884,G__116885) : tailrecursion.hoplon.markdown.code_node.call(null,G__116884,G__116885));
})(),", then extracting the ",(function (){var G__116886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__116887 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116886,G__116887) : tailrecursion.hoplon.markdown.code_node.call(null,G__116886,G__116887));
})()," and the ",(function (){var G__116888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__116889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116888,G__116889) : tailrecursion.hoplon.markdown.code_node.call(null,G__116888,G__116889));
})()," of ",(function (){var G__116890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__116891 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116890,G__116891) : tailrecursion.hoplon.markdown.code_node.call(null,G__116890,G__116891));
})()," and dividing them should yield the same result as dividing ",(function (){var G__116892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__116893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116892,G__116893) : tailrecursion.hoplon.markdown.code_node.call(null,G__116892,G__116893));
})()," by ",(function (){var G__116894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"d"], null);
var G__116895 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116894,G__116895) : tailrecursion.hoplon.markdown.code_node.call(null,G__116894,G__116895));
})(),". In other words, ",(function (){var G__116896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__116897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116896,G__116897) : tailrecursion.hoplon.markdown.code_node.call(null,G__116896,G__116897));
})(),", ",(function (){var G__116898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__116899 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116898,G__116899) : tailrecursion.hoplon.markdown.code_node.call(null,G__116898,G__116899));
})(),", and ",(function (){var G__116900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__116901 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116900,G__116901) : tailrecursion.hoplon.markdown.code_node.call(null,G__116900,G__116901));
})()," must satisfy the condition that, for any integer ",(function (){var G__116902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__116903 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116902,G__116903) : tailrecursion.hoplon.markdown.code_node.call(null,G__116902,G__116903));
})()," and any non-zero integer ",(function (){var G__116904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"d"], null);
var G__116905 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116904,G__116905) : tailrecursion.hoplon.markdown.code_node.call(null,G__116904,G__116905));
})(),", if ",(function (){var G__116906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__116907 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116906,G__116907) : tailrecursion.hoplon.markdown.code_node.call(null,G__116906,G__116907));
})()," is ",(function (){var G__116908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(make-rat n d)"], null);
var G__116909 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116908,G__116909) : tailrecursion.hoplon.markdown.code_node.call(null,G__116908,G__116909));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116876,G__116877) : tailrecursion.hoplon.markdown.para_node.call(null,G__116876,G__116877));
})(),(function (){var G__116910 = cljs.core.PersistentArrayMap.EMPTY;
var G__116911 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116910,G__116911) : tailrecursion.hoplon.markdown.para_node.call(null,G__116910,G__116911));
})(),(function (){var G__116912 = cljs.core.PersistentArrayMap.EMPTY;
var G__116913 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__116914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__116915 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116914,G__116915) : tailrecursion.hoplon.markdown.code_node.call(null,G__116914,G__116915));
})(),", ",(function (){var G__116916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__116917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116916,G__116917) : tailrecursion.hoplon.markdown.code_node.call(null,G__116916,G__116917));
})()," and ",(function (){var G__116918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__116919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116918,G__116919) : tailrecursion.hoplon.markdown.code_node.call(null,G__116918,G__116919));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__116920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__116921 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__116922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__116923 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__116922,G__116923) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__116922,G__116923));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__116924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__116925 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__116924,G__116925) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__116924,G__116925));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__116926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__116927 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__116926,G__116927) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__116926,G__116927));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__116920,G__116921) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__116920,G__116921));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116912,G__116913) : tailrecursion.hoplon.markdown.para_node.call(null,G__116912,G__116913));
})(),(function (){var G__116928 = cljs.core.PersistentArrayMap.EMPTY;
var G__116929 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__116930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__116931 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__116930,G__116931) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__116930,G__116931));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__116932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__116933 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116932,G__116933) : tailrecursion.hoplon.markdown.code_node.call(null,G__116932,G__116933));
})(),", ",(function (){var G__116934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__116935 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116934,G__116935) : tailrecursion.hoplon.markdown.code_node.call(null,G__116934,G__116935));
})(),", and ",(function (){var G__116936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__116937 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116936,G__116937) : tailrecursion.hoplon.markdown.code_node.call(null,G__116936,G__116937));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__116938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__116939 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116938,G__116939) : tailrecursion.hoplon.markdown.code_node.call(null,G__116938,G__116939));
})()," or ",(function (){var G__116940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__116941 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116940,G__116941) : tailrecursion.hoplon.markdown.code_node.call(null,G__116940,G__116941));
})(),", we can retrieve the objects using ",(function (){var G__116942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__116943 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116942,G__116943) : tailrecursion.hoplon.markdown.code_node.call(null,G__116942,G__116943));
})(),", ",(function (){var G__116944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__116945 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116944,G__116945) : tailrecursion.hoplon.markdown.code_node.call(null,G__116944,G__116945));
})(),", ",(function (){var G__116946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__116947 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116946,G__116947) : tailrecursion.hoplon.markdown.code_node.call(null,G__116946,G__116947));
})()," and ",(function (){var G__116948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__116949 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116948,G__116949) : tailrecursion.hoplon.markdown.code_node.call(null,G__116948,G__116949));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__116950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__116951 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116950,G__116951) : tailrecursion.hoplon.markdown.code_node.call(null,G__116950,G__116951));
})()," and ",(function (){var G__116952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__116953 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116952,G__116953) : tailrecursion.hoplon.markdown.code_node.call(null,G__116952,G__116953));
})(),", if ",(function (){var G__116954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__116955 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116954,G__116955) : tailrecursion.hoplon.markdown.code_node.call(null,G__116954,G__116955));
})()," is ",(function (){var G__116956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list x y)"], null);
var G__116957 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116956,G__116957) : tailrecursion.hoplon.markdown.code_node.call(null,G__116956,G__116957));
})()," then ",(function (){var G__116958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(first z)"], null);
var G__116959 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116958,G__116959) : tailrecursion.hoplon.markdown.code_node.call(null,G__116958,G__116959));
})()," is ",(function (){var G__116960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__116961 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116960,G__116961) : tailrecursion.hoplon.markdown.code_node.call(null,G__116960,G__116961));
})()," and ",(function (){var G__116962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(second z)"], null);
var G__116963 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116962,G__116963) : tailrecursion.hoplon.markdown.code_node.call(null,G__116962,G__116963));
})()," is ",(function (){var G__116964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__116965 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116964,G__116965) : tailrecursion.hoplon.markdown.code_node.call(null,G__116964,G__116965));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__116966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__116967 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116966,G__116967) : tailrecursion.hoplon.markdown.code_node.call(null,G__116966,G__116967));
})(),", ",(function (){var G__116968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__116969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116968,G__116969) : tailrecursion.hoplon.markdown.code_node.call(null,G__116968,G__116969));
})(),", and ",(function (){var G__116970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__116971 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__116970,G__116971) : tailrecursion.hoplon.markdown.code_node.call(null,G__116970,G__116971));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__116928,G__116929) : tailrecursion.hoplon.markdown.para_node.call(null,G__116928,G__116929));
})(),(function (){var G__116972 = (function (){var G__116973 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__116974 = (function (){var G__116975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__116976 = "(";
var G__116977 = (function (){var G__117038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117039 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117038,G__117039) : tailrecursion.hoplon.span.call(null,G__117038,G__117039));
})();
var G__116978 = (function (){var G__117040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117041 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117040,G__117041) : tailrecursion.hoplon.span.call(null,G__117040,G__117041));
})();
var G__116979 = "[";
var G__116980 = (function (){var G__117042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117043 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117042,G__117043) : tailrecursion.hoplon.span.call(null,G__117042,G__117043));
})();
var G__116981 = " ";
var G__116982 = (function (){var G__117044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117045 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117044,G__117045) : tailrecursion.hoplon.span.call(null,G__117044,G__117045));
})();
var G__116983 = "]\n  (";
var G__116984 = (function (){var G__117046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117047 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117046,G__117047) : tailrecursion.hoplon.span.call(null,G__117046,G__117047));
})();
var G__116985 = "[";
var G__116986 = (function (){var G__117048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117049 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117048,G__117049) : tailrecursion.hoplon.span.call(null,G__117048,G__117049));
})();
var G__116987 = " (";
var G__116988 = (function (){var G__117050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117051 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117050,G__117051) : tailrecursion.hoplon.span.call(null,G__117050,G__117051));
})();
var G__116989 = "[";
var G__116990 = (function (){var G__117052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117053 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117052,G__117053) : tailrecursion.hoplon.span.call(null,G__117052,G__117053));
})();
var G__116991 = "] (";
var G__116992 = (function (){var G__117054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117055 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117054,G__117055) : tailrecursion.hoplon.span.call(null,G__117054,G__117055));
})();
var G__116993 = "(";
var G__116994 = (function (){var G__117056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117057 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117056,G__117057) : tailrecursion.hoplon.span.call(null,G__117056,G__117057));
})();
var G__116995 = (function (){var G__117058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117059 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117058,G__117059) : tailrecursion.hoplon.span.call(null,G__117058,G__117059));
})();
var G__116996 = " ";
var G__116997 = (function (){var G__117060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117061 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117060,G__117061) : tailrecursion.hoplon.span.call(null,G__117060,G__117061));
})();
var G__116998 = ") ";
var G__116999 = (function (){var G__117062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117063 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117062,G__117063) : tailrecursion.hoplon.span.call(null,G__117062,G__117063));
})();
var G__117000 = "\n                               (";
var G__117001 = (function (){var G__117064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117065 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117064,G__117065) : tailrecursion.hoplon.span.call(null,G__117064,G__117065));
})();
var G__117002 = (function (){var G__117066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117067 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117066,G__117067) : tailrecursion.hoplon.span.call(null,G__117066,G__117067));
})();
var G__117003 = " ";
var G__117004 = (function (){var G__117068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117069 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117068,G__117069) : tailrecursion.hoplon.span.call(null,G__117068,G__117069));
})();
var G__117005 = ") ";
var G__117006 = (function (){var G__117070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117071 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117070,G__117071) : tailrecursion.hoplon.span.call(null,G__117070,G__117071));
})();
var G__117007 = "\n                               ";
var G__117008 = (function (){var G__117072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117073 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117072,G__117073) : tailrecursion.hoplon.span.call(null,G__117072,G__117073));
})();
var G__117009 = " (";
var G__117010 = (function (){var G__117074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117075 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117074,G__117075) : tailrecursion.hoplon.span.call(null,G__117074,G__117075));
})();
var G__117011 = " (";
var G__117012 = (function (){var G__117076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117077 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117076,G__117077) : tailrecursion.hoplon.span.call(null,G__117076,G__117077));
})();
var G__117013 = " ";
var G__117014 = (function (){var G__117078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__117079 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117078,G__117079) : tailrecursion.hoplon.span.call(null,G__117078,G__117079));
})();
var G__117015 = " ";
var G__117016 = (function (){var G__117080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117081 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117080,G__117081) : tailrecursion.hoplon.span.call(null,G__117080,G__117081));
})();
var G__117017 = "))))]\n    ";
var G__117018 = (function (){var G__117082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117083 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117082,G__117083) : tailrecursion.hoplon.span.call(null,G__117082,G__117083));
})();
var G__117019 = "))\n\n(";
var G__117020 = (function (){var G__117084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117085 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117084,G__117085) : tailrecursion.hoplon.span.call(null,G__117084,G__117085));
})();
var G__117021 = (function (){var G__117086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117087 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117086,G__117087) : tailrecursion.hoplon.span.call(null,G__117086,G__117087));
})();
var G__117022 = " [";
var G__117023 = (function (){var G__117088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117089 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117088,G__117089) : tailrecursion.hoplon.span.call(null,G__117088,G__117089));
})();
var G__117024 = "] (";
var G__117025 = (function (){var G__117090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117091 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117090,G__117091) : tailrecursion.hoplon.span.call(null,G__117090,G__117091));
})();
var G__117026 = " ";
var G__117027 = (function (){var G__117092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117093 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117092,G__117093) : tailrecursion.hoplon.span.call(null,G__117092,G__117093));
})();
var G__117028 = "))\n\n(";
var G__117029 = (function (){var G__117094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117095 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117094,G__117095) : tailrecursion.hoplon.span.call(null,G__117094,G__117095));
})();
var G__117030 = (function (){var G__117096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117097 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117096,G__117097) : tailrecursion.hoplon.span.call(null,G__117096,G__117097));
})();
var G__117031 = " [";
var G__117032 = (function (){var G__117098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117099 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117098,G__117099) : tailrecursion.hoplon.span.call(null,G__117098,G__117099));
})();
var G__117033 = "] (";
var G__117034 = (function (){var G__117100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117101 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117100,G__117101) : tailrecursion.hoplon.span.call(null,G__117100,G__117101));
})();
var G__117035 = " ";
var G__117036 = (function (){var G__117102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117103 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117102,G__117103) : tailrecursion.hoplon.span.call(null,G__117102,G__117103));
})();
var G__117037 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__116975,G__116976,G__116977,G__116978,G__116979,G__116980,G__116981,G__116982,G__116983,G__116984,G__116985,G__116986,G__116987,G__116988,G__116989,G__116990,G__116991,G__116992,G__116993,G__116994,G__116995,G__116996,G__116997,G__116998,G__116999,G__117000,G__117001,G__117002,G__117003,G__117004,G__117005,G__117006,G__117007,G__117008,G__117009,G__117010,G__117011,G__117012,G__117013,G__117014,G__117015,G__117016,G__117017,G__117018,G__117019,G__117020,G__117021,G__117022,G__117023,G__117024,G__117025,G__117026,G__117027,G__117028,G__117029,G__117030,G__117031,G__117032,G__117033,G__117034,G__117035,G__117036,G__117037) : tailrecursion.hoplon.pre.call(null,G__116975,G__116976,G__116977,G__116978,G__116979,G__116980,G__116981,G__116982,G__116983,G__116984,G__116985,G__116986,G__116987,G__116988,G__116989,G__116990,G__116991,G__116992,G__116993,G__116994,G__116995,G__116996,G__116997,G__116998,G__116999,G__117000,G__117001,G__117002,G__117003,G__117004,G__117005,G__117006,G__117007,G__117008,G__117009,G__117010,G__117011,G__117012,G__117013,G__117014,G__117015,G__117016,G__117017,G__117018,G__117019,G__117020,G__117021,G__117022,G__117023,G__117024,G__117025,G__117026,G__117027,G__117028,G__117029,G__117030,G__117031,G__117032,G__117033,G__117034,G__117035,G__117036,G__117037));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__116973,G__116974) : tailrecursion.hoplon.div.call(null,G__116973,G__116974));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__116972) : tailrecursion.hoplon.div.call(null,G__116972));
})(),(function (){var G__117104 = cljs.core.PersistentArrayMap.EMPTY;
var G__117105 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__117106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__117107 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117106,G__117107) : tailrecursion.hoplon.markdown.code_node.call(null,G__117106,G__117107));
})(),", ",(function (){var G__117108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__117109 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117108,G__117109) : tailrecursion.hoplon.markdown.code_node.call(null,G__117108,G__117109));
})(),", and ",(function (){var G__117110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__117111 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117110,G__117111) : tailrecursion.hoplon.markdown.code_node.call(null,G__117110,G__117111));
})()," instead of ",(function (){var G__117112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__117113 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117112,G__117113) : tailrecursion.hoplon.markdown.code_node.call(null,G__117112,G__117113));
})(),", ",(function (){var G__117114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__117115 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117114,G__117115) : tailrecursion.hoplon.markdown.code_node.call(null,G__117114,G__117115));
})(),", and ",(function (){var G__117116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__117117 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117116,G__117117) : tailrecursion.hoplon.markdown.code_node.call(null,G__117116,G__117117));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__117118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__117119 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117118,G__117119) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117118,G__117119));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__117120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__117121 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117120,G__117121) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117120,G__117121));
})(),"d have to use other methods to make it work. We digress",(function (){var G__117122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__117123 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117122,G__117123) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117122,G__117123));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117104,G__117105) : tailrecursion.hoplon.markdown.para_node.call(null,G__117104,G__117105));
})(),(function (){var G__117124 = cljs.core.PersistentArrayMap.EMPTY;
var G__117125 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117124,G__117125) : tailrecursion.hoplon.markdown.para_node.call(null,G__117124,G__117125));
})(),(function (){var G__117126 = cljs.core.PersistentArrayMap.EMPTY;
var G__117127 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__117128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons x y)"], null);
var G__117129 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117128,G__117129) : tailrecursion.hoplon.markdown.code_node.call(null,G__117128,G__117129));
})()," is a procedure ",(function (){var G__117130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__117131 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117130,G__117131) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117130,G__117131));
})()," namely the internally defined procedure ",(function (){var G__117132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"dispatch"], null);
var G__117133 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117132,G__117133) : tailrecursion.hoplon.markdown.code_node.call(null,G__117132,G__117133));
})(),", which takes one argument and returns either ",(function (){var G__117134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__117135 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117134,G__117135) : tailrecursion.hoplon.markdown.code_node.call(null,G__117134,G__117135));
})()," or ",(function (){var G__117136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__117137 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117136,G__117137) : tailrecursion.hoplon.markdown.code_node.call(null,G__117136,G__117137));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__117138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(car z)"], null);
var G__117139 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117138,G__117139) : tailrecursion.hoplon.markdown.code_node.call(null,G__117138,G__117139));
})()," is defined to apply ",(function (){var G__117140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__117141 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117140,G__117141) : tailrecursion.hoplon.markdown.code_node.call(null,G__117140,G__117141));
})()," to 0. Hence, if ",(function (){var G__117142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__117143 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117142,G__117143) : tailrecursion.hoplon.markdown.code_node.call(null,G__117142,G__117143));
})()," is the procedure formed by ",(function (){var G__117144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons x\ny)"], null);
var G__117145 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117144,G__117145) : tailrecursion.hoplon.markdown.code_node.call(null,G__117144,G__117145));
})(),", then ",(function (){var G__117146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__117147 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117146,G__117147) : tailrecursion.hoplon.markdown.code_node.call(null,G__117146,G__117147));
})()," applied to 0 will yield ",(function (){var G__117148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__117149 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117148,G__117149) : tailrecursion.hoplon.markdown.code_node.call(null,G__117148,G__117149));
})(),". Thus, we have shown that ",(function (){var G__117150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(car (cons x y))"], null);
var G__117151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117150,G__117151) : tailrecursion.hoplon.markdown.code_node.call(null,G__117150,G__117151));
})()," yields ",(function (){var G__117152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__117153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117152,G__117153) : tailrecursion.hoplon.markdown.code_node.call(null,G__117152,G__117153));
})(),", as desired. Similarly, ",(function (){var G__117154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cdr (cons x\ny))"], null);
var G__117155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117154,G__117155) : tailrecursion.hoplon.markdown.code_node.call(null,G__117154,G__117155));
})()," applies the procedure returned by ",(function (){var G__117156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons x y)"], null);
var G__117157 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117156,G__117157) : tailrecursion.hoplon.markdown.code_node.call(null,G__117156,G__117157));
})()," to 1, which returns ",(function (){var G__117158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__117159 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117158,G__117159) : tailrecursion.hoplon.markdown.code_node.call(null,G__117158,G__117159));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__117160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__117161 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117160,G__117161) : tailrecursion.hoplon.markdown.code_node.call(null,G__117160,G__117161));
})(),", ",(function (){var G__117162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__117163 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117162,G__117163) : tailrecursion.hoplon.markdown.code_node.call(null,G__117162,G__117163));
})(),", and ",(function (){var G__117164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__117165 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117164,G__117165) : tailrecursion.hoplon.markdown.code_node.call(null,G__117164,G__117165));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__117166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__117167 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__117166,G__117167) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__117166,G__117167));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117126,G__117127) : tailrecursion.hoplon.markdown.para_node.call(null,G__117126,G__117127));
})(),(function (){var G__117168 = cljs.core.PersistentArrayMap.EMPTY;
var G__117169 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117168,G__117169) : tailrecursion.hoplon.markdown.para_node.call(null,G__117168,G__117169));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116859;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116858;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_116857;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_116856;
}})()], 0));
var G__114476 = "";
var G__114477 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_117170 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117171 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117172 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117173 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117174 = cljs.core.PersistentArrayMap.EMPTY;
var G__117175 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117174,G__117175) : tailrecursion.hoplon.markdown.para_node.call(null,G__117174,G__117175));
})(),(function (){var G__117176 = (function (){var G__117177 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117178 = (function (){var G__117179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117180 = "(";
var G__117181 = (function (){var G__117213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117214 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117213,G__117214) : tailrecursion.hoplon.span.call(null,G__117213,G__117214));
})();
var G__117182 = (function (){var G__117215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117216 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117215,G__117216) : tailrecursion.hoplon.span.call(null,G__117215,G__117216));
})();
var G__117183 = "[";
var G__117184 = (function (){var G__117217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117218 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117217,G__117218) : tailrecursion.hoplon.span.call(null,G__117217,G__117218));
})();
var G__117185 = " ";
var G__117186 = (function (){var G__117219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117220 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117219,G__117220) : tailrecursion.hoplon.span.call(null,G__117219,G__117220));
})();
var G__117187 = "]\n  (";
var G__117188 = (function (){var G__117221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117222 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117221,G__117222) : tailrecursion.hoplon.span.call(null,G__117221,G__117222));
})();
var G__117189 = "[";
var G__117190 = (function (){var G__117223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117224 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117223,G__117224) : tailrecursion.hoplon.span.call(null,G__117223,G__117224));
})();
var G__117191 = "] (";
var G__117192 = (function (){var G__117225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117226 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117225,G__117226) : tailrecursion.hoplon.span.call(null,G__117225,G__117226));
})();
var G__117193 = " ";
var G__117194 = (function (){var G__117227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117228 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117227,G__117228) : tailrecursion.hoplon.span.call(null,G__117227,G__117228));
})();
var G__117195 = " ";
var G__117196 = (function (){var G__117229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117230 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117229,G__117230) : tailrecursion.hoplon.span.call(null,G__117229,G__117230));
})();
var G__117197 = ")))\n(";
var G__117198 = (function (){var G__117231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117232 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117231,G__117232) : tailrecursion.hoplon.span.call(null,G__117231,G__117232));
})();
var G__117199 = (function (){var G__117233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117234 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117233,G__117234) : tailrecursion.hoplon.span.call(null,G__117233,G__117234));
})();
var G__117200 = " [";
var G__117201 = (function (){var G__117235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117236 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117235,G__117236) : tailrecursion.hoplon.span.call(null,G__117235,G__117236));
})();
var G__117202 = "]\n  (";
var G__117203 = (function (){var G__117237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117238 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117237,G__117238) : tailrecursion.hoplon.span.call(null,G__117237,G__117238));
})();
var G__117204 = " (";
var G__117205 = (function (){var G__117239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117240 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117239,G__117240) : tailrecursion.hoplon.span.call(null,G__117239,G__117240));
})();
var G__117206 = "[";
var G__117207 = (function (){var G__117241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117242 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117241,G__117242) : tailrecursion.hoplon.span.call(null,G__117241,G__117242));
})();
var G__117208 = " ";
var G__117209 = (function (){var G__117243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117244 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117243,G__117244) : tailrecursion.hoplon.span.call(null,G__117243,G__117244));
})();
var G__117210 = "] ";
var G__117211 = (function (){var G__117245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117246 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117245,G__117246) : tailrecursion.hoplon.span.call(null,G__117245,G__117246));
})();
var G__117212 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__117179,G__117180,G__117181,G__117182,G__117183,G__117184,G__117185,G__117186,G__117187,G__117188,G__117189,G__117190,G__117191,G__117192,G__117193,G__117194,G__117195,G__117196,G__117197,G__117198,G__117199,G__117200,G__117201,G__117202,G__117203,G__117204,G__117205,G__117206,G__117207,G__117208,G__117209,G__117210,G__117211,G__117212) : tailrecursion.hoplon.pre.call(null,G__117179,G__117180,G__117181,G__117182,G__117183,G__117184,G__117185,G__117186,G__117187,G__117188,G__117189,G__117190,G__117191,G__117192,G__117193,G__117194,G__117195,G__117196,G__117197,G__117198,G__117199,G__117200,G__117201,G__117202,G__117203,G__117204,G__117205,G__117206,G__117207,G__117208,G__117209,G__117210,G__117211,G__117212));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117177,G__117178) : tailrecursion.hoplon.div.call(null,G__117177,G__117178));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117176) : tailrecursion.hoplon.div.call(null,G__117176));
})(),(function (){var G__117247 = cljs.core.PersistentArrayMap.EMPTY;
var G__117248 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__117249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__117250 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117249,G__117250) : tailrecursion.hoplon.markdown.code_node.call(null,G__117249,G__117250));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117247,G__117248) : tailrecursion.hoplon.markdown.para_node.call(null,G__117247,G__117248));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117173;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117172;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117171;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117170;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_117251 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117252 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117253 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117254 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117255 = (function (){var G__117256 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117257 = (function (){var G__117258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117259 = "(";
var G__117260 = (function (){var G__117275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117276 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117275,G__117276) : tailrecursion.hoplon.span.call(null,G__117275,G__117276));
})();
var G__117261 = (function (){var G__117277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117278 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117277,G__117278) : tailrecursion.hoplon.span.call(null,G__117277,G__117278));
})();
var G__117262 = " [";
var G__117263 = (function (){var G__117279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117280 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117279,G__117280) : tailrecursion.hoplon.span.call(null,G__117279,G__117280));
})();
var G__117264 = "]\n  (";
var G__117265 = (function (){var G__117281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117282 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117281,G__117282) : tailrecursion.hoplon.span.call(null,G__117281,G__117282));
})();
var G__117266 = " (";
var G__117267 = (function (){var G__117283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117284 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117283,G__117284) : tailrecursion.hoplon.span.call(null,G__117283,G__117284));
})();
var G__117268 = "[";
var G__117269 = (function (){var G__117285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117286 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117285,G__117286) : tailrecursion.hoplon.span.call(null,G__117285,G__117286));
})();
var G__117270 = " ";
var G__117271 = (function (){var G__117287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117288 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117287,G__117288) : tailrecursion.hoplon.span.call(null,G__117287,G__117288));
})();
var G__117272 = "] ";
var G__117273 = (function (){var G__117289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117290 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117289,G__117290) : tailrecursion.hoplon.span.call(null,G__117289,G__117290));
})();
var G__117274 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__117258,G__117259,G__117260,G__117261,G__117262,G__117263,G__117264,G__117265,G__117266,G__117267,G__117268,G__117269,G__117270,G__117271,G__117272,G__117273,G__117274) : tailrecursion.hoplon.pre.call(null,G__117258,G__117259,G__117260,G__117261,G__117262,G__117263,G__117264,G__117265,G__117266,G__117267,G__117268,G__117269,G__117270,G__117271,G__117272,G__117273,G__117274));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117256,G__117257) : tailrecursion.hoplon.div.call(null,G__117256,G__117257));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117255) : tailrecursion.hoplon.div.call(null,G__117255));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117254;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117253;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117252;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117251;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_117291 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117292 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117293 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117294 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117295 = cljs.core.PersistentArrayMap.EMPTY;
var G__117296 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__117297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__117298 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117297,G__117298) : tailrecursion.hoplon.markdown.code_node.call(null,G__117297,G__117298));
})(),", ",(function (){var G__117299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__117300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117299,G__117300) : tailrecursion.hoplon.markdown.code_node.call(null,G__117299,G__117300));
})(),", and ",(function (){var G__117301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__117302 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117301,G__117302) : tailrecursion.hoplon.markdown.code_node.call(null,G__117301,G__117302));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117295,G__117296) : tailrecursion.hoplon.markdown.para_node.call(null,G__117295,G__117296));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117294;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117293;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117292;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117291;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_117303 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117304 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117305 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117306 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117307 = (function (){var G__117308 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117309 = (function (){var G__117310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117311 = "(";
var G__117312 = (function (){var G__117411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117412 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117411,G__117412) : tailrecursion.hoplon.span.call(null,G__117411,G__117412));
})();
var G__117313 = (function (){var G__117413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117414 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117413,G__117414) : tailrecursion.hoplon.span.call(null,G__117413,G__117414));
})();
var G__117314 = "[";
var G__117315 = (function (){var G__117415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117416 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117415,G__117416) : tailrecursion.hoplon.span.call(null,G__117415,G__117416));
})();
var G__117316 = " ";
var G__117317 = (function (){var G__117417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117418 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117417,G__117418) : tailrecursion.hoplon.span.call(null,G__117417,G__117418));
})();
var G__117318 = "]\n  (";
var G__117319 = (function (){var G__117419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117420 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117419,G__117420) : tailrecursion.hoplon.span.call(null,G__117419,G__117420));
})();
var G__117320 = "(";
var G__117321 = (function (){var G__117421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117422 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117421,G__117422) : tailrecursion.hoplon.span.call(null,G__117421,G__117422));
})();
var G__117322 = " ";
var G__117323 = (function (){var G__117423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117424 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117423,G__117424) : tailrecursion.hoplon.span.call(null,G__117423,G__117424));
})();
var G__117324 = " ";
var G__117325 = (function (){var G__117425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117426 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117425,G__117426) : tailrecursion.hoplon.span.call(null,G__117425,G__117426));
})();
var G__117326 = ") (";
var G__117327 = (function (){var G__117427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117428 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117427,G__117428) : tailrecursion.hoplon.span.call(null,G__117427,G__117428));
})();
var G__117328 = " ";
var G__117329 = (function (){var G__117429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117430 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117429,G__117430) : tailrecursion.hoplon.span.call(null,G__117429,G__117430));
})();
var G__117330 = " ";
var G__117331 = (function (){var G__117431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117432 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117431,G__117432) : tailrecursion.hoplon.span.call(null,G__117431,G__117432));
})();
var G__117332 = ")))\n(";
var G__117333 = (function (){var G__117433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117434 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117433,G__117434) : tailrecursion.hoplon.span.call(null,G__117433,G__117434));
})();
var G__117334 = (function (){var G__117435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117436 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117435,G__117436) : tailrecursion.hoplon.span.call(null,G__117435,G__117436));
})();
var G__117335 = " [";
var G__117336 = (function (){var G__117437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117438 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117437,G__117438) : tailrecursion.hoplon.span.call(null,G__117437,G__117438));
})();
var G__117337 = "]\n  (";
var G__117338 = (function (){var G__117439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117440 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117439,G__117440) : tailrecursion.hoplon.span.call(null,G__117439,G__117440));
})();
var G__117339 = "[";
var G__117340 = (function (){var G__117441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117442 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117441,G__117442) : tailrecursion.hoplon.span.call(null,G__117441,G__117442));
})();
var G__117341 = "    ";
var G__117342 = (function (){var G__117443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117444 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117443,G__117444) : tailrecursion.hoplon.span.call(null,G__117443,G__117444));
})();
var G__117343 = "\n         ";
var G__117344 = (function (){var G__117445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117446 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117445,G__117446) : tailrecursion.hoplon.span.call(null,G__117445,G__117446));
})();
var G__117345 = " ";
var G__117346 = (function (){var G__117447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117448 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117447,G__117448) : tailrecursion.hoplon.span.call(null,G__117447,G__117448));
})();
var G__117347 = "]\n    (";
var G__117348 = (function (){var G__117449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117450 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117449,G__117450) : tailrecursion.hoplon.span.call(null,G__117449,G__117450));
})();
var G__117349 = "(";
var G__117350 = (function (){var G__117451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117452 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117451,G__117452) : tailrecursion.hoplon.span.call(null,G__117451,G__117452));
})();
var G__117351 = "(";
var G__117352 = (function (){var G__117453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117454 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117453,G__117454) : tailrecursion.hoplon.span.call(null,G__117453,G__117454));
})();
var G__117353 = " ";
var G__117354 = (function (){var G__117455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117456 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117455,G__117456) : tailrecursion.hoplon.span.call(null,G__117455,G__117456));
})();
var G__117355 = " ";
var G__117356 = (function (){var G__117457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117458 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117457,G__117458) : tailrecursion.hoplon.span.call(null,G__117457,G__117458));
})();
var G__117357 = ") ";
var G__117358 = (function (){var G__117459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117460 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117459,G__117460) : tailrecursion.hoplon.span.call(null,G__117459,G__117460));
})();
var G__117359 = ")\n        (";
var G__117360 = (function (){var G__117461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117462 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117461,G__117462) : tailrecursion.hoplon.span.call(null,G__117461,G__117462));
})();
var G__117361 = " (";
var G__117362 = (function (){var G__117463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117464 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117463,G__117464) : tailrecursion.hoplon.span.call(null,G__117463,G__117464));
})();
var G__117363 = (function (){var G__117465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117466 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117465,G__117466) : tailrecursion.hoplon.span.call(null,G__117465,G__117466));
})();
var G__117364 = " ";
var G__117365 = (function (){var G__117467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117468 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117467,G__117468) : tailrecursion.hoplon.span.call(null,G__117467,G__117468));
})();
var G__117366 = ") (";
var G__117367 = (function (){var G__117469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117470 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117469,G__117470) : tailrecursion.hoplon.span.call(null,G__117469,G__117470));
})();
var G__117368 = (function (){var G__117471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117472 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117471,G__117472) : tailrecursion.hoplon.span.call(null,G__117471,G__117472));
})();
var G__117369 = "))\n        ";
var G__117370 = (function (){var G__117473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117474 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117473,G__117474) : tailrecursion.hoplon.span.call(null,G__117473,G__117474));
})();
var G__117371 = ")))\n(";
var G__117372 = (function (){var G__117475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117476 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117475,G__117476) : tailrecursion.hoplon.span.call(null,G__117475,G__117476));
})();
var G__117373 = (function (){var G__117477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117478 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117477,G__117478) : tailrecursion.hoplon.span.call(null,G__117477,G__117478));
})();
var G__117374 = " [";
var G__117375 = (function (){var G__117479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117480 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117479,G__117480) : tailrecursion.hoplon.span.call(null,G__117479,G__117480));
})();
var G__117376 = "]\n  (";
var G__117377 = (function (){var G__117481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117482 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117481,G__117482) : tailrecursion.hoplon.span.call(null,G__117481,G__117482));
})();
var G__117378 = "[";
var G__117379 = (function (){var G__117483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117484 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117483,G__117484) : tailrecursion.hoplon.span.call(null,G__117483,G__117484));
})();
var G__117380 = "    ";
var G__117381 = (function (){var G__117485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117486 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117485,G__117486) : tailrecursion.hoplon.span.call(null,G__117485,G__117486));
})();
var G__117382 = "\n         ";
var G__117383 = (function (){var G__117487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117488 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117487,G__117488) : tailrecursion.hoplon.span.call(null,G__117487,G__117488));
})();
var G__117384 = " ";
var G__117385 = (function (){var G__117489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117490 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117489,G__117490) : tailrecursion.hoplon.span.call(null,G__117489,G__117490));
})();
var G__117386 = "]\n    (";
var G__117387 = (function (){var G__117491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117492 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117491,G__117492) : tailrecursion.hoplon.span.call(null,G__117491,G__117492));
})();
var G__117388 = "(";
var G__117389 = (function (){var G__117493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117494 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117493,G__117494) : tailrecursion.hoplon.span.call(null,G__117493,G__117494));
})();
var G__117390 = "(";
var G__117391 = (function (){var G__117495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117496 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117495,G__117496) : tailrecursion.hoplon.span.call(null,G__117495,G__117496));
})();
var G__117392 = " ";
var G__117393 = (function (){var G__117497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117498 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117497,G__117498) : tailrecursion.hoplon.span.call(null,G__117497,G__117498));
})();
var G__117394 = " ";
var G__117395 = (function (){var G__117499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117500 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117499,G__117500) : tailrecursion.hoplon.span.call(null,G__117499,G__117500));
})();
var G__117396 = ") ";
var G__117397 = (function (){var G__117501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117502 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117501,G__117502) : tailrecursion.hoplon.span.call(null,G__117501,G__117502));
})();
var G__117398 = ")\n        (";
var G__117399 = (function (){var G__117503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117504 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117503,G__117504) : tailrecursion.hoplon.span.call(null,G__117503,G__117504));
})();
var G__117400 = " (";
var G__117401 = (function (){var G__117505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117506 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117505,G__117506) : tailrecursion.hoplon.span.call(null,G__117505,G__117506));
})();
var G__117402 = (function (){var G__117507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117508 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117507,G__117508) : tailrecursion.hoplon.span.call(null,G__117507,G__117508));
})();
var G__117403 = " ";
var G__117404 = (function (){var G__117509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__117510 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117509,G__117510) : tailrecursion.hoplon.span.call(null,G__117509,G__117510));
})();
var G__117405 = ") (";
var G__117406 = (function (){var G__117511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117512 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117511,G__117512) : tailrecursion.hoplon.span.call(null,G__117511,G__117512));
})();
var G__117407 = (function (){var G__117513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117514 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117513,G__117514) : tailrecursion.hoplon.span.call(null,G__117513,G__117514));
})();
var G__117408 = "))\n        ";
var G__117409 = (function (){var G__117515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117516 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117515,G__117516) : tailrecursion.hoplon.span.call(null,G__117515,G__117516));
})();
var G__117410 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__117310,G__117311,G__117312,G__117313,G__117314,G__117315,G__117316,G__117317,G__117318,G__117319,G__117320,G__117321,G__117322,G__117323,G__117324,G__117325,G__117326,G__117327,G__117328,G__117329,G__117330,G__117331,G__117332,G__117333,G__117334,G__117335,G__117336,G__117337,G__117338,G__117339,G__117340,G__117341,G__117342,G__117343,G__117344,G__117345,G__117346,G__117347,G__117348,G__117349,G__117350,G__117351,G__117352,G__117353,G__117354,G__117355,G__117356,G__117357,G__117358,G__117359,G__117360,G__117361,G__117362,G__117363,G__117364,G__117365,G__117366,G__117367,G__117368,G__117369,G__117370,G__117371,G__117372,G__117373,G__117374,G__117375,G__117376,G__117377,G__117378,G__117379,G__117380,G__117381,G__117382,G__117383,G__117384,G__117385,G__117386,G__117387,G__117388,G__117389,G__117390,G__117391,G__117392,G__117393,G__117394,G__117395,G__117396,G__117397,G__117398,G__117399,G__117400,G__117401,G__117402,G__117403,G__117404,G__117405,G__117406,G__117407,G__117408,G__117409,G__117410) : tailrecursion.hoplon.pre.call(null,G__117310,G__117311,G__117312,G__117313,G__117314,G__117315,G__117316,G__117317,G__117318,G__117319,G__117320,G__117321,G__117322,G__117323,G__117324,G__117325,G__117326,G__117327,G__117328,G__117329,G__117330,G__117331,G__117332,G__117333,G__117334,G__117335,G__117336,G__117337,G__117338,G__117339,G__117340,G__117341,G__117342,G__117343,G__117344,G__117345,G__117346,G__117347,G__117348,G__117349,G__117350,G__117351,G__117352,G__117353,G__117354,G__117355,G__117356,G__117357,G__117358,G__117359,G__117360,G__117361,G__117362,G__117363,G__117364,G__117365,G__117366,G__117367,G__117368,G__117369,G__117370,G__117371,G__117372,G__117373,G__117374,G__117375,G__117376,G__117377,G__117378,G__117379,G__117380,G__117381,G__117382,G__117383,G__117384,G__117385,G__117386,G__117387,G__117388,G__117389,G__117390,G__117391,G__117392,G__117393,G__117394,G__117395,G__117396,G__117397,G__117398,G__117399,G__117400,G__117401,G__117402,G__117403,G__117404,G__117405,G__117406,G__117407,G__117408,G__117409,G__117410));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117308,G__117309) : tailrecursion.hoplon.div.call(null,G__117308,G__117309));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117307) : tailrecursion.hoplon.div.call(null,G__117307));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117306;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117305;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117304;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117303;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_117517 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117518 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117519 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117520 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117521 = cljs.core.PersistentArrayMap.EMPTY;
var G__117522 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__117523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__117524 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117523,G__117524) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117523,G__117524));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117521,G__117522) : tailrecursion.hoplon.markdown.para_node.call(null,G__117521,G__117522));
})(),(function (){var G__117525 = (function (){var G__117526 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117527 = (function (){var G__117528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117529 = "(";
var G__117530 = (function (){var G__117564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117565 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117564,G__117565) : tailrecursion.hoplon.span.call(null,G__117564,G__117565));
})();
var G__117531 = (function (){var G__117566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117567 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117566,G__117567) : tailrecursion.hoplon.span.call(null,G__117566,G__117567));
})();
var G__117532 = " (";
var G__117533 = (function (){var G__117568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117569 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117568,G__117569) : tailrecursion.hoplon.span.call(null,G__117568,G__117569));
})();
var G__117534 = "[";
var G__117535 = (function (){var G__117570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117571 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117570,G__117571) : tailrecursion.hoplon.span.call(null,G__117570,G__117571));
})();
var G__117536 = "] (";
var G__117537 = (function (){var G__117572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117573 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117572,G__117573) : tailrecursion.hoplon.span.call(null,G__117572,G__117573));
})();
var G__117538 = "[";
var G__117539 = (function (){var G__117574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117575 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117574,G__117575) : tailrecursion.hoplon.span.call(null,G__117574,G__117575));
})();
var G__117540 = "] ";
var G__117541 = (function (){var G__117576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117577 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117576,G__117577) : tailrecursion.hoplon.span.call(null,G__117576,G__117577));
})();
var G__117542 = ")))\n(";
var G__117543 = (function (){var G__117578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117579 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117578,G__117579) : tailrecursion.hoplon.span.call(null,G__117578,G__117579));
})();
var G__117544 = (function (){var G__117580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117581 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117580,G__117581) : tailrecursion.hoplon.span.call(null,G__117580,G__117581));
})();
var G__117545 = " [";
var G__117546 = (function (){var G__117582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117583 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117582,G__117583) : tailrecursion.hoplon.span.call(null,G__117582,G__117583));
})();
var G__117547 = "]\n  (";
var G__117548 = (function (){var G__117584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117585 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117584,G__117585) : tailrecursion.hoplon.span.call(null,G__117584,G__117585));
})();
var G__117549 = "[";
var G__117550 = (function (){var G__117586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117587 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117586,G__117587) : tailrecursion.hoplon.span.call(null,G__117586,G__117587));
})();
var G__117551 = "] (";
var G__117552 = (function (){var G__117588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117589 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117588,G__117589) : tailrecursion.hoplon.span.call(null,G__117588,G__117589));
})();
var G__117553 = "[";
var G__117554 = (function (){var G__117590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117591 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117590,G__117591) : tailrecursion.hoplon.span.call(null,G__117590,G__117591));
})();
var G__117555 = "] (";
var G__117556 = (function (){var G__117592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117593 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117592,G__117593) : tailrecursion.hoplon.span.call(null,G__117592,G__117593));
})();
var G__117557 = " ((";
var G__117558 = (function (){var G__117594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117595 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117594,G__117595) : tailrecursion.hoplon.span.call(null,G__117594,G__117595));
})();
var G__117559 = " ";
var G__117560 = (function (){var G__117596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117597 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117596,G__117597) : tailrecursion.hoplon.span.call(null,G__117596,G__117597));
})();
var G__117561 = ") ";
var G__117562 = (function (){var G__117598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117599 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117598,G__117599) : tailrecursion.hoplon.span.call(null,G__117598,G__117599));
})();
var G__117563 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__117528,G__117529,G__117530,G__117531,G__117532,G__117533,G__117534,G__117535,G__117536,G__117537,G__117538,G__117539,G__117540,G__117541,G__117542,G__117543,G__117544,G__117545,G__117546,G__117547,G__117548,G__117549,G__117550,G__117551,G__117552,G__117553,G__117554,G__117555,G__117556,G__117557,G__117558,G__117559,G__117560,G__117561,G__117562,G__117563) : tailrecursion.hoplon.pre.call(null,G__117528,G__117529,G__117530,G__117531,G__117532,G__117533,G__117534,G__117535,G__117536,G__117537,G__117538,G__117539,G__117540,G__117541,G__117542,G__117543,G__117544,G__117545,G__117546,G__117547,G__117548,G__117549,G__117550,G__117551,G__117552,G__117553,G__117554,G__117555,G__117556,G__117557,G__117558,G__117559,G__117560,G__117561,G__117562,G__117563));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117526,G__117527) : tailrecursion.hoplon.div.call(null,G__117526,G__117527));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117525) : tailrecursion.hoplon.div.call(null,G__117525));
})(),(function (){var G__117600 = cljs.core.PersistentArrayMap.EMPTY;
var G__117601 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117600,G__117601) : tailrecursion.hoplon.markdown.para_node.call(null,G__117600,G__117601));
})(),(function (){var G__117602 = cljs.core.PersistentArrayMap.EMPTY;
var G__117603 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__117604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"one"], null);
var G__117605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117604,G__117605) : tailrecursion.hoplon.markdown.code_node.call(null,G__117604,G__117605));
})()," and ",(function (){var G__117606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"two"], null);
var G__117607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117606,G__117607) : tailrecursion.hoplon.markdown.code_node.call(null,G__117606,G__117607));
})()," directly (not in terms of ",(function (){var G__117608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"zero"], null);
var G__117609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117608,G__117609) : tailrecursion.hoplon.markdown.code_node.call(null,G__117608,G__117609));
})()," and ",(function (){var G__117610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-1"], null);
var G__117611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117610,G__117611) : tailrecursion.hoplon.markdown.code_node.call(null,G__117610,G__117611));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__117612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(add-1 zero)"], null);
var G__117613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117612,G__117613) : tailrecursion.hoplon.markdown.code_node.call(null,G__117612,G__117613));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__117614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-1"], null);
var G__117615 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117614,G__117615) : tailrecursion.hoplon.markdown.code_node.call(null,G__117614,G__117615));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117602,G__117603) : tailrecursion.hoplon.markdown.para_node.call(null,G__117602,G__117603));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117520;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117519;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117518;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117517;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_117616 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117617 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117618 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117619 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117620 = (function (){var G__117621 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117622 = (function (){var G__117623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117624 = "(";
var G__117625 = (function (){var G__117657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117658 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117657,G__117658) : tailrecursion.hoplon.span.call(null,G__117657,G__117658));
})();
var G__117626 = (function (){var G__117659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117660 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117659,G__117660) : tailrecursion.hoplon.span.call(null,G__117659,G__117660));
})();
var G__117627 = "\n  (";
var G__117628 = (function (){var G__117661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117662 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117661,G__117662) : tailrecursion.hoplon.span.call(null,G__117661,G__117662));
})();
var G__117629 = "[";
var G__117630 = (function (){var G__117663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117664 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117663,G__117664) : tailrecursion.hoplon.span.call(null,G__117663,G__117664));
})();
var G__117631 = "] (";
var G__117632 = (function (){var G__117665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117666 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117665,G__117666) : tailrecursion.hoplon.span.call(null,G__117665,G__117666));
})();
var G__117633 = "[";
var G__117634 = (function (){var G__117667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117668 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117667,G__117668) : tailrecursion.hoplon.span.call(null,G__117667,G__117668));
})();
var G__117635 = "] (";
var G__117636 = (function (){var G__117669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117670 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117669,G__117670) : tailrecursion.hoplon.span.call(null,G__117669,G__117670));
})();
var G__117637 = " ";
var G__117638 = (function (){var G__117671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117672 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117671,G__117672) : tailrecursion.hoplon.span.call(null,G__117671,G__117672));
})();
var G__117639 = "))))\n(";
var G__117640 = (function (){var G__117673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117674 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117673,G__117674) : tailrecursion.hoplon.span.call(null,G__117673,G__117674));
})();
var G__117641 = (function (){var G__117675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117676 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117675,G__117676) : tailrecursion.hoplon.span.call(null,G__117675,G__117676));
})();
var G__117642 = "\n  (";
var G__117643 = (function (){var G__117677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117678 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117677,G__117678) : tailrecursion.hoplon.span.call(null,G__117677,G__117678));
})();
var G__117644 = "[";
var G__117645 = (function (){var G__117679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117680 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117679,G__117680) : tailrecursion.hoplon.span.call(null,G__117679,G__117680));
})();
var G__117646 = "] (";
var G__117647 = (function (){var G__117681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117682 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117681,G__117682) : tailrecursion.hoplon.span.call(null,G__117681,G__117682));
})();
var G__117648 = "[";
var G__117649 = (function (){var G__117683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117684 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117683,G__117684) : tailrecursion.hoplon.span.call(null,G__117683,G__117684));
})();
var G__117650 = "] (";
var G__117651 = (function (){var G__117685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117686 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117685,G__117686) : tailrecursion.hoplon.span.call(null,G__117685,G__117686));
})();
var G__117652 = " (";
var G__117653 = (function (){var G__117687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117688 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117687,G__117688) : tailrecursion.hoplon.span.call(null,G__117687,G__117688));
})();
var G__117654 = " ";
var G__117655 = (function (){var G__117689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117690 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117689,G__117690) : tailrecursion.hoplon.span.call(null,G__117689,G__117690));
})();
var G__117656 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__117623,G__117624,G__117625,G__117626,G__117627,G__117628,G__117629,G__117630,G__117631,G__117632,G__117633,G__117634,G__117635,G__117636,G__117637,G__117638,G__117639,G__117640,G__117641,G__117642,G__117643,G__117644,G__117645,G__117646,G__117647,G__117648,G__117649,G__117650,G__117651,G__117652,G__117653,G__117654,G__117655,G__117656) : tailrecursion.hoplon.pre.call(null,G__117623,G__117624,G__117625,G__117626,G__117627,G__117628,G__117629,G__117630,G__117631,G__117632,G__117633,G__117634,G__117635,G__117636,G__117637,G__117638,G__117639,G__117640,G__117641,G__117642,G__117643,G__117644,G__117645,G__117646,G__117647,G__117648,G__117649,G__117650,G__117651,G__117652,G__117653,G__117654,G__117655,G__117656));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117621,G__117622) : tailrecursion.hoplon.div.call(null,G__117621,G__117622));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117620) : tailrecursion.hoplon.div.call(null,G__117620));
})(),(function (){var G__117691 = cljs.core.PersistentArrayMap.EMPTY;
var G__117692 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__117693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__117694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117693,G__117694) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117693,G__117694));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117691,G__117692) : tailrecursion.hoplon.markdown.para_node.call(null,G__117691,G__117692));
})(),(function (){var G__117695 = (function (){var G__117696 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117697 = (function (){var G__117698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117699 = "(";
var G__117700 = (function (){var G__117717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117718 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117717,G__117718) : tailrecursion.hoplon.span.call(null,G__117717,G__117718));
})();
var G__117701 = (function (){var G__117719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117720 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117719,G__117720) : tailrecursion.hoplon.span.call(null,G__117719,G__117720));
})();
var G__117702 = " [";
var G__117703 = (function (){var G__117721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117722 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117721,G__117722) : tailrecursion.hoplon.span.call(null,G__117721,G__117722));
})();
var G__117704 = " ";
var G__117705 = (function (){var G__117723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117724 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117723,G__117724) : tailrecursion.hoplon.span.call(null,G__117723,G__117724));
})();
var G__117706 = "]\n  (";
var G__117707 = (function (){var G__117725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117726 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117725,G__117726) : tailrecursion.hoplon.span.call(null,G__117725,G__117726));
})();
var G__117708 = "[";
var G__117709 = (function (){var G__117727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117728 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117727,G__117728) : tailrecursion.hoplon.span.call(null,G__117727,G__117728));
})();
var G__117710 = "] (";
var G__117711 = (function (){var G__117729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117730 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117729,G__117730) : tailrecursion.hoplon.span.call(null,G__117729,G__117730));
})();
var G__117712 = " (";
var G__117713 = (function (){var G__117731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117732 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117731,G__117732) : tailrecursion.hoplon.span.call(null,G__117731,G__117732));
})();
var G__117714 = " ";
var G__117715 = (function (){var G__117733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117734 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117733,G__117734) : tailrecursion.hoplon.span.call(null,G__117733,G__117734));
})();
var G__117716 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__117698,G__117699,G__117700,G__117701,G__117702,G__117703,G__117704,G__117705,G__117706,G__117707,G__117708,G__117709,G__117710,G__117711,G__117712,G__117713,G__117714,G__117715,G__117716) : tailrecursion.hoplon.pre.call(null,G__117698,G__117699,G__117700,G__117701,G__117702,G__117703,G__117704,G__117705,G__117706,G__117707,G__117708,G__117709,G__117710,G__117711,G__117712,G__117713,G__117714,G__117715,G__117716));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117696,G__117697) : tailrecursion.hoplon.div.call(null,G__117696,G__117697));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117695) : tailrecursion.hoplon.div.call(null,G__117695));
})(),(function (){var G__117735 = cljs.core.PersistentArrayMap.EMPTY;
var G__117736 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117735,G__117736) : tailrecursion.hoplon.markdown.para_node.call(null,G__117735,G__117736));
})(),(function (){var G__117737 = (function (){var G__117738 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117739 = (function (){var G__117740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117741 = "(";
var G__117742 = (function (){var G__117763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117764 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117763,G__117764) : tailrecursion.hoplon.span.call(null,G__117763,G__117764));
})();
var G__117743 = (function (){var G__117765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117766 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117765,G__117766) : tailrecursion.hoplon.span.call(null,G__117765,G__117766));
})();
var G__117744 = " [";
var G__117745 = (function (){var G__117767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117768 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117767,G__117768) : tailrecursion.hoplon.span.call(null,G__117767,G__117768));
})();
var G__117746 = " ";
var G__117747 = (function (){var G__117769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117770 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117769,G__117770) : tailrecursion.hoplon.span.call(null,G__117769,G__117770));
})();
var G__117748 = "]\n  (";
var G__117749 = (function (){var G__117771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117772 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117771,G__117772) : tailrecursion.hoplon.span.call(null,G__117771,G__117772));
})();
var G__117750 = "[";
var G__117751 = (function (){var G__117773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117774 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117773,G__117774) : tailrecursion.hoplon.span.call(null,G__117773,G__117774));
})();
var G__117752 = "]\n    (";
var G__117753 = (function (){var G__117775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117776 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117775,G__117776) : tailrecursion.hoplon.span.call(null,G__117775,G__117776));
})();
var G__117754 = " (";
var G__117755 = (function (){var G__117777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117778 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117777,G__117778) : tailrecursion.hoplon.span.call(null,G__117777,G__117778));
})();
var G__117756 = " ";
var G__117757 = (function (){var G__117779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117780 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117779,G__117780) : tailrecursion.hoplon.span.call(null,G__117779,G__117780));
})();
var G__117758 = ") (";
var G__117759 = (function (){var G__117781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117782 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117781,G__117782) : tailrecursion.hoplon.span.call(null,G__117781,G__117782));
})();
var G__117760 = " ";
var G__117761 = (function (){var G__117783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117784 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117783,G__117784) : tailrecursion.hoplon.span.call(null,G__117783,G__117784));
})();
var G__117762 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__117740,G__117741,G__117742,G__117743,G__117744,G__117745,G__117746,G__117747,G__117748,G__117749,G__117750,G__117751,G__117752,G__117753,G__117754,G__117755,G__117756,G__117757,G__117758,G__117759,G__117760,G__117761,G__117762) : tailrecursion.hoplon.pre.call(null,G__117740,G__117741,G__117742,G__117743,G__117744,G__117745,G__117746,G__117747,G__117748,G__117749,G__117750,G__117751,G__117752,G__117753,G__117754,G__117755,G__117756,G__117757,G__117758,G__117759,G__117760,G__117761,G__117762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117738,G__117739) : tailrecursion.hoplon.div.call(null,G__117738,G__117739));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117737) : tailrecursion.hoplon.div.call(null,G__117737));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117619;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117618;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117617;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117616;
}})()], 0))], 0))], 0));
var G__114478 = "";
var G__114479 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_117785 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117786 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_117787 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_117788 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__117789 = cljs.core.PersistentArrayMap.EMPTY;
var G__117790 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117789,G__117790) : tailrecursion.hoplon.markdown.para_node.call(null,G__117789,G__117790));
})(),(function (){var G__117791 = cljs.core.PersistentArrayMap.EMPTY;
var G__117792 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__117793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__117794 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117793,G__117794) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117793,G__117794));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117791,G__117792) : tailrecursion.hoplon.markdown.para_node.call(null,G__117791,G__117792));
})(),(function (){var G__117795 = cljs.core.PersistentArrayMap.EMPTY;
var G__117796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117795,G__117796) : tailrecursion.hoplon.markdown.para_node.call(null,G__117795,G__117796));
})(),(function (){var G__117797 = cljs.core.PersistentArrayMap.EMPTY;
var G__117798 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__117799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__117800 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__117799,G__117800) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__117799,G__117800));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117797,G__117798) : tailrecursion.hoplon.markdown.para_node.call(null,G__117797,G__117798));
})(),(function (){var G__117801 = cljs.core.PersistentArrayMap.EMPTY;
var G__117802 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__117803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__117804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__117803,G__117804) : tailrecursion.hoplon.markdown.simple_node.call(null,G__117803,G__117804));
})(),"s idea is to implement ",(function (){var G__117805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__117806 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__117805,G__117806) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__117805,G__117806));
})()," as a set of arithmetic operations for combining ",(function (){var G__117807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__117808 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__117807,G__117808) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__117807,G__117808));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117801,G__117802) : tailrecursion.hoplon.markdown.para_node.call(null,G__117801,G__117802));
})(),(function (){var G__117809 = cljs.core.PersistentArrayMap.EMPTY;
var G__117810 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__117811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__117812 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__117811,G__117812) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__117811,G__117812));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__117813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-interval"], null);
var G__117814 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117813,G__117814) : tailrecursion.hoplon.markdown.code_node.call(null,G__117813,G__117814));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117809,G__117810) : tailrecursion.hoplon.markdown.para_node.call(null,G__117809,G__117810));
})(),(function (){var G__117815 = (function (){var G__117816 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117817 = (function (){var G__117818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117819 = "(";
var G__117820 = (function (){var G__117849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117850 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117849,G__117850) : tailrecursion.hoplon.span.call(null,G__117849,G__117850));
})();
var G__117821 = (function (){var G__117851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117852 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117851,G__117852) : tailrecursion.hoplon.span.call(null,G__117851,G__117852));
})();
var G__117822 = " [";
var G__117823 = (function (){var G__117853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117854 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117853,G__117854) : tailrecursion.hoplon.span.call(null,G__117853,G__117854));
})();
var G__117824 = " ";
var G__117825 = (function (){var G__117855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117856 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117855,G__117856) : tailrecursion.hoplon.span.call(null,G__117855,G__117856));
})();
var G__117826 = "]\n  (";
var G__117827 = (function (){var G__117857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117858 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117857,G__117858) : tailrecursion.hoplon.span.call(null,G__117857,G__117858));
})();
var G__117828 = " (";
var G__117829 = (function (){var G__117859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117860 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117859,G__117860) : tailrecursion.hoplon.span.call(null,G__117859,G__117860));
})();
var G__117830 = "(";
var G__117831 = (function (){var G__117861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117862 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117861,G__117862) : tailrecursion.hoplon.span.call(null,G__117861,G__117862));
})();
var G__117832 = " ";
var G__117833 = (function (){var G__117863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117864 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117863,G__117864) : tailrecursion.hoplon.span.call(null,G__117863,G__117864));
})();
var G__117834 = ") (";
var G__117835 = (function (){var G__117865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117866 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117865,G__117866) : tailrecursion.hoplon.span.call(null,G__117865,G__117866));
})();
var G__117836 = " ";
var G__117837 = (function (){var G__117867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117868 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117867,G__117868) : tailrecursion.hoplon.span.call(null,G__117867,G__117868));
})();
var G__117838 = "))\n                 (";
var G__117839 = (function (){var G__117869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117870 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117869,G__117870) : tailrecursion.hoplon.span.call(null,G__117869,G__117870));
})();
var G__117840 = "(";
var G__117841 = (function (){var G__117871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117872 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117871,G__117872) : tailrecursion.hoplon.span.call(null,G__117871,G__117872));
})();
var G__117842 = " ";
var G__117843 = (function (){var G__117873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117874 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117873,G__117874) : tailrecursion.hoplon.span.call(null,G__117873,G__117874));
})();
var G__117844 = ") (";
var G__117845 = (function (){var G__117875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117876 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117875,G__117876) : tailrecursion.hoplon.span.call(null,G__117875,G__117876));
})();
var G__117846 = " ";
var G__117847 = (function (){var G__117877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117878 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117877,G__117878) : tailrecursion.hoplon.span.call(null,G__117877,G__117878));
})();
var G__117848 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__117818,G__117819,G__117820,G__117821,G__117822,G__117823,G__117824,G__117825,G__117826,G__117827,G__117828,G__117829,G__117830,G__117831,G__117832,G__117833,G__117834,G__117835,G__117836,G__117837,G__117838,G__117839,G__117840,G__117841,G__117842,G__117843,G__117844,G__117845,G__117846,G__117847,G__117848) : tailrecursion.hoplon.pre.call(null,G__117818,G__117819,G__117820,G__117821,G__117822,G__117823,G__117824,G__117825,G__117826,G__117827,G__117828,G__117829,G__117830,G__117831,G__117832,G__117833,G__117834,G__117835,G__117836,G__117837,G__117838,G__117839,G__117840,G__117841,G__117842,G__117843,G__117844,G__117845,G__117846,G__117847,G__117848));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117816,G__117817) : tailrecursion.hoplon.div.call(null,G__117816,G__117817));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117815) : tailrecursion.hoplon.div.call(null,G__117815));
})(),(function (){var G__117879 = cljs.core.PersistentArrayMap.EMPTY;
var G__117880 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__117881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"min"], null);
var G__117882 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117881,G__117882) : tailrecursion.hoplon.markdown.code_node.call(null,G__117881,G__117882));
})()," and ",(function (){var G__117883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"max"], null);
var G__117884 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__117883,G__117884) : tailrecursion.hoplon.markdown.code_node.call(null,G__117883,G__117884));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__117879,G__117880) : tailrecursion.hoplon.markdown.para_node.call(null,G__117879,G__117880));
})(),(function (){var G__117885 = (function (){var G__117886 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__117887 = (function (){var G__117888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__117889 = "(";
var G__117890 = (function (){var G__117967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117968 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117967,G__117968) : tailrecursion.hoplon.span.call(null,G__117967,G__117968));
})();
var G__117891 = (function (){var G__117969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117970 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117969,G__117970) : tailrecursion.hoplon.span.call(null,G__117969,G__117970));
})();
var G__117892 = " [";
var G__117893 = (function (){var G__117971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117972 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117971,G__117972) : tailrecursion.hoplon.span.call(null,G__117971,G__117972));
})();
var G__117894 = " ";
var G__117895 = (function (){var G__117973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117974 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117973,G__117974) : tailrecursion.hoplon.span.call(null,G__117973,G__117974));
})();
var G__117896 = "]\n  (";
var G__117897 = (function (){var G__117975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__117976 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117975,G__117976) : tailrecursion.hoplon.span.call(null,G__117975,G__117976));
})();
var G__117898 = "[";
var G__117899 = (function (){var G__117977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117978 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117977,G__117978) : tailrecursion.hoplon.span.call(null,G__117977,G__117978));
})();
var G__117900 = " (";
var G__117901 = (function (){var G__117979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117980 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117979,G__117980) : tailrecursion.hoplon.span.call(null,G__117979,G__117980));
})();
var G__117902 = "(";
var G__117903 = (function (){var G__117981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117982 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117981,G__117982) : tailrecursion.hoplon.span.call(null,G__117981,G__117982));
})();
var G__117904 = " ";
var G__117905 = (function (){var G__117983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117984 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117983,G__117984) : tailrecursion.hoplon.span.call(null,G__117983,G__117984));
})();
var G__117906 = ") (";
var G__117907 = (function (){var G__117985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117986 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117985,G__117986) : tailrecursion.hoplon.span.call(null,G__117985,G__117986));
})();
var G__117908 = " ";
var G__117909 = (function (){var G__117987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117988 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117987,G__117988) : tailrecursion.hoplon.span.call(null,G__117987,G__117988));
})();
var G__117910 = "))\n        ";
var G__117911 = (function (){var G__117989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117990 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117989,G__117990) : tailrecursion.hoplon.span.call(null,G__117989,G__117990));
})();
var G__117912 = " (";
var G__117913 = (function (){var G__117991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__117992 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117991,G__117992) : tailrecursion.hoplon.span.call(null,G__117991,G__117992));
})();
var G__117914 = "(";
var G__117915 = (function (){var G__117993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117994 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117993,G__117994) : tailrecursion.hoplon.span.call(null,G__117993,G__117994));
})();
var G__117916 = " ";
var G__117917 = (function (){var G__117995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__117996 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117995,G__117996) : tailrecursion.hoplon.span.call(null,G__117995,G__117996));
})();
var G__117918 = ") (";
var G__117919 = (function (){var G__117997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__117998 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117997,G__117998) : tailrecursion.hoplon.span.call(null,G__117997,G__117998));
})();
var G__117920 = " ";
var G__117921 = (function (){var G__117999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118000 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__117999,G__118000) : tailrecursion.hoplon.span.call(null,G__117999,G__118000));
})();
var G__117922 = "))\n        ";
var G__117923 = (function (){var G__118001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118002 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118001,G__118002) : tailrecursion.hoplon.span.call(null,G__118001,G__118002));
})();
var G__117924 = " (";
var G__117925 = (function (){var G__118003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118004 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118003,G__118004) : tailrecursion.hoplon.span.call(null,G__118003,G__118004));
})();
var G__117926 = "(";
var G__117927 = (function (){var G__118005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118006 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118005,G__118006) : tailrecursion.hoplon.span.call(null,G__118005,G__118006));
})();
var G__117928 = " ";
var G__117929 = (function (){var G__118007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118008 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118007,G__118008) : tailrecursion.hoplon.span.call(null,G__118007,G__118008));
})();
var G__117930 = ") (";
var G__117931 = (function (){var G__118009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118010 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118009,G__118010) : tailrecursion.hoplon.span.call(null,G__118009,G__118010));
})();
var G__117932 = " ";
var G__117933 = (function (){var G__118011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118012 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118011,G__118012) : tailrecursion.hoplon.span.call(null,G__118011,G__118012));
})();
var G__117934 = "))\n        ";
var G__117935 = (function (){var G__118013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118014 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118013,G__118014) : tailrecursion.hoplon.span.call(null,G__118013,G__118014));
})();
var G__117936 = " (";
var G__117937 = (function (){var G__118015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118016 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118015,G__118016) : tailrecursion.hoplon.span.call(null,G__118015,G__118016));
})();
var G__117938 = "(";
var G__117939 = (function (){var G__118017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118018 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118017,G__118018) : tailrecursion.hoplon.span.call(null,G__118017,G__118018));
})();
var G__117940 = " ";
var G__117941 = (function (){var G__118019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118020 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118019,G__118020) : tailrecursion.hoplon.span.call(null,G__118019,G__118020));
})();
var G__117942 = ") (";
var G__117943 = (function (){var G__118021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118022 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118021,G__118022) : tailrecursion.hoplon.span.call(null,G__118021,G__118022));
})();
var G__117944 = " ";
var G__117945 = (function (){var G__118023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118024 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118023,G__118024) : tailrecursion.hoplon.span.call(null,G__118023,G__118024));
})();
var G__117946 = "))]\n    (";
var G__117947 = (function (){var G__118025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118026 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118025,G__118026) : tailrecursion.hoplon.span.call(null,G__118025,G__118026));
})();
var G__117948 = " (";
var G__117949 = (function (){var G__118027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118028 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118027,G__118028) : tailrecursion.hoplon.span.call(null,G__118027,G__118028));
})();
var G__117950 = (function (){var G__118029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118030 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118029,G__118030) : tailrecursion.hoplon.span.call(null,G__118029,G__118030));
})();
var G__117951 = " ";
var G__117952 = (function (){var G__118031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118032 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118031,G__118032) : tailrecursion.hoplon.span.call(null,G__118031,G__118032));
})();
var G__117953 = " ";
var G__117954 = (function (){var G__118033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118034 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118033,G__118034) : tailrecursion.hoplon.span.call(null,G__118033,G__118034));
})();
var G__117955 = " ";
var G__117956 = (function (){var G__118035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118036 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118035,G__118036) : tailrecursion.hoplon.span.call(null,G__118035,G__118036));
})();
var G__117957 = ")\n                   (";
var G__117958 = (function (){var G__118037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118038 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118037,G__118038) : tailrecursion.hoplon.span.call(null,G__118037,G__118038));
})();
var G__117959 = (function (){var G__118039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118040 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118039,G__118040) : tailrecursion.hoplon.span.call(null,G__118039,G__118040));
})();
var G__117960 = " ";
var G__117961 = (function (){var G__118041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118042 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118041,G__118042) : tailrecursion.hoplon.span.call(null,G__118041,G__118042));
})();
var G__117962 = " ";
var G__117963 = (function (){var G__118043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118044 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118043,G__118044) : tailrecursion.hoplon.span.call(null,G__118043,G__118044));
})();
var G__117964 = " ";
var G__117965 = (function (){var G__118045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118046 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118045,G__118046) : tailrecursion.hoplon.span.call(null,G__118045,G__118046));
})();
var G__117966 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__117888,G__117889,G__117890,G__117891,G__117892,G__117893,G__117894,G__117895,G__117896,G__117897,G__117898,G__117899,G__117900,G__117901,G__117902,G__117903,G__117904,G__117905,G__117906,G__117907,G__117908,G__117909,G__117910,G__117911,G__117912,G__117913,G__117914,G__117915,G__117916,G__117917,G__117918,G__117919,G__117920,G__117921,G__117922,G__117923,G__117924,G__117925,G__117926,G__117927,G__117928,G__117929,G__117930,G__117931,G__117932,G__117933,G__117934,G__117935,G__117936,G__117937,G__117938,G__117939,G__117940,G__117941,G__117942,G__117943,G__117944,G__117945,G__117946,G__117947,G__117948,G__117949,G__117950,G__117951,G__117952,G__117953,G__117954,G__117955,G__117956,G__117957,G__117958,G__117959,G__117960,G__117961,G__117962,G__117963,G__117964,G__117965,G__117966) : tailrecursion.hoplon.pre.call(null,G__117888,G__117889,G__117890,G__117891,G__117892,G__117893,G__117894,G__117895,G__117896,G__117897,G__117898,G__117899,G__117900,G__117901,G__117902,G__117903,G__117904,G__117905,G__117906,G__117907,G__117908,G__117909,G__117910,G__117911,G__117912,G__117913,G__117914,G__117915,G__117916,G__117917,G__117918,G__117919,G__117920,G__117921,G__117922,G__117923,G__117924,G__117925,G__117926,G__117927,G__117928,G__117929,G__117930,G__117931,G__117932,G__117933,G__117934,G__117935,G__117936,G__117937,G__117938,G__117939,G__117940,G__117941,G__117942,G__117943,G__117944,G__117945,G__117946,G__117947,G__117948,G__117949,G__117950,G__117951,G__117952,G__117953,G__117954,G__117955,G__117956,G__117957,G__117958,G__117959,G__117960,G__117961,G__117962,G__117963,G__117964,G__117965,G__117966));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__117886,G__117887) : tailrecursion.hoplon.div.call(null,G__117886,G__117887));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__117885) : tailrecursion.hoplon.div.call(null,G__117885));
})(),(function (){var G__118047 = cljs.core.PersistentArrayMap.EMPTY;
var G__118048 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118047,G__118048) : tailrecursion.hoplon.markdown.para_node.call(null,G__118047,G__118048));
})(),(function (){var G__118049 = (function (){var G__118050 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__118051 = (function (){var G__118052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__118053 = "(";
var G__118054 = (function (){var G__118081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118082 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118081,G__118082) : tailrecursion.hoplon.span.call(null,G__118081,G__118082));
})();
var G__118055 = (function (){var G__118083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118084 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118083,G__118084) : tailrecursion.hoplon.span.call(null,G__118083,G__118084));
})();
var G__118056 = " [";
var G__118057 = (function (){var G__118085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118086 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118085,G__118086) : tailrecursion.hoplon.span.call(null,G__118085,G__118086));
})();
var G__118058 = " ";
var G__118059 = (function (){var G__118087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118088 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118087,G__118088) : tailrecursion.hoplon.span.call(null,G__118087,G__118088));
})();
var G__118060 = "]\n  (";
var G__118061 = (function (){var G__118089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118090 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118089,G__118090) : tailrecursion.hoplon.span.call(null,G__118089,G__118090));
})();
var G__118062 = " ";
var G__118063 = (function (){var G__118091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118092 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118091,G__118092) : tailrecursion.hoplon.span.call(null,G__118091,G__118092));
})();
var G__118064 = "\n                (";
var G__118065 = (function (){var G__118093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118094 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118093,G__118094) : tailrecursion.hoplon.span.call(null,G__118093,G__118094));
})();
var G__118066 = " (";
var G__118067 = (function (){var G__118095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118096 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118095,G__118096) : tailrecursion.hoplon.span.call(null,G__118095,G__118096));
})();
var G__118068 = (function (){var G__118097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118098 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118097,G__118098) : tailrecursion.hoplon.span.call(null,G__118097,G__118098));
})();
var G__118069 = " (";
var G__118070 = (function (){var G__118099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118100 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118099,G__118100) : tailrecursion.hoplon.span.call(null,G__118099,G__118100));
})();
var G__118071 = " ";
var G__118072 = (function (){var G__118101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118102 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118101,G__118102) : tailrecursion.hoplon.span.call(null,G__118101,G__118102));
})();
var G__118073 = "))\n                               (";
var G__118074 = (function (){var G__118103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118104 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118103,G__118104) : tailrecursion.hoplon.span.call(null,G__118103,G__118104));
})();
var G__118075 = (function (){var G__118105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118106 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118105,G__118106) : tailrecursion.hoplon.span.call(null,G__118105,G__118106));
})();
var G__118076 = " (";
var G__118077 = (function (){var G__118107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118108 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118107,G__118108) : tailrecursion.hoplon.span.call(null,G__118107,G__118108));
})();
var G__118078 = " ";
var G__118079 = (function (){var G__118109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118110 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118109,G__118110) : tailrecursion.hoplon.span.call(null,G__118109,G__118110));
})();
var G__118080 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__118052,G__118053,G__118054,G__118055,G__118056,G__118057,G__118058,G__118059,G__118060,G__118061,G__118062,G__118063,G__118064,G__118065,G__118066,G__118067,G__118068,G__118069,G__118070,G__118071,G__118072,G__118073,G__118074,G__118075,G__118076,G__118077,G__118078,G__118079,G__118080) : tailrecursion.hoplon.pre.call(null,G__118052,G__118053,G__118054,G__118055,G__118056,G__118057,G__118058,G__118059,G__118060,G__118061,G__118062,G__118063,G__118064,G__118065,G__118066,G__118067,G__118068,G__118069,G__118070,G__118071,G__118072,G__118073,G__118074,G__118075,G__118076,G__118077,G__118078,G__118079,G__118080));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__118050,G__118051) : tailrecursion.hoplon.div.call(null,G__118050,G__118051));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__118049) : tailrecursion.hoplon.div.call(null,G__118049));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117788;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117787;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_117786;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_117785;
}})()], 0));
var G__114480 = "";
var G__114481 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118111 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118112 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118113 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118114 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118115 = cljs.core.PersistentArrayMap.EMPTY;
var G__118116 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__118117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118118 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118117,G__118118) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118117,G__118118));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118115,G__118116) : tailrecursion.hoplon.markdown.para_node.call(null,G__118115,G__118116));
})(),(function (){var G__118119 = (function (){var G__118120 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__118121 = (function (){var G__118122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__118123 = "(";
var G__118124 = (function (){var G__118136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118137 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118136,G__118137) : tailrecursion.hoplon.span.call(null,G__118136,G__118137));
})();
var G__118125 = (function (){var G__118138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118139 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118138,G__118139) : tailrecursion.hoplon.span.call(null,G__118138,G__118139));
})();
var G__118126 = " [";
var G__118127 = (function (){var G__118140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118141 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118140,G__118141) : tailrecursion.hoplon.span.call(null,G__118140,G__118141));
})();
var G__118128 = " ";
var G__118129 = (function (){var G__118142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118143 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118142,G__118143) : tailrecursion.hoplon.span.call(null,G__118142,G__118143));
})();
var G__118130 = "]\n  (";
var G__118131 = (function (){var G__118144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118145 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118144,G__118145) : tailrecursion.hoplon.span.call(null,G__118144,G__118145));
})();
var G__118132 = (function (){var G__118146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118147 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118146,G__118147) : tailrecursion.hoplon.span.call(null,G__118146,G__118147));
})();
var G__118133 = " ";
var G__118134 = (function (){var G__118148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118149 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118148,G__118149) : tailrecursion.hoplon.span.call(null,G__118148,G__118149));
})();
var G__118135 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__118122,G__118123,G__118124,G__118125,G__118126,G__118127,G__118128,G__118129,G__118130,G__118131,G__118132,G__118133,G__118134,G__118135) : tailrecursion.hoplon.pre.call(null,G__118122,G__118123,G__118124,G__118125,G__118126,G__118127,G__118128,G__118129,G__118130,G__118131,G__118132,G__118133,G__118134,G__118135));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__118120,G__118121) : tailrecursion.hoplon.div.call(null,G__118120,G__118121));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__118119) : tailrecursion.hoplon.div.call(null,G__118119));
})(),(function (){var G__118150 = cljs.core.PersistentArrayMap.EMPTY;
var G__118151 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__118152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"upper-bound"], null);
var G__118153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118152,G__118153) : tailrecursion.hoplon.markdown.code_node.call(null,G__118152,G__118153));
})()," and ",(function (){var G__118154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"lower-bound"], null);
var G__118155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118154,G__118155) : tailrecursion.hoplon.markdown.code_node.call(null,G__118154,G__118155));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118150,G__118151) : tailrecursion.hoplon.markdown.para_node.call(null,G__118150,G__118151));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118114;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118113;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118112;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118111;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118156 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118157 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118158 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118159 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118160 = (function (){var G__118161 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__118162 = (function (){var G__118163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__118164 = "(";
var G__118165 = (function (){var G__118181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118182 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118181,G__118182) : tailrecursion.hoplon.span.call(null,G__118181,G__118182));
})();
var G__118166 = (function (){var G__118183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118184 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118183,G__118184) : tailrecursion.hoplon.span.call(null,G__118183,G__118184));
})();
var G__118167 = " [";
var G__118168 = (function (){var G__118185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118186 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118185,G__118186) : tailrecursion.hoplon.span.call(null,G__118185,G__118186));
})();
var G__118169 = "]\n  (";
var G__118170 = (function (){var G__118187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118188 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118187,G__118188) : tailrecursion.hoplon.span.call(null,G__118187,G__118188));
})();
var G__118171 = (function (){var G__118189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118190 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118189,G__118190) : tailrecursion.hoplon.span.call(null,G__118189,G__118190));
})();
var G__118172 = "))\n(";
var G__118173 = (function (){var G__118191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118192 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118191,G__118192) : tailrecursion.hoplon.span.call(null,G__118191,G__118192));
})();
var G__118174 = (function (){var G__118193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118194 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118193,G__118194) : tailrecursion.hoplon.span.call(null,G__118193,G__118194));
})();
var G__118175 = " [";
var G__118176 = (function (){var G__118195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118196 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118195,G__118196) : tailrecursion.hoplon.span.call(null,G__118195,G__118196));
})();
var G__118177 = "]\n  (";
var G__118178 = (function (){var G__118197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118198 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118197,G__118198) : tailrecursion.hoplon.span.call(null,G__118197,G__118198));
})();
var G__118179 = (function (){var G__118199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118200 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118199,G__118200) : tailrecursion.hoplon.span.call(null,G__118199,G__118200));
})();
var G__118180 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__118163,G__118164,G__118165,G__118166,G__118167,G__118168,G__118169,G__118170,G__118171,G__118172,G__118173,G__118174,G__118175,G__118176,G__118177,G__118178,G__118179,G__118180) : tailrecursion.hoplon.pre.call(null,G__118163,G__118164,G__118165,G__118166,G__118167,G__118168,G__118169,G__118170,G__118171,G__118172,G__118173,G__118174,G__118175,G__118176,G__118177,G__118178,G__118179,G__118180));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__118161,G__118162) : tailrecursion.hoplon.div.call(null,G__118161,G__118162));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__118160) : tailrecursion.hoplon.div.call(null,G__118160));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118159;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118158;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118157;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118156;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118201 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118202 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118203 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118204 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118205 = cljs.core.PersistentArrayMap.EMPTY;
var G__118206 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__118207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118208 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118207,G__118208) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118207,G__118208));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__118209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-interval"], null);
var G__118210 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118209,G__118210) : tailrecursion.hoplon.markdown.code_node.call(null,G__118209,G__118210));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118205,G__118206) : tailrecursion.hoplon.markdown.para_node.call(null,G__118205,G__118206));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118204;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118203;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118202;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118201;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118211 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118212 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118213 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118214 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118215 = cljs.core.PersistentArrayMap.EMPTY;
var G__118216 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__118217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118218 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118217,G__118218) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118217,G__118218));
})(),"s, we",(function (){var G__118219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118220 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118219,G__118220) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118219,G__118220));
})(),"d define ",(function (){var G__118221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-interval"], null);
var G__118222 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118221,G__118222) : tailrecursion.hoplon.markdown.code_node.call(null,G__118221,G__118222));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118215,G__118216) : tailrecursion.hoplon.markdown.para_node.call(null,G__118215,G__118216));
})(),(function (){var G__118223 = (function (){var G__118224 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__118225 = (function (){var G__118226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__118227 = "(";
var G__118228 = (function (){var G__118257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118258 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118257,G__118258) : tailrecursion.hoplon.span.call(null,G__118257,G__118258));
})();
var G__118229 = (function (){var G__118259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118260 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118259,G__118260) : tailrecursion.hoplon.span.call(null,G__118259,G__118260));
})();
var G__118230 = " [";
var G__118231 = (function (){var G__118261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118262 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118261,G__118262) : tailrecursion.hoplon.span.call(null,G__118261,G__118262));
})();
var G__118232 = " ";
var G__118233 = (function (){var G__118263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118264 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118263,G__118264) : tailrecursion.hoplon.span.call(null,G__118263,G__118264));
})();
var G__118234 = "]\n  (";
var G__118235 = (function (){var G__118265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118266 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118265,G__118266) : tailrecursion.hoplon.span.call(null,G__118265,G__118266));
})();
var G__118236 = " (";
var G__118237 = (function (){var G__118267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118268 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118267,G__118268) : tailrecursion.hoplon.span.call(null,G__118267,G__118268));
})();
var G__118238 = "(";
var G__118239 = (function (){var G__118269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118270 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118269,G__118270) : tailrecursion.hoplon.span.call(null,G__118269,G__118270));
})();
var G__118240 = " ";
var G__118241 = (function (){var G__118271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118272 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118271,G__118272) : tailrecursion.hoplon.span.call(null,G__118271,G__118272));
})();
var G__118242 = ") (";
var G__118243 = (function (){var G__118273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118274 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118273,G__118274) : tailrecursion.hoplon.span.call(null,G__118273,G__118274));
})();
var G__118244 = " ";
var G__118245 = (function (){var G__118275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118276 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118275,G__118276) : tailrecursion.hoplon.span.call(null,G__118275,G__118276));
})();
var G__118246 = "))\n                 (";
var G__118247 = (function (){var G__118277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118278 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118277,G__118278) : tailrecursion.hoplon.span.call(null,G__118277,G__118278));
})();
var G__118248 = "(";
var G__118249 = (function (){var G__118279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118280 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118279,G__118280) : tailrecursion.hoplon.span.call(null,G__118279,G__118280));
})();
var G__118250 = " ";
var G__118251 = (function (){var G__118281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118282 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118281,G__118282) : tailrecursion.hoplon.span.call(null,G__118281,G__118282));
})();
var G__118252 = ") (";
var G__118253 = (function (){var G__118283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118284 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118283,G__118284) : tailrecursion.hoplon.span.call(null,G__118283,G__118284));
})();
var G__118254 = " ";
var G__118255 = (function (){var G__118285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118286 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118285,G__118286) : tailrecursion.hoplon.span.call(null,G__118285,G__118286));
})();
var G__118256 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__118226,G__118227,G__118228,G__118229,G__118230,G__118231,G__118232,G__118233,G__118234,G__118235,G__118236,G__118237,G__118238,G__118239,G__118240,G__118241,G__118242,G__118243,G__118244,G__118245,G__118246,G__118247,G__118248,G__118249,G__118250,G__118251,G__118252,G__118253,G__118254,G__118255,G__118256) : tailrecursion.hoplon.pre.call(null,G__118226,G__118227,G__118228,G__118229,G__118230,G__118231,G__118232,G__118233,G__118234,G__118235,G__118236,G__118237,G__118238,G__118239,G__118240,G__118241,G__118242,G__118243,G__118244,G__118245,G__118246,G__118247,G__118248,G__118249,G__118250,G__118251,G__118252,G__118253,G__118254,G__118255,G__118256));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__118224,G__118225) : tailrecursion.hoplon.div.call(null,G__118224,G__118225));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__118223) : tailrecursion.hoplon.div.call(null,G__118223));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118214;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118213;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118212;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118211;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118287 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118288 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118291 = cljs.core.PersistentArrayMap.EMPTY;
var G__118292 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118291,G__118292) : tailrecursion.hoplon.markdown.para_node.call(null,G__118291,G__118292));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118289;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118288;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118287;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118293 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118294 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118295 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118296 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118297 = cljs.core.PersistentArrayMap.EMPTY;
var G__118298 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__118299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118299,G__118300) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118299,G__118300));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__118301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(add-interval x y)"], null);
var G__118302 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118301,G__118302) : tailrecursion.hoplon.markdown.code_node.call(null,G__118301,G__118302));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118297,G__118298) : tailrecursion.hoplon.markdown.para_node.call(null,G__118297,G__118298));
})(),(function (){var G__118303 = cljs.core.PersistentArrayMap.EMPTY;
var G__118304 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__118305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(sub-interval a b)"], null);
var G__118306 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118305,G__118306) : tailrecursion.hoplon.markdown.code_node.call(null,G__118305,G__118306));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118303,G__118304) : tailrecursion.hoplon.markdown.para_node.call(null,G__118303,G__118304));
})(),(function (){var G__118307 = cljs.core.PersistentArrayMap.EMPTY;
var G__118308 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118307,G__118308) : tailrecursion.hoplon.markdown.para_node.call(null,G__118307,G__118308));
})(),(function (){var G__118309 = cljs.core.PersistentArrayMap.EMPTY;
var G__118310 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118309,G__118310) : tailrecursion.hoplon.markdown.para_node.call(null,G__118309,G__118310));
})(),(function (){var G__118311 = cljs.core.PersistentArrayMap.EMPTY;
var G__118312 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__118313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118313,G__118314) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118313,G__118314));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118311,G__118312) : tailrecursion.hoplon.markdown.para_node.call(null,G__118311,G__118312));
})(),(function (){var G__118315 = cljs.core.PersistentArrayMap.EMPTY;
var G__118316 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118315,G__118316) : tailrecursion.hoplon.markdown.para_node.call(null,G__118315,G__118316));
})(),(function (){var G__118317 = cljs.core.PersistentArrayMap.EMPTY;
var G__118318 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__118319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(width\n(mul-interval a b))"], null);
var G__118320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118319,G__118320) : tailrecursion.hoplon.markdown.code_node.call(null,G__118319,G__118320));
})()," is 2, but ",(function (){var G__118321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(width (mul-interval c d))"], null);
var G__118322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118321,G__118322) : tailrecursion.hoplon.markdown.code_node.call(null,G__118321,G__118322));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118317,G__118318) : tailrecursion.hoplon.markdown.para_node.call(null,G__118317,G__118318));
})(),(function (){var G__118323 = cljs.core.PersistentArrayMap.EMPTY;
var G__118324 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__118325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(div-interval a b)"], null);
var G__118326 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118325,G__118326) : tailrecursion.hoplon.markdown.code_node.call(null,G__118325,G__118326));
})()," is \\((1/2, 2)\\), but ",(function (){var G__118327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(div-interval c d)"], null);
var G__118328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__118327,G__118328) : tailrecursion.hoplon.markdown.code_node.call(null,G__118327,G__118328));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118323,G__118324) : tailrecursion.hoplon.markdown.para_node.call(null,G__118323,G__118324));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118296;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118295;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118294;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118293;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118331 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118332 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118333 = cljs.core.PersistentArrayMap.EMPTY;
var G__118334 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__118335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118336 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118335,G__118336) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118335,G__118336));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__118337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118337,G__118338) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118337,G__118338));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118333,G__118334) : tailrecursion.hoplon.markdown.para_node.call(null,G__118333,G__118334));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118332;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118331;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118329;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118339 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118340 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118341 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118342 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118343 = (function (){var G__118344 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__118345 = (function (){var G__118346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__118347 = "(";
var G__118348 = (function (){var G__118406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118407 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118406,G__118407) : tailrecursion.hoplon.span.call(null,G__118406,G__118407));
})();
var G__118349 = (function (){var G__118408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118409 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118408,G__118409) : tailrecursion.hoplon.span.call(null,G__118408,G__118409));
})();
var G__118350 = " [";
var G__118351 = (function (){var G__118410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118411 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118410,G__118411) : tailrecursion.hoplon.span.call(null,G__118410,G__118411));
})();
var G__118352 = " ";
var G__118353 = (function (){var G__118412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118413 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118412,G__118413) : tailrecursion.hoplon.span.call(null,G__118412,G__118413));
})();
var G__118354 = "]\n  (";
var G__118355 = (function (){var G__118414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118415 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118414,G__118415) : tailrecursion.hoplon.span.call(null,G__118414,G__118415));
})();
var G__118356 = "[";
var G__118357 = (function (){var G__118416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118417 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118416,G__118417) : tailrecursion.hoplon.span.call(null,G__118416,G__118417));
})();
var G__118358 = " ";
var G__118359 = (function (){var G__118418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118419 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118418,G__118419) : tailrecursion.hoplon.span.call(null,G__118418,G__118419));
})();
var G__118360 = "(";
var G__118361 = (function (){var G__118420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118421 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118420,G__118421) : tailrecursion.hoplon.span.call(null,G__118420,G__118421));
})();
var G__118362 = (function (){var G__118422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118423 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118422,G__118423) : tailrecursion.hoplon.span.call(null,G__118422,G__118423));
})();
var G__118363 = "\n                       (";
var G__118364 = (function (){var G__118424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118425 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118424,G__118425) : tailrecursion.hoplon.span.call(null,G__118424,G__118425));
})();
var G__118365 = "(";
var G__118366 = (function (){var G__118426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118427 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118426,G__118427) : tailrecursion.hoplon.span.call(null,G__118426,G__118427));
})();
var G__118367 = " ";
var G__118368 = (function (){var G__118428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118429 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118428,G__118429) : tailrecursion.hoplon.span.call(null,G__118428,G__118429));
})();
var G__118369 = ")\n                          (";
var G__118370 = (function (){var G__118430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118431 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118430,G__118431) : tailrecursion.hoplon.span.call(null,G__118430,G__118431));
})();
var G__118371 = " ";
var G__118372 = (function (){var G__118432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118433 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118432,G__118433) : tailrecursion.hoplon.span.call(null,G__118432,G__118433));
})();
var G__118373 = ")))]\n    (";
var G__118374 = (function (){var G__118434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118435 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118434,G__118435) : tailrecursion.hoplon.span.call(null,G__118434,G__118435));
})();
var G__118375 = "(";
var G__118376 = (function (){var G__118436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118437 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118436,G__118437) : tailrecursion.hoplon.span.call(null,G__118436,G__118437));
})();
var G__118377 = " ";
var G__118378 = (function (){var G__118438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118439 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118438,G__118439) : tailrecursion.hoplon.span.call(null,G__118438,G__118439));
})();
var G__118379 = ")\n        (";
var G__118380 = (function (){var G__118440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118441 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118440,G__118441) : tailrecursion.hoplon.span.call(null,G__118440,G__118441));
})();
var G__118381 = " (";
var G__118382 = (function (){var G__118442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118443 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118442,G__118443) : tailrecursion.hoplon.span.call(null,G__118442,G__118443));
})();
var G__118383 = " ";
var G__118384 = (function (){var G__118444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__118445 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118444,G__118445) : tailrecursion.hoplon.span.call(null,G__118444,G__118445));
})();
var G__118385 = "))\n        (";
var G__118386 = (function (){var G__118446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118447 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118446,G__118447) : tailrecursion.hoplon.span.call(null,G__118446,G__118447));
})();
var G__118387 = " ";
var G__118388 = (function (){var G__118448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118449 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118448,G__118449) : tailrecursion.hoplon.span.call(null,G__118448,G__118449));
})();
var G__118389 = "\n                      (";
var G__118390 = (function (){var G__118450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118451 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118450,G__118451) : tailrecursion.hoplon.span.call(null,G__118450,G__118451));
})();
var G__118391 = " (";
var G__118392 = (function (){var G__118452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118453 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118452,G__118453) : tailrecursion.hoplon.span.call(null,G__118452,G__118453));
})();
var G__118393 = (function (){var G__118454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118455 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118454,G__118455) : tailrecursion.hoplon.span.call(null,G__118454,G__118455));
})();
var G__118394 = " (";
var G__118395 = (function (){var G__118456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118457 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118456,G__118457) : tailrecursion.hoplon.span.call(null,G__118456,G__118457));
})();
var G__118396 = " ";
var G__118397 = (function (){var G__118458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118459 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118458,G__118459) : tailrecursion.hoplon.span.call(null,G__118458,G__118459));
})();
var G__118398 = "))\n                                     (";
var G__118399 = (function (){var G__118460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118461 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118460,G__118461) : tailrecursion.hoplon.span.call(null,G__118460,G__118461));
})();
var G__118400 = (function (){var G__118462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118463 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118462,G__118463) : tailrecursion.hoplon.span.call(null,G__118462,G__118463));
})();
var G__118401 = " (";
var G__118402 = (function (){var G__118464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118465 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118464,G__118465) : tailrecursion.hoplon.span.call(null,G__118464,G__118465));
})();
var G__118403 = " ";
var G__118404 = (function (){var G__118466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118467 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118466,G__118467) : tailrecursion.hoplon.span.call(null,G__118466,G__118467));
})();
var G__118405 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__118346,G__118347,G__118348,G__118349,G__118350,G__118351,G__118352,G__118353,G__118354,G__118355,G__118356,G__118357,G__118358,G__118359,G__118360,G__118361,G__118362,G__118363,G__118364,G__118365,G__118366,G__118367,G__118368,G__118369,G__118370,G__118371,G__118372,G__118373,G__118374,G__118375,G__118376,G__118377,G__118378,G__118379,G__118380,G__118381,G__118382,G__118383,G__118384,G__118385,G__118386,G__118387,G__118388,G__118389,G__118390,G__118391,G__118392,G__118393,G__118394,G__118395,G__118396,G__118397,G__118398,G__118399,G__118400,G__118401,G__118402,G__118403,G__118404,G__118405) : tailrecursion.hoplon.pre.call(null,G__118346,G__118347,G__118348,G__118349,G__118350,G__118351,G__118352,G__118353,G__118354,G__118355,G__118356,G__118357,G__118358,G__118359,G__118360,G__118361,G__118362,G__118363,G__118364,G__118365,G__118366,G__118367,G__118368,G__118369,G__118370,G__118371,G__118372,G__118373,G__118374,G__118375,G__118376,G__118377,G__118378,G__118379,G__118380,G__118381,G__118382,G__118383,G__118384,G__118385,G__118386,G__118387,G__118388,G__118389,G__118390,G__118391,G__118392,G__118393,G__118394,G__118395,G__118396,G__118397,G__118398,G__118399,G__118400,G__118401,G__118402,G__118403,G__118404,G__118405));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__118344,G__118345) : tailrecursion.hoplon.div.call(null,G__118344,G__118345));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__118343) : tailrecursion.hoplon.div.call(null,G__118343));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118342;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118341;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118340;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118339;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118468 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118469 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118470 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118471 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118472 = cljs.core.PersistentArrayMap.EMPTY;
var G__118473 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__118474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__118475 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__118474,G__118475) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__118474,G__118475));
})()," Rewrite this procedure using Ben",(function (){var G__118476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__118477 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__118476,G__118477) : tailrecursion.hoplon.markdown.simple_node.call(null,G__118476,G__118477));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__118472,G__118473) : tailrecursion.hoplon.markdown.para_node.call(null,G__118472,G__118473));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118471;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118470;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118469;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118468;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_118478 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118479 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_118480 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_118481 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__118482 = (function (){var G__118483 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__118484 = (function (){var G__118485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__118486 = "(";
var G__118487 = (function (){var G__118816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__118817 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118816,G__118817) : tailrecursion.hoplon.span.call(null,G__118816,G__118817));
})();
var G__118488 = (function (){var G__118818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118819 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118818,G__118819) : tailrecursion.hoplon.span.call(null,G__118818,G__118819));
})();
var G__118489 = " [";
var G__118490 = (function (){var G__118820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118821 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118820,G__118821) : tailrecursion.hoplon.span.call(null,G__118820,G__118821));
})();
var G__118491 = " ";
var G__118492 = (function (){var G__118822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118823 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118822,G__118823) : tailrecursion.hoplon.span.call(null,G__118822,G__118823));
})();
var G__118493 = "]\n  (";
var G__118494 = (function (){var G__118824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118825 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118824,G__118825) : tailrecursion.hoplon.span.call(null,G__118824,G__118825));
})();
var G__118495 = "(";
var G__118496 = (function (){var G__118826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118827 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118826,G__118827) : tailrecursion.hoplon.span.call(null,G__118826,G__118827));
})();
var G__118497 = "(";
var G__118498 = (function (){var G__118828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118829 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118828,G__118829) : tailrecursion.hoplon.span.call(null,G__118828,G__118829));
})();
var G__118499 = " ";
var G__118500 = (function (){var G__118830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118831 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118830,G__118831) : tailrecursion.hoplon.span.call(null,G__118830,G__118831));
})();
var G__118501 = ") ";
var G__118502 = (function (){var G__118832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118833 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118832,G__118833) : tailrecursion.hoplon.span.call(null,G__118832,G__118833));
})();
var G__118503 = ")\n        (";
var G__118504 = (function (){var G__118834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118835 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118834,G__118835) : tailrecursion.hoplon.span.call(null,G__118834,G__118835));
})();
var G__118505 = "(";
var G__118506 = (function (){var G__118836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118837 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118836,G__118837) : tailrecursion.hoplon.span.call(null,G__118836,G__118837));
})();
var G__118507 = "(";
var G__118508 = (function (){var G__118838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118839 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118838,G__118839) : tailrecursion.hoplon.span.call(null,G__118838,G__118839));
})();
var G__118509 = " ";
var G__118510 = (function (){var G__118840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118841 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118840,G__118841) : tailrecursion.hoplon.span.call(null,G__118840,G__118841));
})();
var G__118511 = ") ";
var G__118512 = (function (){var G__118842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118843 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118842,G__118843) : tailrecursion.hoplon.span.call(null,G__118842,G__118843));
})();
var G__118513 = ")\n              (";
var G__118514 = (function (){var G__118844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118845 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118844,G__118845) : tailrecursion.hoplon.span.call(null,G__118844,G__118845));
})();
var G__118515 = " (";
var G__118516 = (function (){var G__118846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118847 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118846,G__118847) : tailrecursion.hoplon.span.call(null,G__118846,G__118847));
})();
var G__118517 = "(";
var G__118518 = (function (){var G__118848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118849 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118848,G__118849) : tailrecursion.hoplon.span.call(null,G__118848,G__118849));
})();
var G__118519 = " ";
var G__118520 = (function (){var G__118850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118851 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118850,G__118851) : tailrecursion.hoplon.span.call(null,G__118850,G__118851));
})();
var G__118521 = ")\n                                (";
var G__118522 = (function (){var G__118852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118853 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118852,G__118853) : tailrecursion.hoplon.span.call(null,G__118852,G__118853));
})();
var G__118523 = " ";
var G__118524 = (function (){var G__118854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118855 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118854,G__118855) : tailrecursion.hoplon.span.call(null,G__118854,G__118855));
})();
var G__118525 = "))\n                             (";
var G__118526 = (function (){var G__118856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118857 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118856,G__118857) : tailrecursion.hoplon.span.call(null,G__118856,G__118857));
})();
var G__118527 = "(";
var G__118528 = (function (){var G__118858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118859 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118858,G__118859) : tailrecursion.hoplon.span.call(null,G__118858,G__118859));
})();
var G__118529 = " ";
var G__118530 = (function (){var G__118860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118861 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118860,G__118861) : tailrecursion.hoplon.span.call(null,G__118860,G__118861));
})();
var G__118531 = ")\n                                (";
var G__118532 = (function (){var G__118862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118863 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118862,G__118863) : tailrecursion.hoplon.span.call(null,G__118862,G__118863));
})();
var G__118533 = " ";
var G__118534 = (function (){var G__118864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118865 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118864,G__118865) : tailrecursion.hoplon.span.call(null,G__118864,G__118865));
})();
var G__118535 = ")))\n              (";
var G__118536 = (function (){var G__118866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118867 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118866,G__118867) : tailrecursion.hoplon.span.call(null,G__118866,G__118867));
})();
var G__118537 = (function (){var G__118868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118869 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118868,G__118869) : tailrecursion.hoplon.span.call(null,G__118868,G__118869));
})();
var G__118538 = " (";
var G__118539 = (function (){var G__118870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118871 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118870,G__118871) : tailrecursion.hoplon.span.call(null,G__118870,G__118871));
})();
var G__118540 = " ";
var G__118541 = (function (){var G__118872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118873 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118872,G__118873) : tailrecursion.hoplon.span.call(null,G__118872,G__118873));
})();
var G__118542 = "))\n              (";
var G__118543 = (function (){var G__118874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118875 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118874,G__118875) : tailrecursion.hoplon.span.call(null,G__118874,G__118875));
})();
var G__118544 = " (";
var G__118545 = (function (){var G__118876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118877 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118876,G__118877) : tailrecursion.hoplon.span.call(null,G__118876,G__118877));
})();
var G__118546 = "(";
var G__118547 = (function (){var G__118878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118879 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118878,G__118879) : tailrecursion.hoplon.span.call(null,G__118878,G__118879));
})();
var G__118548 = " ";
var G__118549 = (function (){var G__118880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118881 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118880,G__118881) : tailrecursion.hoplon.span.call(null,G__118880,G__118881));
})();
var G__118550 = ")\n                                (";
var G__118551 = (function (){var G__118882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118883 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118882,G__118883) : tailrecursion.hoplon.span.call(null,G__118882,G__118883));
})();
var G__118552 = " ";
var G__118553 = (function (){var G__118884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118885 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118884,G__118885) : tailrecursion.hoplon.span.call(null,G__118884,G__118885));
})();
var G__118554 = "))\n                             (";
var G__118555 = (function (){var G__118886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118887 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118886,G__118887) : tailrecursion.hoplon.span.call(null,G__118886,G__118887));
})();
var G__118556 = "(";
var G__118557 = (function (){var G__118888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118889 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118888,G__118889) : tailrecursion.hoplon.span.call(null,G__118888,G__118889));
})();
var G__118558 = " ";
var G__118559 = (function (){var G__118890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118891 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118890,G__118891) : tailrecursion.hoplon.span.call(null,G__118890,G__118891));
})();
var G__118560 = ")\n                                (";
var G__118561 = (function (){var G__118892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118893 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118892,G__118893) : tailrecursion.hoplon.span.call(null,G__118892,G__118893));
})();
var G__118562 = " ";
var G__118563 = (function (){var G__118894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118895 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118894,G__118895) : tailrecursion.hoplon.span.call(null,G__118894,G__118895));
})();
var G__118564 = ")))\n              ";
var G__118565 = (function (){var G__118896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118897 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118896,G__118897) : tailrecursion.hoplon.span.call(null,G__118896,G__118897));
})();
var G__118566 = " \n              (";
var G__118567 = (function (){var G__118898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118899 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118898,G__118899) : tailrecursion.hoplon.span.call(null,G__118898,G__118899));
})();
var G__118568 = " (";
var G__118569 = (function (){var G__118900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118901 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118900,G__118901) : tailrecursion.hoplon.span.call(null,G__118900,G__118901));
})();
var G__118570 = "(";
var G__118571 = (function (){var G__118902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118903 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118902,G__118903) : tailrecursion.hoplon.span.call(null,G__118902,G__118903));
})();
var G__118572 = " ";
var G__118573 = (function (){var G__118904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118905 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118904,G__118905) : tailrecursion.hoplon.span.call(null,G__118904,G__118905));
})();
var G__118574 = ")\n                                (";
var G__118575 = (function (){var G__118906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118907 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118906,G__118907) : tailrecursion.hoplon.span.call(null,G__118906,G__118907));
})();
var G__118576 = " ";
var G__118577 = (function (){var G__118908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118909 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118908,G__118909) : tailrecursion.hoplon.span.call(null,G__118908,G__118909));
})();
var G__118578 = "))\n                             (";
var G__118579 = (function (){var G__118910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118911 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118910,G__118911) : tailrecursion.hoplon.span.call(null,G__118910,G__118911));
})();
var G__118580 = "(";
var G__118581 = (function (){var G__118912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118913 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118912,G__118913) : tailrecursion.hoplon.span.call(null,G__118912,G__118913));
})();
var G__118582 = " ";
var G__118583 = (function (){var G__118914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118915 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118914,G__118915) : tailrecursion.hoplon.span.call(null,G__118914,G__118915));
})();
var G__118584 = ")\n                                (";
var G__118585 = (function (){var G__118916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118917 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118916,G__118917) : tailrecursion.hoplon.span.call(null,G__118916,G__118917));
})();
var G__118586 = " ";
var G__118587 = (function (){var G__118918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118919 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118918,G__118919) : tailrecursion.hoplon.span.call(null,G__118918,G__118919));
})();
var G__118588 = "))))\n        (";
var G__118589 = (function (){var G__118920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118921 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118920,G__118921) : tailrecursion.hoplon.span.call(null,G__118920,G__118921));
})();
var G__118590 = (function (){var G__118922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118923 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118922,G__118923) : tailrecursion.hoplon.span.call(null,G__118922,G__118923));
})();
var G__118591 = " (";
var G__118592 = (function (){var G__118924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118925 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118924,G__118925) : tailrecursion.hoplon.span.call(null,G__118924,G__118925));
})();
var G__118593 = " ";
var G__118594 = (function (){var G__118926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118927 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118926,G__118927) : tailrecursion.hoplon.span.call(null,G__118926,G__118927));
})();
var G__118595 = "))\n        (";
var G__118596 = (function (){var G__118928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118929 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118928,G__118929) : tailrecursion.hoplon.span.call(null,G__118928,G__118929));
})();
var G__118597 = "(";
var G__118598 = (function (){var G__118930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118931 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118930,G__118931) : tailrecursion.hoplon.span.call(null,G__118930,G__118931));
})();
var G__118599 = "(";
var G__118600 = (function (){var G__118932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118933 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118932,G__118933) : tailrecursion.hoplon.span.call(null,G__118932,G__118933));
})();
var G__118601 = " ";
var G__118602 = (function (){var G__118934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118935 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118934,G__118935) : tailrecursion.hoplon.span.call(null,G__118934,G__118935));
})();
var G__118603 = ") ";
var G__118604 = (function (){var G__118936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118937 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118936,G__118937) : tailrecursion.hoplon.span.call(null,G__118936,G__118937));
})();
var G__118605 = ")\n              (";
var G__118606 = (function (){var G__118938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118939 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118938,G__118939) : tailrecursion.hoplon.span.call(null,G__118938,G__118939));
})();
var G__118607 = " (";
var G__118608 = (function (){var G__118940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118941 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118940,G__118941) : tailrecursion.hoplon.span.call(null,G__118940,G__118941));
})();
var G__118609 = "(";
var G__118610 = (function (){var G__118942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118943 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118942,G__118943) : tailrecursion.hoplon.span.call(null,G__118942,G__118943));
})();
var G__118611 = " ";
var G__118612 = (function (){var G__118944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118945 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118944,G__118945) : tailrecursion.hoplon.span.call(null,G__118944,G__118945));
})();
var G__118613 = ")\n                                (";
var G__118614 = (function (){var G__118946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118947 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118946,G__118947) : tailrecursion.hoplon.span.call(null,G__118946,G__118947));
})();
var G__118615 = " ";
var G__118616 = (function (){var G__118948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118949 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118948,G__118949) : tailrecursion.hoplon.span.call(null,G__118948,G__118949));
})();
var G__118617 = "))\n                             (";
var G__118618 = (function (){var G__118950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118951 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118950,G__118951) : tailrecursion.hoplon.span.call(null,G__118950,G__118951));
})();
var G__118619 = "(";
var G__118620 = (function (){var G__118952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118953 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118952,G__118953) : tailrecursion.hoplon.span.call(null,G__118952,G__118953));
})();
var G__118621 = " ";
var G__118622 = (function (){var G__118954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118955 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118954,G__118955) : tailrecursion.hoplon.span.call(null,G__118954,G__118955));
})();
var G__118623 = ")\n                                (";
var G__118624 = (function (){var G__118956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118957 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118956,G__118957) : tailrecursion.hoplon.span.call(null,G__118956,G__118957));
})();
var G__118625 = " ";
var G__118626 = (function (){var G__118958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118959 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118958,G__118959) : tailrecursion.hoplon.span.call(null,G__118958,G__118959));
})();
var G__118627 = ")))\n              (";
var G__118628 = (function (){var G__118960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118961 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118960,G__118961) : tailrecursion.hoplon.span.call(null,G__118960,G__118961));
})();
var G__118629 = (function (){var G__118962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__118963 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118962,G__118963) : tailrecursion.hoplon.span.call(null,G__118962,G__118963));
})();
var G__118630 = " (";
var G__118631 = (function (){var G__118964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118965 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118964,G__118965) : tailrecursion.hoplon.span.call(null,G__118964,G__118965));
})();
var G__118632 = " ";
var G__118633 = (function (){var G__118966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118967 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118966,G__118967) : tailrecursion.hoplon.span.call(null,G__118966,G__118967));
})();
var G__118634 = "))\n              (";
var G__118635 = (function (){var G__118968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118969 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118968,G__118969) : tailrecursion.hoplon.span.call(null,G__118968,G__118969));
})();
var G__118636 = " (";
var G__118637 = (function (){var G__118970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118971 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118970,G__118971) : tailrecursion.hoplon.span.call(null,G__118970,G__118971));
})();
var G__118638 = "(";
var G__118639 = (function (){var G__118972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118973 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118972,G__118973) : tailrecursion.hoplon.span.call(null,G__118972,G__118973));
})();
var G__118640 = " ";
var G__118641 = (function (){var G__118974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118975 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118974,G__118975) : tailrecursion.hoplon.span.call(null,G__118974,G__118975));
})();
var G__118642 = ")\n                                (";
var G__118643 = (function (){var G__118976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118977 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118976,G__118977) : tailrecursion.hoplon.span.call(null,G__118976,G__118977));
})();
var G__118644 = " ";
var G__118645 = (function (){var G__118978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118979 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118978,G__118979) : tailrecursion.hoplon.span.call(null,G__118978,G__118979));
})();
var G__118646 = "))\n                             (";
var G__118647 = (function (){var G__118980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118981 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118980,G__118981) : tailrecursion.hoplon.span.call(null,G__118980,G__118981));
})();
var G__118648 = "(";
var G__118649 = (function (){var G__118982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118983 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118982,G__118983) : tailrecursion.hoplon.span.call(null,G__118982,G__118983));
})();
var G__118650 = " ";
var G__118651 = (function (){var G__118984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118985 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118984,G__118985) : tailrecursion.hoplon.span.call(null,G__118984,G__118985));
})();
var G__118652 = ")\n                                (";
var G__118653 = (function (){var G__118986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118987 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118986,G__118987) : tailrecursion.hoplon.span.call(null,G__118986,G__118987));
})();
var G__118654 = " ";
var G__118655 = (function (){var G__118988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118989 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118988,G__118989) : tailrecursion.hoplon.span.call(null,G__118988,G__118989));
})();
var G__118656 = ")))\n              ";
var G__118657 = (function (){var G__118990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118991 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118990,G__118991) : tailrecursion.hoplon.span.call(null,G__118990,G__118991));
})();
var G__118658 = " \n              (";
var G__118659 = (function (){var G__118992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118993 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118992,G__118993) : tailrecursion.hoplon.span.call(null,G__118992,G__118993));
})();
var G__118660 = " (";
var G__118661 = (function (){var G__118994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__118995 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118994,G__118995) : tailrecursion.hoplon.span.call(null,G__118994,G__118995));
})();
var G__118662 = "(";
var G__118663 = (function (){var G__118996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__118997 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118996,G__118997) : tailrecursion.hoplon.span.call(null,G__118996,G__118997));
})();
var G__118664 = " ";
var G__118665 = (function (){var G__118998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__118999 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__118998,G__118999) : tailrecursion.hoplon.span.call(null,G__118998,G__118999));
})();
var G__118666 = ")\n                                (";
var G__118667 = (function (){var G__119000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119001 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119000,G__119001) : tailrecursion.hoplon.span.call(null,G__119000,G__119001));
})();
var G__118668 = " ";
var G__118669 = (function (){var G__119002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119003 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119002,G__119003) : tailrecursion.hoplon.span.call(null,G__119002,G__119003));
})();
var G__118670 = "))\n                             (";
var G__118671 = (function (){var G__119004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119005 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119004,G__119005) : tailrecursion.hoplon.span.call(null,G__119004,G__119005));
})();
var G__118672 = "(";
var G__118673 = (function (){var G__119006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119007 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119006,G__119007) : tailrecursion.hoplon.span.call(null,G__119006,G__119007));
})();
var G__118674 = " ";
var G__118675 = (function (){var G__119008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119009 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119008,G__119009) : tailrecursion.hoplon.span.call(null,G__119008,G__119009));
})();
var G__118676 = ")\n                                (";
var G__118677 = (function (){var G__119010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119011 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119010,G__119011) : tailrecursion.hoplon.span.call(null,G__119010,G__119011));
})();
var G__118678 = " ";
var G__118679 = (function (){var G__119012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119013 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119012,G__119013) : tailrecursion.hoplon.span.call(null,G__119012,G__119013));
})();
var G__118680 = "))))\n        ";
var G__118681 = (function (){var G__119014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119015 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119014,G__119015) : tailrecursion.hoplon.span.call(null,G__119014,G__119015));
})();
var G__118682 = "\n        (";
var G__118683 = (function (){var G__119016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119017 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119016,G__119017) : tailrecursion.hoplon.span.call(null,G__119016,G__119017));
})();
var G__118684 = "(";
var G__118685 = (function (){var G__119018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119019 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119018,G__119019) : tailrecursion.hoplon.span.call(null,G__119018,G__119019));
})();
var G__118686 = "(";
var G__118687 = (function (){var G__119020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119021 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119020,G__119021) : tailrecursion.hoplon.span.call(null,G__119020,G__119021));
})();
var G__118688 = " ";
var G__118689 = (function (){var G__119022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119023 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119022,G__119023) : tailrecursion.hoplon.span.call(null,G__119022,G__119023));
})();
var G__118690 = ") ";
var G__118691 = (function (){var G__119024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119025 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119024,G__119025) : tailrecursion.hoplon.span.call(null,G__119024,G__119025));
})();
var G__118692 = ")\n              (";
var G__118693 = (function (){var G__119026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119027 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119026,G__119027) : tailrecursion.hoplon.span.call(null,G__119026,G__119027));
})();
var G__118694 = " (";
var G__118695 = (function (){var G__119028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119029 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119028,G__119029) : tailrecursion.hoplon.span.call(null,G__119028,G__119029));
})();
var G__118696 = "(";
var G__118697 = (function (){var G__119030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119031 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119030,G__119031) : tailrecursion.hoplon.span.call(null,G__119030,G__119031));
})();
var G__118698 = " ";
var G__118699 = (function (){var G__119032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119033 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119032,G__119033) : tailrecursion.hoplon.span.call(null,G__119032,G__119033));
})();
var G__118700 = ")\n                                (";
var G__118701 = (function (){var G__119034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119035 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119034,G__119035) : tailrecursion.hoplon.span.call(null,G__119034,G__119035));
})();
var G__118702 = " ";
var G__118703 = (function (){var G__119036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119037 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119036,G__119037) : tailrecursion.hoplon.span.call(null,G__119036,G__119037));
})();
var G__118704 = "))\n                             (";
var G__118705 = (function (){var G__119038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119039 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119038,G__119039) : tailrecursion.hoplon.span.call(null,G__119038,G__119039));
})();
var G__118706 = "(";
var G__118707 = (function (){var G__119040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119041 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119040,G__119041) : tailrecursion.hoplon.span.call(null,G__119040,G__119041));
})();
var G__118708 = " ";
var G__118709 = (function (){var G__119042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119043 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119042,G__119043) : tailrecursion.hoplon.span.call(null,G__119042,G__119043));
})();
var G__118710 = ")\n                                (";
var G__118711 = (function (){var G__119044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119045 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119044,G__119045) : tailrecursion.hoplon.span.call(null,G__119044,G__119045));
})();
var G__118712 = " ";
var G__118713 = (function (){var G__119046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119047 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119046,G__119047) : tailrecursion.hoplon.span.call(null,G__119046,G__119047));
})();
var G__118714 = ")))\n              (";
var G__118715 = (function (){var G__119048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119049 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119048,G__119049) : tailrecursion.hoplon.span.call(null,G__119048,G__119049));
})();
var G__118716 = (function (){var G__119050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119051 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119050,G__119051) : tailrecursion.hoplon.span.call(null,G__119050,G__119051));
})();
var G__118717 = " (";
var G__118718 = (function (){var G__119052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119053 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119052,G__119053) : tailrecursion.hoplon.span.call(null,G__119052,G__119053));
})();
var G__118719 = " ";
var G__118720 = (function (){var G__119054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119055 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119054,G__119055) : tailrecursion.hoplon.span.call(null,G__119054,G__119055));
})();
var G__118721 = "))\n              (";
var G__118722 = (function (){var G__119056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119057 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119056,G__119057) : tailrecursion.hoplon.span.call(null,G__119056,G__119057));
})();
var G__118723 = " (";
var G__118724 = (function (){var G__119058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119059 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119058,G__119059) : tailrecursion.hoplon.span.call(null,G__119058,G__119059));
})();
var G__118725 = "(";
var G__118726 = (function (){var G__119060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119061 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119060,G__119061) : tailrecursion.hoplon.span.call(null,G__119060,G__119061));
})();
var G__118727 = " ";
var G__118728 = (function (){var G__119062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119063 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119062,G__119063) : tailrecursion.hoplon.span.call(null,G__119062,G__119063));
})();
var G__118729 = ")\n                                (";
var G__118730 = (function (){var G__119064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119065 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119064,G__119065) : tailrecursion.hoplon.span.call(null,G__119064,G__119065));
})();
var G__118731 = " ";
var G__118732 = (function (){var G__119066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119067 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119066,G__119067) : tailrecursion.hoplon.span.call(null,G__119066,G__119067));
})();
var G__118733 = "))\n                             (";
var G__118734 = (function (){var G__119068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119069 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119068,G__119069) : tailrecursion.hoplon.span.call(null,G__119068,G__119069));
})();
var G__118735 = "(";
var G__118736 = (function (){var G__119070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119071 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119070,G__119071) : tailrecursion.hoplon.span.call(null,G__119070,G__119071));
})();
var G__118737 = " ";
var G__118738 = (function (){var G__119072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119073 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119072,G__119073) : tailrecursion.hoplon.span.call(null,G__119072,G__119073));
})();
var G__118739 = ")\n                                (";
var G__118740 = (function (){var G__119074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119075 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119074,G__119075) : tailrecursion.hoplon.span.call(null,G__119074,G__119075));
})();
var G__118741 = " ";
var G__118742 = (function (){var G__119076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119077 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119076,G__119077) : tailrecursion.hoplon.span.call(null,G__119076,G__119077));
})();
var G__118743 = ")))\n              ";
var G__118744 = (function (){var G__119078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119079 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119078,G__119079) : tailrecursion.hoplon.span.call(null,G__119078,G__119079));
})();
var G__118745 = " \n              (";
var G__118746 = (function (){var G__119080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119081 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119080,G__119081) : tailrecursion.hoplon.span.call(null,G__119080,G__119081));
})();
var G__118747 = "[";
var G__118748 = (function (){var G__119082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119083 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119082,G__119083) : tailrecursion.hoplon.span.call(null,G__119082,G__119083));
})();
var G__118749 = " (";
var G__118750 = (function (){var G__119084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119085 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119084,G__119085) : tailrecursion.hoplon.span.call(null,G__119084,G__119085));
})();
var G__118751 = "(";
var G__118752 = (function (){var G__119086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119087 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119086,G__119087) : tailrecursion.hoplon.span.call(null,G__119086,G__119087));
})();
var G__118753 = " ";
var G__118754 = (function (){var G__119088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119089 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119088,G__119089) : tailrecursion.hoplon.span.call(null,G__119088,G__119089));
})();
var G__118755 = ")\n                         (";
var G__118756 = (function (){var G__119090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119091 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119090,G__119091) : tailrecursion.hoplon.span.call(null,G__119090,G__119091));
})();
var G__118757 = " ";
var G__118758 = (function (){var G__119092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119093 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119092,G__119093) : tailrecursion.hoplon.span.call(null,G__119092,G__119093));
})();
var G__118759 = "))\n                    ";
var G__118760 = (function (){var G__119094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119095 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119094,G__119095) : tailrecursion.hoplon.span.call(null,G__119094,G__119095));
})();
var G__118761 = " (";
var G__118762 = (function (){var G__119096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119097 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119096,G__119097) : tailrecursion.hoplon.span.call(null,G__119096,G__119097));
})();
var G__118763 = "(";
var G__118764 = (function (){var G__119098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119099 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119098,G__119099) : tailrecursion.hoplon.span.call(null,G__119098,G__119099));
})();
var G__118765 = " ";
var G__118766 = (function (){var G__119100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119101 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119100,G__119101) : tailrecursion.hoplon.span.call(null,G__119100,G__119101));
})();
var G__118767 = ")\n                         (";
var G__118768 = (function (){var G__119102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119103 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119102,G__119103) : tailrecursion.hoplon.span.call(null,G__119102,G__119103));
})();
var G__118769 = " ";
var G__118770 = (function (){var G__119104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119105 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119104,G__119105) : tailrecursion.hoplon.span.call(null,G__119104,G__119105));
})();
var G__118771 = "))\n                    ";
var G__118772 = (function (){var G__119106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119107 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119106,G__119107) : tailrecursion.hoplon.span.call(null,G__119106,G__119107));
})();
var G__118773 = " (";
var G__118774 = (function (){var G__119108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119109 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119108,G__119109) : tailrecursion.hoplon.span.call(null,G__119108,G__119109));
})();
var G__118775 = "(";
var G__118776 = (function (){var G__119110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119111 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119110,G__119111) : tailrecursion.hoplon.span.call(null,G__119110,G__119111));
})();
var G__118777 = " ";
var G__118778 = (function (){var G__119112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119113 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119112,G__119113) : tailrecursion.hoplon.span.call(null,G__119112,G__119113));
})();
var G__118779 = ")\n                         (";
var G__118780 = (function (){var G__119114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119115 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119114,G__119115) : tailrecursion.hoplon.span.call(null,G__119114,G__119115));
})();
var G__118781 = " ";
var G__118782 = (function (){var G__119116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119117 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119116,G__119117) : tailrecursion.hoplon.span.call(null,G__119116,G__119117));
})();
var G__118783 = "))\n                    ";
var G__118784 = (function (){var G__119118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119119 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119118,G__119119) : tailrecursion.hoplon.span.call(null,G__119118,G__119119));
})();
var G__118785 = " (";
var G__118786 = (function (){var G__119120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119121 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119120,G__119121) : tailrecursion.hoplon.span.call(null,G__119120,G__119121));
})();
var G__118787 = "(";
var G__118788 = (function (){var G__119122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119123 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119122,G__119123) : tailrecursion.hoplon.span.call(null,G__119122,G__119123));
})();
var G__118789 = " ";
var G__118790 = (function (){var G__119124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119125 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119124,G__119125) : tailrecursion.hoplon.span.call(null,G__119124,G__119125));
})();
var G__118791 = ")\n                         (";
var G__118792 = (function (){var G__119126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119127 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119126,G__119127) : tailrecursion.hoplon.span.call(null,G__119126,G__119127));
})();
var G__118793 = " ";
var G__118794 = (function (){var G__119128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119129 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119128,G__119129) : tailrecursion.hoplon.span.call(null,G__119128,G__119129));
})();
var G__118795 = "))]\n                (";
var G__118796 = (function (){var G__119130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119131 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119130,G__119131) : tailrecursion.hoplon.span.call(null,G__119130,G__119131));
})();
var G__118797 = " (";
var G__118798 = (function (){var G__119132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119133 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119132,G__119133) : tailrecursion.hoplon.span.call(null,G__119132,G__119133));
})();
var G__118799 = (function (){var G__119134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119135 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119134,G__119135) : tailrecursion.hoplon.span.call(null,G__119134,G__119135));
})();
var G__118800 = " ";
var G__118801 = (function (){var G__119136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119137 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119136,G__119137) : tailrecursion.hoplon.span.call(null,G__119136,G__119137));
})();
var G__118802 = " ";
var G__118803 = (function (){var G__119138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119139 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119138,G__119139) : tailrecursion.hoplon.span.call(null,G__119138,G__119139));
})();
var G__118804 = " ";
var G__118805 = (function (){var G__119140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119141 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119140,G__119141) : tailrecursion.hoplon.span.call(null,G__119140,G__119141));
})();
var G__118806 = ")\n                               (";
var G__118807 = (function (){var G__119142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119143 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119142,G__119143) : tailrecursion.hoplon.span.call(null,G__119142,G__119143));
})();
var G__118808 = (function (){var G__119144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119145 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119144,G__119145) : tailrecursion.hoplon.span.call(null,G__119144,G__119145));
})();
var G__118809 = " ";
var G__118810 = (function (){var G__119146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119147 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119146,G__119147) : tailrecursion.hoplon.span.call(null,G__119146,G__119147));
})();
var G__118811 = " ";
var G__118812 = (function (){var G__119148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119149 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119148,G__119149) : tailrecursion.hoplon.span.call(null,G__119148,G__119149));
})();
var G__118813 = " ";
var G__118814 = (function (){var G__119150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119151 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119150,G__119151) : tailrecursion.hoplon.span.call(null,G__119150,G__119151));
})();
var G__118815 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__118485,G__118486,G__118487,G__118488,G__118489,G__118490,G__118491,G__118492,G__118493,G__118494,G__118495,G__118496,G__118497,G__118498,G__118499,G__118500,G__118501,G__118502,G__118503,G__118504,G__118505,G__118506,G__118507,G__118508,G__118509,G__118510,G__118511,G__118512,G__118513,G__118514,G__118515,G__118516,G__118517,G__118518,G__118519,G__118520,G__118521,G__118522,G__118523,G__118524,G__118525,G__118526,G__118527,G__118528,G__118529,G__118530,G__118531,G__118532,G__118533,G__118534,G__118535,G__118536,G__118537,G__118538,G__118539,G__118540,G__118541,G__118542,G__118543,G__118544,G__118545,G__118546,G__118547,G__118548,G__118549,G__118550,G__118551,G__118552,G__118553,G__118554,G__118555,G__118556,G__118557,G__118558,G__118559,G__118560,G__118561,G__118562,G__118563,G__118564,G__118565,G__118566,G__118567,G__118568,G__118569,G__118570,G__118571,G__118572,G__118573,G__118574,G__118575,G__118576,G__118577,G__118578,G__118579,G__118580,G__118581,G__118582,G__118583,G__118584,G__118585,G__118586,G__118587,G__118588,G__118589,G__118590,G__118591,G__118592,G__118593,G__118594,G__118595,G__118596,G__118597,G__118598,G__118599,G__118600,G__118601,G__118602,G__118603,G__118604,G__118605,G__118606,G__118607,G__118608,G__118609,G__118610,G__118611,G__118612,G__118613,G__118614,G__118615,G__118616,G__118617,G__118618,G__118619,G__118620,G__118621,G__118622,G__118623,G__118624,G__118625,G__118626,G__118627,G__118628,G__118629,G__118630,G__118631,G__118632,G__118633,G__118634,G__118635,G__118636,G__118637,G__118638,G__118639,G__118640,G__118641,G__118642,G__118643,G__118644,G__118645,G__118646,G__118647,G__118648,G__118649,G__118650,G__118651,G__118652,G__118653,G__118654,G__118655,G__118656,G__118657,G__118658,G__118659,G__118660,G__118661,G__118662,G__118663,G__118664,G__118665,G__118666,G__118667,G__118668,G__118669,G__118670,G__118671,G__118672,G__118673,G__118674,G__118675,G__118676,G__118677,G__118678,G__118679,G__118680,G__118681,G__118682,G__118683,G__118684,G__118685,G__118686,G__118687,G__118688,G__118689,G__118690,G__118691,G__118692,G__118693,G__118694,G__118695,G__118696,G__118697,G__118698,G__118699,G__118700,G__118701,G__118702,G__118703,G__118704,G__118705,G__118706,G__118707,G__118708,G__118709,G__118710,G__118711,G__118712,G__118713,G__118714,G__118715,G__118716,G__118717,G__118718,G__118719,G__118720,G__118721,G__118722,G__118723,G__118724,G__118725,G__118726,G__118727,G__118728,G__118729,G__118730,G__118731,G__118732,G__118733,G__118734,G__118735,G__118736,G__118737,G__118738,G__118739,G__118740,G__118741,G__118742,G__118743,G__118744,G__118745,G__118746,G__118747,G__118748,G__118749,G__118750,G__118751,G__118752,G__118753,G__118754,G__118755,G__118756,G__118757,G__118758,G__118759,G__118760,G__118761,G__118762,G__118763,G__118764,G__118765,G__118766,G__118767,G__118768,G__118769,G__118770,G__118771,G__118772,G__118773,G__118774,G__118775,G__118776,G__118777,G__118778,G__118779,G__118780,G__118781,G__118782,G__118783,G__118784,G__118785,G__118786,G__118787,G__118788,G__118789,G__118790,G__118791,G__118792,G__118793,G__118794,G__118795,G__118796,G__118797,G__118798,G__118799,G__118800,G__118801,G__118802,G__118803,G__118804,G__118805,G__118806,G__118807,G__118808,G__118809,G__118810,G__118811,G__118812,G__118813,G__118814,G__118815) : tailrecursion.hoplon.pre.call(null,G__118485,G__118486,G__118487,G__118488,G__118489,G__118490,G__118491,G__118492,G__118493,G__118494,G__118495,G__118496,G__118497,G__118498,G__118499,G__118500,G__118501,G__118502,G__118503,G__118504,G__118505,G__118506,G__118507,G__118508,G__118509,G__118510,G__118511,G__118512,G__118513,G__118514,G__118515,G__118516,G__118517,G__118518,G__118519,G__118520,G__118521,G__118522,G__118523,G__118524,G__118525,G__118526,G__118527,G__118528,G__118529,G__118530,G__118531,G__118532,G__118533,G__118534,G__118535,G__118536,G__118537,G__118538,G__118539,G__118540,G__118541,G__118542,G__118543,G__118544,G__118545,G__118546,G__118547,G__118548,G__118549,G__118550,G__118551,G__118552,G__118553,G__118554,G__118555,G__118556,G__118557,G__118558,G__118559,G__118560,G__118561,G__118562,G__118563,G__118564,G__118565,G__118566,G__118567,G__118568,G__118569,G__118570,G__118571,G__118572,G__118573,G__118574,G__118575,G__118576,G__118577,G__118578,G__118579,G__118580,G__118581,G__118582,G__118583,G__118584,G__118585,G__118586,G__118587,G__118588,G__118589,G__118590,G__118591,G__118592,G__118593,G__118594,G__118595,G__118596,G__118597,G__118598,G__118599,G__118600,G__118601,G__118602,G__118603,G__118604,G__118605,G__118606,G__118607,G__118608,G__118609,G__118610,G__118611,G__118612,G__118613,G__118614,G__118615,G__118616,G__118617,G__118618,G__118619,G__118620,G__118621,G__118622,G__118623,G__118624,G__118625,G__118626,G__118627,G__118628,G__118629,G__118630,G__118631,G__118632,G__118633,G__118634,G__118635,G__118636,G__118637,G__118638,G__118639,G__118640,G__118641,G__118642,G__118643,G__118644,G__118645,G__118646,G__118647,G__118648,G__118649,G__118650,G__118651,G__118652,G__118653,G__118654,G__118655,G__118656,G__118657,G__118658,G__118659,G__118660,G__118661,G__118662,G__118663,G__118664,G__118665,G__118666,G__118667,G__118668,G__118669,G__118670,G__118671,G__118672,G__118673,G__118674,G__118675,G__118676,G__118677,G__118678,G__118679,G__118680,G__118681,G__118682,G__118683,G__118684,G__118685,G__118686,G__118687,G__118688,G__118689,G__118690,G__118691,G__118692,G__118693,G__118694,G__118695,G__118696,G__118697,G__118698,G__118699,G__118700,G__118701,G__118702,G__118703,G__118704,G__118705,G__118706,G__118707,G__118708,G__118709,G__118710,G__118711,G__118712,G__118713,G__118714,G__118715,G__118716,G__118717,G__118718,G__118719,G__118720,G__118721,G__118722,G__118723,G__118724,G__118725,G__118726,G__118727,G__118728,G__118729,G__118730,G__118731,G__118732,G__118733,G__118734,G__118735,G__118736,G__118737,G__118738,G__118739,G__118740,G__118741,G__118742,G__118743,G__118744,G__118745,G__118746,G__118747,G__118748,G__118749,G__118750,G__118751,G__118752,G__118753,G__118754,G__118755,G__118756,G__118757,G__118758,G__118759,G__118760,G__118761,G__118762,G__118763,G__118764,G__118765,G__118766,G__118767,G__118768,G__118769,G__118770,G__118771,G__118772,G__118773,G__118774,G__118775,G__118776,G__118777,G__118778,G__118779,G__118780,G__118781,G__118782,G__118783,G__118784,G__118785,G__118786,G__118787,G__118788,G__118789,G__118790,G__118791,G__118792,G__118793,G__118794,G__118795,G__118796,G__118797,G__118798,G__118799,G__118800,G__118801,G__118802,G__118803,G__118804,G__118805,G__118806,G__118807,G__118808,G__118809,G__118810,G__118811,G__118812,G__118813,G__118814,G__118815));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__118483,G__118484) : tailrecursion.hoplon.div.call(null,G__118483,G__118484));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__118482) : tailrecursion.hoplon.div.call(null,G__118482));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118481;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118480;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_118479;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_118478;
}})()], 0)),"",(function (){var _STAR_references_STAR_119152 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119153 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119154 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119155 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119156 = cljs.core.PersistentArrayMap.EMPTY;
var G__119157 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119156,G__119157) : tailrecursion.hoplon.markdown.para_node.call(null,G__119156,G__119157));
})(),(function (){var G__119158 = (function (){var G__119159 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119160 = (function (){var G__119161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119162 = "(";
var G__119163 = (function (){var G__119220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119221 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119220,G__119221) : tailrecursion.hoplon.span.call(null,G__119220,G__119221));
})();
var G__119164 = (function (){var G__119222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119223 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119222,G__119223) : tailrecursion.hoplon.span.call(null,G__119222,G__119223));
})();
var G__119165 = " [";
var G__119166 = (function (){var G__119224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119225 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119224,G__119225) : tailrecursion.hoplon.span.call(null,G__119224,G__119225));
})();
var G__119167 = " ";
var G__119168 = (function (){var G__119226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119227 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119226,G__119227) : tailrecursion.hoplon.span.call(null,G__119226,G__119227));
})();
var G__119169 = "]\n  (";
var G__119170 = (function (){var G__119228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119229 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119228,G__119229) : tailrecursion.hoplon.span.call(null,G__119228,G__119229));
})();
var G__119171 = " (";
var G__119172 = (function (){var G__119230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119231 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119230,G__119231) : tailrecursion.hoplon.span.call(null,G__119230,G__119231));
})();
var G__119173 = (function (){var G__119232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119233 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119232,G__119233) : tailrecursion.hoplon.span.call(null,G__119232,G__119233));
})();
var G__119174 = " ";
var G__119175 = (function (){var G__119234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119235 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119234,G__119235) : tailrecursion.hoplon.span.call(null,G__119234,G__119235));
})();
var G__119176 = ") (";
var G__119177 = (function (){var G__119236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119237 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119236,G__119237) : tailrecursion.hoplon.span.call(null,G__119236,G__119237));
})();
var G__119178 = (function (){var G__119238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119239 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119238,G__119239) : tailrecursion.hoplon.span.call(null,G__119238,G__119239));
})();
var G__119179 = " ";
var G__119180 = (function (){var G__119240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119241 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119240,G__119241) : tailrecursion.hoplon.span.call(null,G__119240,G__119241));
})();
var G__119181 = ")))\n(";
var G__119182 = (function (){var G__119242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119243 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119242,G__119243) : tailrecursion.hoplon.span.call(null,G__119242,G__119243));
})();
var G__119183 = (function (){var G__119244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119245 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119244,G__119245) : tailrecursion.hoplon.span.call(null,G__119244,G__119245));
})();
var G__119184 = " [";
var G__119185 = (function (){var G__119246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119247 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119246,G__119247) : tailrecursion.hoplon.span.call(null,G__119246,G__119247));
})();
var G__119186 = "]\n  (";
var G__119187 = (function (){var G__119248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119249 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119248,G__119249) : tailrecursion.hoplon.span.call(null,G__119248,G__119249));
})();
var G__119188 = "(";
var G__119189 = (function (){var G__119250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119251 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119250,G__119251) : tailrecursion.hoplon.span.call(null,G__119250,G__119251));
})();
var G__119190 = "(";
var G__119191 = (function (){var G__119252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119253 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119252,G__119253) : tailrecursion.hoplon.span.call(null,G__119252,G__119253));
})();
var G__119192 = " ";
var G__119193 = (function (){var G__119254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119255 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119254,G__119255) : tailrecursion.hoplon.span.call(null,G__119254,G__119255));
})();
var G__119194 = ") (";
var G__119195 = (function (){var G__119256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119257 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119256,G__119257) : tailrecursion.hoplon.span.call(null,G__119256,G__119257));
})();
var G__119196 = " ";
var G__119197 = (function (){var G__119258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119259 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119258,G__119259) : tailrecursion.hoplon.span.call(null,G__119258,G__119259));
})();
var G__119198 = ")) ";
var G__119199 = (function (){var G__119260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119261 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119260,G__119261) : tailrecursion.hoplon.span.call(null,G__119260,G__119261));
})();
var G__119200 = "))\n(";
var G__119201 = (function (){var G__119262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119263 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119262,G__119263) : tailrecursion.hoplon.span.call(null,G__119262,G__119263));
})();
var G__119202 = (function (){var G__119264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119265 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119264,G__119265) : tailrecursion.hoplon.span.call(null,G__119264,G__119265));
})();
var G__119203 = " [";
var G__119204 = (function (){var G__119266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119267 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119266,G__119267) : tailrecursion.hoplon.span.call(null,G__119266,G__119267));
})();
var G__119205 = "]\n  (";
var G__119206 = (function (){var G__119268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119269 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119268,G__119269) : tailrecursion.hoplon.span.call(null,G__119268,G__119269));
})();
var G__119207 = "(";
var G__119208 = (function (){var G__119270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119271 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119270,G__119271) : tailrecursion.hoplon.span.call(null,G__119270,G__119271));
})();
var G__119209 = "(";
var G__119210 = (function (){var G__119272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119273 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119272,G__119273) : tailrecursion.hoplon.span.call(null,G__119272,G__119273));
})();
var G__119211 = " ";
var G__119212 = (function (){var G__119274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119275 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119274,G__119275) : tailrecursion.hoplon.span.call(null,G__119274,G__119275));
})();
var G__119213 = ") (";
var G__119214 = (function (){var G__119276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119277 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119276,G__119277) : tailrecursion.hoplon.span.call(null,G__119276,G__119277));
})();
var G__119215 = " ";
var G__119216 = (function (){var G__119278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119279 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119278,G__119279) : tailrecursion.hoplon.span.call(null,G__119278,G__119279));
})();
var G__119217 = ")) ";
var G__119218 = (function (){var G__119280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119281 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119280,G__119281) : tailrecursion.hoplon.span.call(null,G__119280,G__119281));
})();
var G__119219 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__119161,G__119162,G__119163,G__119164,G__119165,G__119166,G__119167,G__119168,G__119169,G__119170,G__119171,G__119172,G__119173,G__119174,G__119175,G__119176,G__119177,G__119178,G__119179,G__119180,G__119181,G__119182,G__119183,G__119184,G__119185,G__119186,G__119187,G__119188,G__119189,G__119190,G__119191,G__119192,G__119193,G__119194,G__119195,G__119196,G__119197,G__119198,G__119199,G__119200,G__119201,G__119202,G__119203,G__119204,G__119205,G__119206,G__119207,G__119208,G__119209,G__119210,G__119211,G__119212,G__119213,G__119214,G__119215,G__119216,G__119217,G__119218,G__119219) : tailrecursion.hoplon.pre.call(null,G__119161,G__119162,G__119163,G__119164,G__119165,G__119166,G__119167,G__119168,G__119169,G__119170,G__119171,G__119172,G__119173,G__119174,G__119175,G__119176,G__119177,G__119178,G__119179,G__119180,G__119181,G__119182,G__119183,G__119184,G__119185,G__119186,G__119187,G__119188,G__119189,G__119190,G__119191,G__119192,G__119193,G__119194,G__119195,G__119196,G__119197,G__119198,G__119199,G__119200,G__119201,G__119202,G__119203,G__119204,G__119205,G__119206,G__119207,G__119208,G__119209,G__119210,G__119211,G__119212,G__119213,G__119214,G__119215,G__119216,G__119217,G__119218,G__119219));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119159,G__119160) : tailrecursion.hoplon.div.call(null,G__119159,G__119160));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119158) : tailrecursion.hoplon.div.call(null,G__119158));
})(),(function (){var G__119282 = cljs.core.PersistentArrayMap.EMPTY;
var G__119283 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__119284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119285 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119284,G__119285) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119284,G__119285));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119282,G__119283) : tailrecursion.hoplon.markdown.para_node.call(null,G__119282,G__119283));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119155;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119154;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119153;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119152;
}})()], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119286 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119287 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119288 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119289 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119290 = cljs.core.PersistentArrayMap.EMPTY;
var G__119291 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__119292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-center-percent"], null);
var G__119293 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119292,G__119293) : tailrecursion.hoplon.markdown.code_node.call(null,G__119292,G__119293));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__119294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"percent"], null);
var G__119295 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119294,G__119295) : tailrecursion.hoplon.markdown.code_node.call(null,G__119294,G__119295));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__119296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"center"], null);
var G__119297 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119296,G__119297) : tailrecursion.hoplon.markdown.code_node.call(null,G__119296,G__119297));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119290,G__119291) : tailrecursion.hoplon.markdown.para_node.call(null,G__119290,G__119291));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119289;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119288;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119287;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119286;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119298 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119299 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119300 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119301 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119302 = (function (){var G__119303 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119304 = (function (){var G__119305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119306 = "(";
var G__119307 = (function (){var G__119350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119351 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119350,G__119351) : tailrecursion.hoplon.span.call(null,G__119350,G__119351));
})();
var G__119308 = (function (){var G__119352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119353 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119352,G__119353) : tailrecursion.hoplon.span.call(null,G__119352,G__119353));
})();
var G__119309 = " [";
var G__119310 = (function (){var G__119354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119355 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119354,G__119355) : tailrecursion.hoplon.span.call(null,G__119354,G__119355));
})();
var G__119311 = " ";
var G__119312 = (function (){var G__119356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119357 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119356,G__119357) : tailrecursion.hoplon.span.call(null,G__119356,G__119357));
})();
var G__119313 = "]\n  (";
var G__119314 = (function (){var G__119358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119359 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119358,G__119359) : tailrecursion.hoplon.span.call(null,G__119358,G__119359));
})();
var G__119315 = "[";
var G__119316 = (function (){var G__119360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119361 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119360,G__119361) : tailrecursion.hoplon.span.call(null,G__119360,G__119361));
})();
var G__119317 = " (";
var G__119318 = (function (){var G__119362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119363 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119362,G__119363) : tailrecursion.hoplon.span.call(null,G__119362,G__119363));
})();
var G__119319 = (function (){var G__119364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119365 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119364,G__119365) : tailrecursion.hoplon.span.call(null,G__119364,G__119365));
})();
var G__119320 = " ";
var G__119321 = (function (){var G__119366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119367 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119366,G__119367) : tailrecursion.hoplon.span.call(null,G__119366,G__119367));
})();
var G__119322 = ")]\n    (";
var G__119323 = (function (){var G__119368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119369 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119368,G__119369) : tailrecursion.hoplon.span.call(null,G__119368,G__119369));
})();
var G__119324 = " (";
var G__119325 = (function (){var G__119370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119371 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119370,G__119371) : tailrecursion.hoplon.span.call(null,G__119370,G__119371));
})();
var G__119326 = (function (){var G__119372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119373 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119372,G__119373) : tailrecursion.hoplon.span.call(null,G__119372,G__119373));
})();
var G__119327 = " ";
var G__119328 = (function (){var G__119374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119375 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119374,G__119375) : tailrecursion.hoplon.span.call(null,G__119374,G__119375));
})();
var G__119329 = ") (";
var G__119330 = (function (){var G__119376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119377 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119376,G__119377) : tailrecursion.hoplon.span.call(null,G__119376,G__119377));
})();
var G__119331 = (function (){var G__119378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119379 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119378,G__119379) : tailrecursion.hoplon.span.call(null,G__119378,G__119379));
})();
var G__119332 = " ";
var G__119333 = (function (){var G__119380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119381 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119380,G__119381) : tailrecursion.hoplon.span.call(null,G__119380,G__119381));
})();
var G__119334 = "))))\n(";
var G__119335 = (function (){var G__119382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119383 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119382,G__119383) : tailrecursion.hoplon.span.call(null,G__119382,G__119383));
})();
var G__119336 = (function (){var G__119384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119385 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119384,G__119385) : tailrecursion.hoplon.span.call(null,G__119384,G__119385));
})();
var G__119337 = " [";
var G__119338 = (function (){var G__119386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119387 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119386,G__119387) : tailrecursion.hoplon.span.call(null,G__119386,G__119387));
})();
var G__119339 = "]\n  (";
var G__119340 = (function (){var G__119388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119389 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119388,G__119389) : tailrecursion.hoplon.span.call(null,G__119388,G__119389));
})();
var G__119341 = "(";
var G__119342 = (function (){var G__119390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119391 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119390,G__119391) : tailrecursion.hoplon.span.call(null,G__119390,G__119391));
})();
var G__119343 = " ";
var G__119344 = (function (){var G__119392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119393 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119392,G__119393) : tailrecursion.hoplon.span.call(null,G__119392,G__119393));
})();
var G__119345 = ") (";
var G__119346 = (function (){var G__119394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119395 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119394,G__119395) : tailrecursion.hoplon.span.call(null,G__119394,G__119395));
})();
var G__119347 = " ";
var G__119348 = (function (){var G__119396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119397 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119396,G__119397) : tailrecursion.hoplon.span.call(null,G__119396,G__119397));
})();
var G__119349 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__119305,G__119306,G__119307,G__119308,G__119309,G__119310,G__119311,G__119312,G__119313,G__119314,G__119315,G__119316,G__119317,G__119318,G__119319,G__119320,G__119321,G__119322,G__119323,G__119324,G__119325,G__119326,G__119327,G__119328,G__119329,G__119330,G__119331,G__119332,G__119333,G__119334,G__119335,G__119336,G__119337,G__119338,G__119339,G__119340,G__119341,G__119342,G__119343,G__119344,G__119345,G__119346,G__119347,G__119348,G__119349) : tailrecursion.hoplon.pre.call(null,G__119305,G__119306,G__119307,G__119308,G__119309,G__119310,G__119311,G__119312,G__119313,G__119314,G__119315,G__119316,G__119317,G__119318,G__119319,G__119320,G__119321,G__119322,G__119323,G__119324,G__119325,G__119326,G__119327,G__119328,G__119329,G__119330,G__119331,G__119332,G__119333,G__119334,G__119335,G__119336,G__119337,G__119338,G__119339,G__119340,G__119341,G__119342,G__119343,G__119344,G__119345,G__119346,G__119347,G__119348,G__119349));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119303,G__119304) : tailrecursion.hoplon.div.call(null,G__119303,G__119304));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119302) : tailrecursion.hoplon.div.call(null,G__119302));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119301;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119300;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119299;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119298;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119398 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119399 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119400 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119401 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119402 = cljs.core.PersistentArrayMap.EMPTY;
var G__119403 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119402,G__119403) : tailrecursion.hoplon.markdown.para_node.call(null,G__119402,G__119403));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119401;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119400;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119399;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119398;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119404 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119405 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119406 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119407 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119408 = cljs.core.PersistentArrayMap.EMPTY;
var G__119409 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__119410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119411 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119410,G__119411) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119410,G__119411));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119408,G__119409) : tailrecursion.hoplon.markdown.para_node.call(null,G__119408,G__119409));
})(),(function (){var G__119412 = cljs.core.PersistentArrayMap.EMPTY;
var G__119413 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119412,G__119413) : tailrecursion.hoplon.markdown.para_node.call(null,G__119412,G__119413));
})(),(function (){var G__119414 = cljs.core.PersistentArrayMap.EMPTY;
var G__119415 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119414,G__119415) : tailrecursion.hoplon.markdown.para_node.call(null,G__119414,G__119415));
})(),(function (){var G__119416 = cljs.core.PersistentArrayMap.EMPTY;
var G__119417 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119416,G__119417) : tailrecursion.hoplon.markdown.para_node.call(null,G__119416,G__119417));
})(),(function (){var G__119418 = cljs.core.PersistentArrayMap.EMPTY;
var G__119419 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119418,G__119419) : tailrecursion.hoplon.markdown.para_node.call(null,G__119418,G__119419));
})(),(function (){var G__119420 = cljs.core.PersistentArrayMap.EMPTY;
var G__119421 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119420,G__119421) : tailrecursion.hoplon.markdown.para_node.call(null,G__119420,G__119421));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119407;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119406;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119405;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119404;
}})()], 0)),"",(function (){var _STAR_references_STAR_119422 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119423 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119424 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119425 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119426 = cljs.core.PersistentArrayMap.EMPTY;
var G__119427 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119426,G__119427) : tailrecursion.hoplon.markdown.para_node.call(null,G__119426,G__119427));
})(),(function (){var G__119428 = cljs.core.PersistentArrayMap.EMPTY;
var G__119429 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119428,G__119429) : tailrecursion.hoplon.markdown.para_node.call(null,G__119428,G__119429));
})(),(function (){var G__119430 = cljs.core.PersistentArrayMap.EMPTY;
var G__119431 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119430,G__119431) : tailrecursion.hoplon.markdown.para_node.call(null,G__119430,G__119431));
})(),(function (){var G__119432 = cljs.core.PersistentArrayMap.EMPTY;
var G__119433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119432,G__119433) : tailrecursion.hoplon.markdown.para_node.call(null,G__119432,G__119433));
})(),(function (){var G__119434 = cljs.core.PersistentArrayMap.EMPTY;
var G__119435 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119434,G__119435) : tailrecursion.hoplon.markdown.para_node.call(null,G__119434,G__119435));
})(),(function (){var G__119436 = (function (){var G__119437 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119438 = (function (){var G__119439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119440 = "(";
var G__119441 = (function (){var G__119497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119498 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119497,G__119498) : tailrecursion.hoplon.span.call(null,G__119497,G__119498));
})();
var G__119442 = (function (){var G__119499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119500 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119499,G__119500) : tailrecursion.hoplon.span.call(null,G__119499,G__119500));
})();
var G__119443 = " [";
var G__119444 = (function (){var G__119501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119502 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119501,G__119502) : tailrecursion.hoplon.span.call(null,G__119501,G__119502));
})();
var G__119445 = " ";
var G__119446 = (function (){var G__119503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119504 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119503,G__119504) : tailrecursion.hoplon.span.call(null,G__119503,G__119504));
})();
var G__119447 = "]\n  (";
var G__119448 = (function (){var G__119505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119506 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119505,G__119506) : tailrecursion.hoplon.span.call(null,G__119505,G__119506));
})();
var G__119449 = " (";
var G__119450 = (function (){var G__119507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119508 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119507,G__119508) : tailrecursion.hoplon.span.call(null,G__119507,G__119508));
})();
var G__119451 = " ";
var G__119452 = (function (){var G__119509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119510 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119509,G__119510) : tailrecursion.hoplon.span.call(null,G__119509,G__119510));
})();
var G__119453 = " ";
var G__119454 = (function (){var G__119511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119512 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119511,G__119512) : tailrecursion.hoplon.span.call(null,G__119511,G__119512));
})();
var G__119455 = ")\n                (";
var G__119456 = (function (){var G__119513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119514 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119513,G__119514) : tailrecursion.hoplon.span.call(null,G__119513,G__119514));
})();
var G__119457 = " ";
var G__119458 = (function (){var G__119515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119516 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119515,G__119516) : tailrecursion.hoplon.span.call(null,G__119515,G__119516));
})();
var G__119459 = " ";
var G__119460 = (function (){var G__119517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119518 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119517,G__119518) : tailrecursion.hoplon.span.call(null,G__119517,G__119518));
})();
var G__119461 = ")))\n(";
var G__119462 = (function (){var G__119519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119520 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119519,G__119520) : tailrecursion.hoplon.span.call(null,G__119519,G__119520));
})();
var G__119463 = (function (){var G__119521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119522 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119521,G__119522) : tailrecursion.hoplon.span.call(null,G__119521,G__119522));
})();
var G__119464 = " [";
var G__119465 = (function (){var G__119523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119524 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119523,G__119524) : tailrecursion.hoplon.span.call(null,G__119523,G__119524));
})();
var G__119466 = " ";
var G__119467 = (function (){var G__119525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119526 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119525,G__119526) : tailrecursion.hoplon.span.call(null,G__119525,G__119526));
})();
var G__119468 = "]\n  (";
var G__119469 = (function (){var G__119527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119528 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119527,G__119528) : tailrecursion.hoplon.span.call(null,G__119527,G__119528));
})();
var G__119470 = "[";
var G__119471 = (function (){var G__119529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119530 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119529,G__119530) : tailrecursion.hoplon.span.call(null,G__119529,G__119530));
})();
var G__119472 = " (";
var G__119473 = (function (){var G__119531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119532 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119531,G__119532) : tailrecursion.hoplon.span.call(null,G__119531,G__119532));
})();
var G__119474 = " ";
var G__119475 = (function (){var G__119533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119534 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119533,G__119534) : tailrecursion.hoplon.span.call(null,G__119533,G__119534));
})();
var G__119476 = " ";
var G__119477 = (function (){var G__119535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119536 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119535,G__119536) : tailrecursion.hoplon.span.call(null,G__119535,G__119536));
})();
var G__119478 = ")]\n    (";
var G__119479 = (function (){var G__119537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119538 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119537,G__119538) : tailrecursion.hoplon.span.call(null,G__119537,G__119538));
})();
var G__119480 = " ";
var G__119481 = (function (){var G__119539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119540 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119539,G__119540) : tailrecursion.hoplon.span.call(null,G__119539,G__119540));
})();
var G__119482 = "\n                  (";
var G__119483 = (function (){var G__119541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119542 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119541,G__119542) : tailrecursion.hoplon.span.call(null,G__119541,G__119542));
})();
var G__119484 = " (";
var G__119485 = (function (){var G__119543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119544 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119543,G__119544) : tailrecursion.hoplon.span.call(null,G__119543,G__119544));
})();
var G__119486 = " ";
var G__119487 = (function (){var G__119545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119546 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119545,G__119546) : tailrecursion.hoplon.span.call(null,G__119545,G__119546));
})();
var G__119488 = " ";
var G__119489 = (function (){var G__119547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119548 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119547,G__119548) : tailrecursion.hoplon.span.call(null,G__119547,G__119548));
})();
var G__119490 = ")\n                                (";
var G__119491 = (function (){var G__119549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119550 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119549,G__119550) : tailrecursion.hoplon.span.call(null,G__119549,G__119550));
})();
var G__119492 = " ";
var G__119493 = (function (){var G__119551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119552 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119551,G__119552) : tailrecursion.hoplon.span.call(null,G__119551,G__119552));
})();
var G__119494 = " ";
var G__119495 = (function (){var G__119553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119554 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119553,G__119554) : tailrecursion.hoplon.span.call(null,G__119553,G__119554));
})();
var G__119496 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__119439,G__119440,G__119441,G__119442,G__119443,G__119444,G__119445,G__119446,G__119447,G__119448,G__119449,G__119450,G__119451,G__119452,G__119453,G__119454,G__119455,G__119456,G__119457,G__119458,G__119459,G__119460,G__119461,G__119462,G__119463,G__119464,G__119465,G__119466,G__119467,G__119468,G__119469,G__119470,G__119471,G__119472,G__119473,G__119474,G__119475,G__119476,G__119477,G__119478,G__119479,G__119480,G__119481,G__119482,G__119483,G__119484,G__119485,G__119486,G__119487,G__119488,G__119489,G__119490,G__119491,G__119492,G__119493,G__119494,G__119495,G__119496) : tailrecursion.hoplon.pre.call(null,G__119439,G__119440,G__119441,G__119442,G__119443,G__119444,G__119445,G__119446,G__119447,G__119448,G__119449,G__119450,G__119451,G__119452,G__119453,G__119454,G__119455,G__119456,G__119457,G__119458,G__119459,G__119460,G__119461,G__119462,G__119463,G__119464,G__119465,G__119466,G__119467,G__119468,G__119469,G__119470,G__119471,G__119472,G__119473,G__119474,G__119475,G__119476,G__119477,G__119478,G__119479,G__119480,G__119481,G__119482,G__119483,G__119484,G__119485,G__119486,G__119487,G__119488,G__119489,G__119490,G__119491,G__119492,G__119493,G__119494,G__119495,G__119496));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119437,G__119438) : tailrecursion.hoplon.div.call(null,G__119437,G__119438));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119436) : tailrecursion.hoplon.div.call(null,G__119436));
})(),(function (){var G__119555 = cljs.core.PersistentArrayMap.EMPTY;
var G__119556 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__119557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119558 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119557,G__119558) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119557,G__119558));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119555,G__119556) : tailrecursion.hoplon.markdown.para_node.call(null,G__119555,G__119556));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119425;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119424;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119423;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119422;
}})()], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119559 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119560 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119561 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119562 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119563 = cljs.core.PersistentArrayMap.EMPTY;
var G__119564 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/12/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119563,G__119564) : tailrecursion.hoplon.markdown.para_node.call(null,G__119563,G__119564));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119562;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119561;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119560;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119559;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119565 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119566 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119567 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119568 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119569 = cljs.core.PersistentArrayMap.EMPTY;
var G__119570 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119569,G__119570) : tailrecursion.hoplon.markdown.para_node.call(null,G__119569,G__119570));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119568;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119567;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119566;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119565;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119571 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119572 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119573 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119574 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119575 = cljs.core.PersistentArrayMap.EMPTY;
var G__119576 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__119577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119578 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119577,G__119578) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119577,G__119578));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__119579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"par2"], null);
var G__119580 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119579,G__119580) : tailrecursion.hoplon.markdown.code_node.call(null,G__119579,G__119580));
})()," is a ",(function (){var G__119581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119582 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119581,G__119582) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119581,G__119582));
})()," program for parallel resistances than ",(function (){var G__119583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"par1"], null);
var G__119584 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119583,G__119584) : tailrecursion.hoplon.markdown.code_node.call(null,G__119583,G__119584));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119575,G__119576) : tailrecursion.hoplon.markdown.para_node.call(null,G__119575,G__119576));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119574;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119573;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119572;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119571;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119585 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119586 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119587 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119588 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119589 = cljs.core.PersistentArrayMap.EMPTY;
var G__119590 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__119591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119592 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119591,G__119592) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119591,G__119592));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119589,G__119590) : tailrecursion.hoplon.markdown.para_node.call(null,G__119589,G__119590));
})(),(function (){var G__119593 = cljs.core.PersistentArrayMap.EMPTY;
var G__119594 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119593,G__119594) : tailrecursion.hoplon.markdown.para_node.call(null,G__119593,G__119594));
})(),(function (){var G__119595 = cljs.core.PersistentArrayMap.EMPTY;
var G__119596 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__119597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119598 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119597,G__119598) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119597,G__119598));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119595,G__119596) : tailrecursion.hoplon.markdown.para_node.call(null,G__119595,G__119596));
})(),(function (){var G__119599 = cljs.core.PersistentArrayMap.EMPTY;
var G__119600 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__119601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119602 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119601,G__119602) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119601,G__119602));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119599,G__119600) : tailrecursion.hoplon.markdown.para_node.call(null,G__119599,G__119600));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119588;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119587;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119586;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119585;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119603 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119604 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119605 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119606 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119607 = cljs.core.PersistentArrayMap.EMPTY;
var G__119608 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119607,G__119608) : tailrecursion.hoplon.markdown.para_node.call(null,G__119607,G__119608));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119606;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119605;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119604;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119603;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_119609 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119610 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119611 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119612 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119613 = cljs.core.PersistentArrayMap.EMPTY;
var G__119614 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__119615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119616 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119615,G__119616) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119615,G__119616));
})(),". Already due to what we",(function (){var G__119617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119618 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119617,G__119618) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119617,G__119618));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/15/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__119619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119620 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119619,G__119620) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119619,G__119620));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119613,G__119614) : tailrecursion.hoplon.markdown.para_node.call(null,G__119613,G__119614));
})(),(function (){var G__119621 = cljs.core.PersistentArrayMap.EMPTY;
var G__119622 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__119623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119624 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119623,G__119624) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119623,G__119624));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119621,G__119622) : tailrecursion.hoplon.markdown.para_node.call(null,G__119621,G__119622));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119612;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119611;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119610;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119609;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__114460,G__114461,G__114462,G__114463,G__114464,G__114465,G__114466,G__114467,G__114468,G__114469,G__114470,G__114471,G__114472,G__114473,G__114474,G__114475,G__114476,G__114477,G__114478,G__114479,G__114480,G__114481) : tailrecursion.hoplon.div.call(null,G__114460,G__114461,G__114462,G__114463,G__114464,G__114465,G__114466,G__114467,G__114468,G__114469,G__114470,G__114471,G__114472,G__114473,G__114474,G__114475,G__114476,G__114477,G__114478,G__114479,G__114480,G__114481));
};
var content$sicp$texts$ch2sect1$content = function (var_args){
var args__10403__auto__ = null;
if (arguments.length > 0) {
var G__119625__i = 0, G__119625__a = new Array(arguments.length -  0);
while (G__119625__i < G__119625__a.length) {G__119625__a[G__119625__i] = arguments[G__119625__i + 0]; ++G__119625__i;}
  args__10403__auto__ = new cljs.core.IndexedSeq(G__119625__a,0);
} 
return content$sicp$texts$ch2sect1$content__delegate.call(this,args__10403__auto__);};
content$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
content$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__119626){
var args__10403__auto__ = cljs.core.seq(arglist__119626);
return content$sicp$texts$ch2sect1$content__delegate(args__10403__auto__);
});
content$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = content$sicp$texts$ch2sect1$content__delegate;
return content$sicp$texts$ch2sect1$content;
})()
;

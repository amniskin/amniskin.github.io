// Compiled by ClojureScript 0.0-3308 {:static-fns true, :optimize-constants true}
goog.provide('content.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('content.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
content.sicp.texts.ch2sect1.content = (function() { 
var content$sicp$texts$ch2sect1$content__delegate = function (args__10403__auto__){
var vec__119177 = tailrecursion.hoplon.parse_args(args__10403__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__119177,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__119177,(1),null);
var G__119178 = cljs.core.PersistentArrayMap.EMPTY;
var G__119179 = content.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_119200 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119201 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119202 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119203 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119204 = cljs.core.PersistentArrayMap.EMPTY;
var G__119205 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119204,G__119205) : tailrecursion.hoplon.markdown.para_node.call(null,G__119204,G__119205));
})(),(function (){var G__119206 = cljs.core.PersistentArrayMap.EMPTY;
var G__119207 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__119208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119209 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119208,G__119209) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119208,G__119209));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__119210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119211 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119210,G__119211) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119210,G__119211));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119206,G__119207) : tailrecursion.hoplon.markdown.para_node.call(null,G__119206,G__119207));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119203;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119202;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119201;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119200;
}})()], 0));
var G__119180 = "";
var G__119181 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_119212 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119213 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119214 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119215 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119216 = cljs.core.PersistentArrayMap.EMPTY;
var G__119217 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119216,G__119217) : tailrecursion.hoplon.markdown.para_node.call(null,G__119216,G__119217));
})(),(function (){var G__119218 = cljs.core.PersistentArrayMap.EMPTY;
var G__119219 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119218,G__119219) : tailrecursion.hoplon.markdown.para_node.call(null,G__119218,G__119219));
})(),(function (){var G__119220 = cljs.core.PersistentArrayMap.EMPTY;
var G__119221 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119222 = cljs.core.PersistentArrayMap.EMPTY;
var G__119223 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_119224 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119225 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(make-rat <n> <d>)"], null);
var G__119227 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119226,G__119227) : tailrecursion.hoplon.markdown.code_node.call(null,G__119226,G__119227));
})()," returns the rational number whose numerator is the integer ",(function (){var G__119228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<n>"], null);
var G__119229 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119228,G__119229) : tailrecursion.hoplon.markdown.code_node.call(null,G__119228,G__119229));
})()," and whose denominator is the integer ",(function (){var G__119230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<d>"], null);
var G__119231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119230,G__119231) : tailrecursion.hoplon.markdown.code_node.call(null,G__119230,G__119231));
})(),". - ",(function (){var G__119232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(numer <x>)"], null);
var G__119233 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119232,G__119233) : tailrecursion.hoplon.markdown.code_node.call(null,G__119232,G__119233));
})()," returns the numerator of the rational number ",(function (){var G__119234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<x>"], null);
var G__119235 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119234,G__119235) : tailrecursion.hoplon.markdown.code_node.call(null,G__119234,G__119235));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119225;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119224;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__119222,G__119223) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__119222,G__119223));
})(),(function (){var G__119236 = cljs.core.PersistentArrayMap.EMPTY;
var G__119237 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_119238 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119239 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(denom <x>)"], null);
var G__119241 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119240,G__119241) : tailrecursion.hoplon.markdown.code_node.call(null,G__119240,G__119241));
})()," returns the denominator of the rational number ",(function (){var G__119242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"<x>"], null);
var G__119243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119242,G__119243) : tailrecursion.hoplon.markdown.code_node.call(null,G__119242,G__119243));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119239;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119238;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__119236,G__119237) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__119236,G__119237));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__119220,G__119221) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__119220,G__119221));
})(),(function (){var G__119244 = cljs.core.PersistentArrayMap.EMPTY;
var G__119245 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__119246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119247 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119246,G__119247) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119246,G__119247));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__119248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__119249 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119248,G__119249) : tailrecursion.hoplon.markdown.code_node.call(null,G__119248,G__119249));
})(),", ",(function (){var G__119250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__119251 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119250,G__119251) : tailrecursion.hoplon.markdown.code_node.call(null,G__119250,G__119251));
})(),", and ",(function (){var G__119252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__119253 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119252,G__119253) : tailrecursion.hoplon.markdown.code_node.call(null,G__119252,G__119253));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119244,G__119245) : tailrecursion.hoplon.markdown.para_node.call(null,G__119244,G__119245));
})(),(function (){var G__119254 = cljs.core.PersistentArrayMap.EMPTY;
var G__119255 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119254,G__119255) : tailrecursion.hoplon.markdown.para_node.call(null,G__119254,G__119255));
})(),(function (){var G__119256 = cljs.core.PersistentArrayMap.EMPTY;
var G__119257 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119256,G__119257) : tailrecursion.hoplon.markdown.para_node.call(null,G__119256,G__119257));
})(),(function (){var G__119258 = (function (){var G__119259 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119260 = (function (){var G__119261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119262 = "(";
var G__119263 = (function (){var G__119436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119437 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119436,G__119437) : tailrecursion.hoplon.span.call(null,G__119436,G__119437));
})();
var G__119264 = (function (){var G__119438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119439 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119438,G__119439) : tailrecursion.hoplon.span.call(null,G__119438,G__119439));
})();
var G__119265 = " [";
var G__119266 = (function (){var G__119440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119441 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119440,G__119441) : tailrecursion.hoplon.span.call(null,G__119440,G__119441));
})();
var G__119267 = " ";
var G__119268 = (function (){var G__119442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119443 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119442,G__119443) : tailrecursion.hoplon.span.call(null,G__119442,G__119443));
})();
var G__119269 = "]\n  (";
var G__119270 = (function (){var G__119444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119445 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119444,G__119445) : tailrecursion.hoplon.span.call(null,G__119444,G__119445));
})();
var G__119271 = " (";
var G__119272 = (function (){var G__119446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119447 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119446,G__119447) : tailrecursion.hoplon.span.call(null,G__119446,G__119447));
})();
var G__119273 = "(";
var G__119274 = (function (){var G__119448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119449 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119448,G__119449) : tailrecursion.hoplon.span.call(null,G__119448,G__119449));
})();
var G__119275 = "(";
var G__119276 = (function (){var G__119450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119451 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119450,G__119451) : tailrecursion.hoplon.span.call(null,G__119450,G__119451));
})();
var G__119277 = " ";
var G__119278 = (function (){var G__119452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119453 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119452,G__119453) : tailrecursion.hoplon.span.call(null,G__119452,G__119453));
})();
var G__119279 = ") (";
var G__119280 = (function (){var G__119454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119455 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119454,G__119455) : tailrecursion.hoplon.span.call(null,G__119454,G__119455));
})();
var G__119281 = (function (){var G__119456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119457 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119456,G__119457) : tailrecursion.hoplon.span.call(null,G__119456,G__119457));
})();
var G__119282 = " ";
var G__119283 = (function (){var G__119458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119459 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119458,G__119459) : tailrecursion.hoplon.span.call(null,G__119458,G__119459));
})();
var G__119284 = "))\n               (";
var G__119285 = (function (){var G__119460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119461 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119460,G__119461) : tailrecursion.hoplon.span.call(null,G__119460,G__119461));
})();
var G__119286 = "(";
var G__119287 = (function (){var G__119462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119463 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119462,G__119463) : tailrecursion.hoplon.span.call(null,G__119462,G__119463));
})();
var G__119288 = " ";
var G__119289 = (function (){var G__119464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119465 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119464,G__119465) : tailrecursion.hoplon.span.call(null,G__119464,G__119465));
})();
var G__119290 = ") (";
var G__119291 = (function (){var G__119466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119467 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119466,G__119467) : tailrecursion.hoplon.span.call(null,G__119466,G__119467));
})();
var G__119292 = (function (){var G__119468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119469 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119468,G__119469) : tailrecursion.hoplon.span.call(null,G__119468,G__119469));
})();
var G__119293 = " ";
var G__119294 = (function (){var G__119470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119471 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119470,G__119471) : tailrecursion.hoplon.span.call(null,G__119470,G__119471));
})();
var G__119295 = ")))\n            (";
var G__119296 = (function (){var G__119472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119473 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119472,G__119473) : tailrecursion.hoplon.span.call(null,G__119472,G__119473));
})();
var G__119297 = "(";
var G__119298 = (function (){var G__119474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119475 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119474,G__119475) : tailrecursion.hoplon.span.call(null,G__119474,G__119475));
})();
var G__119299 = " ";
var G__119300 = (function (){var G__119476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119477 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119476,G__119477) : tailrecursion.hoplon.span.call(null,G__119476,G__119477));
})();
var G__119301 = ") (";
var G__119302 = (function (){var G__119478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119479 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119478,G__119479) : tailrecursion.hoplon.span.call(null,G__119478,G__119479));
})();
var G__119303 = " ";
var G__119304 = (function (){var G__119480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119481 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119480,G__119481) : tailrecursion.hoplon.span.call(null,G__119480,G__119481));
})();
var G__119305 = "))))\n(";
var G__119306 = (function (){var G__119482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119483 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119482,G__119483) : tailrecursion.hoplon.span.call(null,G__119482,G__119483));
})();
var G__119307 = (function (){var G__119484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119485 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119484,G__119485) : tailrecursion.hoplon.span.call(null,G__119484,G__119485));
})();
var G__119308 = " [";
var G__119309 = (function (){var G__119486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119487 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119486,G__119487) : tailrecursion.hoplon.span.call(null,G__119486,G__119487));
})();
var G__119310 = " ";
var G__119311 = (function (){var G__119488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119489 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119488,G__119489) : tailrecursion.hoplon.span.call(null,G__119488,G__119489));
})();
var G__119312 = "]\n  (";
var G__119313 = (function (){var G__119490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119491 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119490,G__119491) : tailrecursion.hoplon.span.call(null,G__119490,G__119491));
})();
var G__119314 = " (";
var G__119315 = (function (){var G__119492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119493 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119492,G__119493) : tailrecursion.hoplon.span.call(null,G__119492,G__119493));
})();
var G__119316 = "(";
var G__119317 = (function (){var G__119494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119495 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119494,G__119495) : tailrecursion.hoplon.span.call(null,G__119494,G__119495));
})();
var G__119318 = "(";
var G__119319 = (function (){var G__119496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119497 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119496,G__119497) : tailrecursion.hoplon.span.call(null,G__119496,G__119497));
})();
var G__119320 = " ";
var G__119321 = (function (){var G__119498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119499 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119498,G__119499) : tailrecursion.hoplon.span.call(null,G__119498,G__119499));
})();
var G__119322 = ") (";
var G__119323 = (function (){var G__119500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119501 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119500,G__119501) : tailrecursion.hoplon.span.call(null,G__119500,G__119501));
})();
var G__119324 = (function (){var G__119502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119503 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119502,G__119503) : tailrecursion.hoplon.span.call(null,G__119502,G__119503));
})();
var G__119325 = " ";
var G__119326 = (function (){var G__119504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119505 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119504,G__119505) : tailrecursion.hoplon.span.call(null,G__119504,G__119505));
})();
var G__119327 = "))\n               (";
var G__119328 = (function (){var G__119506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119507 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119506,G__119507) : tailrecursion.hoplon.span.call(null,G__119506,G__119507));
})();
var G__119329 = "(";
var G__119330 = (function (){var G__119508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119509 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119508,G__119509) : tailrecursion.hoplon.span.call(null,G__119508,G__119509));
})();
var G__119331 = " ";
var G__119332 = (function (){var G__119510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119511 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119510,G__119511) : tailrecursion.hoplon.span.call(null,G__119510,G__119511));
})();
var G__119333 = ") (";
var G__119334 = (function (){var G__119512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119513 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119512,G__119513) : tailrecursion.hoplon.span.call(null,G__119512,G__119513));
})();
var G__119335 = (function (){var G__119514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119515 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119514,G__119515) : tailrecursion.hoplon.span.call(null,G__119514,G__119515));
})();
var G__119336 = " ";
var G__119337 = (function (){var G__119516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119517 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119516,G__119517) : tailrecursion.hoplon.span.call(null,G__119516,G__119517));
})();
var G__119338 = ")))\n            (";
var G__119339 = (function (){var G__119518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119519 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119518,G__119519) : tailrecursion.hoplon.span.call(null,G__119518,G__119519));
})();
var G__119340 = "(";
var G__119341 = (function (){var G__119520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119521 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119520,G__119521) : tailrecursion.hoplon.span.call(null,G__119520,G__119521));
})();
var G__119342 = " ";
var G__119343 = (function (){var G__119522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119523 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119522,G__119523) : tailrecursion.hoplon.span.call(null,G__119522,G__119523));
})();
var G__119344 = ") (";
var G__119345 = (function (){var G__119524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119525 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119524,G__119525) : tailrecursion.hoplon.span.call(null,G__119524,G__119525));
})();
var G__119346 = " ";
var G__119347 = (function (){var G__119526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119527 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119526,G__119527) : tailrecursion.hoplon.span.call(null,G__119526,G__119527));
})();
var G__119348 = "))))\n(";
var G__119349 = (function (){var G__119528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119529 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119528,G__119529) : tailrecursion.hoplon.span.call(null,G__119528,G__119529));
})();
var G__119350 = (function (){var G__119530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119531 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119530,G__119531) : tailrecursion.hoplon.span.call(null,G__119530,G__119531));
})();
var G__119351 = " [";
var G__119352 = (function (){var G__119532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119533 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119532,G__119533) : tailrecursion.hoplon.span.call(null,G__119532,G__119533));
})();
var G__119353 = " ";
var G__119354 = (function (){var G__119534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119535 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119534,G__119535) : tailrecursion.hoplon.span.call(null,G__119534,G__119535));
})();
var G__119355 = "]\n  (";
var G__119356 = (function (){var G__119536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119537 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119536,G__119537) : tailrecursion.hoplon.span.call(null,G__119536,G__119537));
})();
var G__119357 = " (";
var G__119358 = (function (){var G__119538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119539 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119538,G__119539) : tailrecursion.hoplon.span.call(null,G__119538,G__119539));
})();
var G__119359 = "(";
var G__119360 = (function (){var G__119540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119541 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119540,G__119541) : tailrecursion.hoplon.span.call(null,G__119540,G__119541));
})();
var G__119361 = " ";
var G__119362 = (function (){var G__119542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119543 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119542,G__119543) : tailrecursion.hoplon.span.call(null,G__119542,G__119543));
})();
var G__119363 = ") (";
var G__119364 = (function (){var G__119544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119545 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119544,G__119545) : tailrecursion.hoplon.span.call(null,G__119544,G__119545));
})();
var G__119365 = " ";
var G__119366 = (function (){var G__119546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119547 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119546,G__119547) : tailrecursion.hoplon.span.call(null,G__119546,G__119547));
})();
var G__119367 = "))\n            (";
var G__119368 = (function (){var G__119548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119549 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119548,G__119549) : tailrecursion.hoplon.span.call(null,G__119548,G__119549));
})();
var G__119369 = "(";
var G__119370 = (function (){var G__119550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119551 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119550,G__119551) : tailrecursion.hoplon.span.call(null,G__119550,G__119551));
})();
var G__119371 = " ";
var G__119372 = (function (){var G__119552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119553 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119552,G__119553) : tailrecursion.hoplon.span.call(null,G__119552,G__119553));
})();
var G__119373 = ") (";
var G__119374 = (function (){var G__119554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119555 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119554,G__119555) : tailrecursion.hoplon.span.call(null,G__119554,G__119555));
})();
var G__119375 = " ";
var G__119376 = (function (){var G__119556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119557 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119556,G__119557) : tailrecursion.hoplon.span.call(null,G__119556,G__119557));
})();
var G__119377 = "))))\n(";
var G__119378 = (function (){var G__119558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119559 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119558,G__119559) : tailrecursion.hoplon.span.call(null,G__119558,G__119559));
})();
var G__119379 = (function (){var G__119560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119561 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119560,G__119561) : tailrecursion.hoplon.span.call(null,G__119560,G__119561));
})();
var G__119380 = " [";
var G__119381 = (function (){var G__119562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119563 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119562,G__119563) : tailrecursion.hoplon.span.call(null,G__119562,G__119563));
})();
var G__119382 = " ";
var G__119383 = (function (){var G__119564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119565 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119564,G__119565) : tailrecursion.hoplon.span.call(null,G__119564,G__119565));
})();
var G__119384 = "]\n  (";
var G__119385 = (function (){var G__119566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119567 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119566,G__119567) : tailrecursion.hoplon.span.call(null,G__119566,G__119567));
})();
var G__119386 = " (";
var G__119387 = (function (){var G__119568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119569 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119568,G__119569) : tailrecursion.hoplon.span.call(null,G__119568,G__119569));
})();
var G__119388 = "(";
var G__119389 = (function (){var G__119570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119571 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119570,G__119571) : tailrecursion.hoplon.span.call(null,G__119570,G__119571));
})();
var G__119390 = " ";
var G__119391 = (function (){var G__119572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119573 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119572,G__119573) : tailrecursion.hoplon.span.call(null,G__119572,G__119573));
})();
var G__119392 = ") (";
var G__119393 = (function (){var G__119574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119575 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119574,G__119575) : tailrecursion.hoplon.span.call(null,G__119574,G__119575));
})();
var G__119394 = " ";
var G__119395 = (function (){var G__119576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119577 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119576,G__119577) : tailrecursion.hoplon.span.call(null,G__119576,G__119577));
})();
var G__119396 = "))\n            (";
var G__119397 = (function (){var G__119578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119579 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119578,G__119579) : tailrecursion.hoplon.span.call(null,G__119578,G__119579));
})();
var G__119398 = "(";
var G__119399 = (function (){var G__119580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119581 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119580,G__119581) : tailrecursion.hoplon.span.call(null,G__119580,G__119581));
})();
var G__119400 = " ";
var G__119401 = (function (){var G__119582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119583 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119582,G__119583) : tailrecursion.hoplon.span.call(null,G__119582,G__119583));
})();
var G__119402 = ") (";
var G__119403 = (function (){var G__119584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119585 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119584,G__119585) : tailrecursion.hoplon.span.call(null,G__119584,G__119585));
})();
var G__119404 = " ";
var G__119405 = (function (){var G__119586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119587 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119586,G__119587) : tailrecursion.hoplon.span.call(null,G__119586,G__119587));
})();
var G__119406 = "))))\n(";
var G__119407 = (function (){var G__119588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119589 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119588,G__119589) : tailrecursion.hoplon.span.call(null,G__119588,G__119589));
})();
var G__119408 = (function (){var G__119590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119591 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119590,G__119591) : tailrecursion.hoplon.span.call(null,G__119590,G__119591));
})();
var G__119409 = " [";
var G__119410 = (function (){var G__119592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119593 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119592,G__119593) : tailrecursion.hoplon.span.call(null,G__119592,G__119593));
})();
var G__119411 = " ";
var G__119412 = (function (){var G__119594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119595 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119594,G__119595) : tailrecursion.hoplon.span.call(null,G__119594,G__119595));
})();
var G__119413 = "]\n  (";
var G__119414 = (function (){var G__119596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119597 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119596,G__119597) : tailrecursion.hoplon.span.call(null,G__119596,G__119597));
})();
var G__119415 = "(";
var G__119416 = (function (){var G__119598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119599 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119598,G__119599) : tailrecursion.hoplon.span.call(null,G__119598,G__119599));
})();
var G__119417 = "(";
var G__119418 = (function (){var G__119600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119601 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119600,G__119601) : tailrecursion.hoplon.span.call(null,G__119600,G__119601));
})();
var G__119419 = " ";
var G__119420 = (function (){var G__119602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119603 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119602,G__119603) : tailrecursion.hoplon.span.call(null,G__119602,G__119603));
})();
var G__119421 = ") (";
var G__119422 = (function (){var G__119604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119605 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119604,G__119605) : tailrecursion.hoplon.span.call(null,G__119604,G__119605));
})();
var G__119423 = " ";
var G__119424 = (function (){var G__119606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119607 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119606,G__119607) : tailrecursion.hoplon.span.call(null,G__119606,G__119607));
})();
var G__119425 = "))\n     (";
var G__119426 = (function (){var G__119608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119609 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119608,G__119609) : tailrecursion.hoplon.span.call(null,G__119608,G__119609));
})();
var G__119427 = "(";
var G__119428 = (function (){var G__119610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119611 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119610,G__119611) : tailrecursion.hoplon.span.call(null,G__119610,G__119611));
})();
var G__119429 = " ";
var G__119430 = (function (){var G__119612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119613 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119612,G__119613) : tailrecursion.hoplon.span.call(null,G__119612,G__119613));
})();
var G__119431 = ") (";
var G__119432 = (function (){var G__119614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__119615 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119614,G__119615) : tailrecursion.hoplon.span.call(null,G__119614,G__119615));
})();
var G__119433 = " ";
var G__119434 = (function (){var G__119616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119617 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119616,G__119617) : tailrecursion.hoplon.span.call(null,G__119616,G__119617));
})();
var G__119435 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__119261,G__119262,G__119263,G__119264,G__119265,G__119266,G__119267,G__119268,G__119269,G__119270,G__119271,G__119272,G__119273,G__119274,G__119275,G__119276,G__119277,G__119278,G__119279,G__119280,G__119281,G__119282,G__119283,G__119284,G__119285,G__119286,G__119287,G__119288,G__119289,G__119290,G__119291,G__119292,G__119293,G__119294,G__119295,G__119296,G__119297,G__119298,G__119299,G__119300,G__119301,G__119302,G__119303,G__119304,G__119305,G__119306,G__119307,G__119308,G__119309,G__119310,G__119311,G__119312,G__119313,G__119314,G__119315,G__119316,G__119317,G__119318,G__119319,G__119320,G__119321,G__119322,G__119323,G__119324,G__119325,G__119326,G__119327,G__119328,G__119329,G__119330,G__119331,G__119332,G__119333,G__119334,G__119335,G__119336,G__119337,G__119338,G__119339,G__119340,G__119341,G__119342,G__119343,G__119344,G__119345,G__119346,G__119347,G__119348,G__119349,G__119350,G__119351,G__119352,G__119353,G__119354,G__119355,G__119356,G__119357,G__119358,G__119359,G__119360,G__119361,G__119362,G__119363,G__119364,G__119365,G__119366,G__119367,G__119368,G__119369,G__119370,G__119371,G__119372,G__119373,G__119374,G__119375,G__119376,G__119377,G__119378,G__119379,G__119380,G__119381,G__119382,G__119383,G__119384,G__119385,G__119386,G__119387,G__119388,G__119389,G__119390,G__119391,G__119392,G__119393,G__119394,G__119395,G__119396,G__119397,G__119398,G__119399,G__119400,G__119401,G__119402,G__119403,G__119404,G__119405,G__119406,G__119407,G__119408,G__119409,G__119410,G__119411,G__119412,G__119413,G__119414,G__119415,G__119416,G__119417,G__119418,G__119419,G__119420,G__119421,G__119422,G__119423,G__119424,G__119425,G__119426,G__119427,G__119428,G__119429,G__119430,G__119431,G__119432,G__119433,G__119434,G__119435) : tailrecursion.hoplon.pre.call(null,G__119261,G__119262,G__119263,G__119264,G__119265,G__119266,G__119267,G__119268,G__119269,G__119270,G__119271,G__119272,G__119273,G__119274,G__119275,G__119276,G__119277,G__119278,G__119279,G__119280,G__119281,G__119282,G__119283,G__119284,G__119285,G__119286,G__119287,G__119288,G__119289,G__119290,G__119291,G__119292,G__119293,G__119294,G__119295,G__119296,G__119297,G__119298,G__119299,G__119300,G__119301,G__119302,G__119303,G__119304,G__119305,G__119306,G__119307,G__119308,G__119309,G__119310,G__119311,G__119312,G__119313,G__119314,G__119315,G__119316,G__119317,G__119318,G__119319,G__119320,G__119321,G__119322,G__119323,G__119324,G__119325,G__119326,G__119327,G__119328,G__119329,G__119330,G__119331,G__119332,G__119333,G__119334,G__119335,G__119336,G__119337,G__119338,G__119339,G__119340,G__119341,G__119342,G__119343,G__119344,G__119345,G__119346,G__119347,G__119348,G__119349,G__119350,G__119351,G__119352,G__119353,G__119354,G__119355,G__119356,G__119357,G__119358,G__119359,G__119360,G__119361,G__119362,G__119363,G__119364,G__119365,G__119366,G__119367,G__119368,G__119369,G__119370,G__119371,G__119372,G__119373,G__119374,G__119375,G__119376,G__119377,G__119378,G__119379,G__119380,G__119381,G__119382,G__119383,G__119384,G__119385,G__119386,G__119387,G__119388,G__119389,G__119390,G__119391,G__119392,G__119393,G__119394,G__119395,G__119396,G__119397,G__119398,G__119399,G__119400,G__119401,G__119402,G__119403,G__119404,G__119405,G__119406,G__119407,G__119408,G__119409,G__119410,G__119411,G__119412,G__119413,G__119414,G__119415,G__119416,G__119417,G__119418,G__119419,G__119420,G__119421,G__119422,G__119423,G__119424,G__119425,G__119426,G__119427,G__119428,G__119429,G__119430,G__119431,G__119432,G__119433,G__119434,G__119435));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119259,G__119260) : tailrecursion.hoplon.div.call(null,G__119259,G__119260));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119258) : tailrecursion.hoplon.div.call(null,G__119258));
})(),(function (){var G__119618 = cljs.core.PersistentArrayMap.EMPTY;
var G__119619 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__119620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__119621 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119620,G__119621) : tailrecursion.hoplon.markdown.code_node.call(null,G__119620,G__119621));
})(),", ",(function (){var G__119622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__119623 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119622,G__119623) : tailrecursion.hoplon.markdown.code_node.call(null,G__119622,G__119623));
})(),", and ",(function (){var G__119624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__119625 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119624,G__119625) : tailrecursion.hoplon.markdown.code_node.call(null,G__119624,G__119625));
})(),". But we haven",(function (){var G__119626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119627 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119626,G__119627) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119626,G__119627));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119618,G__119619) : tailrecursion.hoplon.markdown.para_node.call(null,G__119618,G__119619));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119215;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119214;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119213;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119212;
}})()], 0));
var G__119182 = "";
var G__119183 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_119628 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119629 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119630 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119631 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119632 = cljs.core.PersistentArrayMap.EMPTY;
var G__119633 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__119634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__119635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119634,G__119635) : tailrecursion.hoplon.markdown.code_node.call(null,G__119634,G__119635));
})()," and ",(function (){var G__119636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__119637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119636,G__119637) : tailrecursion.hoplon.markdown.code_node.call(null,G__119636,G__119637));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__119638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__119639 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119638,G__119639) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119638,G__119639));
})()," the one we will be using instead of the ",(function (){var G__119640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119641 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119640,G__119641) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119640,G__119641));
})()," they use for this section in Scheme ",(function (){var G__119642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__119643 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119642,G__119643) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119642,G__119643));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__119644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__119645 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119644,G__119645) : tailrecursion.hoplon.markdown.code_node.call(null,G__119644,G__119645));
})()," like so ",(function (){var G__119646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 2 3)"], null);
var G__119647 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119646,G__119647) : tailrecursion.hoplon.markdown.code_node.call(null,G__119646,G__119647));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__119648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(first (list 1 2 3))"], null);
var G__119649 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119648,G__119649) : tailrecursion.hoplon.markdown.code_node.call(null,G__119648,G__119649));
})()," would return ",(function (){var G__119650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"1"], null);
var G__119651 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119650,G__119651) : tailrecursion.hoplon.markdown.code_node.call(null,G__119650,G__119651));
})(),", and ",(function (){var G__119652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(rest (list 1 2 3))"], null);
var G__119653 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119652,G__119653) : tailrecursion.hoplon.markdown.code_node.call(null,G__119652,G__119653));
})()," returns ",(function (){var G__119654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(2 3)"], null);
var G__119655 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119654,G__119655) : tailrecursion.hoplon.markdown.code_node.call(null,G__119654,G__119655));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__119656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119657 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119656,G__119657) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119656,G__119657));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__119658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list?"], null);
var G__119659 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119658,G__119659) : tailrecursion.hoplon.markdown.code_node.call(null,G__119658,G__119659));
})()," like so: ",(function (){var G__119660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list? (rest (list 1 2 3)))"], null);
var G__119661 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119660,G__119661) : tailrecursion.hoplon.markdown.code_node.call(null,G__119660,G__119661));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__119662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__119663 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119662,G__119663) : tailrecursion.hoplon.markdown.code_node.call(null,G__119662,G__119663));
})(),".",(function (){var G__119664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__119665 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__119666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119667 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119666,G__119667) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119666,G__119667));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119664,G__119665) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119664,G__119665));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__119668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__119669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119668,G__119669) : tailrecursion.hoplon.markdown.code_node.call(null,G__119668,G__119669));
})()," does exactly that. Hence, ",(function (){var G__119670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(conj (list 1 2 3) 4)"], null);
var G__119671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119670,G__119671) : tailrecursion.hoplon.markdown.code_node.call(null,G__119670,G__119671));
})()," returns ",(function (){var G__119672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(4 1\n2 3)"], null);
var G__119673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119672,G__119673) : tailrecursion.hoplon.markdown.code_node.call(null,G__119672,G__119673));
})(),", and ",(function (){var G__119674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(conj (list 1 2 3) 4 5)"], null);
var G__119675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119674,G__119675) : tailrecursion.hoplon.markdown.code_node.call(null,G__119674,G__119675));
})()," returns ",(function (){var G__119676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(5 4 1 2 3)"], null);
var G__119677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119676,G__119677) : tailrecursion.hoplon.markdown.code_node.call(null,G__119676,G__119677));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119632,G__119633) : tailrecursion.hoplon.markdown.para_node.call(null,G__119632,G__119633));
})(),(function (){var G__119678 = cljs.core.PersistentArrayMap.EMPTY;
var G__119679 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__119680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119680,G__119681) : tailrecursion.hoplon.markdown.code_node.call(null,G__119680,G__119681));
})()," (which also works in Clojure",(function (){var G__119682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__119683 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119682,G__119683) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119682,G__119683));
})()," kinda) and has procedures ",(function (){var G__119684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__119685 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119684,G__119685) : tailrecursion.hoplon.markdown.code_node.call(null,G__119684,G__119685));
})()," and ",(function (){var G__119686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__119687 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119686,G__119687) : tailrecursion.hoplon.markdown.code_node.call(null,G__119686,G__119687));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__119688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__119689 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__119690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119691 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119690,G__119691) : tailrecursion.hoplon.markdown.code_node.call(null,G__119690,G__119691));
})()," stands for ",(function (){var G__119692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119693 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119692,G__119693) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119692,G__119693));
})()," The names ",(function (){var G__119694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__119695 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119694,G__119695) : tailrecursion.hoplon.markdown.code_node.call(null,G__119694,G__119695));
})()," and ",(function (){var G__119696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__119697 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119696,G__119697) : tailrecursion.hoplon.markdown.code_node.call(null,G__119696,G__119697));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__119698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119699 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119698,G__119699) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119698,G__119699));
})()," and ",(function (){var G__119700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119701 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119700,G__119701) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119700,G__119701));
})()," parts of a memory location. ",(function (){var G__119702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__119703 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119702,G__119703) : tailrecursion.hoplon.markdown.code_node.call(null,G__119702,G__119703));
})()," stands for ",(function (){var G__119704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119705 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119704,G__119705) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119704,G__119705));
})()," and ",(function (){var G__119706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__119707 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119706,G__119707) : tailrecursion.hoplon.markdown.code_node.call(null,G__119706,G__119707));
})()," (pronounced ",(function (){var G__119708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119709 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119708,G__119709) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119708,G__119709));
})(),") stands for ",(function (){var G__119710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__119711 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119710,G__119711) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119710,G__119711));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119688,G__119689) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119688,G__119689));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__119712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119712,G__119713) : tailrecursion.hoplon.markdown.code_node.call(null,G__119712,G__119713));
})(),", ",(function (){var G__119714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__119715 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119714,G__119715) : tailrecursion.hoplon.markdown.code_node.call(null,G__119714,G__119715));
})(),", and ",(function (){var G__119716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__119717 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119716,G__119717) : tailrecursion.hoplon.markdown.code_node.call(null,G__119716,G__119717));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119678,G__119679) : tailrecursion.hoplon.markdown.para_node.call(null,G__119678,G__119679));
})(),(function (){var G__119718 = (function (){var G__119719 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119720 = (function (){var G__119721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119722 = "(";
var G__119723 = (function (){var G__119731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119732 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119731,G__119732) : tailrecursion.hoplon.span.call(null,G__119731,G__119732));
})();
var G__119724 = (function (){var G__119733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119734 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119733,G__119734) : tailrecursion.hoplon.span.call(null,G__119733,G__119734));
})();
var G__119725 = " (";
var G__119726 = (function (){var G__119735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119736 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119735,G__119736) : tailrecursion.hoplon.span.call(null,G__119735,G__119736));
})();
var G__119727 = (function (){var G__119737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119738 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119737,G__119738) : tailrecursion.hoplon.span.call(null,G__119737,G__119738));
})();
var G__119728 = " ";
var G__119729 = (function (){var G__119739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119740 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119739,G__119740) : tailrecursion.hoplon.span.call(null,G__119739,G__119740));
})();
var G__119730 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__119721,G__119722,G__119723,G__119724,G__119725,G__119726,G__119727,G__119728,G__119729,G__119730) : tailrecursion.hoplon.pre.call(null,G__119721,G__119722,G__119723,G__119724,G__119725,G__119726,G__119727,G__119728,G__119729,G__119730));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119719,G__119720) : tailrecursion.hoplon.div.call(null,G__119719,G__119720));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119718) : tailrecursion.hoplon.div.call(null,G__119718));
})(),(function (){var G__119741 = cljs.core.PersistentArrayMap.EMPTY;
var G__119742 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119741,G__119742) : tailrecursion.hoplon.markdown.para_node.call(null,G__119741,G__119742));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119631;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119630;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119629;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119628;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_119743 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119744 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119745 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119746 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119747 = cljs.core.PersistentArrayMap.EMPTY;
var G__119748 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__119749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119750 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119749,G__119750) : tailrecursion.hoplon.markdown.code_node.call(null,G__119749,G__119750));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119747,G__119748) : tailrecursion.hoplon.markdown.para_node.call(null,G__119747,G__119748));
})(),(function (){var G__119751 = (function (){var G__119752 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119753 = (function (){var G__119754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119755 = "(";
var G__119756 = (function (){var G__119767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119768 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119767,G__119768) : tailrecursion.hoplon.span.call(null,G__119767,G__119768));
})();
var G__119757 = (function (){var G__119769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119770 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119769,G__119770) : tailrecursion.hoplon.span.call(null,G__119769,G__119770));
})();
var G__119758 = " (";
var G__119759 = (function (){var G__119771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119772 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119771,G__119772) : tailrecursion.hoplon.span.call(null,G__119771,G__119772));
})();
var G__119760 = (function (){var G__119773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119774 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119773,G__119774) : tailrecursion.hoplon.span.call(null,G__119773,G__119774));
})();
var G__119761 = " (";
var G__119762 = (function (){var G__119775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119776 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119775,G__119776) : tailrecursion.hoplon.span.call(null,G__119775,G__119776));
})();
var G__119763 = (function (){var G__119777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119778 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119777,G__119778) : tailrecursion.hoplon.span.call(null,G__119777,G__119778));
})();
var G__119764 = " ";
var G__119765 = (function (){var G__119779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119780 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119779,G__119780) : tailrecursion.hoplon.span.call(null,G__119779,G__119780));
})();
var G__119766 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__119754,G__119755,G__119756,G__119757,G__119758,G__119759,G__119760,G__119761,G__119762,G__119763,G__119764,G__119765,G__119766) : tailrecursion.hoplon.pre.call(null,G__119754,G__119755,G__119756,G__119757,G__119758,G__119759,G__119760,G__119761,G__119762,G__119763,G__119764,G__119765,G__119766));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119752,G__119753) : tailrecursion.hoplon.div.call(null,G__119752,G__119753));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119751) : tailrecursion.hoplon.div.call(null,G__119751));
})(),(function (){var G__119781 = cljs.core.PersistentArrayMap.EMPTY;
var G__119782 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__119783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119784 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119783,G__119784) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119783,G__119784));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__119785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119786 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119785,G__119786) : tailrecursion.hoplon.markdown.code_node.call(null,G__119785,G__119786));
})()," must be sequential object (or ",(function (){var G__119787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__119788 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119787,G__119788) : tailrecursion.hoplon.markdown.code_node.call(null,G__119787,G__119788));
})(),"). Either way, we will not be using ",(function (){var G__119789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119790 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119789,G__119790) : tailrecursion.hoplon.markdown.code_node.call(null,G__119789,G__119790));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__119791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__119792 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119791,G__119792) : tailrecursion.hoplon.markdown.code_node.call(null,G__119791,G__119792));
})()," and ",(function (){var G__119793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__119794 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119793,G__119794) : tailrecursion.hoplon.markdown.code_node.call(null,G__119793,G__119794));
})(),", which are more general anyway. Along with ",(function (){var G__119795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__119796 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119795,G__119796) : tailrecursion.hoplon.markdown.code_node.call(null,G__119795,G__119796));
})()," and ",(function (){var G__119797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__119798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119797,G__119798) : tailrecursion.hoplon.markdown.code_node.call(null,G__119797,G__119798));
})(),", lists also have ",(function (){var G__119799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__119800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119799,G__119800) : tailrecursion.hoplon.markdown.code_node.call(null,G__119799,G__119800));
})()," and ",(function (){var G__119801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__119802 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119801,G__119802) : tailrecursion.hoplon.markdown.code_node.call(null,G__119801,G__119802));
})()," which give you exactly what you",(function (){var G__119803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119803,G__119804) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119803,G__119804));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119781,G__119782) : tailrecursion.hoplon.markdown.para_node.call(null,G__119781,G__119782));
})(),(function (){var G__119805 = (function (){var G__119806 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119807 = (function (){var G__119808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119809 = "(";
var G__119810 = (function (){var G__119828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119829 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119828,G__119829) : tailrecursion.hoplon.span.call(null,G__119828,G__119829));
})();
var G__119811 = (function (){var G__119830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119831 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119830,G__119831) : tailrecursion.hoplon.span.call(null,G__119830,G__119831));
})();
var G__119812 = " (";
var G__119813 = (function (){var G__119832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119833 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119832,G__119833) : tailrecursion.hoplon.span.call(null,G__119832,G__119833));
})();
var G__119814 = (function (){var G__119834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119835 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119834,G__119835) : tailrecursion.hoplon.span.call(null,G__119834,G__119835));
})();
var G__119815 = " ";
var G__119816 = (function (){var G__119836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119837 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119836,G__119837) : tailrecursion.hoplon.span.call(null,G__119836,G__119837));
})();
var G__119817 = "))\n(";
var G__119818 = (function (){var G__119838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119839 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119838,G__119839) : tailrecursion.hoplon.span.call(null,G__119838,G__119839));
})();
var G__119819 = (function (){var G__119840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119841 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119840,G__119841) : tailrecursion.hoplon.span.call(null,G__119840,G__119841));
})();
var G__119820 = ")\n";
var G__119821 = (function (){var G__119842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119843 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119842,G__119843) : tailrecursion.hoplon.span.call(null,G__119842,G__119843));
})();
var G__119822 = "\n(";
var G__119823 = (function (){var G__119844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119845 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119844,G__119845) : tailrecursion.hoplon.span.call(null,G__119844,G__119845));
})();
var G__119824 = (function (){var G__119846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119847 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119846,G__119847) : tailrecursion.hoplon.span.call(null,G__119846,G__119847));
})();
var G__119825 = ")\n";
var G__119826 = (function (){var G__119848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119849 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119848,G__119849) : tailrecursion.hoplon.span.call(null,G__119848,G__119849));
})();
var G__119827 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__119808,G__119809,G__119810,G__119811,G__119812,G__119813,G__119814,G__119815,G__119816,G__119817,G__119818,G__119819,G__119820,G__119821,G__119822,G__119823,G__119824,G__119825,G__119826,G__119827) : tailrecursion.hoplon.pre.call(null,G__119808,G__119809,G__119810,G__119811,G__119812,G__119813,G__119814,G__119815,G__119816,G__119817,G__119818,G__119819,G__119820,G__119821,G__119822,G__119823,G__119824,G__119825,G__119826,G__119827));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119806,G__119807) : tailrecursion.hoplon.div.call(null,G__119806,G__119807));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119805) : tailrecursion.hoplon.div.call(null,G__119805));
})(),(function (){var G__119850 = cljs.core.PersistentArrayMap.EMPTY;
var G__119851 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__119852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__119853 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119852,G__119853) : tailrecursion.hoplon.markdown.code_node.call(null,G__119852,G__119853));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119850,G__119851) : tailrecursion.hoplon.markdown.para_node.call(null,G__119850,G__119851));
})(),(function (){var G__119854 = (function (){var G__119855 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__119856 = (function (){var G__119857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__119858 = "(";
var G__119859 = (function (){var G__119903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119904 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119903,G__119904) : tailrecursion.hoplon.span.call(null,G__119903,G__119904));
})();
var G__119860 = (function (){var G__119905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119906 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119905,G__119906) : tailrecursion.hoplon.span.call(null,G__119905,G__119906));
})();
var G__119861 = " (";
var G__119862 = (function (){var G__119907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119908 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119907,G__119908) : tailrecursion.hoplon.span.call(null,G__119907,G__119908));
})();
var G__119863 = (function (){var G__119909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119910 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119909,G__119910) : tailrecursion.hoplon.span.call(null,G__119909,G__119910));
})();
var G__119864 = " (";
var G__119865 = (function (){var G__119911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119912 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119911,G__119912) : tailrecursion.hoplon.span.call(null,G__119911,G__119912));
})();
var G__119866 = (function (){var G__119913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119914 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119913,G__119914) : tailrecursion.hoplon.span.call(null,G__119913,G__119914));
})();
var G__119867 = " ";
var G__119868 = (function (){var G__119915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119916 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119915,G__119916) : tailrecursion.hoplon.span.call(null,G__119915,G__119916));
})();
var G__119869 = ")))\n(";
var G__119870 = (function (){var G__119917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119918 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119917,G__119918) : tailrecursion.hoplon.span.call(null,G__119917,G__119918));
})();
var G__119871 = (function (){var G__119919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119920 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119919,G__119920) : tailrecursion.hoplon.span.call(null,G__119919,G__119920));
})();
var G__119872 = " (";
var G__119873 = (function (){var G__119921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119922 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119921,G__119922) : tailrecursion.hoplon.span.call(null,G__119921,G__119922));
})();
var G__119874 = (function (){var G__119923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119924 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119923,G__119924) : tailrecursion.hoplon.span.call(null,G__119923,G__119924));
})();
var G__119875 = " (";
var G__119876 = (function (){var G__119925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119926 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119925,G__119926) : tailrecursion.hoplon.span.call(null,G__119925,G__119926));
})();
var G__119877 = (function (){var G__119927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119928 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119927,G__119928) : tailrecursion.hoplon.span.call(null,G__119927,G__119928));
})();
var G__119878 = " ";
var G__119879 = (function (){var G__119929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119930 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119929,G__119930) : tailrecursion.hoplon.span.call(null,G__119929,G__119930));
})();
var G__119880 = ")))\n(";
var G__119881 = (function (){var G__119931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__119932 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119931,G__119932) : tailrecursion.hoplon.span.call(null,G__119931,G__119932));
})();
var G__119882 = (function (){var G__119933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119934 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119933,G__119934) : tailrecursion.hoplon.span.call(null,G__119933,G__119934));
})();
var G__119883 = " (";
var G__119884 = (function (){var G__119935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119936 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119935,G__119936) : tailrecursion.hoplon.span.call(null,G__119935,G__119936));
})();
var G__119885 = (function (){var G__119937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119938 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119937,G__119938) : tailrecursion.hoplon.span.call(null,G__119937,G__119938));
})();
var G__119886 = " ";
var G__119887 = (function (){var G__119939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119940 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119939,G__119940) : tailrecursion.hoplon.span.call(null,G__119939,G__119940));
})();
var G__119888 = "))\n\n(";
var G__119889 = (function (){var G__119941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119942 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119941,G__119942) : tailrecursion.hoplon.span.call(null,G__119941,G__119942));
})();
var G__119890 = "(";
var G__119891 = (function (){var G__119943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119944 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119943,G__119944) : tailrecursion.hoplon.span.call(null,G__119943,G__119944));
})();
var G__119892 = (function (){var G__119945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119946 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119945,G__119946) : tailrecursion.hoplon.span.call(null,G__119945,G__119946));
})();
var G__119893 = "))\n";
var G__119894 = (function (){var G__119947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119948 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119947,G__119948) : tailrecursion.hoplon.span.call(null,G__119947,G__119948));
})();
var G__119895 = "\n(";
var G__119896 = (function (){var G__119949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119950 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119949,G__119950) : tailrecursion.hoplon.span.call(null,G__119949,G__119950));
})();
var G__119897 = "(";
var G__119898 = (function (){var G__119951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__119952 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119951,G__119952) : tailrecursion.hoplon.span.call(null,G__119951,G__119952));
})();
var G__119899 = (function (){var G__119953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__119954 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119953,G__119954) : tailrecursion.hoplon.span.call(null,G__119953,G__119954));
})();
var G__119900 = "))\n";
var G__119901 = (function (){var G__119955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__119956 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__119955,G__119956) : tailrecursion.hoplon.span.call(null,G__119955,G__119956));
})();
var G__119902 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__119857,G__119858,G__119859,G__119860,G__119861,G__119862,G__119863,G__119864,G__119865,G__119866,G__119867,G__119868,G__119869,G__119870,G__119871,G__119872,G__119873,G__119874,G__119875,G__119876,G__119877,G__119878,G__119879,G__119880,G__119881,G__119882,G__119883,G__119884,G__119885,G__119886,G__119887,G__119888,G__119889,G__119890,G__119891,G__119892,G__119893,G__119894,G__119895,G__119896,G__119897,G__119898,G__119899,G__119900,G__119901,G__119902) : tailrecursion.hoplon.pre.call(null,G__119857,G__119858,G__119859,G__119860,G__119861,G__119862,G__119863,G__119864,G__119865,G__119866,G__119867,G__119868,G__119869,G__119870,G__119871,G__119872,G__119873,G__119874,G__119875,G__119876,G__119877,G__119878,G__119879,G__119880,G__119881,G__119882,G__119883,G__119884,G__119885,G__119886,G__119887,G__119888,G__119889,G__119890,G__119891,G__119892,G__119893,G__119894,G__119895,G__119896,G__119897,G__119898,G__119899,G__119900,G__119901,G__119902));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__119855,G__119856) : tailrecursion.hoplon.div.call(null,G__119855,G__119856));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__119854) : tailrecursion.hoplon.div.call(null,G__119854));
})(),(function (){var G__119957 = cljs.core.PersistentArrayMap.EMPTY;
var G__119958 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__119959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119960 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119959,G__119960) : tailrecursion.hoplon.markdown.code_node.call(null,G__119959,G__119960));
})(),", ",(function (){var G__119961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__119962 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119961,G__119962) : tailrecursion.hoplon.markdown.code_node.call(null,G__119961,G__119962));
})(),", and ",(function (){var G__119963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__119964 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119963,G__119964) : tailrecursion.hoplon.markdown.code_node.call(null,G__119963,G__119964));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__119965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__119966 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__119965,G__119966) : tailrecursion.hoplon.markdown.simple_node.call(null,G__119965,G__119966));
})(),"s pretend like our ",(function (){var G__119967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__119968 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119967,G__119968) : tailrecursion.hoplon.markdown.code_node.call(null,G__119967,G__119968));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119957,G__119958) : tailrecursion.hoplon.markdown.para_node.call(null,G__119957,G__119958));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119746;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119745;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119744;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119743;
}})()], 0));
var G__119184 = "";
var G__119185 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_119969 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119970 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_119971 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_119972 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__119973 = cljs.core.PersistentArrayMap.EMPTY;
var G__119974 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__119975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__119976 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119975,G__119976) : tailrecursion.hoplon.markdown.code_node.call(null,G__119975,G__119976));
})(),", ",(function (){var G__119977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__119978 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119977,G__119978) : tailrecursion.hoplon.markdown.code_node.call(null,G__119977,G__119978));
})(),", and ",(function (){var G__119979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__119980 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119979,G__119980) : tailrecursion.hoplon.markdown.code_node.call(null,G__119979,G__119980));
})()," are readily implemented as follows:",(function (){var G__119981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__119982 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__119983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(define make-rat cons)"], null);
var G__119984 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119983,G__119984) : tailrecursion.hoplon.markdown.code_node.call(null,G__119983,G__119984));
})()," ",(function (){var G__119985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(define numer car)"], null);
var G__119986 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119985,G__119986) : tailrecursion.hoplon.markdown.code_node.call(null,G__119985,G__119986));
})()," ",(function (){var G__119987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(define denom cdr)"], null);
var G__119988 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119987,G__119988) : tailrecursion.hoplon.markdown.code_node.call(null,G__119987,G__119988));
})()," The first definition associates the name ",(function (){var G__119989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__119990 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119989,G__119990) : tailrecursion.hoplon.markdown.code_node.call(null,G__119989,G__119990));
})()," with the value of the expression ",(function (){var G__119991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119992 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119991,G__119992) : tailrecursion.hoplon.markdown.code_node.call(null,G__119991,G__119992));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__119993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__119994 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119993,G__119994) : tailrecursion.hoplon.markdown.code_node.call(null,G__119993,G__119994));
})()," and ",(function (){var G__119995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__119996 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119995,G__119996) : tailrecursion.hoplon.markdown.code_node.call(null,G__119995,G__119996));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__119997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__119998 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119997,G__119998) : tailrecursion.hoplon.markdown.code_node.call(null,G__119997,G__119998));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__119999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__120000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__119999,G__120000) : tailrecursion.hoplon.markdown.code_node.call(null,G__119999,G__120000));
})(),", ",(function (){var G__120001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120001,G__120002) : tailrecursion.hoplon.markdown.code_node.call(null,G__120001,G__120002));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__120003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__120004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120003,G__120004) : tailrecursion.hoplon.markdown.code_node.call(null,G__120003,G__120004));
})(),", so there is only one procedure called, not two, when ",(function (){var G__120005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120005,G__120006) : tailrecursion.hoplon.markdown.code_node.call(null,G__120005,G__120006));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__120007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120007,G__120008) : tailrecursion.hoplon.markdown.code_node.call(null,G__120007,G__120008));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__120009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__120010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120009,G__120010) : tailrecursion.hoplon.markdown.code_node.call(null,G__120009,G__120010));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__119981,G__119982) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__119981,G__119982));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__119973,G__119974) : tailrecursion.hoplon.markdown.para_node.call(null,G__119973,G__119974));
})(),(function (){var G__120011 = (function (){var G__120012 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120013 = (function (){var G__120014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120015 = "(";
var G__120016 = (function (){var G__120049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120050 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120049,G__120050) : tailrecursion.hoplon.span.call(null,G__120049,G__120050));
})();
var G__120017 = "(";
var G__120018 = (function (){var G__120051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120052 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120051,G__120052) : tailrecursion.hoplon.span.call(null,G__120051,G__120052));
})();
var G__120019 = " ";
var G__120020 = (function (){var G__120053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120054 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120053,G__120054) : tailrecursion.hoplon.span.call(null,G__120053,G__120054));
})();
var G__120021 = " ";
var G__120022 = (function (){var G__120055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120056 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120055,G__120056) : tailrecursion.hoplon.span.call(null,G__120055,G__120056));
})();
var G__120023 = ") (";
var G__120024 = (function (){var G__120057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120058 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120057,G__120058) : tailrecursion.hoplon.span.call(null,G__120057,G__120058));
})();
var G__120025 = (function (){var G__120059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120060 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120059,G__120060) : tailrecursion.hoplon.span.call(null,G__120059,G__120060));
})();
var G__120026 = " ";
var G__120027 = (function (){var G__120061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120062 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120061,G__120062) : tailrecursion.hoplon.span.call(null,G__120061,G__120062));
})();
var G__120028 = "))\n(";
var G__120029 = (function (){var G__120063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120064 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120063,G__120064) : tailrecursion.hoplon.span.call(null,G__120063,G__120064));
})();
var G__120030 = "(";
var G__120031 = (function (){var G__120065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120066 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120065,G__120066) : tailrecursion.hoplon.span.call(null,G__120065,G__120066));
})();
var G__120032 = " ";
var G__120033 = (function (){var G__120067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120068 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120067,G__120068) : tailrecursion.hoplon.span.call(null,G__120067,G__120068));
})();
var G__120034 = ") (";
var G__120035 = (function (){var G__120069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120070 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120069,G__120070) : tailrecursion.hoplon.span.call(null,G__120069,G__120070));
})();
var G__120036 = " ";
var G__120037 = (function (){var G__120071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120072 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120071,G__120072) : tailrecursion.hoplon.span.call(null,G__120071,G__120072));
})();
var G__120038 = "))\n(";
var G__120039 = (function (){var G__120073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120074 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120073,G__120074) : tailrecursion.hoplon.span.call(null,G__120073,G__120074));
})();
var G__120040 = "(";
var G__120041 = (function (){var G__120075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120076 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120075,G__120076) : tailrecursion.hoplon.span.call(null,G__120075,G__120076));
})();
var G__120042 = " ";
var G__120043 = (function (){var G__120077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120078 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120077,G__120078) : tailrecursion.hoplon.span.call(null,G__120077,G__120078));
})();
var G__120044 = ") (";
var G__120045 = (function (){var G__120079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120080 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120079,G__120080) : tailrecursion.hoplon.span.call(null,G__120079,G__120080));
})();
var G__120046 = " ";
var G__120047 = (function (){var G__120081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120082 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120081,G__120082) : tailrecursion.hoplon.span.call(null,G__120081,G__120082));
})();
var G__120048 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__120014,G__120015,G__120016,G__120017,G__120018,G__120019,G__120020,G__120021,G__120022,G__120023,G__120024,G__120025,G__120026,G__120027,G__120028,G__120029,G__120030,G__120031,G__120032,G__120033,G__120034,G__120035,G__120036,G__120037,G__120038,G__120039,G__120040,G__120041,G__120042,G__120043,G__120044,G__120045,G__120046,G__120047,G__120048) : tailrecursion.hoplon.pre.call(null,G__120014,G__120015,G__120016,G__120017,G__120018,G__120019,G__120020,G__120021,G__120022,G__120023,G__120024,G__120025,G__120026,G__120027,G__120028,G__120029,G__120030,G__120031,G__120032,G__120033,G__120034,G__120035,G__120036,G__120037,G__120038,G__120039,G__120040,G__120041,G__120042,G__120043,G__120044,G__120045,G__120046,G__120047,G__120048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120012,G__120013) : tailrecursion.hoplon.div.call(null,G__120012,G__120013));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120011) : tailrecursion.hoplon.div.call(null,G__120011));
})(),(function (){var G__120083 = cljs.core.PersistentArrayMap.EMPTY;
var G__120084 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__120085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__120086 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__120087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"print"], null);
var G__120088 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120087,G__120088) : tailrecursion.hoplon.markdown.code_node.call(null,G__120087,G__120088));
})()," and ",(function (){var G__120089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"println"], null);
var G__120090 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120089,G__120090) : tailrecursion.hoplon.markdown.code_node.call(null,G__120089,G__120090));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__120085,G__120086) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__120085,G__120086));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120083,G__120084) : tailrecursion.hoplon.markdown.para_node.call(null,G__120083,G__120084));
})(),(function (){var G__120091 = (function (){var G__120092 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120093 = (function (){var G__120094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120095 = "(";
var G__120096 = (function (){var G__120113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120114 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120113,G__120114) : tailrecursion.hoplon.span.call(null,G__120113,G__120114));
})();
var G__120097 = (function (){var G__120115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120116 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120115,G__120116) : tailrecursion.hoplon.span.call(null,G__120115,G__120116));
})();
var G__120098 = " [";
var G__120099 = (function (){var G__120117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120118 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120117,G__120118) : tailrecursion.hoplon.span.call(null,G__120117,G__120118));
})();
var G__120100 = "]\n  (";
var G__120101 = (function (){var G__120119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120120 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120119,G__120120) : tailrecursion.hoplon.span.call(null,G__120119,G__120120));
})();
var G__120102 = "(";
var G__120103 = (function (){var G__120121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120122 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120121,G__120122) : tailrecursion.hoplon.span.call(null,G__120121,G__120122));
})();
var G__120104 = " ";
var G__120105 = (function (){var G__120123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120124 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120123,G__120124) : tailrecursion.hoplon.span.call(null,G__120123,G__120124));
})();
var G__120106 = ") ";
var G__120107 = (function (){var G__120125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__120126 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120125,G__120126) : tailrecursion.hoplon.span.call(null,G__120125,G__120126));
})();
var G__120108 = " (";
var G__120109 = (function (){var G__120127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120128 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120127,G__120128) : tailrecursion.hoplon.span.call(null,G__120127,G__120128));
})();
var G__120110 = " ";
var G__120111 = (function (){var G__120129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120130 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120129,G__120130) : tailrecursion.hoplon.span.call(null,G__120129,G__120130));
})();
var G__120112 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__120094,G__120095,G__120096,G__120097,G__120098,G__120099,G__120100,G__120101,G__120102,G__120103,G__120104,G__120105,G__120106,G__120107,G__120108,G__120109,G__120110,G__120111,G__120112) : tailrecursion.hoplon.pre.call(null,G__120094,G__120095,G__120096,G__120097,G__120098,G__120099,G__120100,G__120101,G__120102,G__120103,G__120104,G__120105,G__120106,G__120107,G__120108,G__120109,G__120110,G__120111,G__120112));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120092,G__120093) : tailrecursion.hoplon.div.call(null,G__120092,G__120093));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120091) : tailrecursion.hoplon.div.call(null,G__120091));
})(),(function (){var G__120131 = cljs.core.PersistentArrayMap.EMPTY;
var G__120132 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__120133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"println"], null);
var G__120134 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120133,G__120134) : tailrecursion.hoplon.markdown.code_node.call(null,G__120133,G__120134));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__120135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__120136 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120135,G__120136) : tailrecursion.hoplon.markdown.code_node.call(null,G__120135,G__120136));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120131,G__120132) : tailrecursion.hoplon.markdown.para_node.call(null,G__120131,G__120132));
})(),(function (){var G__120137 = cljs.core.PersistentArrayMap.EMPTY;
var G__120138 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120137,G__120138) : tailrecursion.hoplon.markdown.para_node.call(null,G__120137,G__120138));
})(),(function (){var G__120139 = (function (){var G__120140 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120141 = (function (){var G__120142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120143 = "(";
var G__120144 = (function (){var G__120202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120203 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120202,G__120203) : tailrecursion.hoplon.span.call(null,G__120202,G__120203));
})();
var G__120145 = (function (){var G__120204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120205 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120204,G__120205) : tailrecursion.hoplon.span.call(null,G__120204,G__120205));
})();
var G__120146 = " (";
var G__120147 = (function (){var G__120206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120207 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120206,G__120207) : tailrecursion.hoplon.span.call(null,G__120206,G__120207));
})();
var G__120148 = " ";
var G__120149 = (function (){var G__120208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120209 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120208,G__120209) : tailrecursion.hoplon.span.call(null,G__120208,G__120209));
})();
var G__120150 = " ";
var G__120151 = (function (){var G__120210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120211 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120210,G__120211) : tailrecursion.hoplon.span.call(null,G__120210,G__120211));
})();
var G__120152 = "))\n(";
var G__120153 = (function (){var G__120212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120213 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120212,G__120213) : tailrecursion.hoplon.span.call(null,G__120212,G__120213));
})();
var G__120154 = " ";
var G__120155 = (function (){var G__120214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120215 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120214,G__120215) : tailrecursion.hoplon.span.call(null,G__120214,G__120215));
})();
var G__120156 = ")\n";
var G__120157 = (function (){var G__120216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120217 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120216,G__120217) : tailrecursion.hoplon.span.call(null,G__120216,G__120217));
})();
var G__120158 = (function (){var G__120218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120219 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120218,G__120219) : tailrecursion.hoplon.span.call(null,G__120218,G__120219));
})();
var G__120159 = "\n\n(";
var G__120160 = (function (){var G__120220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120221 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120220,G__120221) : tailrecursion.hoplon.span.call(null,G__120220,G__120221));
})();
var G__120161 = (function (){var G__120222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120223 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120222,G__120223) : tailrecursion.hoplon.span.call(null,G__120222,G__120223));
})();
var G__120162 = " (";
var G__120163 = (function (){var G__120224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120225 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120224,G__120225) : tailrecursion.hoplon.span.call(null,G__120224,G__120225));
})();
var G__120164 = " ";
var G__120165 = (function (){var G__120226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120227 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120226,G__120227) : tailrecursion.hoplon.span.call(null,G__120226,G__120227));
})();
var G__120166 = " ";
var G__120167 = (function (){var G__120228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120229 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120228,G__120229) : tailrecursion.hoplon.span.call(null,G__120228,G__120229));
})();
var G__120168 = "))\n(";
var G__120169 = (function (){var G__120230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120231 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120230,G__120231) : tailrecursion.hoplon.span.call(null,G__120230,G__120231));
})();
var G__120170 = " (";
var G__120171 = (function (){var G__120232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120233 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120232,G__120233) : tailrecursion.hoplon.span.call(null,G__120232,G__120233));
})();
var G__120172 = " ";
var G__120173 = (function (){var G__120234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120235 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120234,G__120235) : tailrecursion.hoplon.span.call(null,G__120234,G__120235));
})();
var G__120174 = " ";
var G__120175 = (function (){var G__120236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120237 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120236,G__120237) : tailrecursion.hoplon.span.call(null,G__120236,G__120237));
})();
var G__120176 = "))\n";
var G__120177 = (function (){var G__120238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120239 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120238,G__120239) : tailrecursion.hoplon.span.call(null,G__120238,G__120239));
})();
var G__120178 = (function (){var G__120240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120241 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120240,G__120241) : tailrecursion.hoplon.span.call(null,G__120240,G__120241));
})();
var G__120179 = "\n\n(";
var G__120180 = (function (){var G__120242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120243 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120242,G__120243) : tailrecursion.hoplon.span.call(null,G__120242,G__120243));
})();
var G__120181 = " (";
var G__120182 = (function (){var G__120244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120245 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120244,G__120245) : tailrecursion.hoplon.span.call(null,G__120244,G__120245));
})();
var G__120183 = " ";
var G__120184 = (function (){var G__120246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120247 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120246,G__120247) : tailrecursion.hoplon.span.call(null,G__120246,G__120247));
})();
var G__120185 = " ";
var G__120186 = (function (){var G__120248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120249 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120248,G__120249) : tailrecursion.hoplon.span.call(null,G__120248,G__120249));
})();
var G__120187 = "))\n";
var G__120188 = (function (){var G__120250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120251 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120250,G__120251) : tailrecursion.hoplon.span.call(null,G__120250,G__120251));
})();
var G__120189 = (function (){var G__120252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120253 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120252,G__120253) : tailrecursion.hoplon.span.call(null,G__120252,G__120253));
})();
var G__120190 = "\n\n(";
var G__120191 = (function (){var G__120254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120255 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120254,G__120255) : tailrecursion.hoplon.span.call(null,G__120254,G__120255));
})();
var G__120192 = " (";
var G__120193 = (function (){var G__120256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120257 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120256,G__120257) : tailrecursion.hoplon.span.call(null,G__120256,G__120257));
})();
var G__120194 = " ";
var G__120195 = (function (){var G__120258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120259 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120258,G__120259) : tailrecursion.hoplon.span.call(null,G__120258,G__120259));
})();
var G__120196 = " ";
var G__120197 = (function (){var G__120260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120261 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120260,G__120261) : tailrecursion.hoplon.span.call(null,G__120260,G__120261));
})();
var G__120198 = "))\n";
var G__120199 = (function (){var G__120262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120263 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120262,G__120263) : tailrecursion.hoplon.span.call(null,G__120262,G__120263));
})();
var G__120200 = (function (){var G__120264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120265 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120264,G__120265) : tailrecursion.hoplon.span.call(null,G__120264,G__120265));
})();
var G__120201 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__120142,G__120143,G__120144,G__120145,G__120146,G__120147,G__120148,G__120149,G__120150,G__120151,G__120152,G__120153,G__120154,G__120155,G__120156,G__120157,G__120158,G__120159,G__120160,G__120161,G__120162,G__120163,G__120164,G__120165,G__120166,G__120167,G__120168,G__120169,G__120170,G__120171,G__120172,G__120173,G__120174,G__120175,G__120176,G__120177,G__120178,G__120179,G__120180,G__120181,G__120182,G__120183,G__120184,G__120185,G__120186,G__120187,G__120188,G__120189,G__120190,G__120191,G__120192,G__120193,G__120194,G__120195,G__120196,G__120197,G__120198,G__120199,G__120200,G__120201) : tailrecursion.hoplon.pre.call(null,G__120142,G__120143,G__120144,G__120145,G__120146,G__120147,G__120148,G__120149,G__120150,G__120151,G__120152,G__120153,G__120154,G__120155,G__120156,G__120157,G__120158,G__120159,G__120160,G__120161,G__120162,G__120163,G__120164,G__120165,G__120166,G__120167,G__120168,G__120169,G__120170,G__120171,G__120172,G__120173,G__120174,G__120175,G__120176,G__120177,G__120178,G__120179,G__120180,G__120181,G__120182,G__120183,G__120184,G__120185,G__120186,G__120187,G__120188,G__120189,G__120190,G__120191,G__120192,G__120193,G__120194,G__120195,G__120196,G__120197,G__120198,G__120199,G__120200,G__120201));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120140,G__120141) : tailrecursion.hoplon.div.call(null,G__120140,G__120141));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120139) : tailrecursion.hoplon.div.call(null,G__120139));
})(),(function (){var G__120266 = cljs.core.PersistentArrayMap.EMPTY;
var G__120267 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__120268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120269 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120268,G__120269) : tailrecursion.hoplon.markdown.code_node.call(null,G__120268,G__120269));
})(),". If we have a ",(function (){var G__120270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__120271 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120270,G__120271) : tailrecursion.hoplon.markdown.code_node.call(null,G__120270,G__120271));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__120272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__120273 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120272,G__120273) : tailrecursion.hoplon.markdown.code_node.call(null,G__120272,G__120273));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120266,G__120267) : tailrecursion.hoplon.markdown.para_node.call(null,G__120266,G__120267));
})(),(function (){var G__120274 = (function (){var G__120275 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120276 = (function (){var G__120277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120278 = "(";
var G__120279 = (function (){var G__120308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120309 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120308,G__120309) : tailrecursion.hoplon.span.call(null,G__120308,G__120309));
})();
var G__120280 = (function (){var G__120310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120311 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120310,G__120311) : tailrecursion.hoplon.span.call(null,G__120310,G__120311));
})();
var G__120281 = " [";
var G__120282 = (function (){var G__120312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120313 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120312,G__120313) : tailrecursion.hoplon.span.call(null,G__120312,G__120313));
})();
var G__120283 = " ";
var G__120284 = (function (){var G__120314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120315 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120314,G__120315) : tailrecursion.hoplon.span.call(null,G__120314,G__120315));
})();
var G__120285 = "]\n  (";
var G__120286 = (function (){var G__120316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120317 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120316,G__120317) : tailrecursion.hoplon.span.call(null,G__120316,G__120317));
})();
var G__120287 = "[";
var G__120288 = (function (){var G__120318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120319 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120318,G__120319) : tailrecursion.hoplon.span.call(null,G__120318,G__120319));
})();
var G__120289 = " (";
var G__120290 = (function (){var G__120320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120321 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120320,G__120321) : tailrecursion.hoplon.span.call(null,G__120320,G__120321));
})();
var G__120291 = " ";
var G__120292 = (function (){var G__120322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120323 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120322,G__120323) : tailrecursion.hoplon.span.call(null,G__120322,G__120323));
})();
var G__120293 = " ";
var G__120294 = (function (){var G__120324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120325 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120324,G__120325) : tailrecursion.hoplon.span.call(null,G__120324,G__120325));
})();
var G__120295 = ")]\n    (";
var G__120296 = (function (){var G__120326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120327 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120326,G__120327) : tailrecursion.hoplon.span.call(null,G__120326,G__120327));
})();
var G__120297 = "(";
var G__120298 = (function (){var G__120328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120329 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120328,G__120329) : tailrecursion.hoplon.span.call(null,G__120328,G__120329));
})();
var G__120299 = (function (){var G__120330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120331 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120330,G__120331) : tailrecursion.hoplon.span.call(null,G__120330,G__120331));
})();
var G__120300 = " ";
var G__120301 = (function (){var G__120332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120333 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120332,G__120333) : tailrecursion.hoplon.span.call(null,G__120332,G__120333));
})();
var G__120302 = ") (";
var G__120303 = (function (){var G__120334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120335 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120334,G__120335) : tailrecursion.hoplon.span.call(null,G__120334,G__120335));
})();
var G__120304 = (function (){var G__120336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120337 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120336,G__120337) : tailrecursion.hoplon.span.call(null,G__120336,G__120337));
})();
var G__120305 = " ";
var G__120306 = (function (){var G__120338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120339 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120338,G__120339) : tailrecursion.hoplon.span.call(null,G__120338,G__120339));
})();
var G__120307 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__120277,G__120278,G__120279,G__120280,G__120281,G__120282,G__120283,G__120284,G__120285,G__120286,G__120287,G__120288,G__120289,G__120290,G__120291,G__120292,G__120293,G__120294,G__120295,G__120296,G__120297,G__120298,G__120299,G__120300,G__120301,G__120302,G__120303,G__120304,G__120305,G__120306,G__120307) : tailrecursion.hoplon.pre.call(null,G__120277,G__120278,G__120279,G__120280,G__120281,G__120282,G__120283,G__120284,G__120285,G__120286,G__120287,G__120288,G__120289,G__120290,G__120291,G__120292,G__120293,G__120294,G__120295,G__120296,G__120297,G__120298,G__120299,G__120300,G__120301,G__120302,G__120303,G__120304,G__120305,G__120306,G__120307));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120275,G__120276) : tailrecursion.hoplon.div.call(null,G__120275,G__120276));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120274) : tailrecursion.hoplon.div.call(null,G__120274));
})(),(function (){var G__120340 = cljs.core.PersistentArrayMap.EMPTY;
var G__120341 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120340,G__120341) : tailrecursion.hoplon.markdown.para_node.call(null,G__120340,G__120341));
})(),(function (){var G__120342 = (function (){var G__120343 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120344 = (function (){var G__120345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120346 = "(";
var G__120347 = (function (){var G__120358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120359 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120358,G__120359) : tailrecursion.hoplon.span.call(null,G__120358,G__120359));
})();
var G__120348 = " (";
var G__120349 = (function (){var G__120360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120361 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120360,G__120361) : tailrecursion.hoplon.span.call(null,G__120360,G__120361));
})();
var G__120350 = " ";
var G__120351 = (function (){var G__120362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120363 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120362,G__120363) : tailrecursion.hoplon.span.call(null,G__120362,G__120363));
})();
var G__120352 = " ";
var G__120353 = (function (){var G__120364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120365 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120364,G__120365) : tailrecursion.hoplon.span.call(null,G__120364,G__120365));
})();
var G__120354 = "))\n";
var G__120355 = (function (){var G__120366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120367 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120366,G__120367) : tailrecursion.hoplon.span.call(null,G__120366,G__120367));
})();
var G__120356 = (function (){var G__120368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120369 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120368,G__120369) : tailrecursion.hoplon.span.call(null,G__120368,G__120369));
})();
var G__120357 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__120345,G__120346,G__120347,G__120348,G__120349,G__120350,G__120351,G__120352,G__120353,G__120354,G__120355,G__120356,G__120357) : tailrecursion.hoplon.pre.call(null,G__120345,G__120346,G__120347,G__120348,G__120349,G__120350,G__120351,G__120352,G__120353,G__120354,G__120355,G__120356,G__120357));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120343,G__120344) : tailrecursion.hoplon.div.call(null,G__120343,G__120344));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120342) : tailrecursion.hoplon.div.call(null,G__120342));
})(),(function (){var G__120370 = cljs.core.PersistentArrayMap.EMPTY;
var G__120371 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__120372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120372,G__120373) : tailrecursion.hoplon.markdown.code_node.call(null,G__120372,G__120373));
})()," without changing any of the procedures (such as ",(function (){var G__120374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__120375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120374,G__120375) : tailrecursion.hoplon.markdown.code_node.call(null,G__120374,G__120375));
})()," and ",(function (){var G__120376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mul-rat"], null);
var G__120377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120376,G__120377) : tailrecursion.hoplon.markdown.code_node.call(null,G__120376,G__120377));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120370,G__120371) : tailrecursion.hoplon.markdown.para_node.call(null,G__120370,G__120371));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119972;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119971;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_119970;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_119969;
}})()], 0));
var G__119186 = "";
var G__119187 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_120378 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120379 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_120380 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120381 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__120382 = cljs.core.PersistentArrayMap.EMPTY;
var G__120383 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__120384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120385 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120384,G__120385) : tailrecursion.hoplon.markdown.code_node.call(null,G__120384,G__120385));
})()," that handles both positive and negative arguments. ",(function (){var G__120386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120386,G__120387) : tailrecursion.hoplon.markdown.code_node.call(null,G__120386,G__120387));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120382,G__120383) : tailrecursion.hoplon.markdown.para_node.call(null,G__120382,G__120383));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120381;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120380;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120379;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120378;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_120388 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120389 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_120390 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120391 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__120392 = (function (){var G__120393 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120394 = (function (){var G__120395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120396 = "(";
var G__120397 = (function (){var G__120465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120466 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120465,G__120466) : tailrecursion.hoplon.span.call(null,G__120465,G__120466));
})();
var G__120398 = (function (){var G__120467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120468 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120467,G__120468) : tailrecursion.hoplon.span.call(null,G__120467,G__120468));
})();
var G__120399 = " [";
var G__120400 = (function (){var G__120469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120470 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120469,G__120470) : tailrecursion.hoplon.span.call(null,G__120469,G__120470));
})();
var G__120401 = " ";
var G__120402 = (function (){var G__120471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120472 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120471,G__120472) : tailrecursion.hoplon.span.call(null,G__120471,G__120472));
})();
var G__120403 = "]\n  (";
var G__120404 = (function (){var G__120473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120474 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120473,G__120474) : tailrecursion.hoplon.span.call(null,G__120473,G__120474));
})();
var G__120405 = "[";
var G__120406 = (function (){var G__120475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120476 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120475,G__120476) : tailrecursion.hoplon.span.call(null,G__120475,G__120476));
})();
var G__120407 = " ";
var G__120408 = (function (){var G__120477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120478 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120477,G__120478) : tailrecursion.hoplon.span.call(null,G__120477,G__120478));
})();
var G__120409 = "(";
var G__120410 = (function (){var G__120479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120480 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120479,G__120480) : tailrecursion.hoplon.span.call(null,G__120479,G__120480));
})();
var G__120411 = "[";
var G__120412 = (function (){var G__120481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120482 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120481,G__120482) : tailrecursion.hoplon.span.call(null,G__120481,G__120482));
})();
var G__120413 = " (";
var G__120414 = (function (){var G__120483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120484 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120483,G__120484) : tailrecursion.hoplon.span.call(null,G__120483,G__120484));
})();
var G__120415 = " ";
var G__120416 = (function (){var G__120485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120486 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120485,G__120486) : tailrecursion.hoplon.span.call(null,G__120485,G__120486));
})();
var G__120417 = " ";
var G__120418 = (function (){var G__120487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120488 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120487,G__120488) : tailrecursion.hoplon.span.call(null,G__120487,G__120488));
})();
var G__120419 = ")]\n                (";
var G__120420 = (function (){var G__120489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120490 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120489,G__120490) : tailrecursion.hoplon.span.call(null,G__120489,G__120490));
})();
var G__120421 = "(";
var G__120422 = (function (){var G__120491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120492 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120491,G__120492) : tailrecursion.hoplon.span.call(null,G__120491,G__120492));
})();
var G__120423 = (function (){var G__120493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120494 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120493,G__120494) : tailrecursion.hoplon.span.call(null,G__120493,G__120494));
})();
var G__120424 = " ";
var G__120425 = (function (){var G__120495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120496 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120495,G__120496) : tailrecursion.hoplon.span.call(null,G__120495,G__120496));
})();
var G__120426 = ") (";
var G__120427 = (function (){var G__120497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120498 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120497,G__120498) : tailrecursion.hoplon.span.call(null,G__120497,G__120498));
})();
var G__120428 = (function (){var G__120499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120500 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120499,G__120500) : tailrecursion.hoplon.span.call(null,G__120499,G__120500));
})();
var G__120429 = " ";
var G__120430 = (function (){var G__120501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120502 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120501,G__120502) : tailrecursion.hoplon.span.call(null,G__120501,G__120502));
})();
var G__120431 = ")))]\n    (";
var G__120432 = (function (){var G__120503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120504 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120503,G__120504) : tailrecursion.hoplon.span.call(null,G__120503,G__120504));
})();
var G__120433 = "(";
var G__120434 = (function (){var G__120505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120506 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120505,G__120506) : tailrecursion.hoplon.span.call(null,G__120505,G__120506));
})();
var G__120435 = "(";
var G__120436 = (function (){var G__120507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120508 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120507,G__120508) : tailrecursion.hoplon.span.call(null,G__120507,G__120508));
})();
var G__120437 = (function (){var G__120509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120510 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120509,G__120510) : tailrecursion.hoplon.span.call(null,G__120509,G__120510));
})();
var G__120438 = " ";
var G__120439 = (function (){var G__120511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120512 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120511,G__120512) : tailrecursion.hoplon.span.call(null,G__120511,G__120512));
})();
var G__120440 = ") ";
var G__120441 = (function (){var G__120513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__120514 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120513,G__120514) : tailrecursion.hoplon.span.call(null,G__120513,G__120514));
})();
var G__120442 = ")\n        (";
var G__120443 = (function (){var G__120515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120516 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120515,G__120516) : tailrecursion.hoplon.span.call(null,G__120515,G__120516));
})();
var G__120444 = " (";
var G__120445 = (function (){var G__120517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120518 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120517,G__120518) : tailrecursion.hoplon.span.call(null,G__120517,G__120518));
})();
var G__120446 = " ";
var G__120447 = (function (){var G__120519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120520 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120519,G__120520) : tailrecursion.hoplon.span.call(null,G__120519,G__120520));
})();
var G__120448 = ") (";
var G__120449 = (function (){var G__120521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120522 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120521,G__120522) : tailrecursion.hoplon.span.call(null,G__120521,G__120522));
})();
var G__120450 = " ";
var G__120451 = (function (){var G__120523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120524 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120523,G__120524) : tailrecursion.hoplon.span.call(null,G__120523,G__120524));
})();
var G__120452 = "))\n        (";
var G__120453 = (function (){var G__120525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120526 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120525,G__120526) : tailrecursion.hoplon.span.call(null,G__120525,G__120526));
})();
var G__120454 = " (";
var G__120455 = (function (){var G__120527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120528 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120527,G__120528) : tailrecursion.hoplon.span.call(null,G__120527,G__120528));
})();
var G__120456 = "(";
var G__120457 = (function (){var G__120529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120530 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120529,G__120530) : tailrecursion.hoplon.span.call(null,G__120529,G__120530));
})();
var G__120458 = " ";
var G__120459 = (function (){var G__120531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120532 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120531,G__120532) : tailrecursion.hoplon.span.call(null,G__120531,G__120532));
})();
var G__120460 = ")) (";
var G__120461 = (function (){var G__120533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120534 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120533,G__120534) : tailrecursion.hoplon.span.call(null,G__120533,G__120534));
})();
var G__120462 = " ";
var G__120463 = (function (){var G__120535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120536 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120535,G__120536) : tailrecursion.hoplon.span.call(null,G__120535,G__120536));
})();
var G__120464 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__120395,G__120396,G__120397,G__120398,G__120399,G__120400,G__120401,G__120402,G__120403,G__120404,G__120405,G__120406,G__120407,G__120408,G__120409,G__120410,G__120411,G__120412,G__120413,G__120414,G__120415,G__120416,G__120417,G__120418,G__120419,G__120420,G__120421,G__120422,G__120423,G__120424,G__120425,G__120426,G__120427,G__120428,G__120429,G__120430,G__120431,G__120432,G__120433,G__120434,G__120435,G__120436,G__120437,G__120438,G__120439,G__120440,G__120441,G__120442,G__120443,G__120444,G__120445,G__120446,G__120447,G__120448,G__120449,G__120450,G__120451,G__120452,G__120453,G__120454,G__120455,G__120456,G__120457,G__120458,G__120459,G__120460,G__120461,G__120462,G__120463,G__120464) : tailrecursion.hoplon.pre.call(null,G__120395,G__120396,G__120397,G__120398,G__120399,G__120400,G__120401,G__120402,G__120403,G__120404,G__120405,G__120406,G__120407,G__120408,G__120409,G__120410,G__120411,G__120412,G__120413,G__120414,G__120415,G__120416,G__120417,G__120418,G__120419,G__120420,G__120421,G__120422,G__120423,G__120424,G__120425,G__120426,G__120427,G__120428,G__120429,G__120430,G__120431,G__120432,G__120433,G__120434,G__120435,G__120436,G__120437,G__120438,G__120439,G__120440,G__120441,G__120442,G__120443,G__120444,G__120445,G__120446,G__120447,G__120448,G__120449,G__120450,G__120451,G__120452,G__120453,G__120454,G__120455,G__120456,G__120457,G__120458,G__120459,G__120460,G__120461,G__120462,G__120463,G__120464));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120393,G__120394) : tailrecursion.hoplon.div.call(null,G__120393,G__120394));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120392) : tailrecursion.hoplon.div.call(null,G__120392));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120391;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120390;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120389;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120388;
}})()], 0))], 0))], 0));
var G__119188 = "";
var G__119189 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_120537 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120538 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_120539 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120540 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__120541 = cljs.core.PersistentArrayMap.EMPTY;
var G__120542 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__120543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__120544 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120543,G__120544) : tailrecursion.hoplon.markdown.code_node.call(null,G__120543,G__120544));
})()," and selectors ",(function (){var G__120545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__120546 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120545,G__120546) : tailrecursion.hoplon.markdown.code_node.call(null,G__120545,G__120546));
})()," and ",(function (){var G__120547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__120548 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120547,G__120548) : tailrecursion.hoplon.markdown.code_node.call(null,G__120547,G__120548));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120541,G__120542) : tailrecursion.hoplon.markdown.para_node.call(null,G__120541,G__120542));
})(),(function (){var G__120549 = cljs.core.PersistentArrayMap.EMPTY;
var G__120550 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__120551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__120552 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__120551,G__120552) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__120551,G__120552));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__120553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__120554 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__120553,G__120554) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__120553,G__120554));
})()," by the rational-number package: ",(function (){var G__120555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__120556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120555,G__120556) : tailrecursion.hoplon.markdown.code_node.call(null,G__120555,G__120556));
})(),", ",(function (){var G__120557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-rat"], null);
var G__120558 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120557,G__120558) : tailrecursion.hoplon.markdown.code_node.call(null,G__120557,G__120558));
})(),", ",(function (){var G__120559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mul-rat"], null);
var G__120560 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120559,G__120560) : tailrecursion.hoplon.markdown.code_node.call(null,G__120559,G__120560));
})(),", ",(function (){var G__120561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"div-rat"], null);
var G__120562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120561,G__120562) : tailrecursion.hoplon.markdown.code_node.call(null,G__120561,G__120562));
})(),", ",(function (){var G__120563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__120564 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120563,G__120564) : tailrecursion.hoplon.markdown.code_node.call(null,G__120563,G__120564));
})(),", and ",(function (){var G__120565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__120566 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120565,G__120566) : tailrecursion.hoplon.markdown.code_node.call(null,G__120565,G__120566));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__120567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__120568 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120567,G__120568) : tailrecursion.hoplon.markdown.code_node.call(null,G__120567,G__120568));
})(),", ",(function (){var G__120569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__120570 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120569,G__120570) : tailrecursion.hoplon.markdown.code_node.call(null,G__120569,G__120570));
})(),", and ",(function (){var G__120571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__120572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120571,G__120572) : tailrecursion.hoplon.markdown.code_node.call(null,G__120571,G__120572));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120549,G__120550) : tailrecursion.hoplon.markdown.para_node.call(null,G__120549,G__120550));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120540;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120539;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120538;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120537;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_120573 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120574 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_120575 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120576 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__120577 = cljs.core.PersistentArrayMap.EMPTY;
var G__120578 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120577,G__120578) : tailrecursion.hoplon.markdown.para_node.call(null,G__120577,G__120578));
})(),(function (){var G__120579 = cljs.core.PersistentArrayMap.EMPTY;
var G__120580 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120579,G__120580) : tailrecursion.hoplon.markdown.para_node.call(null,G__120579,G__120580));
})(),(function (){var G__120581 = (function (){var G__120582 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120583 = (function (){var G__120584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120585 = "(";
var G__120586 = (function (){var G__120646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120647 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120646,G__120647) : tailrecursion.hoplon.span.call(null,G__120646,G__120647));
})();
var G__120587 = (function (){var G__120648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120649 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120648,G__120649) : tailrecursion.hoplon.span.call(null,G__120648,G__120649));
})();
var G__120588 = " [";
var G__120589 = (function (){var G__120650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120651 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120650,G__120651) : tailrecursion.hoplon.span.call(null,G__120650,G__120651));
})();
var G__120590 = " ";
var G__120591 = (function (){var G__120652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120653 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120652,G__120653) : tailrecursion.hoplon.span.call(null,G__120652,G__120653));
})();
var G__120592 = "]\n  (";
var G__120593 = (function (){var G__120654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120655 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120654,G__120655) : tailrecursion.hoplon.span.call(null,G__120654,G__120655));
})();
var G__120594 = (function (){var G__120656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120657 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120656,G__120657) : tailrecursion.hoplon.span.call(null,G__120656,G__120657));
})();
var G__120595 = " ";
var G__120596 = (function (){var G__120658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120659 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120658,G__120659) : tailrecursion.hoplon.span.call(null,G__120658,G__120659));
})();
var G__120597 = "))\n(";
var G__120598 = (function (){var G__120660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120661 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120660,G__120661) : tailrecursion.hoplon.span.call(null,G__120660,G__120661));
})();
var G__120599 = (function (){var G__120662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120663 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120662,G__120663) : tailrecursion.hoplon.span.call(null,G__120662,G__120663));
})();
var G__120600 = " [";
var G__120601 = (function (){var G__120664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120665 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120664,G__120665) : tailrecursion.hoplon.span.call(null,G__120664,G__120665));
})();
var G__120602 = "]\n  (";
var G__120603 = (function (){var G__120666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120667 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120666,G__120667) : tailrecursion.hoplon.span.call(null,G__120666,G__120667));
})();
var G__120604 = "[";
var G__120605 = (function (){var G__120668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120669 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120668,G__120669) : tailrecursion.hoplon.span.call(null,G__120668,G__120669));
})();
var G__120606 = " (";
var G__120607 = (function (){var G__120670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120671 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120670,G__120671) : tailrecursion.hoplon.span.call(null,G__120670,G__120671));
})();
var G__120608 = " (";
var G__120609 = (function (){var G__120672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120673 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120672,G__120673) : tailrecursion.hoplon.span.call(null,G__120672,G__120673));
})();
var G__120610 = (function (){var G__120674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120675 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120674,G__120675) : tailrecursion.hoplon.span.call(null,G__120674,G__120675));
})();
var G__120611 = ") (";
var G__120612 = (function (){var G__120676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120677 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120676,G__120677) : tailrecursion.hoplon.span.call(null,G__120676,G__120677));
})();
var G__120613 = (function (){var G__120678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120679 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120678,G__120679) : tailrecursion.hoplon.span.call(null,G__120678,G__120679));
})();
var G__120614 = "))]\n    (";
var G__120615 = (function (){var G__120680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120681 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120680,G__120681) : tailrecursion.hoplon.span.call(null,G__120680,G__120681));
})();
var G__120616 = "(";
var G__120617 = (function (){var G__120682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120683 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120682,G__120683) : tailrecursion.hoplon.span.call(null,G__120682,G__120683));
})();
var G__120618 = (function (){var G__120684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120685 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120684,G__120685) : tailrecursion.hoplon.span.call(null,G__120684,G__120685));
})();
var G__120619 = ") ";
var G__120620 = (function (){var G__120686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120687 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120686,G__120687) : tailrecursion.hoplon.span.call(null,G__120686,G__120687));
})();
var G__120621 = ")))\n(";
var G__120622 = (function (){var G__120688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120689 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120688,G__120689) : tailrecursion.hoplon.span.call(null,G__120688,G__120689));
})();
var G__120623 = (function (){var G__120690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120691 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120690,G__120691) : tailrecursion.hoplon.span.call(null,G__120690,G__120691));
})();
var G__120624 = " [";
var G__120625 = (function (){var G__120692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120693 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120692,G__120693) : tailrecursion.hoplon.span.call(null,G__120692,G__120693));
})();
var G__120626 = "]\n  (";
var G__120627 = (function (){var G__120694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120695 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120694,G__120695) : tailrecursion.hoplon.span.call(null,G__120694,G__120695));
})();
var G__120628 = "[";
var G__120629 = (function (){var G__120696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120697 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120696,G__120697) : tailrecursion.hoplon.span.call(null,G__120696,G__120697));
})();
var G__120630 = " (";
var G__120631 = (function (){var G__120698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120699 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120698,G__120699) : tailrecursion.hoplon.span.call(null,G__120698,G__120699));
})();
var G__120632 = " (";
var G__120633 = (function (){var G__120700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120701 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120700,G__120701) : tailrecursion.hoplon.span.call(null,G__120700,G__120701));
})();
var G__120634 = (function (){var G__120702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120703 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120702,G__120703) : tailrecursion.hoplon.span.call(null,G__120702,G__120703));
})();
var G__120635 = ") (";
var G__120636 = (function (){var G__120704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120705 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120704,G__120705) : tailrecursion.hoplon.span.call(null,G__120704,G__120705));
})();
var G__120637 = (function (){var G__120706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120707 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120706,G__120707) : tailrecursion.hoplon.span.call(null,G__120706,G__120707));
})();
var G__120638 = "))]\n    (";
var G__120639 = (function (){var G__120708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120709 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120708,G__120709) : tailrecursion.hoplon.span.call(null,G__120708,G__120709));
})();
var G__120640 = "(";
var G__120641 = (function (){var G__120710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120711 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120710,G__120711) : tailrecursion.hoplon.span.call(null,G__120710,G__120711));
})();
var G__120642 = (function (){var G__120712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120713 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120712,G__120713) : tailrecursion.hoplon.span.call(null,G__120712,G__120713));
})();
var G__120643 = ") ";
var G__120644 = (function (){var G__120714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120715 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120714,G__120715) : tailrecursion.hoplon.span.call(null,G__120714,G__120715));
})();
var G__120645 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__120584,G__120585,G__120586,G__120587,G__120588,G__120589,G__120590,G__120591,G__120592,G__120593,G__120594,G__120595,G__120596,G__120597,G__120598,G__120599,G__120600,G__120601,G__120602,G__120603,G__120604,G__120605,G__120606,G__120607,G__120608,G__120609,G__120610,G__120611,G__120612,G__120613,G__120614,G__120615,G__120616,G__120617,G__120618,G__120619,G__120620,G__120621,G__120622,G__120623,G__120624,G__120625,G__120626,G__120627,G__120628,G__120629,G__120630,G__120631,G__120632,G__120633,G__120634,G__120635,G__120636,G__120637,G__120638,G__120639,G__120640,G__120641,G__120642,G__120643,G__120644,G__120645) : tailrecursion.hoplon.pre.call(null,G__120584,G__120585,G__120586,G__120587,G__120588,G__120589,G__120590,G__120591,G__120592,G__120593,G__120594,G__120595,G__120596,G__120597,G__120598,G__120599,G__120600,G__120601,G__120602,G__120603,G__120604,G__120605,G__120606,G__120607,G__120608,G__120609,G__120610,G__120611,G__120612,G__120613,G__120614,G__120615,G__120616,G__120617,G__120618,G__120619,G__120620,G__120621,G__120622,G__120623,G__120624,G__120625,G__120626,G__120627,G__120628,G__120629,G__120630,G__120631,G__120632,G__120633,G__120634,G__120635,G__120636,G__120637,G__120638,G__120639,G__120640,G__120641,G__120642,G__120643,G__120644,G__120645));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120582,G__120583) : tailrecursion.hoplon.div.call(null,G__120582,G__120583));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120581) : tailrecursion.hoplon.div.call(null,G__120581));
})(),(function (){var G__120716 = cljs.core.PersistentArrayMap.EMPTY;
var G__120717 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__120718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__120719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120718,G__120719) : tailrecursion.hoplon.markdown.code_node.call(null,G__120718,G__120719));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__120720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__120721 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120720,G__120721) : tailrecursion.hoplon.markdown.code_node.call(null,G__120720,G__120721));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__120722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__120723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120722,G__120723) : tailrecursion.hoplon.markdown.code_node.call(null,G__120722,G__120723));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__120724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__120725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120724,G__120725) : tailrecursion.hoplon.markdown.code_node.call(null,G__120724,G__120725));
})(),", ",(function (){var G__120726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-rat"], null);
var G__120727 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120726,G__120727) : tailrecursion.hoplon.markdown.code_node.call(null,G__120726,G__120727));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120716,G__120717) : tailrecursion.hoplon.markdown.para_node.call(null,G__120716,G__120717));
})(),(function (){var G__120728 = cljs.core.PersistentArrayMap.EMPTY;
var G__120729 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__120730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__120731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__120730,G__120731) : tailrecursion.hoplon.markdown.simple_node.call(null,G__120730,G__120731));
})(),"t decide initially whether to perform the ",(function (){var G__120732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__120733 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120732,G__120733) : tailrecursion.hoplon.markdown.code_node.call(null,G__120732,G__120733));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120728,G__120729) : tailrecursion.hoplon.markdown.para_node.call(null,G__120728,G__120729));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120576;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120575;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120574;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120573;
}})()], 0));
var G__119190 = "";
var G__119191 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_120734 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120735 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_120736 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120737 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__120738 = cljs.core.PersistentArrayMap.EMPTY;
var G__120739 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__120740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-segment"], null);
var G__120741 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120740,G__120741) : tailrecursion.hoplon.markdown.code_node.call(null,G__120740,G__120741));
})()," and selectors ",(function (){var G__120742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"start-segment"], null);
var G__120743 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120742,G__120743) : tailrecursion.hoplon.markdown.code_node.call(null,G__120742,G__120743));
})()," and ",(function (){var G__120744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"end-segment"], null);
var G__120745 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120744,G__120745) : tailrecursion.hoplon.markdown.code_node.call(null,G__120744,G__120745));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__120746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-point"], null);
var G__120747 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120746,G__120747) : tailrecursion.hoplon.markdown.code_node.call(null,G__120746,G__120747));
})()," and selectors ",(function (){var G__120748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x-point"], null);
var G__120749 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120748,G__120749) : tailrecursion.hoplon.markdown.code_node.call(null,G__120748,G__120749));
})()," and ",(function (){var G__120750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y-point"], null);
var G__120751 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120750,G__120751) : tailrecursion.hoplon.markdown.code_node.call(null,G__120750,G__120751));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__120752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"midpoint-segment"], null);
var G__120753 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__120752,G__120753) : tailrecursion.hoplon.markdown.code_node.call(null,G__120752,G__120753));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__120754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__120755 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__120754,G__120755) : tailrecursion.hoplon.markdown.simple_node.call(null,G__120754,G__120755));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120738,G__120739) : tailrecursion.hoplon.markdown.para_node.call(null,G__120738,G__120739));
})(),(function (){var G__120756 = (function (){var G__120757 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120758 = (function (){var G__120759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120760 = "(";
var G__120761 = (function (){var G__120781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120782 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120781,G__120782) : tailrecursion.hoplon.span.call(null,G__120781,G__120782));
})();
var G__120762 = (function (){var G__120783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120784 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120783,G__120784) : tailrecursion.hoplon.span.call(null,G__120783,G__120784));
})();
var G__120763 = " [";
var G__120764 = (function (){var G__120785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120786 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120785,G__120786) : tailrecursion.hoplon.span.call(null,G__120785,G__120786));
})();
var G__120765 = "]\n  (";
var G__120766 = (function (){var G__120787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120788 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120787,G__120788) : tailrecursion.hoplon.span.call(null,G__120787,G__120788));
})();
var G__120767 = (function (){var G__120789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__120790 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120789,G__120790) : tailrecursion.hoplon.span.call(null,G__120789,G__120790));
})();
var G__120768 = " (";
var G__120769 = (function (){var G__120791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120792 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120791,G__120792) : tailrecursion.hoplon.span.call(null,G__120791,G__120792));
})();
var G__120770 = " ";
var G__120771 = (function (){var G__120793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120794 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120793,G__120794) : tailrecursion.hoplon.span.call(null,G__120793,G__120794));
})();
var G__120772 = ") ";
var G__120773 = (function (){var G__120795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__120796 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120795,G__120796) : tailrecursion.hoplon.span.call(null,G__120795,G__120796));
})();
var G__120774 = " (";
var G__120775 = (function (){var G__120797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__120798 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120797,G__120798) : tailrecursion.hoplon.span.call(null,G__120797,G__120798));
})();
var G__120776 = " ";
var G__120777 = (function (){var G__120799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120800 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120799,G__120800) : tailrecursion.hoplon.span.call(null,G__120799,G__120800));
})();
var G__120778 = ") ";
var G__120779 = (function (){var G__120801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__120802 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120801,G__120802) : tailrecursion.hoplon.span.call(null,G__120801,G__120802));
})();
var G__120780 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__120759,G__120760,G__120761,G__120762,G__120763,G__120764,G__120765,G__120766,G__120767,G__120768,G__120769,G__120770,G__120771,G__120772,G__120773,G__120774,G__120775,G__120776,G__120777,G__120778,G__120779,G__120780) : tailrecursion.hoplon.pre.call(null,G__120759,G__120760,G__120761,G__120762,G__120763,G__120764,G__120765,G__120766,G__120767,G__120768,G__120769,G__120770,G__120771,G__120772,G__120773,G__120774,G__120775,G__120776,G__120777,G__120778,G__120779,G__120780));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120757,G__120758) : tailrecursion.hoplon.div.call(null,G__120757,G__120758));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120756) : tailrecursion.hoplon.div.call(null,G__120756));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120737;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120736;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120735;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120734;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_120803 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120804 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_120805 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_120806 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__120807 = (function (){var G__120808 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120809 = (function (){var G__120810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120811 = "(";
var G__120812 = (function (){var G__120868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120869 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120868,G__120869) : tailrecursion.hoplon.span.call(null,G__120868,G__120869));
})();
var G__120813 = (function (){var G__120870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120871 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120870,G__120871) : tailrecursion.hoplon.span.call(null,G__120870,G__120871));
})();
var G__120814 = " [";
var G__120815 = (function (){var G__120872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120873 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120872,G__120873) : tailrecursion.hoplon.span.call(null,G__120872,G__120873));
})();
var G__120816 = " ";
var G__120817 = (function (){var G__120874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120875 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120874,G__120875) : tailrecursion.hoplon.span.call(null,G__120874,G__120875));
})();
var G__120818 = "]\n  (";
var G__120819 = (function (){var G__120876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120877 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120876,G__120877) : tailrecursion.hoplon.span.call(null,G__120876,G__120877));
})();
var G__120820 = (function (){var G__120878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120879 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120878,G__120879) : tailrecursion.hoplon.span.call(null,G__120878,G__120879));
})();
var G__120821 = " ";
var G__120822 = (function (){var G__120880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120881 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120880,G__120881) : tailrecursion.hoplon.span.call(null,G__120880,G__120881));
})();
var G__120823 = "))\n(";
var G__120824 = (function (){var G__120882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120883 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120882,G__120883) : tailrecursion.hoplon.span.call(null,G__120882,G__120883));
})();
var G__120825 = (function (){var G__120884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120885 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120884,G__120885) : tailrecursion.hoplon.span.call(null,G__120884,G__120885));
})();
var G__120826 = " [";
var G__120827 = (function (){var G__120886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120887 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120886,G__120887) : tailrecursion.hoplon.span.call(null,G__120886,G__120887));
})();
var G__120828 = "]\n  (";
var G__120829 = (function (){var G__120888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120889 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120888,G__120889) : tailrecursion.hoplon.span.call(null,G__120888,G__120889));
})();
var G__120830 = (function (){var G__120890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120891 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120890,G__120891) : tailrecursion.hoplon.span.call(null,G__120890,G__120891));
})();
var G__120831 = "))\n(";
var G__120832 = (function (){var G__120892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120893 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120892,G__120893) : tailrecursion.hoplon.span.call(null,G__120892,G__120893));
})();
var G__120833 = (function (){var G__120894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120895 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120894,G__120895) : tailrecursion.hoplon.span.call(null,G__120894,G__120895));
})();
var G__120834 = " [";
var G__120835 = (function (){var G__120896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120897 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120896,G__120897) : tailrecursion.hoplon.span.call(null,G__120896,G__120897));
})();
var G__120836 = "]\n  (";
var G__120837 = (function (){var G__120898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120899 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120898,G__120899) : tailrecursion.hoplon.span.call(null,G__120898,G__120899));
})();
var G__120838 = (function (){var G__120900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120901 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120900,G__120901) : tailrecursion.hoplon.span.call(null,G__120900,G__120901));
})();
var G__120839 = "))\n(";
var G__120840 = (function (){var G__120902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120903 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120902,G__120903) : tailrecursion.hoplon.span.call(null,G__120902,G__120903));
})();
var G__120841 = (function (){var G__120904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120905 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120904,G__120905) : tailrecursion.hoplon.span.call(null,G__120904,G__120905));
})();
var G__120842 = " [";
var G__120843 = (function (){var G__120906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120907 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120906,G__120907) : tailrecursion.hoplon.span.call(null,G__120906,G__120907));
})();
var G__120844 = " ";
var G__120845 = (function (){var G__120908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120909 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120908,G__120909) : tailrecursion.hoplon.span.call(null,G__120908,G__120909));
})();
var G__120846 = "]\n  (";
var G__120847 = (function (){var G__120910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120911 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120910,G__120911) : tailrecursion.hoplon.span.call(null,G__120910,G__120911));
})();
var G__120848 = (function (){var G__120912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120913 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120912,G__120913) : tailrecursion.hoplon.span.call(null,G__120912,G__120913));
})();
var G__120849 = " ";
var G__120850 = (function (){var G__120914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120915 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120914,G__120915) : tailrecursion.hoplon.span.call(null,G__120914,G__120915));
})();
var G__120851 = "))\n(";
var G__120852 = (function (){var G__120916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120917 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120916,G__120917) : tailrecursion.hoplon.span.call(null,G__120916,G__120917));
})();
var G__120853 = (function (){var G__120918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120919 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120918,G__120919) : tailrecursion.hoplon.span.call(null,G__120918,G__120919));
})();
var G__120854 = " [";
var G__120855 = (function (){var G__120920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120921 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120920,G__120921) : tailrecursion.hoplon.span.call(null,G__120920,G__120921));
})();
var G__120856 = "]\n  (";
var G__120857 = (function (){var G__120922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120923 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120922,G__120923) : tailrecursion.hoplon.span.call(null,G__120922,G__120923));
})();
var G__120858 = (function (){var G__120924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120925 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120924,G__120925) : tailrecursion.hoplon.span.call(null,G__120924,G__120925));
})();
var G__120859 = "))\n(";
var G__120860 = (function (){var G__120926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__120927 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120926,G__120927) : tailrecursion.hoplon.span.call(null,G__120926,G__120927));
})();
var G__120861 = (function (){var G__120928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120929 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120928,G__120929) : tailrecursion.hoplon.span.call(null,G__120928,G__120929));
})();
var G__120862 = " [";
var G__120863 = (function (){var G__120930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120931 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120930,G__120931) : tailrecursion.hoplon.span.call(null,G__120930,G__120931));
})();
var G__120864 = "]\n  (";
var G__120865 = (function (){var G__120932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__120933 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120932,G__120933) : tailrecursion.hoplon.span.call(null,G__120932,G__120933));
})();
var G__120866 = (function (){var G__120934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__120935 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__120934,G__120935) : tailrecursion.hoplon.span.call(null,G__120934,G__120935));
})();
var G__120867 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__120810,G__120811,G__120812,G__120813,G__120814,G__120815,G__120816,G__120817,G__120818,G__120819,G__120820,G__120821,G__120822,G__120823,G__120824,G__120825,G__120826,G__120827,G__120828,G__120829,G__120830,G__120831,G__120832,G__120833,G__120834,G__120835,G__120836,G__120837,G__120838,G__120839,G__120840,G__120841,G__120842,G__120843,G__120844,G__120845,G__120846,G__120847,G__120848,G__120849,G__120850,G__120851,G__120852,G__120853,G__120854,G__120855,G__120856,G__120857,G__120858,G__120859,G__120860,G__120861,G__120862,G__120863,G__120864,G__120865,G__120866,G__120867) : tailrecursion.hoplon.pre.call(null,G__120810,G__120811,G__120812,G__120813,G__120814,G__120815,G__120816,G__120817,G__120818,G__120819,G__120820,G__120821,G__120822,G__120823,G__120824,G__120825,G__120826,G__120827,G__120828,G__120829,G__120830,G__120831,G__120832,G__120833,G__120834,G__120835,G__120836,G__120837,G__120838,G__120839,G__120840,G__120841,G__120842,G__120843,G__120844,G__120845,G__120846,G__120847,G__120848,G__120849,G__120850,G__120851,G__120852,G__120853,G__120854,G__120855,G__120856,G__120857,G__120858,G__120859,G__120860,G__120861,G__120862,G__120863,G__120864,G__120865,G__120866,G__120867));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120808,G__120809) : tailrecursion.hoplon.div.call(null,G__120808,G__120809));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120807) : tailrecursion.hoplon.div.call(null,G__120807));
})(),(function (){var G__120936 = cljs.core.PersistentArrayMap.EMPTY;
var G__120937 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__120936,G__120937) : tailrecursion.hoplon.markdown.para_node.call(null,G__120936,G__120937));
})(),(function (){var G__120938 = (function (){var G__120939 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__120940 = (function (){var G__120941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__120942 = "(";
var G__120943 = (function (){var G__121000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121001 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121000,G__121001) : tailrecursion.hoplon.span.call(null,G__121000,G__121001));
})();
var G__120944 = (function (){var G__121002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121003 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121002,G__121003) : tailrecursion.hoplon.span.call(null,G__121002,G__121003));
})();
var G__120945 = " [";
var G__120946 = (function (){var G__121004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121005 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121004,G__121005) : tailrecursion.hoplon.span.call(null,G__121004,G__121005));
})();
var G__120947 = "]\n  (";
var G__120948 = (function (){var G__121006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121007 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121006,G__121007) : tailrecursion.hoplon.span.call(null,G__121006,G__121007));
})();
var G__120949 = "[";
var G__120950 = (function (){var G__121008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121009 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121008,G__121009) : tailrecursion.hoplon.span.call(null,G__121008,G__121009));
})();
var G__120951 = "  (";
var G__120952 = (function (){var G__121010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121011 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121010,G__121011) : tailrecursion.hoplon.span.call(null,G__121010,G__121011));
})();
var G__120953 = " ";
var G__120954 = (function (){var G__121012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121013 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121012,G__121013) : tailrecursion.hoplon.span.call(null,G__121012,G__121013));
})();
var G__120955 = ")\n        ";
var G__120956 = (function (){var G__121014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121015 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121014,G__121015) : tailrecursion.hoplon.span.call(null,G__121014,G__121015));
})();
var G__120957 = "  (";
var G__120958 = (function (){var G__121016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121017 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121016,G__121017) : tailrecursion.hoplon.span.call(null,G__121016,G__121017));
})();
var G__120959 = " ";
var G__120960 = (function (){var G__121018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121019 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121018,G__121019) : tailrecursion.hoplon.span.call(null,G__121018,G__121019));
})();
var G__120961 = ")\n        ";
var G__120962 = (function (){var G__121020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121021 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121020,G__121021) : tailrecursion.hoplon.span.call(null,G__121020,G__121021));
})();
var G__120963 = " (";
var G__120964 = (function (){var G__121022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121023 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121022,G__121023) : tailrecursion.hoplon.span.call(null,G__121022,G__121023));
})();
var G__120965 = " ";
var G__120966 = (function (){var G__121024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121025 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121024,G__121025) : tailrecursion.hoplon.span.call(null,G__121024,G__121025));
})();
var G__120967 = ")\n        ";
var G__120968 = (function (){var G__121026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121027 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121026,G__121027) : tailrecursion.hoplon.span.call(null,G__121026,G__121027));
})();
var G__120969 = " (";
var G__120970 = (function (){var G__121028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121029 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121028,G__121029) : tailrecursion.hoplon.span.call(null,G__121028,G__121029));
})();
var G__120971 = " ";
var G__120972 = (function (){var G__121030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121031 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121030,G__121031) : tailrecursion.hoplon.span.call(null,G__121030,G__121031));
})();
var G__120973 = ")\n        ";
var G__120974 = (function (){var G__121032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121033 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121032,G__121033) : tailrecursion.hoplon.span.call(null,G__121032,G__121033));
})();
var G__120975 = " (";
var G__120976 = (function (){var G__121034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121035 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121034,G__121035) : tailrecursion.hoplon.span.call(null,G__121034,G__121035));
})();
var G__120977 = " ";
var G__120978 = (function (){var G__121036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121037 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121036,G__121037) : tailrecursion.hoplon.span.call(null,G__121036,G__121037));
})();
var G__120979 = ")\n        ";
var G__120980 = (function (){var G__121038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121039 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121038,G__121039) : tailrecursion.hoplon.span.call(null,G__121038,G__121039));
})();
var G__120981 = " (";
var G__120982 = (function (){var G__121040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121041 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121040,G__121041) : tailrecursion.hoplon.span.call(null,G__121040,G__121041));
})();
var G__120983 = " ";
var G__120984 = (function (){var G__121042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121043 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121042,G__121043) : tailrecursion.hoplon.span.call(null,G__121042,G__121043));
})();
var G__120985 = ")]\n    (";
var G__120986 = (function (){var G__121044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121045 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121044,G__121045) : tailrecursion.hoplon.span.call(null,G__121044,G__121045));
})();
var G__120987 = " (";
var G__120988 = (function (){var G__121046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121047 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121046,G__121047) : tailrecursion.hoplon.span.call(null,G__121046,G__121047));
})();
var G__120989 = " ";
var G__120990 = (function (){var G__121048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121049 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121048,G__121049) : tailrecursion.hoplon.span.call(null,G__121048,G__121049));
})();
var G__120991 = " ";
var G__120992 = (function (){var G__121050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121051 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121050,G__121051) : tailrecursion.hoplon.span.call(null,G__121050,G__121051));
})();
var G__120993 = ") (";
var G__120994 = (function (){var G__121052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121053 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121052,G__121053) : tailrecursion.hoplon.span.call(null,G__121052,G__121053));
})();
var G__120995 = " ";
var G__120996 = (function (){var G__121054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121055 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121054,G__121055) : tailrecursion.hoplon.span.call(null,G__121054,G__121055));
})();
var G__120997 = " ";
var G__120998 = (function (){var G__121056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121057 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121056,G__121057) : tailrecursion.hoplon.span.call(null,G__121056,G__121057));
})();
var G__120999 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__120941,G__120942,G__120943,G__120944,G__120945,G__120946,G__120947,G__120948,G__120949,G__120950,G__120951,G__120952,G__120953,G__120954,G__120955,G__120956,G__120957,G__120958,G__120959,G__120960,G__120961,G__120962,G__120963,G__120964,G__120965,G__120966,G__120967,G__120968,G__120969,G__120970,G__120971,G__120972,G__120973,G__120974,G__120975,G__120976,G__120977,G__120978,G__120979,G__120980,G__120981,G__120982,G__120983,G__120984,G__120985,G__120986,G__120987,G__120988,G__120989,G__120990,G__120991,G__120992,G__120993,G__120994,G__120995,G__120996,G__120997,G__120998,G__120999) : tailrecursion.hoplon.pre.call(null,G__120941,G__120942,G__120943,G__120944,G__120945,G__120946,G__120947,G__120948,G__120949,G__120950,G__120951,G__120952,G__120953,G__120954,G__120955,G__120956,G__120957,G__120958,G__120959,G__120960,G__120961,G__120962,G__120963,G__120964,G__120965,G__120966,G__120967,G__120968,G__120969,G__120970,G__120971,G__120972,G__120973,G__120974,G__120975,G__120976,G__120977,G__120978,G__120979,G__120980,G__120981,G__120982,G__120983,G__120984,G__120985,G__120986,G__120987,G__120988,G__120989,G__120990,G__120991,G__120992,G__120993,G__120994,G__120995,G__120996,G__120997,G__120998,G__120999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__120939,G__120940) : tailrecursion.hoplon.div.call(null,G__120939,G__120940));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__120938) : tailrecursion.hoplon.div.call(null,G__120938));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120806;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120805;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_120804;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_120803;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_121058 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121059 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_121060 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121061 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__121062 = cljs.core.PersistentArrayMap.EMPTY;
var G__121063 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121062,G__121063) : tailrecursion.hoplon.markdown.para_node.call(null,G__121062,G__121063));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121061;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121060;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121059;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121058;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_121064 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121065 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_121066 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121067 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__121068 = cljs.core.PersistentArrayMap.EMPTY;
var G__121069 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__121070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121071 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121070,G__121071) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121070,G__121071));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121068,G__121069) : tailrecursion.hoplon.markdown.para_node.call(null,G__121068,G__121069));
})(),(function (){var G__121072 = (function (){var G__121073 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121074 = (function (){var G__121075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121076 = "(";
var G__121077 = (function (){var G__121093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121094 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121093,G__121094) : tailrecursion.hoplon.span.call(null,G__121093,G__121094));
})();
var G__121078 = (function (){var G__121095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121096 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121095,G__121096) : tailrecursion.hoplon.span.call(null,G__121095,G__121096));
})();
var G__121079 = " [";
var G__121080 = (function (){var G__121097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121098 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121097,G__121098) : tailrecursion.hoplon.span.call(null,G__121097,G__121098));
})();
var G__121081 = " ";
var G__121082 = (function (){var G__121099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121100 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121099,G__121100) : tailrecursion.hoplon.span.call(null,G__121099,G__121100));
})();
var G__121083 = " ";
var G__121084 = (function (){var G__121101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121102 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121101,G__121102) : tailrecursion.hoplon.span.call(null,G__121101,G__121102));
})();
var G__121085 = "]\n  (";
var G__121086 = (function (){var G__121103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121104 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121103,G__121104) : tailrecursion.hoplon.span.call(null,G__121103,G__121104));
})();
var G__121087 = (function (){var G__121105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121106 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121105,G__121106) : tailrecursion.hoplon.span.call(null,G__121105,G__121106));
})();
var G__121088 = " ";
var G__121089 = (function (){var G__121107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121108 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121107,G__121108) : tailrecursion.hoplon.span.call(null,G__121107,G__121108));
})();
var G__121090 = " ";
var G__121091 = (function (){var G__121109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121110 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121109,G__121110) : tailrecursion.hoplon.span.call(null,G__121109,G__121110));
})();
var G__121092 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__121075,G__121076,G__121077,G__121078,G__121079,G__121080,G__121081,G__121082,G__121083,G__121084,G__121085,G__121086,G__121087,G__121088,G__121089,G__121090,G__121091,G__121092) : tailrecursion.hoplon.pre.call(null,G__121075,G__121076,G__121077,G__121078,G__121079,G__121080,G__121081,G__121082,G__121083,G__121084,G__121085,G__121086,G__121087,G__121088,G__121089,G__121090,G__121091,G__121092));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121073,G__121074) : tailrecursion.hoplon.div.call(null,G__121073,G__121074));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121072) : tailrecursion.hoplon.div.call(null,G__121072));
})(),(function (){var G__121111 = cljs.core.PersistentArrayMap.EMPTY;
var G__121112 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__121113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121114 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121113,G__121114) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121113,G__121114));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121111,G__121112) : tailrecursion.hoplon.markdown.para_node.call(null,G__121111,G__121112));
})(),(function (){var G__121115 = (function (){var G__121116 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121117 = (function (){var G__121118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121119 = "(";
var G__121120 = (function (){var G__121181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121182 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121181,G__121182) : tailrecursion.hoplon.span.call(null,G__121181,G__121182));
})();
var G__121121 = (function (){var G__121183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121184 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121183,G__121184) : tailrecursion.hoplon.span.call(null,G__121183,G__121184));
})();
var G__121122 = " [";
var G__121123 = (function (){var G__121185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121186 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121185,G__121186) : tailrecursion.hoplon.span.call(null,G__121185,G__121186));
})();
var G__121124 = "]\n  (";
var G__121125 = (function (){var G__121187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121188 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121187,G__121188) : tailrecursion.hoplon.span.call(null,G__121187,G__121188));
})();
var G__121126 = "[";
var G__121127 = (function (){var G__121189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121190 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121189,G__121190) : tailrecursion.hoplon.span.call(null,G__121189,G__121190));
})();
var G__121128 = "  (";
var G__121129 = (function (){var G__121191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121192 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121191,G__121192) : tailrecursion.hoplon.span.call(null,G__121191,G__121192));
})();
var G__121130 = " ";
var G__121131 = (function (){var G__121193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121194 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121193,G__121194) : tailrecursion.hoplon.span.call(null,G__121193,G__121194));
})();
var G__121132 = ")\n        ";
var G__121133 = (function (){var G__121195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121196 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121195,G__121196) : tailrecursion.hoplon.span.call(null,G__121195,G__121196));
})();
var G__121134 = "  (";
var G__121135 = (function (){var G__121197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121198 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121197,G__121198) : tailrecursion.hoplon.span.call(null,G__121197,G__121198));
})();
var G__121136 = " ";
var G__121137 = (function (){var G__121199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121200 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121199,G__121200) : tailrecursion.hoplon.span.call(null,G__121199,G__121200));
})();
var G__121138 = ")\n        ";
var G__121139 = (function (){var G__121201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121202 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121201,G__121202) : tailrecursion.hoplon.span.call(null,G__121201,G__121202));
})();
var G__121140 = " (";
var G__121141 = (function (){var G__121203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121204 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121203,G__121204) : tailrecursion.hoplon.span.call(null,G__121203,G__121204));
})();
var G__121142 = " ";
var G__121143 = (function (){var G__121205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121206 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121205,G__121206) : tailrecursion.hoplon.span.call(null,G__121205,G__121206));
})();
var G__121144 = ")\n        ";
var G__121145 = (function (){var G__121207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121208 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121207,G__121208) : tailrecursion.hoplon.span.call(null,G__121207,G__121208));
})();
var G__121146 = " (";
var G__121147 = (function (){var G__121209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121210 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121209,G__121210) : tailrecursion.hoplon.span.call(null,G__121209,G__121210));
})();
var G__121148 = " ";
var G__121149 = (function (){var G__121211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121212 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121211,G__121212) : tailrecursion.hoplon.span.call(null,G__121211,G__121212));
})();
var G__121150 = ")\n        ";
var G__121151 = (function (){var G__121213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121214 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121213,G__121214) : tailrecursion.hoplon.span.call(null,G__121213,G__121214));
})();
var G__121152 = " (";
var G__121153 = (function (){var G__121215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121216 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121215,G__121216) : tailrecursion.hoplon.span.call(null,G__121215,G__121216));
})();
var G__121154 = " ";
var G__121155 = (function (){var G__121217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121218 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121217,G__121218) : tailrecursion.hoplon.span.call(null,G__121217,G__121218));
})();
var G__121156 = ")\n        ";
var G__121157 = (function (){var G__121219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121220 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121219,G__121220) : tailrecursion.hoplon.span.call(null,G__121219,G__121220));
})();
var G__121158 = " (";
var G__121159 = (function (){var G__121221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121222 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121221,G__121222) : tailrecursion.hoplon.span.call(null,G__121221,G__121222));
})();
var G__121160 = " ";
var G__121161 = (function (){var G__121223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121224 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121223,G__121224) : tailrecursion.hoplon.span.call(null,G__121223,G__121224));
})();
var G__121162 = ")]\n    (";
var G__121163 = (function (){var G__121225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121226 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121225,G__121226) : tailrecursion.hoplon.span.call(null,G__121225,G__121226));
})();
var G__121164 = " (";
var G__121165 = (function (){var G__121227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121228 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121227,G__121228) : tailrecursion.hoplon.span.call(null,G__121227,G__121228));
})();
var G__121166 = "(";
var G__121167 = (function (){var G__121229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121230 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121229,G__121230) : tailrecursion.hoplon.span.call(null,G__121229,G__121230));
})();
var G__121168 = " (";
var G__121169 = (function (){var G__121231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121232 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121231,G__121232) : tailrecursion.hoplon.span.call(null,G__121231,G__121232));
})();
var G__121170 = (function (){var G__121233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121234 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121233,G__121234) : tailrecursion.hoplon.span.call(null,G__121233,G__121234));
})();
var G__121171 = " ";
var G__121172 = (function (){var G__121235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121236 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121235,G__121236) : tailrecursion.hoplon.span.call(null,G__121235,G__121236));
})();
var G__121173 = "))\n                  (";
var G__121174 = (function (){var G__121237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121238 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121237,G__121238) : tailrecursion.hoplon.span.call(null,G__121237,G__121238));
})();
var G__121175 = " (";
var G__121176 = (function (){var G__121239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121240 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121239,G__121240) : tailrecursion.hoplon.span.call(null,G__121239,G__121240));
})();
var G__121177 = (function (){var G__121241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121242 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121241,G__121242) : tailrecursion.hoplon.span.call(null,G__121241,G__121242));
})();
var G__121178 = " ";
var G__121179 = (function (){var G__121243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121244 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121243,G__121244) : tailrecursion.hoplon.span.call(null,G__121243,G__121244));
})();
var G__121180 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__121118,G__121119,G__121120,G__121121,G__121122,G__121123,G__121124,G__121125,G__121126,G__121127,G__121128,G__121129,G__121130,G__121131,G__121132,G__121133,G__121134,G__121135,G__121136,G__121137,G__121138,G__121139,G__121140,G__121141,G__121142,G__121143,G__121144,G__121145,G__121146,G__121147,G__121148,G__121149,G__121150,G__121151,G__121152,G__121153,G__121154,G__121155,G__121156,G__121157,G__121158,G__121159,G__121160,G__121161,G__121162,G__121163,G__121164,G__121165,G__121166,G__121167,G__121168,G__121169,G__121170,G__121171,G__121172,G__121173,G__121174,G__121175,G__121176,G__121177,G__121178,G__121179,G__121180) : tailrecursion.hoplon.pre.call(null,G__121118,G__121119,G__121120,G__121121,G__121122,G__121123,G__121124,G__121125,G__121126,G__121127,G__121128,G__121129,G__121130,G__121131,G__121132,G__121133,G__121134,G__121135,G__121136,G__121137,G__121138,G__121139,G__121140,G__121141,G__121142,G__121143,G__121144,G__121145,G__121146,G__121147,G__121148,G__121149,G__121150,G__121151,G__121152,G__121153,G__121154,G__121155,G__121156,G__121157,G__121158,G__121159,G__121160,G__121161,G__121162,G__121163,G__121164,G__121165,G__121166,G__121167,G__121168,G__121169,G__121170,G__121171,G__121172,G__121173,G__121174,G__121175,G__121176,G__121177,G__121178,G__121179,G__121180));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121116,G__121117) : tailrecursion.hoplon.div.call(null,G__121116,G__121117));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121115) : tailrecursion.hoplon.div.call(null,G__121115));
})(),(function (){var G__121245 = cljs.core.PersistentArrayMap.EMPTY;
var G__121246 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__121247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121248 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121247,G__121248) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121247,G__121248));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__121249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"let"], null);
var G__121250 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121249,G__121250) : tailrecursion.hoplon.markdown.code_node.call(null,G__121249,G__121250));
})()," binding instead. For now, let",(function (){var G__121251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121252 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121251,G__121252) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121251,G__121252));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121245,G__121246) : tailrecursion.hoplon.markdown.para_node.call(null,G__121245,G__121246));
})(),(function (){var G__121253 = (function (){var G__121254 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121255 = (function (){var G__121256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121257 = "(";
var G__121258 = (function (){var G__121286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121287 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121286,G__121287) : tailrecursion.hoplon.span.call(null,G__121286,G__121287));
})();
var G__121259 = (function (){var G__121288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121289 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121288,G__121289) : tailrecursion.hoplon.span.call(null,G__121288,G__121289));
})();
var G__121260 = " [";
var G__121261 = (function (){var G__121290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121291 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121290,G__121291) : tailrecursion.hoplon.span.call(null,G__121290,G__121291));
})();
var G__121262 = "]\n  (";
var G__121263 = (function (){var G__121292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121293 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121292,G__121293) : tailrecursion.hoplon.span.call(null,G__121292,G__121293));
})();
var G__121264 = " (";
var G__121265 = (function (){var G__121294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121295 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121294,G__121295) : tailrecursion.hoplon.span.call(null,G__121294,G__121295));
})();
var G__121266 = (function (){var G__121296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121297 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121296,G__121297) : tailrecursion.hoplon.span.call(null,G__121296,G__121297));
})();
var G__121267 = ") (";
var G__121268 = (function (){var G__121298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121299 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121298,G__121299) : tailrecursion.hoplon.span.call(null,G__121298,G__121299));
})();
var G__121269 = (function (){var G__121300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121301 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121300,G__121301) : tailrecursion.hoplon.span.call(null,G__121300,G__121301));
})();
var G__121270 = ")))\n(";
var G__121271 = (function (){var G__121302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121303 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121302,G__121303) : tailrecursion.hoplon.span.call(null,G__121302,G__121303));
})();
var G__121272 = (function (){var G__121304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121305 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121304,G__121305) : tailrecursion.hoplon.span.call(null,G__121304,G__121305));
})();
var G__121273 = " [";
var G__121274 = (function (){var G__121306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121307 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121306,G__121307) : tailrecursion.hoplon.span.call(null,G__121306,G__121307));
})();
var G__121275 = "]\n  (";
var G__121276 = (function (){var G__121308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121309 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121308,G__121309) : tailrecursion.hoplon.span.call(null,G__121308,G__121309));
})();
var G__121277 = " (";
var G__121278 = (function (){var G__121310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121311 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121310,G__121311) : tailrecursion.hoplon.span.call(null,G__121310,G__121311));
})();
var G__121279 = (function (){var G__121312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121313 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121312,G__121313) : tailrecursion.hoplon.span.call(null,G__121312,G__121313));
})();
var G__121280 = ") (";
var G__121281 = (function (){var G__121314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121315 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121314,G__121315) : tailrecursion.hoplon.span.call(null,G__121314,G__121315));
})();
var G__121282 = (function (){var G__121316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121317 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121316,G__121317) : tailrecursion.hoplon.span.call(null,G__121316,G__121317));
})();
var G__121283 = " ";
var G__121284 = (function (){var G__121318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__121319 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121318,G__121319) : tailrecursion.hoplon.span.call(null,G__121318,G__121319));
})();
var G__121285 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__121256,G__121257,G__121258,G__121259,G__121260,G__121261,G__121262,G__121263,G__121264,G__121265,G__121266,G__121267,G__121268,G__121269,G__121270,G__121271,G__121272,G__121273,G__121274,G__121275,G__121276,G__121277,G__121278,G__121279,G__121280,G__121281,G__121282,G__121283,G__121284,G__121285) : tailrecursion.hoplon.pre.call(null,G__121256,G__121257,G__121258,G__121259,G__121260,G__121261,G__121262,G__121263,G__121264,G__121265,G__121266,G__121267,G__121268,G__121269,G__121270,G__121271,G__121272,G__121273,G__121274,G__121275,G__121276,G__121277,G__121278,G__121279,G__121280,G__121281,G__121282,G__121283,G__121284,G__121285));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121254,G__121255) : tailrecursion.hoplon.div.call(null,G__121254,G__121255));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121253) : tailrecursion.hoplon.div.call(null,G__121253));
})(),(function (){var G__121320 = cljs.core.PersistentArrayMap.EMPTY;
var G__121321 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__121322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121323 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121322,G__121323) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121322,G__121323));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121320,G__121321) : tailrecursion.hoplon.markdown.para_node.call(null,G__121320,G__121321));
})(),(function (){var G__121324 = (function (){var G__121325 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121326 = (function (){var G__121327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121328 = "(";
var G__121329 = (function (){var G__121370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121371 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121370,G__121371) : tailrecursion.hoplon.span.call(null,G__121370,G__121371));
})();
var G__121330 = (function (){var G__121372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121373 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121372,G__121373) : tailrecursion.hoplon.span.call(null,G__121372,G__121373));
})();
var G__121331 = " [";
var G__121332 = (function (){var G__121374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121375 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121374,G__121375) : tailrecursion.hoplon.span.call(null,G__121374,G__121375));
})();
var G__121333 = "]\n  (";
var G__121334 = (function (){var G__121376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121377 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121376,G__121377) : tailrecursion.hoplon.span.call(null,G__121376,G__121377));
})();
var G__121335 = "(";
var G__121336 = (function (){var G__121378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121379 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121378,G__121379) : tailrecursion.hoplon.span.call(null,G__121378,G__121379));
})();
var G__121337 = " (";
var G__121338 = (function (){var G__121380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121381 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121380,G__121381) : tailrecursion.hoplon.span.call(null,G__121380,G__121381));
})();
var G__121339 = " ";
var G__121340 = (function (){var G__121382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121383 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121382,G__121383) : tailrecursion.hoplon.span.call(null,G__121382,G__121383));
})();
var G__121341 = "))\n     (";
var G__121342 = (function (){var G__121384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121385 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121384,G__121385) : tailrecursion.hoplon.span.call(null,G__121384,G__121385));
})();
var G__121343 = " (";
var G__121344 = (function (){var G__121386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121387 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121386,G__121387) : tailrecursion.hoplon.span.call(null,G__121386,G__121387));
})();
var G__121345 = " ";
var G__121346 = (function (){var G__121388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121389 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121388,G__121389) : tailrecursion.hoplon.span.call(null,G__121388,G__121389));
})();
var G__121347 = "))))\n(";
var G__121348 = (function (){var G__121390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121391 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121390,G__121391) : tailrecursion.hoplon.span.call(null,G__121390,G__121391));
})();
var G__121349 = (function (){var G__121392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121393 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121392,G__121393) : tailrecursion.hoplon.span.call(null,G__121392,G__121393));
})();
var G__121350 = " [";
var G__121351 = (function (){var G__121394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121395 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121394,G__121395) : tailrecursion.hoplon.span.call(null,G__121394,G__121395));
})();
var G__121352 = "]\n  (";
var G__121353 = (function (){var G__121396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121397 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121396,G__121397) : tailrecursion.hoplon.span.call(null,G__121396,G__121397));
})();
var G__121354 = (function (){var G__121398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__121399 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121398,G__121399) : tailrecursion.hoplon.span.call(null,G__121398,G__121399));
})();
var G__121355 = " (";
var G__121356 = (function (){var G__121400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121401 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121400,G__121401) : tailrecursion.hoplon.span.call(null,G__121400,G__121401));
})();
var G__121357 = "(";
var G__121358 = (function (){var G__121402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121403 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121402,G__121403) : tailrecursion.hoplon.span.call(null,G__121402,G__121403));
})();
var G__121359 = " (";
var G__121360 = (function (){var G__121404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121405 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121404,G__121405) : tailrecursion.hoplon.span.call(null,G__121404,G__121405));
})();
var G__121361 = " ";
var G__121362 = (function (){var G__121406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121407 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121406,G__121407) : tailrecursion.hoplon.span.call(null,G__121406,G__121407));
})();
var G__121363 = "))\n          (";
var G__121364 = (function (){var G__121408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121409 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121408,G__121409) : tailrecursion.hoplon.span.call(null,G__121408,G__121409));
})();
var G__121365 = " (";
var G__121366 = (function (){var G__121410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121411 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121410,G__121411) : tailrecursion.hoplon.span.call(null,G__121410,G__121411));
})();
var G__121367 = " ";
var G__121368 = (function (){var G__121412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121413 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121412,G__121413) : tailrecursion.hoplon.span.call(null,G__121412,G__121413));
})();
var G__121369 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__121327,G__121328,G__121329,G__121330,G__121331,G__121332,G__121333,G__121334,G__121335,G__121336,G__121337,G__121338,G__121339,G__121340,G__121341,G__121342,G__121343,G__121344,G__121345,G__121346,G__121347,G__121348,G__121349,G__121350,G__121351,G__121352,G__121353,G__121354,G__121355,G__121356,G__121357,G__121358,G__121359,G__121360,G__121361,G__121362,G__121363,G__121364,G__121365,G__121366,G__121367,G__121368,G__121369) : tailrecursion.hoplon.pre.call(null,G__121327,G__121328,G__121329,G__121330,G__121331,G__121332,G__121333,G__121334,G__121335,G__121336,G__121337,G__121338,G__121339,G__121340,G__121341,G__121342,G__121343,G__121344,G__121345,G__121346,G__121347,G__121348,G__121349,G__121350,G__121351,G__121352,G__121353,G__121354,G__121355,G__121356,G__121357,G__121358,G__121359,G__121360,G__121361,G__121362,G__121363,G__121364,G__121365,G__121366,G__121367,G__121368,G__121369));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121325,G__121326) : tailrecursion.hoplon.div.call(null,G__121325,G__121326));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121324) : tailrecursion.hoplon.div.call(null,G__121324));
})(),(function (){var G__121414 = cljs.core.PersistentArrayMap.EMPTY;
var G__121415 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121414,G__121415) : tailrecursion.hoplon.markdown.para_node.call(null,G__121414,G__121415));
})(),(function (){var G__121416 = (function (){var G__121417 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121418 = (function (){var G__121419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121420 = "(";
var G__121421 = (function (){var G__121442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121443 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121442,G__121443) : tailrecursion.hoplon.span.call(null,G__121442,G__121443));
})();
var G__121422 = (function (){var G__121444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121445 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121444,G__121445) : tailrecursion.hoplon.span.call(null,G__121444,G__121445));
})();
var G__121423 = " [";
var G__121424 = (function (){var G__121446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121447 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121446,G__121447) : tailrecursion.hoplon.span.call(null,G__121446,G__121447));
})();
var G__121425 = " ";
var G__121426 = (function (){var G__121448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121449 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121448,G__121449) : tailrecursion.hoplon.span.call(null,G__121448,G__121449));
})();
var G__121427 = " ";
var G__121428 = (function (){var G__121450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121451 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121450,G__121451) : tailrecursion.hoplon.span.call(null,G__121450,G__121451));
})();
var G__121429 = "]\n  (";
var G__121430 = (function (){var G__121452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121453 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121452,G__121453) : tailrecursion.hoplon.span.call(null,G__121452,G__121453));
})();
var G__121431 = "(";
var G__121432 = (function (){var G__121454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121455 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121454,G__121455) : tailrecursion.hoplon.span.call(null,G__121454,G__121455));
})();
var G__121433 = (function (){var G__121456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121457 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121456,G__121457) : tailrecursion.hoplon.span.call(null,G__121456,G__121457));
})();
var G__121434 = " ";
var G__121435 = (function (){var G__121458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121459 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121458,G__121459) : tailrecursion.hoplon.span.call(null,G__121458,G__121459));
})();
var G__121436 = ") (";
var G__121437 = (function (){var G__121460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121461 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121460,G__121461) : tailrecursion.hoplon.span.call(null,G__121460,G__121461));
})();
var G__121438 = (function (){var G__121462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121463 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121462,G__121463) : tailrecursion.hoplon.span.call(null,G__121462,G__121463));
})();
var G__121439 = " ";
var G__121440 = (function (){var G__121464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121465 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121464,G__121465) : tailrecursion.hoplon.span.call(null,G__121464,G__121465));
})();
var G__121441 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__121419,G__121420,G__121421,G__121422,G__121423,G__121424,G__121425,G__121426,G__121427,G__121428,G__121429,G__121430,G__121431,G__121432,G__121433,G__121434,G__121435,G__121436,G__121437,G__121438,G__121439,G__121440,G__121441) : tailrecursion.hoplon.pre.call(null,G__121419,G__121420,G__121421,G__121422,G__121423,G__121424,G__121425,G__121426,G__121427,G__121428,G__121429,G__121430,G__121431,G__121432,G__121433,G__121434,G__121435,G__121436,G__121437,G__121438,G__121439,G__121440,G__121441));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121417,G__121418) : tailrecursion.hoplon.div.call(null,G__121417,G__121418));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121416) : tailrecursion.hoplon.div.call(null,G__121416));
})(),(function (){var G__121466 = cljs.core.PersistentArrayMap.EMPTY;
var G__121467 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__121468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121469 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121468,G__121469) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121468,G__121469));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__121470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121471 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121470,G__121471) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121470,G__121471));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121466,G__121467) : tailrecursion.hoplon.markdown.para_node.call(null,G__121466,G__121467));
})(),(function (){var G__121472 = (function (){var G__121473 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121474 = (function (){var G__121475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121476 = "(";
var G__121477 = (function (){var G__121493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121494 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121493,G__121494) : tailrecursion.hoplon.span.call(null,G__121493,G__121494));
})();
var G__121478 = (function (){var G__121495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121496 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121495,G__121496) : tailrecursion.hoplon.span.call(null,G__121495,G__121496));
})();
var G__121479 = " [";
var G__121480 = (function (){var G__121497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121498 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121497,G__121498) : tailrecursion.hoplon.span.call(null,G__121497,G__121498));
})();
var G__121481 = "]\n  (";
var G__121482 = (function (){var G__121499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121500 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121499,G__121500) : tailrecursion.hoplon.span.call(null,G__121499,G__121500));
})();
var G__121483 = (function (){var G__121501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121502 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121501,G__121502) : tailrecursion.hoplon.span.call(null,G__121501,G__121502));
})();
var G__121484 = "))\n(";
var G__121485 = (function (){var G__121503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121504 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121503,G__121504) : tailrecursion.hoplon.span.call(null,G__121503,G__121504));
})();
var G__121486 = (function (){var G__121505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121506 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121505,G__121506) : tailrecursion.hoplon.span.call(null,G__121505,G__121506));
})();
var G__121487 = " [";
var G__121488 = (function (){var G__121507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121508 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121507,G__121508) : tailrecursion.hoplon.span.call(null,G__121507,G__121508));
})();
var G__121489 = "]\n  (";
var G__121490 = (function (){var G__121509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121510 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121509,G__121510) : tailrecursion.hoplon.span.call(null,G__121509,G__121510));
})();
var G__121491 = (function (){var G__121511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121512 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121511,G__121512) : tailrecursion.hoplon.span.call(null,G__121511,G__121512));
})();
var G__121492 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__121475,G__121476,G__121477,G__121478,G__121479,G__121480,G__121481,G__121482,G__121483,G__121484,G__121485,G__121486,G__121487,G__121488,G__121489,G__121490,G__121491,G__121492) : tailrecursion.hoplon.pre.call(null,G__121475,G__121476,G__121477,G__121478,G__121479,G__121480,G__121481,G__121482,G__121483,G__121484,G__121485,G__121486,G__121487,G__121488,G__121489,G__121490,G__121491,G__121492));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121473,G__121474) : tailrecursion.hoplon.div.call(null,G__121473,G__121474));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121472) : tailrecursion.hoplon.div.call(null,G__121472));
})(),(function (){var G__121513 = cljs.core.PersistentArrayMap.EMPTY;
var G__121514 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121513,G__121514) : tailrecursion.hoplon.markdown.para_node.call(null,G__121513,G__121514));
})(),(function (){var G__121515 = cljs.core.PersistentArrayMap.EMPTY;
var G__121516 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__121517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"if"], null);
var G__121518 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121517,G__121518) : tailrecursion.hoplon.markdown.code_node.call(null,G__121517,G__121518));
})()," statement to our definition of ",(function (){var G__121519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rectangle"], null);
var G__121520 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121519,G__121520) : tailrecursion.hoplon.markdown.code_node.call(null,G__121519,G__121520));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121515,G__121516) : tailrecursion.hoplon.markdown.para_node.call(null,G__121515,G__121516));
})(),(function (){var G__121521 = (function (){var G__121522 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121523 = (function (){var G__121524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121525 = "(";
var G__121526 = (function (){var G__121548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121549 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121548,G__121549) : tailrecursion.hoplon.span.call(null,G__121548,G__121549));
})();
var G__121527 = "(";
var G__121528 = (function (){var G__121550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121551 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121550,G__121551) : tailrecursion.hoplon.span.call(null,G__121550,G__121551));
})();
var G__121529 = " (";
var G__121530 = (function (){var G__121552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121553 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121552,G__121553) : tailrecursion.hoplon.span.call(null,G__121552,G__121553));
})();
var G__121531 = " ";
var G__121532 = (function (){var G__121554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121555 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121554,G__121555) : tailrecursion.hoplon.span.call(null,G__121554,G__121555));
})();
var G__121533 = ")) \n   (";
var G__121534 = (function (){var G__121556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121557 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121556,G__121557) : tailrecursion.hoplon.span.call(null,G__121556,G__121557));
})();
var G__121535 = "(";
var G__121536 = (function (){var G__121558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121559 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121558,G__121559) : tailrecursion.hoplon.span.call(null,G__121558,G__121559));
})();
var G__121537 = " (";
var G__121538 = (function (){var G__121560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121561 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121560,G__121561) : tailrecursion.hoplon.span.call(null,G__121560,G__121561));
})();
var G__121539 = " ";
var G__121540 = (function (){var G__121562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121563 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121562,G__121563) : tailrecursion.hoplon.span.call(null,G__121562,G__121563));
})();
var G__121541 = ")) \n      (";
var G__121542 = (function (){var G__121564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121565 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121564,G__121565) : tailrecursion.hoplon.span.call(null,G__121564,G__121565));
})();
var G__121543 = " (";
var G__121544 = (function (){var G__121566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121567 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121566,G__121567) : tailrecursion.hoplon.span.call(null,G__121566,G__121567));
})();
var G__121545 = " ";
var G__121546 = (function (){var G__121568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121569 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121568,G__121569) : tailrecursion.hoplon.span.call(null,G__121568,G__121569));
})();
var G__121547 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__121524,G__121525,G__121526,G__121527,G__121528,G__121529,G__121530,G__121531,G__121532,G__121533,G__121534,G__121535,G__121536,G__121537,G__121538,G__121539,G__121540,G__121541,G__121542,G__121543,G__121544,G__121545,G__121546,G__121547) : tailrecursion.hoplon.pre.call(null,G__121524,G__121525,G__121526,G__121527,G__121528,G__121529,G__121530,G__121531,G__121532,G__121533,G__121534,G__121535,G__121536,G__121537,G__121538,G__121539,G__121540,G__121541,G__121542,G__121543,G__121544,G__121545,G__121546,G__121547));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121522,G__121523) : tailrecursion.hoplon.div.call(null,G__121522,G__121523));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121521) : tailrecursion.hoplon.div.call(null,G__121521));
})(),(function (){var G__121570 = cljs.core.PersistentArrayMap.EMPTY;
var G__121571 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__121572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"diagonal-rectangle"], null);
var G__121573 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121572,G__121573) : tailrecursion.hoplon.markdown.code_node.call(null,G__121572,G__121573));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121570,G__121571) : tailrecursion.hoplon.markdown.para_node.call(null,G__121570,G__121571));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121067;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121066;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121065;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121064;
}})()], 0))], 0))], 0));
var G__119192 = "";
var G__119193 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_121574 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121575 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_121576 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121577 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__121578 = cljs.core.PersistentArrayMap.EMPTY;
var G__121579 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__121580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-rat"], null);
var G__121581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121580,G__121581) : tailrecursion.hoplon.markdown.code_node.call(null,G__121580,G__121581));
})(),", ",(function (){var G__121582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-rat"], null);
var G__121583 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121582,G__121583) : tailrecursion.hoplon.markdown.code_node.call(null,G__121582,G__121583));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__121584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__121585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121584,G__121585) : tailrecursion.hoplon.markdown.code_node.call(null,G__121584,G__121585));
})(),", ",(function (){var G__121586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__121587 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121586,G__121587) : tailrecursion.hoplon.markdown.code_node.call(null,G__121586,G__121587));
})(),", and ",(function (){var G__121588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__121589 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121588,G__121589) : tailrecursion.hoplon.markdown.code_node.call(null,G__121588,G__121589));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__121590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__121591 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121590,G__121591) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121590,G__121591));
})()," numerators, denominators, and rational numbers ",(function (){var G__121592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__121593 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121592,G__121593) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121592,G__121593));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121578,G__121579) : tailrecursion.hoplon.markdown.para_node.call(null,G__121578,G__121579));
})(),(function (){var G__121594 = cljs.core.PersistentArrayMap.EMPTY;
var G__121595 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__121596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__121597 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121596,G__121597) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121596,G__121597));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__121598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121599 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121598,G__121599) : tailrecursion.hoplon.markdown.code_node.call(null,G__121598,G__121599));
})()," from a pair of integers ",(function (){var G__121600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__121601 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121600,G__121601) : tailrecursion.hoplon.markdown.code_node.call(null,G__121600,G__121601));
})()," and ",(function (){var G__121602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"d"], null);
var G__121603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121602,G__121603) : tailrecursion.hoplon.markdown.code_node.call(null,G__121602,G__121603));
})(),", then extracting the ",(function (){var G__121604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__121605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121604,G__121605) : tailrecursion.hoplon.markdown.code_node.call(null,G__121604,G__121605));
})()," and the ",(function (){var G__121606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__121607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121606,G__121607) : tailrecursion.hoplon.markdown.code_node.call(null,G__121606,G__121607));
})()," of ",(function (){var G__121608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121608,G__121609) : tailrecursion.hoplon.markdown.code_node.call(null,G__121608,G__121609));
})()," and dividing them should yield the same result as dividing ",(function (){var G__121610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__121611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121610,G__121611) : tailrecursion.hoplon.markdown.code_node.call(null,G__121610,G__121611));
})()," by ",(function (){var G__121612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"d"], null);
var G__121613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121612,G__121613) : tailrecursion.hoplon.markdown.code_node.call(null,G__121612,G__121613));
})(),". In other words, ",(function (){var G__121614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__121615 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121614,G__121615) : tailrecursion.hoplon.markdown.code_node.call(null,G__121614,G__121615));
})(),", ",(function (){var G__121616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__121617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121616,G__121617) : tailrecursion.hoplon.markdown.code_node.call(null,G__121616,G__121617));
})(),", and ",(function (){var G__121618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__121619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121618,G__121619) : tailrecursion.hoplon.markdown.code_node.call(null,G__121618,G__121619));
})()," must satisfy the condition that, for any integer ",(function (){var G__121620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__121621 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121620,G__121621) : tailrecursion.hoplon.markdown.code_node.call(null,G__121620,G__121621));
})()," and any non-zero integer ",(function (){var G__121622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"d"], null);
var G__121623 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121622,G__121623) : tailrecursion.hoplon.markdown.code_node.call(null,G__121622,G__121623));
})(),", if ",(function (){var G__121624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121625 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121624,G__121625) : tailrecursion.hoplon.markdown.code_node.call(null,G__121624,G__121625));
})()," is ",(function (){var G__121626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(make-rat n d)"], null);
var G__121627 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121626,G__121627) : tailrecursion.hoplon.markdown.code_node.call(null,G__121626,G__121627));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121594,G__121595) : tailrecursion.hoplon.markdown.para_node.call(null,G__121594,G__121595));
})(),(function (){var G__121628 = cljs.core.PersistentArrayMap.EMPTY;
var G__121629 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121628,G__121629) : tailrecursion.hoplon.markdown.para_node.call(null,G__121628,G__121629));
})(),(function (){var G__121630 = cljs.core.PersistentArrayMap.EMPTY;
var G__121631 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__121632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-rat"], null);
var G__121633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121632,G__121633) : tailrecursion.hoplon.markdown.code_node.call(null,G__121632,G__121633));
})(),", ",(function (){var G__121634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"numer"], null);
var G__121635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121634,G__121635) : tailrecursion.hoplon.markdown.code_node.call(null,G__121634,G__121635));
})()," and ",(function (){var G__121636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"denom"], null);
var G__121637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121636,G__121637) : tailrecursion.hoplon.markdown.code_node.call(null,G__121636,G__121637));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__121638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__121639 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__121640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__121641 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121640,G__121641) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121640,G__121641));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__121642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__121643 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121642,G__121643) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121642,G__121643));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__121644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__121645 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121644,G__121645) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121644,G__121645));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121638,G__121639) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121638,G__121639));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121630,G__121631) : tailrecursion.hoplon.markdown.para_node.call(null,G__121630,G__121631));
})(),(function (){var G__121646 = cljs.core.PersistentArrayMap.EMPTY;
var G__121647 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__121648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__121649 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121648,G__121649) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121648,G__121649));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__121650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__121651 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121650,G__121651) : tailrecursion.hoplon.markdown.code_node.call(null,G__121650,G__121651));
})(),", ",(function (){var G__121652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__121653 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121652,G__121653) : tailrecursion.hoplon.markdown.code_node.call(null,G__121652,G__121653));
})(),", and ",(function (){var G__121654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__121655 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121654,G__121655) : tailrecursion.hoplon.markdown.code_node.call(null,G__121654,G__121655));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__121656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__121657 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121656,G__121657) : tailrecursion.hoplon.markdown.code_node.call(null,G__121656,G__121657));
})()," or ",(function (){var G__121658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__121659 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121658,G__121659) : tailrecursion.hoplon.markdown.code_node.call(null,G__121658,G__121659));
})(),", we can retrieve the objects using ",(function (){var G__121660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__121661 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121660,G__121661) : tailrecursion.hoplon.markdown.code_node.call(null,G__121660,G__121661));
})(),", ",(function (){var G__121662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__121663 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121662,G__121663) : tailrecursion.hoplon.markdown.code_node.call(null,G__121662,G__121663));
})(),", ",(function (){var G__121664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__121665 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121664,G__121665) : tailrecursion.hoplon.markdown.code_node.call(null,G__121664,G__121665));
})()," and ",(function (){var G__121666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__121667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121666,G__121667) : tailrecursion.hoplon.markdown.code_node.call(null,G__121666,G__121667));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__121668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121668,G__121669) : tailrecursion.hoplon.markdown.code_node.call(null,G__121668,G__121669));
})()," and ",(function (){var G__121670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__121671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121670,G__121671) : tailrecursion.hoplon.markdown.code_node.call(null,G__121670,G__121671));
})(),", if ",(function (){var G__121672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__121673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121672,G__121673) : tailrecursion.hoplon.markdown.code_node.call(null,G__121672,G__121673));
})()," is ",(function (){var G__121674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list x y)"], null);
var G__121675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121674,G__121675) : tailrecursion.hoplon.markdown.code_node.call(null,G__121674,G__121675));
})()," then ",(function (){var G__121676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(first z)"], null);
var G__121677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121676,G__121677) : tailrecursion.hoplon.markdown.code_node.call(null,G__121676,G__121677));
})()," is ",(function (){var G__121678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121679 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121678,G__121679) : tailrecursion.hoplon.markdown.code_node.call(null,G__121678,G__121679));
})()," and ",(function (){var G__121680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(second z)"], null);
var G__121681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121680,G__121681) : tailrecursion.hoplon.markdown.code_node.call(null,G__121680,G__121681));
})()," is ",(function (){var G__121682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__121683 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121682,G__121683) : tailrecursion.hoplon.markdown.code_node.call(null,G__121682,G__121683));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__121684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__121685 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121684,G__121685) : tailrecursion.hoplon.markdown.code_node.call(null,G__121684,G__121685));
})(),", ",(function (){var G__121686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__121687 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121686,G__121687) : tailrecursion.hoplon.markdown.code_node.call(null,G__121686,G__121687));
})(),", and ",(function (){var G__121688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__121689 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121688,G__121689) : tailrecursion.hoplon.markdown.code_node.call(null,G__121688,G__121689));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121646,G__121647) : tailrecursion.hoplon.markdown.para_node.call(null,G__121646,G__121647));
})(),(function (){var G__121690 = (function (){var G__121691 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121692 = (function (){var G__121693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121694 = "(";
var G__121695 = (function (){var G__121756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121757 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121756,G__121757) : tailrecursion.hoplon.span.call(null,G__121756,G__121757));
})();
var G__121696 = (function (){var G__121758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121759 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121758,G__121759) : tailrecursion.hoplon.span.call(null,G__121758,G__121759));
})();
var G__121697 = "[";
var G__121698 = (function (){var G__121760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121761 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121760,G__121761) : tailrecursion.hoplon.span.call(null,G__121760,G__121761));
})();
var G__121699 = " ";
var G__121700 = (function (){var G__121762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121763 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121762,G__121763) : tailrecursion.hoplon.span.call(null,G__121762,G__121763));
})();
var G__121701 = "]\n  (";
var G__121702 = (function (){var G__121764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121765 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121764,G__121765) : tailrecursion.hoplon.span.call(null,G__121764,G__121765));
})();
var G__121703 = "[";
var G__121704 = (function (){var G__121766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121767 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121766,G__121767) : tailrecursion.hoplon.span.call(null,G__121766,G__121767));
})();
var G__121705 = " (";
var G__121706 = (function (){var G__121768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121769 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121768,G__121769) : tailrecursion.hoplon.span.call(null,G__121768,G__121769));
})();
var G__121707 = "[";
var G__121708 = (function (){var G__121770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121771 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121770,G__121771) : tailrecursion.hoplon.span.call(null,G__121770,G__121771));
})();
var G__121709 = "] (";
var G__121710 = (function (){var G__121772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121773 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121772,G__121773) : tailrecursion.hoplon.span.call(null,G__121772,G__121773));
})();
var G__121711 = "(";
var G__121712 = (function (){var G__121774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121775 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121774,G__121775) : tailrecursion.hoplon.span.call(null,G__121774,G__121775));
})();
var G__121713 = (function (){var G__121776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121777 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121776,G__121777) : tailrecursion.hoplon.span.call(null,G__121776,G__121777));
})();
var G__121714 = " ";
var G__121715 = (function (){var G__121778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__121779 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121778,G__121779) : tailrecursion.hoplon.span.call(null,G__121778,G__121779));
})();
var G__121716 = ") ";
var G__121717 = (function (){var G__121780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121781 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121780,G__121781) : tailrecursion.hoplon.span.call(null,G__121780,G__121781));
})();
var G__121718 = "\n                               (";
var G__121719 = (function (){var G__121782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121783 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121782,G__121783) : tailrecursion.hoplon.span.call(null,G__121782,G__121783));
})();
var G__121720 = (function (){var G__121784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121785 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121784,G__121785) : tailrecursion.hoplon.span.call(null,G__121784,G__121785));
})();
var G__121721 = " ";
var G__121722 = (function (){var G__121786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__121787 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121786,G__121787) : tailrecursion.hoplon.span.call(null,G__121786,G__121787));
})();
var G__121723 = ") ";
var G__121724 = (function (){var G__121788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121789 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121788,G__121789) : tailrecursion.hoplon.span.call(null,G__121788,G__121789));
})();
var G__121725 = "\n                               ";
var G__121726 = (function (){var G__121790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121791 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121790,G__121791) : tailrecursion.hoplon.span.call(null,G__121790,G__121791));
})();
var G__121727 = " (";
var G__121728 = (function (){var G__121792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121793 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121792,G__121793) : tailrecursion.hoplon.span.call(null,G__121792,G__121793));
})();
var G__121729 = " (";
var G__121730 = (function (){var G__121794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121795 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121794,G__121795) : tailrecursion.hoplon.span.call(null,G__121794,G__121795));
})();
var G__121731 = " ";
var G__121732 = (function (){var G__121796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__121797 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121796,G__121797) : tailrecursion.hoplon.span.call(null,G__121796,G__121797));
})();
var G__121733 = " ";
var G__121734 = (function (){var G__121798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121799 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121798,G__121799) : tailrecursion.hoplon.span.call(null,G__121798,G__121799));
})();
var G__121735 = "))))]\n    ";
var G__121736 = (function (){var G__121800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121801 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121800,G__121801) : tailrecursion.hoplon.span.call(null,G__121800,G__121801));
})();
var G__121737 = "))\n\n(";
var G__121738 = (function (){var G__121802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121803 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121802,G__121803) : tailrecursion.hoplon.span.call(null,G__121802,G__121803));
})();
var G__121739 = (function (){var G__121804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121805 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121804,G__121805) : tailrecursion.hoplon.span.call(null,G__121804,G__121805));
})();
var G__121740 = " [";
var G__121741 = (function (){var G__121806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121807 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121806,G__121807) : tailrecursion.hoplon.span.call(null,G__121806,G__121807));
})();
var G__121742 = "] (";
var G__121743 = (function (){var G__121808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121809 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121808,G__121809) : tailrecursion.hoplon.span.call(null,G__121808,G__121809));
})();
var G__121744 = " ";
var G__121745 = (function (){var G__121810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__121811 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121810,G__121811) : tailrecursion.hoplon.span.call(null,G__121810,G__121811));
})();
var G__121746 = "))\n\n(";
var G__121747 = (function (){var G__121812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121813 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121812,G__121813) : tailrecursion.hoplon.span.call(null,G__121812,G__121813));
})();
var G__121748 = (function (){var G__121814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121815 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121814,G__121815) : tailrecursion.hoplon.span.call(null,G__121814,G__121815));
})();
var G__121749 = " [";
var G__121750 = (function (){var G__121816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121817 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121816,G__121817) : tailrecursion.hoplon.span.call(null,G__121816,G__121817));
})();
var G__121751 = "] (";
var G__121752 = (function (){var G__121818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121819 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121818,G__121819) : tailrecursion.hoplon.span.call(null,G__121818,G__121819));
})();
var G__121753 = " ";
var G__121754 = (function (){var G__121820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__121821 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121820,G__121821) : tailrecursion.hoplon.span.call(null,G__121820,G__121821));
})();
var G__121755 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__121693,G__121694,G__121695,G__121696,G__121697,G__121698,G__121699,G__121700,G__121701,G__121702,G__121703,G__121704,G__121705,G__121706,G__121707,G__121708,G__121709,G__121710,G__121711,G__121712,G__121713,G__121714,G__121715,G__121716,G__121717,G__121718,G__121719,G__121720,G__121721,G__121722,G__121723,G__121724,G__121725,G__121726,G__121727,G__121728,G__121729,G__121730,G__121731,G__121732,G__121733,G__121734,G__121735,G__121736,G__121737,G__121738,G__121739,G__121740,G__121741,G__121742,G__121743,G__121744,G__121745,G__121746,G__121747,G__121748,G__121749,G__121750,G__121751,G__121752,G__121753,G__121754,G__121755) : tailrecursion.hoplon.pre.call(null,G__121693,G__121694,G__121695,G__121696,G__121697,G__121698,G__121699,G__121700,G__121701,G__121702,G__121703,G__121704,G__121705,G__121706,G__121707,G__121708,G__121709,G__121710,G__121711,G__121712,G__121713,G__121714,G__121715,G__121716,G__121717,G__121718,G__121719,G__121720,G__121721,G__121722,G__121723,G__121724,G__121725,G__121726,G__121727,G__121728,G__121729,G__121730,G__121731,G__121732,G__121733,G__121734,G__121735,G__121736,G__121737,G__121738,G__121739,G__121740,G__121741,G__121742,G__121743,G__121744,G__121745,G__121746,G__121747,G__121748,G__121749,G__121750,G__121751,G__121752,G__121753,G__121754,G__121755));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121691,G__121692) : tailrecursion.hoplon.div.call(null,G__121691,G__121692));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121690) : tailrecursion.hoplon.div.call(null,G__121690));
})(),(function (){var G__121822 = cljs.core.PersistentArrayMap.EMPTY;
var G__121823 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__121824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__121825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121824,G__121825) : tailrecursion.hoplon.markdown.code_node.call(null,G__121824,G__121825));
})(),", ",(function (){var G__121826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__121827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121826,G__121827) : tailrecursion.hoplon.markdown.code_node.call(null,G__121826,G__121827));
})(),", and ",(function (){var G__121828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__121829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121828,G__121829) : tailrecursion.hoplon.markdown.code_node.call(null,G__121828,G__121829));
})()," instead of ",(function (){var G__121830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__121831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121830,G__121831) : tailrecursion.hoplon.markdown.code_node.call(null,G__121830,G__121831));
})(),", ",(function (){var G__121832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__121833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121832,G__121833) : tailrecursion.hoplon.markdown.code_node.call(null,G__121832,G__121833));
})(),", and ",(function (){var G__121834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__121835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121834,G__121835) : tailrecursion.hoplon.markdown.code_node.call(null,G__121834,G__121835));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__121836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121836,G__121837) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121836,G__121837));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__121838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__121839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121838,G__121839) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121838,G__121839));
})(),"d have to use other methods to make it work. We digress",(function (){var G__121840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__121841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121840,G__121841) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121840,G__121841));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121822,G__121823) : tailrecursion.hoplon.markdown.para_node.call(null,G__121822,G__121823));
})(),(function (){var G__121842 = cljs.core.PersistentArrayMap.EMPTY;
var G__121843 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121842,G__121843) : tailrecursion.hoplon.markdown.para_node.call(null,G__121842,G__121843));
})(),(function (){var G__121844 = cljs.core.PersistentArrayMap.EMPTY;
var G__121845 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__121846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons x y)"], null);
var G__121847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121846,G__121847) : tailrecursion.hoplon.markdown.code_node.call(null,G__121846,G__121847));
})()," is a procedure ",(function (){var G__121848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__121849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__121848,G__121849) : tailrecursion.hoplon.markdown.simple_node.call(null,G__121848,G__121849));
})()," namely the internally defined procedure ",(function (){var G__121850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"dispatch"], null);
var G__121851 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121850,G__121851) : tailrecursion.hoplon.markdown.code_node.call(null,G__121850,G__121851));
})(),", which takes one argument and returns either ",(function (){var G__121852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121853 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121852,G__121853) : tailrecursion.hoplon.markdown.code_node.call(null,G__121852,G__121853));
})()," or ",(function (){var G__121854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__121855 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121854,G__121855) : tailrecursion.hoplon.markdown.code_node.call(null,G__121854,G__121855));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__121856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(car z)"], null);
var G__121857 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121856,G__121857) : tailrecursion.hoplon.markdown.code_node.call(null,G__121856,G__121857));
})()," is defined to apply ",(function (){var G__121858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__121859 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121858,G__121859) : tailrecursion.hoplon.markdown.code_node.call(null,G__121858,G__121859));
})()," to 0. Hence, if ",(function (){var G__121860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__121861 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121860,G__121861) : tailrecursion.hoplon.markdown.code_node.call(null,G__121860,G__121861));
})()," is the procedure formed by ",(function (){var G__121862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons x\ny)"], null);
var G__121863 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121862,G__121863) : tailrecursion.hoplon.markdown.code_node.call(null,G__121862,G__121863));
})(),", then ",(function (){var G__121864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__121865 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121864,G__121865) : tailrecursion.hoplon.markdown.code_node.call(null,G__121864,G__121865));
})()," applied to 0 will yield ",(function (){var G__121866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121867 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121866,G__121867) : tailrecursion.hoplon.markdown.code_node.call(null,G__121866,G__121867));
})(),". Thus, we have shown that ",(function (){var G__121868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(car (cons x y))"], null);
var G__121869 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121868,G__121869) : tailrecursion.hoplon.markdown.code_node.call(null,G__121868,G__121869));
})()," yields ",(function (){var G__121870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__121871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121870,G__121871) : tailrecursion.hoplon.markdown.code_node.call(null,G__121870,G__121871));
})(),", as desired. Similarly, ",(function (){var G__121872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cdr (cons x\ny))"], null);
var G__121873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121872,G__121873) : tailrecursion.hoplon.markdown.code_node.call(null,G__121872,G__121873));
})()," applies the procedure returned by ",(function (){var G__121874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons x y)"], null);
var G__121875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121874,G__121875) : tailrecursion.hoplon.markdown.code_node.call(null,G__121874,G__121875));
})()," to 1, which returns ",(function (){var G__121876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__121877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121876,G__121877) : tailrecursion.hoplon.markdown.code_node.call(null,G__121876,G__121877));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__121878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__121879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121878,G__121879) : tailrecursion.hoplon.markdown.code_node.call(null,G__121878,G__121879));
})(),", ",(function (){var G__121880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__121881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121880,G__121881) : tailrecursion.hoplon.markdown.code_node.call(null,G__121880,G__121881));
})(),", and ",(function (){var G__121882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__121883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121882,G__121883) : tailrecursion.hoplon.markdown.code_node.call(null,G__121882,G__121883));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__121884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__121885 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__121884,G__121885) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__121884,G__121885));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121844,G__121845) : tailrecursion.hoplon.markdown.para_node.call(null,G__121844,G__121845));
})(),(function (){var G__121886 = cljs.core.PersistentArrayMap.EMPTY;
var G__121887 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121886,G__121887) : tailrecursion.hoplon.markdown.para_node.call(null,G__121886,G__121887));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121577;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121576;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121575;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121574;
}})()], 0));
var G__119194 = "";
var G__119195 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_121888 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121889 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_121890 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121891 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__121892 = cljs.core.PersistentArrayMap.EMPTY;
var G__121893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121892,G__121893) : tailrecursion.hoplon.markdown.para_node.call(null,G__121892,G__121893));
})(),(function (){var G__121894 = (function (){var G__121895 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121896 = (function (){var G__121897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121898 = "(";
var G__121899 = (function (){var G__121931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121932 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121931,G__121932) : tailrecursion.hoplon.span.call(null,G__121931,G__121932));
})();
var G__121900 = (function (){var G__121933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__121934 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121933,G__121934) : tailrecursion.hoplon.span.call(null,G__121933,G__121934));
})();
var G__121901 = "[";
var G__121902 = (function (){var G__121935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121936 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121935,G__121936) : tailrecursion.hoplon.span.call(null,G__121935,G__121936));
})();
var G__121903 = " ";
var G__121904 = (function (){var G__121937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121938 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121937,G__121938) : tailrecursion.hoplon.span.call(null,G__121937,G__121938));
})();
var G__121905 = "]\n  (";
var G__121906 = (function (){var G__121939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121940 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121939,G__121940) : tailrecursion.hoplon.span.call(null,G__121939,G__121940));
})();
var G__121907 = "[";
var G__121908 = (function (){var G__121941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121942 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121941,G__121942) : tailrecursion.hoplon.span.call(null,G__121941,G__121942));
})();
var G__121909 = "] (";
var G__121910 = (function (){var G__121943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121944 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121943,G__121944) : tailrecursion.hoplon.span.call(null,G__121943,G__121944));
})();
var G__121911 = " ";
var G__121912 = (function (){var G__121945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121946 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121945,G__121946) : tailrecursion.hoplon.span.call(null,G__121945,G__121946));
})();
var G__121913 = " ";
var G__121914 = (function (){var G__121947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121948 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121947,G__121948) : tailrecursion.hoplon.span.call(null,G__121947,G__121948));
})();
var G__121915 = ")))\n(";
var G__121916 = (function (){var G__121949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121950 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121949,G__121950) : tailrecursion.hoplon.span.call(null,G__121949,G__121950));
})();
var G__121917 = (function (){var G__121951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121952 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121951,G__121952) : tailrecursion.hoplon.span.call(null,G__121951,G__121952));
})();
var G__121918 = " [";
var G__121919 = (function (){var G__121953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121954 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121953,G__121954) : tailrecursion.hoplon.span.call(null,G__121953,G__121954));
})();
var G__121920 = "]\n  (";
var G__121921 = (function (){var G__121955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__121956 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121955,G__121956) : tailrecursion.hoplon.span.call(null,G__121955,G__121956));
})();
var G__121922 = " (";
var G__121923 = (function (){var G__121957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121958 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121957,G__121958) : tailrecursion.hoplon.span.call(null,G__121957,G__121958));
})();
var G__121924 = "[";
var G__121925 = (function (){var G__121959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121960 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121959,G__121960) : tailrecursion.hoplon.span.call(null,G__121959,G__121960));
})();
var G__121926 = " ";
var G__121927 = (function (){var G__121961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121962 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121961,G__121962) : tailrecursion.hoplon.span.call(null,G__121961,G__121962));
})();
var G__121928 = "] ";
var G__121929 = (function (){var G__121963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121964 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121963,G__121964) : tailrecursion.hoplon.span.call(null,G__121963,G__121964));
})();
var G__121930 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__121897,G__121898,G__121899,G__121900,G__121901,G__121902,G__121903,G__121904,G__121905,G__121906,G__121907,G__121908,G__121909,G__121910,G__121911,G__121912,G__121913,G__121914,G__121915,G__121916,G__121917,G__121918,G__121919,G__121920,G__121921,G__121922,G__121923,G__121924,G__121925,G__121926,G__121927,G__121928,G__121929,G__121930) : tailrecursion.hoplon.pre.call(null,G__121897,G__121898,G__121899,G__121900,G__121901,G__121902,G__121903,G__121904,G__121905,G__121906,G__121907,G__121908,G__121909,G__121910,G__121911,G__121912,G__121913,G__121914,G__121915,G__121916,G__121917,G__121918,G__121919,G__121920,G__121921,G__121922,G__121923,G__121924,G__121925,G__121926,G__121927,G__121928,G__121929,G__121930));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121895,G__121896) : tailrecursion.hoplon.div.call(null,G__121895,G__121896));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121894) : tailrecursion.hoplon.div.call(null,G__121894));
})(),(function (){var G__121965 = cljs.core.PersistentArrayMap.EMPTY;
var G__121966 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__121967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__121968 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__121967,G__121968) : tailrecursion.hoplon.markdown.code_node.call(null,G__121967,G__121968));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__121965,G__121966) : tailrecursion.hoplon.markdown.para_node.call(null,G__121965,G__121966));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121891;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121890;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121889;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121888;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_121969 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121970 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_121971 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_121972 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__121973 = (function (){var G__121974 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__121975 = (function (){var G__121976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__121977 = "(";
var G__121978 = (function (){var G__121993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__121994 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121993,G__121994) : tailrecursion.hoplon.span.call(null,G__121993,G__121994));
})();
var G__121979 = (function (){var G__121995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121996 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121995,G__121996) : tailrecursion.hoplon.span.call(null,G__121995,G__121996));
})();
var G__121980 = " [";
var G__121981 = (function (){var G__121997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__121998 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121997,G__121998) : tailrecursion.hoplon.span.call(null,G__121997,G__121998));
})();
var G__121982 = "]\n  (";
var G__121983 = (function (){var G__121999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122000 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__121999,G__122000) : tailrecursion.hoplon.span.call(null,G__121999,G__122000));
})();
var G__121984 = " (";
var G__121985 = (function (){var G__122001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122002 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122001,G__122002) : tailrecursion.hoplon.span.call(null,G__122001,G__122002));
})();
var G__121986 = "[";
var G__121987 = (function (){var G__122003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122004 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122003,G__122004) : tailrecursion.hoplon.span.call(null,G__122003,G__122004));
})();
var G__121988 = " ";
var G__121989 = (function (){var G__122005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122006 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122005,G__122006) : tailrecursion.hoplon.span.call(null,G__122005,G__122006));
})();
var G__121990 = "] ";
var G__121991 = (function (){var G__122007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122008 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122007,G__122008) : tailrecursion.hoplon.span.call(null,G__122007,G__122008));
})();
var G__121992 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__121976,G__121977,G__121978,G__121979,G__121980,G__121981,G__121982,G__121983,G__121984,G__121985,G__121986,G__121987,G__121988,G__121989,G__121990,G__121991,G__121992) : tailrecursion.hoplon.pre.call(null,G__121976,G__121977,G__121978,G__121979,G__121980,G__121981,G__121982,G__121983,G__121984,G__121985,G__121986,G__121987,G__121988,G__121989,G__121990,G__121991,G__121992));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__121974,G__121975) : tailrecursion.hoplon.div.call(null,G__121974,G__121975));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__121973) : tailrecursion.hoplon.div.call(null,G__121973));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121972;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121971;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_121970;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_121969;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122009 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122010 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122011 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122012 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122013 = cljs.core.PersistentArrayMap.EMPTY;
var G__122014 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__122015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__122016 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122015,G__122016) : tailrecursion.hoplon.markdown.code_node.call(null,G__122015,G__122016));
})(),", ",(function (){var G__122017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__122018 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122017,G__122018) : tailrecursion.hoplon.markdown.code_node.call(null,G__122017,G__122018));
})(),", and ",(function (){var G__122019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__122020 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122019,G__122020) : tailrecursion.hoplon.markdown.code_node.call(null,G__122019,G__122020));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122013,G__122014) : tailrecursion.hoplon.markdown.para_node.call(null,G__122013,G__122014));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122012;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122011;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122010;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122009;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122021 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122022 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122023 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122024 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122025 = (function (){var G__122026 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122027 = (function (){var G__122028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122029 = "(";
var G__122030 = (function (){var G__122129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122130 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122129,G__122130) : tailrecursion.hoplon.span.call(null,G__122129,G__122130));
})();
var G__122031 = (function (){var G__122131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122132 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122131,G__122132) : tailrecursion.hoplon.span.call(null,G__122131,G__122132));
})();
var G__122032 = "[";
var G__122033 = (function (){var G__122133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122134 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122133,G__122134) : tailrecursion.hoplon.span.call(null,G__122133,G__122134));
})();
var G__122034 = " ";
var G__122035 = (function (){var G__122135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122136 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122135,G__122136) : tailrecursion.hoplon.span.call(null,G__122135,G__122136));
})();
var G__122036 = "]\n  (";
var G__122037 = (function (){var G__122137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122138 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122137,G__122138) : tailrecursion.hoplon.span.call(null,G__122137,G__122138));
})();
var G__122038 = "(";
var G__122039 = (function (){var G__122139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122140 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122139,G__122140) : tailrecursion.hoplon.span.call(null,G__122139,G__122140));
})();
var G__122040 = " ";
var G__122041 = (function (){var G__122141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122142 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122141,G__122142) : tailrecursion.hoplon.span.call(null,G__122141,G__122142));
})();
var G__122042 = " ";
var G__122043 = (function (){var G__122143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122144 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122143,G__122144) : tailrecursion.hoplon.span.call(null,G__122143,G__122144));
})();
var G__122044 = ") (";
var G__122045 = (function (){var G__122145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122146 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122145,G__122146) : tailrecursion.hoplon.span.call(null,G__122145,G__122146));
})();
var G__122046 = " ";
var G__122047 = (function (){var G__122147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122148 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122147,G__122148) : tailrecursion.hoplon.span.call(null,G__122147,G__122148));
})();
var G__122048 = " ";
var G__122049 = (function (){var G__122149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122150 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122149,G__122150) : tailrecursion.hoplon.span.call(null,G__122149,G__122150));
})();
var G__122050 = ")))\n(";
var G__122051 = (function (){var G__122151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122152 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122151,G__122152) : tailrecursion.hoplon.span.call(null,G__122151,G__122152));
})();
var G__122052 = (function (){var G__122153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122154 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122153,G__122154) : tailrecursion.hoplon.span.call(null,G__122153,G__122154));
})();
var G__122053 = " [";
var G__122054 = (function (){var G__122155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122156 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122155,G__122156) : tailrecursion.hoplon.span.call(null,G__122155,G__122156));
})();
var G__122055 = "]\n  (";
var G__122056 = (function (){var G__122157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122158 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122157,G__122158) : tailrecursion.hoplon.span.call(null,G__122157,G__122158));
})();
var G__122057 = "[";
var G__122058 = (function (){var G__122159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122160 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122159,G__122160) : tailrecursion.hoplon.span.call(null,G__122159,G__122160));
})();
var G__122059 = "    ";
var G__122060 = (function (){var G__122161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122162 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122161,G__122162) : tailrecursion.hoplon.span.call(null,G__122161,G__122162));
})();
var G__122061 = "\n         ";
var G__122062 = (function (){var G__122163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122164 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122163,G__122164) : tailrecursion.hoplon.span.call(null,G__122163,G__122164));
})();
var G__122063 = " ";
var G__122064 = (function (){var G__122165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122166 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122165,G__122166) : tailrecursion.hoplon.span.call(null,G__122165,G__122166));
})();
var G__122065 = "]\n    (";
var G__122066 = (function (){var G__122167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122168 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122167,G__122168) : tailrecursion.hoplon.span.call(null,G__122167,G__122168));
})();
var G__122067 = "(";
var G__122068 = (function (){var G__122169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122170 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122169,G__122170) : tailrecursion.hoplon.span.call(null,G__122169,G__122170));
})();
var G__122069 = "(";
var G__122070 = (function (){var G__122171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122172 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122171,G__122172) : tailrecursion.hoplon.span.call(null,G__122171,G__122172));
})();
var G__122071 = " ";
var G__122072 = (function (){var G__122173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122174 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122173,G__122174) : tailrecursion.hoplon.span.call(null,G__122173,G__122174));
})();
var G__122073 = " ";
var G__122074 = (function (){var G__122175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122176 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122175,G__122176) : tailrecursion.hoplon.span.call(null,G__122175,G__122176));
})();
var G__122075 = ") ";
var G__122076 = (function (){var G__122177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122178 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122177,G__122178) : tailrecursion.hoplon.span.call(null,G__122177,G__122178));
})();
var G__122077 = ")\n        (";
var G__122078 = (function (){var G__122179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122180 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122179,G__122180) : tailrecursion.hoplon.span.call(null,G__122179,G__122180));
})();
var G__122079 = " (";
var G__122080 = (function (){var G__122181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122182 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122181,G__122182) : tailrecursion.hoplon.span.call(null,G__122181,G__122182));
})();
var G__122081 = (function (){var G__122183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122184 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122183,G__122184) : tailrecursion.hoplon.span.call(null,G__122183,G__122184));
})();
var G__122082 = " ";
var G__122083 = (function (){var G__122185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122186 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122185,G__122186) : tailrecursion.hoplon.span.call(null,G__122185,G__122186));
})();
var G__122084 = ") (";
var G__122085 = (function (){var G__122187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122188 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122187,G__122188) : tailrecursion.hoplon.span.call(null,G__122187,G__122188));
})();
var G__122086 = (function (){var G__122189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122190 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122189,G__122190) : tailrecursion.hoplon.span.call(null,G__122189,G__122190));
})();
var G__122087 = "))\n        ";
var G__122088 = (function (){var G__122191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122192 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122191,G__122192) : tailrecursion.hoplon.span.call(null,G__122191,G__122192));
})();
var G__122089 = ")))\n(";
var G__122090 = (function (){var G__122193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122194 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122193,G__122194) : tailrecursion.hoplon.span.call(null,G__122193,G__122194));
})();
var G__122091 = (function (){var G__122195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122196 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122195,G__122196) : tailrecursion.hoplon.span.call(null,G__122195,G__122196));
})();
var G__122092 = " [";
var G__122093 = (function (){var G__122197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122198 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122197,G__122198) : tailrecursion.hoplon.span.call(null,G__122197,G__122198));
})();
var G__122094 = "]\n  (";
var G__122095 = (function (){var G__122199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122200 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122199,G__122200) : tailrecursion.hoplon.span.call(null,G__122199,G__122200));
})();
var G__122096 = "[";
var G__122097 = (function (){var G__122201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122202 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122201,G__122202) : tailrecursion.hoplon.span.call(null,G__122201,G__122202));
})();
var G__122098 = "    ";
var G__122099 = (function (){var G__122203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122204 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122203,G__122204) : tailrecursion.hoplon.span.call(null,G__122203,G__122204));
})();
var G__122100 = "\n         ";
var G__122101 = (function (){var G__122205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122206 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122205,G__122206) : tailrecursion.hoplon.span.call(null,G__122205,G__122206));
})();
var G__122102 = " ";
var G__122103 = (function (){var G__122207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122208 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122207,G__122208) : tailrecursion.hoplon.span.call(null,G__122207,G__122208));
})();
var G__122104 = "]\n    (";
var G__122105 = (function (){var G__122209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122210 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122209,G__122210) : tailrecursion.hoplon.span.call(null,G__122209,G__122210));
})();
var G__122106 = "(";
var G__122107 = (function (){var G__122211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122212 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122211,G__122212) : tailrecursion.hoplon.span.call(null,G__122211,G__122212));
})();
var G__122108 = "(";
var G__122109 = (function (){var G__122213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122214 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122213,G__122214) : tailrecursion.hoplon.span.call(null,G__122213,G__122214));
})();
var G__122110 = " ";
var G__122111 = (function (){var G__122215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122216 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122215,G__122216) : tailrecursion.hoplon.span.call(null,G__122215,G__122216));
})();
var G__122112 = " ";
var G__122113 = (function (){var G__122217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122218 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122217,G__122218) : tailrecursion.hoplon.span.call(null,G__122217,G__122218));
})();
var G__122114 = ") ";
var G__122115 = (function (){var G__122219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122220 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122219,G__122220) : tailrecursion.hoplon.span.call(null,G__122219,G__122220));
})();
var G__122116 = ")\n        (";
var G__122117 = (function (){var G__122221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122222 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122221,G__122222) : tailrecursion.hoplon.span.call(null,G__122221,G__122222));
})();
var G__122118 = " (";
var G__122119 = (function (){var G__122223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122224 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122223,G__122224) : tailrecursion.hoplon.span.call(null,G__122223,G__122224));
})();
var G__122120 = (function (){var G__122225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122226 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122225,G__122226) : tailrecursion.hoplon.span.call(null,G__122225,G__122226));
})();
var G__122121 = " ";
var G__122122 = (function (){var G__122227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122228 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122227,G__122228) : tailrecursion.hoplon.span.call(null,G__122227,G__122228));
})();
var G__122123 = ") (";
var G__122124 = (function (){var G__122229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122230 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122229,G__122230) : tailrecursion.hoplon.span.call(null,G__122229,G__122230));
})();
var G__122125 = (function (){var G__122231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122232 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122231,G__122232) : tailrecursion.hoplon.span.call(null,G__122231,G__122232));
})();
var G__122126 = "))\n        ";
var G__122127 = (function (){var G__122233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122234 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122233,G__122234) : tailrecursion.hoplon.span.call(null,G__122233,G__122234));
})();
var G__122128 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__122028,G__122029,G__122030,G__122031,G__122032,G__122033,G__122034,G__122035,G__122036,G__122037,G__122038,G__122039,G__122040,G__122041,G__122042,G__122043,G__122044,G__122045,G__122046,G__122047,G__122048,G__122049,G__122050,G__122051,G__122052,G__122053,G__122054,G__122055,G__122056,G__122057,G__122058,G__122059,G__122060,G__122061,G__122062,G__122063,G__122064,G__122065,G__122066,G__122067,G__122068,G__122069,G__122070,G__122071,G__122072,G__122073,G__122074,G__122075,G__122076,G__122077,G__122078,G__122079,G__122080,G__122081,G__122082,G__122083,G__122084,G__122085,G__122086,G__122087,G__122088,G__122089,G__122090,G__122091,G__122092,G__122093,G__122094,G__122095,G__122096,G__122097,G__122098,G__122099,G__122100,G__122101,G__122102,G__122103,G__122104,G__122105,G__122106,G__122107,G__122108,G__122109,G__122110,G__122111,G__122112,G__122113,G__122114,G__122115,G__122116,G__122117,G__122118,G__122119,G__122120,G__122121,G__122122,G__122123,G__122124,G__122125,G__122126,G__122127,G__122128) : tailrecursion.hoplon.pre.call(null,G__122028,G__122029,G__122030,G__122031,G__122032,G__122033,G__122034,G__122035,G__122036,G__122037,G__122038,G__122039,G__122040,G__122041,G__122042,G__122043,G__122044,G__122045,G__122046,G__122047,G__122048,G__122049,G__122050,G__122051,G__122052,G__122053,G__122054,G__122055,G__122056,G__122057,G__122058,G__122059,G__122060,G__122061,G__122062,G__122063,G__122064,G__122065,G__122066,G__122067,G__122068,G__122069,G__122070,G__122071,G__122072,G__122073,G__122074,G__122075,G__122076,G__122077,G__122078,G__122079,G__122080,G__122081,G__122082,G__122083,G__122084,G__122085,G__122086,G__122087,G__122088,G__122089,G__122090,G__122091,G__122092,G__122093,G__122094,G__122095,G__122096,G__122097,G__122098,G__122099,G__122100,G__122101,G__122102,G__122103,G__122104,G__122105,G__122106,G__122107,G__122108,G__122109,G__122110,G__122111,G__122112,G__122113,G__122114,G__122115,G__122116,G__122117,G__122118,G__122119,G__122120,G__122121,G__122122,G__122123,G__122124,G__122125,G__122126,G__122127,G__122128));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122026,G__122027) : tailrecursion.hoplon.div.call(null,G__122026,G__122027));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122025) : tailrecursion.hoplon.div.call(null,G__122025));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122024;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122023;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122022;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122021;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122235 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122236 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122237 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122238 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122239 = cljs.core.PersistentArrayMap.EMPTY;
var G__122240 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__122241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122242 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122241,G__122242) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122241,G__122242));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122239,G__122240) : tailrecursion.hoplon.markdown.para_node.call(null,G__122239,G__122240));
})(),(function (){var G__122243 = (function (){var G__122244 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122245 = (function (){var G__122246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122247 = "(";
var G__122248 = (function (){var G__122282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122283 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122282,G__122283) : tailrecursion.hoplon.span.call(null,G__122282,G__122283));
})();
var G__122249 = (function (){var G__122284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122285 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122284,G__122285) : tailrecursion.hoplon.span.call(null,G__122284,G__122285));
})();
var G__122250 = " (";
var G__122251 = (function (){var G__122286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122287 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122286,G__122287) : tailrecursion.hoplon.span.call(null,G__122286,G__122287));
})();
var G__122252 = "[";
var G__122253 = (function (){var G__122288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122289 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122288,G__122289) : tailrecursion.hoplon.span.call(null,G__122288,G__122289));
})();
var G__122254 = "] (";
var G__122255 = (function (){var G__122290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122291 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122290,G__122291) : tailrecursion.hoplon.span.call(null,G__122290,G__122291));
})();
var G__122256 = "[";
var G__122257 = (function (){var G__122292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122293 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122292,G__122293) : tailrecursion.hoplon.span.call(null,G__122292,G__122293));
})();
var G__122258 = "] ";
var G__122259 = (function (){var G__122294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122295 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122294,G__122295) : tailrecursion.hoplon.span.call(null,G__122294,G__122295));
})();
var G__122260 = ")))\n(";
var G__122261 = (function (){var G__122296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122297 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122296,G__122297) : tailrecursion.hoplon.span.call(null,G__122296,G__122297));
})();
var G__122262 = (function (){var G__122298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122299 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122298,G__122299) : tailrecursion.hoplon.span.call(null,G__122298,G__122299));
})();
var G__122263 = " [";
var G__122264 = (function (){var G__122300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122301 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122300,G__122301) : tailrecursion.hoplon.span.call(null,G__122300,G__122301));
})();
var G__122265 = "]\n  (";
var G__122266 = (function (){var G__122302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122303 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122302,G__122303) : tailrecursion.hoplon.span.call(null,G__122302,G__122303));
})();
var G__122267 = "[";
var G__122268 = (function (){var G__122304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122305 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122304,G__122305) : tailrecursion.hoplon.span.call(null,G__122304,G__122305));
})();
var G__122269 = "] (";
var G__122270 = (function (){var G__122306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122307 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122306,G__122307) : tailrecursion.hoplon.span.call(null,G__122306,G__122307));
})();
var G__122271 = "[";
var G__122272 = (function (){var G__122308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122309 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122308,G__122309) : tailrecursion.hoplon.span.call(null,G__122308,G__122309));
})();
var G__122273 = "] (";
var G__122274 = (function (){var G__122310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122311 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122310,G__122311) : tailrecursion.hoplon.span.call(null,G__122310,G__122311));
})();
var G__122275 = " ((";
var G__122276 = (function (){var G__122312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122313 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122312,G__122313) : tailrecursion.hoplon.span.call(null,G__122312,G__122313));
})();
var G__122277 = " ";
var G__122278 = (function (){var G__122314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122315 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122314,G__122315) : tailrecursion.hoplon.span.call(null,G__122314,G__122315));
})();
var G__122279 = ") ";
var G__122280 = (function (){var G__122316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122317 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122316,G__122317) : tailrecursion.hoplon.span.call(null,G__122316,G__122317));
})();
var G__122281 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__122246,G__122247,G__122248,G__122249,G__122250,G__122251,G__122252,G__122253,G__122254,G__122255,G__122256,G__122257,G__122258,G__122259,G__122260,G__122261,G__122262,G__122263,G__122264,G__122265,G__122266,G__122267,G__122268,G__122269,G__122270,G__122271,G__122272,G__122273,G__122274,G__122275,G__122276,G__122277,G__122278,G__122279,G__122280,G__122281) : tailrecursion.hoplon.pre.call(null,G__122246,G__122247,G__122248,G__122249,G__122250,G__122251,G__122252,G__122253,G__122254,G__122255,G__122256,G__122257,G__122258,G__122259,G__122260,G__122261,G__122262,G__122263,G__122264,G__122265,G__122266,G__122267,G__122268,G__122269,G__122270,G__122271,G__122272,G__122273,G__122274,G__122275,G__122276,G__122277,G__122278,G__122279,G__122280,G__122281));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122244,G__122245) : tailrecursion.hoplon.div.call(null,G__122244,G__122245));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122243) : tailrecursion.hoplon.div.call(null,G__122243));
})(),(function (){var G__122318 = cljs.core.PersistentArrayMap.EMPTY;
var G__122319 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122318,G__122319) : tailrecursion.hoplon.markdown.para_node.call(null,G__122318,G__122319));
})(),(function (){var G__122320 = cljs.core.PersistentArrayMap.EMPTY;
var G__122321 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__122322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"one"], null);
var G__122323 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122322,G__122323) : tailrecursion.hoplon.markdown.code_node.call(null,G__122322,G__122323));
})()," and ",(function (){var G__122324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"two"], null);
var G__122325 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122324,G__122325) : tailrecursion.hoplon.markdown.code_node.call(null,G__122324,G__122325));
})()," directly (not in terms of ",(function (){var G__122326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"zero"], null);
var G__122327 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122326,G__122327) : tailrecursion.hoplon.markdown.code_node.call(null,G__122326,G__122327));
})()," and ",(function (){var G__122328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-1"], null);
var G__122329 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122328,G__122329) : tailrecursion.hoplon.markdown.code_node.call(null,G__122328,G__122329));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__122330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(add-1 zero)"], null);
var G__122331 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122330,G__122331) : tailrecursion.hoplon.markdown.code_node.call(null,G__122330,G__122331));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__122332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"add-1"], null);
var G__122333 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122332,G__122333) : tailrecursion.hoplon.markdown.code_node.call(null,G__122332,G__122333));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122320,G__122321) : tailrecursion.hoplon.markdown.para_node.call(null,G__122320,G__122321));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122238;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122237;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122236;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122235;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122334 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122335 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122336 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122337 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122338 = (function (){var G__122339 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122340 = (function (){var G__122341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122342 = "(";
var G__122343 = (function (){var G__122375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122376 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122375,G__122376) : tailrecursion.hoplon.span.call(null,G__122375,G__122376));
})();
var G__122344 = (function (){var G__122377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122378 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122377,G__122378) : tailrecursion.hoplon.span.call(null,G__122377,G__122378));
})();
var G__122345 = "\n  (";
var G__122346 = (function (){var G__122379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122380 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122379,G__122380) : tailrecursion.hoplon.span.call(null,G__122379,G__122380));
})();
var G__122347 = "[";
var G__122348 = (function (){var G__122381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122382 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122381,G__122382) : tailrecursion.hoplon.span.call(null,G__122381,G__122382));
})();
var G__122349 = "] (";
var G__122350 = (function (){var G__122383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122384 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122383,G__122384) : tailrecursion.hoplon.span.call(null,G__122383,G__122384));
})();
var G__122351 = "[";
var G__122352 = (function (){var G__122385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122386 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122385,G__122386) : tailrecursion.hoplon.span.call(null,G__122385,G__122386));
})();
var G__122353 = "] (";
var G__122354 = (function (){var G__122387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122388 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122387,G__122388) : tailrecursion.hoplon.span.call(null,G__122387,G__122388));
})();
var G__122355 = " ";
var G__122356 = (function (){var G__122389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122390 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122389,G__122390) : tailrecursion.hoplon.span.call(null,G__122389,G__122390));
})();
var G__122357 = "))))\n(";
var G__122358 = (function (){var G__122391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122392 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122391,G__122392) : tailrecursion.hoplon.span.call(null,G__122391,G__122392));
})();
var G__122359 = (function (){var G__122393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122394 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122393,G__122394) : tailrecursion.hoplon.span.call(null,G__122393,G__122394));
})();
var G__122360 = "\n  (";
var G__122361 = (function (){var G__122395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122396 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122395,G__122396) : tailrecursion.hoplon.span.call(null,G__122395,G__122396));
})();
var G__122362 = "[";
var G__122363 = (function (){var G__122397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122398 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122397,G__122398) : tailrecursion.hoplon.span.call(null,G__122397,G__122398));
})();
var G__122364 = "] (";
var G__122365 = (function (){var G__122399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122400 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122399,G__122400) : tailrecursion.hoplon.span.call(null,G__122399,G__122400));
})();
var G__122366 = "[";
var G__122367 = (function (){var G__122401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122402 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122401,G__122402) : tailrecursion.hoplon.span.call(null,G__122401,G__122402));
})();
var G__122368 = "] (";
var G__122369 = (function (){var G__122403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122404 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122403,G__122404) : tailrecursion.hoplon.span.call(null,G__122403,G__122404));
})();
var G__122370 = " (";
var G__122371 = (function (){var G__122405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122406 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122405,G__122406) : tailrecursion.hoplon.span.call(null,G__122405,G__122406));
})();
var G__122372 = " ";
var G__122373 = (function (){var G__122407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122408 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122407,G__122408) : tailrecursion.hoplon.span.call(null,G__122407,G__122408));
})();
var G__122374 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__122341,G__122342,G__122343,G__122344,G__122345,G__122346,G__122347,G__122348,G__122349,G__122350,G__122351,G__122352,G__122353,G__122354,G__122355,G__122356,G__122357,G__122358,G__122359,G__122360,G__122361,G__122362,G__122363,G__122364,G__122365,G__122366,G__122367,G__122368,G__122369,G__122370,G__122371,G__122372,G__122373,G__122374) : tailrecursion.hoplon.pre.call(null,G__122341,G__122342,G__122343,G__122344,G__122345,G__122346,G__122347,G__122348,G__122349,G__122350,G__122351,G__122352,G__122353,G__122354,G__122355,G__122356,G__122357,G__122358,G__122359,G__122360,G__122361,G__122362,G__122363,G__122364,G__122365,G__122366,G__122367,G__122368,G__122369,G__122370,G__122371,G__122372,G__122373,G__122374));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122339,G__122340) : tailrecursion.hoplon.div.call(null,G__122339,G__122340));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122338) : tailrecursion.hoplon.div.call(null,G__122338));
})(),(function (){var G__122409 = cljs.core.PersistentArrayMap.EMPTY;
var G__122410 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__122411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122412 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122411,G__122412) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122411,G__122412));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122409,G__122410) : tailrecursion.hoplon.markdown.para_node.call(null,G__122409,G__122410));
})(),(function (){var G__122413 = (function (){var G__122414 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122415 = (function (){var G__122416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122417 = "(";
var G__122418 = (function (){var G__122435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122436 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122435,G__122436) : tailrecursion.hoplon.span.call(null,G__122435,G__122436));
})();
var G__122419 = (function (){var G__122437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122438 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122437,G__122438) : tailrecursion.hoplon.span.call(null,G__122437,G__122438));
})();
var G__122420 = " [";
var G__122421 = (function (){var G__122439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122440 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122439,G__122440) : tailrecursion.hoplon.span.call(null,G__122439,G__122440));
})();
var G__122422 = " ";
var G__122423 = (function (){var G__122441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122442 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122441,G__122442) : tailrecursion.hoplon.span.call(null,G__122441,G__122442));
})();
var G__122424 = "]\n  (";
var G__122425 = (function (){var G__122443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122444 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122443,G__122444) : tailrecursion.hoplon.span.call(null,G__122443,G__122444));
})();
var G__122426 = "[";
var G__122427 = (function (){var G__122445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122446 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122445,G__122446) : tailrecursion.hoplon.span.call(null,G__122445,G__122446));
})();
var G__122428 = "] (";
var G__122429 = (function (){var G__122447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122448 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122447,G__122448) : tailrecursion.hoplon.span.call(null,G__122447,G__122448));
})();
var G__122430 = " (";
var G__122431 = (function (){var G__122449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122450 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122449,G__122450) : tailrecursion.hoplon.span.call(null,G__122449,G__122450));
})();
var G__122432 = " ";
var G__122433 = (function (){var G__122451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122452 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122451,G__122452) : tailrecursion.hoplon.span.call(null,G__122451,G__122452));
})();
var G__122434 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__122416,G__122417,G__122418,G__122419,G__122420,G__122421,G__122422,G__122423,G__122424,G__122425,G__122426,G__122427,G__122428,G__122429,G__122430,G__122431,G__122432,G__122433,G__122434) : tailrecursion.hoplon.pre.call(null,G__122416,G__122417,G__122418,G__122419,G__122420,G__122421,G__122422,G__122423,G__122424,G__122425,G__122426,G__122427,G__122428,G__122429,G__122430,G__122431,G__122432,G__122433,G__122434));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122414,G__122415) : tailrecursion.hoplon.div.call(null,G__122414,G__122415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122413) : tailrecursion.hoplon.div.call(null,G__122413));
})(),(function (){var G__122453 = cljs.core.PersistentArrayMap.EMPTY;
var G__122454 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122453,G__122454) : tailrecursion.hoplon.markdown.para_node.call(null,G__122453,G__122454));
})(),(function (){var G__122455 = (function (){var G__122456 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122457 = (function (){var G__122458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122459 = "(";
var G__122460 = (function (){var G__122481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122482 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122481,G__122482) : tailrecursion.hoplon.span.call(null,G__122481,G__122482));
})();
var G__122461 = (function (){var G__122483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122484 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122483,G__122484) : tailrecursion.hoplon.span.call(null,G__122483,G__122484));
})();
var G__122462 = " [";
var G__122463 = (function (){var G__122485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122486 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122485,G__122486) : tailrecursion.hoplon.span.call(null,G__122485,G__122486));
})();
var G__122464 = " ";
var G__122465 = (function (){var G__122487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122488 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122487,G__122488) : tailrecursion.hoplon.span.call(null,G__122487,G__122488));
})();
var G__122466 = "]\n  (";
var G__122467 = (function (){var G__122489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122490 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122489,G__122490) : tailrecursion.hoplon.span.call(null,G__122489,G__122490));
})();
var G__122468 = "[";
var G__122469 = (function (){var G__122491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122492 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122491,G__122492) : tailrecursion.hoplon.span.call(null,G__122491,G__122492));
})();
var G__122470 = "]\n    (";
var G__122471 = (function (){var G__122493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122494 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122493,G__122494) : tailrecursion.hoplon.span.call(null,G__122493,G__122494));
})();
var G__122472 = " (";
var G__122473 = (function (){var G__122495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122496 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122495,G__122496) : tailrecursion.hoplon.span.call(null,G__122495,G__122496));
})();
var G__122474 = " ";
var G__122475 = (function (){var G__122497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122498 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122497,G__122498) : tailrecursion.hoplon.span.call(null,G__122497,G__122498));
})();
var G__122476 = ") (";
var G__122477 = (function (){var G__122499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122500 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122499,G__122500) : tailrecursion.hoplon.span.call(null,G__122499,G__122500));
})();
var G__122478 = " ";
var G__122479 = (function (){var G__122501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122502 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122501,G__122502) : tailrecursion.hoplon.span.call(null,G__122501,G__122502));
})();
var G__122480 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__122458,G__122459,G__122460,G__122461,G__122462,G__122463,G__122464,G__122465,G__122466,G__122467,G__122468,G__122469,G__122470,G__122471,G__122472,G__122473,G__122474,G__122475,G__122476,G__122477,G__122478,G__122479,G__122480) : tailrecursion.hoplon.pre.call(null,G__122458,G__122459,G__122460,G__122461,G__122462,G__122463,G__122464,G__122465,G__122466,G__122467,G__122468,G__122469,G__122470,G__122471,G__122472,G__122473,G__122474,G__122475,G__122476,G__122477,G__122478,G__122479,G__122480));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122456,G__122457) : tailrecursion.hoplon.div.call(null,G__122456,G__122457));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122455) : tailrecursion.hoplon.div.call(null,G__122455));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122337;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122336;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122335;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122334;
}})()], 0))], 0))], 0));
var G__119196 = "";
var G__119197 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_122503 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122504 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122505 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122506 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122507 = cljs.core.PersistentArrayMap.EMPTY;
var G__122508 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122507,G__122508) : tailrecursion.hoplon.markdown.para_node.call(null,G__122507,G__122508));
})(),(function (){var G__122509 = cljs.core.PersistentArrayMap.EMPTY;
var G__122510 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__122511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122512 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122511,G__122512) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122511,G__122512));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122509,G__122510) : tailrecursion.hoplon.markdown.para_node.call(null,G__122509,G__122510));
})(),(function (){var G__122513 = cljs.core.PersistentArrayMap.EMPTY;
var G__122514 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122513,G__122514) : tailrecursion.hoplon.markdown.para_node.call(null,G__122513,G__122514));
})(),(function (){var G__122515 = cljs.core.PersistentArrayMap.EMPTY;
var G__122516 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__122517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__122518 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__122517,G__122518) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__122517,G__122518));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122515,G__122516) : tailrecursion.hoplon.markdown.para_node.call(null,G__122515,G__122516));
})(),(function (){var G__122519 = cljs.core.PersistentArrayMap.EMPTY;
var G__122520 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__122521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122522 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122521,G__122522) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122521,G__122522));
})(),"s idea is to implement ",(function (){var G__122523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__122524 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__122523,G__122524) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__122523,G__122524));
})()," as a set of arithmetic operations for combining ",(function (){var G__122525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__122526 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__122525,G__122526) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__122525,G__122526));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122519,G__122520) : tailrecursion.hoplon.markdown.para_node.call(null,G__122519,G__122520));
})(),(function (){var G__122527 = cljs.core.PersistentArrayMap.EMPTY;
var G__122528 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__122529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__122530 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__122529,G__122530) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__122529,G__122530));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__122531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-interval"], null);
var G__122532 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122531,G__122532) : tailrecursion.hoplon.markdown.code_node.call(null,G__122531,G__122532));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122527,G__122528) : tailrecursion.hoplon.markdown.para_node.call(null,G__122527,G__122528));
})(),(function (){var G__122533 = (function (){var G__122534 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122535 = (function (){var G__122536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122537 = "(";
var G__122538 = (function (){var G__122567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122568 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122567,G__122568) : tailrecursion.hoplon.span.call(null,G__122567,G__122568));
})();
var G__122539 = (function (){var G__122569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122570 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122569,G__122570) : tailrecursion.hoplon.span.call(null,G__122569,G__122570));
})();
var G__122540 = " [";
var G__122541 = (function (){var G__122571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122572 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122571,G__122572) : tailrecursion.hoplon.span.call(null,G__122571,G__122572));
})();
var G__122542 = " ";
var G__122543 = (function (){var G__122573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122574 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122573,G__122574) : tailrecursion.hoplon.span.call(null,G__122573,G__122574));
})();
var G__122544 = "]\n  (";
var G__122545 = (function (){var G__122575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122576 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122575,G__122576) : tailrecursion.hoplon.span.call(null,G__122575,G__122576));
})();
var G__122546 = " (";
var G__122547 = (function (){var G__122577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122578 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122577,G__122578) : tailrecursion.hoplon.span.call(null,G__122577,G__122578));
})();
var G__122548 = "(";
var G__122549 = (function (){var G__122579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122580 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122579,G__122580) : tailrecursion.hoplon.span.call(null,G__122579,G__122580));
})();
var G__122550 = " ";
var G__122551 = (function (){var G__122581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122582 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122581,G__122582) : tailrecursion.hoplon.span.call(null,G__122581,G__122582));
})();
var G__122552 = ") (";
var G__122553 = (function (){var G__122583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122584 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122583,G__122584) : tailrecursion.hoplon.span.call(null,G__122583,G__122584));
})();
var G__122554 = " ";
var G__122555 = (function (){var G__122585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122586 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122585,G__122586) : tailrecursion.hoplon.span.call(null,G__122585,G__122586));
})();
var G__122556 = "))\n                 (";
var G__122557 = (function (){var G__122587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122588 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122587,G__122588) : tailrecursion.hoplon.span.call(null,G__122587,G__122588));
})();
var G__122558 = "(";
var G__122559 = (function (){var G__122589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122590 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122589,G__122590) : tailrecursion.hoplon.span.call(null,G__122589,G__122590));
})();
var G__122560 = " ";
var G__122561 = (function (){var G__122591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122592 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122591,G__122592) : tailrecursion.hoplon.span.call(null,G__122591,G__122592));
})();
var G__122562 = ") (";
var G__122563 = (function (){var G__122593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122594 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122593,G__122594) : tailrecursion.hoplon.span.call(null,G__122593,G__122594));
})();
var G__122564 = " ";
var G__122565 = (function (){var G__122595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122596 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122595,G__122596) : tailrecursion.hoplon.span.call(null,G__122595,G__122596));
})();
var G__122566 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__122536,G__122537,G__122538,G__122539,G__122540,G__122541,G__122542,G__122543,G__122544,G__122545,G__122546,G__122547,G__122548,G__122549,G__122550,G__122551,G__122552,G__122553,G__122554,G__122555,G__122556,G__122557,G__122558,G__122559,G__122560,G__122561,G__122562,G__122563,G__122564,G__122565,G__122566) : tailrecursion.hoplon.pre.call(null,G__122536,G__122537,G__122538,G__122539,G__122540,G__122541,G__122542,G__122543,G__122544,G__122545,G__122546,G__122547,G__122548,G__122549,G__122550,G__122551,G__122552,G__122553,G__122554,G__122555,G__122556,G__122557,G__122558,G__122559,G__122560,G__122561,G__122562,G__122563,G__122564,G__122565,G__122566));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122534,G__122535) : tailrecursion.hoplon.div.call(null,G__122534,G__122535));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122533) : tailrecursion.hoplon.div.call(null,G__122533));
})(),(function (){var G__122597 = cljs.core.PersistentArrayMap.EMPTY;
var G__122598 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__122599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"min"], null);
var G__122600 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122599,G__122600) : tailrecursion.hoplon.markdown.code_node.call(null,G__122599,G__122600));
})()," and ",(function (){var G__122601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"max"], null);
var G__122602 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122601,G__122602) : tailrecursion.hoplon.markdown.code_node.call(null,G__122601,G__122602));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122597,G__122598) : tailrecursion.hoplon.markdown.para_node.call(null,G__122597,G__122598));
})(),(function (){var G__122603 = (function (){var G__122604 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122605 = (function (){var G__122606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122607 = "(";
var G__122608 = (function (){var G__122685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122686 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122685,G__122686) : tailrecursion.hoplon.span.call(null,G__122685,G__122686));
})();
var G__122609 = (function (){var G__122687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122688 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122687,G__122688) : tailrecursion.hoplon.span.call(null,G__122687,G__122688));
})();
var G__122610 = " [";
var G__122611 = (function (){var G__122689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122690 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122689,G__122690) : tailrecursion.hoplon.span.call(null,G__122689,G__122690));
})();
var G__122612 = " ";
var G__122613 = (function (){var G__122691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122692 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122691,G__122692) : tailrecursion.hoplon.span.call(null,G__122691,G__122692));
})();
var G__122614 = "]\n  (";
var G__122615 = (function (){var G__122693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122694 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122693,G__122694) : tailrecursion.hoplon.span.call(null,G__122693,G__122694));
})();
var G__122616 = "[";
var G__122617 = (function (){var G__122695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122696 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122695,G__122696) : tailrecursion.hoplon.span.call(null,G__122695,G__122696));
})();
var G__122618 = " (";
var G__122619 = (function (){var G__122697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122698 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122697,G__122698) : tailrecursion.hoplon.span.call(null,G__122697,G__122698));
})();
var G__122620 = "(";
var G__122621 = (function (){var G__122699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122700 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122699,G__122700) : tailrecursion.hoplon.span.call(null,G__122699,G__122700));
})();
var G__122622 = " ";
var G__122623 = (function (){var G__122701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122702 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122701,G__122702) : tailrecursion.hoplon.span.call(null,G__122701,G__122702));
})();
var G__122624 = ") (";
var G__122625 = (function (){var G__122703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122704 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122703,G__122704) : tailrecursion.hoplon.span.call(null,G__122703,G__122704));
})();
var G__122626 = " ";
var G__122627 = (function (){var G__122705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122706 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122705,G__122706) : tailrecursion.hoplon.span.call(null,G__122705,G__122706));
})();
var G__122628 = "))\n        ";
var G__122629 = (function (){var G__122707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122708 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122707,G__122708) : tailrecursion.hoplon.span.call(null,G__122707,G__122708));
})();
var G__122630 = " (";
var G__122631 = (function (){var G__122709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122710 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122709,G__122710) : tailrecursion.hoplon.span.call(null,G__122709,G__122710));
})();
var G__122632 = "(";
var G__122633 = (function (){var G__122711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122712 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122711,G__122712) : tailrecursion.hoplon.span.call(null,G__122711,G__122712));
})();
var G__122634 = " ";
var G__122635 = (function (){var G__122713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122714 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122713,G__122714) : tailrecursion.hoplon.span.call(null,G__122713,G__122714));
})();
var G__122636 = ") (";
var G__122637 = (function (){var G__122715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122716 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122715,G__122716) : tailrecursion.hoplon.span.call(null,G__122715,G__122716));
})();
var G__122638 = " ";
var G__122639 = (function (){var G__122717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122718 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122717,G__122718) : tailrecursion.hoplon.span.call(null,G__122717,G__122718));
})();
var G__122640 = "))\n        ";
var G__122641 = (function (){var G__122719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122720 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122719,G__122720) : tailrecursion.hoplon.span.call(null,G__122719,G__122720));
})();
var G__122642 = " (";
var G__122643 = (function (){var G__122721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122722 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122721,G__122722) : tailrecursion.hoplon.span.call(null,G__122721,G__122722));
})();
var G__122644 = "(";
var G__122645 = (function (){var G__122723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122724 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122723,G__122724) : tailrecursion.hoplon.span.call(null,G__122723,G__122724));
})();
var G__122646 = " ";
var G__122647 = (function (){var G__122725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122726 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122725,G__122726) : tailrecursion.hoplon.span.call(null,G__122725,G__122726));
})();
var G__122648 = ") (";
var G__122649 = (function (){var G__122727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122728 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122727,G__122728) : tailrecursion.hoplon.span.call(null,G__122727,G__122728));
})();
var G__122650 = " ";
var G__122651 = (function (){var G__122729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122730 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122729,G__122730) : tailrecursion.hoplon.span.call(null,G__122729,G__122730));
})();
var G__122652 = "))\n        ";
var G__122653 = (function (){var G__122731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122732 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122731,G__122732) : tailrecursion.hoplon.span.call(null,G__122731,G__122732));
})();
var G__122654 = " (";
var G__122655 = (function (){var G__122733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122734 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122733,G__122734) : tailrecursion.hoplon.span.call(null,G__122733,G__122734));
})();
var G__122656 = "(";
var G__122657 = (function (){var G__122735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122736 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122735,G__122736) : tailrecursion.hoplon.span.call(null,G__122735,G__122736));
})();
var G__122658 = " ";
var G__122659 = (function (){var G__122737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122738 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122737,G__122738) : tailrecursion.hoplon.span.call(null,G__122737,G__122738));
})();
var G__122660 = ") (";
var G__122661 = (function (){var G__122739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122740 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122739,G__122740) : tailrecursion.hoplon.span.call(null,G__122739,G__122740));
})();
var G__122662 = " ";
var G__122663 = (function (){var G__122741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122742 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122741,G__122742) : tailrecursion.hoplon.span.call(null,G__122741,G__122742));
})();
var G__122664 = "))]\n    (";
var G__122665 = (function (){var G__122743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122744 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122743,G__122744) : tailrecursion.hoplon.span.call(null,G__122743,G__122744));
})();
var G__122666 = " (";
var G__122667 = (function (){var G__122745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122746 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122745,G__122746) : tailrecursion.hoplon.span.call(null,G__122745,G__122746));
})();
var G__122668 = (function (){var G__122747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122748 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122747,G__122748) : tailrecursion.hoplon.span.call(null,G__122747,G__122748));
})();
var G__122669 = " ";
var G__122670 = (function (){var G__122749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122750 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122749,G__122750) : tailrecursion.hoplon.span.call(null,G__122749,G__122750));
})();
var G__122671 = " ";
var G__122672 = (function (){var G__122751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122752 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122751,G__122752) : tailrecursion.hoplon.span.call(null,G__122751,G__122752));
})();
var G__122673 = " ";
var G__122674 = (function (){var G__122753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122754 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122753,G__122754) : tailrecursion.hoplon.span.call(null,G__122753,G__122754));
})();
var G__122675 = ")\n                   (";
var G__122676 = (function (){var G__122755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122756 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122755,G__122756) : tailrecursion.hoplon.span.call(null,G__122755,G__122756));
})();
var G__122677 = (function (){var G__122757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122758 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122757,G__122758) : tailrecursion.hoplon.span.call(null,G__122757,G__122758));
})();
var G__122678 = " ";
var G__122679 = (function (){var G__122759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122760 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122759,G__122760) : tailrecursion.hoplon.span.call(null,G__122759,G__122760));
})();
var G__122680 = " ";
var G__122681 = (function (){var G__122761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122762 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122761,G__122762) : tailrecursion.hoplon.span.call(null,G__122761,G__122762));
})();
var G__122682 = " ";
var G__122683 = (function (){var G__122763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122764 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122763,G__122764) : tailrecursion.hoplon.span.call(null,G__122763,G__122764));
})();
var G__122684 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__122606,G__122607,G__122608,G__122609,G__122610,G__122611,G__122612,G__122613,G__122614,G__122615,G__122616,G__122617,G__122618,G__122619,G__122620,G__122621,G__122622,G__122623,G__122624,G__122625,G__122626,G__122627,G__122628,G__122629,G__122630,G__122631,G__122632,G__122633,G__122634,G__122635,G__122636,G__122637,G__122638,G__122639,G__122640,G__122641,G__122642,G__122643,G__122644,G__122645,G__122646,G__122647,G__122648,G__122649,G__122650,G__122651,G__122652,G__122653,G__122654,G__122655,G__122656,G__122657,G__122658,G__122659,G__122660,G__122661,G__122662,G__122663,G__122664,G__122665,G__122666,G__122667,G__122668,G__122669,G__122670,G__122671,G__122672,G__122673,G__122674,G__122675,G__122676,G__122677,G__122678,G__122679,G__122680,G__122681,G__122682,G__122683,G__122684) : tailrecursion.hoplon.pre.call(null,G__122606,G__122607,G__122608,G__122609,G__122610,G__122611,G__122612,G__122613,G__122614,G__122615,G__122616,G__122617,G__122618,G__122619,G__122620,G__122621,G__122622,G__122623,G__122624,G__122625,G__122626,G__122627,G__122628,G__122629,G__122630,G__122631,G__122632,G__122633,G__122634,G__122635,G__122636,G__122637,G__122638,G__122639,G__122640,G__122641,G__122642,G__122643,G__122644,G__122645,G__122646,G__122647,G__122648,G__122649,G__122650,G__122651,G__122652,G__122653,G__122654,G__122655,G__122656,G__122657,G__122658,G__122659,G__122660,G__122661,G__122662,G__122663,G__122664,G__122665,G__122666,G__122667,G__122668,G__122669,G__122670,G__122671,G__122672,G__122673,G__122674,G__122675,G__122676,G__122677,G__122678,G__122679,G__122680,G__122681,G__122682,G__122683,G__122684));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122604,G__122605) : tailrecursion.hoplon.div.call(null,G__122604,G__122605));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122603) : tailrecursion.hoplon.div.call(null,G__122603));
})(),(function (){var G__122765 = cljs.core.PersistentArrayMap.EMPTY;
var G__122766 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122765,G__122766) : tailrecursion.hoplon.markdown.para_node.call(null,G__122765,G__122766));
})(),(function (){var G__122767 = (function (){var G__122768 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122769 = (function (){var G__122770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122771 = "(";
var G__122772 = (function (){var G__122799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122800 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122799,G__122800) : tailrecursion.hoplon.span.call(null,G__122799,G__122800));
})();
var G__122773 = (function (){var G__122801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122802 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122801,G__122802) : tailrecursion.hoplon.span.call(null,G__122801,G__122802));
})();
var G__122774 = " [";
var G__122775 = (function (){var G__122803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122804 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122803,G__122804) : tailrecursion.hoplon.span.call(null,G__122803,G__122804));
})();
var G__122776 = " ";
var G__122777 = (function (){var G__122805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122806 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122805,G__122806) : tailrecursion.hoplon.span.call(null,G__122805,G__122806));
})();
var G__122778 = "]\n  (";
var G__122779 = (function (){var G__122807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122808 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122807,G__122808) : tailrecursion.hoplon.span.call(null,G__122807,G__122808));
})();
var G__122780 = " ";
var G__122781 = (function (){var G__122809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122810 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122809,G__122810) : tailrecursion.hoplon.span.call(null,G__122809,G__122810));
})();
var G__122782 = "\n                (";
var G__122783 = (function (){var G__122811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122812 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122811,G__122812) : tailrecursion.hoplon.span.call(null,G__122811,G__122812));
})();
var G__122784 = " (";
var G__122785 = (function (){var G__122813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122814 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122813,G__122814) : tailrecursion.hoplon.span.call(null,G__122813,G__122814));
})();
var G__122786 = (function (){var G__122815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122816 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122815,G__122816) : tailrecursion.hoplon.span.call(null,G__122815,G__122816));
})();
var G__122787 = " (";
var G__122788 = (function (){var G__122817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122818 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122817,G__122818) : tailrecursion.hoplon.span.call(null,G__122817,G__122818));
})();
var G__122789 = " ";
var G__122790 = (function (){var G__122819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122820 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122819,G__122820) : tailrecursion.hoplon.span.call(null,G__122819,G__122820));
})();
var G__122791 = "))\n                               (";
var G__122792 = (function (){var G__122821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122822 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122821,G__122822) : tailrecursion.hoplon.span.call(null,G__122821,G__122822));
})();
var G__122793 = (function (){var G__122823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__122824 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122823,G__122824) : tailrecursion.hoplon.span.call(null,G__122823,G__122824));
})();
var G__122794 = " (";
var G__122795 = (function (){var G__122825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122826 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122825,G__122826) : tailrecursion.hoplon.span.call(null,G__122825,G__122826));
})();
var G__122796 = " ";
var G__122797 = (function (){var G__122827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122828 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122827,G__122828) : tailrecursion.hoplon.span.call(null,G__122827,G__122828));
})();
var G__122798 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__122770,G__122771,G__122772,G__122773,G__122774,G__122775,G__122776,G__122777,G__122778,G__122779,G__122780,G__122781,G__122782,G__122783,G__122784,G__122785,G__122786,G__122787,G__122788,G__122789,G__122790,G__122791,G__122792,G__122793,G__122794,G__122795,G__122796,G__122797,G__122798) : tailrecursion.hoplon.pre.call(null,G__122770,G__122771,G__122772,G__122773,G__122774,G__122775,G__122776,G__122777,G__122778,G__122779,G__122780,G__122781,G__122782,G__122783,G__122784,G__122785,G__122786,G__122787,G__122788,G__122789,G__122790,G__122791,G__122792,G__122793,G__122794,G__122795,G__122796,G__122797,G__122798));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122768,G__122769) : tailrecursion.hoplon.div.call(null,G__122768,G__122769));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122767) : tailrecursion.hoplon.div.call(null,G__122767));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122506;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122505;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122504;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122503;
}})()], 0));
var G__119198 = "";
var G__119199 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122829 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122830 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122831 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122832 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122833 = cljs.core.PersistentArrayMap.EMPTY;
var G__122834 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__122835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122835,G__122836) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122835,G__122836));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122833,G__122834) : tailrecursion.hoplon.markdown.para_node.call(null,G__122833,G__122834));
})(),(function (){var G__122837 = (function (){var G__122838 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122839 = (function (){var G__122840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122841 = "(";
var G__122842 = (function (){var G__122854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122855 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122854,G__122855) : tailrecursion.hoplon.span.call(null,G__122854,G__122855));
})();
var G__122843 = (function (){var G__122856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122857 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122856,G__122857) : tailrecursion.hoplon.span.call(null,G__122856,G__122857));
})();
var G__122844 = " [";
var G__122845 = (function (){var G__122858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122859 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122858,G__122859) : tailrecursion.hoplon.span.call(null,G__122858,G__122859));
})();
var G__122846 = " ";
var G__122847 = (function (){var G__122860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122861 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122860,G__122861) : tailrecursion.hoplon.span.call(null,G__122860,G__122861));
})();
var G__122848 = "]\n  (";
var G__122849 = (function (){var G__122862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122863 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122862,G__122863) : tailrecursion.hoplon.span.call(null,G__122862,G__122863));
})();
var G__122850 = (function (){var G__122864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122865 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122864,G__122865) : tailrecursion.hoplon.span.call(null,G__122864,G__122865));
})();
var G__122851 = " ";
var G__122852 = (function (){var G__122866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122867 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122866,G__122867) : tailrecursion.hoplon.span.call(null,G__122866,G__122867));
})();
var G__122853 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__122840,G__122841,G__122842,G__122843,G__122844,G__122845,G__122846,G__122847,G__122848,G__122849,G__122850,G__122851,G__122852,G__122853) : tailrecursion.hoplon.pre.call(null,G__122840,G__122841,G__122842,G__122843,G__122844,G__122845,G__122846,G__122847,G__122848,G__122849,G__122850,G__122851,G__122852,G__122853));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122838,G__122839) : tailrecursion.hoplon.div.call(null,G__122838,G__122839));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122837) : tailrecursion.hoplon.div.call(null,G__122837));
})(),(function (){var G__122868 = cljs.core.PersistentArrayMap.EMPTY;
var G__122869 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__122870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"upper-bound"], null);
var G__122871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122870,G__122871) : tailrecursion.hoplon.markdown.code_node.call(null,G__122870,G__122871));
})()," and ",(function (){var G__122872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"lower-bound"], null);
var G__122873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122872,G__122873) : tailrecursion.hoplon.markdown.code_node.call(null,G__122872,G__122873));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122868,G__122869) : tailrecursion.hoplon.markdown.para_node.call(null,G__122868,G__122869));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122832;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122831;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122830;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122829;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122874 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122875 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122876 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122877 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122878 = (function (){var G__122879 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122880 = (function (){var G__122881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122882 = "(";
var G__122883 = (function (){var G__122899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122900 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122899,G__122900) : tailrecursion.hoplon.span.call(null,G__122899,G__122900));
})();
var G__122884 = (function (){var G__122901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122902 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122901,G__122902) : tailrecursion.hoplon.span.call(null,G__122901,G__122902));
})();
var G__122885 = " [";
var G__122886 = (function (){var G__122903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122904 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122903,G__122904) : tailrecursion.hoplon.span.call(null,G__122903,G__122904));
})();
var G__122887 = "]\n  (";
var G__122888 = (function (){var G__122905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122906 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122905,G__122906) : tailrecursion.hoplon.span.call(null,G__122905,G__122906));
})();
var G__122889 = (function (){var G__122907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122908 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122907,G__122908) : tailrecursion.hoplon.span.call(null,G__122907,G__122908));
})();
var G__122890 = "))\n(";
var G__122891 = (function (){var G__122909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122910 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122909,G__122910) : tailrecursion.hoplon.span.call(null,G__122909,G__122910));
})();
var G__122892 = (function (){var G__122911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122912 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122911,G__122912) : tailrecursion.hoplon.span.call(null,G__122911,G__122912));
})();
var G__122893 = " [";
var G__122894 = (function (){var G__122913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122914 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122913,G__122914) : tailrecursion.hoplon.span.call(null,G__122913,G__122914));
})();
var G__122895 = "]\n  (";
var G__122896 = (function (){var G__122915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122916 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122915,G__122916) : tailrecursion.hoplon.span.call(null,G__122915,G__122916));
})();
var G__122897 = (function (){var G__122917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122918 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122917,G__122918) : tailrecursion.hoplon.span.call(null,G__122917,G__122918));
})();
var G__122898 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__122881,G__122882,G__122883,G__122884,G__122885,G__122886,G__122887,G__122888,G__122889,G__122890,G__122891,G__122892,G__122893,G__122894,G__122895,G__122896,G__122897,G__122898) : tailrecursion.hoplon.pre.call(null,G__122881,G__122882,G__122883,G__122884,G__122885,G__122886,G__122887,G__122888,G__122889,G__122890,G__122891,G__122892,G__122893,G__122894,G__122895,G__122896,G__122897,G__122898));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122879,G__122880) : tailrecursion.hoplon.div.call(null,G__122879,G__122880));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122878) : tailrecursion.hoplon.div.call(null,G__122878));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122877;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122876;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122875;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122874;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122919 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122920 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122921 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122922 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122923 = cljs.core.PersistentArrayMap.EMPTY;
var G__122924 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__122925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122926 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122925,G__122926) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122925,G__122926));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__122927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-interval"], null);
var G__122928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122927,G__122928) : tailrecursion.hoplon.markdown.code_node.call(null,G__122927,G__122928));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122923,G__122924) : tailrecursion.hoplon.markdown.para_node.call(null,G__122923,G__122924));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122922;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122921;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122920;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122919;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_122929 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122930 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_122931 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_122932 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__122933 = cljs.core.PersistentArrayMap.EMPTY;
var G__122934 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__122935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122936 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122935,G__122936) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122935,G__122936));
})(),"s, we",(function (){var G__122937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__122938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__122937,G__122938) : tailrecursion.hoplon.markdown.simple_node.call(null,G__122937,G__122938));
})(),"d define ",(function (){var G__122939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sub-interval"], null);
var G__122940 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__122939,G__122940) : tailrecursion.hoplon.markdown.code_node.call(null,G__122939,G__122940));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__122933,G__122934) : tailrecursion.hoplon.markdown.para_node.call(null,G__122933,G__122934));
})(),(function (){var G__122941 = (function (){var G__122942 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__122943 = (function (){var G__122944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__122945 = "(";
var G__122946 = (function (){var G__122975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__122976 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122975,G__122976) : tailrecursion.hoplon.span.call(null,G__122975,G__122976));
})();
var G__122947 = (function (){var G__122977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122978 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122977,G__122978) : tailrecursion.hoplon.span.call(null,G__122977,G__122978));
})();
var G__122948 = " [";
var G__122949 = (function (){var G__122979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122980 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122979,G__122980) : tailrecursion.hoplon.span.call(null,G__122979,G__122980));
})();
var G__122950 = " ";
var G__122951 = (function (){var G__122981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122982 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122981,G__122982) : tailrecursion.hoplon.span.call(null,G__122981,G__122982));
})();
var G__122952 = "]\n  (";
var G__122953 = (function (){var G__122983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122984 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122983,G__122984) : tailrecursion.hoplon.span.call(null,G__122983,G__122984));
})();
var G__122954 = " (";
var G__122955 = (function (){var G__122985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122986 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122985,G__122986) : tailrecursion.hoplon.span.call(null,G__122985,G__122986));
})();
var G__122956 = "(";
var G__122957 = (function (){var G__122987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122988 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122987,G__122988) : tailrecursion.hoplon.span.call(null,G__122987,G__122988));
})();
var G__122958 = " ";
var G__122959 = (function (){var G__122989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122990 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122989,G__122990) : tailrecursion.hoplon.span.call(null,G__122989,G__122990));
})();
var G__122960 = ") (";
var G__122961 = (function (){var G__122991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122992 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122991,G__122992) : tailrecursion.hoplon.span.call(null,G__122991,G__122992));
})();
var G__122962 = " ";
var G__122963 = (function (){var G__122993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__122994 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122993,G__122994) : tailrecursion.hoplon.span.call(null,G__122993,G__122994));
})();
var G__122964 = "))\n                 (";
var G__122965 = (function (){var G__122995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__122996 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122995,G__122996) : tailrecursion.hoplon.span.call(null,G__122995,G__122996));
})();
var G__122966 = "(";
var G__122967 = (function (){var G__122997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__122998 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122997,G__122998) : tailrecursion.hoplon.span.call(null,G__122997,G__122998));
})();
var G__122968 = " ";
var G__122969 = (function (){var G__122999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123000 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__122999,G__123000) : tailrecursion.hoplon.span.call(null,G__122999,G__123000));
})();
var G__122970 = ") (";
var G__122971 = (function (){var G__123001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123002 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123001,G__123002) : tailrecursion.hoplon.span.call(null,G__123001,G__123002));
})();
var G__122972 = " ";
var G__122973 = (function (){var G__123003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123004 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123003,G__123004) : tailrecursion.hoplon.span.call(null,G__123003,G__123004));
})();
var G__122974 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__122944,G__122945,G__122946,G__122947,G__122948,G__122949,G__122950,G__122951,G__122952,G__122953,G__122954,G__122955,G__122956,G__122957,G__122958,G__122959,G__122960,G__122961,G__122962,G__122963,G__122964,G__122965,G__122966,G__122967,G__122968,G__122969,G__122970,G__122971,G__122972,G__122973,G__122974) : tailrecursion.hoplon.pre.call(null,G__122944,G__122945,G__122946,G__122947,G__122948,G__122949,G__122950,G__122951,G__122952,G__122953,G__122954,G__122955,G__122956,G__122957,G__122958,G__122959,G__122960,G__122961,G__122962,G__122963,G__122964,G__122965,G__122966,G__122967,G__122968,G__122969,G__122970,G__122971,G__122972,G__122973,G__122974));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__122942,G__122943) : tailrecursion.hoplon.div.call(null,G__122942,G__122943));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__122941) : tailrecursion.hoplon.div.call(null,G__122941));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122932;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122931;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_122930;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_122929;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_123005 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123006 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123007 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123008 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123009 = cljs.core.PersistentArrayMap.EMPTY;
var G__123010 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123009,G__123010) : tailrecursion.hoplon.markdown.para_node.call(null,G__123009,G__123010));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123008;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123007;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123006;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123005;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_123011 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123012 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123013 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123014 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123015 = cljs.core.PersistentArrayMap.EMPTY;
var G__123016 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__123017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__123018 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__123017,G__123018) : tailrecursion.hoplon.markdown.simple_node.call(null,G__123017,G__123018));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__123019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(add-interval x y)"], null);
var G__123020 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__123019,G__123020) : tailrecursion.hoplon.markdown.code_node.call(null,G__123019,G__123020));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123015,G__123016) : tailrecursion.hoplon.markdown.para_node.call(null,G__123015,G__123016));
})(),(function (){var G__123021 = cljs.core.PersistentArrayMap.EMPTY;
var G__123022 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__123023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(sub-interval a b)"], null);
var G__123024 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__123023,G__123024) : tailrecursion.hoplon.markdown.code_node.call(null,G__123023,G__123024));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123021,G__123022) : tailrecursion.hoplon.markdown.para_node.call(null,G__123021,G__123022));
})(),(function (){var G__123025 = cljs.core.PersistentArrayMap.EMPTY;
var G__123026 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123025,G__123026) : tailrecursion.hoplon.markdown.para_node.call(null,G__123025,G__123026));
})(),(function (){var G__123027 = cljs.core.PersistentArrayMap.EMPTY;
var G__123028 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123027,G__123028) : tailrecursion.hoplon.markdown.para_node.call(null,G__123027,G__123028));
})(),(function (){var G__123029 = cljs.core.PersistentArrayMap.EMPTY;
var G__123030 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__123031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__123032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__123031,G__123032) : tailrecursion.hoplon.markdown.simple_node.call(null,G__123031,G__123032));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123029,G__123030) : tailrecursion.hoplon.markdown.para_node.call(null,G__123029,G__123030));
})(),(function (){var G__123033 = cljs.core.PersistentArrayMap.EMPTY;
var G__123034 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123033,G__123034) : tailrecursion.hoplon.markdown.para_node.call(null,G__123033,G__123034));
})(),(function (){var G__123035 = cljs.core.PersistentArrayMap.EMPTY;
var G__123036 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__123037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(width\n(mul-interval a b))"], null);
var G__123038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__123037,G__123038) : tailrecursion.hoplon.markdown.code_node.call(null,G__123037,G__123038));
})()," is 2, but ",(function (){var G__123039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(width (mul-interval c d))"], null);
var G__123040 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__123039,G__123040) : tailrecursion.hoplon.markdown.code_node.call(null,G__123039,G__123040));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123035,G__123036) : tailrecursion.hoplon.markdown.para_node.call(null,G__123035,G__123036));
})(),(function (){var G__123041 = cljs.core.PersistentArrayMap.EMPTY;
var G__123042 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__123043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(div-interval a b)"], null);
var G__123044 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__123043,G__123044) : tailrecursion.hoplon.markdown.code_node.call(null,G__123043,G__123044));
})()," is \\((1/2, 2)\\), but ",(function (){var G__123045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(div-interval c d)"], null);
var G__123046 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__123045,G__123046) : tailrecursion.hoplon.markdown.code_node.call(null,G__123045,G__123046));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123041,G__123042) : tailrecursion.hoplon.markdown.para_node.call(null,G__123041,G__123042));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123014;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123013;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123012;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123011;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_123047 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123048 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123049 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123050 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123051 = cljs.core.PersistentArrayMap.EMPTY;
var G__123052 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__123053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__123054 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__123053,G__123054) : tailrecursion.hoplon.markdown.simple_node.call(null,G__123053,G__123054));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__123055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__123056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__123055,G__123056) : tailrecursion.hoplon.markdown.simple_node.call(null,G__123055,G__123056));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123051,G__123052) : tailrecursion.hoplon.markdown.para_node.call(null,G__123051,G__123052));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123050;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123049;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123048;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123047;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_123057 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123058 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123059 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123060 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123061 = (function (){var G__123062 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__123063 = (function (){var G__123064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__123065 = "(";
var G__123066 = (function (){var G__123124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123125 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123124,G__123125) : tailrecursion.hoplon.span.call(null,G__123124,G__123125));
})();
var G__123067 = (function (){var G__123126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123127 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123126,G__123127) : tailrecursion.hoplon.span.call(null,G__123126,G__123127));
})();
var G__123068 = " [";
var G__123069 = (function (){var G__123128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123129 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123128,G__123129) : tailrecursion.hoplon.span.call(null,G__123128,G__123129));
})();
var G__123070 = " ";
var G__123071 = (function (){var G__123130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123131 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123130,G__123131) : tailrecursion.hoplon.span.call(null,G__123130,G__123131));
})();
var G__123072 = "]\n  (";
var G__123073 = (function (){var G__123132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123133 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123132,G__123133) : tailrecursion.hoplon.span.call(null,G__123132,G__123133));
})();
var G__123074 = "[";
var G__123075 = (function (){var G__123134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123135 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123134,G__123135) : tailrecursion.hoplon.span.call(null,G__123134,G__123135));
})();
var G__123076 = " ";
var G__123077 = (function (){var G__123136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123137 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123136,G__123137) : tailrecursion.hoplon.span.call(null,G__123136,G__123137));
})();
var G__123078 = "(";
var G__123079 = (function (){var G__123138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123139 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123138,G__123139) : tailrecursion.hoplon.span.call(null,G__123138,G__123139));
})();
var G__123080 = (function (){var G__123140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123141 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123140,G__123141) : tailrecursion.hoplon.span.call(null,G__123140,G__123141));
})();
var G__123081 = "\n                       (";
var G__123082 = (function (){var G__123142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123143 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123142,G__123143) : tailrecursion.hoplon.span.call(null,G__123142,G__123143));
})();
var G__123083 = "(";
var G__123084 = (function (){var G__123144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123145 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123144,G__123145) : tailrecursion.hoplon.span.call(null,G__123144,G__123145));
})();
var G__123085 = " ";
var G__123086 = (function (){var G__123146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123147 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123146,G__123147) : tailrecursion.hoplon.span.call(null,G__123146,G__123147));
})();
var G__123087 = ")\n                          (";
var G__123088 = (function (){var G__123148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123149 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123148,G__123149) : tailrecursion.hoplon.span.call(null,G__123148,G__123149));
})();
var G__123089 = " ";
var G__123090 = (function (){var G__123150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123151 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123150,G__123151) : tailrecursion.hoplon.span.call(null,G__123150,G__123151));
})();
var G__123091 = ")))]\n    (";
var G__123092 = (function (){var G__123152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123153 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123152,G__123153) : tailrecursion.hoplon.span.call(null,G__123152,G__123153));
})();
var G__123093 = "(";
var G__123094 = (function (){var G__123154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123155 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123154,G__123155) : tailrecursion.hoplon.span.call(null,G__123154,G__123155));
})();
var G__123095 = " ";
var G__123096 = (function (){var G__123156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123157 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123156,G__123157) : tailrecursion.hoplon.span.call(null,G__123156,G__123157));
})();
var G__123097 = ")\n        (";
var G__123098 = (function (){var G__123158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123159 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123158,G__123159) : tailrecursion.hoplon.span.call(null,G__123158,G__123159));
})();
var G__123099 = " (";
var G__123100 = (function (){var G__123160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123161 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123160,G__123161) : tailrecursion.hoplon.span.call(null,G__123160,G__123161));
})();
var G__123101 = " ";
var G__123102 = (function (){var G__123162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__123163 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123162,G__123163) : tailrecursion.hoplon.span.call(null,G__123162,G__123163));
})();
var G__123103 = "))\n        (";
var G__123104 = (function (){var G__123164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123165 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123164,G__123165) : tailrecursion.hoplon.span.call(null,G__123164,G__123165));
})();
var G__123105 = " ";
var G__123106 = (function (){var G__123166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123167 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123166,G__123167) : tailrecursion.hoplon.span.call(null,G__123166,G__123167));
})();
var G__123107 = "\n                      (";
var G__123108 = (function (){var G__123168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123169 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123168,G__123169) : tailrecursion.hoplon.span.call(null,G__123168,G__123169));
})();
var G__123109 = " (";
var G__123110 = (function (){var G__123170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123171 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123170,G__123171) : tailrecursion.hoplon.span.call(null,G__123170,G__123171));
})();
var G__123111 = (function (){var G__123172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123173 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123172,G__123173) : tailrecursion.hoplon.span.call(null,G__123172,G__123173));
})();
var G__123112 = " (";
var G__123113 = (function (){var G__123174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123175 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123174,G__123175) : tailrecursion.hoplon.span.call(null,G__123174,G__123175));
})();
var G__123114 = " ";
var G__123115 = (function (){var G__123176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123177 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123176,G__123177) : tailrecursion.hoplon.span.call(null,G__123176,G__123177));
})();
var G__123116 = "))\n                                     (";
var G__123117 = (function (){var G__123178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123179 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123178,G__123179) : tailrecursion.hoplon.span.call(null,G__123178,G__123179));
})();
var G__123118 = (function (){var G__123180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123181 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123180,G__123181) : tailrecursion.hoplon.span.call(null,G__123180,G__123181));
})();
var G__123119 = " (";
var G__123120 = (function (){var G__123182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123183 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123182,G__123183) : tailrecursion.hoplon.span.call(null,G__123182,G__123183));
})();
var G__123121 = " ";
var G__123122 = (function (){var G__123184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123185 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123184,G__123185) : tailrecursion.hoplon.span.call(null,G__123184,G__123185));
})();
var G__123123 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__123064,G__123065,G__123066,G__123067,G__123068,G__123069,G__123070,G__123071,G__123072,G__123073,G__123074,G__123075,G__123076,G__123077,G__123078,G__123079,G__123080,G__123081,G__123082,G__123083,G__123084,G__123085,G__123086,G__123087,G__123088,G__123089,G__123090,G__123091,G__123092,G__123093,G__123094,G__123095,G__123096,G__123097,G__123098,G__123099,G__123100,G__123101,G__123102,G__123103,G__123104,G__123105,G__123106,G__123107,G__123108,G__123109,G__123110,G__123111,G__123112,G__123113,G__123114,G__123115,G__123116,G__123117,G__123118,G__123119,G__123120,G__123121,G__123122,G__123123) : tailrecursion.hoplon.pre.call(null,G__123064,G__123065,G__123066,G__123067,G__123068,G__123069,G__123070,G__123071,G__123072,G__123073,G__123074,G__123075,G__123076,G__123077,G__123078,G__123079,G__123080,G__123081,G__123082,G__123083,G__123084,G__123085,G__123086,G__123087,G__123088,G__123089,G__123090,G__123091,G__123092,G__123093,G__123094,G__123095,G__123096,G__123097,G__123098,G__123099,G__123100,G__123101,G__123102,G__123103,G__123104,G__123105,G__123106,G__123107,G__123108,G__123109,G__123110,G__123111,G__123112,G__123113,G__123114,G__123115,G__123116,G__123117,G__123118,G__123119,G__123120,G__123121,G__123122,G__123123));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__123062,G__123063) : tailrecursion.hoplon.div.call(null,G__123062,G__123063));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__123061) : tailrecursion.hoplon.div.call(null,G__123061));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123060;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123059;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123058;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123057;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_123186 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123187 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123188 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123189 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123190 = cljs.core.PersistentArrayMap.EMPTY;
var G__123191 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__123192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__123193 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__123192,G__123193) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__123192,G__123193));
})()," Rewrite this procedure using Ben",(function (){var G__123194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__123195 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__123194,G__123195) : tailrecursion.hoplon.markdown.simple_node.call(null,G__123194,G__123195));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123190,G__123191) : tailrecursion.hoplon.markdown.para_node.call(null,G__123190,G__123191));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123189;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123188;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123187;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123186;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_123196 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123197 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123198 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123199 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123200 = (function (){var G__123201 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__123202 = (function (){var G__123203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__123204 = "(";
var G__123205 = (function (){var G__123534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123535 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123534,G__123535) : tailrecursion.hoplon.span.call(null,G__123534,G__123535));
})();
var G__123206 = (function (){var G__123536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123537 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123536,G__123537) : tailrecursion.hoplon.span.call(null,G__123536,G__123537));
})();
var G__123207 = " [";
var G__123208 = (function (){var G__123538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123539 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123538,G__123539) : tailrecursion.hoplon.span.call(null,G__123538,G__123539));
})();
var G__123209 = " ";
var G__123210 = (function (){var G__123540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123541 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123540,G__123541) : tailrecursion.hoplon.span.call(null,G__123540,G__123541));
})();
var G__123211 = "]\n  (";
var G__123212 = (function (){var G__123542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123543 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123542,G__123543) : tailrecursion.hoplon.span.call(null,G__123542,G__123543));
})();
var G__123213 = "(";
var G__123214 = (function (){var G__123544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123545 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123544,G__123545) : tailrecursion.hoplon.span.call(null,G__123544,G__123545));
})();
var G__123215 = "(";
var G__123216 = (function (){var G__123546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123547 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123546,G__123547) : tailrecursion.hoplon.span.call(null,G__123546,G__123547));
})();
var G__123217 = " ";
var G__123218 = (function (){var G__123548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123549 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123548,G__123549) : tailrecursion.hoplon.span.call(null,G__123548,G__123549));
})();
var G__123219 = ") ";
var G__123220 = (function (){var G__123550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123551 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123550,G__123551) : tailrecursion.hoplon.span.call(null,G__123550,G__123551));
})();
var G__123221 = ")\n        (";
var G__123222 = (function (){var G__123552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123553 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123552,G__123553) : tailrecursion.hoplon.span.call(null,G__123552,G__123553));
})();
var G__123223 = "(";
var G__123224 = (function (){var G__123554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123555 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123554,G__123555) : tailrecursion.hoplon.span.call(null,G__123554,G__123555));
})();
var G__123225 = "(";
var G__123226 = (function (){var G__123556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123557 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123556,G__123557) : tailrecursion.hoplon.span.call(null,G__123556,G__123557));
})();
var G__123227 = " ";
var G__123228 = (function (){var G__123558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123559 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123558,G__123559) : tailrecursion.hoplon.span.call(null,G__123558,G__123559));
})();
var G__123229 = ") ";
var G__123230 = (function (){var G__123560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123561 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123560,G__123561) : tailrecursion.hoplon.span.call(null,G__123560,G__123561));
})();
var G__123231 = ")\n              (";
var G__123232 = (function (){var G__123562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123563 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123562,G__123563) : tailrecursion.hoplon.span.call(null,G__123562,G__123563));
})();
var G__123233 = " (";
var G__123234 = (function (){var G__123564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123565 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123564,G__123565) : tailrecursion.hoplon.span.call(null,G__123564,G__123565));
})();
var G__123235 = "(";
var G__123236 = (function (){var G__123566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123567 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123566,G__123567) : tailrecursion.hoplon.span.call(null,G__123566,G__123567));
})();
var G__123237 = " ";
var G__123238 = (function (){var G__123568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123569 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123568,G__123569) : tailrecursion.hoplon.span.call(null,G__123568,G__123569));
})();
var G__123239 = ")\n                                (";
var G__123240 = (function (){var G__123570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123571 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123570,G__123571) : tailrecursion.hoplon.span.call(null,G__123570,G__123571));
})();
var G__123241 = " ";
var G__123242 = (function (){var G__123572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123573 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123572,G__123573) : tailrecursion.hoplon.span.call(null,G__123572,G__123573));
})();
var G__123243 = "))\n                             (";
var G__123244 = (function (){var G__123574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123575 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123574,G__123575) : tailrecursion.hoplon.span.call(null,G__123574,G__123575));
})();
var G__123245 = "(";
var G__123246 = (function (){var G__123576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123577 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123576,G__123577) : tailrecursion.hoplon.span.call(null,G__123576,G__123577));
})();
var G__123247 = " ";
var G__123248 = (function (){var G__123578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123579 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123578,G__123579) : tailrecursion.hoplon.span.call(null,G__123578,G__123579));
})();
var G__123249 = ")\n                                (";
var G__123250 = (function (){var G__123580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123581 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123580,G__123581) : tailrecursion.hoplon.span.call(null,G__123580,G__123581));
})();
var G__123251 = " ";
var G__123252 = (function (){var G__123582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123583 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123582,G__123583) : tailrecursion.hoplon.span.call(null,G__123582,G__123583));
})();
var G__123253 = ")))\n              (";
var G__123254 = (function (){var G__123584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123585 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123584,G__123585) : tailrecursion.hoplon.span.call(null,G__123584,G__123585));
})();
var G__123255 = (function (){var G__123586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123587 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123586,G__123587) : tailrecursion.hoplon.span.call(null,G__123586,G__123587));
})();
var G__123256 = " (";
var G__123257 = (function (){var G__123588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123589 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123588,G__123589) : tailrecursion.hoplon.span.call(null,G__123588,G__123589));
})();
var G__123258 = " ";
var G__123259 = (function (){var G__123590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123591 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123590,G__123591) : tailrecursion.hoplon.span.call(null,G__123590,G__123591));
})();
var G__123260 = "))\n              (";
var G__123261 = (function (){var G__123592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123593 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123592,G__123593) : tailrecursion.hoplon.span.call(null,G__123592,G__123593));
})();
var G__123262 = " (";
var G__123263 = (function (){var G__123594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123595 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123594,G__123595) : tailrecursion.hoplon.span.call(null,G__123594,G__123595));
})();
var G__123264 = "(";
var G__123265 = (function (){var G__123596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123597 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123596,G__123597) : tailrecursion.hoplon.span.call(null,G__123596,G__123597));
})();
var G__123266 = " ";
var G__123267 = (function (){var G__123598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123599 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123598,G__123599) : tailrecursion.hoplon.span.call(null,G__123598,G__123599));
})();
var G__123268 = ")\n                                (";
var G__123269 = (function (){var G__123600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123601 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123600,G__123601) : tailrecursion.hoplon.span.call(null,G__123600,G__123601));
})();
var G__123270 = " ";
var G__123271 = (function (){var G__123602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123603 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123602,G__123603) : tailrecursion.hoplon.span.call(null,G__123602,G__123603));
})();
var G__123272 = "))\n                             (";
var G__123273 = (function (){var G__123604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123605 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123604,G__123605) : tailrecursion.hoplon.span.call(null,G__123604,G__123605));
})();
var G__123274 = "(";
var G__123275 = (function (){var G__123606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123607 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123606,G__123607) : tailrecursion.hoplon.span.call(null,G__123606,G__123607));
})();
var G__123276 = " ";
var G__123277 = (function (){var G__123608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123609 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123608,G__123609) : tailrecursion.hoplon.span.call(null,G__123608,G__123609));
})();
var G__123278 = ")\n                                (";
var G__123279 = (function (){var G__123610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123611 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123610,G__123611) : tailrecursion.hoplon.span.call(null,G__123610,G__123611));
})();
var G__123280 = " ";
var G__123281 = (function (){var G__123612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123613 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123612,G__123613) : tailrecursion.hoplon.span.call(null,G__123612,G__123613));
})();
var G__123282 = ")))\n              ";
var G__123283 = (function (){var G__123614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123615 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123614,G__123615) : tailrecursion.hoplon.span.call(null,G__123614,G__123615));
})();
var G__123284 = " \n              (";
var G__123285 = (function (){var G__123616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123617 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123616,G__123617) : tailrecursion.hoplon.span.call(null,G__123616,G__123617));
})();
var G__123286 = " (";
var G__123287 = (function (){var G__123618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123619 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123618,G__123619) : tailrecursion.hoplon.span.call(null,G__123618,G__123619));
})();
var G__123288 = "(";
var G__123289 = (function (){var G__123620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123621 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123620,G__123621) : tailrecursion.hoplon.span.call(null,G__123620,G__123621));
})();
var G__123290 = " ";
var G__123291 = (function (){var G__123622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123623 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123622,G__123623) : tailrecursion.hoplon.span.call(null,G__123622,G__123623));
})();
var G__123292 = ")\n                                (";
var G__123293 = (function (){var G__123624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123625 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123624,G__123625) : tailrecursion.hoplon.span.call(null,G__123624,G__123625));
})();
var G__123294 = " ";
var G__123295 = (function (){var G__123626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123627 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123626,G__123627) : tailrecursion.hoplon.span.call(null,G__123626,G__123627));
})();
var G__123296 = "))\n                             (";
var G__123297 = (function (){var G__123628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123629 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123628,G__123629) : tailrecursion.hoplon.span.call(null,G__123628,G__123629));
})();
var G__123298 = "(";
var G__123299 = (function (){var G__123630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123631 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123630,G__123631) : tailrecursion.hoplon.span.call(null,G__123630,G__123631));
})();
var G__123300 = " ";
var G__123301 = (function (){var G__123632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123633 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123632,G__123633) : tailrecursion.hoplon.span.call(null,G__123632,G__123633));
})();
var G__123302 = ")\n                                (";
var G__123303 = (function (){var G__123634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123635 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123634,G__123635) : tailrecursion.hoplon.span.call(null,G__123634,G__123635));
})();
var G__123304 = " ";
var G__123305 = (function (){var G__123636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123637 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123636,G__123637) : tailrecursion.hoplon.span.call(null,G__123636,G__123637));
})();
var G__123306 = "))))\n        (";
var G__123307 = (function (){var G__123638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123639 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123638,G__123639) : tailrecursion.hoplon.span.call(null,G__123638,G__123639));
})();
var G__123308 = (function (){var G__123640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123641 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123640,G__123641) : tailrecursion.hoplon.span.call(null,G__123640,G__123641));
})();
var G__123309 = " (";
var G__123310 = (function (){var G__123642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123643 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123642,G__123643) : tailrecursion.hoplon.span.call(null,G__123642,G__123643));
})();
var G__123311 = " ";
var G__123312 = (function (){var G__123644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123645 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123644,G__123645) : tailrecursion.hoplon.span.call(null,G__123644,G__123645));
})();
var G__123313 = "))\n        (";
var G__123314 = (function (){var G__123646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123647 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123646,G__123647) : tailrecursion.hoplon.span.call(null,G__123646,G__123647));
})();
var G__123315 = "(";
var G__123316 = (function (){var G__123648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123649 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123648,G__123649) : tailrecursion.hoplon.span.call(null,G__123648,G__123649));
})();
var G__123317 = "(";
var G__123318 = (function (){var G__123650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123651 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123650,G__123651) : tailrecursion.hoplon.span.call(null,G__123650,G__123651));
})();
var G__123319 = " ";
var G__123320 = (function (){var G__123652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123653 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123652,G__123653) : tailrecursion.hoplon.span.call(null,G__123652,G__123653));
})();
var G__123321 = ") ";
var G__123322 = (function (){var G__123654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123655 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123654,G__123655) : tailrecursion.hoplon.span.call(null,G__123654,G__123655));
})();
var G__123323 = ")\n              (";
var G__123324 = (function (){var G__123656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123657 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123656,G__123657) : tailrecursion.hoplon.span.call(null,G__123656,G__123657));
})();
var G__123325 = " (";
var G__123326 = (function (){var G__123658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123659 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123658,G__123659) : tailrecursion.hoplon.span.call(null,G__123658,G__123659));
})();
var G__123327 = "(";
var G__123328 = (function (){var G__123660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123661 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123660,G__123661) : tailrecursion.hoplon.span.call(null,G__123660,G__123661));
})();
var G__123329 = " ";
var G__123330 = (function (){var G__123662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123663 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123662,G__123663) : tailrecursion.hoplon.span.call(null,G__123662,G__123663));
})();
var G__123331 = ")\n                                (";
var G__123332 = (function (){var G__123664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123665 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123664,G__123665) : tailrecursion.hoplon.span.call(null,G__123664,G__123665));
})();
var G__123333 = " ";
var G__123334 = (function (){var G__123666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123667 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123666,G__123667) : tailrecursion.hoplon.span.call(null,G__123666,G__123667));
})();
var G__123335 = "))\n                             (";
var G__123336 = (function (){var G__123668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123669 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123668,G__123669) : tailrecursion.hoplon.span.call(null,G__123668,G__123669));
})();
var G__123337 = "(";
var G__123338 = (function (){var G__123670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123671 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123670,G__123671) : tailrecursion.hoplon.span.call(null,G__123670,G__123671));
})();
var G__123339 = " ";
var G__123340 = (function (){var G__123672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123673 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123672,G__123673) : tailrecursion.hoplon.span.call(null,G__123672,G__123673));
})();
var G__123341 = ")\n                                (";
var G__123342 = (function (){var G__123674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123675 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123674,G__123675) : tailrecursion.hoplon.span.call(null,G__123674,G__123675));
})();
var G__123343 = " ";
var G__123344 = (function (){var G__123676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123677 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123676,G__123677) : tailrecursion.hoplon.span.call(null,G__123676,G__123677));
})();
var G__123345 = ")))\n              (";
var G__123346 = (function (){var G__123678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123679 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123678,G__123679) : tailrecursion.hoplon.span.call(null,G__123678,G__123679));
})();
var G__123347 = (function (){var G__123680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123681 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123680,G__123681) : tailrecursion.hoplon.span.call(null,G__123680,G__123681));
})();
var G__123348 = " (";
var G__123349 = (function (){var G__123682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123683 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123682,G__123683) : tailrecursion.hoplon.span.call(null,G__123682,G__123683));
})();
var G__123350 = " ";
var G__123351 = (function (){var G__123684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123685 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123684,G__123685) : tailrecursion.hoplon.span.call(null,G__123684,G__123685));
})();
var G__123352 = "))\n              (";
var G__123353 = (function (){var G__123686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123687 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123686,G__123687) : tailrecursion.hoplon.span.call(null,G__123686,G__123687));
})();
var G__123354 = " (";
var G__123355 = (function (){var G__123688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123689 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123688,G__123689) : tailrecursion.hoplon.span.call(null,G__123688,G__123689));
})();
var G__123356 = "(";
var G__123357 = (function (){var G__123690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123691 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123690,G__123691) : tailrecursion.hoplon.span.call(null,G__123690,G__123691));
})();
var G__123358 = " ";
var G__123359 = (function (){var G__123692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123693 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123692,G__123693) : tailrecursion.hoplon.span.call(null,G__123692,G__123693));
})();
var G__123360 = ")\n                                (";
var G__123361 = (function (){var G__123694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123695 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123694,G__123695) : tailrecursion.hoplon.span.call(null,G__123694,G__123695));
})();
var G__123362 = " ";
var G__123363 = (function (){var G__123696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123697 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123696,G__123697) : tailrecursion.hoplon.span.call(null,G__123696,G__123697));
})();
var G__123364 = "))\n                             (";
var G__123365 = (function (){var G__123698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123699 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123698,G__123699) : tailrecursion.hoplon.span.call(null,G__123698,G__123699));
})();
var G__123366 = "(";
var G__123367 = (function (){var G__123700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123701 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123700,G__123701) : tailrecursion.hoplon.span.call(null,G__123700,G__123701));
})();
var G__123368 = " ";
var G__123369 = (function (){var G__123702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123703 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123702,G__123703) : tailrecursion.hoplon.span.call(null,G__123702,G__123703));
})();
var G__123370 = ")\n                                (";
var G__123371 = (function (){var G__123704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123705 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123704,G__123705) : tailrecursion.hoplon.span.call(null,G__123704,G__123705));
})();
var G__123372 = " ";
var G__123373 = (function (){var G__123706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123707 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123706,G__123707) : tailrecursion.hoplon.span.call(null,G__123706,G__123707));
})();
var G__123374 = ")))\n              ";
var G__123375 = (function (){var G__123708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123709 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123708,G__123709) : tailrecursion.hoplon.span.call(null,G__123708,G__123709));
})();
var G__123376 = " \n              (";
var G__123377 = (function (){var G__123710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123711 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123710,G__123711) : tailrecursion.hoplon.span.call(null,G__123710,G__123711));
})();
var G__123378 = " (";
var G__123379 = (function (){var G__123712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123713 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123712,G__123713) : tailrecursion.hoplon.span.call(null,G__123712,G__123713));
})();
var G__123380 = "(";
var G__123381 = (function (){var G__123714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123715 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123714,G__123715) : tailrecursion.hoplon.span.call(null,G__123714,G__123715));
})();
var G__123382 = " ";
var G__123383 = (function (){var G__123716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123717 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123716,G__123717) : tailrecursion.hoplon.span.call(null,G__123716,G__123717));
})();
var G__123384 = ")\n                                (";
var G__123385 = (function (){var G__123718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123719 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123718,G__123719) : tailrecursion.hoplon.span.call(null,G__123718,G__123719));
})();
var G__123386 = " ";
var G__123387 = (function (){var G__123720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123721 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123720,G__123721) : tailrecursion.hoplon.span.call(null,G__123720,G__123721));
})();
var G__123388 = "))\n                             (";
var G__123389 = (function (){var G__123722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123723 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123722,G__123723) : tailrecursion.hoplon.span.call(null,G__123722,G__123723));
})();
var G__123390 = "(";
var G__123391 = (function (){var G__123724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123725 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123724,G__123725) : tailrecursion.hoplon.span.call(null,G__123724,G__123725));
})();
var G__123392 = " ";
var G__123393 = (function (){var G__123726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123727 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123726,G__123727) : tailrecursion.hoplon.span.call(null,G__123726,G__123727));
})();
var G__123394 = ")\n                                (";
var G__123395 = (function (){var G__123728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123729 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123728,G__123729) : tailrecursion.hoplon.span.call(null,G__123728,G__123729));
})();
var G__123396 = " ";
var G__123397 = (function (){var G__123730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123731 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123730,G__123731) : tailrecursion.hoplon.span.call(null,G__123730,G__123731));
})();
var G__123398 = "))))\n        ";
var G__123399 = (function (){var G__123732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123733 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123732,G__123733) : tailrecursion.hoplon.span.call(null,G__123732,G__123733));
})();
var G__123400 = "\n        (";
var G__123401 = (function (){var G__123734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123735 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123734,G__123735) : tailrecursion.hoplon.span.call(null,G__123734,G__123735));
})();
var G__123402 = "(";
var G__123403 = (function (){var G__123736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123737 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123736,G__123737) : tailrecursion.hoplon.span.call(null,G__123736,G__123737));
})();
var G__123404 = "(";
var G__123405 = (function (){var G__123738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123739 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123738,G__123739) : tailrecursion.hoplon.span.call(null,G__123738,G__123739));
})();
var G__123406 = " ";
var G__123407 = (function (){var G__123740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123741 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123740,G__123741) : tailrecursion.hoplon.span.call(null,G__123740,G__123741));
})();
var G__123408 = ") ";
var G__123409 = (function (){var G__123742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123743 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123742,G__123743) : tailrecursion.hoplon.span.call(null,G__123742,G__123743));
})();
var G__123410 = ")\n              (";
var G__123411 = (function (){var G__123744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123745 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123744,G__123745) : tailrecursion.hoplon.span.call(null,G__123744,G__123745));
})();
var G__123412 = " (";
var G__123413 = (function (){var G__123746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123747 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123746,G__123747) : tailrecursion.hoplon.span.call(null,G__123746,G__123747));
})();
var G__123414 = "(";
var G__123415 = (function (){var G__123748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123749 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123748,G__123749) : tailrecursion.hoplon.span.call(null,G__123748,G__123749));
})();
var G__123416 = " ";
var G__123417 = (function (){var G__123750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123751 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123750,G__123751) : tailrecursion.hoplon.span.call(null,G__123750,G__123751));
})();
var G__123418 = ")\n                                (";
var G__123419 = (function (){var G__123752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123753 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123752,G__123753) : tailrecursion.hoplon.span.call(null,G__123752,G__123753));
})();
var G__123420 = " ";
var G__123421 = (function (){var G__123754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123755 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123754,G__123755) : tailrecursion.hoplon.span.call(null,G__123754,G__123755));
})();
var G__123422 = "))\n                             (";
var G__123423 = (function (){var G__123756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123757 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123756,G__123757) : tailrecursion.hoplon.span.call(null,G__123756,G__123757));
})();
var G__123424 = "(";
var G__123425 = (function (){var G__123758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123759 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123758,G__123759) : tailrecursion.hoplon.span.call(null,G__123758,G__123759));
})();
var G__123426 = " ";
var G__123427 = (function (){var G__123760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123761 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123760,G__123761) : tailrecursion.hoplon.span.call(null,G__123760,G__123761));
})();
var G__123428 = ")\n                                (";
var G__123429 = (function (){var G__123762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123763 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123762,G__123763) : tailrecursion.hoplon.span.call(null,G__123762,G__123763));
})();
var G__123430 = " ";
var G__123431 = (function (){var G__123764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123765 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123764,G__123765) : tailrecursion.hoplon.span.call(null,G__123764,G__123765));
})();
var G__123432 = ")))\n              (";
var G__123433 = (function (){var G__123766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123767 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123766,G__123767) : tailrecursion.hoplon.span.call(null,G__123766,G__123767));
})();
var G__123434 = (function (){var G__123768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123769 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123768,G__123769) : tailrecursion.hoplon.span.call(null,G__123768,G__123769));
})();
var G__123435 = " (";
var G__123436 = (function (){var G__123770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123771 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123770,G__123771) : tailrecursion.hoplon.span.call(null,G__123770,G__123771));
})();
var G__123437 = " ";
var G__123438 = (function (){var G__123772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123773 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123772,G__123773) : tailrecursion.hoplon.span.call(null,G__123772,G__123773));
})();
var G__123439 = "))\n              (";
var G__123440 = (function (){var G__123774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123775 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123774,G__123775) : tailrecursion.hoplon.span.call(null,G__123774,G__123775));
})();
var G__123441 = " (";
var G__123442 = (function (){var G__123776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123777 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123776,G__123777) : tailrecursion.hoplon.span.call(null,G__123776,G__123777));
})();
var G__123443 = "(";
var G__123444 = (function (){var G__123778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123779 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123778,G__123779) : tailrecursion.hoplon.span.call(null,G__123778,G__123779));
})();
var G__123445 = " ";
var G__123446 = (function (){var G__123780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123781 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123780,G__123781) : tailrecursion.hoplon.span.call(null,G__123780,G__123781));
})();
var G__123447 = ")\n                                (";
var G__123448 = (function (){var G__123782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123783 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123782,G__123783) : tailrecursion.hoplon.span.call(null,G__123782,G__123783));
})();
var G__123449 = " ";
var G__123450 = (function (){var G__123784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123785 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123784,G__123785) : tailrecursion.hoplon.span.call(null,G__123784,G__123785));
})();
var G__123451 = "))\n                             (";
var G__123452 = (function (){var G__123786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123787 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123786,G__123787) : tailrecursion.hoplon.span.call(null,G__123786,G__123787));
})();
var G__123453 = "(";
var G__123454 = (function (){var G__123788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123789 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123788,G__123789) : tailrecursion.hoplon.span.call(null,G__123788,G__123789));
})();
var G__123455 = " ";
var G__123456 = (function (){var G__123790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123791 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123790,G__123791) : tailrecursion.hoplon.span.call(null,G__123790,G__123791));
})();
var G__123457 = ")\n                                (";
var G__123458 = (function (){var G__123792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123793 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123792,G__123793) : tailrecursion.hoplon.span.call(null,G__123792,G__123793));
})();
var G__123459 = " ";
var G__123460 = (function (){var G__123794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123795 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123794,G__123795) : tailrecursion.hoplon.span.call(null,G__123794,G__123795));
})();
var G__123461 = ")))\n              ";
var G__123462 = (function (){var G__123796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123797 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123796,G__123797) : tailrecursion.hoplon.span.call(null,G__123796,G__123797));
})();
var G__123463 = " \n              (";
var G__123464 = (function (){var G__123798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123799 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123798,G__123799) : tailrecursion.hoplon.span.call(null,G__123798,G__123799));
})();
var G__123465 = "[";
var G__123466 = (function (){var G__123800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123801 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123800,G__123801) : tailrecursion.hoplon.span.call(null,G__123800,G__123801));
})();
var G__123467 = " (";
var G__123468 = (function (){var G__123802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123803 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123802,G__123803) : tailrecursion.hoplon.span.call(null,G__123802,G__123803));
})();
var G__123469 = "(";
var G__123470 = (function (){var G__123804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123805 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123804,G__123805) : tailrecursion.hoplon.span.call(null,G__123804,G__123805));
})();
var G__123471 = " ";
var G__123472 = (function (){var G__123806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123807 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123806,G__123807) : tailrecursion.hoplon.span.call(null,G__123806,G__123807));
})();
var G__123473 = ")\n                         (";
var G__123474 = (function (){var G__123808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123809 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123808,G__123809) : tailrecursion.hoplon.span.call(null,G__123808,G__123809));
})();
var G__123475 = " ";
var G__123476 = (function (){var G__123810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123811 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123810,G__123811) : tailrecursion.hoplon.span.call(null,G__123810,G__123811));
})();
var G__123477 = "))\n                    ";
var G__123478 = (function (){var G__123812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123813 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123812,G__123813) : tailrecursion.hoplon.span.call(null,G__123812,G__123813));
})();
var G__123479 = " (";
var G__123480 = (function (){var G__123814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123815 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123814,G__123815) : tailrecursion.hoplon.span.call(null,G__123814,G__123815));
})();
var G__123481 = "(";
var G__123482 = (function (){var G__123816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123817 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123816,G__123817) : tailrecursion.hoplon.span.call(null,G__123816,G__123817));
})();
var G__123483 = " ";
var G__123484 = (function (){var G__123818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123819 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123818,G__123819) : tailrecursion.hoplon.span.call(null,G__123818,G__123819));
})();
var G__123485 = ")\n                         (";
var G__123486 = (function (){var G__123820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123821 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123820,G__123821) : tailrecursion.hoplon.span.call(null,G__123820,G__123821));
})();
var G__123487 = " ";
var G__123488 = (function (){var G__123822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123823 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123822,G__123823) : tailrecursion.hoplon.span.call(null,G__123822,G__123823));
})();
var G__123489 = "))\n                    ";
var G__123490 = (function (){var G__123824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123825 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123824,G__123825) : tailrecursion.hoplon.span.call(null,G__123824,G__123825));
})();
var G__123491 = " (";
var G__123492 = (function (){var G__123826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123827 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123826,G__123827) : tailrecursion.hoplon.span.call(null,G__123826,G__123827));
})();
var G__123493 = "(";
var G__123494 = (function (){var G__123828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123829 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123828,G__123829) : tailrecursion.hoplon.span.call(null,G__123828,G__123829));
})();
var G__123495 = " ";
var G__123496 = (function (){var G__123830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123831 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123830,G__123831) : tailrecursion.hoplon.span.call(null,G__123830,G__123831));
})();
var G__123497 = ")\n                         (";
var G__123498 = (function (){var G__123832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123833 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123832,G__123833) : tailrecursion.hoplon.span.call(null,G__123832,G__123833));
})();
var G__123499 = " ";
var G__123500 = (function (){var G__123834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123835 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123834,G__123835) : tailrecursion.hoplon.span.call(null,G__123834,G__123835));
})();
var G__123501 = "))\n                    ";
var G__123502 = (function (){var G__123836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123837 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123836,G__123837) : tailrecursion.hoplon.span.call(null,G__123836,G__123837));
})();
var G__123503 = " (";
var G__123504 = (function (){var G__123838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123839 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123838,G__123839) : tailrecursion.hoplon.span.call(null,G__123838,G__123839));
})();
var G__123505 = "(";
var G__123506 = (function (){var G__123840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123841 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123840,G__123841) : tailrecursion.hoplon.span.call(null,G__123840,G__123841));
})();
var G__123507 = " ";
var G__123508 = (function (){var G__123842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123843 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123842,G__123843) : tailrecursion.hoplon.span.call(null,G__123842,G__123843));
})();
var G__123509 = ")\n                         (";
var G__123510 = (function (){var G__123844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123845 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123844,G__123845) : tailrecursion.hoplon.span.call(null,G__123844,G__123845));
})();
var G__123511 = " ";
var G__123512 = (function (){var G__123846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123847 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123846,G__123847) : tailrecursion.hoplon.span.call(null,G__123846,G__123847));
})();
var G__123513 = "))]\n                (";
var G__123514 = (function (){var G__123848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123849 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123848,G__123849) : tailrecursion.hoplon.span.call(null,G__123848,G__123849));
})();
var G__123515 = " (";
var G__123516 = (function (){var G__123850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123851 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123850,G__123851) : tailrecursion.hoplon.span.call(null,G__123850,G__123851));
})();
var G__123517 = (function (){var G__123852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123853 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123852,G__123853) : tailrecursion.hoplon.span.call(null,G__123852,G__123853));
})();
var G__123518 = " ";
var G__123519 = (function (){var G__123854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123855 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123854,G__123855) : tailrecursion.hoplon.span.call(null,G__123854,G__123855));
})();
var G__123520 = " ";
var G__123521 = (function (){var G__123856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123857 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123856,G__123857) : tailrecursion.hoplon.span.call(null,G__123856,G__123857));
})();
var G__123522 = " ";
var G__123523 = (function (){var G__123858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123859 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123858,G__123859) : tailrecursion.hoplon.span.call(null,G__123858,G__123859));
})();
var G__123524 = ")\n                               (";
var G__123525 = (function (){var G__123860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123861 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123860,G__123861) : tailrecursion.hoplon.span.call(null,G__123860,G__123861));
})();
var G__123526 = (function (){var G__123862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123863 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123862,G__123863) : tailrecursion.hoplon.span.call(null,G__123862,G__123863));
})();
var G__123527 = " ";
var G__123528 = (function (){var G__123864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123865 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123864,G__123865) : tailrecursion.hoplon.span.call(null,G__123864,G__123865));
})();
var G__123529 = " ";
var G__123530 = (function (){var G__123866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123867 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123866,G__123867) : tailrecursion.hoplon.span.call(null,G__123866,G__123867));
})();
var G__123531 = " ";
var G__123532 = (function (){var G__123868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123869 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123868,G__123869) : tailrecursion.hoplon.span.call(null,G__123868,G__123869));
})();
var G__123533 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__123203,G__123204,G__123205,G__123206,G__123207,G__123208,G__123209,G__123210,G__123211,G__123212,G__123213,G__123214,G__123215,G__123216,G__123217,G__123218,G__123219,G__123220,G__123221,G__123222,G__123223,G__123224,G__123225,G__123226,G__123227,G__123228,G__123229,G__123230,G__123231,G__123232,G__123233,G__123234,G__123235,G__123236,G__123237,G__123238,G__123239,G__123240,G__123241,G__123242,G__123243,G__123244,G__123245,G__123246,G__123247,G__123248,G__123249,G__123250,G__123251,G__123252,G__123253,G__123254,G__123255,G__123256,G__123257,G__123258,G__123259,G__123260,G__123261,G__123262,G__123263,G__123264,G__123265,G__123266,G__123267,G__123268,G__123269,G__123270,G__123271,G__123272,G__123273,G__123274,G__123275,G__123276,G__123277,G__123278,G__123279,G__123280,G__123281,G__123282,G__123283,G__123284,G__123285,G__123286,G__123287,G__123288,G__123289,G__123290,G__123291,G__123292,G__123293,G__123294,G__123295,G__123296,G__123297,G__123298,G__123299,G__123300,G__123301,G__123302,G__123303,G__123304,G__123305,G__123306,G__123307,G__123308,G__123309,G__123310,G__123311,G__123312,G__123313,G__123314,G__123315,G__123316,G__123317,G__123318,G__123319,G__123320,G__123321,G__123322,G__123323,G__123324,G__123325,G__123326,G__123327,G__123328,G__123329,G__123330,G__123331,G__123332,G__123333,G__123334,G__123335,G__123336,G__123337,G__123338,G__123339,G__123340,G__123341,G__123342,G__123343,G__123344,G__123345,G__123346,G__123347,G__123348,G__123349,G__123350,G__123351,G__123352,G__123353,G__123354,G__123355,G__123356,G__123357,G__123358,G__123359,G__123360,G__123361,G__123362,G__123363,G__123364,G__123365,G__123366,G__123367,G__123368,G__123369,G__123370,G__123371,G__123372,G__123373,G__123374,G__123375,G__123376,G__123377,G__123378,G__123379,G__123380,G__123381,G__123382,G__123383,G__123384,G__123385,G__123386,G__123387,G__123388,G__123389,G__123390,G__123391,G__123392,G__123393,G__123394,G__123395,G__123396,G__123397,G__123398,G__123399,G__123400,G__123401,G__123402,G__123403,G__123404,G__123405,G__123406,G__123407,G__123408,G__123409,G__123410,G__123411,G__123412,G__123413,G__123414,G__123415,G__123416,G__123417,G__123418,G__123419,G__123420,G__123421,G__123422,G__123423,G__123424,G__123425,G__123426,G__123427,G__123428,G__123429,G__123430,G__123431,G__123432,G__123433,G__123434,G__123435,G__123436,G__123437,G__123438,G__123439,G__123440,G__123441,G__123442,G__123443,G__123444,G__123445,G__123446,G__123447,G__123448,G__123449,G__123450,G__123451,G__123452,G__123453,G__123454,G__123455,G__123456,G__123457,G__123458,G__123459,G__123460,G__123461,G__123462,G__123463,G__123464,G__123465,G__123466,G__123467,G__123468,G__123469,G__123470,G__123471,G__123472,G__123473,G__123474,G__123475,G__123476,G__123477,G__123478,G__123479,G__123480,G__123481,G__123482,G__123483,G__123484,G__123485,G__123486,G__123487,G__123488,G__123489,G__123490,G__123491,G__123492,G__123493,G__123494,G__123495,G__123496,G__123497,G__123498,G__123499,G__123500,G__123501,G__123502,G__123503,G__123504,G__123505,G__123506,G__123507,G__123508,G__123509,G__123510,G__123511,G__123512,G__123513,G__123514,G__123515,G__123516,G__123517,G__123518,G__123519,G__123520,G__123521,G__123522,G__123523,G__123524,G__123525,G__123526,G__123527,G__123528,G__123529,G__123530,G__123531,G__123532,G__123533) : tailrecursion.hoplon.pre.call(null,G__123203,G__123204,G__123205,G__123206,G__123207,G__123208,G__123209,G__123210,G__123211,G__123212,G__123213,G__123214,G__123215,G__123216,G__123217,G__123218,G__123219,G__123220,G__123221,G__123222,G__123223,G__123224,G__123225,G__123226,G__123227,G__123228,G__123229,G__123230,G__123231,G__123232,G__123233,G__123234,G__123235,G__123236,G__123237,G__123238,G__123239,G__123240,G__123241,G__123242,G__123243,G__123244,G__123245,G__123246,G__123247,G__123248,G__123249,G__123250,G__123251,G__123252,G__123253,G__123254,G__123255,G__123256,G__123257,G__123258,G__123259,G__123260,G__123261,G__123262,G__123263,G__123264,G__123265,G__123266,G__123267,G__123268,G__123269,G__123270,G__123271,G__123272,G__123273,G__123274,G__123275,G__123276,G__123277,G__123278,G__123279,G__123280,G__123281,G__123282,G__123283,G__123284,G__123285,G__123286,G__123287,G__123288,G__123289,G__123290,G__123291,G__123292,G__123293,G__123294,G__123295,G__123296,G__123297,G__123298,G__123299,G__123300,G__123301,G__123302,G__123303,G__123304,G__123305,G__123306,G__123307,G__123308,G__123309,G__123310,G__123311,G__123312,G__123313,G__123314,G__123315,G__123316,G__123317,G__123318,G__123319,G__123320,G__123321,G__123322,G__123323,G__123324,G__123325,G__123326,G__123327,G__123328,G__123329,G__123330,G__123331,G__123332,G__123333,G__123334,G__123335,G__123336,G__123337,G__123338,G__123339,G__123340,G__123341,G__123342,G__123343,G__123344,G__123345,G__123346,G__123347,G__123348,G__123349,G__123350,G__123351,G__123352,G__123353,G__123354,G__123355,G__123356,G__123357,G__123358,G__123359,G__123360,G__123361,G__123362,G__123363,G__123364,G__123365,G__123366,G__123367,G__123368,G__123369,G__123370,G__123371,G__123372,G__123373,G__123374,G__123375,G__123376,G__123377,G__123378,G__123379,G__123380,G__123381,G__123382,G__123383,G__123384,G__123385,G__123386,G__123387,G__123388,G__123389,G__123390,G__123391,G__123392,G__123393,G__123394,G__123395,G__123396,G__123397,G__123398,G__123399,G__123400,G__123401,G__123402,G__123403,G__123404,G__123405,G__123406,G__123407,G__123408,G__123409,G__123410,G__123411,G__123412,G__123413,G__123414,G__123415,G__123416,G__123417,G__123418,G__123419,G__123420,G__123421,G__123422,G__123423,G__123424,G__123425,G__123426,G__123427,G__123428,G__123429,G__123430,G__123431,G__123432,G__123433,G__123434,G__123435,G__123436,G__123437,G__123438,G__123439,G__123440,G__123441,G__123442,G__123443,G__123444,G__123445,G__123446,G__123447,G__123448,G__123449,G__123450,G__123451,G__123452,G__123453,G__123454,G__123455,G__123456,G__123457,G__123458,G__123459,G__123460,G__123461,G__123462,G__123463,G__123464,G__123465,G__123466,G__123467,G__123468,G__123469,G__123470,G__123471,G__123472,G__123473,G__123474,G__123475,G__123476,G__123477,G__123478,G__123479,G__123480,G__123481,G__123482,G__123483,G__123484,G__123485,G__123486,G__123487,G__123488,G__123489,G__123490,G__123491,G__123492,G__123493,G__123494,G__123495,G__123496,G__123497,G__123498,G__123499,G__123500,G__123501,G__123502,G__123503,G__123504,G__123505,G__123506,G__123507,G__123508,G__123509,G__123510,G__123511,G__123512,G__123513,G__123514,G__123515,G__123516,G__123517,G__123518,G__123519,G__123520,G__123521,G__123522,G__123523,G__123524,G__123525,G__123526,G__123527,G__123528,G__123529,G__123530,G__123531,G__123532,G__123533));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__123201,G__123202) : tailrecursion.hoplon.div.call(null,G__123201,G__123202));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__123200) : tailrecursion.hoplon.div.call(null,G__123200));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123199;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123198;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123197;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123196;
}})()], 0)),"",(function (){var _STAR_references_STAR_123870 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123871 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_123872 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_123873 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__123874 = cljs.core.PersistentArrayMap.EMPTY;
var G__123875 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__123874,G__123875) : tailrecursion.hoplon.markdown.para_node.call(null,G__123874,G__123875));
})(),(function (){var G__123876 = (function (){var G__123877 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__123878 = (function (){var G__123879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__123880 = "(";
var G__123881 = (function (){var G__123938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123939 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123938,G__123939) : tailrecursion.hoplon.span.call(null,G__123938,G__123939));
})();
var G__123882 = (function (){var G__123940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123941 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123940,G__123941) : tailrecursion.hoplon.span.call(null,G__123940,G__123941));
})();
var G__123883 = " [";
var G__123884 = (function (){var G__123942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123943 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123942,G__123943) : tailrecursion.hoplon.span.call(null,G__123942,G__123943));
})();
var G__123885 = " ";
var G__123886 = (function (){var G__123944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123945 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123944,G__123945) : tailrecursion.hoplon.span.call(null,G__123944,G__123945));
})();
var G__123887 = "]\n  (";
var G__123888 = (function (){var G__123946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123947 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123946,G__123947) : tailrecursion.hoplon.span.call(null,G__123946,G__123947));
})();
var G__123889 = " (";
var G__123890 = (function (){var G__123948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123949 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123948,G__123949) : tailrecursion.hoplon.span.call(null,G__123948,G__123949));
})();
var G__123891 = (function (){var G__123950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123951 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123950,G__123951) : tailrecursion.hoplon.span.call(null,G__123950,G__123951));
})();
var G__123892 = " ";
var G__123893 = (function (){var G__123952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123953 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123952,G__123953) : tailrecursion.hoplon.span.call(null,G__123952,G__123953));
})();
var G__123894 = ") (";
var G__123895 = (function (){var G__123954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123955 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123954,G__123955) : tailrecursion.hoplon.span.call(null,G__123954,G__123955));
})();
var G__123896 = (function (){var G__123956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123957 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123956,G__123957) : tailrecursion.hoplon.span.call(null,G__123956,G__123957));
})();
var G__123897 = " ";
var G__123898 = (function (){var G__123958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123959 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123958,G__123959) : tailrecursion.hoplon.span.call(null,G__123958,G__123959));
})();
var G__123899 = ")))\n(";
var G__123900 = (function (){var G__123960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123961 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123960,G__123961) : tailrecursion.hoplon.span.call(null,G__123960,G__123961));
})();
var G__123901 = (function (){var G__123962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123963 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123962,G__123963) : tailrecursion.hoplon.span.call(null,G__123962,G__123963));
})();
var G__123902 = " [";
var G__123903 = (function (){var G__123964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123965 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123964,G__123965) : tailrecursion.hoplon.span.call(null,G__123964,G__123965));
})();
var G__123904 = "]\n  (";
var G__123905 = (function (){var G__123966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123967 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123966,G__123967) : tailrecursion.hoplon.span.call(null,G__123966,G__123967));
})();
var G__123906 = "(";
var G__123907 = (function (){var G__123968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123969 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123968,G__123969) : tailrecursion.hoplon.span.call(null,G__123968,G__123969));
})();
var G__123908 = "(";
var G__123909 = (function (){var G__123970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123971 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123970,G__123971) : tailrecursion.hoplon.span.call(null,G__123970,G__123971));
})();
var G__123910 = " ";
var G__123911 = (function (){var G__123972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123973 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123972,G__123973) : tailrecursion.hoplon.span.call(null,G__123972,G__123973));
})();
var G__123912 = ") (";
var G__123913 = (function (){var G__123974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123975 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123974,G__123975) : tailrecursion.hoplon.span.call(null,G__123974,G__123975));
})();
var G__123914 = " ";
var G__123915 = (function (){var G__123976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123977 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123976,G__123977) : tailrecursion.hoplon.span.call(null,G__123976,G__123977));
})();
var G__123916 = ")) ";
var G__123917 = (function (){var G__123978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123979 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123978,G__123979) : tailrecursion.hoplon.span.call(null,G__123978,G__123979));
})();
var G__123918 = "))\n(";
var G__123919 = (function (){var G__123980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__123981 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123980,G__123981) : tailrecursion.hoplon.span.call(null,G__123980,G__123981));
})();
var G__123920 = (function (){var G__123982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123983 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123982,G__123983) : tailrecursion.hoplon.span.call(null,G__123982,G__123983));
})();
var G__123921 = " [";
var G__123922 = (function (){var G__123984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123985 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123984,G__123985) : tailrecursion.hoplon.span.call(null,G__123984,G__123985));
})();
var G__123923 = "]\n  (";
var G__123924 = (function (){var G__123986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123987 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123986,G__123987) : tailrecursion.hoplon.span.call(null,G__123986,G__123987));
})();
var G__123925 = "(";
var G__123926 = (function (){var G__123988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__123989 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123988,G__123989) : tailrecursion.hoplon.span.call(null,G__123988,G__123989));
})();
var G__123927 = "(";
var G__123928 = (function (){var G__123990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123991 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123990,G__123991) : tailrecursion.hoplon.span.call(null,G__123990,G__123991));
})();
var G__123929 = " ";
var G__123930 = (function (){var G__123992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123993 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123992,G__123993) : tailrecursion.hoplon.span.call(null,G__123992,G__123993));
})();
var G__123931 = ") (";
var G__123932 = (function (){var G__123994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__123995 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123994,G__123995) : tailrecursion.hoplon.span.call(null,G__123994,G__123995));
})();
var G__123933 = " ";
var G__123934 = (function (){var G__123996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__123997 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123996,G__123997) : tailrecursion.hoplon.span.call(null,G__123996,G__123997));
})();
var G__123935 = ")) ";
var G__123936 = (function (){var G__123998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__123999 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__123998,G__123999) : tailrecursion.hoplon.span.call(null,G__123998,G__123999));
})();
var G__123937 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__123879,G__123880,G__123881,G__123882,G__123883,G__123884,G__123885,G__123886,G__123887,G__123888,G__123889,G__123890,G__123891,G__123892,G__123893,G__123894,G__123895,G__123896,G__123897,G__123898,G__123899,G__123900,G__123901,G__123902,G__123903,G__123904,G__123905,G__123906,G__123907,G__123908,G__123909,G__123910,G__123911,G__123912,G__123913,G__123914,G__123915,G__123916,G__123917,G__123918,G__123919,G__123920,G__123921,G__123922,G__123923,G__123924,G__123925,G__123926,G__123927,G__123928,G__123929,G__123930,G__123931,G__123932,G__123933,G__123934,G__123935,G__123936,G__123937) : tailrecursion.hoplon.pre.call(null,G__123879,G__123880,G__123881,G__123882,G__123883,G__123884,G__123885,G__123886,G__123887,G__123888,G__123889,G__123890,G__123891,G__123892,G__123893,G__123894,G__123895,G__123896,G__123897,G__123898,G__123899,G__123900,G__123901,G__123902,G__123903,G__123904,G__123905,G__123906,G__123907,G__123908,G__123909,G__123910,G__123911,G__123912,G__123913,G__123914,G__123915,G__123916,G__123917,G__123918,G__123919,G__123920,G__123921,G__123922,G__123923,G__123924,G__123925,G__123926,G__123927,G__123928,G__123929,G__123930,G__123931,G__123932,G__123933,G__123934,G__123935,G__123936,G__123937));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__123877,G__123878) : tailrecursion.hoplon.div.call(null,G__123877,G__123878));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__123876) : tailrecursion.hoplon.div.call(null,G__123876));
})(),(function (){var G__124000 = cljs.core.PersistentArrayMap.EMPTY;
var G__124001 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__124002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124003 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124002,G__124003) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124002,G__124003));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124000,G__124001) : tailrecursion.hoplon.markdown.para_node.call(null,G__124000,G__124001));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123873;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123872;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_123871;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_123870;
}})()], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124004 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124005 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124006 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124007 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124008 = cljs.core.PersistentArrayMap.EMPTY;
var G__124009 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__124010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"make-center-percent"], null);
var G__124011 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__124010,G__124011) : tailrecursion.hoplon.markdown.code_node.call(null,G__124010,G__124011));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__124012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"percent"], null);
var G__124013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__124012,G__124013) : tailrecursion.hoplon.markdown.code_node.call(null,G__124012,G__124013));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__124014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"center"], null);
var G__124015 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__124014,G__124015) : tailrecursion.hoplon.markdown.code_node.call(null,G__124014,G__124015));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124008,G__124009) : tailrecursion.hoplon.markdown.para_node.call(null,G__124008,G__124009));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124007;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124006;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124005;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124004;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124018 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124019 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124020 = (function (){var G__124021 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__124022 = (function (){var G__124023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__124024 = "(";
var G__124025 = (function (){var G__124068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__124069 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124068,G__124069) : tailrecursion.hoplon.span.call(null,G__124068,G__124069));
})();
var G__124026 = (function (){var G__124070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124071 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124070,G__124071) : tailrecursion.hoplon.span.call(null,G__124070,G__124071));
})();
var G__124027 = " [";
var G__124028 = (function (){var G__124072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124073 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124072,G__124073) : tailrecursion.hoplon.span.call(null,G__124072,G__124073));
})();
var G__124029 = " ";
var G__124030 = (function (){var G__124074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124075 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124074,G__124075) : tailrecursion.hoplon.span.call(null,G__124074,G__124075));
})();
var G__124031 = "]\n  (";
var G__124032 = (function (){var G__124076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__124077 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124076,G__124077) : tailrecursion.hoplon.span.call(null,G__124076,G__124077));
})();
var G__124033 = "[";
var G__124034 = (function (){var G__124078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124079 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124078,G__124079) : tailrecursion.hoplon.span.call(null,G__124078,G__124079));
})();
var G__124035 = " (";
var G__124036 = (function (){var G__124080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__124081 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124080,G__124081) : tailrecursion.hoplon.span.call(null,G__124080,G__124081));
})();
var G__124037 = (function (){var G__124082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124083 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124082,G__124083) : tailrecursion.hoplon.span.call(null,G__124082,G__124083));
})();
var G__124038 = " ";
var G__124039 = (function (){var G__124084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124085 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124084,G__124085) : tailrecursion.hoplon.span.call(null,G__124084,G__124085));
})();
var G__124040 = ")]\n    (";
var G__124041 = (function (){var G__124086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124087 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124086,G__124087) : tailrecursion.hoplon.span.call(null,G__124086,G__124087));
})();
var G__124042 = " (";
var G__124043 = (function (){var G__124088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__124089 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124088,G__124089) : tailrecursion.hoplon.span.call(null,G__124088,G__124089));
})();
var G__124044 = (function (){var G__124090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124091 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124090,G__124091) : tailrecursion.hoplon.span.call(null,G__124090,G__124091));
})();
var G__124045 = " ";
var G__124046 = (function (){var G__124092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124093 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124092,G__124093) : tailrecursion.hoplon.span.call(null,G__124092,G__124093));
})();
var G__124047 = ") (";
var G__124048 = (function (){var G__124094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__124095 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124094,G__124095) : tailrecursion.hoplon.span.call(null,G__124094,G__124095));
})();
var G__124049 = (function (){var G__124096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124097 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124096,G__124097) : tailrecursion.hoplon.span.call(null,G__124096,G__124097));
})();
var G__124050 = " ";
var G__124051 = (function (){var G__124098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124099 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124098,G__124099) : tailrecursion.hoplon.span.call(null,G__124098,G__124099));
})();
var G__124052 = "))))\n(";
var G__124053 = (function (){var G__124100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__124101 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124100,G__124101) : tailrecursion.hoplon.span.call(null,G__124100,G__124101));
})();
var G__124054 = (function (){var G__124102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124103 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124102,G__124103) : tailrecursion.hoplon.span.call(null,G__124102,G__124103));
})();
var G__124055 = " [";
var G__124056 = (function (){var G__124104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124105 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124104,G__124105) : tailrecursion.hoplon.span.call(null,G__124104,G__124105));
})();
var G__124057 = "]\n  (";
var G__124058 = (function (){var G__124106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__124107 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124106,G__124107) : tailrecursion.hoplon.span.call(null,G__124106,G__124107));
})();
var G__124059 = "(";
var G__124060 = (function (){var G__124108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124109 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124108,G__124109) : tailrecursion.hoplon.span.call(null,G__124108,G__124109));
})();
var G__124061 = " ";
var G__124062 = (function (){var G__124110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124111 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124110,G__124111) : tailrecursion.hoplon.span.call(null,G__124110,G__124111));
})();
var G__124063 = ") (";
var G__124064 = (function (){var G__124112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124113 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124112,G__124113) : tailrecursion.hoplon.span.call(null,G__124112,G__124113));
})();
var G__124065 = " ";
var G__124066 = (function (){var G__124114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124115 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124114,G__124115) : tailrecursion.hoplon.span.call(null,G__124114,G__124115));
})();
var G__124067 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__124023,G__124024,G__124025,G__124026,G__124027,G__124028,G__124029,G__124030,G__124031,G__124032,G__124033,G__124034,G__124035,G__124036,G__124037,G__124038,G__124039,G__124040,G__124041,G__124042,G__124043,G__124044,G__124045,G__124046,G__124047,G__124048,G__124049,G__124050,G__124051,G__124052,G__124053,G__124054,G__124055,G__124056,G__124057,G__124058,G__124059,G__124060,G__124061,G__124062,G__124063,G__124064,G__124065,G__124066,G__124067) : tailrecursion.hoplon.pre.call(null,G__124023,G__124024,G__124025,G__124026,G__124027,G__124028,G__124029,G__124030,G__124031,G__124032,G__124033,G__124034,G__124035,G__124036,G__124037,G__124038,G__124039,G__124040,G__124041,G__124042,G__124043,G__124044,G__124045,G__124046,G__124047,G__124048,G__124049,G__124050,G__124051,G__124052,G__124053,G__124054,G__124055,G__124056,G__124057,G__124058,G__124059,G__124060,G__124061,G__124062,G__124063,G__124064,G__124065,G__124066,G__124067));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__124021,G__124022) : tailrecursion.hoplon.div.call(null,G__124021,G__124022));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__124020) : tailrecursion.hoplon.div.call(null,G__124020));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124019;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124018;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124016;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124116 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124117 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124118 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124119 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124120 = cljs.core.PersistentArrayMap.EMPTY;
var G__124121 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124120,G__124121) : tailrecursion.hoplon.markdown.para_node.call(null,G__124120,G__124121));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124119;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124118;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124117;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124116;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124122 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124123 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124124 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124125 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124126 = cljs.core.PersistentArrayMap.EMPTY;
var G__124127 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__124128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124129 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124128,G__124129) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124128,G__124129));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124126,G__124127) : tailrecursion.hoplon.markdown.para_node.call(null,G__124126,G__124127));
})(),(function (){var G__124130 = cljs.core.PersistentArrayMap.EMPTY;
var G__124131 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124130,G__124131) : tailrecursion.hoplon.markdown.para_node.call(null,G__124130,G__124131));
})(),(function (){var G__124132 = cljs.core.PersistentArrayMap.EMPTY;
var G__124133 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124132,G__124133) : tailrecursion.hoplon.markdown.para_node.call(null,G__124132,G__124133));
})(),(function (){var G__124134 = cljs.core.PersistentArrayMap.EMPTY;
var G__124135 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124134,G__124135) : tailrecursion.hoplon.markdown.para_node.call(null,G__124134,G__124135));
})(),(function (){var G__124136 = cljs.core.PersistentArrayMap.EMPTY;
var G__124137 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124136,G__124137) : tailrecursion.hoplon.markdown.para_node.call(null,G__124136,G__124137));
})(),(function (){var G__124138 = cljs.core.PersistentArrayMap.EMPTY;
var G__124139 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124138,G__124139) : tailrecursion.hoplon.markdown.para_node.call(null,G__124138,G__124139));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124125;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124124;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124123;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124122;
}})()], 0)),"",(function (){var _STAR_references_STAR_124140 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124141 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124142 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124143 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124144 = cljs.core.PersistentArrayMap.EMPTY;
var G__124145 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124144,G__124145) : tailrecursion.hoplon.markdown.para_node.call(null,G__124144,G__124145));
})(),(function (){var G__124146 = cljs.core.PersistentArrayMap.EMPTY;
var G__124147 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124146,G__124147) : tailrecursion.hoplon.markdown.para_node.call(null,G__124146,G__124147));
})(),(function (){var G__124148 = cljs.core.PersistentArrayMap.EMPTY;
var G__124149 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124148,G__124149) : tailrecursion.hoplon.markdown.para_node.call(null,G__124148,G__124149));
})(),(function (){var G__124150 = cljs.core.PersistentArrayMap.EMPTY;
var G__124151 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124150,G__124151) : tailrecursion.hoplon.markdown.para_node.call(null,G__124150,G__124151));
})(),(function (){var G__124152 = cljs.core.PersistentArrayMap.EMPTY;
var G__124153 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124152,G__124153) : tailrecursion.hoplon.markdown.para_node.call(null,G__124152,G__124153));
})(),(function (){var G__124154 = (function (){var G__124155 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__124156 = (function (){var G__124157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__124158 = "(";
var G__124159 = (function (){var G__124215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__124216 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124215,G__124216) : tailrecursion.hoplon.span.call(null,G__124215,G__124216));
})();
var G__124160 = (function (){var G__124217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124218 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124217,G__124218) : tailrecursion.hoplon.span.call(null,G__124217,G__124218));
})();
var G__124161 = " [";
var G__124162 = (function (){var G__124219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124220 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124219,G__124220) : tailrecursion.hoplon.span.call(null,G__124219,G__124220));
})();
var G__124163 = " ";
var G__124164 = (function (){var G__124221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124222 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124221,G__124222) : tailrecursion.hoplon.span.call(null,G__124221,G__124222));
})();
var G__124165 = "]\n  (";
var G__124166 = (function (){var G__124223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124224 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124223,G__124224) : tailrecursion.hoplon.span.call(null,G__124223,G__124224));
})();
var G__124167 = " (";
var G__124168 = (function (){var G__124225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124226 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124225,G__124226) : tailrecursion.hoplon.span.call(null,G__124225,G__124226));
})();
var G__124169 = " ";
var G__124170 = (function (){var G__124227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124228 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124227,G__124228) : tailrecursion.hoplon.span.call(null,G__124227,G__124228));
})();
var G__124171 = " ";
var G__124172 = (function (){var G__124229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124230 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124229,G__124230) : tailrecursion.hoplon.span.call(null,G__124229,G__124230));
})();
var G__124173 = ")\n                (";
var G__124174 = (function (){var G__124231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124232 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124231,G__124232) : tailrecursion.hoplon.span.call(null,G__124231,G__124232));
})();
var G__124175 = " ";
var G__124176 = (function (){var G__124233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124234 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124233,G__124234) : tailrecursion.hoplon.span.call(null,G__124233,G__124234));
})();
var G__124177 = " ";
var G__124178 = (function (){var G__124235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124236 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124235,G__124236) : tailrecursion.hoplon.span.call(null,G__124235,G__124236));
})();
var G__124179 = ")))\n(";
var G__124180 = (function (){var G__124237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__124238 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124237,G__124238) : tailrecursion.hoplon.span.call(null,G__124237,G__124238));
})();
var G__124181 = (function (){var G__124239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124240 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124239,G__124240) : tailrecursion.hoplon.span.call(null,G__124239,G__124240));
})();
var G__124182 = " [";
var G__124183 = (function (){var G__124241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124242 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124241,G__124242) : tailrecursion.hoplon.span.call(null,G__124241,G__124242));
})();
var G__124184 = " ";
var G__124185 = (function (){var G__124243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124244 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124243,G__124244) : tailrecursion.hoplon.span.call(null,G__124243,G__124244));
})();
var G__124186 = "]\n  (";
var G__124187 = (function (){var G__124245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__124246 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124245,G__124246) : tailrecursion.hoplon.span.call(null,G__124245,G__124246));
})();
var G__124188 = "[";
var G__124189 = (function (){var G__124247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124248 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124247,G__124248) : tailrecursion.hoplon.span.call(null,G__124247,G__124248));
})();
var G__124190 = " (";
var G__124191 = (function (){var G__124249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124250 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124249,G__124250) : tailrecursion.hoplon.span.call(null,G__124249,G__124250));
})();
var G__124192 = " ";
var G__124193 = (function (){var G__124251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__124252 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124251,G__124252) : tailrecursion.hoplon.span.call(null,G__124251,G__124252));
})();
var G__124194 = " ";
var G__124195 = (function (){var G__124253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__124254 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124253,G__124254) : tailrecursion.hoplon.span.call(null,G__124253,G__124254));
})();
var G__124196 = ")]\n    (";
var G__124197 = (function (){var G__124255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124256 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124255,G__124256) : tailrecursion.hoplon.span.call(null,G__124255,G__124256));
})();
var G__124198 = " ";
var G__124199 = (function (){var G__124257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124258 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124257,G__124258) : tailrecursion.hoplon.span.call(null,G__124257,G__124258));
})();
var G__124200 = "\n                  (";
var G__124201 = (function (){var G__124259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124260 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124259,G__124260) : tailrecursion.hoplon.span.call(null,G__124259,G__124260));
})();
var G__124202 = " (";
var G__124203 = (function (){var G__124261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124262 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124261,G__124262) : tailrecursion.hoplon.span.call(null,G__124261,G__124262));
})();
var G__124204 = " ";
var G__124205 = (function (){var G__124263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124264 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124263,G__124264) : tailrecursion.hoplon.span.call(null,G__124263,G__124264));
})();
var G__124206 = " ";
var G__124207 = (function (){var G__124265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124266 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124265,G__124266) : tailrecursion.hoplon.span.call(null,G__124265,G__124266));
})();
var G__124208 = ")\n                                (";
var G__124209 = (function (){var G__124267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__124268 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124267,G__124268) : tailrecursion.hoplon.span.call(null,G__124267,G__124268));
})();
var G__124210 = " ";
var G__124211 = (function (){var G__124269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124270 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124269,G__124270) : tailrecursion.hoplon.span.call(null,G__124269,G__124270));
})();
var G__124212 = " ";
var G__124213 = (function (){var G__124271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__124272 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__124271,G__124272) : tailrecursion.hoplon.span.call(null,G__124271,G__124272));
})();
var G__124214 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__124157,G__124158,G__124159,G__124160,G__124161,G__124162,G__124163,G__124164,G__124165,G__124166,G__124167,G__124168,G__124169,G__124170,G__124171,G__124172,G__124173,G__124174,G__124175,G__124176,G__124177,G__124178,G__124179,G__124180,G__124181,G__124182,G__124183,G__124184,G__124185,G__124186,G__124187,G__124188,G__124189,G__124190,G__124191,G__124192,G__124193,G__124194,G__124195,G__124196,G__124197,G__124198,G__124199,G__124200,G__124201,G__124202,G__124203,G__124204,G__124205,G__124206,G__124207,G__124208,G__124209,G__124210,G__124211,G__124212,G__124213,G__124214) : tailrecursion.hoplon.pre.call(null,G__124157,G__124158,G__124159,G__124160,G__124161,G__124162,G__124163,G__124164,G__124165,G__124166,G__124167,G__124168,G__124169,G__124170,G__124171,G__124172,G__124173,G__124174,G__124175,G__124176,G__124177,G__124178,G__124179,G__124180,G__124181,G__124182,G__124183,G__124184,G__124185,G__124186,G__124187,G__124188,G__124189,G__124190,G__124191,G__124192,G__124193,G__124194,G__124195,G__124196,G__124197,G__124198,G__124199,G__124200,G__124201,G__124202,G__124203,G__124204,G__124205,G__124206,G__124207,G__124208,G__124209,G__124210,G__124211,G__124212,G__124213,G__124214));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__124155,G__124156) : tailrecursion.hoplon.div.call(null,G__124155,G__124156));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__124154) : tailrecursion.hoplon.div.call(null,G__124154));
})(),(function (){var G__124273 = cljs.core.PersistentArrayMap.EMPTY;
var G__124274 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__124275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124276 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124275,G__124276) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124275,G__124276));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124273,G__124274) : tailrecursion.hoplon.markdown.para_node.call(null,G__124273,G__124274));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124143;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124142;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124141;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124140;
}})()], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124277 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124278 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124279 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124280 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124281 = cljs.core.PersistentArrayMap.EMPTY;
var G__124282 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/12/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124281,G__124282) : tailrecursion.hoplon.markdown.para_node.call(null,G__124281,G__124282));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124280;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124279;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124278;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124277;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124283 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124284 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124285 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124286 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124287 = cljs.core.PersistentArrayMap.EMPTY;
var G__124288 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124287,G__124288) : tailrecursion.hoplon.markdown.para_node.call(null,G__124287,G__124288));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124286;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124285;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124284;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124283;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124291 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124292 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124293 = cljs.core.PersistentArrayMap.EMPTY;
var G__124294 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__124295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124296 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124295,G__124296) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124295,G__124296));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__124297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"par2"], null);
var G__124298 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__124297,G__124298) : tailrecursion.hoplon.markdown.code_node.call(null,G__124297,G__124298));
})()," is a ",(function (){var G__124299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__124300 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__124299,G__124300) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__124299,G__124300));
})()," program for parallel resistances than ",(function (){var G__124301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"par1"], null);
var G__124302 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__124301,G__124302) : tailrecursion.hoplon.markdown.code_node.call(null,G__124301,G__124302));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124293,G__124294) : tailrecursion.hoplon.markdown.para_node.call(null,G__124293,G__124294));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124292;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124291;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124289;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124303 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124304 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124305 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124306 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124307 = cljs.core.PersistentArrayMap.EMPTY;
var G__124308 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__124309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124310 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124309,G__124310) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124309,G__124310));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124307,G__124308) : tailrecursion.hoplon.markdown.para_node.call(null,G__124307,G__124308));
})(),(function (){var G__124311 = cljs.core.PersistentArrayMap.EMPTY;
var G__124312 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124311,G__124312) : tailrecursion.hoplon.markdown.para_node.call(null,G__124311,G__124312));
})(),(function (){var G__124313 = cljs.core.PersistentArrayMap.EMPTY;
var G__124314 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__124315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__124316 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__124315,G__124316) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__124315,G__124316));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124313,G__124314) : tailrecursion.hoplon.markdown.para_node.call(null,G__124313,G__124314));
})(),(function (){var G__124317 = cljs.core.PersistentArrayMap.EMPTY;
var G__124318 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__124319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124319,G__124320) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124319,G__124320));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124317,G__124318) : tailrecursion.hoplon.markdown.para_node.call(null,G__124317,G__124318));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124306;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124305;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124304;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124303;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124321 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124322 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124325 = cljs.core.PersistentArrayMap.EMPTY;
var G__124326 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124325,G__124326) : tailrecursion.hoplon.markdown.para_node.call(null,G__124325,G__124326));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124323;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124322;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124321;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_124327 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124328 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_124329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_124330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__124331 = cljs.core.PersistentArrayMap.EMPTY;
var G__124332 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__124333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__124334 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__124333,G__124334) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__124333,G__124334));
})(),". Already due to what we",(function (){var G__124335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124336 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124335,G__124336) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124335,G__124336));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/15/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__124337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__124338 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__124337,G__124338) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__124337,G__124338));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124331,G__124332) : tailrecursion.hoplon.markdown.para_node.call(null,G__124331,G__124332));
})(),(function (){var G__124339 = cljs.core.PersistentArrayMap.EMPTY;
var G__124340 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__124341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__124342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__124341,G__124342) : tailrecursion.hoplon.markdown.simple_node.call(null,G__124341,G__124342));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__124339,G__124340) : tailrecursion.hoplon.markdown.para_node.call(null,G__124339,G__124340));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124329;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_124328;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_124327;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__119178,G__119179,G__119180,G__119181,G__119182,G__119183,G__119184,G__119185,G__119186,G__119187,G__119188,G__119189,G__119190,G__119191,G__119192,G__119193,G__119194,G__119195,G__119196,G__119197,G__119198,G__119199) : tailrecursion.hoplon.div.call(null,G__119178,G__119179,G__119180,G__119181,G__119182,G__119183,G__119184,G__119185,G__119186,G__119187,G__119188,G__119189,G__119190,G__119191,G__119192,G__119193,G__119194,G__119195,G__119196,G__119197,G__119198,G__119199));
};
var content$sicp$texts$ch2sect1$content = function (var_args){
var args__10403__auto__ = null;
if (arguments.length > 0) {
var G__124343__i = 0, G__124343__a = new Array(arguments.length -  0);
while (G__124343__i < G__124343__a.length) {G__124343__a[G__124343__i] = arguments[G__124343__i + 0]; ++G__124343__i;}
  args__10403__auto__ = new cljs.core.IndexedSeq(G__124343__a,0);
} 
return content$sicp$texts$ch2sect1$content__delegate.call(this,args__10403__auto__);};
content$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
content$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__124344){
var args__10403__auto__ = cljs.core.seq(arglist__124344);
return content$sicp$texts$ch2sect1$content__delegate(args__10403__auto__);
});
content$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = content$sicp$texts$ch2sect1$content__delegate;
return content$sicp$texts$ch2sect1$content;
})()
;

// Compiled by ClojureScript 0.0-3308 {:static-fns true, :optimize-constants true}
goog.provide('content.sicp.texts.ch2sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('content.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
content.sicp.texts.ch2sect2.content = (function() { 
var content$sicp$texts$ch2sect2$content__delegate = function (args__10403__auto__){
var vec__101377 = tailrecursion.hoplon.parse_args(args__10403__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__101377,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__101377,(1),null);
var G__101378 = cljs.core.PersistentArrayMap.EMPTY;
var G__101379 = content.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Hierarchial Data and the Closure Property"], null),(function (){var _STAR_references_STAR_101412 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101413 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101414 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101415 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101416 = cljs.core.PersistentArrayMap.EMPTY;
var G__101417 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As we have seen, pairs provide a primitive ",(function (){var G__101418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101419 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["glue"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101418,G__101419) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101418,G__101419));
})()," that we can use to construct compound data objects. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.2"], null)], 0))," shows a standard way to visualize a pair ",(function (){var G__101420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__101421 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101420,G__101421) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101420,G__101421));
})()," in this case, the pair formed by ",(function (){var G__101422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons 1 2)"], null);
var G__101423 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101422,G__101423) : tailrecursion.hoplon.markdown.code_node.call(null,G__101422,G__101423));
})()," in Scheme (we",(function (){var G__101424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101424,G__101425) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101424,G__101425));
})(),"re using Scheme again for these examples, but lists are implemented similarly in Clojure, and after all, we don",(function (){var G__101426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101427 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101426,G__101427) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101426,G__101427));
})(),"t really care too much about the specifics of their implementation, but rather that they have the characteristics we desire, right?). In this representation, which is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["box-and-pointer notation"], null)], 0)),", each object is shown as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pointer"], null)], 0))," to a box. The box for a primitive object contains a representation of the object. For example, the box for a number contains a numeral. The box for a pair is actually a double box, the left part containing (a pointer to) the ",(function (){var G__101428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__101429 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101428,G__101429) : tailrecursion.hoplon.markdown.code_node.call(null,G__101428,G__101429));
})()," of the pair and the right part containing the ",(function (){var G__101430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__101431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101430,G__101431) : tailrecursion.hoplon.markdown.code_node.call(null,G__101430,G__101431));
})(),". Note that we",(function (){var G__101432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101433 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101432,G__101433) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101432,G__101433));
})(),"re using Scheme for this part. Don",(function (){var G__101434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101435 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101434,G__101435) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101434,G__101435));
})(),"t worry though, we",(function (){var G__101436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101437 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101436,G__101437) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101436,G__101437));
})(),"ll be back to Clojureland soon enough."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101416,G__101417) : tailrecursion.hoplon.markdown.para_node.call(null,G__101416,G__101417));
})(),(function (){var G__101438 = cljs.core.PersistentArrayMap.EMPTY;
var G__101439 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have already seen that ",(function (){var G__101440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101440,G__101441) : tailrecursion.hoplon.markdown.code_node.call(null,G__101440,G__101441));
})()," can be used to combine not only numbers but pairs as well. (You made use of this fact, or should have, in doing exercises ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2.2"], null)], 0))," and ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2.3"], null)], 0)),".) As a consequence, pairs provide a universal building block from which we can construct all sorts of data structures. Figure 2.3 shows two ways to use pairs to combine the numbers 1, 2, 3, and 4."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101438,G__101439) : tailrecursion.hoplon.markdown.para_node.call(null,G__101438,G__101439));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101415;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101414;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101413;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101412;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Box-and-pointer representation of (cons 1 2)."], null)], 0)),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Two ways to combine 1,2,3, and 4 using pairs."], null)], 0)),"",(function (){var _STAR_references_STAR_101442 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101443 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101444 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101445 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101446 = cljs.core.PersistentArrayMap.EMPTY;
var G__101447 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to create pairs whose elements are pairs is the essence of list structure",(function (){var G__101448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101449 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101448,G__101449) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101448,G__101449));
})(),"s importance as a representational tool. We refer to this ability as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure property"], null)], 0))," of ",(function (){var G__101450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101451 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101450,G__101451) : tailrecursion.hoplon.markdown.code_node.call(null,G__101450,G__101451));
})()," (",(function (){var G__101452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101453 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101452,G__101453) : tailrecursion.hoplon.markdown.code_node.call(null,G__101452,G__101453));
})()," is closed in Clojure as well, but don",(function (){var G__101454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101455 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101454,G__101455) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101454,G__101455));
})(),"t just take my word for it, try it out!). In general, an operation for combining data objects satisfies the closure property if the results of combining things with that operation can themselves be combined using the same operation.",(function (){var G__101456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__101457 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The use of the word ",(function (){var G__101458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101459 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101458,G__101459) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101458,G__101459));
})()," here comes from abstract algebra, where a set of elements is said to be closed under an operation if applying the operation to elements in the set produces an element that is again an element of the set. The Lisp community also (unfortunately) uses the word ",(function (){var G__101460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101461 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101460,G__101461) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101460,G__101461));
})()," to describe a totally unrelated concept: A closure is an implementation technique for representing procedures with free variables. We do not use the word ",(function (){var G__101462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101463 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101462,G__101463) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101462,G__101463));
})()," in this second sense in this book."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101456,G__101457) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101456,G__101457));
})()," Closure is the key to power in any means of combination because it permits us to create ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hierarchical"], null)], 0))," structures ",(function (){var G__101464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__101465 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101464,G__101465) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101464,G__101465));
})()," structures made up of parts, which themselves are made up of parts, and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101446,G__101447) : tailrecursion.hoplon.markdown.para_node.call(null,G__101446,G__101447));
})(),(function (){var G__101466 = cljs.core.PersistentArrayMap.EMPTY;
var G__101467 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["From the outset of chapter 1, we",(function (){var G__101468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101469 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101468,G__101469) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101468,G__101469));
})(),"ve made essential use of closure in dealing with procedures, because all but the very simplest programs rely on the fact that the elements of a combination can themselves be combinations. In this section, we take up the consequences of closure for compound data. We describe some conventional techniques for using pairs to represent sequences and trees, and we exhibit a graphics language that illustrates closure in a vivid way.",(function (){var G__101470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__101471 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The notion that a means of combination should satisfy closure is a straightforward idea. Unfortunately, the data combiners provided in many popular programming languages do not satisfy closure, or make closure cumbersome to exploit. In Fortran or Basic, one typically combines data elements by assembling them into arrays ",(function (){var G__101472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__101473 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101472,G__101473) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101472,G__101473));
})()," but one cannot form arrays whose elements are themselves arrays. Pascal and C admit structures whose elements are structures. However, this requires that the programmer manipulate pointers explicitly, and adhere to the restriction that each field of a structure can contain only elements of a prespecified form. Unlike Lisp with its pairs, these languages have no built-in general-purpose glue that makes it easy to manipulate compound data in a uniform way. This limitation lies behind Alan Perlis's comment in his foreword to this book: ",(function (){var G__101474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101475 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Pascal the plethora of declarable data structures induces a specialization within functions that inhibits and penalizes casual cooperation. It is better to have 100 functions operate on one data structure than to have 10 functions operate on 10 data structures."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101474,G__101475) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101474,G__101475));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101470,G__101471) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101470,G__101471));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101466,G__101467) : tailrecursion.hoplon.markdown.para_node.call(null,G__101466,G__101467));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101445;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101444;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101443;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101442;
}})()], 0));
var G__101380 = "";
var G__101381 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Representing Sequences"], null),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The sequence 1, 2, 3, 4 represented as a chain of pairs."], null)], 0)),"",(function (){var _STAR_references_STAR_101476 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101477 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101478 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101479 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101480 = cljs.core.PersistentArrayMap.EMPTY;
var G__101481 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the useful structures we can build with pairs is a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequence"], null)], 0))," ",(function (){var G__101482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__101483 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101482,G__101483) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101482,G__101483));
})()," an ordered collection of data objects. There are, of course, many ways to represent sequences in terms of pairs. One particularly straightforward representation is illustrated in figure 2.4, where the sequence 1, 2, 3, 4 is represented as a chain of pairs. The ",(function (){var G__101484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__101485 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101484,G__101485) : tailrecursion.hoplon.markdown.code_node.call(null,G__101484,G__101485));
})()," of each pair is the corresponding item in the chain, and the cdr of the pair is the next pair in the chain. The ",(function (){var G__101486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__101487 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101486,G__101487) : tailrecursion.hoplon.markdown.code_node.call(null,G__101486,G__101487));
})()," of the final pair signals the end of the sequence by pointing to a distinguished value that is not a pair, represented in box-and-pointer diagrams as a diagonal line and in programs as the value of the variable ",(function (){var G__101488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101489 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101488,G__101489) : tailrecursion.hoplon.markdown.code_node.call(null,G__101488,G__101489));
})(),". The entire sequence is constructed by nested ",(function (){var G__101490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101490,G__101491) : tailrecursion.hoplon.markdown.code_node.call(null,G__101490,G__101491));
})()," operations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101480,G__101481) : tailrecursion.hoplon.markdown.para_node.call(null,G__101480,G__101481));
})(),(function (){var G__101492 = (function (){var G__101493 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101494 = (function (){var G__101495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101496 = "(";
var G__101497 = (function (){var G__101511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101512 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101511,G__101512) : tailrecursion.hoplon.span.call(null,G__101511,G__101512));
})();
var G__101498 = (function (){var G__101513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101514 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101513,G__101514) : tailrecursion.hoplon.span.call(null,G__101513,G__101514));
})();
var G__101499 = "\n      (";
var G__101500 = (function (){var G__101515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101516 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101515,G__101516) : tailrecursion.hoplon.span.call(null,G__101515,G__101516));
})();
var G__101501 = (function (){var G__101517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101518 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101517,G__101518) : tailrecursion.hoplon.span.call(null,G__101517,G__101518));
})();
var G__101502 = "\n            (";
var G__101503 = (function (){var G__101519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101520 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101519,G__101520) : tailrecursion.hoplon.span.call(null,G__101519,G__101520));
})();
var G__101504 = (function (){var G__101521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101522 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101521,G__101522) : tailrecursion.hoplon.span.call(null,G__101521,G__101522));
})();
var G__101505 = "\n                  (";
var G__101506 = (function (){var G__101523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101524 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101523,G__101524) : tailrecursion.hoplon.span.call(null,G__101523,G__101524));
})();
var G__101507 = (function (){var G__101525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101526 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101525,G__101526) : tailrecursion.hoplon.span.call(null,G__101525,G__101526));
})();
var G__101508 = " ";
var G__101509 = (function (){var G__101527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101528 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101527,G__101528) : tailrecursion.hoplon.span.call(null,G__101527,G__101528));
})();
var G__101510 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__101495,G__101496,G__101497,G__101498,G__101499,G__101500,G__101501,G__101502,G__101503,G__101504,G__101505,G__101506,G__101507,G__101508,G__101509,G__101510) : tailrecursion.hoplon.pre.call(null,G__101495,G__101496,G__101497,G__101498,G__101499,G__101500,G__101501,G__101502,G__101503,G__101504,G__101505,G__101506,G__101507,G__101508,G__101509,G__101510));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101493,G__101494) : tailrecursion.hoplon.div.call(null,G__101493,G__101494));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101492) : tailrecursion.hoplon.div.call(null,G__101492));
})(),(function (){var G__101529 = cljs.core.PersistentArrayMap.EMPTY;
var G__101530 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Such a sequence of pairs, formed by nested ",(function (){var G__101531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101532 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101531,G__101532) : tailrecursion.hoplon.markdown.code_node.call(null,G__101531,G__101532));
})(),"es is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),", and Scheme provides a primitive called ",(function (){var G__101533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__101534 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101533,G__101534) : tailrecursion.hoplon.markdown.code_node.call(null,G__101533,G__101534));
})()," to help in constructing lists.",(function (){var G__101535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__101536 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this book, we use ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0))," to mean a chain of pairs terminated by the end-of-list marker which is convenient because that is the way they are implemented in Clojure. To test this, type ",(function (){var G__101537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (cons 1 (cons 2\nnil)) (list 1 2))"], null);
var G__101538 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101537,G__101538) : tailrecursion.hoplon.markdown.code_node.call(null,G__101537,G__101538));
})()," to see if they are indeed equal. In contrast, the term ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list structure"], null)], 0))," refers to any data structure made out of pairs, not just to lists."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101535,G__101536) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101535,G__101536));
})()," The above sequence could be produced by ",(function (){var G__101539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 2\n3 4)"], null);
var G__101540 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101539,G__101540) : tailrecursion.hoplon.markdown.code_node.call(null,G__101539,G__101540));
})(),". In general,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101529,G__101530) : tailrecursion.hoplon.markdown.para_node.call(null,G__101529,G__101530));
})(),(function (){var G__101541 = (function (){var G__101542 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101543 = (function (){var G__101544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101545 = "(";
var G__101546 = (function (){var G__101555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101556 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101555,G__101556) : tailrecursion.hoplon.span.call(null,G__101555,G__101556));
})();
var G__101547 = (function (){var G__101557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101558 = "<a1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101557,G__101558) : tailrecursion.hoplon.span.call(null,G__101557,G__101558));
})();
var G__101548 = " ";
var G__101549 = (function (){var G__101559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101560 = "<a2>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101559,G__101560) : tailrecursion.hoplon.span.call(null,G__101559,G__101560));
})();
var G__101550 = " ";
var G__101551 = (function (){var G__101561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101562 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101561,G__101562) : tailrecursion.hoplon.span.call(null,G__101561,G__101562));
})();
var G__101552 = " ";
var G__101553 = (function (){var G__101563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101564 = "<an>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101563,G__101564) : tailrecursion.hoplon.span.call(null,G__101563,G__101564));
})();
var G__101554 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__101544,G__101545,G__101546,G__101547,G__101548,G__101549,G__101550,G__101551,G__101552,G__101553,G__101554) : tailrecursion.hoplon.pre.call(null,G__101544,G__101545,G__101546,G__101547,G__101548,G__101549,G__101550,G__101551,G__101552,G__101553,G__101554));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101542,G__101543) : tailrecursion.hoplon.div.call(null,G__101542,G__101543));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101541) : tailrecursion.hoplon.div.call(null,G__101541));
})(),(function (){var G__101565 = cljs.core.PersistentArrayMap.EMPTY;
var G__101566 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is equivalent to"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101565,G__101566) : tailrecursion.hoplon.markdown.para_node.call(null,G__101565,G__101566));
})(),(function (){var G__101567 = (function (){var G__101568 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101569 = (function (){var G__101570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101571 = "(";
var G__101572 = (function (){var G__101588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101589 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101588,G__101589) : tailrecursion.hoplon.span.call(null,G__101588,G__101589));
})();
var G__101573 = (function (){var G__101590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101591 = "<a1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101590,G__101591) : tailrecursion.hoplon.span.call(null,G__101590,G__101591));
})();
var G__101574 = " (";
var G__101575 = (function (){var G__101592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101593 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101592,G__101593) : tailrecursion.hoplon.span.call(null,G__101592,G__101593));
})();
var G__101576 = (function (){var G__101594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101595 = "<a2>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101594,G__101595) : tailrecursion.hoplon.span.call(null,G__101594,G__101595));
})();
var G__101577 = " (";
var G__101578 = (function (){var G__101596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101597 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101596,G__101597) : tailrecursion.hoplon.span.call(null,G__101596,G__101597));
})();
var G__101579 = (function (){var G__101598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101599 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101598,G__101599) : tailrecursion.hoplon.span.call(null,G__101598,G__101599));
})();
var G__101580 = " (";
var G__101581 = (function (){var G__101600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101601 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101600,G__101601) : tailrecursion.hoplon.span.call(null,G__101600,G__101601));
})();
var G__101582 = (function (){var G__101602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101603 = "<an>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101602,G__101603) : tailrecursion.hoplon.span.call(null,G__101602,G__101603));
})();
var G__101583 = " ";
var G__101584 = (function (){var G__101604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101605 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101604,G__101605) : tailrecursion.hoplon.span.call(null,G__101604,G__101605));
})();
var G__101585 = ") ";
var G__101586 = (function (){var G__101606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101607 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101606,G__101607) : tailrecursion.hoplon.span.call(null,G__101606,G__101607));
})();
var G__101587 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__101570,G__101571,G__101572,G__101573,G__101574,G__101575,G__101576,G__101577,G__101578,G__101579,G__101580,G__101581,G__101582,G__101583,G__101584,G__101585,G__101586,G__101587) : tailrecursion.hoplon.pre.call(null,G__101570,G__101571,G__101572,G__101573,G__101574,G__101575,G__101576,G__101577,G__101578,G__101579,G__101580,G__101581,G__101582,G__101583,G__101584,G__101585,G__101586,G__101587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101568,G__101569) : tailrecursion.hoplon.div.call(null,G__101568,G__101569));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101567) : tailrecursion.hoplon.div.call(null,G__101567));
})(),(function (){var G__101608 = cljs.core.PersistentArrayMap.EMPTY;
var G__101609 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lisp systems conventionally print lists by printing the sequence of elements, enclosed in parentheses. Thus, the data object in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/4/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.4"], null)], 0))," is printed as ",(function (){var G__101610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4)"], null);
var G__101611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101610,G__101611) : tailrecursion.hoplon.markdown.code_node.call(null,G__101610,G__101611));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101608,G__101609) : tailrecursion.hoplon.markdown.para_node.call(null,G__101608,G__101609));
})(),(function (){var G__101612 = (function (){var G__101613 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101614 = (function (){var G__101615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101616 = "(";
var G__101617 = (function (){var G__101639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101640 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101639,G__101640) : tailrecursion.hoplon.span.call(null,G__101639,G__101640));
})();
var G__101618 = (function (){var G__101641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101642 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101641,G__101642) : tailrecursion.hoplon.span.call(null,G__101641,G__101642));
})();
var G__101619 = " (";
var G__101620 = (function (){var G__101643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101644 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101643,G__101644) : tailrecursion.hoplon.span.call(null,G__101643,G__101644));
})();
var G__101621 = (function (){var G__101645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101646 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101645,G__101646) : tailrecursion.hoplon.span.call(null,G__101645,G__101646));
})();
var G__101622 = " ";
var G__101623 = (function (){var G__101647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101648 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101647,G__101648) : tailrecursion.hoplon.span.call(null,G__101647,G__101648));
})();
var G__101624 = " ";
var G__101625 = (function (){var G__101649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101650 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101649,G__101650) : tailrecursion.hoplon.span.call(null,G__101649,G__101650));
})();
var G__101626 = " ";
var G__101627 = (function (){var G__101651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101652 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101651,G__101652) : tailrecursion.hoplon.span.call(null,G__101651,G__101652));
})();
var G__101628 = ")\n\n";
var G__101629 = (function (){var G__101653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101654 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101653,G__101654) : tailrecursion.hoplon.span.call(null,G__101653,G__101654));
})();
var G__101630 = "\n(";
var G__101631 = (function (){var G__101655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101656 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101655,G__101656) : tailrecursion.hoplon.span.call(null,G__101655,G__101656));
})();
var G__101632 = " ";
var G__101633 = (function (){var G__101657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101658 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101657,G__101658) : tailrecursion.hoplon.span.call(null,G__101657,G__101658));
})();
var G__101634 = " ";
var G__101635 = (function (){var G__101659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101660 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101659,G__101660) : tailrecursion.hoplon.span.call(null,G__101659,G__101660));
})();
var G__101636 = " ";
var G__101637 = (function (){var G__101661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101662 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101661,G__101662) : tailrecursion.hoplon.span.call(null,G__101661,G__101662));
})();
var G__101638 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__101615,G__101616,G__101617,G__101618,G__101619,G__101620,G__101621,G__101622,G__101623,G__101624,G__101625,G__101626,G__101627,G__101628,G__101629,G__101630,G__101631,G__101632,G__101633,G__101634,G__101635,G__101636,G__101637,G__101638) : tailrecursion.hoplon.pre.call(null,G__101615,G__101616,G__101617,G__101618,G__101619,G__101620,G__101621,G__101622,G__101623,G__101624,G__101625,G__101626,G__101627,G__101628,G__101629,G__101630,G__101631,G__101632,G__101633,G__101634,G__101635,G__101636,G__101637,G__101638));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101613,G__101614) : tailrecursion.hoplon.div.call(null,G__101613,G__101614));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101612) : tailrecursion.hoplon.div.call(null,G__101612));
})(),(function (){var G__101663 = cljs.core.PersistentArrayMap.EMPTY;
var G__101664 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Be careful not to confuse the expression ",(function (){var G__101665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 2 3 4)"], null);
var G__101666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101665,G__101666) : tailrecursion.hoplon.markdown.code_node.call(null,G__101665,G__101666));
})()," with the list ",(function (){var G__101667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4)"], null);
var G__101668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101667,G__101668) : tailrecursion.hoplon.markdown.code_node.call(null,G__101667,G__101668));
})(),", which is the result obtained when the expression is evaluated. Attempting to evaluate the expression ",(function (){var G__101669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4)"], null);
var G__101670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101669,G__101670) : tailrecursion.hoplon.markdown.code_node.call(null,G__101669,G__101670));
})()," will signal an error when the interpreter tries to apply the procedure 1 to arguments 2,3, and 4."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101663,G__101664) : tailrecursion.hoplon.markdown.para_node.call(null,G__101663,G__101664));
})(),(function (){var G__101671 = cljs.core.PersistentArrayMap.EMPTY;
var G__101672 = cljs.core.PersistentVector.fromArray(["We can think of ",(function (){var G__101673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__101674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101673,G__101674) : tailrecursion.hoplon.markdown.code_node.call(null,G__101673,G__101674));
})()," as selecting the first item in the list (as I",(function (){var G__101675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101675,G__101676) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101675,G__101676));
})(),"m sure you surmised ",(function (){var G__101677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101677,G__101678) : tailrecursion.hoplon.markdown.code_node.call(null,G__101677,G__101678));
})()," does), and of ",(function (){var G__101679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__101680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101679,G__101680) : tailrecursion.hoplon.markdown.code_node.call(null,G__101679,G__101680));
})()," as selecting the sublist consisting of the rest of the items (as does ",(function (){var G__101681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__101682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101681,G__101682) : tailrecursion.hoplon.markdown.code_node.call(null,G__101681,G__101682));
})(),"). This is actually more true in Clojure than in Scheme.",(function (){var G__101683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__101684 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Clojure the procedure we would be dealing with is, ",(function (){var G__101685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__101686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101685,G__101686) : tailrecursion.hoplon.markdown.code_node.call(null,G__101685,G__101686));
})(),", which, given a list returns a new list consisting of all but the first item. A key thing to notice here is that unlike ",(function (){var G__101687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__101688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101687,G__101688) : tailrecursion.hoplon.markdown.code_node.call(null,G__101687,G__101688));
})(),", when you supply ",(function (){var G__101689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__101690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101689,G__101690) : tailrecursion.hoplon.markdown.code_node.call(null,G__101689,G__101690));
})()," with a list, it returns a list. Always. So, ",(function (){var G__101691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(rest (list 1 2))"], null);
var G__101692 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101691,G__101692) : tailrecursion.hoplon.markdown.code_node.call(null,G__101691,G__101692));
})()," returns ",(function (){var G__101693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(2)"], null);
var G__101694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101693,G__101694) : tailrecursion.hoplon.markdown.code_node.call(null,G__101693,G__101694));
})(),", and ",(function (){var G__101695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(rest (list\n1))"], null);
var G__101696 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101695,G__101696) : tailrecursion.hoplon.markdown.code_node.call(null,G__101695,G__101696));
})()," would return ",(function (){var G__101697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"()"], null);
var G__101698 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101697,G__101698) : tailrecursion.hoplon.markdown.code_node.call(null,G__101697,G__101698));
})(),", the empty list."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101683,G__101684) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101683,G__101684));
})()," Nested applications of ",(function (){var G__101699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101699,G__101700) : tailrecursion.hoplon.markdown.code_node.call(null,G__101699,G__101700));
})()," and ",(function (){var G__101701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__101702 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101701,G__101702) : tailrecursion.hoplon.markdown.code_node.call(null,G__101701,G__101702));
})()," can be used to extract the second, third, and subsequent items in the list. Our language, along with ",(function (){var G__101703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101704 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101703,G__101704) : tailrecursion.hoplon.markdown.code_node.call(null,G__101703,G__101704));
})()," has a ",(function (){var G__101705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__101706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101705,G__101706) : tailrecursion.hoplon.markdown.code_node.call(null,G__101705,G__101706));
})()," procedure which, given a list returns the second value. The constructor ",(function (){var G__101707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101708 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101707,G__101708) : tailrecursion.hoplon.markdown.code_node.call(null,G__101707,G__101708));
})()," makes a list like the original one, but with an additional item at the beginning, but Clojure has a more general version called ",(function (){var G__101709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__101710 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101709,G__101710) : tailrecursion.hoplon.markdown.code_node.call(null,G__101709,G__101710));
})()," built in that works well with other sequential objects. So, as we",(function (){var G__101711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101712 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101711,G__101712) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101711,G__101712));
})(),"ve seen, prepending things on a list is very cheap (computationally). That is why ",(function (){var G__101713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__101714 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101713,G__101714) : tailrecursion.hoplon.markdown.code_node.call(null,G__101713,G__101714));
})()," prepends things to lists. There are other sequential objects that ",(function (){var G__101715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__101716 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101715,G__101716) : tailrecursion.hoplon.markdown.code_node.call(null,G__101715,G__101716));
})()," operates on and doesn",(function (){var G__101717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101717,G__101718) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101717,G__101718));
})(),"t prepend, but we",(function (){var G__101719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101719,G__101720) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101719,G__101720));
})(),"ll get into that later."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101671,G__101672) : tailrecursion.hoplon.markdown.para_node.call(null,G__101671,G__101672));
})(),(function (){var G__101721 = (function (){var G__101722 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101723 = (function (){var G__101724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101725 = "(";
var G__101726 = (function (){var G__101835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101836 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101835,G__101836) : tailrecursion.hoplon.span.call(null,G__101835,G__101836));
})();
var G__101727 = (function (){var G__101837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101838 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101837,G__101838) : tailrecursion.hoplon.span.call(null,G__101837,G__101838));
})();
var G__101728 = ")\n";
var G__101729 = (function (){var G__101839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101840 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101839,G__101840) : tailrecursion.hoplon.span.call(null,G__101839,G__101840));
})();
var G__101730 = "\n\n(";
var G__101731 = (function (){var G__101841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101842 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101841,G__101842) : tailrecursion.hoplon.span.call(null,G__101841,G__101842));
})();
var G__101732 = (function (){var G__101843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101844 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101843,G__101844) : tailrecursion.hoplon.span.call(null,G__101843,G__101844));
})();
var G__101733 = ")\n(";
var G__101734 = (function (){var G__101845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101846 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101845,G__101846) : tailrecursion.hoplon.span.call(null,G__101845,G__101846));
})();
var G__101735 = " ";
var G__101736 = (function (){var G__101847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101848 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101847,G__101848) : tailrecursion.hoplon.span.call(null,G__101847,G__101848));
})();
var G__101737 = " ";
var G__101738 = (function (){var G__101849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101850 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101849,G__101850) : tailrecursion.hoplon.span.call(null,G__101849,G__101850));
})();
var G__101739 = ")\n\n(";
var G__101740 = (function (){var G__101851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101852 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101851,G__101852) : tailrecursion.hoplon.span.call(null,G__101851,G__101852));
})();
var G__101741 = "(";
var G__101742 = (function (){var G__101853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101854 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101853,G__101854) : tailrecursion.hoplon.span.call(null,G__101853,G__101854));
})();
var G__101743 = (function (){var G__101855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101856 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101855,G__101856) : tailrecursion.hoplon.span.call(null,G__101855,G__101856));
})();
var G__101744 = "))\n";
var G__101745 = (function (){var G__101857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101858 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101857,G__101858) : tailrecursion.hoplon.span.call(null,G__101857,G__101858));
})();
var G__101746 = "\n\n(";
var G__101747 = (function (){var G__101859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101860 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101859,G__101860) : tailrecursion.hoplon.span.call(null,G__101859,G__101860));
})();
var G__101748 = (function (){var G__101861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101862 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101861,G__101862) : tailrecursion.hoplon.span.call(null,G__101861,G__101862));
})();
var G__101749 = ")\n";
var G__101750 = (function (){var G__101863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101864 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101863,G__101864) : tailrecursion.hoplon.span.call(null,G__101863,G__101864));
})();
var G__101751 = "\n\n(";
var G__101752 = (function (){var G__101865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101866 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101865,G__101866) : tailrecursion.hoplon.span.call(null,G__101865,G__101866));
})();
var G__101753 = (function (){var G__101867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101868 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101867,G__101868) : tailrecursion.hoplon.span.call(null,G__101867,G__101868));
})();
var G__101754 = " ";
var G__101755 = (function (){var G__101869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101870 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101869,G__101870) : tailrecursion.hoplon.span.call(null,G__101869,G__101870));
})();
var G__101756 = ")\n(";
var G__101757 = (function (){var G__101871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101872 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101871,G__101872) : tailrecursion.hoplon.span.call(null,G__101871,G__101872));
})();
var G__101758 = " ";
var G__101759 = (function (){var G__101873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101874 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101873,G__101874) : tailrecursion.hoplon.span.call(null,G__101873,G__101874));
})();
var G__101760 = " ";
var G__101761 = (function (){var G__101875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101876 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101875,G__101876) : tailrecursion.hoplon.span.call(null,G__101875,G__101876));
})();
var G__101762 = " ";
var G__101763 = (function (){var G__101877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101878 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101877,G__101878) : tailrecursion.hoplon.span.call(null,G__101877,G__101878));
})();
var G__101764 = " ";
var G__101765 = (function (){var G__101879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101880 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101879,G__101880) : tailrecursion.hoplon.span.call(null,G__101879,G__101880));
})();
var G__101766 = ")\n\n(";
var G__101767 = (function (){var G__101881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101882 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101881,G__101882) : tailrecursion.hoplon.span.call(null,G__101881,G__101882));
})();
var G__101768 = (function (){var G__101883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101884 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101883,G__101884) : tailrecursion.hoplon.span.call(null,G__101883,G__101884));
})();
var G__101769 = " ";
var G__101770 = (function (){var G__101885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101886 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101885,G__101886) : tailrecursion.hoplon.span.call(null,G__101885,G__101886));
})();
var G__101771 = ")\n(";
var G__101772 = (function (){var G__101887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101888 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101887,G__101888) : tailrecursion.hoplon.span.call(null,G__101887,G__101888));
})();
var G__101773 = " ";
var G__101774 = (function (){var G__101889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101890 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101889,G__101890) : tailrecursion.hoplon.span.call(null,G__101889,G__101890));
})();
var G__101775 = " ";
var G__101776 = (function (){var G__101891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101892 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101891,G__101892) : tailrecursion.hoplon.span.call(null,G__101891,G__101892));
})();
var G__101777 = " ";
var G__101778 = (function (){var G__101893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101894 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101893,G__101894) : tailrecursion.hoplon.span.call(null,G__101893,G__101894));
})();
var G__101779 = " ";
var G__101780 = (function (){var G__101895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101896 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101895,G__101896) : tailrecursion.hoplon.span.call(null,G__101895,G__101896));
})();
var G__101781 = ")\n\n(";
var G__101782 = (function (){var G__101897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101898 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101897,G__101898) : tailrecursion.hoplon.span.call(null,G__101897,G__101898));
})();
var G__101783 = (function (){var G__101899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101900 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101899,G__101900) : tailrecursion.hoplon.span.call(null,G__101899,G__101900));
})();
var G__101784 = " ";
var G__101785 = (function (){var G__101901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101902 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101901,G__101902) : tailrecursion.hoplon.span.call(null,G__101901,G__101902));
})();
var G__101786 = ")\n(";
var G__101787 = (function (){var G__101903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101904 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101903,G__101904) : tailrecursion.hoplon.span.call(null,G__101903,G__101904));
})();
var G__101788 = " ";
var G__101789 = (function (){var G__101905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101906 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101905,G__101906) : tailrecursion.hoplon.span.call(null,G__101905,G__101906));
})();
var G__101790 = " ";
var G__101791 = (function (){var G__101907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101908 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101907,G__101908) : tailrecursion.hoplon.span.call(null,G__101907,G__101908));
})();
var G__101792 = " ";
var G__101793 = (function (){var G__101909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101910 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101909,G__101910) : tailrecursion.hoplon.span.call(null,G__101909,G__101910));
})();
var G__101794 = " ";
var G__101795 = (function (){var G__101911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101912 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101911,G__101912) : tailrecursion.hoplon.span.call(null,G__101911,G__101912));
})();
var G__101796 = ")\n\n(";
var G__101797 = (function (){var G__101913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101914 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101913,G__101914) : tailrecursion.hoplon.span.call(null,G__101913,G__101914));
})();
var G__101798 = (function (){var G__101915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101916 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101915,G__101916) : tailrecursion.hoplon.span.call(null,G__101915,G__101916));
})();
var G__101799 = " ";
var G__101800 = (function (){var G__101917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101918 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101917,G__101918) : tailrecursion.hoplon.span.call(null,G__101917,G__101918));
})();
var G__101801 = ")\n(";
var G__101802 = (function (){var G__101919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101920 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101919,G__101920) : tailrecursion.hoplon.span.call(null,G__101919,G__101920));
})();
var G__101803 = " ";
var G__101804 = (function (){var G__101921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101922 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101921,G__101922) : tailrecursion.hoplon.span.call(null,G__101921,G__101922));
})();
var G__101805 = " ";
var G__101806 = (function (){var G__101923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101924 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101923,G__101924) : tailrecursion.hoplon.span.call(null,G__101923,G__101924));
})();
var G__101807 = " ";
var G__101808 = (function (){var G__101925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101926 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101925,G__101926) : tailrecursion.hoplon.span.call(null,G__101925,G__101926));
})();
var G__101809 = " ";
var G__101810 = (function (){var G__101927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101928 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101927,G__101928) : tailrecursion.hoplon.span.call(null,G__101927,G__101928));
})();
var G__101811 = ")\n\n(";
var G__101812 = (function (){var G__101929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101930 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101929,G__101930) : tailrecursion.hoplon.span.call(null,G__101929,G__101930));
})();
var G__101813 = (function (){var G__101931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101932 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101931,G__101932) : tailrecursion.hoplon.span.call(null,G__101931,G__101932));
})();
var G__101814 = " ";
var G__101815 = (function (){var G__101933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101934 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101933,G__101934) : tailrecursion.hoplon.span.call(null,G__101933,G__101934));
})();
var G__101816 = " ";
var G__101817 = (function (){var G__101935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101936 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101935,G__101936) : tailrecursion.hoplon.span.call(null,G__101935,G__101936));
})();
var G__101818 = " ";
var G__101819 = (function (){var G__101937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101938 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101937,G__101938) : tailrecursion.hoplon.span.call(null,G__101937,G__101938));
})();
var G__101820 = ")\n(";
var G__101821 = (function (){var G__101939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101940 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101939,G__101940) : tailrecursion.hoplon.span.call(null,G__101939,G__101940));
})();
var G__101822 = " ";
var G__101823 = (function (){var G__101941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101942 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101941,G__101942) : tailrecursion.hoplon.span.call(null,G__101941,G__101942));
})();
var G__101824 = " ";
var G__101825 = (function (){var G__101943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101944 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101943,G__101944) : tailrecursion.hoplon.span.call(null,G__101943,G__101944));
})();
var G__101826 = " ";
var G__101827 = (function (){var G__101945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101946 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101945,G__101946) : tailrecursion.hoplon.span.call(null,G__101945,G__101946));
})();
var G__101828 = " ";
var G__101829 = (function (){var G__101947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101948 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101947,G__101948) : tailrecursion.hoplon.span.call(null,G__101947,G__101948));
})();
var G__101830 = " ";
var G__101831 = (function (){var G__101949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101950 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101949,G__101950) : tailrecursion.hoplon.span.call(null,G__101949,G__101950));
})();
var G__101832 = " ";
var G__101833 = (function (){var G__101951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101952 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101951,G__101952) : tailrecursion.hoplon.span.call(null,G__101951,G__101952));
})();
var G__101834 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$111 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$111(G__101724,G__101725,G__101726,G__101727,G__101728,G__101729,G__101730,G__101731,G__101732,G__101733,G__101734,G__101735,G__101736,G__101737,G__101738,G__101739,G__101740,G__101741,G__101742,G__101743,G__101744,G__101745,G__101746,G__101747,G__101748,G__101749,G__101750,G__101751,G__101752,G__101753,G__101754,G__101755,G__101756,G__101757,G__101758,G__101759,G__101760,G__101761,G__101762,G__101763,G__101764,G__101765,G__101766,G__101767,G__101768,G__101769,G__101770,G__101771,G__101772,G__101773,G__101774,G__101775,G__101776,G__101777,G__101778,G__101779,G__101780,G__101781,G__101782,G__101783,G__101784,G__101785,G__101786,G__101787,G__101788,G__101789,G__101790,G__101791,G__101792,G__101793,G__101794,G__101795,G__101796,G__101797,G__101798,G__101799,G__101800,G__101801,G__101802,G__101803,G__101804,G__101805,G__101806,G__101807,G__101808,G__101809,G__101810,G__101811,G__101812,G__101813,G__101814,G__101815,G__101816,G__101817,G__101818,G__101819,G__101820,G__101821,G__101822,G__101823,G__101824,G__101825,G__101826,G__101827,G__101828,G__101829,G__101830,G__101831,G__101832,G__101833,G__101834) : tailrecursion.hoplon.pre.call(null,G__101724,G__101725,G__101726,G__101727,G__101728,G__101729,G__101730,G__101731,G__101732,G__101733,G__101734,G__101735,G__101736,G__101737,G__101738,G__101739,G__101740,G__101741,G__101742,G__101743,G__101744,G__101745,G__101746,G__101747,G__101748,G__101749,G__101750,G__101751,G__101752,G__101753,G__101754,G__101755,G__101756,G__101757,G__101758,G__101759,G__101760,G__101761,G__101762,G__101763,G__101764,G__101765,G__101766,G__101767,G__101768,G__101769,G__101770,G__101771,G__101772,G__101773,G__101774,G__101775,G__101776,G__101777,G__101778,G__101779,G__101780,G__101781,G__101782,G__101783,G__101784,G__101785,G__101786,G__101787,G__101788,G__101789,G__101790,G__101791,G__101792,G__101793,G__101794,G__101795,G__101796,G__101797,G__101798,G__101799,G__101800,G__101801,G__101802,G__101803,G__101804,G__101805,G__101806,G__101807,G__101808,G__101809,G__101810,G__101811,G__101812,G__101813,G__101814,G__101815,G__101816,G__101817,G__101818,G__101819,G__101820,G__101821,G__101822,G__101823,G__101824,G__101825,G__101826,G__101827,G__101828,G__101829,G__101830,G__101831,G__101832,G__101833,G__101834));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101722,G__101723) : tailrecursion.hoplon.div.call(null,G__101722,G__101723));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101721) : tailrecursion.hoplon.div.call(null,G__101721));
})(),(function (){var G__101953 = cljs.core.PersistentArrayMap.EMPTY;
var G__101954 = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice in that last one that ",(function (){var G__101955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__101956 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101955,G__101956) : tailrecursion.hoplon.markdown.code_node.call(null,G__101955,G__101956));
})()," put them in backward. That is because ",(function (){var G__101957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__101958 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101957,G__101958) : tailrecursion.hoplon.markdown.code_node.call(null,G__101957,G__101958));
})()," prepends them one by one in the order they appear. The value of ",(function (){var G__101959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101960 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101959,G__101960) : tailrecursion.hoplon.markdown.code_node.call(null,G__101959,G__101960));
})(),", used to terminate the chain of pairs, in Clojure is only named ",(function (){var G__101961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101962 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101961,G__101962) : tailrecursion.hoplon.markdown.code_node.call(null,G__101961,G__101962));
})()," for legacy reasons. In Scheme, however, ",(function (){var G__101963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101964 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101963,G__101964) : tailrecursion.hoplon.markdown.code_node.call(null,G__101963,G__101964));
})()," was a sequence of no elements or the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["empty list"], null)], 0)),". The word ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nil"], null)], 0))," is a contraction of the Latin word ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nihil"], null)], 0)),", which means ",(function (){var G__101965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101966 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nothing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101965,G__101966) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101965,G__101966));
})(),".",(function (){var G__101967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__101968 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It's remarkable how much energy in the standardization of Lisp dialects has been dissipated in arguments that are literally over nothing: Should ",(function (){var G__101969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101970 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101969,G__101970) : tailrecursion.hoplon.markdown.code_node.call(null,G__101969,G__101970));
})()," be an ordinary name? Should the value of ",(function (){var G__101971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101972 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101971,G__101972) : tailrecursion.hoplon.markdown.code_node.call(null,G__101971,G__101972));
})()," be a symbol? Should it be a list? Should it be a pair? In Scheme, ",(function (){var G__101973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101974 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101973,G__101974) : tailrecursion.hoplon.markdown.code_node.call(null,G__101973,G__101974));
})()," is an ordinary name, which we use in this section as a variable whose value is the end-of-list marker (just as ",(function (){var G__101975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__101976 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101975,G__101976) : tailrecursion.hoplon.markdown.code_node.call(null,G__101975,G__101976));
})()," is an ordinary variable that has a true value). Other dialects of Lisp, including Common Lisp, treat nil as a special symbol. The authors of this book, who have endured too many language standardization brawls, would like to avoid the entire issue. Once we have introduced quotation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.3"], null)], 0)),", we will denote the empty list as ",(function (){var G__101977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"&#39;()"], null);
var G__101978 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101977,G__101978) : tailrecursion.hoplon.markdown.code_node.call(null,G__101977,G__101978));
})()," and dispense with the variable ",(function (){var G__101979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101980 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101979,G__101980) : tailrecursion.hoplon.markdown.code_node.call(null,G__101979,G__101980));
})()," entirely."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101967,G__101968) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101967,G__101968));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101953,G__101954) : tailrecursion.hoplon.markdown.para_node.call(null,G__101953,G__101954));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101479;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101478;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101477;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101476;
}})()], 0));
var G__101382 = "";
var G__101383 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"List Operations"], null),(function (){var _STAR_references_STAR_101981 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101982 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101983 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101984 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101985 = cljs.core.PersistentArrayMap.EMPTY;
var G__101986 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The use of pairs to represent sequences of elements as lists is accompanied by conventional programming techniques for manipulating lists by successively ",(function (){var G__101987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__101988 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cdring down"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__101987,G__101988) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__101987,G__101988));
})()," the lists. For example, the procedure ",(function (){var G__101989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list-ref"], null);
var G__101990 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101989,G__101990) : tailrecursion.hoplon.markdown.code_node.call(null,G__101989,G__101990));
})()," in Scheme and ",(function (){var G__101991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__101992 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101991,G__101992) : tailrecursion.hoplon.markdown.code_node.call(null,G__101991,G__101992));
})()," in Clojure takes as arguments a list and a number \\(n\\) and returns the \\(n\\)th item of the list. It is customary to number the elements of the list beginning with 0. The method for computing ",(function (){var G__101993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__101994 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101993,G__101994) : tailrecursion.hoplon.markdown.code_node.call(null,G__101993,G__101994));
})()," is the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101985,G__101986) : tailrecursion.hoplon.markdown.para_node.call(null,G__101985,G__101986));
})(),(function (){var G__101995 = cljs.core.PersistentArrayMap.EMPTY;
var G__101996 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101997 = cljs.core.PersistentArrayMap.EMPTY;
var G__101998 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101999 = cljs.core.PersistentArrayMap.EMPTY;
var G__102000 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For \\(n=0\\), ",(function (){var G__102001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__102002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102001,G__102002) : tailrecursion.hoplon.markdown.code_node.call(null,G__102001,G__102002));
})()," should return the ",(function (){var G__102003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102003,G__102004) : tailrecursion.hoplon.markdown.code_node.call(null,G__102003,G__102004));
})()," of the list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101999,G__102000) : tailrecursion.hoplon.markdown.para_node.call(null,G__101999,G__102000));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__101997,G__101998) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__101997,G__101998));
})(),(function (){var G__102005 = cljs.core.PersistentArrayMap.EMPTY;
var G__102006 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_102007 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102008 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102009 = cljs.core.PersistentArrayMap.EMPTY;
var G__102010 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Otherwise, ",(function (){var G__102011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__102012 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102011,G__102012) : tailrecursion.hoplon.markdown.code_node.call(null,G__102011,G__102012));
})()," should return the \\(n-1\\)st item of the ",(function (){var G__102013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102014 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102013,G__102014) : tailrecursion.hoplon.markdown.code_node.call(null,G__102013,G__102014));
})()," of the list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102009,G__102010) : tailrecursion.hoplon.markdown.para_node.call(null,G__102009,G__102010));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102008;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102007;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__102005,G__102006) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__102005,G__102006));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__101995,G__101996) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__101995,G__101996));
})(),(function (){var G__102015 = (function (){var G__102016 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102017 = (function (){var G__102018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102019 = "(";
var G__102020 = (function (){var G__102076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102077 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102076,G__102077) : tailrecursion.hoplon.span.call(null,G__102076,G__102077));
})();
var G__102021 = (function (){var G__102078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102079 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102078,G__102079) : tailrecursion.hoplon.span.call(null,G__102078,G__102079));
})();
var G__102022 = "[";
var G__102023 = (function (){var G__102080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102081 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102080,G__102081) : tailrecursion.hoplon.span.call(null,G__102080,G__102081));
})();
var G__102024 = " ";
var G__102025 = (function (){var G__102082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102083 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102082,G__102083) : tailrecursion.hoplon.span.call(null,G__102082,G__102083));
})();
var G__102026 = "]\n  (";
var G__102027 = (function (){var G__102084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102085 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102084,G__102085) : tailrecursion.hoplon.span.call(null,G__102084,G__102085));
})();
var G__102028 = "[";
var G__102029 = (function (){var G__102086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102087 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102086,G__102087) : tailrecursion.hoplon.span.call(null,G__102086,G__102087));
})();
var G__102030 = " ";
var G__102031 = (function (){var G__102088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102089 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102088,G__102089) : tailrecursion.hoplon.span.call(null,G__102088,G__102089));
})();
var G__102032 = "\n         ";
var G__102033 = (function (){var G__102090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102091 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102090,G__102091) : tailrecursion.hoplon.span.call(null,G__102090,G__102091));
})();
var G__102034 = " ";
var G__102035 = (function (){var G__102092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102093 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102092,G__102093) : tailrecursion.hoplon.span.call(null,G__102092,G__102093));
})();
var G__102036 = "]\n    (";
var G__102037 = (function (){var G__102094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102095 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102094,G__102095) : tailrecursion.hoplon.span.call(null,G__102094,G__102095));
})();
var G__102038 = "(";
var G__102039 = (function (){var G__102096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102097 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102096,G__102097) : tailrecursion.hoplon.span.call(null,G__102096,G__102097));
})();
var G__102040 = (function (){var G__102098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102099 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102098,G__102099) : tailrecursion.hoplon.span.call(null,G__102098,G__102099));
})();
var G__102041 = " ";
var G__102042 = (function (){var G__102100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102101 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102100,G__102101) : tailrecursion.hoplon.span.call(null,G__102100,G__102101));
})();
var G__102043 = ")\n        (";
var G__102044 = (function (){var G__102102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102103 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102102,G__102103) : tailrecursion.hoplon.span.call(null,G__102102,G__102103));
})();
var G__102045 = (function (){var G__102104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102105 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102104,G__102105) : tailrecursion.hoplon.span.call(null,G__102104,G__102105));
})();
var G__102046 = ")\n        (";
var G__102047 = (function (){var G__102106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102107 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102106,G__102107) : tailrecursion.hoplon.span.call(null,G__102106,G__102107));
})();
var G__102048 = " (";
var G__102049 = (function (){var G__102108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102109 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102108,G__102109) : tailrecursion.hoplon.span.call(null,G__102108,G__102109));
})();
var G__102050 = (function (){var G__102110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102111 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102110,G__102111) : tailrecursion.hoplon.span.call(null,G__102110,G__102111));
})();
var G__102051 = ") (";
var G__102052 = (function (){var G__102112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102113 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102112,G__102113) : tailrecursion.hoplon.span.call(null,G__102112,G__102113));
})();
var G__102053 = (function (){var G__102114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102115 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102114,G__102115) : tailrecursion.hoplon.span.call(null,G__102114,G__102115));
})();
var G__102054 = ")))))\n(";
var G__102055 = (function (){var G__102116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102117 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102116,G__102117) : tailrecursion.hoplon.span.call(null,G__102116,G__102117));
})();
var G__102056 = (function (){var G__102118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102119 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102118,G__102119) : tailrecursion.hoplon.span.call(null,G__102118,G__102119));
})();
var G__102057 = " (";
var G__102058 = (function (){var G__102120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102121 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102120,G__102121) : tailrecursion.hoplon.span.call(null,G__102120,G__102121));
})();
var G__102059 = (function (){var G__102122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102123 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102122,G__102123) : tailrecursion.hoplon.span.call(null,G__102122,G__102123));
})();
var G__102060 = " ";
var G__102061 = (function (){var G__102124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102125 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102124,G__102125) : tailrecursion.hoplon.span.call(null,G__102124,G__102125));
})();
var G__102062 = " ";
var G__102063 = (function (){var G__102126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102127 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102126,G__102127) : tailrecursion.hoplon.span.call(null,G__102126,G__102127));
})();
var G__102064 = " ";
var G__102065 = (function (){var G__102128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102129 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102128,G__102129) : tailrecursion.hoplon.span.call(null,G__102128,G__102129));
})();
var G__102066 = " ";
var G__102067 = (function (){var G__102130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102131 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102130,G__102131) : tailrecursion.hoplon.span.call(null,G__102130,G__102131));
})();
var G__102068 = "))\n\n(";
var G__102069 = (function (){var G__102132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102133 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102132,G__102133) : tailrecursion.hoplon.span.call(null,G__102132,G__102133));
})();
var G__102070 = (function (){var G__102134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102135 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102134,G__102135) : tailrecursion.hoplon.span.call(null,G__102134,G__102135));
})();
var G__102071 = " ";
var G__102072 = (function (){var G__102136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102137 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102136,G__102137) : tailrecursion.hoplon.span.call(null,G__102136,G__102137));
})();
var G__102073 = ")\n";
var G__102074 = (function (){var G__102138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102139 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102138,G__102139) : tailrecursion.hoplon.span.call(null,G__102138,G__102139));
})();
var G__102075 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__102018,G__102019,G__102020,G__102021,G__102022,G__102023,G__102024,G__102025,G__102026,G__102027,G__102028,G__102029,G__102030,G__102031,G__102032,G__102033,G__102034,G__102035,G__102036,G__102037,G__102038,G__102039,G__102040,G__102041,G__102042,G__102043,G__102044,G__102045,G__102046,G__102047,G__102048,G__102049,G__102050,G__102051,G__102052,G__102053,G__102054,G__102055,G__102056,G__102057,G__102058,G__102059,G__102060,G__102061,G__102062,G__102063,G__102064,G__102065,G__102066,G__102067,G__102068,G__102069,G__102070,G__102071,G__102072,G__102073,G__102074,G__102075) : tailrecursion.hoplon.pre.call(null,G__102018,G__102019,G__102020,G__102021,G__102022,G__102023,G__102024,G__102025,G__102026,G__102027,G__102028,G__102029,G__102030,G__102031,G__102032,G__102033,G__102034,G__102035,G__102036,G__102037,G__102038,G__102039,G__102040,G__102041,G__102042,G__102043,G__102044,G__102045,G__102046,G__102047,G__102048,G__102049,G__102050,G__102051,G__102052,G__102053,G__102054,G__102055,G__102056,G__102057,G__102058,G__102059,G__102060,G__102061,G__102062,G__102063,G__102064,G__102065,G__102066,G__102067,G__102068,G__102069,G__102070,G__102071,G__102072,G__102073,G__102074,G__102075));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102016,G__102017) : tailrecursion.hoplon.div.call(null,G__102016,G__102017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102015) : tailrecursion.hoplon.div.call(null,G__102015));
})(),(function (){var G__102140 = cljs.core.PersistentArrayMap.EMPTY;
var G__102141 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Often we ",(function (){var G__102142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__102143 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102142,G__102143) : tailrecursion.hoplon.markdown.code_node.call(null,G__102142,G__102143));
})()," down the whole list. To aid in this, Scheme includes a primitive ",(function (){var G__102144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"null?"], null);
var G__102145 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102144,G__102145) : tailrecursion.hoplon.markdown.code_node.call(null,G__102144,G__102145));
})(),", which tests whether its argument is the empty list. Being as how Clojure is intended to be more general than that, the analog in Clojure, called ",(function (){var G__102146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"empty?"], null);
var G__102147 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102146,G__102147) : tailrecursion.hoplon.markdown.code_node.call(null,G__102146,G__102147));
})()," accepts any collection as an argument, and returns true if that collection is empty and false otherwise. The Scheme procedure ",(function (){var G__102148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__102149 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102148,G__102149) : tailrecursion.hoplon.markdown.code_node.call(null,G__102148,G__102149));
})(),", which returns the number of items in a list (called ",(function (){var G__102150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__102151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102150,G__102151) : tailrecursion.hoplon.markdown.code_node.call(null,G__102150,G__102151));
})()," in Clojure), illustrates this typical pattern of use:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102140,G__102141) : tailrecursion.hoplon.markdown.para_node.call(null,G__102140,G__102141));
})(),(function (){var G__102152 = (function (){var G__102153 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102154 = (function (){var G__102155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102156 = "(";
var G__102157 = (function (){var G__102194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102195 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102194,G__102195) : tailrecursion.hoplon.span.call(null,G__102194,G__102195));
})();
var G__102158 = (function (){var G__102196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102197 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102196,G__102197) : tailrecursion.hoplon.span.call(null,G__102196,G__102197));
})();
var G__102159 = "[";
var G__102160 = (function (){var G__102198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102199 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102198,G__102199) : tailrecursion.hoplon.span.call(null,G__102198,G__102199));
})();
var G__102161 = "]\n  (";
var G__102162 = (function (){var G__102200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102201 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102200,G__102201) : tailrecursion.hoplon.span.call(null,G__102200,G__102201));
})();
var G__102163 = "(";
var G__102164 = (function (){var G__102202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102203 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102202,G__102203) : tailrecursion.hoplon.span.call(null,G__102202,G__102203));
})();
var G__102165 = " ";
var G__102166 = (function (){var G__102204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102205 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102204,G__102205) : tailrecursion.hoplon.span.call(null,G__102204,G__102205));
})();
var G__102167 = ")\n      ";
var G__102168 = (function (){var G__102206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102207 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102206,G__102207) : tailrecursion.hoplon.span.call(null,G__102206,G__102207));
})();
var G__102169 = "\n      (";
var G__102170 = (function (){var G__102208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102209 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102208,G__102209) : tailrecursion.hoplon.span.call(null,G__102208,G__102209));
})();
var G__102171 = "(";
var G__102172 = (function (){var G__102210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102211 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102210,G__102211) : tailrecursion.hoplon.span.call(null,G__102210,G__102211));
})();
var G__102173 = " (";
var G__102174 = (function (){var G__102212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102213 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102212,G__102213) : tailrecursion.hoplon.span.call(null,G__102212,G__102213));
})();
var G__102175 = (function (){var G__102214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102215 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102214,G__102215) : tailrecursion.hoplon.span.call(null,G__102214,G__102215));
})();
var G__102176 = ")))))\n(";
var G__102177 = (function (){var G__102216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102217 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102216,G__102217) : tailrecursion.hoplon.span.call(null,G__102216,G__102217));
})();
var G__102178 = (function (){var G__102218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102219 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102218,G__102219) : tailrecursion.hoplon.span.call(null,G__102218,G__102219));
})();
var G__102179 = " (";
var G__102180 = (function (){var G__102220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102221 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102220,G__102221) : tailrecursion.hoplon.span.call(null,G__102220,G__102221));
})();
var G__102181 = (function (){var G__102222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102223 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102222,G__102223) : tailrecursion.hoplon.span.call(null,G__102222,G__102223));
})();
var G__102182 = " ";
var G__102183 = (function (){var G__102224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102225 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102224,G__102225) : tailrecursion.hoplon.span.call(null,G__102224,G__102225));
})();
var G__102184 = " ";
var G__102185 = (function (){var G__102226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102227 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102226,G__102227) : tailrecursion.hoplon.span.call(null,G__102226,G__102227));
})();
var G__102186 = " ";
var G__102187 = (function (){var G__102228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102229 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102228,G__102229) : tailrecursion.hoplon.span.call(null,G__102228,G__102229));
})();
var G__102188 = "))\n\n(";
var G__102189 = (function (){var G__102230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102231 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102230,G__102231) : tailrecursion.hoplon.span.call(null,G__102230,G__102231));
})();
var G__102190 = (function (){var G__102232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102233 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102232,G__102233) : tailrecursion.hoplon.span.call(null,G__102232,G__102233));
})();
var G__102191 = ")\n";
var G__102192 = (function (){var G__102234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102235 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102234,G__102235) : tailrecursion.hoplon.span.call(null,G__102234,G__102235));
})();
var G__102193 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__102155,G__102156,G__102157,G__102158,G__102159,G__102160,G__102161,G__102162,G__102163,G__102164,G__102165,G__102166,G__102167,G__102168,G__102169,G__102170,G__102171,G__102172,G__102173,G__102174,G__102175,G__102176,G__102177,G__102178,G__102179,G__102180,G__102181,G__102182,G__102183,G__102184,G__102185,G__102186,G__102187,G__102188,G__102189,G__102190,G__102191,G__102192,G__102193) : tailrecursion.hoplon.pre.call(null,G__102155,G__102156,G__102157,G__102158,G__102159,G__102160,G__102161,G__102162,G__102163,G__102164,G__102165,G__102166,G__102167,G__102168,G__102169,G__102170,G__102171,G__102172,G__102173,G__102174,G__102175,G__102176,G__102177,G__102178,G__102179,G__102180,G__102181,G__102182,G__102183,G__102184,G__102185,G__102186,G__102187,G__102188,G__102189,G__102190,G__102191,G__102192,G__102193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102153,G__102154) : tailrecursion.hoplon.div.call(null,G__102153,G__102154));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102152) : tailrecursion.hoplon.div.call(null,G__102152));
})(),(function (){var G__102236 = cljs.core.PersistentArrayMap.EMPTY;
var G__102237 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__102238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__102239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102238,G__102239) : tailrecursion.hoplon.markdown.code_node.call(null,G__102238,G__102239));
})()," procedure implements a simple recursive plan. The reduction step is:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102236,G__102237) : tailrecursion.hoplon.markdown.para_node.call(null,G__102236,G__102237));
})(),(function (){var G__102240 = cljs.core.PersistentArrayMap.EMPTY;
var G__102241 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102242 = cljs.core.PersistentArrayMap.EMPTY;
var G__102243 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_102244 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102245 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__102246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__102247 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102246,G__102247) : tailrecursion.hoplon.markdown.code_node.call(null,G__102246,G__102247));
})()," of any list is 1 plus the count of the ",(function (){var G__102248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102249 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102248,G__102249) : tailrecursion.hoplon.markdown.code_node.call(null,G__102248,G__102249));
})()," of the list."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102245;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102244;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__102242,G__102243) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__102242,G__102243));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__102240,G__102241) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__102240,G__102241));
})(),(function (){var G__102250 = cljs.core.PersistentArrayMap.EMPTY;
var G__102251 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is applied successively until we reach the base case:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102250,G__102251) : tailrecursion.hoplon.markdown.para_node.call(null,G__102250,G__102251));
})(),(function (){var G__102252 = cljs.core.PersistentArrayMap.EMPTY;
var G__102253 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102254 = cljs.core.PersistentArrayMap.EMPTY;
var G__102255 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_102256 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102257 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__102258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__102259 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102258,G__102259) : tailrecursion.hoplon.markdown.code_node.call(null,G__102258,G__102259));
})()," of the empty list is 0."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102257;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102256;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__102254,G__102255) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__102254,G__102255));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__102252,G__102253) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__102252,G__102253));
})(),(function (){var G__102260 = cljs.core.PersistentArrayMap.EMPTY;
var G__102261 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We could also compute ",(function (){var G__102262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__102263 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102262,G__102263) : tailrecursion.hoplon.markdown.code_node.call(null,G__102262,G__102263));
})()," in an iterative style:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102260,G__102261) : tailrecursion.hoplon.markdown.para_node.call(null,G__102260,G__102261));
})(),(function (){var G__102264 = (function (){var G__102265 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102266 = (function (){var G__102267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102268 = "(";
var G__102269 = (function (){var G__102300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102301 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102300,G__102301) : tailrecursion.hoplon.span.call(null,G__102300,G__102301));
})();
var G__102270 = (function (){var G__102302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102303 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102302,G__102303) : tailrecursion.hoplon.span.call(null,G__102302,G__102303));
})();
var G__102271 = "[";
var G__102272 = (function (){var G__102304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102305 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102304,G__102305) : tailrecursion.hoplon.span.call(null,G__102304,G__102305));
})();
var G__102273 = "]\n  (";
var G__102274 = (function (){var G__102306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102307 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102306,G__102307) : tailrecursion.hoplon.span.call(null,G__102306,G__102307));
})();
var G__102275 = "[";
var G__102276 = (function (){var G__102308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102309 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102308,G__102309) : tailrecursion.hoplon.span.call(null,G__102308,G__102309));
})();
var G__102277 = " ";
var G__102278 = (function (){var G__102310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102311 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102310,G__102311) : tailrecursion.hoplon.span.call(null,G__102310,G__102311));
})();
var G__102279 = "\n         ";
var G__102280 = (function (){var G__102312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102313 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102312,G__102313) : tailrecursion.hoplon.span.call(null,G__102312,G__102313));
})();
var G__102281 = "   ";
var G__102282 = (function (){var G__102314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102315 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102314,G__102315) : tailrecursion.hoplon.span.call(null,G__102314,G__102315));
})();
var G__102283 = "]\n    (";
var G__102284 = (function (){var G__102316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102317 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102316,G__102317) : tailrecursion.hoplon.span.call(null,G__102316,G__102317));
})();
var G__102285 = "(";
var G__102286 = (function (){var G__102318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102319 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102318,G__102319) : tailrecursion.hoplon.span.call(null,G__102318,G__102319));
})();
var G__102287 = " ";
var G__102288 = (function (){var G__102320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102321 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102320,G__102321) : tailrecursion.hoplon.span.call(null,G__102320,G__102321));
})();
var G__102289 = ")\n        ";
var G__102290 = (function (){var G__102322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102323 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102322,G__102323) : tailrecursion.hoplon.span.call(null,G__102322,G__102323));
})();
var G__102291 = "\n        (";
var G__102292 = (function (){var G__102324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102325 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102324,G__102325) : tailrecursion.hoplon.span.call(null,G__102324,G__102325));
})();
var G__102293 = " (";
var G__102294 = (function (){var G__102326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102327 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102326,G__102327) : tailrecursion.hoplon.span.call(null,G__102326,G__102327));
})();
var G__102295 = (function (){var G__102328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102329 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102328,G__102329) : tailrecursion.hoplon.span.call(null,G__102328,G__102329));
})();
var G__102296 = ") (";
var G__102297 = (function (){var G__102330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102331 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102330,G__102331) : tailrecursion.hoplon.span.call(null,G__102330,G__102331));
})();
var G__102298 = (function (){var G__102332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102333 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102332,G__102333) : tailrecursion.hoplon.span.call(null,G__102332,G__102333));
})();
var G__102299 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__102267,G__102268,G__102269,G__102270,G__102271,G__102272,G__102273,G__102274,G__102275,G__102276,G__102277,G__102278,G__102279,G__102280,G__102281,G__102282,G__102283,G__102284,G__102285,G__102286,G__102287,G__102288,G__102289,G__102290,G__102291,G__102292,G__102293,G__102294,G__102295,G__102296,G__102297,G__102298,G__102299) : tailrecursion.hoplon.pre.call(null,G__102267,G__102268,G__102269,G__102270,G__102271,G__102272,G__102273,G__102274,G__102275,G__102276,G__102277,G__102278,G__102279,G__102280,G__102281,G__102282,G__102283,G__102284,G__102285,G__102286,G__102287,G__102288,G__102289,G__102290,G__102291,G__102292,G__102293,G__102294,G__102295,G__102296,G__102297,G__102298,G__102299));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102265,G__102266) : tailrecursion.hoplon.div.call(null,G__102265,G__102266));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102264) : tailrecursion.hoplon.div.call(null,G__102264));
})(),(function (){var G__102334 = cljs.core.PersistentArrayMap.EMPTY;
var G__102335 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another conventional programming technique is to ",(function (){var G__102336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__102337 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cons up"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__102336,G__102337) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__102336,G__102337));
})()," an answer list while cdring down a list, as in the procedure ",(function (){var G__102338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"append"], null);
var G__102339 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102338,G__102339) : tailrecursion.hoplon.markdown.code_node.call(null,G__102338,G__102339));
})()," (",(function (){var G__102340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__102341 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102340,G__102341) : tailrecursion.hoplon.markdown.code_node.call(null,G__102340,G__102341));
})()," in Clojure), which takes two lists as arguments and combines their elements to make a new list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102334,G__102335) : tailrecursion.hoplon.markdown.para_node.call(null,G__102334,G__102335));
})(),(function (){var G__102342 = (function (){var G__102343 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102344 = (function (){var G__102345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102346 = "(";
var G__102347 = (function (){var G__102393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102394 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102393,G__102394) : tailrecursion.hoplon.span.call(null,G__102393,G__102394));
})();
var G__102348 = (function (){var G__102395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102396 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102395,G__102396) : tailrecursion.hoplon.span.call(null,G__102395,G__102396));
})();
var G__102349 = " ";
var G__102350 = (function (){var G__102397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102398 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102397,G__102398) : tailrecursion.hoplon.span.call(null,G__102397,G__102398));
})();
var G__102351 = ")\n(";
var G__102352 = (function (){var G__102399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102400 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102399,G__102400) : tailrecursion.hoplon.span.call(null,G__102399,G__102400));
})();
var G__102353 = " ";
var G__102354 = (function (){var G__102401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102402 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102401,G__102402) : tailrecursion.hoplon.span.call(null,G__102401,G__102402));
})();
var G__102355 = " ";
var G__102356 = (function (){var G__102403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102404 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102403,G__102404) : tailrecursion.hoplon.span.call(null,G__102403,G__102404));
})();
var G__102357 = " ";
var G__102358 = (function (){var G__102405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102406 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102405,G__102406) : tailrecursion.hoplon.span.call(null,G__102405,G__102406));
})();
var G__102359 = " ";
var G__102360 = (function (){var G__102407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102408 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102407,G__102408) : tailrecursion.hoplon.span.call(null,G__102407,G__102408));
})();
var G__102361 = " ";
var G__102362 = (function (){var G__102409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102410 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102409,G__102410) : tailrecursion.hoplon.span.call(null,G__102409,G__102410));
})();
var G__102363 = " ";
var G__102364 = (function (){var G__102411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102412 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102411,G__102412) : tailrecursion.hoplon.span.call(null,G__102411,G__102412));
})();
var G__102365 = " ";
var G__102366 = (function (){var G__102413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102414 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102413,G__102414) : tailrecursion.hoplon.span.call(null,G__102413,G__102414));
})();
var G__102367 = " ";
var G__102368 = (function (){var G__102415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102416 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102415,G__102416) : tailrecursion.hoplon.span.call(null,G__102415,G__102416));
})();
var G__102369 = ")\n\n(";
var G__102370 = (function (){var G__102417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102418 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102417,G__102418) : tailrecursion.hoplon.span.call(null,G__102417,G__102418));
})();
var G__102371 = (function (){var G__102419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102420 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102419,G__102420) : tailrecursion.hoplon.span.call(null,G__102419,G__102420));
})();
var G__102372 = " ";
var G__102373 = (function (){var G__102421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102422 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102421,G__102422) : tailrecursion.hoplon.span.call(null,G__102421,G__102422));
})();
var G__102374 = ")\n(";
var G__102375 = (function (){var G__102423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102424 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102423,G__102424) : tailrecursion.hoplon.span.call(null,G__102423,G__102424));
})();
var G__102376 = " ";
var G__102377 = (function (){var G__102425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102426 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102425,G__102426) : tailrecursion.hoplon.span.call(null,G__102425,G__102426));
})();
var G__102378 = " ";
var G__102379 = (function (){var G__102427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102428 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102427,G__102428) : tailrecursion.hoplon.span.call(null,G__102427,G__102428));
})();
var G__102380 = " ";
var G__102381 = (function (){var G__102429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102430 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102429,G__102430) : tailrecursion.hoplon.span.call(null,G__102429,G__102430));
})();
var G__102382 = " ";
var G__102383 = (function (){var G__102431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102432 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102431,G__102432) : tailrecursion.hoplon.span.call(null,G__102431,G__102432));
})();
var G__102384 = " ";
var G__102385 = (function (){var G__102433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102434 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102433,G__102434) : tailrecursion.hoplon.span.call(null,G__102433,G__102434));
})();
var G__102386 = " ";
var G__102387 = (function (){var G__102435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102436 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102435,G__102436) : tailrecursion.hoplon.span.call(null,G__102435,G__102436));
})();
var G__102388 = " ";
var G__102389 = (function (){var G__102437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102438 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102437,G__102438) : tailrecursion.hoplon.span.call(null,G__102437,G__102438));
})();
var G__102390 = " ";
var G__102391 = (function (){var G__102439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102440 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102439,G__102440) : tailrecursion.hoplon.span.call(null,G__102439,G__102440));
})();
var G__102392 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__102345,G__102346,G__102347,G__102348,G__102349,G__102350,G__102351,G__102352,G__102353,G__102354,G__102355,G__102356,G__102357,G__102358,G__102359,G__102360,G__102361,G__102362,G__102363,G__102364,G__102365,G__102366,G__102367,G__102368,G__102369,G__102370,G__102371,G__102372,G__102373,G__102374,G__102375,G__102376,G__102377,G__102378,G__102379,G__102380,G__102381,G__102382,G__102383,G__102384,G__102385,G__102386,G__102387,G__102388,G__102389,G__102390,G__102391,G__102392) : tailrecursion.hoplon.pre.call(null,G__102345,G__102346,G__102347,G__102348,G__102349,G__102350,G__102351,G__102352,G__102353,G__102354,G__102355,G__102356,G__102357,G__102358,G__102359,G__102360,G__102361,G__102362,G__102363,G__102364,G__102365,G__102366,G__102367,G__102368,G__102369,G__102370,G__102371,G__102372,G__102373,G__102374,G__102375,G__102376,G__102377,G__102378,G__102379,G__102380,G__102381,G__102382,G__102383,G__102384,G__102385,G__102386,G__102387,G__102388,G__102389,G__102390,G__102391,G__102392));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102343,G__102344) : tailrecursion.hoplon.div.call(null,G__102343,G__102344));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102342) : tailrecursion.hoplon.div.call(null,G__102342));
})(),(function (){var G__102441 = cljs.core.PersistentArrayMap.EMPTY;
var G__102442 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__102444 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102443,G__102444) : tailrecursion.hoplon.markdown.code_node.call(null,G__102443,G__102444));
})()," is also implemented using a recursive plan. To ",(function (){var G__102445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__102446 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102445,G__102446) : tailrecursion.hoplon.markdown.code_node.call(null,G__102445,G__102446));
})()," lists ",(function (){var G__102447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__102448 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102447,G__102448) : tailrecursion.hoplon.markdown.code_node.call(null,G__102447,G__102448));
})()," and ",(function (){var G__102449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list2"], null);
var G__102450 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102449,G__102450) : tailrecursion.hoplon.markdown.code_node.call(null,G__102449,G__102450));
})(),", do the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102441,G__102442) : tailrecursion.hoplon.markdown.para_node.call(null,G__102441,G__102442));
})(),(function (){var G__102451 = cljs.core.PersistentArrayMap.EMPTY;
var G__102452 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102453 = cljs.core.PersistentArrayMap.EMPTY;
var G__102454 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102455 = cljs.core.PersistentArrayMap.EMPTY;
var G__102456 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If ",(function (){var G__102457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__102458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102457,G__102458) : tailrecursion.hoplon.markdown.code_node.call(null,G__102457,G__102458));
})()," is the empty list, then the result is just ",(function (){var G__102459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list2"], null);
var G__102460 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102459,G__102460) : tailrecursion.hoplon.markdown.code_node.call(null,G__102459,G__102460));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102455,G__102456) : tailrecursion.hoplon.markdown.para_node.call(null,G__102455,G__102456));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__102453,G__102454) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__102453,G__102454));
})(),(function (){var G__102461 = cljs.core.PersistentArrayMap.EMPTY;
var G__102462 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_102463 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102464 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102465 = cljs.core.PersistentArrayMap.EMPTY;
var G__102466 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Otherwise, ",(function (){var G__102467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__102468 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102467,G__102468) : tailrecursion.hoplon.markdown.code_node.call(null,G__102467,G__102468));
})()," the ",(function (){var G__102469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102469,G__102470) : tailrecursion.hoplon.markdown.code_node.call(null,G__102469,G__102470));
})()," of ",(function (){var G__102471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__102472 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102471,G__102472) : tailrecursion.hoplon.markdown.code_node.call(null,G__102471,G__102472));
})()," and ",(function (){var G__102473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list2"], null);
var G__102474 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102473,G__102474) : tailrecursion.hoplon.markdown.code_node.call(null,G__102473,G__102474));
})(),", and ",(function (){var G__102475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__102476 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102475,G__102476) : tailrecursion.hoplon.markdown.code_node.call(null,G__102475,G__102476));
})()," the ",(function (){var G__102477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102477,G__102478) : tailrecursion.hoplon.markdown.code_node.call(null,G__102477,G__102478));
})()," of ",(function (){var G__102479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__102480 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102479,G__102480) : tailrecursion.hoplon.markdown.code_node.call(null,G__102479,G__102480));
})()," onto the result:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102465,G__102466) : tailrecursion.hoplon.markdown.para_node.call(null,G__102465,G__102466));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102464;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102463;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__102461,G__102462) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__102461,G__102462));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__102451,G__102452) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__102451,G__102452));
})(),(function (){var G__102481 = (function (){var G__102482 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102483 = (function (){var G__102484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102485 = "(";
var G__102486 = (function (){var G__102513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102514 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102513,G__102514) : tailrecursion.hoplon.span.call(null,G__102513,G__102514));
})();
var G__102487 = (function (){var G__102515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102516 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102515,G__102516) : tailrecursion.hoplon.span.call(null,G__102515,G__102516));
})();
var G__102488 = "[";
var G__102489 = (function (){var G__102517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102518 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102517,G__102518) : tailrecursion.hoplon.span.call(null,G__102517,G__102518));
})();
var G__102490 = " ";
var G__102491 = (function (){var G__102519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102520 = "list2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102519,G__102520) : tailrecursion.hoplon.span.call(null,G__102519,G__102520));
})();
var G__102492 = "]\n  (";
var G__102493 = (function (){var G__102521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102522 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102521,G__102522) : tailrecursion.hoplon.span.call(null,G__102521,G__102522));
})();
var G__102494 = "(";
var G__102495 = (function (){var G__102523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102524 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102523,G__102524) : tailrecursion.hoplon.span.call(null,G__102523,G__102524));
})();
var G__102496 = " ";
var G__102497 = (function (){var G__102525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102526 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102525,G__102526) : tailrecursion.hoplon.span.call(null,G__102525,G__102526));
})();
var G__102498 = ")\n      ";
var G__102499 = (function (){var G__102527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102528 = "list2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102527,G__102528) : tailrecursion.hoplon.span.call(null,G__102527,G__102528));
})();
var G__102500 = "\n      (";
var G__102501 = (function (){var G__102529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102530 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102529,G__102530) : tailrecursion.hoplon.span.call(null,G__102529,G__102530));
})();
var G__102502 = "(";
var G__102503 = (function (){var G__102531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102532 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102531,G__102532) : tailrecursion.hoplon.span.call(null,G__102531,G__102532));
})();
var G__102504 = "(";
var G__102505 = (function (){var G__102533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102534 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102533,G__102534) : tailrecursion.hoplon.span.call(null,G__102533,G__102534));
})();
var G__102506 = (function (){var G__102535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102536 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102535,G__102536) : tailrecursion.hoplon.span.call(null,G__102535,G__102536));
})();
var G__102507 = ") ";
var G__102508 = (function (){var G__102537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102538 = "list2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102537,G__102538) : tailrecursion.hoplon.span.call(null,G__102537,G__102538));
})();
var G__102509 = ") (";
var G__102510 = (function (){var G__102539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102540 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102539,G__102540) : tailrecursion.hoplon.span.call(null,G__102539,G__102540));
})();
var G__102511 = (function (){var G__102541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102542 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102541,G__102542) : tailrecursion.hoplon.span.call(null,G__102541,G__102542));
})();
var G__102512 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__102484,G__102485,G__102486,G__102487,G__102488,G__102489,G__102490,G__102491,G__102492,G__102493,G__102494,G__102495,G__102496,G__102497,G__102498,G__102499,G__102500,G__102501,G__102502,G__102503,G__102504,G__102505,G__102506,G__102507,G__102508,G__102509,G__102510,G__102511,G__102512) : tailrecursion.hoplon.pre.call(null,G__102484,G__102485,G__102486,G__102487,G__102488,G__102489,G__102490,G__102491,G__102492,G__102493,G__102494,G__102495,G__102496,G__102497,G__102498,G__102499,G__102500,G__102501,G__102502,G__102503,G__102504,G__102505,G__102506,G__102507,G__102508,G__102509,G__102510,G__102511,G__102512));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102482,G__102483) : tailrecursion.hoplon.div.call(null,G__102482,G__102483));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102481) : tailrecursion.hoplon.div.call(null,G__102481));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101984;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101983;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101982;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101981;
}})()], 0));
var G__101384 = "";
var G__101385 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102543 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102544 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102545 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102546 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102547 = cljs.core.PersistentArrayMap.EMPTY;
var G__102548 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__102549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"last-pair"], null);
var G__102550 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102549,G__102550) : tailrecursion.hoplon.markdown.code_node.call(null,G__102549,G__102550));
})()," that returns the list that contains only the last element of a given (nonempty) list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102547,G__102548) : tailrecursion.hoplon.markdown.para_node.call(null,G__102547,G__102548));
})(),(function (){var G__102551 = (function (){var G__102552 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102553 = (function (){var G__102554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102555 = "(";
var G__102556 = (function (){var G__102569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102570 = "last-pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102569,G__102570) : tailrecursion.hoplon.span.call(null,G__102569,G__102570));
})();
var G__102557 = " (";
var G__102558 = (function (){var G__102571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102572 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102571,G__102572) : tailrecursion.hoplon.span.call(null,G__102571,G__102572));
})();
var G__102559 = (function (){var G__102573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102574 = "23";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102573,G__102574) : tailrecursion.hoplon.span.call(null,G__102573,G__102574));
})();
var G__102560 = " ";
var G__102561 = (function (){var G__102575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102576 = "72";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102575,G__102576) : tailrecursion.hoplon.span.call(null,G__102575,G__102576));
})();
var G__102562 = " ";
var G__102563 = (function (){var G__102577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102578 = "149";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102577,G__102578) : tailrecursion.hoplon.span.call(null,G__102577,G__102578));
})();
var G__102564 = " ";
var G__102565 = (function (){var G__102579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102580 = "34";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102579,G__102580) : tailrecursion.hoplon.span.call(null,G__102579,G__102580));
})();
var G__102566 = "))\n";
var G__102567 = (function (){var G__102581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102582 = "34";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102581,G__102582) : tailrecursion.hoplon.span.call(null,G__102581,G__102582));
})();
var G__102568 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__102554,G__102555,G__102556,G__102557,G__102558,G__102559,G__102560,G__102561,G__102562,G__102563,G__102564,G__102565,G__102566,G__102567,G__102568) : tailrecursion.hoplon.pre.call(null,G__102554,G__102555,G__102556,G__102557,G__102558,G__102559,G__102560,G__102561,G__102562,G__102563,G__102564,G__102565,G__102566,G__102567,G__102568));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102552,G__102553) : tailrecursion.hoplon.div.call(null,G__102552,G__102553));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102551) : tailrecursion.hoplon.div.call(null,G__102551));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102546;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102545;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102544;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102543;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102583 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102584 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102585 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102586 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102587 = (function (){var G__102588 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102589 = (function (){var G__102590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102591 = "(";
var G__102592 = (function (){var G__102617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102618 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102617,G__102618) : tailrecursion.hoplon.span.call(null,G__102617,G__102618));
})();
var G__102593 = (function (){var G__102619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102620 = "last-pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102619,G__102620) : tailrecursion.hoplon.span.call(null,G__102619,G__102620));
})();
var G__102594 = " [";
var G__102595 = (function (){var G__102621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102622 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102621,G__102622) : tailrecursion.hoplon.span.call(null,G__102621,G__102622));
})();
var G__102596 = "]\n  (";
var G__102597 = (function (){var G__102623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102624 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102623,G__102624) : tailrecursion.hoplon.span.call(null,G__102623,G__102624));
})();
var G__102598 = "[";
var G__102599 = (function (){var G__102625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102626 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102625,G__102626) : tailrecursion.hoplon.span.call(null,G__102625,G__102626));
})();
var G__102600 = " ";
var G__102601 = (function (){var G__102627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102628 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102627,G__102628) : tailrecursion.hoplon.span.call(null,G__102627,G__102628));
})();
var G__102602 = "]\n    (";
var G__102603 = (function (){var G__102629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102630 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102629,G__102630) : tailrecursion.hoplon.span.call(null,G__102629,G__102630));
})();
var G__102604 = "(";
var G__102605 = (function (){var G__102631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102632 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102631,G__102632) : tailrecursion.hoplon.span.call(null,G__102631,G__102632));
})();
var G__102606 = " (";
var G__102607 = (function (){var G__102633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102634 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102633,G__102634) : tailrecursion.hoplon.span.call(null,G__102633,G__102634));
})();
var G__102608 = (function (){var G__102635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102636 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102635,G__102636) : tailrecursion.hoplon.span.call(null,G__102635,G__102636));
})();
var G__102609 = "))\n        ";
var G__102610 = (function (){var G__102637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102638 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102637,G__102638) : tailrecursion.hoplon.span.call(null,G__102637,G__102638));
})();
var G__102611 = "\n        (";
var G__102612 = (function (){var G__102639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102640 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102639,G__102640) : tailrecursion.hoplon.span.call(null,G__102639,G__102640));
})();
var G__102613 = " (";
var G__102614 = (function (){var G__102641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102642 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102641,G__102642) : tailrecursion.hoplon.span.call(null,G__102641,G__102642));
})();
var G__102615 = (function (){var G__102643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102644 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102643,G__102644) : tailrecursion.hoplon.span.call(null,G__102643,G__102644));
})();
var G__102616 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__102590,G__102591,G__102592,G__102593,G__102594,G__102595,G__102596,G__102597,G__102598,G__102599,G__102600,G__102601,G__102602,G__102603,G__102604,G__102605,G__102606,G__102607,G__102608,G__102609,G__102610,G__102611,G__102612,G__102613,G__102614,G__102615,G__102616) : tailrecursion.hoplon.pre.call(null,G__102590,G__102591,G__102592,G__102593,G__102594,G__102595,G__102596,G__102597,G__102598,G__102599,G__102600,G__102601,G__102602,G__102603,G__102604,G__102605,G__102606,G__102607,G__102608,G__102609,G__102610,G__102611,G__102612,G__102613,G__102614,G__102615,G__102616));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102588,G__102589) : tailrecursion.hoplon.div.call(null,G__102588,G__102589));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102587) : tailrecursion.hoplon.div.call(null,G__102587));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102586;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102585;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102584;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102583;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102645 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102646 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102647 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102648 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102649 = cljs.core.PersistentArrayMap.EMPTY;
var G__102650 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__102651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__102652 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102651,G__102652) : tailrecursion.hoplon.markdown.code_node.call(null,G__102651,G__102652));
})()," that takes a list as arguments and returns a list of the same elements in reverse order:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102649,G__102650) : tailrecursion.hoplon.markdown.para_node.call(null,G__102649,G__102650));
})(),(function (){var G__102653 = (function (){var G__102654 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102655 = (function (){var G__102656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102657 = "(";
var G__102658 = (function (){var G__102681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102682 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102681,G__102682) : tailrecursion.hoplon.span.call(null,G__102681,G__102682));
})();
var G__102659 = "(";
var G__102660 = (function (){var G__102683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102684 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102683,G__102684) : tailrecursion.hoplon.span.call(null,G__102683,G__102684));
})();
var G__102661 = (function (){var G__102685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102686 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102685,G__102686) : tailrecursion.hoplon.span.call(null,G__102685,G__102686));
})();
var G__102662 = " ";
var G__102663 = (function (){var G__102687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102688 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102687,G__102688) : tailrecursion.hoplon.span.call(null,G__102687,G__102688));
})();
var G__102664 = " ";
var G__102665 = (function (){var G__102689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102690 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102689,G__102690) : tailrecursion.hoplon.span.call(null,G__102689,G__102690));
})();
var G__102666 = " ";
var G__102667 = (function (){var G__102691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102692 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102691,G__102692) : tailrecursion.hoplon.span.call(null,G__102691,G__102692));
})();
var G__102668 = " ";
var G__102669 = (function (){var G__102693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102694 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102693,G__102694) : tailrecursion.hoplon.span.call(null,G__102693,G__102694));
})();
var G__102670 = "))\n(";
var G__102671 = (function (){var G__102695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102696 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102695,G__102696) : tailrecursion.hoplon.span.call(null,G__102695,G__102696));
})();
var G__102672 = " ";
var G__102673 = (function (){var G__102697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102698 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102697,G__102698) : tailrecursion.hoplon.span.call(null,G__102697,G__102698));
})();
var G__102674 = " ";
var G__102675 = (function (){var G__102699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102700 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102699,G__102700) : tailrecursion.hoplon.span.call(null,G__102699,G__102700));
})();
var G__102676 = " ";
var G__102677 = (function (){var G__102701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102702 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102701,G__102702) : tailrecursion.hoplon.span.call(null,G__102701,G__102702));
})();
var G__102678 = " ";
var G__102679 = (function (){var G__102703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102704 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102703,G__102704) : tailrecursion.hoplon.span.call(null,G__102703,G__102704));
})();
var G__102680 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$25 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$25(G__102656,G__102657,G__102658,G__102659,G__102660,G__102661,G__102662,G__102663,G__102664,G__102665,G__102666,G__102667,G__102668,G__102669,G__102670,G__102671,G__102672,G__102673,G__102674,G__102675,G__102676,G__102677,G__102678,G__102679,G__102680) : tailrecursion.hoplon.pre.call(null,G__102656,G__102657,G__102658,G__102659,G__102660,G__102661,G__102662,G__102663,G__102664,G__102665,G__102666,G__102667,G__102668,G__102669,G__102670,G__102671,G__102672,G__102673,G__102674,G__102675,G__102676,G__102677,G__102678,G__102679,G__102680));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102654,G__102655) : tailrecursion.hoplon.div.call(null,G__102654,G__102655));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102653) : tailrecursion.hoplon.div.call(null,G__102653));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102648;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102647;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102646;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102645;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102705 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102706 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102707 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102708 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102709 = (function (){var G__102710 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102711 = (function (){var G__102712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102713 = "(";
var G__102714 = (function (){var G__102748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102749 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102748,G__102749) : tailrecursion.hoplon.span.call(null,G__102748,G__102749));
})();
var G__102715 = (function (){var G__102750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102751 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102750,G__102751) : tailrecursion.hoplon.span.call(null,G__102750,G__102751));
})();
var G__102716 = "[";
var G__102717 = (function (){var G__102752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102753 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102752,G__102753) : tailrecursion.hoplon.span.call(null,G__102752,G__102753));
})();
var G__102718 = "]\n  (";
var G__102719 = (function (){var G__102754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102755 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102754,G__102755) : tailrecursion.hoplon.span.call(null,G__102754,G__102755));
})();
var G__102720 = "[";
var G__102721 = (function (){var G__102756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102757 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102756,G__102757) : tailrecursion.hoplon.span.call(null,G__102756,G__102757));
})();
var G__102722 = " ";
var G__102723 = (function (){var G__102758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102759 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102758,G__102759) : tailrecursion.hoplon.span.call(null,G__102758,G__102759));
})();
var G__102724 = "\n         ";
var G__102725 = (function (){var G__102760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102761 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102760,G__102761) : tailrecursion.hoplon.span.call(null,G__102760,G__102761));
})();
var G__102726 = "   ";
var G__102727 = (function (){var G__102762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102763 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102762,G__102763) : tailrecursion.hoplon.span.call(null,G__102762,G__102763));
})();
var G__102728 = "]\n    (";
var G__102729 = (function (){var G__102764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102765 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102764,G__102765) : tailrecursion.hoplon.span.call(null,G__102764,G__102765));
})();
var G__102730 = "(";
var G__102731 = (function (){var G__102766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102767 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102766,G__102767) : tailrecursion.hoplon.span.call(null,G__102766,G__102767));
})();
var G__102732 = " ";
var G__102733 = (function (){var G__102768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102769 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102768,G__102769) : tailrecursion.hoplon.span.call(null,G__102768,G__102769));
})();
var G__102734 = ")\n        ";
var G__102735 = (function (){var G__102770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102771 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102770,G__102771) : tailrecursion.hoplon.span.call(null,G__102770,G__102771));
})();
var G__102736 = "\n        (";
var G__102737 = (function (){var G__102772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102773 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102772,G__102773) : tailrecursion.hoplon.span.call(null,G__102772,G__102773));
})();
var G__102738 = " (";
var G__102739 = (function (){var G__102774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102775 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102774,G__102775) : tailrecursion.hoplon.span.call(null,G__102774,G__102775));
})();
var G__102740 = (function (){var G__102776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102777 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102776,G__102777) : tailrecursion.hoplon.span.call(null,G__102776,G__102777));
})();
var G__102741 = ") (";
var G__102742 = (function (){var G__102778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102779 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102778,G__102779) : tailrecursion.hoplon.span.call(null,G__102778,G__102779));
})();
var G__102743 = (function (){var G__102780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102781 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102780,G__102781) : tailrecursion.hoplon.span.call(null,G__102780,G__102781));
})();
var G__102744 = " (";
var G__102745 = (function (){var G__102782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102783 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102782,G__102783) : tailrecursion.hoplon.span.call(null,G__102782,G__102783));
})();
var G__102746 = (function (){var G__102784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102785 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102784,G__102785) : tailrecursion.hoplon.span.call(null,G__102784,G__102785));
})();
var G__102747 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__102712,G__102713,G__102714,G__102715,G__102716,G__102717,G__102718,G__102719,G__102720,G__102721,G__102722,G__102723,G__102724,G__102725,G__102726,G__102727,G__102728,G__102729,G__102730,G__102731,G__102732,G__102733,G__102734,G__102735,G__102736,G__102737,G__102738,G__102739,G__102740,G__102741,G__102742,G__102743,G__102744,G__102745,G__102746,G__102747) : tailrecursion.hoplon.pre.call(null,G__102712,G__102713,G__102714,G__102715,G__102716,G__102717,G__102718,G__102719,G__102720,G__102721,G__102722,G__102723,G__102724,G__102725,G__102726,G__102727,G__102728,G__102729,G__102730,G__102731,G__102732,G__102733,G__102734,G__102735,G__102736,G__102737,G__102738,G__102739,G__102740,G__102741,G__102742,G__102743,G__102744,G__102745,G__102746,G__102747));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102710,G__102711) : tailrecursion.hoplon.div.call(null,G__102710,G__102711));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102709) : tailrecursion.hoplon.div.call(null,G__102709));
})(),(function (){var G__102786 = cljs.core.PersistentArrayMap.EMPTY;
var G__102787 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure already has a procedure ",(function (){var G__102788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__102789 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102788,G__102789) : tailrecursion.hoplon.markdown.code_node.call(null,G__102788,G__102789));
})()," that does exactly that. Clojure has many powerful tools for manipulating sequences. You can check them out at ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"http://clojure.org/sequences",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102786,G__102787) : tailrecursion.hoplon.markdown.para_node.call(null,G__102786,G__102787));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102708;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102707;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102706;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102705;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102790 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102791 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102792 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102793 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102794 = cljs.core.PersistentArrayMap.EMPTY;
var G__102795 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the change-counting program of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),". It would be nice to be able to easily change the currency used by the program, so that we could compute the number of ways to change a british pound, for example. As the program is written, the knowledge of the currency is distributed partly into the procedure ",(function (){var G__102796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__102797 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102796,G__102797) : tailrecursion.hoplon.markdown.code_node.call(null,G__102796,G__102797));
})()," and partly into the procedure ",(function (){var G__102798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__102799 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102798,G__102799) : tailrecursion.hoplon.markdown.code_node.call(null,G__102798,G__102799));
})()," (which knows that there are five kids of U.S. coins). It would be nicer to be able to supply a list of coins to be used for making change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102794,G__102795) : tailrecursion.hoplon.markdown.para_node.call(null,G__102794,G__102795));
})(),(function (){var G__102800 = cljs.core.PersistentArrayMap.EMPTY;
var G__102801 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We want to rewrite the procedure ",(function (){var G__102802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__102803 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102802,G__102803) : tailrecursion.hoplon.markdown.code_node.call(null,G__102802,G__102803));
})()," so that its second argument is a list of the values of the coins to use rather than an integer specifying which coins to use. We could then have lists that defined each kind of currency:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102800,G__102801) : tailrecursion.hoplon.markdown.para_node.call(null,G__102800,G__102801));
})(),(function (){var G__102804 = (function (){var G__102805 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102806 = (function (){var G__102807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102808 = "(";
var G__102809 = (function (){var G__102843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102844 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102843,G__102844) : tailrecursion.hoplon.span.call(null,G__102843,G__102844));
})();
var G__102810 = (function (){var G__102845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102846 = "us-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102845,G__102846) : tailrecursion.hoplon.span.call(null,G__102845,G__102846));
})();
var G__102811 = " (";
var G__102812 = (function (){var G__102847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102848 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102847,G__102848) : tailrecursion.hoplon.span.call(null,G__102847,G__102848));
})();
var G__102813 = (function (){var G__102849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102850 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102849,G__102850) : tailrecursion.hoplon.span.call(null,G__102849,G__102850));
})();
var G__102814 = " ";
var G__102815 = (function (){var G__102851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102852 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102851,G__102852) : tailrecursion.hoplon.span.call(null,G__102851,G__102852));
})();
var G__102816 = " ";
var G__102817 = (function (){var G__102853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102854 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102853,G__102854) : tailrecursion.hoplon.span.call(null,G__102853,G__102854));
})();
var G__102818 = " ";
var G__102819 = (function (){var G__102855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102856 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102855,G__102856) : tailrecursion.hoplon.span.call(null,G__102855,G__102856));
})();
var G__102820 = " ";
var G__102821 = (function (){var G__102857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102858 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102857,G__102858) : tailrecursion.hoplon.span.call(null,G__102857,G__102858));
})();
var G__102822 = "))\n(";
var G__102823 = (function (){var G__102859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102860 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102859,G__102860) : tailrecursion.hoplon.span.call(null,G__102859,G__102860));
})();
var G__102824 = (function (){var G__102861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102862 = "uk-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102861,G__102862) : tailrecursion.hoplon.span.call(null,G__102861,G__102862));
})();
var G__102825 = " (";
var G__102826 = (function (){var G__102863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102864 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102863,G__102864) : tailrecursion.hoplon.span.call(null,G__102863,G__102864));
})();
var G__102827 = (function (){var G__102865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102866 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102865,G__102866) : tailrecursion.hoplon.span.call(null,G__102865,G__102866));
})();
var G__102828 = " ";
var G__102829 = (function (){var G__102867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102868 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102867,G__102868) : tailrecursion.hoplon.span.call(null,G__102867,G__102868));
})();
var G__102830 = " ";
var G__102831 = (function (){var G__102869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102870 = "20";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102869,G__102870) : tailrecursion.hoplon.span.call(null,G__102869,G__102870));
})();
var G__102832 = " ";
var G__102833 = (function (){var G__102871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102872 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102871,G__102872) : tailrecursion.hoplon.span.call(null,G__102871,G__102872));
})();
var G__102834 = " ";
var G__102835 = (function (){var G__102873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102874 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102873,G__102874) : tailrecursion.hoplon.span.call(null,G__102873,G__102874));
})();
var G__102836 = " ";
var G__102837 = (function (){var G__102875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102876 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102875,G__102876) : tailrecursion.hoplon.span.call(null,G__102875,G__102876));
})();
var G__102838 = " ";
var G__102839 = (function (){var G__102877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102878 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102877,G__102878) : tailrecursion.hoplon.span.call(null,G__102877,G__102878));
})();
var G__102840 = " ";
var G__102841 = (function (){var G__102879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102880 = "0.5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102879,G__102880) : tailrecursion.hoplon.span.call(null,G__102879,G__102880));
})();
var G__102842 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__102807,G__102808,G__102809,G__102810,G__102811,G__102812,G__102813,G__102814,G__102815,G__102816,G__102817,G__102818,G__102819,G__102820,G__102821,G__102822,G__102823,G__102824,G__102825,G__102826,G__102827,G__102828,G__102829,G__102830,G__102831,G__102832,G__102833,G__102834,G__102835,G__102836,G__102837,G__102838,G__102839,G__102840,G__102841,G__102842) : tailrecursion.hoplon.pre.call(null,G__102807,G__102808,G__102809,G__102810,G__102811,G__102812,G__102813,G__102814,G__102815,G__102816,G__102817,G__102818,G__102819,G__102820,G__102821,G__102822,G__102823,G__102824,G__102825,G__102826,G__102827,G__102828,G__102829,G__102830,G__102831,G__102832,G__102833,G__102834,G__102835,G__102836,G__102837,G__102838,G__102839,G__102840,G__102841,G__102842));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102805,G__102806) : tailrecursion.hoplon.div.call(null,G__102805,G__102806));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102804) : tailrecursion.hoplon.div.call(null,G__102804));
})(),(function (){var G__102881 = cljs.core.PersistentArrayMap.EMPTY;
var G__102882 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We could then call ",(function (){var G__102883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__102884 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102883,G__102884) : tailrecursion.hoplon.markdown.code_node.call(null,G__102883,G__102884));
})()," as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102881,G__102882) : tailrecursion.hoplon.markdown.para_node.call(null,G__102881,G__102882));
})(),(function (){var G__102885 = (function (){var G__102886 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102887 = (function (){var G__102888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102889 = "(";
var G__102890 = (function (){var G__102898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102899 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102898,G__102899) : tailrecursion.hoplon.span.call(null,G__102898,G__102899));
})();
var G__102891 = " ";
var G__102892 = (function (){var G__102900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102901 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102900,G__102901) : tailrecursion.hoplon.span.call(null,G__102900,G__102901));
})();
var G__102893 = " ";
var G__102894 = (function (){var G__102902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102903 = "us-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102902,G__102903) : tailrecursion.hoplon.span.call(null,G__102902,G__102903));
})();
var G__102895 = ")\n";
var G__102896 = (function (){var G__102904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102905 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102904,G__102905) : tailrecursion.hoplon.span.call(null,G__102904,G__102905));
})();
var G__102897 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__102888,G__102889,G__102890,G__102891,G__102892,G__102893,G__102894,G__102895,G__102896,G__102897) : tailrecursion.hoplon.pre.call(null,G__102888,G__102889,G__102890,G__102891,G__102892,G__102893,G__102894,G__102895,G__102896,G__102897));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102886,G__102887) : tailrecursion.hoplon.div.call(null,G__102886,G__102887));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102885) : tailrecursion.hoplon.div.call(null,G__102885));
})(),(function (){var G__102906 = cljs.core.PersistentArrayMap.EMPTY;
var G__102907 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this will require changing the program ",(function (){var G__102908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__102909 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102908,G__102909) : tailrecursion.hoplon.markdown.code_node.call(null,G__102908,G__102909));
})()," somewhat. It will still have the same form, but it will access its second argument differently, as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102906,G__102907) : tailrecursion.hoplon.markdown.para_node.call(null,G__102906,G__102907));
})(),(function (){var G__102910 = (function (){var G__102911 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102912 = (function (){var G__102913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102914 = "(";
var G__102915 = (function (){var G__102967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102968 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102967,G__102968) : tailrecursion.hoplon.span.call(null,G__102967,G__102968));
})();
var G__102916 = (function (){var G__102969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102970 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102969,G__102970) : tailrecursion.hoplon.span.call(null,G__102969,G__102970));
})();
var G__102917 = " [";
var G__102918 = (function (){var G__102971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102972 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102971,G__102972) : tailrecursion.hoplon.span.call(null,G__102971,G__102972));
})();
var G__102919 = " ";
var G__102920 = (function (){var G__102973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102974 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102973,G__102974) : tailrecursion.hoplon.span.call(null,G__102973,G__102974));
})();
var G__102921 = "]\n  (";
var G__102922 = (function (){var G__102975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102976 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102975,G__102976) : tailrecursion.hoplon.span.call(null,G__102975,G__102976));
})();
var G__102923 = "(";
var G__102924 = (function (){var G__102977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102978 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102977,G__102978) : tailrecursion.hoplon.span.call(null,G__102977,G__102978));
})();
var G__102925 = (function (){var G__102979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102980 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102979,G__102980) : tailrecursion.hoplon.span.call(null,G__102979,G__102980));
})();
var G__102926 = " ";
var G__102927 = (function (){var G__102981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102982 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102981,G__102982) : tailrecursion.hoplon.span.call(null,G__102981,G__102982));
})();
var G__102928 = ") ";
var G__102929 = (function (){var G__102983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102984 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102983,G__102984) : tailrecursion.hoplon.span.call(null,G__102983,G__102984));
})();
var G__102930 = "\n        (";
var G__102931 = (function (){var G__102985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102986 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102985,G__102986) : tailrecursion.hoplon.span.call(null,G__102985,G__102986));
})();
var G__102932 = "(";
var G__102933 = (function (){var G__102987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102988 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102987,G__102988) : tailrecursion.hoplon.span.call(null,G__102987,G__102988));
})();
var G__102934 = (function (){var G__102989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102990 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102989,G__102990) : tailrecursion.hoplon.span.call(null,G__102989,G__102990));
})();
var G__102935 = " ";
var G__102936 = (function (){var G__102991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102992 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102991,G__102992) : tailrecursion.hoplon.span.call(null,G__102991,G__102992));
})();
var G__102937 = ") (";
var G__102938 = (function (){var G__102993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102994 = "no-more?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102993,G__102994) : tailrecursion.hoplon.span.call(null,G__102993,G__102994));
})();
var G__102939 = " ";
var G__102940 = (function (){var G__102995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102996 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102995,G__102996) : tailrecursion.hoplon.span.call(null,G__102995,G__102996));
})();
var G__102941 = ")) ";
var G__102942 = (function (){var G__102997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102998 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102997,G__102998) : tailrecursion.hoplon.span.call(null,G__102997,G__102998));
})();
var G__102943 = "\n        ";
var G__102944 = (function (){var G__102999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103000 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102999,G__103000) : tailrecursion.hoplon.span.call(null,G__102999,G__103000));
})();
var G__102945 = " (";
var G__102946 = (function (){var G__103001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103002 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103001,G__103002) : tailrecursion.hoplon.span.call(null,G__103001,G__103002));
})();
var G__102947 = "(";
var G__102948 = (function (){var G__103003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103004 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103003,G__103004) : tailrecursion.hoplon.span.call(null,G__103003,G__103004));
})();
var G__102949 = " ";
var G__102950 = (function (){var G__103005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103006 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103005,G__103006) : tailrecursion.hoplon.span.call(null,G__103005,G__103006));
})();
var G__102951 = "\n                     (";
var G__102952 = (function (){var G__103007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103008 = "except-first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103007,G__103008) : tailrecursion.hoplon.span.call(null,G__103007,G__103008));
})();
var G__102953 = " ";
var G__102954 = (function (){var G__103009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103010 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103009,G__103010) : tailrecursion.hoplon.span.call(null,G__103009,G__103010));
})();
var G__102955 = "))\n                 (";
var G__102956 = (function (){var G__103011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103012 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103011,G__103012) : tailrecursion.hoplon.span.call(null,G__103011,G__103012));
})();
var G__102957 = " (";
var G__102958 = (function (){var G__103013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103014 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103013,G__103014) : tailrecursion.hoplon.span.call(null,G__103013,G__103014));
})();
var G__102959 = (function (){var G__103015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103016 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103015,G__103016) : tailrecursion.hoplon.span.call(null,G__103015,G__103016));
})();
var G__102960 = " \n                        (";
var G__102961 = (function (){var G__103017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103018 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103017,G__103018) : tailrecursion.hoplon.span.call(null,G__103017,G__103018));
})();
var G__102962 = " ";
var G__102963 = (function (){var G__103019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103020 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103019,G__103020) : tailrecursion.hoplon.span.call(null,G__103019,G__103020));
})();
var G__102964 = "))\n                     ";
var G__102965 = (function (){var G__103021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103022 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103021,G__103022) : tailrecursion.hoplon.span.call(null,G__103021,G__103022));
})();
var G__102966 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__102913,G__102914,G__102915,G__102916,G__102917,G__102918,G__102919,G__102920,G__102921,G__102922,G__102923,G__102924,G__102925,G__102926,G__102927,G__102928,G__102929,G__102930,G__102931,G__102932,G__102933,G__102934,G__102935,G__102936,G__102937,G__102938,G__102939,G__102940,G__102941,G__102942,G__102943,G__102944,G__102945,G__102946,G__102947,G__102948,G__102949,G__102950,G__102951,G__102952,G__102953,G__102954,G__102955,G__102956,G__102957,G__102958,G__102959,G__102960,G__102961,G__102962,G__102963,G__102964,G__102965,G__102966) : tailrecursion.hoplon.pre.call(null,G__102913,G__102914,G__102915,G__102916,G__102917,G__102918,G__102919,G__102920,G__102921,G__102922,G__102923,G__102924,G__102925,G__102926,G__102927,G__102928,G__102929,G__102930,G__102931,G__102932,G__102933,G__102934,G__102935,G__102936,G__102937,G__102938,G__102939,G__102940,G__102941,G__102942,G__102943,G__102944,G__102945,G__102946,G__102947,G__102948,G__102949,G__102950,G__102951,G__102952,G__102953,G__102954,G__102955,G__102956,G__102957,G__102958,G__102959,G__102960,G__102961,G__102962,G__102963,G__102964,G__102965,G__102966));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102911,G__102912) : tailrecursion.hoplon.div.call(null,G__102911,G__102912));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102910) : tailrecursion.hoplon.div.call(null,G__102910));
})(),(function (){var G__103023 = cljs.core.PersistentArrayMap.EMPTY;
var G__103024 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define the procedures ",(function (){var G__103025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__103026 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103025,G__103026) : tailrecursion.hoplon.markdown.code_node.call(null,G__103025,G__103026));
})(),", ",(function (){var G__103027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"except-first-denomination"], null);
var G__103028 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103027,G__103028) : tailrecursion.hoplon.markdown.code_node.call(null,G__103027,G__103028));
})(),", and ",(function (){var G__103029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"no-more?"], null);
var G__103030 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103029,G__103030) : tailrecursion.hoplon.markdown.code_node.call(null,G__103029,G__103030));
})()," in terms of primitive operations on list structures. Does the order of the list ",(function (){var G__103031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"coin-values"], null);
var G__103032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103031,G__103032) : tailrecursion.hoplon.markdown.code_node.call(null,G__103031,G__103032));
})()," affect the answer produced by ",(function (){var G__103033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__103034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103033,G__103034) : tailrecursion.hoplon.markdown.code_node.call(null,G__103033,G__103034));
})(),"? Why or why not?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103023,G__103024) : tailrecursion.hoplon.markdown.para_node.call(null,G__103023,G__103024));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102793;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102792;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102791;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102790;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103035 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103036 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103037 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103038 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103039 = (function (){var G__103040 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103041 = (function (){var G__103042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103043 = "(";
var G__103044 = (function (){var G__103069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103070 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103069,G__103070) : tailrecursion.hoplon.span.call(null,G__103069,G__103070));
})();
var G__103045 = (function (){var G__103071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103072 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103071,G__103072) : tailrecursion.hoplon.span.call(null,G__103071,G__103072));
})();
var G__103046 = " [";
var G__103047 = (function (){var G__103073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103074 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103073,G__103074) : tailrecursion.hoplon.span.call(null,G__103073,G__103074));
})();
var G__103048 = "]\n  (";
var G__103049 = (function (){var G__103075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103076 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103075,G__103076) : tailrecursion.hoplon.span.call(null,G__103075,G__103076));
})();
var G__103050 = (function (){var G__103077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103078 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103077,G__103078) : tailrecursion.hoplon.span.call(null,G__103077,G__103078));
})();
var G__103051 = "))\n(";
var G__103052 = (function (){var G__103079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103080 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103079,G__103080) : tailrecursion.hoplon.span.call(null,G__103079,G__103080));
})();
var G__103053 = (function (){var G__103081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103082 = "except-first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103081,G__103082) : tailrecursion.hoplon.span.call(null,G__103081,G__103082));
})();
var G__103054 = " [";
var G__103055 = (function (){var G__103083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103084 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103083,G__103084) : tailrecursion.hoplon.span.call(null,G__103083,G__103084));
})();
var G__103056 = "]\n  (";
var G__103057 = (function (){var G__103085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103086 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103085,G__103086) : tailrecursion.hoplon.span.call(null,G__103085,G__103086));
})();
var G__103058 = (function (){var G__103087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103088 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103087,G__103088) : tailrecursion.hoplon.span.call(null,G__103087,G__103088));
})();
var G__103059 = "))\n(";
var G__103060 = (function (){var G__103089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103090 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103089,G__103090) : tailrecursion.hoplon.span.call(null,G__103089,G__103090));
})();
var G__103061 = (function (){var G__103091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103092 = "no-more?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103091,G__103092) : tailrecursion.hoplon.span.call(null,G__103091,G__103092));
})();
var G__103062 = " [";
var G__103063 = (function (){var G__103093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103094 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103093,G__103094) : tailrecursion.hoplon.span.call(null,G__103093,G__103094));
})();
var G__103064 = "]\n  (";
var G__103065 = (function (){var G__103095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103096 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103095,G__103096) : tailrecursion.hoplon.span.call(null,G__103095,G__103096));
})();
var G__103066 = " ";
var G__103067 = (function (){var G__103097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103098 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103097,G__103098) : tailrecursion.hoplon.span.call(null,G__103097,G__103098));
})();
var G__103068 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__103042,G__103043,G__103044,G__103045,G__103046,G__103047,G__103048,G__103049,G__103050,G__103051,G__103052,G__103053,G__103054,G__103055,G__103056,G__103057,G__103058,G__103059,G__103060,G__103061,G__103062,G__103063,G__103064,G__103065,G__103066,G__103067,G__103068) : tailrecursion.hoplon.pre.call(null,G__103042,G__103043,G__103044,G__103045,G__103046,G__103047,G__103048,G__103049,G__103050,G__103051,G__103052,G__103053,G__103054,G__103055,G__103056,G__103057,G__103058,G__103059,G__103060,G__103061,G__103062,G__103063,G__103064,G__103065,G__103066,G__103067,G__103068));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103040,G__103041) : tailrecursion.hoplon.div.call(null,G__103040,G__103041));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103039) : tailrecursion.hoplon.div.call(null,G__103039));
})(),(function (){var G__103099 = cljs.core.PersistentArrayMap.EMPTY;
var G__103100 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, we could have done it this way,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103099,G__103100) : tailrecursion.hoplon.markdown.para_node.call(null,G__103099,G__103100));
})(),(function (){var G__103101 = (function (){var G__103102 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103103 = (function (){var G__103104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103105 = "(";
var G__103106 = (function (){var G__103121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103122 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103121,G__103122) : tailrecursion.hoplon.span.call(null,G__103121,G__103122));
})();
var G__103107 = (function (){var G__103123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103124 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103123,G__103124) : tailrecursion.hoplon.span.call(null,G__103123,G__103124));
})();
var G__103108 = " ";
var G__103109 = (function (){var G__103125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103126 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103125,G__103126) : tailrecursion.hoplon.span.call(null,G__103125,G__103126));
})();
var G__103110 = ")\n(";
var G__103111 = (function (){var G__103127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103128 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103127,G__103128) : tailrecursion.hoplon.span.call(null,G__103127,G__103128));
})();
var G__103112 = (function (){var G__103129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103130 = "except-first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103129,G__103130) : tailrecursion.hoplon.span.call(null,G__103129,G__103130));
})();
var G__103113 = " ";
var G__103114 = (function (){var G__103131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103132 = "rest";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103131,G__103132) : tailrecursion.hoplon.span.call(null,G__103131,G__103132));
})();
var G__103115 = ")\n(";
var G__103116 = (function (){var G__103133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103134 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103133,G__103134) : tailrecursion.hoplon.span.call(null,G__103133,G__103134));
})();
var G__103117 = (function (){var G__103135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103136 = "no-more";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103135,G__103136) : tailrecursion.hoplon.span.call(null,G__103135,G__103136));
})();
var G__103118 = " ";
var G__103119 = (function (){var G__103137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103138 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103137,G__103138) : tailrecursion.hoplon.span.call(null,G__103137,G__103138));
})();
var G__103120 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__103104,G__103105,G__103106,G__103107,G__103108,G__103109,G__103110,G__103111,G__103112,G__103113,G__103114,G__103115,G__103116,G__103117,G__103118,G__103119,G__103120) : tailrecursion.hoplon.pre.call(null,G__103104,G__103105,G__103106,G__103107,G__103108,G__103109,G__103110,G__103111,G__103112,G__103113,G__103114,G__103115,G__103116,G__103117,G__103118,G__103119,G__103120));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103102,G__103103) : tailrecursion.hoplon.div.call(null,G__103102,G__103103));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103101) : tailrecursion.hoplon.div.call(null,G__103101));
})(),(function (){var G__103139 = cljs.core.PersistentArrayMap.EMPTY;
var G__103140 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which requires fewer steps to evaluate."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103139,G__103140) : tailrecursion.hoplon.markdown.para_node.call(null,G__103139,G__103140));
})(),(function (){var G__103141 = cljs.core.PersistentArrayMap.EMPTY;
var G__103142 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as the order, the procedure would return the same answer, but it would require a lot more steps and more memory (which might cause a stack overflow if the ",(function (){var G__103143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"amount"], null);
var G__103144 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103143,G__103144) : tailrecursion.hoplon.markdown.code_node.call(null,G__103143,G__103144));
})()," is high enough. If you don",(function (){var G__103145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103146 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103145,G__103146) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103145,G__103146));
})(),"t understand what I",(function (){var G__103147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103148 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103147,G__103148) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103147,G__103148));
})(),"m saying, draw a diagram of what would happen if the order of the coins were reversed (pennies up to half-dollars in USD)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103141,G__103142) : tailrecursion.hoplon.markdown.para_node.call(null,G__103141,G__103142));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103038;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103037;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103036;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103035;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103149 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103150 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103151 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103152 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103153 = cljs.core.PersistentArrayMap.EMPTY;
var G__103154 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedures ",(function (){var G__103155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"+"], null);
var G__103156 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103155,G__103156) : tailrecursion.hoplon.markdown.code_node.call(null,G__103155,G__103156));
})(),", ",(function (){var G__103157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"*"], null);
var G__103158 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103157,G__103158) : tailrecursion.hoplon.markdown.code_node.call(null,G__103157,G__103158));
})(),", and ",(function (){var G__103159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__103160 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103159,G__103160) : tailrecursion.hoplon.markdown.code_node.call(null,G__103159,G__103160));
})()," take arbitrary numbers of arguments. One way to define such procedures is to use ",(function (){var G__103161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"defn"], null);
var G__103162 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103161,G__103162) : tailrecursion.hoplon.markdown.code_node.call(null,G__103161,G__103162));
})()," with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dotted-tail notation"], null)], 0)),". In a procedure definition in Scheme, a parameter list that has a dot before the last parameter name indicates that, when the procedure is called, the initial parameters (if any) will have as values the initial arguments, as usual, but the final parameter",(function (){var G__103163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103164 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103163,G__103164) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103163,G__103164));
})(),"s value will be a list of any remaining arguments. Clojure has a similar construct, but instead of a dot, we use an ampersand. For instance, given the definition"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103153,G__103154) : tailrecursion.hoplon.markdown.para_node.call(null,G__103153,G__103154));
})(),(function (){var G__103165 = (function (){var G__103166 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103167 = (function (){var G__103168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103169 = "(";
var G__103170 = (function (){var G__103183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103184 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103183,G__103184) : tailrecursion.hoplon.span.call(null,G__103183,G__103184));
})();
var G__103171 = (function (){var G__103185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103186 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103185,G__103186) : tailrecursion.hoplon.span.call(null,G__103185,G__103186));
})();
var G__103172 = " [";
var G__103173 = (function (){var G__103187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103188 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103187,G__103188) : tailrecursion.hoplon.span.call(null,G__103187,G__103188));
})();
var G__103174 = " ";
var G__103175 = (function (){var G__103189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103190 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103189,G__103190) : tailrecursion.hoplon.span.call(null,G__103189,G__103190));
})();
var G__103176 = " ";
var G__103177 = (function (){var G__103191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103192 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103191,G__103192) : tailrecursion.hoplon.span.call(null,G__103191,G__103192));
})();
var G__103178 = " ";
var G__103179 = (function (){var G__103193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103194 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103193,G__103194) : tailrecursion.hoplon.span.call(null,G__103193,G__103194));
})();
var G__103180 = "] ";
var G__103181 = (function (){var G__103195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103196 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103195,G__103196) : tailrecursion.hoplon.span.call(null,G__103195,G__103196));
})();
var G__103182 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__103168,G__103169,G__103170,G__103171,G__103172,G__103173,G__103174,G__103175,G__103176,G__103177,G__103178,G__103179,G__103180,G__103181,G__103182) : tailrecursion.hoplon.pre.call(null,G__103168,G__103169,G__103170,G__103171,G__103172,G__103173,G__103174,G__103175,G__103176,G__103177,G__103178,G__103179,G__103180,G__103181,G__103182));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103166,G__103167) : tailrecursion.hoplon.div.call(null,G__103166,G__103167));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103165) : tailrecursion.hoplon.div.call(null,G__103165));
})(),(function (){var G__103197 = cljs.core.PersistentArrayMap.EMPTY;
var G__103198 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure ",(function (){var G__103199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"f"], null);
var G__103200 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103199,G__103200) : tailrecursion.hoplon.markdown.code_node.call(null,G__103199,G__103200));
})()," can be called with two or more arguments. If we evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103197,G__103198) : tailrecursion.hoplon.markdown.para_node.call(null,G__103197,G__103198));
})(),(function (){var G__103201 = (function (){var G__103202 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103203 = (function (){var G__103204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103205 = "(";
var G__103206 = (function (){var G__103220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103221 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103220,G__103221) : tailrecursion.hoplon.span.call(null,G__103220,G__103221));
})();
var G__103207 = " ";
var G__103208 = (function (){var G__103222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103223 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103222,G__103223) : tailrecursion.hoplon.span.call(null,G__103222,G__103223));
})();
var G__103209 = " ";
var G__103210 = (function (){var G__103224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103225 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103224,G__103225) : tailrecursion.hoplon.span.call(null,G__103224,G__103225));
})();
var G__103211 = " ";
var G__103212 = (function (){var G__103226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103227 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103226,G__103227) : tailrecursion.hoplon.span.call(null,G__103226,G__103227));
})();
var G__103213 = " ";
var G__103214 = (function (){var G__103228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103229 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103228,G__103229) : tailrecursion.hoplon.span.call(null,G__103228,G__103229));
})();
var G__103215 = " ";
var G__103216 = (function (){var G__103230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103231 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103230,G__103231) : tailrecursion.hoplon.span.call(null,G__103230,G__103231));
})();
var G__103217 = " ";
var G__103218 = (function (){var G__103232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103233 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103232,G__103233) : tailrecursion.hoplon.span.call(null,G__103232,G__103233));
})();
var G__103219 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__103204,G__103205,G__103206,G__103207,G__103208,G__103209,G__103210,G__103211,G__103212,G__103213,G__103214,G__103215,G__103216,G__103217,G__103218,G__103219) : tailrecursion.hoplon.pre.call(null,G__103204,G__103205,G__103206,G__103207,G__103208,G__103209,G__103210,G__103211,G__103212,G__103213,G__103214,G__103215,G__103216,G__103217,G__103218,G__103219));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103202,G__103203) : tailrecursion.hoplon.div.call(null,G__103202,G__103203));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103201) : tailrecursion.hoplon.div.call(null,G__103201));
})(),(function (){var G__103234 = cljs.core.PersistentArrayMap.EMPTY;
var G__103235 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["then in the body of ",(function (){var G__103236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"f"], null);
var G__103237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103236,G__103237) : tailrecursion.hoplon.markdown.code_node.call(null,G__103236,G__103237));
})(),", ",(function (){var G__103238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__103239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103238,G__103239) : tailrecursion.hoplon.markdown.code_node.call(null,G__103238,G__103239));
})()," will be 1, ",(function (){var G__103240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__103241 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103240,G__103241) : tailrecursion.hoplon.markdown.code_node.call(null,G__103240,G__103241));
})()," will be 2, and ",(function (){var G__103242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__103243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103242,G__103243) : tailrecursion.hoplon.markdown.code_node.call(null,G__103242,G__103243));
})()," will be the list ",(function (){var G__103244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(3 4 5 6)"], null);
var G__103245 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103244,G__103245) : tailrecursion.hoplon.markdown.code_node.call(null,G__103244,G__103245));
})(),". Given the definition"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103234,G__103235) : tailrecursion.hoplon.markdown.para_node.call(null,G__103234,G__103235));
})(),(function (){var G__103246 = (function (){var G__103247 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103248 = (function (){var G__103249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103250 = "(";
var G__103251 = (function (){var G__103260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103261 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103260,G__103261) : tailrecursion.hoplon.span.call(null,G__103260,G__103261));
})();
var G__103252 = (function (){var G__103262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103263 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103262,G__103263) : tailrecursion.hoplon.span.call(null,G__103262,G__103263));
})();
var G__103253 = " [";
var G__103254 = (function (){var G__103264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103265 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103264,G__103265) : tailrecursion.hoplon.span.call(null,G__103264,G__103265));
})();
var G__103255 = " ";
var G__103256 = (function (){var G__103266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103267 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103266,G__103267) : tailrecursion.hoplon.span.call(null,G__103266,G__103267));
})();
var G__103257 = "] ";
var G__103258 = (function (){var G__103268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103269 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103268,G__103269) : tailrecursion.hoplon.span.call(null,G__103268,G__103269));
})();
var G__103259 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__103249,G__103250,G__103251,G__103252,G__103253,G__103254,G__103255,G__103256,G__103257,G__103258,G__103259) : tailrecursion.hoplon.pre.call(null,G__103249,G__103250,G__103251,G__103252,G__103253,G__103254,G__103255,G__103256,G__103257,G__103258,G__103259));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103247,G__103248) : tailrecursion.hoplon.div.call(null,G__103247,G__103248));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103246) : tailrecursion.hoplon.div.call(null,G__103246));
})(),(function (){var G__103270 = cljs.core.PersistentArrayMap.EMPTY;
var G__103271 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure ",(function (){var G__103272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"g"], null);
var G__103273 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103272,G__103273) : tailrecursion.hoplon.markdown.code_node.call(null,G__103272,G__103273));
})()," can be called with zero or more arguments. If we evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103270,G__103271) : tailrecursion.hoplon.markdown.para_node.call(null,G__103270,G__103271));
})(),(function (){var G__103274 = (function (){var G__103275 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103276 = (function (){var G__103277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103278 = "(";
var G__103279 = (function (){var G__103293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103294 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103293,G__103294) : tailrecursion.hoplon.span.call(null,G__103293,G__103294));
})();
var G__103280 = " ";
var G__103281 = (function (){var G__103295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103296 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103295,G__103296) : tailrecursion.hoplon.span.call(null,G__103295,G__103296));
})();
var G__103282 = " ";
var G__103283 = (function (){var G__103297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103298 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103297,G__103298) : tailrecursion.hoplon.span.call(null,G__103297,G__103298));
})();
var G__103284 = " ";
var G__103285 = (function (){var G__103299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103300 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103299,G__103300) : tailrecursion.hoplon.span.call(null,G__103299,G__103300));
})();
var G__103286 = " ";
var G__103287 = (function (){var G__103301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103302 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103301,G__103302) : tailrecursion.hoplon.span.call(null,G__103301,G__103302));
})();
var G__103288 = " ";
var G__103289 = (function (){var G__103303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103304 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103303,G__103304) : tailrecursion.hoplon.span.call(null,G__103303,G__103304));
})();
var G__103290 = " ";
var G__103291 = (function (){var G__103305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103306 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103305,G__103306) : tailrecursion.hoplon.span.call(null,G__103305,G__103306));
})();
var G__103292 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__103277,G__103278,G__103279,G__103280,G__103281,G__103282,G__103283,G__103284,G__103285,G__103286,G__103287,G__103288,G__103289,G__103290,G__103291,G__103292) : tailrecursion.hoplon.pre.call(null,G__103277,G__103278,G__103279,G__103280,G__103281,G__103282,G__103283,G__103284,G__103285,G__103286,G__103287,G__103288,G__103289,G__103290,G__103291,G__103292));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103275,G__103276) : tailrecursion.hoplon.div.call(null,G__103275,G__103276));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103274) : tailrecursion.hoplon.div.call(null,G__103274));
})(),(function (){var G__103307 = cljs.core.PersistentArrayMap.EMPTY;
var G__103308 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["then in the body of ",(function (){var G__103309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"g"], null);
var G__103310 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103309,G__103310) : tailrecursion.hoplon.markdown.code_node.call(null,G__103309,G__103310));
})(),", ",(function (){var G__103311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"w"], null);
var G__103312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103311,G__103312) : tailrecursion.hoplon.markdown.code_node.call(null,G__103311,G__103312));
})()," will be the list ",(function (){var G__103313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4 5 6)"], null);
var G__103314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103313,G__103314) : tailrecursion.hoplon.markdown.code_node.call(null,G__103313,G__103314));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103307,G__103308) : tailrecursion.hoplon.markdown.para_node.call(null,G__103307,G__103308));
})(),(function (){var G__103315 = cljs.core.PersistentArrayMap.EMPTY;
var G__103316 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use this notation to write a procedure ",(function (){var G__103317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"same-parity"], null);
var G__103318 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103317,G__103318) : tailrecursion.hoplon.markdown.code_node.call(null,G__103317,G__103318));
})()," that takes one or more integers and returns a list of all the arguments that have the same even-odd parity as the first argument. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103315,G__103316) : tailrecursion.hoplon.markdown.para_node.call(null,G__103315,G__103316));
})(),(function (){var G__103319 = cljs.core.PersistentArrayMap.EMPTY;
var G__103320 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["```clj (same-parity 1 2 3 4 5 6 7) (1 3 5 7)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103319,G__103320) : tailrecursion.hoplon.markdown.para_node.call(null,G__103319,G__103320));
})(),(function (){var G__103321 = cljs.core.PersistentArrayMap.EMPTY;
var G__103322 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(same-parity 2 3 4 5 6 7) (2 4 6)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103321,G__103322) : tailrecursion.hoplon.markdown.para_node.call(null,G__103321,G__103322));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103152;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103151;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103150;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103149;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103325 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103326 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103327 = (function (){var G__103328 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103329 = (function (){var G__103330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103331 = "(";
var G__103332 = (function (){var G__103416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103417 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103416,G__103417) : tailrecursion.hoplon.span.call(null,G__103416,G__103417));
})();
var G__103333 = (function (){var G__103418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103419 = "same-parity*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103418,G__103419) : tailrecursion.hoplon.span.call(null,G__103418,G__103419));
})();
var G__103334 = " [";
var G__103335 = (function (){var G__103420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103421 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103420,G__103421) : tailrecursion.hoplon.span.call(null,G__103420,G__103421));
})();
var G__103336 = " ";
var G__103337 = (function (){var G__103422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103423 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103422,G__103423) : tailrecursion.hoplon.span.call(null,G__103422,G__103423));
})();
var G__103338 = "]\n  (";
var G__103339 = (function (){var G__103424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103425 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103424,G__103425) : tailrecursion.hoplon.span.call(null,G__103424,G__103425));
})();
var G__103340 = "[";
var G__103341 = (function (){var G__103426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103427 = "parity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103426,G__103427) : tailrecursion.hoplon.span.call(null,G__103426,G__103427));
})();
var G__103342 = " (";
var G__103343 = (function (){var G__103428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103429 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103428,G__103429) : tailrecursion.hoplon.span.call(null,G__103428,G__103429));
})();
var G__103344 = " ";
var G__103345 = (function (){var G__103430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103431 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103430,G__103431) : tailrecursion.hoplon.span.call(null,G__103430,G__103431));
})();
var G__103346 = " ";
var G__103347 = (function (){var G__103432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103433 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103432,G__103433) : tailrecursion.hoplon.span.call(null,G__103432,G__103433));
})();
var G__103348 = ")]\n    (";
var G__103349 = (function (){var G__103434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103435 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103434,G__103435) : tailrecursion.hoplon.span.call(null,G__103434,G__103435));
})();
var G__103350 = "[";
var G__103351 = (function (){var G__103436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103437 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103436,G__103437) : tailrecursion.hoplon.span.call(null,G__103436,G__103437));
})();
var G__103352 = " ";
var G__103353 = (function (){var G__103438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103439 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103438,G__103439) : tailrecursion.hoplon.span.call(null,G__103438,G__103439));
})();
var G__103354 = "\n           ";
var G__103355 = (function (){var G__103440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103441 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103440,G__103441) : tailrecursion.hoplon.span.call(null,G__103440,G__103441));
})();
var G__103356 = "   (";
var G__103357 = (function (){var G__103442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103443 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103442,G__103443) : tailrecursion.hoplon.span.call(null,G__103442,G__103443));
})();
var G__103358 = (function (){var G__103444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103445 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103444,G__103445) : tailrecursion.hoplon.span.call(null,G__103444,G__103445));
})();
var G__103359 = ")]\n      (";
var G__103360 = (function (){var G__103446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103447 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103446,G__103447) : tailrecursion.hoplon.span.call(null,G__103446,G__103447));
})();
var G__103361 = "(";
var G__103362 = (function (){var G__103448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103449 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103448,G__103449) : tailrecursion.hoplon.span.call(null,G__103448,G__103449));
})();
var G__103363 = " ";
var G__103364 = (function (){var G__103450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103451 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103450,G__103451) : tailrecursion.hoplon.span.call(null,G__103450,G__103451));
})();
var G__103365 = ")\n            ";
var G__103366 = (function (){var G__103452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103453 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103452,G__103453) : tailrecursion.hoplon.span.call(null,G__103452,G__103453));
})();
var G__103367 = "\n            (";
var G__103368 = (function (){var G__103454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103455 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103454,G__103455) : tailrecursion.hoplon.span.call(null,G__103454,G__103455));
})();
var G__103369 = "(";
var G__103370 = (function (){var G__103456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103457 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103456,G__103457) : tailrecursion.hoplon.span.call(null,G__103456,G__103457));
})();
var G__103371 = " (";
var G__103372 = (function (){var G__103458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103459 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103458,G__103459) : tailrecursion.hoplon.span.call(null,G__103458,G__103459));
})();
var G__103373 = (function (){var G__103460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103461 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103460,G__103461) : tailrecursion.hoplon.span.call(null,G__103460,G__103461));
})();
var G__103374 = ") ";
var G__103375 = (function (){var G__103462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103463 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103462,G__103463) : tailrecursion.hoplon.span.call(null,G__103462,G__103463));
})();
var G__103376 = ") ";
var G__103377 = (function (){var G__103464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103465 = "parity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103464,G__103465) : tailrecursion.hoplon.span.call(null,G__103464,G__103465));
})();
var G__103378 = ")\n            (";
var G__103379 = (function (){var G__103466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103467 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103466,G__103467) : tailrecursion.hoplon.span.call(null,G__103466,G__103467));
})();
var G__103380 = " (";
var G__103381 = (function (){var G__103468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103469 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103468,G__103469) : tailrecursion.hoplon.span.call(null,G__103468,G__103469));
})();
var G__103382 = (function (){var G__103470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103471 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103470,G__103471) : tailrecursion.hoplon.span.call(null,G__103470,G__103471));
})();
var G__103383 = ")\n                   (";
var G__103384 = (function (){var G__103472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103473 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103472,G__103473) : tailrecursion.hoplon.span.call(null,G__103472,G__103473));
})();
var G__103385 = (function (){var G__103474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103475 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103474,G__103475) : tailrecursion.hoplon.span.call(null,G__103474,G__103475));
})();
var G__103386 = " (";
var G__103387 = (function (){var G__103476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103477 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103476,G__103477) : tailrecursion.hoplon.span.call(null,G__103476,G__103477));
})();
var G__103388 = (function (){var G__103478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103479 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103478,G__103479) : tailrecursion.hoplon.span.call(null,G__103478,G__103479));
})();
var G__103389 = ")))\n            ";
var G__103390 = (function (){var G__103480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103481 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103480,G__103481) : tailrecursion.hoplon.span.call(null,G__103480,G__103481));
})();
var G__103391 = " (";
var G__103392 = (function (){var G__103482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103483 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103482,G__103483) : tailrecursion.hoplon.span.call(null,G__103482,G__103483));
})();
var G__103393 = " (";
var G__103394 = (function (){var G__103484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103485 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103484,G__103485) : tailrecursion.hoplon.span.call(null,G__103484,G__103485));
})();
var G__103395 = (function (){var G__103486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103487 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103486,G__103487) : tailrecursion.hoplon.span.call(null,G__103486,G__103487));
})();
var G__103396 = ") ";
var G__103397 = (function (){var G__103488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103489 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103488,G__103489) : tailrecursion.hoplon.span.call(null,G__103488,G__103489));
})();
var G__103398 = ")))))\n(";
var G__103399 = (function (){var G__103490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103491 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103490,G__103491) : tailrecursion.hoplon.span.call(null,G__103490,G__103491));
})();
var G__103400 = (function (){var G__103492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103493 = "same-parity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103492,G__103493) : tailrecursion.hoplon.span.call(null,G__103492,G__103493));
})();
var G__103401 = " [";
var G__103402 = (function (){var G__103494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103495 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103494,G__103495) : tailrecursion.hoplon.span.call(null,G__103494,G__103495));
})();
var G__103403 = " ";
var G__103404 = (function (){var G__103496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103497 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103496,G__103497) : tailrecursion.hoplon.span.call(null,G__103496,G__103497));
})();
var G__103405 = " ";
var G__103406 = (function (){var G__103498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103499 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103498,G__103499) : tailrecursion.hoplon.span.call(null,G__103498,G__103499));
})();
var G__103407 = "]\n  (";
var G__103408 = (function (){var G__103500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103501 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103500,G__103501) : tailrecursion.hoplon.span.call(null,G__103500,G__103501));
})();
var G__103409 = "(";
var G__103410 = (function (){var G__103502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103503 = "same-parity*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103502,G__103503) : tailrecursion.hoplon.span.call(null,G__103502,G__103503));
})();
var G__103411 = " (";
var G__103412 = (function (){var G__103504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103505 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103504,G__103505) : tailrecursion.hoplon.span.call(null,G__103504,G__103505));
})();
var G__103413 = " ";
var G__103414 = (function (){var G__103506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103507 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103506,G__103507) : tailrecursion.hoplon.span.call(null,G__103506,G__103507));
})();
var G__103415 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86(G__103330,G__103331,G__103332,G__103333,G__103334,G__103335,G__103336,G__103337,G__103338,G__103339,G__103340,G__103341,G__103342,G__103343,G__103344,G__103345,G__103346,G__103347,G__103348,G__103349,G__103350,G__103351,G__103352,G__103353,G__103354,G__103355,G__103356,G__103357,G__103358,G__103359,G__103360,G__103361,G__103362,G__103363,G__103364,G__103365,G__103366,G__103367,G__103368,G__103369,G__103370,G__103371,G__103372,G__103373,G__103374,G__103375,G__103376,G__103377,G__103378,G__103379,G__103380,G__103381,G__103382,G__103383,G__103384,G__103385,G__103386,G__103387,G__103388,G__103389,G__103390,G__103391,G__103392,G__103393,G__103394,G__103395,G__103396,G__103397,G__103398,G__103399,G__103400,G__103401,G__103402,G__103403,G__103404,G__103405,G__103406,G__103407,G__103408,G__103409,G__103410,G__103411,G__103412,G__103413,G__103414,G__103415) : tailrecursion.hoplon.pre.call(null,G__103330,G__103331,G__103332,G__103333,G__103334,G__103335,G__103336,G__103337,G__103338,G__103339,G__103340,G__103341,G__103342,G__103343,G__103344,G__103345,G__103346,G__103347,G__103348,G__103349,G__103350,G__103351,G__103352,G__103353,G__103354,G__103355,G__103356,G__103357,G__103358,G__103359,G__103360,G__103361,G__103362,G__103363,G__103364,G__103365,G__103366,G__103367,G__103368,G__103369,G__103370,G__103371,G__103372,G__103373,G__103374,G__103375,G__103376,G__103377,G__103378,G__103379,G__103380,G__103381,G__103382,G__103383,G__103384,G__103385,G__103386,G__103387,G__103388,G__103389,G__103390,G__103391,G__103392,G__103393,G__103394,G__103395,G__103396,G__103397,G__103398,G__103399,G__103400,G__103401,G__103402,G__103403,G__103404,G__103405,G__103406,G__103407,G__103408,G__103409,G__103410,G__103411,G__103412,G__103413,G__103414,G__103415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103328,G__103329) : tailrecursion.hoplon.div.call(null,G__103328,G__103329));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103327) : tailrecursion.hoplon.div.call(null,G__103327));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103326;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103325;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103323;
}})()], 0))], 0))], 0));
var G__101386 = "";
var G__101387 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Mapping Over Lists"], null),(function (){var _STAR_references_STAR_103508 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103509 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103510 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103511 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103512 = cljs.core.PersistentArrayMap.EMPTY;
var G__103513 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One extremely useful operation is to apply some transformation to each element in a list and generate the list of results. For instance, the following procedure scales each number in a list by a given factor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103512,G__103513) : tailrecursion.hoplon.markdown.para_node.call(null,G__103512,G__103513));
})(),(function (){var G__103514 = (function (){var G__103515 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103516 = (function (){var G__103517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103518 = "(";
var G__103519 = (function (){var G__103575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103576 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103575,G__103576) : tailrecursion.hoplon.span.call(null,G__103575,G__103576));
})();
var G__103520 = (function (){var G__103577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103578 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103577,G__103578) : tailrecursion.hoplon.span.call(null,G__103577,G__103578));
})();
var G__103521 = " [";
var G__103522 = (function (){var G__103579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103580 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103579,G__103580) : tailrecursion.hoplon.span.call(null,G__103579,G__103580));
})();
var G__103523 = " ";
var G__103524 = (function (){var G__103581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103582 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103581,G__103582) : tailrecursion.hoplon.span.call(null,G__103581,G__103582));
})();
var G__103525 = "]\n  (";
var G__103526 = (function (){var G__103583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103584 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103583,G__103584) : tailrecursion.hoplon.span.call(null,G__103583,G__103584));
})();
var G__103527 = "(";
var G__103528 = (function (){var G__103585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103586 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103585,G__103586) : tailrecursion.hoplon.span.call(null,G__103585,G__103586));
})();
var G__103529 = " ";
var G__103530 = (function (){var G__103587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103588 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103587,G__103588) : tailrecursion.hoplon.span.call(null,G__103587,G__103588));
})();
var G__103531 = ")\n      ";
var G__103532 = (function (){var G__103589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103590 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103589,G__103590) : tailrecursion.hoplon.span.call(null,G__103589,G__103590));
})();
var G__103533 = "\n      (";
var G__103534 = (function (){var G__103591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103592 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103591,G__103592) : tailrecursion.hoplon.span.call(null,G__103591,G__103592));
})();
var G__103535 = "(";
var G__103536 = (function (){var G__103593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103594 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103593,G__103594) : tailrecursion.hoplon.span.call(null,G__103593,G__103594));
})();
var G__103537 = "(";
var G__103538 = (function (){var G__103595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103596 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103595,G__103596) : tailrecursion.hoplon.span.call(null,G__103595,G__103596));
})();
var G__103539 = (function (){var G__103597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103598 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103597,G__103598) : tailrecursion.hoplon.span.call(null,G__103597,G__103598));
})();
var G__103540 = ") ";
var G__103541 = (function (){var G__103599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103600 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103599,G__103600) : tailrecursion.hoplon.span.call(null,G__103599,G__103600));
})();
var G__103542 = ")\n        (";
var G__103543 = (function (){var G__103601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103602 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103601,G__103602) : tailrecursion.hoplon.span.call(null,G__103601,G__103602));
})();
var G__103544 = " (";
var G__103545 = (function (){var G__103603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103604 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103603,G__103604) : tailrecursion.hoplon.span.call(null,G__103603,G__103604));
})();
var G__103546 = (function (){var G__103605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103606 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103605,G__103606) : tailrecursion.hoplon.span.call(null,G__103605,G__103606));
})();
var G__103547 = ") ";
var G__103548 = (function (){var G__103607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103608 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103607,G__103608) : tailrecursion.hoplon.span.call(null,G__103607,G__103608));
})();
var G__103549 = "))))\n\n(";
var G__103550 = (function (){var G__103609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103610 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103609,G__103610) : tailrecursion.hoplon.span.call(null,G__103609,G__103610));
})();
var G__103551 = " (";
var G__103552 = (function (){var G__103611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103612 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103611,G__103612) : tailrecursion.hoplon.span.call(null,G__103611,G__103612));
})();
var G__103553 = (function (){var G__103613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103614 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103613,G__103614) : tailrecursion.hoplon.span.call(null,G__103613,G__103614));
})();
var G__103554 = " ";
var G__103555 = (function (){var G__103615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103616 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103615,G__103616) : tailrecursion.hoplon.span.call(null,G__103615,G__103616));
})();
var G__103556 = " ";
var G__103557 = (function (){var G__103617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103618 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103617,G__103618) : tailrecursion.hoplon.span.call(null,G__103617,G__103618));
})();
var G__103558 = " ";
var G__103559 = (function (){var G__103619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103620 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103619,G__103620) : tailrecursion.hoplon.span.call(null,G__103619,G__103620));
})();
var G__103560 = " ";
var G__103561 = (function (){var G__103621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103622 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103621,G__103622) : tailrecursion.hoplon.span.call(null,G__103621,G__103622));
})();
var G__103562 = ") ";
var G__103563 = (function (){var G__103623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103624 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103623,G__103624) : tailrecursion.hoplon.span.call(null,G__103623,G__103624));
})();
var G__103564 = ")\n(";
var G__103565 = (function (){var G__103625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103626 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103625,G__103626) : tailrecursion.hoplon.span.call(null,G__103625,G__103626));
})();
var G__103566 = " ";
var G__103567 = (function (){var G__103627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103628 = "20";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103627,G__103628) : tailrecursion.hoplon.span.call(null,G__103627,G__103628));
})();
var G__103568 = " ";
var G__103569 = (function (){var G__103629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103630 = "30";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103629,G__103630) : tailrecursion.hoplon.span.call(null,G__103629,G__103630));
})();
var G__103570 = " ";
var G__103571 = (function (){var G__103631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103632 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103631,G__103632) : tailrecursion.hoplon.span.call(null,G__103631,G__103632));
})();
var G__103572 = " ";
var G__103573 = (function (){var G__103633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103634 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103633,G__103634) : tailrecursion.hoplon.span.call(null,G__103633,G__103634));
})();
var G__103574 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__103517,G__103518,G__103519,G__103520,G__103521,G__103522,G__103523,G__103524,G__103525,G__103526,G__103527,G__103528,G__103529,G__103530,G__103531,G__103532,G__103533,G__103534,G__103535,G__103536,G__103537,G__103538,G__103539,G__103540,G__103541,G__103542,G__103543,G__103544,G__103545,G__103546,G__103547,G__103548,G__103549,G__103550,G__103551,G__103552,G__103553,G__103554,G__103555,G__103556,G__103557,G__103558,G__103559,G__103560,G__103561,G__103562,G__103563,G__103564,G__103565,G__103566,G__103567,G__103568,G__103569,G__103570,G__103571,G__103572,G__103573,G__103574) : tailrecursion.hoplon.pre.call(null,G__103517,G__103518,G__103519,G__103520,G__103521,G__103522,G__103523,G__103524,G__103525,G__103526,G__103527,G__103528,G__103529,G__103530,G__103531,G__103532,G__103533,G__103534,G__103535,G__103536,G__103537,G__103538,G__103539,G__103540,G__103541,G__103542,G__103543,G__103544,G__103545,G__103546,G__103547,G__103548,G__103549,G__103550,G__103551,G__103552,G__103553,G__103554,G__103555,G__103556,G__103557,G__103558,G__103559,G__103560,G__103561,G__103562,G__103563,G__103564,G__103565,G__103566,G__103567,G__103568,G__103569,G__103570,G__103571,G__103572,G__103573,G__103574));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103515,G__103516) : tailrecursion.hoplon.div.call(null,G__103515,G__103516));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103514) : tailrecursion.hoplon.div.call(null,G__103514));
})(),(function (){var G__103635 = cljs.core.PersistentArrayMap.EMPTY;
var G__103636 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In an effort to get used to writing in ways that won",(function (){var G__103637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103638 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103637,G__103638) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103637,G__103638));
})(),"t cause stack overflow errors, let",(function (){var G__103639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103640 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103639,G__103640) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103639,G__103640));
})(),"s turn this recursive procedure into an iterative one using ",(function (){var G__103641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"loop"], null);
var G__103642 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103641,G__103642) : tailrecursion.hoplon.markdown.code_node.call(null,G__103641,G__103642));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103635,G__103636) : tailrecursion.hoplon.markdown.para_node.call(null,G__103635,G__103636));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103511;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103510;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103509;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103508;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103643 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103644 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103645 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103646 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103647 = (function (){var G__103648 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103649 = (function (){var G__103650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103651 = "(";
var G__103652 = (function (){var G__103706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103707 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103706,G__103707) : tailrecursion.hoplon.span.call(null,G__103706,G__103707));
})();
var G__103653 = (function (){var G__103708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103709 = "scale-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103708,G__103709) : tailrecursion.hoplon.span.call(null,G__103708,G__103709));
})();
var G__103654 = " [";
var G__103655 = (function (){var G__103710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103711 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103710,G__103711) : tailrecursion.hoplon.span.call(null,G__103710,G__103711));
})();
var G__103656 = " ";
var G__103657 = (function (){var G__103712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103713 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103712,G__103713) : tailrecursion.hoplon.span.call(null,G__103712,G__103713));
})();
var G__103658 = "]\n  (";
var G__103659 = (function (){var G__103714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103715 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103714,G__103715) : tailrecursion.hoplon.span.call(null,G__103714,G__103715));
})();
var G__103660 = "[";
var G__103661 = (function (){var G__103716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103717 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103716,G__103717) : tailrecursion.hoplon.span.call(null,G__103716,G__103717));
})();
var G__103662 = " ";
var G__103663 = (function (){var G__103718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103719 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103718,G__103719) : tailrecursion.hoplon.span.call(null,G__103718,G__103719));
})();
var G__103664 = "\n         ";
var G__103665 = (function (){var G__103720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103721 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103720,G__103721) : tailrecursion.hoplon.span.call(null,G__103720,G__103721));
})();
var G__103666 = "   (";
var G__103667 = (function (){var G__103722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103723 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103722,G__103723) : tailrecursion.hoplon.span.call(null,G__103722,G__103723));
})();
var G__103668 = ")]\n    (";
var G__103669 = (function (){var G__103724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103725 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103724,G__103725) : tailrecursion.hoplon.span.call(null,G__103724,G__103725));
})();
var G__103670 = "(";
var G__103671 = (function (){var G__103726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103727 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103726,G__103727) : tailrecursion.hoplon.span.call(null,G__103726,G__103727));
})();
var G__103672 = " ";
var G__103673 = (function (){var G__103728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103729 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103728,G__103729) : tailrecursion.hoplon.span.call(null,G__103728,G__103729));
})();
var G__103674 = ")\n        ";
var G__103675 = (function (){var G__103730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103731 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103730,G__103731) : tailrecursion.hoplon.span.call(null,G__103730,G__103731));
})();
var G__103676 = "\n        (";
var G__103677 = (function (){var G__103732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103733 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103732,G__103733) : tailrecursion.hoplon.span.call(null,G__103732,G__103733));
})();
var G__103678 = " (";
var G__103679 = (function (){var G__103734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103735 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103734,G__103735) : tailrecursion.hoplon.span.call(null,G__103734,G__103735));
})();
var G__103680 = (function (){var G__103736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103737 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103736,G__103737) : tailrecursion.hoplon.span.call(null,G__103736,G__103737));
})();
var G__103681 = ")\n               (";
var G__103682 = (function (){var G__103738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103739 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103738,G__103739) : tailrecursion.hoplon.span.call(null,G__103738,G__103739));
})();
var G__103683 = (function (){var G__103740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103741 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103740,G__103741) : tailrecursion.hoplon.span.call(null,G__103740,G__103741));
})();
var G__103684 = "\n                     (";
var G__103685 = (function (){var G__103742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103743 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103742,G__103743) : tailrecursion.hoplon.span.call(null,G__103742,G__103743));
})();
var G__103686 = (function (){var G__103744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103745 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103744,G__103745) : tailrecursion.hoplon.span.call(null,G__103744,G__103745));
})();
var G__103687 = " \n                        (";
var G__103688 = (function (){var G__103746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103747 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103746,G__103747) : tailrecursion.hoplon.span.call(null,G__103746,G__103747));
})();
var G__103689 = (function (){var G__103748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103749 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103748,G__103749) : tailrecursion.hoplon.span.call(null,G__103748,G__103749));
})();
var G__103690 = ")))))))\n(";
var G__103691 = (function (){var G__103750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103751 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103750,G__103751) : tailrecursion.hoplon.span.call(null,G__103750,G__103751));
})();
var G__103692 = (function (){var G__103752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103753 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103752,G__103753) : tailrecursion.hoplon.span.call(null,G__103752,G__103753));
})();
var G__103693 = " [";
var G__103694 = (function (){var G__103754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103755 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103754,G__103755) : tailrecursion.hoplon.span.call(null,G__103754,G__103755));
})();
var G__103695 = " ";
var G__103696 = (function (){var G__103756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103757 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103756,G__103757) : tailrecursion.hoplon.span.call(null,G__103756,G__103757));
})();
var G__103697 = "]\n  (";
var G__103698 = (function (){var G__103758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103759 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103758,G__103759) : tailrecursion.hoplon.span.call(null,G__103758,G__103759));
})();
var G__103699 = "(";
var G__103700 = (function (){var G__103760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103761 = "scale-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103760,G__103761) : tailrecursion.hoplon.span.call(null,G__103760,G__103761));
})();
var G__103701 = " ";
var G__103702 = (function (){var G__103762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103763 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103762,G__103763) : tailrecursion.hoplon.span.call(null,G__103762,G__103763));
})();
var G__103703 = " ";
var G__103704 = (function (){var G__103764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103765 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103764,G__103765) : tailrecursion.hoplon.span.call(null,G__103764,G__103765));
})();
var G__103705 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__103650,G__103651,G__103652,G__103653,G__103654,G__103655,G__103656,G__103657,G__103658,G__103659,G__103660,G__103661,G__103662,G__103663,G__103664,G__103665,G__103666,G__103667,G__103668,G__103669,G__103670,G__103671,G__103672,G__103673,G__103674,G__103675,G__103676,G__103677,G__103678,G__103679,G__103680,G__103681,G__103682,G__103683,G__103684,G__103685,G__103686,G__103687,G__103688,G__103689,G__103690,G__103691,G__103692,G__103693,G__103694,G__103695,G__103696,G__103697,G__103698,G__103699,G__103700,G__103701,G__103702,G__103703,G__103704,G__103705) : tailrecursion.hoplon.pre.call(null,G__103650,G__103651,G__103652,G__103653,G__103654,G__103655,G__103656,G__103657,G__103658,G__103659,G__103660,G__103661,G__103662,G__103663,G__103664,G__103665,G__103666,G__103667,G__103668,G__103669,G__103670,G__103671,G__103672,G__103673,G__103674,G__103675,G__103676,G__103677,G__103678,G__103679,G__103680,G__103681,G__103682,G__103683,G__103684,G__103685,G__103686,G__103687,G__103688,G__103689,G__103690,G__103691,G__103692,G__103693,G__103694,G__103695,G__103696,G__103697,G__103698,G__103699,G__103700,G__103701,G__103702,G__103703,G__103704,G__103705));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103648,G__103649) : tailrecursion.hoplon.div.call(null,G__103648,G__103649));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103647) : tailrecursion.hoplon.div.call(null,G__103647));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103646;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103645;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103644;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103643;
}})()], 0)),"",(function (){var _STAR_references_STAR_103766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103768 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103769 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103770 = cljs.core.PersistentArrayMap.EMPTY;
var G__103771 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can abstract this general idea and capture it as a common patter expressed as a higher-order procedure, just as in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3"], null)], 0)),". The higher-order procedure here is called ",(function (){var G__103772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__103773 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103772,G__103773) : tailrecursion.hoplon.markdown.code_node.call(null,G__103772,G__103773));
})(),". ",(function (){var G__103774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__103775 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103774,G__103775) : tailrecursion.hoplon.markdown.code_node.call(null,G__103774,G__103775));
})()," takes as arguments a procedure of one argument and a sequential object (in our case a list), and in our case, returns a list of the results produced by applying the procedure to each element of the list",(function (){var G__103776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__103777 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scheme standardly provides a map procedure that is more general than the one described here. This more general map takes a procedure of n arguments, together with n lists, and applies the procedure to all the first elements of the lists, all the second elements of the lists, and so on, returning a list of the results. For example, ",(function (){var G__103778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(map + (list 1 2 3) (list 40 50 60) (list 700 800\n900))"], null);
var G__103779 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103778,G__103779) : tailrecursion.hoplon.markdown.code_node.call(null,G__103778,G__103779));
})()," returns ",(function (){var G__103780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(741 852 963)"], null);
var G__103781 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103780,G__103781) : tailrecursion.hoplon.markdown.code_node.call(null,G__103780,G__103781));
})(),", and so on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__103776,G__103777) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__103776,G__103777));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103770,G__103771) : tailrecursion.hoplon.markdown.para_node.call(null,G__103770,G__103771));
})(),(function (){var G__103782 = (function (){var G__103783 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103784 = (function (){var G__103785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103786 = "(";
var G__103787 = (function (){var G__103872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103873 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103872,G__103873) : tailrecursion.hoplon.span.call(null,G__103872,G__103873));
})();
var G__103788 = (function (){var G__103874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103875 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103874,G__103875) : tailrecursion.hoplon.span.call(null,G__103874,G__103875));
})();
var G__103789 = "[";
var G__103790 = (function (){var G__103876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103877 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103876,G__103877) : tailrecursion.hoplon.span.call(null,G__103876,G__103877));
})();
var G__103791 = " ";
var G__103792 = (function (){var G__103878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103879 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103878,G__103879) : tailrecursion.hoplon.span.call(null,G__103878,G__103879));
})();
var G__103793 = "]\n  (";
var G__103794 = (function (){var G__103880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103881 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103880,G__103881) : tailrecursion.hoplon.span.call(null,G__103880,G__103881));
})();
var G__103795 = "(";
var G__103796 = (function (){var G__103882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103883 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103882,G__103883) : tailrecursion.hoplon.span.call(null,G__103882,G__103883));
})();
var G__103797 = " ";
var G__103798 = (function (){var G__103884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103885 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103884,G__103885) : tailrecursion.hoplon.span.call(null,G__103884,G__103885));
})();
var G__103799 = ")\n      ";
var G__103800 = (function (){var G__103886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103887 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103886,G__103887) : tailrecursion.hoplon.span.call(null,G__103886,G__103887));
})();
var G__103801 = "\n      (";
var G__103802 = (function (){var G__103888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103889 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103888,G__103889) : tailrecursion.hoplon.span.call(null,G__103888,G__103889));
})();
var G__103803 = "(";
var G__103804 = (function (){var G__103890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103891 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103890,G__103891) : tailrecursion.hoplon.span.call(null,G__103890,G__103891));
})();
var G__103805 = " (";
var G__103806 = (function (){var G__103892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103893 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103892,G__103893) : tailrecursion.hoplon.span.call(null,G__103892,G__103893));
})();
var G__103807 = (function (){var G__103894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103895 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103894,G__103895) : tailrecursion.hoplon.span.call(null,G__103894,G__103895));
})();
var G__103808 = "))\n            (";
var G__103809 = (function (){var G__103896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103897 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103896,G__103897) : tailrecursion.hoplon.span.call(null,G__103896,G__103897));
})();
var G__103810 = (function (){var G__103898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103899 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103898,G__103899) : tailrecursion.hoplon.span.call(null,G__103898,G__103899));
})();
var G__103811 = " (";
var G__103812 = (function (){var G__103900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103901 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103900,G__103901) : tailrecursion.hoplon.span.call(null,G__103900,G__103901));
})();
var G__103813 = (function (){var G__103902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103903 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103902,G__103903) : tailrecursion.hoplon.span.call(null,G__103902,G__103903));
})();
var G__103814 = ")))))\n(";
var G__103815 = (function (){var G__103904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103905 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103904,G__103905) : tailrecursion.hoplon.span.call(null,G__103904,G__103905));
})();
var G__103816 = (function (){var G__103906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103907 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103906,G__103907) : tailrecursion.hoplon.span.call(null,G__103906,G__103907));
})();
var G__103817 = " [";
var G__103818 = (function (){var G__103908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103909 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103908,G__103909) : tailrecursion.hoplon.span.call(null,G__103908,G__103909));
})();
var G__103819 = "] (";
var G__103820 = (function (){var G__103910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103911 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103910,G__103911) : tailrecursion.hoplon.span.call(null,G__103910,G__103911));
})();
var G__103821 = " ";
var G__103822 = (function (){var G__103912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103913 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103912,G__103913) : tailrecursion.hoplon.span.call(null,G__103912,G__103913));
})();
var G__103823 = "))\n(";
var G__103824 = (function (){var G__103914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103915 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103914,G__103915) : tailrecursion.hoplon.span.call(null,G__103914,G__103915));
})();
var G__103825 = (function (){var G__103916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103917 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103916,G__103917) : tailrecursion.hoplon.span.call(null,G__103916,G__103917));
})();
var G__103826 = " (";
var G__103827 = (function (){var G__103918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103919 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103918,G__103919) : tailrecursion.hoplon.span.call(null,G__103918,G__103919));
})();
var G__103828 = (function (){var G__103920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103921 = "-10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103920,G__103921) : tailrecursion.hoplon.span.call(null,G__103920,G__103921));
})();
var G__103829 = " ";
var G__103830 = (function (){var G__103922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103923 = "2.5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103922,G__103923) : tailrecursion.hoplon.span.call(null,G__103922,G__103923));
})();
var G__103831 = " ";
var G__103832 = (function (){var G__103924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103925 = "-11.6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103924,G__103925) : tailrecursion.hoplon.span.call(null,G__103924,G__103925));
})();
var G__103833 = " ";
var G__103834 = (function (){var G__103926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103927 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103926,G__103927) : tailrecursion.hoplon.span.call(null,G__103926,G__103927));
})();
var G__103835 = "))\n(";
var G__103836 = (function (){var G__103928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103929 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103928,G__103929) : tailrecursion.hoplon.span.call(null,G__103928,G__103929));
})();
var G__103837 = " ";
var G__103838 = (function (){var G__103930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103931 = "2.5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103930,G__103931) : tailrecursion.hoplon.span.call(null,G__103930,G__103931));
})();
var G__103839 = " ";
var G__103840 = (function (){var G__103932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103933 = "11.6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103932,G__103933) : tailrecursion.hoplon.span.call(null,G__103932,G__103933));
})();
var G__103841 = " ";
var G__103842 = (function (){var G__103934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103935 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103934,G__103935) : tailrecursion.hoplon.span.call(null,G__103934,G__103935));
})();
var G__103843 = ")\n(";
var G__103844 = (function (){var G__103936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103937 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103936,G__103937) : tailrecursion.hoplon.span.call(null,G__103936,G__103937));
})();
var G__103845 = "(";
var G__103846 = (function (){var G__103938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103939 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103938,G__103939) : tailrecursion.hoplon.span.call(null,G__103938,G__103939));
})();
var G__103847 = "[";
var G__103848 = (function (){var G__103940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103941 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103940,G__103941) : tailrecursion.hoplon.span.call(null,G__103940,G__103941));
})();
var G__103849 = "] (";
var G__103850 = (function (){var G__103942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103943 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103942,G__103943) : tailrecursion.hoplon.span.call(null,G__103942,G__103943));
})();
var G__103851 = (function (){var G__103944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103945 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103944,G__103945) : tailrecursion.hoplon.span.call(null,G__103944,G__103945));
})();
var G__103852 = " ";
var G__103853 = (function (){var G__103946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103947 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103946,G__103947) : tailrecursion.hoplon.span.call(null,G__103946,G__103947));
})();
var G__103854 = "))\n     (";
var G__103855 = (function (){var G__103948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103949 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103948,G__103949) : tailrecursion.hoplon.span.call(null,G__103948,G__103949));
})();
var G__103856 = (function (){var G__103950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103951 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103950,G__103951) : tailrecursion.hoplon.span.call(null,G__103950,G__103951));
})();
var G__103857 = " ";
var G__103858 = (function (){var G__103952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103953 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103952,G__103953) : tailrecursion.hoplon.span.call(null,G__103952,G__103953));
})();
var G__103859 = " ";
var G__103860 = (function (){var G__103954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103955 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103954,G__103955) : tailrecursion.hoplon.span.call(null,G__103954,G__103955));
})();
var G__103861 = " ";
var G__103862 = (function (){var G__103956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103957 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103956,G__103957) : tailrecursion.hoplon.span.call(null,G__103956,G__103957));
})();
var G__103863 = "))\n(";
var G__103864 = (function (){var G__103958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103959 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103958,G__103959) : tailrecursion.hoplon.span.call(null,G__103958,G__103959));
})();
var G__103865 = " ";
var G__103866 = (function (){var G__103960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103961 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103960,G__103961) : tailrecursion.hoplon.span.call(null,G__103960,G__103961));
})();
var G__103867 = " ";
var G__103868 = (function (){var G__103962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103963 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103962,G__103963) : tailrecursion.hoplon.span.call(null,G__103962,G__103963));
})();
var G__103869 = " ";
var G__103870 = (function (){var G__103964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103965 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103964,G__103965) : tailrecursion.hoplon.span.call(null,G__103964,G__103965));
})();
var G__103871 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$87 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$87(G__103785,G__103786,G__103787,G__103788,G__103789,G__103790,G__103791,G__103792,G__103793,G__103794,G__103795,G__103796,G__103797,G__103798,G__103799,G__103800,G__103801,G__103802,G__103803,G__103804,G__103805,G__103806,G__103807,G__103808,G__103809,G__103810,G__103811,G__103812,G__103813,G__103814,G__103815,G__103816,G__103817,G__103818,G__103819,G__103820,G__103821,G__103822,G__103823,G__103824,G__103825,G__103826,G__103827,G__103828,G__103829,G__103830,G__103831,G__103832,G__103833,G__103834,G__103835,G__103836,G__103837,G__103838,G__103839,G__103840,G__103841,G__103842,G__103843,G__103844,G__103845,G__103846,G__103847,G__103848,G__103849,G__103850,G__103851,G__103852,G__103853,G__103854,G__103855,G__103856,G__103857,G__103858,G__103859,G__103860,G__103861,G__103862,G__103863,G__103864,G__103865,G__103866,G__103867,G__103868,G__103869,G__103870,G__103871) : tailrecursion.hoplon.pre.call(null,G__103785,G__103786,G__103787,G__103788,G__103789,G__103790,G__103791,G__103792,G__103793,G__103794,G__103795,G__103796,G__103797,G__103798,G__103799,G__103800,G__103801,G__103802,G__103803,G__103804,G__103805,G__103806,G__103807,G__103808,G__103809,G__103810,G__103811,G__103812,G__103813,G__103814,G__103815,G__103816,G__103817,G__103818,G__103819,G__103820,G__103821,G__103822,G__103823,G__103824,G__103825,G__103826,G__103827,G__103828,G__103829,G__103830,G__103831,G__103832,G__103833,G__103834,G__103835,G__103836,G__103837,G__103838,G__103839,G__103840,G__103841,G__103842,G__103843,G__103844,G__103845,G__103846,G__103847,G__103848,G__103849,G__103850,G__103851,G__103852,G__103853,G__103854,G__103855,G__103856,G__103857,G__103858,G__103859,G__103860,G__103861,G__103862,G__103863,G__103864,G__103865,G__103866,G__103867,G__103868,G__103869,G__103870,G__103871));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103783,G__103784) : tailrecursion.hoplon.div.call(null,G__103783,G__103784));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103782) : tailrecursion.hoplon.div.call(null,G__103782));
})(),(function (){var G__103966 = cljs.core.PersistentArrayMap.EMPTY;
var G__103967 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__103968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103968,G__103969) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103968,G__103969));
})(),"s try to make this one iterative as well!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103966,G__103967) : tailrecursion.hoplon.markdown.para_node.call(null,G__103966,G__103967));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103769;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103768;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103766;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103970 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103971 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103972 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103973 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103974 = (function (){var G__103975 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103976 = (function (){var G__103977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103978 = "(";
var G__103979 = (function (){var G__104029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104030 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104029,G__104030) : tailrecursion.hoplon.span.call(null,G__104029,G__104030));
})();
var G__103980 = (function (){var G__104031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104032 = "map*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104031,G__104032) : tailrecursion.hoplon.span.call(null,G__104031,G__104032));
})();
var G__103981 = " [";
var G__103982 = (function (){var G__104033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104034 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104033,G__104034) : tailrecursion.hoplon.span.call(null,G__104033,G__104034));
})();
var G__103983 = " ";
var G__103984 = (function (){var G__104035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104036 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104035,G__104036) : tailrecursion.hoplon.span.call(null,G__104035,G__104036));
})();
var G__103985 = "]\n  (";
var G__103986 = (function (){var G__104037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104038 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104037,G__104038) : tailrecursion.hoplon.span.call(null,G__104037,G__104038));
})();
var G__103987 = "[";
var G__103988 = (function (){var G__104039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104040 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104039,G__104040) : tailrecursion.hoplon.span.call(null,G__104039,G__104040));
})();
var G__103989 = " ";
var G__103990 = (function (){var G__104041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104042 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104041,G__104042) : tailrecursion.hoplon.span.call(null,G__104041,G__104042));
})();
var G__103991 = "\n         ";
var G__103992 = (function (){var G__104043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104044 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104043,G__104044) : tailrecursion.hoplon.span.call(null,G__104043,G__104044));
})();
var G__103993 = "   (";
var G__103994 = (function (){var G__104045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104046 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104045,G__104046) : tailrecursion.hoplon.span.call(null,G__104045,G__104046));
})();
var G__103995 = ")]\n    (";
var G__103996 = (function (){var G__104047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104048 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104047,G__104048) : tailrecursion.hoplon.span.call(null,G__104047,G__104048));
})();
var G__103997 = "(";
var G__103998 = (function (){var G__104049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104050 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104049,G__104050) : tailrecursion.hoplon.span.call(null,G__104049,G__104050));
})();
var G__103999 = " ";
var G__104000 = (function (){var G__104051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104052 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104051,G__104052) : tailrecursion.hoplon.span.call(null,G__104051,G__104052));
})();
var G__104001 = ")\n        ";
var G__104002 = (function (){var G__104053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104054 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104053,G__104054) : tailrecursion.hoplon.span.call(null,G__104053,G__104054));
})();
var G__104003 = "\n        (";
var G__104004 = (function (){var G__104055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104056 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104055,G__104056) : tailrecursion.hoplon.span.call(null,G__104055,G__104056));
})();
var G__104005 = " (";
var G__104006 = (function (){var G__104057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104058 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104057,G__104058) : tailrecursion.hoplon.span.call(null,G__104057,G__104058));
})();
var G__104007 = (function (){var G__104059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104060 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104059,G__104060) : tailrecursion.hoplon.span.call(null,G__104059,G__104060));
})();
var G__104008 = "\n                     (";
var G__104009 = (function (){var G__104061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104062 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104061,G__104062) : tailrecursion.hoplon.span.call(null,G__104061,G__104062));
})();
var G__104010 = " (";
var G__104011 = (function (){var G__104063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104064 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104063,G__104064) : tailrecursion.hoplon.span.call(null,G__104063,G__104064));
})();
var G__104012 = (function (){var G__104065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104066 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104065,G__104066) : tailrecursion.hoplon.span.call(null,G__104065,G__104066));
})();
var G__104013 = ")))))))\n(";
var G__104014 = (function (){var G__104067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104068 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104067,G__104068) : tailrecursion.hoplon.span.call(null,G__104067,G__104068));
})();
var G__104015 = (function (){var G__104069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104070 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104069,G__104070) : tailrecursion.hoplon.span.call(null,G__104069,G__104070));
})();
var G__104016 = "[";
var G__104017 = (function (){var G__104071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104072 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104071,G__104072) : tailrecursion.hoplon.span.call(null,G__104071,G__104072));
})();
var G__104018 = " ";
var G__104019 = (function (){var G__104073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104074 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104073,G__104074) : tailrecursion.hoplon.span.call(null,G__104073,G__104074));
})();
var G__104020 = "]\n  (";
var G__104021 = (function (){var G__104075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104076 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104075,G__104076) : tailrecursion.hoplon.span.call(null,G__104075,G__104076));
})();
var G__104022 = "(";
var G__104023 = (function (){var G__104077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104078 = "map*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104077,G__104078) : tailrecursion.hoplon.span.call(null,G__104077,G__104078));
})();
var G__104024 = " ";
var G__104025 = (function (){var G__104079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104080 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104079,G__104080) : tailrecursion.hoplon.span.call(null,G__104079,G__104080));
})();
var G__104026 = " ";
var G__104027 = (function (){var G__104081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104082 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104081,G__104082) : tailrecursion.hoplon.span.call(null,G__104081,G__104082));
})();
var G__104028 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__103977,G__103978,G__103979,G__103980,G__103981,G__103982,G__103983,G__103984,G__103985,G__103986,G__103987,G__103988,G__103989,G__103990,G__103991,G__103992,G__103993,G__103994,G__103995,G__103996,G__103997,G__103998,G__103999,G__104000,G__104001,G__104002,G__104003,G__104004,G__104005,G__104006,G__104007,G__104008,G__104009,G__104010,G__104011,G__104012,G__104013,G__104014,G__104015,G__104016,G__104017,G__104018,G__104019,G__104020,G__104021,G__104022,G__104023,G__104024,G__104025,G__104026,G__104027,G__104028) : tailrecursion.hoplon.pre.call(null,G__103977,G__103978,G__103979,G__103980,G__103981,G__103982,G__103983,G__103984,G__103985,G__103986,G__103987,G__103988,G__103989,G__103990,G__103991,G__103992,G__103993,G__103994,G__103995,G__103996,G__103997,G__103998,G__103999,G__104000,G__104001,G__104002,G__104003,G__104004,G__104005,G__104006,G__104007,G__104008,G__104009,G__104010,G__104011,G__104012,G__104013,G__104014,G__104015,G__104016,G__104017,G__104018,G__104019,G__104020,G__104021,G__104022,G__104023,G__104024,G__104025,G__104026,G__104027,G__104028));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103975,G__103976) : tailrecursion.hoplon.div.call(null,G__103975,G__103976));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103974) : tailrecursion.hoplon.div.call(null,G__103974));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103973;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103972;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103971;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103970;
}})()], 0)),"",(function (){var _STAR_references_STAR_104083 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104084 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104087 = cljs.core.PersistentArrayMap.EMPTY;
var G__104088 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can give a new definition of ",(function (){var G__104089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__104090 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104089,G__104090) : tailrecursion.hoplon.markdown.code_node.call(null,G__104089,G__104090));
})()," in terms of ",(function (){var G__104091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104092 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104091,G__104092) : tailrecursion.hoplon.markdown.code_node.call(null,G__104091,G__104092));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104087,G__104088) : tailrecursion.hoplon.markdown.para_node.call(null,G__104087,G__104088));
})(),(function (){var G__104093 = (function (){var G__104094 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104095 = (function (){var G__104096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104097 = "(";
var G__104098 = (function (){var G__104118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104119 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104118,G__104119) : tailrecursion.hoplon.span.call(null,G__104118,G__104119));
})();
var G__104099 = (function (){var G__104120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104121 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104120,G__104121) : tailrecursion.hoplon.span.call(null,G__104120,G__104121));
})();
var G__104100 = " [";
var G__104101 = (function (){var G__104122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104123 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104122,G__104123) : tailrecursion.hoplon.span.call(null,G__104122,G__104123));
})();
var G__104102 = " ";
var G__104103 = (function (){var G__104124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104125 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104124,G__104125) : tailrecursion.hoplon.span.call(null,G__104124,G__104125));
})();
var G__104104 = "]\n  (";
var G__104105 = (function (){var G__104126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104127 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104126,G__104127) : tailrecursion.hoplon.span.call(null,G__104126,G__104127));
})();
var G__104106 = "(";
var G__104107 = (function (){var G__104128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104129 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104128,G__104129) : tailrecursion.hoplon.span.call(null,G__104128,G__104129));
})();
var G__104108 = "[";
var G__104109 = (function (){var G__104130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104131 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104130,G__104131) : tailrecursion.hoplon.span.call(null,G__104130,G__104131));
})();
var G__104110 = "] (";
var G__104111 = (function (){var G__104132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104133 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104132,G__104133) : tailrecursion.hoplon.span.call(null,G__104132,G__104133));
})();
var G__104112 = (function (){var G__104134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104135 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104134,G__104135) : tailrecursion.hoplon.span.call(null,G__104134,G__104135));
})();
var G__104113 = " ";
var G__104114 = (function (){var G__104136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104137 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104136,G__104137) : tailrecursion.hoplon.span.call(null,G__104136,G__104137));
})();
var G__104115 = "))\n       ";
var G__104116 = (function (){var G__104138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104139 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104138,G__104139) : tailrecursion.hoplon.span.call(null,G__104138,G__104139));
})();
var G__104117 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__104096,G__104097,G__104098,G__104099,G__104100,G__104101,G__104102,G__104103,G__104104,G__104105,G__104106,G__104107,G__104108,G__104109,G__104110,G__104111,G__104112,G__104113,G__104114,G__104115,G__104116,G__104117) : tailrecursion.hoplon.pre.call(null,G__104096,G__104097,G__104098,G__104099,G__104100,G__104101,G__104102,G__104103,G__104104,G__104105,G__104106,G__104107,G__104108,G__104109,G__104110,G__104111,G__104112,G__104113,G__104114,G__104115,G__104116,G__104117));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104094,G__104095) : tailrecursion.hoplon.div.call(null,G__104094,G__104095));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104093) : tailrecursion.hoplon.div.call(null,G__104093));
})(),(function (){var G__104140 = cljs.core.PersistentArrayMap.EMPTY;
var G__104141 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104143 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104142,G__104143) : tailrecursion.hoplon.markdown.code_node.call(null,G__104142,G__104143));
})()," is an important construct, not only because it captures a common pattern, but because it establishes a higher level of abstraction in dealing with lists. In the original definition of ",(function (){var G__104144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__104145 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104144,G__104145) : tailrecursion.hoplon.markdown.code_node.call(null,G__104144,G__104145));
})(),", the recursive structure of the program draws attention to the element-by-element processing of the list. Defining ",(function (){var G__104146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__104147 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104146,G__104147) : tailrecursion.hoplon.markdown.code_node.call(null,G__104146,G__104147));
})()," in terms of ",(function (){var G__104148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104149 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104148,G__104149) : tailrecursion.hoplon.markdown.code_node.call(null,G__104148,G__104149));
})()," surpresses that level of detail and emphasizes that scaling transforms a list of elements to a list of results. The difference between the two definitions is not that the computer is performing a differnt process (it isn",(function (){var G__104150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__104151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104150,G__104151) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104150,G__104151));
})(),"t) but that we think about the process differently. In effect, ",(function (){var G__104152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104152,G__104153) : tailrecursion.hoplon.markdown.code_node.call(null,G__104152,G__104153));
})()," helps establish an abstraction barrier that isolates the implementation of procedures that transform lists from the details of how the elements of the list are extracted and combined. Like the barriers shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),", this abstraction gives us the flexibility to change the low-level details of how sequences are implemented, while preserving the conceptual framework of operations that transform sequences to sequences. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Section 2.2.3"], null)], 0))," expands on this use of sequences as a framework for organizing programs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104140,G__104141) : tailrecursion.hoplon.markdown.para_node.call(null,G__104140,G__104141));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104085;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104084;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104083;
}})()], 0));
var G__101388 = "";
var G__101389 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104154 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104155 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104156 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104157 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104158 = cljs.core.PersistentArrayMap.EMPTY;
var G__104159 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedure ",(function (){var G__104160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__104161 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104160,G__104161) : tailrecursion.hoplon.markdown.code_node.call(null,G__104160,G__104161));
})()," takes a list of numbers as arguments and returns a list of the squares of those numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104158,G__104159) : tailrecursion.hoplon.markdown.para_node.call(null,G__104158,G__104159));
})(),(function (){var G__104162 = (function (){var G__104163 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104164 = (function (){var G__104165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104166 = "(";
var G__104167 = (function (){var G__104186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104187 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104186,G__104187) : tailrecursion.hoplon.span.call(null,G__104186,G__104187));
})();
var G__104168 = " (";
var G__104169 = (function (){var G__104188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104189 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104188,G__104189) : tailrecursion.hoplon.span.call(null,G__104188,G__104189));
})();
var G__104170 = (function (){var G__104190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104191 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104190,G__104191) : tailrecursion.hoplon.span.call(null,G__104190,G__104191));
})();
var G__104171 = " ";
var G__104172 = (function (){var G__104192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104193 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104192,G__104193) : tailrecursion.hoplon.span.call(null,G__104192,G__104193));
})();
var G__104173 = " ";
var G__104174 = (function (){var G__104194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104195 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104194,G__104195) : tailrecursion.hoplon.span.call(null,G__104194,G__104195));
})();
var G__104175 = " ";
var G__104176 = (function (){var G__104196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104197 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104196,G__104197) : tailrecursion.hoplon.span.call(null,G__104196,G__104197));
})();
var G__104177 = "))\n(";
var G__104178 = (function (){var G__104198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104199 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104198,G__104199) : tailrecursion.hoplon.span.call(null,G__104198,G__104199));
})();
var G__104179 = " ";
var G__104180 = (function (){var G__104200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104201 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104200,G__104201) : tailrecursion.hoplon.span.call(null,G__104200,G__104201));
})();
var G__104181 = " ";
var G__104182 = (function (){var G__104202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104203 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104202,G__104203) : tailrecursion.hoplon.span.call(null,G__104202,G__104203));
})();
var G__104183 = " ";
var G__104184 = (function (){var G__104204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104205 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104204,G__104205) : tailrecursion.hoplon.span.call(null,G__104204,G__104205));
})();
var G__104185 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__104165,G__104166,G__104167,G__104168,G__104169,G__104170,G__104171,G__104172,G__104173,G__104174,G__104175,G__104176,G__104177,G__104178,G__104179,G__104180,G__104181,G__104182,G__104183,G__104184,G__104185) : tailrecursion.hoplon.pre.call(null,G__104165,G__104166,G__104167,G__104168,G__104169,G__104170,G__104171,G__104172,G__104173,G__104174,G__104175,G__104176,G__104177,G__104178,G__104179,G__104180,G__104181,G__104182,G__104183,G__104184,G__104185));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104163,G__104164) : tailrecursion.hoplon.div.call(null,G__104163,G__104164));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104162) : tailrecursion.hoplon.div.call(null,G__104162));
})(),(function (){var G__104206 = cljs.core.PersistentArrayMap.EMPTY;
var G__104207 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here are two different definitions of ",(function (){var G__104208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__104209 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104208,G__104209) : tailrecursion.hoplon.markdown.code_node.call(null,G__104208,G__104209));
})(),". Complete both of them by filling in the missing expressions:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104206,G__104207) : tailrecursion.hoplon.markdown.para_node.call(null,G__104206,G__104207));
})(),(function (){var G__104210 = (function (){var G__104211 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104212 = (function (){var G__104213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104214 = "(";
var G__104215 = (function (){var G__104255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104256 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104255,G__104256) : tailrecursion.hoplon.span.call(null,G__104255,G__104256));
})();
var G__104216 = (function (){var G__104257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104258 = "square-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104257,G__104258) : tailrecursion.hoplon.span.call(null,G__104257,G__104258));
})();
var G__104217 = " [";
var G__104218 = (function (){var G__104259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104260 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104259,G__104260) : tailrecursion.hoplon.span.call(null,G__104259,G__104260));
})();
var G__104219 = "]\n  (";
var G__104220 = (function (){var G__104261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104262 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104261,G__104262) : tailrecursion.hoplon.span.call(null,G__104261,G__104262));
})();
var G__104221 = "[";
var G__104222 = (function (){var G__104263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104264 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104263,G__104264) : tailrecursion.hoplon.span.call(null,G__104263,G__104264));
})();
var G__104223 = " ";
var G__104224 = (function (){var G__104265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104266 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104265,G__104266) : tailrecursion.hoplon.span.call(null,G__104265,G__104266));
})();
var G__104225 = "\n         ";
var G__104226 = (function (){var G__104267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104268 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104267,G__104268) : tailrecursion.hoplon.span.call(null,G__104267,G__104268));
})();
var G__104227 = "   (";
var G__104228 = (function (){var G__104269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104270 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104269,G__104270) : tailrecursion.hoplon.span.call(null,G__104269,G__104270));
})();
var G__104229 = ")] \n    (";
var G__104230 = (function (){var G__104271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104272 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104271,G__104272) : tailrecursion.hoplon.span.call(null,G__104271,G__104272));
})();
var G__104231 = "(";
var G__104232 = (function (){var G__104273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104274 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104273,G__104274) : tailrecursion.hoplon.span.call(null,G__104273,G__104274));
})();
var G__104233 = " ";
var G__104234 = (function (){var G__104275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104276 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104275,G__104276) : tailrecursion.hoplon.span.call(null,G__104275,G__104276));
})();
var G__104235 = ")\n        ";
var G__104236 = (function (){var G__104277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104278 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104277,G__104278) : tailrecursion.hoplon.span.call(null,G__104277,G__104278));
})();
var G__104237 = "\n        (";
var G__104238 = (function (){var G__104279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104280 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104279,G__104280) : tailrecursion.hoplon.span.call(null,G__104279,G__104280));
})();
var G__104239 = " ";
var G__104240 = (function (){var G__104281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104282 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104281,G__104282) : tailrecursion.hoplon.span.call(null,G__104281,G__104282));
})();
var G__104241 = " ";
var G__104242 = (function (){var G__104283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104284 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104283,G__104284) : tailrecursion.hoplon.span.call(null,G__104283,G__104284));
})();
var G__104243 = "))))\n(";
var G__104244 = (function (){var G__104285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104286 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104285,G__104286) : tailrecursion.hoplon.span.call(null,G__104285,G__104286));
})();
var G__104245 = (function (){var G__104287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104288 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104287,G__104288) : tailrecursion.hoplon.span.call(null,G__104287,G__104288));
})();
var G__104246 = " [";
var G__104247 = (function (){var G__104289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104290 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104289,G__104290) : tailrecursion.hoplon.span.call(null,G__104289,G__104290));
})();
var G__104248 = "]\n  (";
var G__104249 = (function (){var G__104291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104292 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104291,G__104292) : tailrecursion.hoplon.span.call(null,G__104291,G__104292));
})();
var G__104250 = "(";
var G__104251 = (function (){var G__104293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104294 = "square-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104293,G__104294) : tailrecursion.hoplon.span.call(null,G__104293,G__104294));
})();
var G__104252 = " ";
var G__104253 = (function (){var G__104295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104296 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104295,G__104296) : tailrecursion.hoplon.span.call(null,G__104295,G__104296));
})();
var G__104254 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__104213,G__104214,G__104215,G__104216,G__104217,G__104218,G__104219,G__104220,G__104221,G__104222,G__104223,G__104224,G__104225,G__104226,G__104227,G__104228,G__104229,G__104230,G__104231,G__104232,G__104233,G__104234,G__104235,G__104236,G__104237,G__104238,G__104239,G__104240,G__104241,G__104242,G__104243,G__104244,G__104245,G__104246,G__104247,G__104248,G__104249,G__104250,G__104251,G__104252,G__104253,G__104254) : tailrecursion.hoplon.pre.call(null,G__104213,G__104214,G__104215,G__104216,G__104217,G__104218,G__104219,G__104220,G__104221,G__104222,G__104223,G__104224,G__104225,G__104226,G__104227,G__104228,G__104229,G__104230,G__104231,G__104232,G__104233,G__104234,G__104235,G__104236,G__104237,G__104238,G__104239,G__104240,G__104241,G__104242,G__104243,G__104244,G__104245,G__104246,G__104247,G__104248,G__104249,G__104250,G__104251,G__104252,G__104253,G__104254));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104211,G__104212) : tailrecursion.hoplon.div.call(null,G__104211,G__104212));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104210) : tailrecursion.hoplon.div.call(null,G__104210));
})(),(function (){var G__104297 = cljs.core.PersistentArrayMap.EMPTY;
var G__104298 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104297,G__104298) : tailrecursion.hoplon.markdown.para_node.call(null,G__104297,G__104298));
})(),(function (){var G__104299 = (function (){var G__104300 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104301 = (function (){var G__104302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104303 = "(";
var G__104304 = (function (){var G__104314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104315 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104314,G__104315) : tailrecursion.hoplon.span.call(null,G__104314,G__104315));
})();
var G__104305 = (function (){var G__104316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104317 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104316,G__104317) : tailrecursion.hoplon.span.call(null,G__104316,G__104317));
})();
var G__104306 = " [";
var G__104307 = (function (){var G__104318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104319 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104318,G__104319) : tailrecursion.hoplon.span.call(null,G__104318,G__104319));
})();
var G__104308 = "]\n  (";
var G__104309 = (function (){var G__104320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104321 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104320,G__104321) : tailrecursion.hoplon.span.call(null,G__104320,G__104321));
})();
var G__104310 = (function (){var G__104322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104323 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104322,G__104323) : tailrecursion.hoplon.span.call(null,G__104322,G__104323));
})();
var G__104311 = " ";
var G__104312 = (function (){var G__104324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104325 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104324,G__104325) : tailrecursion.hoplon.span.call(null,G__104324,G__104325));
})();
var G__104313 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__104302,G__104303,G__104304,G__104305,G__104306,G__104307,G__104308,G__104309,G__104310,G__104311,G__104312,G__104313) : tailrecursion.hoplon.pre.call(null,G__104302,G__104303,G__104304,G__104305,G__104306,G__104307,G__104308,G__104309,G__104310,G__104311,G__104312,G__104313));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104300,G__104301) : tailrecursion.hoplon.div.call(null,G__104300,G__104301));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104299) : tailrecursion.hoplon.div.call(null,G__104299));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104157;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104156;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104155;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104154;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104326 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104327 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104328 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104329 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104330 = (function (){var G__104331 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104332 = (function (){var G__104333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104334 = "(";
var G__104335 = (function (){var G__104381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104382 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104381,G__104382) : tailrecursion.hoplon.span.call(null,G__104381,G__104382));
})();
var G__104336 = (function (){var G__104383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104384 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104383,G__104384) : tailrecursion.hoplon.span.call(null,G__104383,G__104384));
})();
var G__104337 = " [";
var G__104338 = (function (){var G__104385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104386 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104385,G__104386) : tailrecursion.hoplon.span.call(null,G__104385,G__104386));
})();
var G__104339 = "]\n  (";
var G__104340 = (function (){var G__104387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104388 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104387,G__104388) : tailrecursion.hoplon.span.call(null,G__104387,G__104388));
})();
var G__104341 = "[";
var G__104342 = (function (){var G__104389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104390 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104389,G__104390) : tailrecursion.hoplon.span.call(null,G__104389,G__104390));
})();
var G__104343 = " ";
var G__104344 = (function (){var G__104391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104392 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104391,G__104392) : tailrecursion.hoplon.span.call(null,G__104391,G__104392));
})();
var G__104345 = "\n         ";
var G__104346 = (function (){var G__104393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104394 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104393,G__104394) : tailrecursion.hoplon.span.call(null,G__104393,G__104394));
})();
var G__104347 = "   (";
var G__104348 = (function (){var G__104395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104396 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104395,G__104396) : tailrecursion.hoplon.span.call(null,G__104395,G__104396));
})();
var G__104349 = ")]\n    (";
var G__104350 = (function (){var G__104397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104398 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104397,G__104398) : tailrecursion.hoplon.span.call(null,G__104397,G__104398));
})();
var G__104351 = "(";
var G__104352 = (function (){var G__104399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104400 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104399,G__104400) : tailrecursion.hoplon.span.call(null,G__104399,G__104400));
})();
var G__104353 = " ";
var G__104354 = (function (){var G__104401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104402 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104401,G__104402) : tailrecursion.hoplon.span.call(null,G__104401,G__104402));
})();
var G__104355 = ")\n        ";
var G__104356 = (function (){var G__104403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104404 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104403,G__104404) : tailrecursion.hoplon.span.call(null,G__104403,G__104404));
})();
var G__104357 = "\n        (";
var G__104358 = (function (){var G__104405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104406 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104405,G__104406) : tailrecursion.hoplon.span.call(null,G__104405,G__104406));
})();
var G__104359 = " (";
var G__104360 = (function (){var G__104407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104408 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104407,G__104408) : tailrecursion.hoplon.span.call(null,G__104407,G__104408));
})();
var G__104361 = (function (){var G__104409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104410 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104409,G__104410) : tailrecursion.hoplon.span.call(null,G__104409,G__104410));
})();
var G__104362 = ")\n               (";
var G__104363 = (function (){var G__104411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104412 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104411,G__104412) : tailrecursion.hoplon.span.call(null,G__104411,G__104412));
})();
var G__104364 = (function (){var G__104413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104414 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104413,G__104414) : tailrecursion.hoplon.span.call(null,G__104413,G__104414));
})();
var G__104365 = " (";
var G__104366 = (function (){var G__104415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104416 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104415,G__104416) : tailrecursion.hoplon.span.call(null,G__104415,G__104416));
})();
var G__104367 = " (";
var G__104368 = (function (){var G__104417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104418 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104417,G__104418) : tailrecursion.hoplon.span.call(null,G__104417,G__104418));
})();
var G__104369 = (function (){var G__104419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104420 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104419,G__104420) : tailrecursion.hoplon.span.call(null,G__104419,G__104420));
})();
var G__104370 = ")))))))\n\n(";
var G__104371 = (function (){var G__104421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104422 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104421,G__104422) : tailrecursion.hoplon.span.call(null,G__104421,G__104422));
})();
var G__104372 = (function (){var G__104423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104424 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104423,G__104424) : tailrecursion.hoplon.span.call(null,G__104423,G__104424));
})();
var G__104373 = " [";
var G__104374 = (function (){var G__104425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104426 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104425,G__104426) : tailrecursion.hoplon.span.call(null,G__104425,G__104426));
})();
var G__104375 = "]\n  (";
var G__104376 = (function (){var G__104427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104428 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104427,G__104428) : tailrecursion.hoplon.span.call(null,G__104427,G__104428));
})();
var G__104377 = (function (){var G__104429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104430 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104429,G__104430) : tailrecursion.hoplon.span.call(null,G__104429,G__104430));
})();
var G__104378 = " ";
var G__104379 = (function (){var G__104431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104432 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104431,G__104432) : tailrecursion.hoplon.span.call(null,G__104431,G__104432));
})();
var G__104380 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__104333,G__104334,G__104335,G__104336,G__104337,G__104338,G__104339,G__104340,G__104341,G__104342,G__104343,G__104344,G__104345,G__104346,G__104347,G__104348,G__104349,G__104350,G__104351,G__104352,G__104353,G__104354,G__104355,G__104356,G__104357,G__104358,G__104359,G__104360,G__104361,G__104362,G__104363,G__104364,G__104365,G__104366,G__104367,G__104368,G__104369,G__104370,G__104371,G__104372,G__104373,G__104374,G__104375,G__104376,G__104377,G__104378,G__104379,G__104380) : tailrecursion.hoplon.pre.call(null,G__104333,G__104334,G__104335,G__104336,G__104337,G__104338,G__104339,G__104340,G__104341,G__104342,G__104343,G__104344,G__104345,G__104346,G__104347,G__104348,G__104349,G__104350,G__104351,G__104352,G__104353,G__104354,G__104355,G__104356,G__104357,G__104358,G__104359,G__104360,G__104361,G__104362,G__104363,G__104364,G__104365,G__104366,G__104367,G__104368,G__104369,G__104370,G__104371,G__104372,G__104373,G__104374,G__104375,G__104376,G__104377,G__104378,G__104379,G__104380));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104331,G__104332) : tailrecursion.hoplon.div.call(null,G__104331,G__104332));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104330) : tailrecursion.hoplon.div.call(null,G__104330));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104329;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104328;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104327;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104326;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104433 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104434 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104435 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104436 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104437 = cljs.core.PersistentArrayMap.EMPTY;
var G__104438 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner tries to rewrite the first ",(function (){var G__104439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__104440 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104439,G__104440) : tailrecursion.hoplon.markdown.code_node.call(null,G__104439,G__104440));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/21/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.21"], null)], 0))," so that it evolves an iterative process:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104437,G__104438) : tailrecursion.hoplon.markdown.para_node.call(null,G__104437,G__104438));
})(),(function (){var G__104441 = (function (){var G__104442 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104443 = (function (){var G__104444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104445 = "(";
var G__104446 = (function (){var G__104482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104483 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104482,G__104483) : tailrecursion.hoplon.span.call(null,G__104482,G__104483));
})();
var G__104447 = (function (){var G__104484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104485 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104484,G__104485) : tailrecursion.hoplon.span.call(null,G__104484,G__104485));
})();
var G__104448 = " [";
var G__104449 = (function (){var G__104486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104487 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104486,G__104487) : tailrecursion.hoplon.span.call(null,G__104486,G__104487));
})();
var G__104450 = "]\n  (";
var G__104451 = (function (){var G__104488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104489 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104488,G__104489) : tailrecursion.hoplon.span.call(null,G__104488,G__104489));
})();
var G__104452 = "[";
var G__104453 = (function (){var G__104490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104491 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104490,G__104491) : tailrecursion.hoplon.span.call(null,G__104490,G__104491));
})();
var G__104454 = " ";
var G__104455 = (function (){var G__104492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104493 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104492,G__104493) : tailrecursion.hoplon.span.call(null,G__104492,G__104493));
})();
var G__104456 = "\n         ";
var G__104457 = (function (){var G__104494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104495 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104494,G__104495) : tailrecursion.hoplon.span.call(null,G__104494,G__104495));
})();
var G__104458 = "   (";
var G__104459 = (function (){var G__104496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104497 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104496,G__104497) : tailrecursion.hoplon.span.call(null,G__104496,G__104497));
})();
var G__104460 = ")]\n    (";
var G__104461 = (function (){var G__104498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104499 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104498,G__104499) : tailrecursion.hoplon.span.call(null,G__104498,G__104499));
})();
var G__104462 = "(";
var G__104463 = (function (){var G__104500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104501 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104500,G__104501) : tailrecursion.hoplon.span.call(null,G__104500,G__104501));
})();
var G__104464 = " ";
var G__104465 = (function (){var G__104502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104503 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104502,G__104503) : tailrecursion.hoplon.span.call(null,G__104502,G__104503));
})();
var G__104466 = ")\n        ";
var G__104467 = (function (){var G__104504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104505 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104504,G__104505) : tailrecursion.hoplon.span.call(null,G__104504,G__104505));
})();
var G__104468 = "\n        (";
var G__104469 = (function (){var G__104506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104507 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104506,G__104507) : tailrecursion.hoplon.span.call(null,G__104506,G__104507));
})();
var G__104470 = " (";
var G__104471 = (function (){var G__104508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104509 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104508,G__104509) : tailrecursion.hoplon.span.call(null,G__104508,G__104509));
})();
var G__104472 = (function (){var G__104510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104511 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104510,G__104511) : tailrecursion.hoplon.span.call(null,G__104510,G__104511));
})();
var G__104473 = ")\n               (";
var G__104474 = (function (){var G__104512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104513 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104512,G__104513) : tailrecursion.hoplon.span.call(null,G__104512,G__104513));
})();
var G__104475 = (function (){var G__104514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104515 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104514,G__104515) : tailrecursion.hoplon.span.call(null,G__104514,G__104515));
})();
var G__104476 = " \n                     (";
var G__104477 = (function (){var G__104516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104517 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104516,G__104517) : tailrecursion.hoplon.span.call(null,G__104516,G__104517));
})();
var G__104478 = " (";
var G__104479 = (function (){var G__104518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104519 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104518,G__104519) : tailrecursion.hoplon.span.call(null,G__104518,G__104519));
})();
var G__104480 = (function (){var G__104520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104521 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104520,G__104521) : tailrecursion.hoplon.span.call(null,G__104520,G__104521));
})();
var G__104481 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__104444,G__104445,G__104446,G__104447,G__104448,G__104449,G__104450,G__104451,G__104452,G__104453,G__104454,G__104455,G__104456,G__104457,G__104458,G__104459,G__104460,G__104461,G__104462,G__104463,G__104464,G__104465,G__104466,G__104467,G__104468,G__104469,G__104470,G__104471,G__104472,G__104473,G__104474,G__104475,G__104476,G__104477,G__104478,G__104479,G__104480,G__104481) : tailrecursion.hoplon.pre.call(null,G__104444,G__104445,G__104446,G__104447,G__104448,G__104449,G__104450,G__104451,G__104452,G__104453,G__104454,G__104455,G__104456,G__104457,G__104458,G__104459,G__104460,G__104461,G__104462,G__104463,G__104464,G__104465,G__104466,G__104467,G__104468,G__104469,G__104470,G__104471,G__104472,G__104473,G__104474,G__104475,G__104476,G__104477,G__104478,G__104479,G__104480,G__104481));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104442,G__104443) : tailrecursion.hoplon.div.call(null,G__104442,G__104443));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104441) : tailrecursion.hoplon.div.call(null,G__104441));
})(),(function (){var G__104522 = cljs.core.PersistentArrayMap.EMPTY;
var G__104523 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, defining ",(function (){var G__104524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__104525 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104524,G__104525) : tailrecursion.hoplon.markdown.code_node.call(null,G__104524,G__104525));
})()," this way produces the answer list in the reverse order of the one desired. Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104522,G__104523) : tailrecursion.hoplon.markdown.para_node.call(null,G__104522,G__104523));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104436;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104435;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104434;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104433;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104526 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104527 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104528 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104529 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104530 = cljs.core.PersistentArrayMap.EMPTY;
var G__104531 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As you probably noticed, I used an auxiliary function (decorated with an asterisk) to define the iterative part, then the actual function just applies ",(function (){var G__104532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__104533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104532,G__104533) : tailrecursion.hoplon.markdown.code_node.call(null,G__104532,G__104533));
})()," to the auxiliary one. The reason is, every time we ",(function (){var G__104534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__104535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104534,G__104535) : tailrecursion.hoplon.markdown.code_node.call(null,G__104534,G__104535));
})()," onto a list, the things get put out in front. So if we take things off the front of one list, then put them on the front of the other, we",(function (){var G__104536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__104537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104536,G__104537) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104536,G__104537));
})(),"re reversing the order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104530,G__104531) : tailrecursion.hoplon.markdown.para_node.call(null,G__104530,G__104531));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104529;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104528;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104527;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104526;
}})()], 0)),"",(function (){var _STAR_references_STAR_104538 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104539 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104540 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104541 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104542 = cljs.core.PersistentArrayMap.EMPTY;
var G__104543 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis then tries to fix his bug by using ",(function (){var G__104544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__104545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104544,G__104545) : tailrecursion.hoplon.markdown.code_node.call(null,G__104544,G__104545));
})()," instead of ",(function (){var G__104546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__104547 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104546,G__104547) : tailrecursion.hoplon.markdown.code_node.call(null,G__104546,G__104547));
})(),", and interchanging the arguments to ",(function (){var G__104548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__104549 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104548,G__104549) : tailrecursion.hoplon.markdown.code_node.call(null,G__104548,G__104549));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104542,G__104543) : tailrecursion.hoplon.markdown.para_node.call(null,G__104542,G__104543));
})(),(function (){var G__104550 = (function (){var G__104551 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104552 = (function (){var G__104553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104554 = "(";
var G__104555 = (function (){var G__104591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104592 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104591,G__104592) : tailrecursion.hoplon.span.call(null,G__104591,G__104592));
})();
var G__104556 = (function (){var G__104593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104594 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104593,G__104594) : tailrecursion.hoplon.span.call(null,G__104593,G__104594));
})();
var G__104557 = " [";
var G__104558 = (function (){var G__104595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104596 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104595,G__104596) : tailrecursion.hoplon.span.call(null,G__104595,G__104596));
})();
var G__104559 = "]\n  (";
var G__104560 = (function (){var G__104597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104598 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104597,G__104598) : tailrecursion.hoplon.span.call(null,G__104597,G__104598));
})();
var G__104561 = "[";
var G__104562 = (function (){var G__104599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104600 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104599,G__104600) : tailrecursion.hoplon.span.call(null,G__104599,G__104600));
})();
var G__104563 = " ";
var G__104564 = (function (){var G__104601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104602 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104601,G__104602) : tailrecursion.hoplon.span.call(null,G__104601,G__104602));
})();
var G__104565 = "\n         ";
var G__104566 = (function (){var G__104603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104604 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104603,G__104604) : tailrecursion.hoplon.span.call(null,G__104603,G__104604));
})();
var G__104567 = "   (";
var G__104568 = (function (){var G__104605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104606 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104605,G__104606) : tailrecursion.hoplon.span.call(null,G__104605,G__104606));
})();
var G__104569 = ")]\n    (";
var G__104570 = (function (){var G__104607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104608 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104607,G__104608) : tailrecursion.hoplon.span.call(null,G__104607,G__104608));
})();
var G__104571 = "(";
var G__104572 = (function (){var G__104609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104610 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104609,G__104610) : tailrecursion.hoplon.span.call(null,G__104609,G__104610));
})();
var G__104573 = " ";
var G__104574 = (function (){var G__104611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104612 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104611,G__104612) : tailrecursion.hoplon.span.call(null,G__104611,G__104612));
})();
var G__104575 = ")\n        ";
var G__104576 = (function (){var G__104613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104614 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104613,G__104614) : tailrecursion.hoplon.span.call(null,G__104613,G__104614));
})();
var G__104577 = "\n        (";
var G__104578 = (function (){var G__104615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104616 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104615,G__104616) : tailrecursion.hoplon.span.call(null,G__104615,G__104616));
})();
var G__104579 = " (";
var G__104580 = (function (){var G__104617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104618 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104617,G__104618) : tailrecursion.hoplon.span.call(null,G__104617,G__104618));
})();
var G__104581 = (function (){var G__104619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104620 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104619,G__104620) : tailrecursion.hoplon.span.call(null,G__104619,G__104620));
})();
var G__104582 = ")\n               (";
var G__104583 = (function (){var G__104621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104622 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104621,G__104622) : tailrecursion.hoplon.span.call(null,G__104621,G__104622));
})();
var G__104584 = (function (){var G__104623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104624 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104623,G__104624) : tailrecursion.hoplon.span.call(null,G__104623,G__104624));
})();
var G__104585 = "\n                     (";
var G__104586 = (function (){var G__104625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104626 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104625,G__104626) : tailrecursion.hoplon.span.call(null,G__104625,G__104626));
})();
var G__104587 = " (";
var G__104588 = (function (){var G__104627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104628 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104627,G__104628) : tailrecursion.hoplon.span.call(null,G__104627,G__104628));
})();
var G__104589 = (function (){var G__104629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104630 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104629,G__104630) : tailrecursion.hoplon.span.call(null,G__104629,G__104630));
})();
var G__104590 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__104553,G__104554,G__104555,G__104556,G__104557,G__104558,G__104559,G__104560,G__104561,G__104562,G__104563,G__104564,G__104565,G__104566,G__104567,G__104568,G__104569,G__104570,G__104571,G__104572,G__104573,G__104574,G__104575,G__104576,G__104577,G__104578,G__104579,G__104580,G__104581,G__104582,G__104583,G__104584,G__104585,G__104586,G__104587,G__104588,G__104589,G__104590) : tailrecursion.hoplon.pre.call(null,G__104553,G__104554,G__104555,G__104556,G__104557,G__104558,G__104559,G__104560,G__104561,G__104562,G__104563,G__104564,G__104565,G__104566,G__104567,G__104568,G__104569,G__104570,G__104571,G__104572,G__104573,G__104574,G__104575,G__104576,G__104577,G__104578,G__104579,G__104580,G__104581,G__104582,G__104583,G__104584,G__104585,G__104586,G__104587,G__104588,G__104589,G__104590));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104551,G__104552) : tailrecursion.hoplon.div.call(null,G__104551,G__104552));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104550) : tailrecursion.hoplon.div.call(null,G__104550));
})(),(function (){var G__104631 = cljs.core.PersistentArrayMap.EMPTY;
var G__104632 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This doesn",(function (){var G__104633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__104634 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104633,G__104634) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104633,G__104634));
})(),"t work either. Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104631,G__104632) : tailrecursion.hoplon.markdown.para_node.call(null,G__104631,G__104632));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104541;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104540;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104539;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104538;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104635 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104636 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104637 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104638 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104639 = cljs.core.PersistentArrayMap.EMPTY;
var G__104640 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is not how lists are constructed. Let",(function (){var G__104641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__104642 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104641,G__104642) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104641,G__104642));
})(),"s see what happens with an actual example. Let",(function (){var G__104643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__104644 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104643,G__104644) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104643,G__104644));
})(),"s see what this would return:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104639,G__104640) : tailrecursion.hoplon.markdown.para_node.call(null,G__104639,G__104640));
})(),(function (){var G__104645 = (function (){var G__104646 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104647 = (function (){var G__104648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104649 = "(";
var G__104650 = (function (){var G__104779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104780 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104779,G__104780) : tailrecursion.hoplon.span.call(null,G__104779,G__104780));
})();
var G__104651 = " (";
var G__104652 = (function (){var G__104781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104782 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104781,G__104782) : tailrecursion.hoplon.span.call(null,G__104781,G__104782));
})();
var G__104653 = (function (){var G__104783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104784 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104783,G__104784) : tailrecursion.hoplon.span.call(null,G__104783,G__104784));
})();
var G__104654 = " ";
var G__104655 = (function (){var G__104785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104786 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104785,G__104786) : tailrecursion.hoplon.span.call(null,G__104785,G__104786));
})();
var G__104656 = " ";
var G__104657 = (function (){var G__104787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104788 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104787,G__104788) : tailrecursion.hoplon.span.call(null,G__104787,G__104788));
})();
var G__104658 = "))\n(";
var G__104659 = (function (){var G__104789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104790 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104789,G__104790) : tailrecursion.hoplon.span.call(null,G__104789,G__104790));
})();
var G__104660 = "[";
var G__104661 = (function (){var G__104791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104792 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104791,G__104792) : tailrecursion.hoplon.span.call(null,G__104791,G__104792));
})();
var G__104662 = " (";
var G__104663 = (function (){var G__104793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104794 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104793,G__104794) : tailrecursion.hoplon.span.call(null,G__104793,G__104794));
})();
var G__104664 = (function (){var G__104795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104796 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104795,G__104796) : tailrecursion.hoplon.span.call(null,G__104795,G__104796));
})();
var G__104665 = " ";
var G__104666 = (function (){var G__104797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104798 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104797,G__104798) : tailrecursion.hoplon.span.call(null,G__104797,G__104798));
})();
var G__104667 = " ";
var G__104668 = (function (){var G__104799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104800 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104799,G__104800) : tailrecursion.hoplon.span.call(null,G__104799,G__104800));
})();
var G__104669 = ")\n       ";
var G__104670 = (function (){var G__104801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104802 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104801,G__104802) : tailrecursion.hoplon.span.call(null,G__104801,G__104802));
})();
var G__104671 = "  (";
var G__104672 = (function (){var G__104803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104804 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104803,G__104804) : tailrecursion.hoplon.span.call(null,G__104803,G__104804));
})();
var G__104673 = ")]\n  (";
var G__104674 = (function (){var G__104805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104806 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104805,G__104806) : tailrecursion.hoplon.span.call(null,G__104805,G__104806));
})();
var G__104675 = "(";
var G__104676 = (function (){var G__104807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104808 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104807,G__104808) : tailrecursion.hoplon.span.call(null,G__104807,G__104808));
})();
var G__104677 = " (";
var G__104678 = (function (){var G__104809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104810 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104809,G__104810) : tailrecursion.hoplon.span.call(null,G__104809,G__104810));
})();
var G__104679 = (function (){var G__104811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104812 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104811,G__104812) : tailrecursion.hoplon.span.call(null,G__104811,G__104812));
})();
var G__104680 = " ";
var G__104681 = (function (){var G__104813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104814 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104813,G__104814) : tailrecursion.hoplon.span.call(null,G__104813,G__104814));
})();
var G__104682 = " ";
var G__104683 = (function (){var G__104815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104816 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104815,G__104816) : tailrecursion.hoplon.span.call(null,G__104815,G__104816));
})();
var G__104684 = "))\n      ";
var G__104685 = (function (){var G__104817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104818 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104817,G__104818) : tailrecursion.hoplon.span.call(null,G__104817,G__104818));
})();
var G__104686 = "\n      (";
var G__104687 = (function (){var G__104819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104820 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104819,G__104820) : tailrecursion.hoplon.span.call(null,G__104819,G__104820));
})();
var G__104688 = " (";
var G__104689 = (function (){var G__104821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104822 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104821,G__104822) : tailrecursion.hoplon.span.call(null,G__104821,G__104822));
})();
var G__104690 = "(";
var G__104691 = (function (){var G__104823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104824 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104823,G__104824) : tailrecursion.hoplon.span.call(null,G__104823,G__104824));
})();
var G__104692 = (function (){var G__104825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104826 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104825,G__104826) : tailrecursion.hoplon.span.call(null,G__104825,G__104826));
})();
var G__104693 = " ";
var G__104694 = (function (){var G__104827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104828 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104827,G__104828) : tailrecursion.hoplon.span.call(null,G__104827,G__104828));
})();
var G__104695 = " ";
var G__104696 = (function (){var G__104829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104830 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104829,G__104830) : tailrecursion.hoplon.span.call(null,G__104829,G__104830));
})();
var G__104697 = "))\n             (";
var G__104698 = (function (){var G__104831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104832 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104831,G__104832) : tailrecursion.hoplon.span.call(null,G__104831,G__104832));
})();
var G__104699 = (function (){var G__104833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104834 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104833,G__104834) : tailrecursion.hoplon.span.call(null,G__104833,G__104834));
})();
var G__104700 = " \n                   (";
var G__104701 = (function (){var G__104835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104836 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104835,G__104836) : tailrecursion.hoplon.span.call(null,G__104835,G__104836));
})();
var G__104702 = " (";
var G__104703 = (function (){var G__104837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104838 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104837,G__104838) : tailrecursion.hoplon.span.call(null,G__104837,G__104838));
})();
var G__104704 = "(";
var G__104705 = (function (){var G__104839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104840 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104839,G__104840) : tailrecursion.hoplon.span.call(null,G__104839,G__104840));
})();
var G__104706 = (function (){var G__104841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104842 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104841,G__104842) : tailrecursion.hoplon.span.call(null,G__104841,G__104842));
})();
var G__104707 = " ";
var G__104708 = (function (){var G__104843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104844 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104843,G__104844) : tailrecursion.hoplon.span.call(null,G__104843,G__104844));
})();
var G__104709 = " ";
var G__104710 = (function (){var G__104845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104846 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104845,G__104846) : tailrecursion.hoplon.span.call(null,G__104845,G__104846));
})();
var G__104711 = ")))))))\n(";
var G__104712 = (function (){var G__104847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104848 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104847,G__104848) : tailrecursion.hoplon.span.call(null,G__104847,G__104848));
})();
var G__104713 = " ";
var G__104714 = (function (){var G__104849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104850 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104849,G__104850) : tailrecursion.hoplon.span.call(null,G__104849,G__104850));
})();
var G__104715 = (function (){var G__104851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104852 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104851,G__104852) : tailrecursion.hoplon.span.call(null,G__104851,G__104852));
})();
var G__104716 = " ";
var G__104717 = (function (){var G__104853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104854 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104853,G__104854) : tailrecursion.hoplon.span.call(null,G__104853,G__104854));
})();
var G__104718 = " ";
var G__104719 = (function (){var G__104855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104856 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104855,G__104856) : tailrecursion.hoplon.span.call(null,G__104855,G__104856));
})();
var G__104720 = ") ";
var G__104721 = (function (){var G__104857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__104858 = ";false, so...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104857,G__104858) : tailrecursion.hoplon.span.call(null,G__104857,G__104858));
})();
var G__104722 = "\n(";
var G__104723 = (function (){var G__104859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104860 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104859,G__104860) : tailrecursion.hoplon.span.call(null,G__104859,G__104860));
})();
var G__104724 = " (";
var G__104725 = (function (){var G__104861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104862 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104861,G__104862) : tailrecursion.hoplon.span.call(null,G__104861,G__104862));
})();
var G__104726 = "(";
var G__104727 = (function (){var G__104863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104864 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104863,G__104864) : tailrecursion.hoplon.span.call(null,G__104863,G__104864));
})();
var G__104728 = (function (){var G__104865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104866 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104865,G__104866) : tailrecursion.hoplon.span.call(null,G__104865,G__104866));
})();
var G__104729 = " ";
var G__104730 = (function (){var G__104867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104868 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104867,G__104868) : tailrecursion.hoplon.span.call(null,G__104867,G__104868));
})();
var G__104731 = " ";
var G__104732 = (function (){var G__104869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104870 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104869,G__104870) : tailrecursion.hoplon.span.call(null,G__104869,G__104870));
})();
var G__104733 = "))\n       (";
var G__104734 = (function (){var G__104871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104872 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104871,G__104872) : tailrecursion.hoplon.span.call(null,G__104871,G__104872));
})();
var G__104735 = "(";
var G__104736 = (function (){var G__104873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104874 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104873,G__104874) : tailrecursion.hoplon.span.call(null,G__104873,G__104874));
})();
var G__104737 = ")\n             (";
var G__104738 = (function (){var G__104875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104876 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104875,G__104876) : tailrecursion.hoplon.span.call(null,G__104875,G__104876));
})();
var G__104739 = " (";
var G__104740 = (function (){var G__104877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104878 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104877,G__104878) : tailrecursion.hoplon.span.call(null,G__104877,G__104878));
})();
var G__104741 = "(";
var G__104742 = (function (){var G__104879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104880 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104879,G__104880) : tailrecursion.hoplon.span.call(null,G__104879,G__104880));
})();
var G__104743 = (function (){var G__104881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104882 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104881,G__104882) : tailrecursion.hoplon.span.call(null,G__104881,G__104882));
})();
var G__104744 = " ";
var G__104745 = (function (){var G__104883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104884 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104883,G__104884) : tailrecursion.hoplon.span.call(null,G__104883,G__104884));
})();
var G__104746 = " ";
var G__104747 = (function (){var G__104885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104886 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104885,G__104886) : tailrecursion.hoplon.span.call(null,G__104885,G__104886));
})();
var G__104748 = ")))))\n(";
var G__104749 = (function (){var G__104887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104888 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104887,G__104888) : tailrecursion.hoplon.span.call(null,G__104887,G__104888));
})();
var G__104750 = " (";
var G__104751 = (function (){var G__104889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104890 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104889,G__104890) : tailrecursion.hoplon.span.call(null,G__104889,G__104890));
})();
var G__104752 = (function (){var G__104891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104892 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104891,G__104892) : tailrecursion.hoplon.span.call(null,G__104891,G__104892));
})();
var G__104753 = " ";
var G__104754 = (function (){var G__104893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104894 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104893,G__104894) : tailrecursion.hoplon.span.call(null,G__104893,G__104894));
})();
var G__104755 = ")\n       (";
var G__104756 = (function (){var G__104895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104896 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104895,G__104896) : tailrecursion.hoplon.span.call(null,G__104895,G__104896));
})();
var G__104757 = "(";
var G__104758 = (function (){var G__104897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104898 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104897,G__104898) : tailrecursion.hoplon.span.call(null,G__104897,G__104898));
})();
var G__104759 = ")\n             (";
var G__104760 = (function (){var G__104899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104900 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104899,G__104900) : tailrecursion.hoplon.span.call(null,G__104899,G__104900));
})();
var G__104761 = " ";
var G__104762 = (function (){var G__104901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104902 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104901,G__104902) : tailrecursion.hoplon.span.call(null,G__104901,G__104902));
})();
var G__104763 = ")))\n(";
var G__104764 = (function (){var G__104903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104904 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104903,G__104904) : tailrecursion.hoplon.span.call(null,G__104903,G__104904));
})();
var G__104765 = " (";
var G__104766 = (function (){var G__104905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104906 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104905,G__104906) : tailrecursion.hoplon.span.call(null,G__104905,G__104906));
})();
var G__104767 = (function (){var G__104907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104908 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104907,G__104908) : tailrecursion.hoplon.span.call(null,G__104907,G__104908));
})();
var G__104768 = " ";
var G__104769 = (function (){var G__104909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104910 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104909,G__104910) : tailrecursion.hoplon.span.call(null,G__104909,G__104910));
})();
var G__104770 = ")\n       (";
var G__104771 = (function (){var G__104911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104912 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104911,G__104912) : tailrecursion.hoplon.span.call(null,G__104911,G__104912));
})();
var G__104772 = "(";
var G__104773 = (function (){var G__104913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104914 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104913,G__104914) : tailrecursion.hoplon.span.call(null,G__104913,G__104914));
})();
var G__104774 = ")\n             ";
var G__104775 = (function (){var G__104915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104916 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104915,G__104916) : tailrecursion.hoplon.span.call(null,G__104915,G__104916));
})();
var G__104776 = "))\n";
var G__104777 = (function (){var G__104917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__104918 = ";Error: Don't know how to create ISeq from Java Long.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104917,G__104918) : tailrecursion.hoplon.span.call(null,G__104917,G__104918));
})();
var G__104778 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$131 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$131(G__104648,G__104649,G__104650,G__104651,G__104652,G__104653,G__104654,G__104655,G__104656,G__104657,G__104658,G__104659,G__104660,G__104661,G__104662,G__104663,G__104664,G__104665,G__104666,G__104667,G__104668,G__104669,G__104670,G__104671,G__104672,G__104673,G__104674,G__104675,G__104676,G__104677,G__104678,G__104679,G__104680,G__104681,G__104682,G__104683,G__104684,G__104685,G__104686,G__104687,G__104688,G__104689,G__104690,G__104691,G__104692,G__104693,G__104694,G__104695,G__104696,G__104697,G__104698,G__104699,G__104700,G__104701,G__104702,G__104703,G__104704,G__104705,G__104706,G__104707,G__104708,G__104709,G__104710,G__104711,G__104712,G__104713,G__104714,G__104715,G__104716,G__104717,G__104718,G__104719,G__104720,G__104721,G__104722,G__104723,G__104724,G__104725,G__104726,G__104727,G__104728,G__104729,G__104730,G__104731,G__104732,G__104733,G__104734,G__104735,G__104736,G__104737,G__104738,G__104739,G__104740,G__104741,G__104742,G__104743,G__104744,G__104745,G__104746,G__104747,G__104748,G__104749,G__104750,G__104751,G__104752,G__104753,G__104754,G__104755,G__104756,G__104757,G__104758,G__104759,G__104760,G__104761,G__104762,G__104763,G__104764,G__104765,G__104766,G__104767,G__104768,G__104769,G__104770,G__104771,G__104772,G__104773,G__104774,G__104775,G__104776,G__104777,G__104778) : tailrecursion.hoplon.pre.call(null,G__104648,G__104649,G__104650,G__104651,G__104652,G__104653,G__104654,G__104655,G__104656,G__104657,G__104658,G__104659,G__104660,G__104661,G__104662,G__104663,G__104664,G__104665,G__104666,G__104667,G__104668,G__104669,G__104670,G__104671,G__104672,G__104673,G__104674,G__104675,G__104676,G__104677,G__104678,G__104679,G__104680,G__104681,G__104682,G__104683,G__104684,G__104685,G__104686,G__104687,G__104688,G__104689,G__104690,G__104691,G__104692,G__104693,G__104694,G__104695,G__104696,G__104697,G__104698,G__104699,G__104700,G__104701,G__104702,G__104703,G__104704,G__104705,G__104706,G__104707,G__104708,G__104709,G__104710,G__104711,G__104712,G__104713,G__104714,G__104715,G__104716,G__104717,G__104718,G__104719,G__104720,G__104721,G__104722,G__104723,G__104724,G__104725,G__104726,G__104727,G__104728,G__104729,G__104730,G__104731,G__104732,G__104733,G__104734,G__104735,G__104736,G__104737,G__104738,G__104739,G__104740,G__104741,G__104742,G__104743,G__104744,G__104745,G__104746,G__104747,G__104748,G__104749,G__104750,G__104751,G__104752,G__104753,G__104754,G__104755,G__104756,G__104757,G__104758,G__104759,G__104760,G__104761,G__104762,G__104763,G__104764,G__104765,G__104766,G__104767,G__104768,G__104769,G__104770,G__104771,G__104772,G__104773,G__104774,G__104775,G__104776,G__104777,G__104778));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104646,G__104647) : tailrecursion.hoplon.div.call(null,G__104646,G__104647));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104645) : tailrecursion.hoplon.div.call(null,G__104645));
})(),(function (){var G__104919 = cljs.core.PersistentArrayMap.EMPTY;
var G__104920 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["That happened because ",(function (){var G__104921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__104922 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104921,G__104922) : tailrecursion.hoplon.markdown.code_node.call(null,G__104921,G__104922));
})()," requires a sequential object as its second argument. Since numbers are not sequential objects, we get that error."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104919,G__104920) : tailrecursion.hoplon.markdown.para_node.call(null,G__104919,G__104920));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104638;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104637;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104636;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104635;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104923 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104924 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104925 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104926 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104927 = cljs.core.PersistentArrayMap.EMPTY;
var G__104928 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Scheme procedure ",(function (){var G__104929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__104930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104929,G__104930) : tailrecursion.hoplon.markdown.code_node.call(null,G__104929,G__104930));
})()," is similar to ",(function (){var G__104931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104931,G__104932) : tailrecursion.hoplon.markdown.code_node.call(null,G__104931,G__104932));
})(),". It takes as arguments a procedure and a list of elements. However, rather than forming a list of the results, ",(function (){var G__104933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__104934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104933,G__104934) : tailrecursion.hoplon.markdown.code_node.call(null,G__104933,G__104934));
})()," just applies the procedure to each of the elements in turn, from left to right. The values returned by applying the procedure to the elements are not used at all ",(function (){var G__104935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__104936 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104935,G__104936) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104935,G__104936));
})(),(function (){var G__104937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__104938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104937,G__104938) : tailrecursion.hoplon.markdown.code_node.call(null,G__104937,G__104938));
})()," is used with procedures that perform an action, such as printing. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104927,G__104928) : tailrecursion.hoplon.markdown.para_node.call(null,G__104927,G__104928));
})(),(function (){var G__104939 = (function (){var G__104940 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104941 = (function (){var G__104942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104943 = "(";
var G__104944 = (function (){var G__104968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104969 = "for-each ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104968,G__104969) : tailrecursion.hoplon.span.call(null,G__104968,G__104969));
})();
var G__104945 = "(";
var G__104946 = (function (){var G__104970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104971 = "lambda ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104970,G__104971) : tailrecursion.hoplon.span.call(null,G__104970,G__104971));
})();
var G__104947 = "(";
var G__104948 = (function (){var G__104972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104973 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104972,G__104973) : tailrecursion.hoplon.span.call(null,G__104972,G__104973));
})();
var G__104949 = ") (";
var G__104950 = (function (){var G__104974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104975 = "newline";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104974,G__104975) : tailrecursion.hoplon.span.call(null,G__104974,G__104975));
})();
var G__104951 = ") (";
var G__104952 = (function (){var G__104976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104977 = "display ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104976,G__104977) : tailrecursion.hoplon.span.call(null,G__104976,G__104977));
})();
var G__104953 = (function (){var G__104978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104979 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104978,G__104979) : tailrecursion.hoplon.span.call(null,G__104978,G__104979));
})();
var G__104954 = ")) \n          (";
var G__104955 = (function (){var G__104980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104981 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104980,G__104981) : tailrecursion.hoplon.span.call(null,G__104980,G__104981));
})();
var G__104956 = (function (){var G__104982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104983 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104982,G__104983) : tailrecursion.hoplon.span.call(null,G__104982,G__104983));
})();
var G__104957 = " ";
var G__104958 = (function (){var G__104984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104985 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104984,G__104985) : tailrecursion.hoplon.span.call(null,G__104984,G__104985));
})();
var G__104959 = " ";
var G__104960 = (function (){var G__104986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104987 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104986,G__104987) : tailrecursion.hoplon.span.call(null,G__104986,G__104987));
})();
var G__104961 = "))\n";
var G__104962 = (function (){var G__104988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104989 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104988,G__104989) : tailrecursion.hoplon.span.call(null,G__104988,G__104989));
})();
var G__104963 = "\n";
var G__104964 = (function (){var G__104990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104991 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104990,G__104991) : tailrecursion.hoplon.span.call(null,G__104990,G__104991));
})();
var G__104965 = "\n";
var G__104966 = (function (){var G__104992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104993 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104992,G__104993) : tailrecursion.hoplon.span.call(null,G__104992,G__104993));
})();
var G__104967 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__104942,G__104943,G__104944,G__104945,G__104946,G__104947,G__104948,G__104949,G__104950,G__104951,G__104952,G__104953,G__104954,G__104955,G__104956,G__104957,G__104958,G__104959,G__104960,G__104961,G__104962,G__104963,G__104964,G__104965,G__104966,G__104967) : tailrecursion.hoplon.pre.call(null,G__104942,G__104943,G__104944,G__104945,G__104946,G__104947,G__104948,G__104949,G__104950,G__104951,G__104952,G__104953,G__104954,G__104955,G__104956,G__104957,G__104958,G__104959,G__104960,G__104961,G__104962,G__104963,G__104964,G__104965,G__104966,G__104967));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104940,G__104941) : tailrecursion.hoplon.div.call(null,G__104940,G__104941));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104939) : tailrecursion.hoplon.div.call(null,G__104939));
})(),(function (){var G__104994 = cljs.core.PersistentArrayMap.EMPTY;
var G__104995 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have something similar in Clojure, called ",(function (){var G__104996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__104997 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104996,G__104997) : tailrecursion.hoplon.markdown.code_node.call(null,G__104996,G__104997));
})(),". The function differs mainly in the syntax for calling it. In the traditional Clojurian sytnax, it starts out with bindings, then you just say what you want it to do. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104994,G__104995) : tailrecursion.hoplon.markdown.para_node.call(null,G__104994,G__104995));
})(),(function (){var G__104998 = (function (){var G__104999 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105000 = (function (){var G__105001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105002 = "(";
var G__105003 = (function (){var G__105023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105024 = "doseq ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105023,G__105024) : tailrecursion.hoplon.span.call(null,G__105023,G__105024));
})();
var G__105004 = "[";
var G__105005 = (function (){var G__105025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105026 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105025,G__105026) : tailrecursion.hoplon.span.call(null,G__105025,G__105026));
})();
var G__105006 = " (";
var G__105007 = (function (){var G__105027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105028 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105027,G__105028) : tailrecursion.hoplon.span.call(null,G__105027,G__105028));
})();
var G__105008 = (function (){var G__105029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105030 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105029,G__105030) : tailrecursion.hoplon.span.call(null,G__105029,G__105030));
})();
var G__105009 = " ";
var G__105010 = (function (){var G__105031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105032 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105031,G__105032) : tailrecursion.hoplon.span.call(null,G__105031,G__105032));
})();
var G__105011 = " ";
var G__105012 = (function (){var G__105033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105034 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105033,G__105034) : tailrecursion.hoplon.span.call(null,G__105033,G__105034));
})();
var G__105013 = ")]\n  (";
var G__105014 = (function (){var G__105035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105036 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105035,G__105036) : tailrecursion.hoplon.span.call(null,G__105035,G__105036));
})();
var G__105015 = (function (){var G__105037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105038 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105037,G__105038) : tailrecursion.hoplon.span.call(null,G__105037,G__105038));
})();
var G__105016 = "))\n";
var G__105017 = (function (){var G__105039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105040 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105039,G__105040) : tailrecursion.hoplon.span.call(null,G__105039,G__105040));
})();
var G__105018 = "\n";
var G__105019 = (function (){var G__105041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105042 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105041,G__105042) : tailrecursion.hoplon.span.call(null,G__105041,G__105042));
})();
var G__105020 = "\n";
var G__105021 = (function (){var G__105043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105044 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105043,G__105044) : tailrecursion.hoplon.span.call(null,G__105043,G__105044));
})();
var G__105022 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__105001,G__105002,G__105003,G__105004,G__105005,G__105006,G__105007,G__105008,G__105009,G__105010,G__105011,G__105012,G__105013,G__105014,G__105015,G__105016,G__105017,G__105018,G__105019,G__105020,G__105021,G__105022) : tailrecursion.hoplon.pre.call(null,G__105001,G__105002,G__105003,G__105004,G__105005,G__105006,G__105007,G__105008,G__105009,G__105010,G__105011,G__105012,G__105013,G__105014,G__105015,G__105016,G__105017,G__105018,G__105019,G__105020,G__105021,G__105022));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104999,G__105000) : tailrecursion.hoplon.div.call(null,G__104999,G__105000));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104998) : tailrecursion.hoplon.div.call(null,G__104998));
})(),(function (){var G__105045 = cljs.core.PersistentArrayMap.EMPTY;
var G__105046 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You might notice, if you are following along with an open repl trying these things for yourself, that ",(function (){var G__105047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__105048 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105047,G__105048) : tailrecursion.hoplon.markdown.code_node.call(null,G__105047,G__105048));
})()," was printed below the 88. That is because, like everything else in Clojure, ",(function (){var G__105049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__105050 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105049,G__105050) : tailrecursion.hoplon.markdown.code_node.call(null,G__105049,G__105050));
})()," returns a value, which happens to be ",(function (){var G__105051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__105052 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105051,G__105052) : tailrecursion.hoplon.markdown.code_node.call(null,G__105051,G__105052));
})(),". ",(function (){var G__105053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__105054 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105053,G__105054) : tailrecursion.hoplon.markdown.code_node.call(null,G__105053,G__105054));
})()," always returns ",(function (){var G__105055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__105056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105055,G__105056) : tailrecursion.hoplon.markdown.code_node.call(null,G__105055,G__105056));
})()," (just something to keep in mind)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105045,G__105046) : tailrecursion.hoplon.markdown.para_node.call(null,G__105045,G__105046));
})(),(function (){var G__105057 = cljs.core.PersistentArrayMap.EMPTY;
var G__105058 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__105059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105060 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105059,G__105060) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105059,G__105060));
})(),"s pretend, however, that we prefer the Scheme version of things. Give an implementation of ",(function (){var G__105061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__105062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105061,G__105062) : tailrecursion.hoplon.markdown.code_node.call(null,G__105061,G__105062));
})()," (without using ",(function (){var G__105063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__105064 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105063,G__105064) : tailrecursion.hoplon.markdown.code_node.call(null,G__105063,G__105064));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105057,G__105058) : tailrecursion.hoplon.markdown.para_node.call(null,G__105057,G__105058));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104926;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104925;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104924;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104923;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105065 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105066 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105067 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105068 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105069 = (function (){var G__105070 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105071 = (function (){var G__105072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105073 = "(";
var G__105074 = (function (){var G__105108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105109 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105108,G__105109) : tailrecursion.hoplon.span.call(null,G__105108,G__105109));
})();
var G__105075 = (function (){var G__105110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105111 = "for-each";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105110,G__105111) : tailrecursion.hoplon.span.call(null,G__105110,G__105111));
})();
var G__105076 = " [";
var G__105077 = (function (){var G__105112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105113 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105112,G__105113) : tailrecursion.hoplon.span.call(null,G__105112,G__105113));
})();
var G__105078 = " ";
var G__105079 = (function (){var G__105114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105115 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105114,G__105115) : tailrecursion.hoplon.span.call(null,G__105114,G__105115));
})();
var G__105080 = "]\n  (";
var G__105081 = (function (){var G__105116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105117 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105116,G__105117) : tailrecursion.hoplon.span.call(null,G__105116,G__105117));
})();
var G__105082 = "[";
var G__105083 = (function (){var G__105118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105119 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105118,G__105119) : tailrecursion.hoplon.span.call(null,G__105118,G__105119));
})();
var G__105084 = " ";
var G__105085 = (function (){var G__105120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105121 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105120,G__105121) : tailrecursion.hoplon.span.call(null,G__105120,G__105121));
})();
var G__105086 = "]\n    (";
var G__105087 = (function (){var G__105122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105123 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105122,G__105123) : tailrecursion.hoplon.span.call(null,G__105122,G__105123));
})();
var G__105088 = "(";
var G__105089 = (function (){var G__105124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105125 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105124,G__105125) : tailrecursion.hoplon.span.call(null,G__105124,G__105125));
})();
var G__105090 = " ";
var G__105091 = (function (){var G__105126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105127 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105126,G__105127) : tailrecursion.hoplon.span.call(null,G__105126,G__105127));
})();
var G__105092 = ")\n        ";
var G__105093 = (function (){var G__105128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105129 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105128,G__105129) : tailrecursion.hoplon.span.call(null,G__105128,G__105129));
})();
var G__105094 = "\n        (";
var G__105095 = (function (){var G__105130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105131 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105130,G__105131) : tailrecursion.hoplon.span.call(null,G__105130,G__105131));
})();
var G__105096 = "(";
var G__105097 = (function (){var G__105132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105133 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105132,G__105133) : tailrecursion.hoplon.span.call(null,G__105132,G__105133));
})();
var G__105098 = " (";
var G__105099 = (function (){var G__105134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105135 = "fist";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105134,G__105135) : tailrecursion.hoplon.span.call(null,G__105134,G__105135));
})();
var G__105100 = " ";
var G__105101 = (function (){var G__105136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105137 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105136,G__105137) : tailrecursion.hoplon.span.call(null,G__105136,G__105137));
})();
var G__105102 = "))\n            (";
var G__105103 = (function (){var G__105138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105139 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105138,G__105139) : tailrecursion.hoplon.span.call(null,G__105138,G__105139));
})();
var G__105104 = " (";
var G__105105 = (function (){var G__105140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105141 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105140,G__105141) : tailrecursion.hoplon.span.call(null,G__105140,G__105141));
})();
var G__105106 = (function (){var G__105142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105143 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105142,G__105143) : tailrecursion.hoplon.span.call(null,G__105142,G__105143));
})();
var G__105107 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__105072,G__105073,G__105074,G__105075,G__105076,G__105077,G__105078,G__105079,G__105080,G__105081,G__105082,G__105083,G__105084,G__105085,G__105086,G__105087,G__105088,G__105089,G__105090,G__105091,G__105092,G__105093,G__105094,G__105095,G__105096,G__105097,G__105098,G__105099,G__105100,G__105101,G__105102,G__105103,G__105104,G__105105,G__105106,G__105107) : tailrecursion.hoplon.pre.call(null,G__105072,G__105073,G__105074,G__105075,G__105076,G__105077,G__105078,G__105079,G__105080,G__105081,G__105082,G__105083,G__105084,G__105085,G__105086,G__105087,G__105088,G__105089,G__105090,G__105091,G__105092,G__105093,G__105094,G__105095,G__105096,G__105097,G__105098,G__105099,G__105100,G__105101,G__105102,G__105103,G__105104,G__105105,G__105106,G__105107));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105070,G__105071) : tailrecursion.hoplon.div.call(null,G__105070,G__105071));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105069) : tailrecursion.hoplon.div.call(null,G__105069));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105068;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105067;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105066;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105065;
}})()], 0))], 0))], 0));
var G__101390 = "";
var G__101391 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Hierarchical Structures"], null),(function (){var _STAR_references_STAR_105144 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105145 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105146 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105147 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105148 = cljs.core.PersistentArrayMap.EMPTY;
var G__105149 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The representation of sequences in terms of lists generalizes naturally to represent sequences whose elements may themselves be sequences. For example, we can regard the object ",(function (){var G__105150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"((1 2) 3 4)"], null);
var G__105151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105150,G__105151) : tailrecursion.hoplon.markdown.code_node.call(null,G__105150,G__105151));
})()," constructed by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105148,G__105149) : tailrecursion.hoplon.markdown.para_node.call(null,G__105148,G__105149));
})(),(function (){var G__105152 = (function (){var G__105153 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105154 = (function (){var G__105155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105156 = "(";
var G__105157 = (function (){var G__105169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105170 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105169,G__105170) : tailrecursion.hoplon.span.call(null,G__105169,G__105170));
})();
var G__105158 = "(";
var G__105159 = (function (){var G__105171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105172 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105171,G__105172) : tailrecursion.hoplon.span.call(null,G__105171,G__105172));
})();
var G__105160 = (function (){var G__105173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105174 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105173,G__105174) : tailrecursion.hoplon.span.call(null,G__105173,G__105174));
})();
var G__105161 = " ";
var G__105162 = (function (){var G__105175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105176 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105175,G__105176) : tailrecursion.hoplon.span.call(null,G__105175,G__105176));
})();
var G__105163 = ") (";
var G__105164 = (function (){var G__105177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105178 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105177,G__105178) : tailrecursion.hoplon.span.call(null,G__105177,G__105178));
})();
var G__105165 = (function (){var G__105179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105180 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105179,G__105180) : tailrecursion.hoplon.span.call(null,G__105179,G__105180));
})();
var G__105166 = " ";
var G__105167 = (function (){var G__105181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105182 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105181,G__105182) : tailrecursion.hoplon.span.call(null,G__105181,G__105182));
})();
var G__105168 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__105155,G__105156,G__105157,G__105158,G__105159,G__105160,G__105161,G__105162,G__105163,G__105164,G__105165,G__105166,G__105167,G__105168) : tailrecursion.hoplon.pre.call(null,G__105155,G__105156,G__105157,G__105158,G__105159,G__105160,G__105161,G__105162,G__105163,G__105164,G__105165,G__105166,G__105167,G__105168));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105153,G__105154) : tailrecursion.hoplon.div.call(null,G__105153,G__105154));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105152) : tailrecursion.hoplon.div.call(null,G__105152));
})(),(function (){var G__105183 = cljs.core.PersistentArrayMap.EMPTY;
var G__105184 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as a list of three items, the first of which is itself a list ",(function (){var G__105185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2)"], null);
var G__105186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105185,G__105186) : tailrecursion.hoplon.markdown.code_node.call(null,G__105185,G__105186));
})(),". Indeed, this is suggested by the form in which the result is printed by the interpreter. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.5"], null)], 0))," shows the representation of this structure in terms of pairs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105183,G__105184) : tailrecursion.hoplon.markdown.para_node.call(null,G__105183,G__105184));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105147;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105146;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105145;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105144;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Structure formed by (conj (list 3 4) (list 1 2))"], null)], 0)),"",(function (){var _STAR_references_STAR_105187 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105188 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105189 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105190 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105191 = cljs.core.PersistentArrayMap.EMPTY;
var G__105192 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another way to think of sequences whose elements are sequences is as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["trees"], null)], 0)),". The elements of the sequence are the branches of the tree, and elements that are themselves sequences are subtrees. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/6/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.6"], null)], 0))," shows the structure in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.5"], null)], 0))," viewed as a tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105191,G__105192) : tailrecursion.hoplon.markdown.para_node.call(null,G__105191,G__105192));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105190;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105189;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105188;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105187;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The list structure in figure 2.5 viewed as a tree."], null)], 0)),"",(function (){var _STAR_references_STAR_105193 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105194 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105195 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105196 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105197 = cljs.core.PersistentArrayMap.EMPTY;
var G__105198 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursion is a natural tool for dealing with tree structures, since we can often reduce operations on trees to operations on their branches, which reduce in tern to operations on the branches of the branches, and so on, until we reach the leaves of the tree. As an example, compare the ",(function (){var G__105199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__105200 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105199,G__105200) : tailrecursion.hoplon.markdown.code_node.call(null,G__105199,G__105200));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.1"], null)], 0))," with the ",(function (){var G__105201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105202 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105201,G__105202) : tailrecursion.hoplon.markdown.code_node.call(null,G__105201,G__105202));
})()," procedure, which returns the total number of leaves of a tree:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105197,G__105198) : tailrecursion.hoplon.markdown.para_node.call(null,G__105197,G__105198));
})(),(function (){var G__105203 = (function (){var G__105204 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105205 = (function (){var G__105206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105207 = "(";
var G__105208 = (function (){var G__105282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105283 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105282,G__105283) : tailrecursion.hoplon.span.call(null,G__105282,G__105283));
})();
var G__105209 = (function (){var G__105284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105285 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105284,G__105285) : tailrecursion.hoplon.span.call(null,G__105284,G__105285));
})();
var G__105210 = " (";
var G__105211 = (function (){var G__105286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105287 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105286,G__105287) : tailrecursion.hoplon.span.call(null,G__105286,G__105287));
})();
var G__105212 = "(";
var G__105213 = (function (){var G__105288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105289 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105288,G__105289) : tailrecursion.hoplon.span.call(null,G__105288,G__105289));
})();
var G__105214 = (function (){var G__105290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105291 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105290,G__105291) : tailrecursion.hoplon.span.call(null,G__105290,G__105291));
})();
var G__105215 = " ";
var G__105216 = (function (){var G__105292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105293 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105292,G__105293) : tailrecursion.hoplon.span.call(null,G__105292,G__105293));
})();
var G__105217 = ") (";
var G__105218 = (function (){var G__105294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105295 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105294,G__105295) : tailrecursion.hoplon.span.call(null,G__105294,G__105295));
})();
var G__105219 = (function (){var G__105296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105297 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105296,G__105297) : tailrecursion.hoplon.span.call(null,G__105296,G__105297));
})();
var G__105220 = " ";
var G__105221 = (function (){var G__105298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105299 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105298,G__105299) : tailrecursion.hoplon.span.call(null,G__105298,G__105299));
})();
var G__105222 = ")))\n((";
var G__105223 = (function (){var G__105300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105301 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105300,G__105301) : tailrecursion.hoplon.span.call(null,G__105300,G__105301));
})();
var G__105224 = " ";
var G__105225 = (function (){var G__105302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105303 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105302,G__105303) : tailrecursion.hoplon.span.call(null,G__105302,G__105303));
})();
var G__105226 = ") ";
var G__105227 = (function (){var G__105304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105305 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105304,G__105305) : tailrecursion.hoplon.span.call(null,G__105304,G__105305));
})();
var G__105228 = " ";
var G__105229 = (function (){var G__105306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105307 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105306,G__105307) : tailrecursion.hoplon.span.call(null,G__105306,G__105307));
})();
var G__105230 = ")\n\n(";
var G__105231 = (function (){var G__105308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105309 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105308,G__105309) : tailrecursion.hoplon.span.call(null,G__105308,G__105309));
})();
var G__105232 = " ";
var G__105233 = (function (){var G__105310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105311 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105310,G__105311) : tailrecursion.hoplon.span.call(null,G__105310,G__105311));
})();
var G__105234 = ")\n";
var G__105235 = (function (){var G__105312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105313 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105312,G__105313) : tailrecursion.hoplon.span.call(null,G__105312,G__105313));
})();
var G__105236 = "\n\n(";
var G__105237 = (function (){var G__105314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105315 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105314,G__105315) : tailrecursion.hoplon.span.call(null,G__105314,G__105315));
})();
var G__105238 = " ";
var G__105239 = (function (){var G__105316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105317 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105316,G__105317) : tailrecursion.hoplon.span.call(null,G__105316,G__105317));
})();
var G__105240 = ")\n";
var G__105241 = (function (){var G__105318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105319 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105318,G__105319) : tailrecursion.hoplon.span.call(null,G__105318,G__105319));
})();
var G__105242 = "\n\n(";
var G__105243 = (function (){var G__105320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105321 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105320,G__105321) : tailrecursion.hoplon.span.call(null,G__105320,G__105321));
})();
var G__105244 = (function (){var G__105322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105323 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105322,G__105323) : tailrecursion.hoplon.span.call(null,G__105322,G__105323));
})();
var G__105245 = " ";
var G__105246 = (function (){var G__105324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105325 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105324,G__105325) : tailrecursion.hoplon.span.call(null,G__105324,G__105325));
})();
var G__105247 = ")\n(((";
var G__105248 = (function (){var G__105326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105327 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105326,G__105327) : tailrecursion.hoplon.span.call(null,G__105326,G__105327));
})();
var G__105249 = " ";
var G__105250 = (function (){var G__105328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105329 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105328,G__105329) : tailrecursion.hoplon.span.call(null,G__105328,G__105329));
})();
var G__105251 = ") ";
var G__105252 = (function (){var G__105330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105331 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105330,G__105331) : tailrecursion.hoplon.span.call(null,G__105330,G__105331));
})();
var G__105253 = " ";
var G__105254 = (function (){var G__105332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105333 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105332,G__105333) : tailrecursion.hoplon.span.call(null,G__105332,G__105333));
})();
var G__105255 = ") ((";
var G__105256 = (function (){var G__105334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105335 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105334,G__105335) : tailrecursion.hoplon.span.call(null,G__105334,G__105335));
})();
var G__105257 = " ";
var G__105258 = (function (){var G__105336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105337 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105336,G__105337) : tailrecursion.hoplon.span.call(null,G__105336,G__105337));
})();
var G__105259 = ") ";
var G__105260 = (function (){var G__105338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105339 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105338,G__105339) : tailrecursion.hoplon.span.call(null,G__105338,G__105339));
})();
var G__105261 = " ";
var G__105262 = (function (){var G__105340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105341 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105340,G__105341) : tailrecursion.hoplon.span.call(null,G__105340,G__105341));
})();
var G__105263 = "))\n\n(";
var G__105264 = (function (){var G__105342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105343 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105342,G__105343) : tailrecursion.hoplon.span.call(null,G__105342,G__105343));
})();
var G__105265 = " (";
var G__105266 = (function (){var G__105344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105345 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105344,G__105345) : tailrecursion.hoplon.span.call(null,G__105344,G__105345));
})();
var G__105267 = (function (){var G__105346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105347 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105346,G__105347) : tailrecursion.hoplon.span.call(null,G__105346,G__105347));
})();
var G__105268 = " ";
var G__105269 = (function (){var G__105348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105349 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105348,G__105349) : tailrecursion.hoplon.span.call(null,G__105348,G__105349));
})();
var G__105270 = "))\n";
var G__105271 = (function (){var G__105350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105351 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105350,G__105351) : tailrecursion.hoplon.span.call(null,G__105350,G__105351));
})();
var G__105272 = "\n\n(";
var G__105273 = (function (){var G__105352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105353 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105352,G__105353) : tailrecursion.hoplon.span.call(null,G__105352,G__105353));
})();
var G__105274 = " (";
var G__105275 = (function (){var G__105354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105355 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105354,G__105355) : tailrecursion.hoplon.span.call(null,G__105354,G__105355));
})();
var G__105276 = (function (){var G__105356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105357 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105356,G__105357) : tailrecursion.hoplon.span.call(null,G__105356,G__105357));
})();
var G__105277 = " ";
var G__105278 = (function (){var G__105358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105359 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105358,G__105359) : tailrecursion.hoplon.span.call(null,G__105358,G__105359));
})();
var G__105279 = "))\n";
var G__105280 = (function (){var G__105360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105361 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105360,G__105361) : tailrecursion.hoplon.span.call(null,G__105360,G__105361));
})();
var G__105281 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__105206,G__105207,G__105208,G__105209,G__105210,G__105211,G__105212,G__105213,G__105214,G__105215,G__105216,G__105217,G__105218,G__105219,G__105220,G__105221,G__105222,G__105223,G__105224,G__105225,G__105226,G__105227,G__105228,G__105229,G__105230,G__105231,G__105232,G__105233,G__105234,G__105235,G__105236,G__105237,G__105238,G__105239,G__105240,G__105241,G__105242,G__105243,G__105244,G__105245,G__105246,G__105247,G__105248,G__105249,G__105250,G__105251,G__105252,G__105253,G__105254,G__105255,G__105256,G__105257,G__105258,G__105259,G__105260,G__105261,G__105262,G__105263,G__105264,G__105265,G__105266,G__105267,G__105268,G__105269,G__105270,G__105271,G__105272,G__105273,G__105274,G__105275,G__105276,G__105277,G__105278,G__105279,G__105280,G__105281) : tailrecursion.hoplon.pre.call(null,G__105206,G__105207,G__105208,G__105209,G__105210,G__105211,G__105212,G__105213,G__105214,G__105215,G__105216,G__105217,G__105218,G__105219,G__105220,G__105221,G__105222,G__105223,G__105224,G__105225,G__105226,G__105227,G__105228,G__105229,G__105230,G__105231,G__105232,G__105233,G__105234,G__105235,G__105236,G__105237,G__105238,G__105239,G__105240,G__105241,G__105242,G__105243,G__105244,G__105245,G__105246,G__105247,G__105248,G__105249,G__105250,G__105251,G__105252,G__105253,G__105254,G__105255,G__105256,G__105257,G__105258,G__105259,G__105260,G__105261,G__105262,G__105263,G__105264,G__105265,G__105266,G__105267,G__105268,G__105269,G__105270,G__105271,G__105272,G__105273,G__105274,G__105275,G__105276,G__105277,G__105278,G__105279,G__105280,G__105281));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105204,G__105205) : tailrecursion.hoplon.div.call(null,G__105204,G__105205));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105203) : tailrecursion.hoplon.div.call(null,G__105203));
})(),(function (){var G__105362 = cljs.core.PersistentArrayMap.EMPTY;
var G__105363 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement ",(function (){var G__105364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105365 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105364,G__105365) : tailrecursion.hoplon.markdown.code_node.call(null,G__105364,G__105365));
})(),", recall the recursive plan for computing ",(function (){var G__105366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__105367 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105366,G__105367) : tailrecursion.hoplon.markdown.code_node.call(null,G__105366,G__105367));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105362,G__105363) : tailrecursion.hoplon.markdown.para_node.call(null,G__105362,G__105363));
})(),(function (){var G__105368 = cljs.core.PersistentArrayMap.EMPTY;
var G__105369 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105370 = cljs.core.PersistentArrayMap.EMPTY;
var G__105371 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105372 = cljs.core.PersistentArrayMap.EMPTY;
var G__105373 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__105375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105374,G__105375) : tailrecursion.hoplon.markdown.code_node.call(null,G__105374,G__105375));
})()," of a list ",(function (){var G__105376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__105377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105376,G__105377) : tailrecursion.hoplon.markdown.code_node.call(null,G__105376,G__105377));
})()," is 1 plus the ",(function (){var G__105378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__105379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105378,G__105379) : tailrecursion.hoplon.markdown.code_node.call(null,G__105378,G__105379));
})()," of the ",(function (){var G__105380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105380,G__105381) : tailrecursion.hoplon.markdown.code_node.call(null,G__105380,G__105381));
})()," of ",(function (){var G__105382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__105383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105382,G__105383) : tailrecursion.hoplon.markdown.code_node.call(null,G__105382,G__105383));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105372,G__105373) : tailrecursion.hoplon.markdown.para_node.call(null,G__105372,G__105373));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__105370,G__105371) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__105370,G__105371));
})(),(function (){var G__105384 = cljs.core.PersistentArrayMap.EMPTY;
var G__105385 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_105386 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105387 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105388 = cljs.core.PersistentArrayMap.EMPTY;
var G__105389 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__105391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105390,G__105391) : tailrecursion.hoplon.markdown.code_node.call(null,G__105390,G__105391));
})()," of the empty list is 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105388,G__105389) : tailrecursion.hoplon.markdown.para_node.call(null,G__105388,G__105389));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105387;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105386;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__105384,G__105385) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__105384,G__105385));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__105368,G__105369) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__105368,G__105369));
})(),(function (){var G__105392 = cljs.core.PersistentArrayMap.EMPTY;
var G__105393 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105395 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105394,G__105395) : tailrecursion.hoplon.markdown.code_node.call(null,G__105394,G__105395));
})()," is similar. The value for the empty list is the same:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105392,G__105393) : tailrecursion.hoplon.markdown.para_node.call(null,G__105392,G__105393));
})(),(function (){var G__105396 = cljs.core.PersistentArrayMap.EMPTY;
var G__105397 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105398 = cljs.core.PersistentArrayMap.EMPTY;
var G__105399 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_105400 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105401 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105403 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105402,G__105403) : tailrecursion.hoplon.markdown.code_node.call(null,G__105402,G__105403));
})()," of the empty list is 0."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105401;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105400;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__105398,G__105399) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__105398,G__105399));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__105396,G__105397) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__105396,G__105397));
})(),(function (){var G__105404 = cljs.core.PersistentArrayMap.EMPTY;
var G__105405 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But in the reduction step, where we strip off the ",(function (){var G__105406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105407 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105406,G__105407) : tailrecursion.hoplon.markdown.code_node.call(null,G__105406,G__105407));
})()," of the list, we must take into account that the ",(function (){var G__105408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105409 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105408,G__105409) : tailrecursion.hoplon.markdown.code_node.call(null,G__105408,G__105409));
})()," may itself be a tree whose leaves we need to count. Thus, the appropriate reduction step is"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105404,G__105405) : tailrecursion.hoplon.markdown.para_node.call(null,G__105404,G__105405));
})(),(function (){var G__105410 = cljs.core.PersistentArrayMap.EMPTY;
var G__105411 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105412 = cljs.core.PersistentArrayMap.EMPTY;
var G__105413 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_105414 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105415 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105417 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105416,G__105417) : tailrecursion.hoplon.markdown.code_node.call(null,G__105416,G__105417));
})()," of a tree ",(function (){var G__105418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__105419 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105418,G__105419) : tailrecursion.hoplon.markdown.code_node.call(null,G__105418,G__105419));
})()," is ",(function (){var G__105420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105421 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105420,G__105421) : tailrecursion.hoplon.markdown.code_node.call(null,G__105420,G__105421));
})()," of the ",(function (){var G__105422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105423 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105422,G__105423) : tailrecursion.hoplon.markdown.code_node.call(null,G__105422,G__105423));
})()," of ",(function (){var G__105424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__105425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105424,G__105425) : tailrecursion.hoplon.markdown.code_node.call(null,G__105424,G__105425));
})()," plus ",(function (){var G__105426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105427 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105426,G__105427) : tailrecursion.hoplon.markdown.code_node.call(null,G__105426,G__105427));
})()," of the ",(function (){var G__105428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105429 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105428,G__105429) : tailrecursion.hoplon.markdown.code_node.call(null,G__105428,G__105429));
})()," of ",(function (){var G__105430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__105431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105430,G__105431) : tailrecursion.hoplon.markdown.code_node.call(null,G__105430,G__105431));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105415;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105414;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__105412,G__105413) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__105412,G__105413));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__105410,G__105411) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__105410,G__105411));
})(),(function (){var G__105432 = cljs.core.PersistentArrayMap.EMPTY;
var G__105433 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Finally, by taking ",(function (){var G__105434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105435 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105434,G__105435) : tailrecursion.hoplon.markdown.code_node.call(null,G__105434,G__105435));
})(),"s we reach actual leaves, so we need another base case:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105432,G__105433) : tailrecursion.hoplon.markdown.para_node.call(null,G__105432,G__105433));
})(),(function (){var G__105436 = cljs.core.PersistentArrayMap.EMPTY;
var G__105437 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105438 = cljs.core.PersistentArrayMap.EMPTY;
var G__105439 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_105440 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105441 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__105443 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105442,G__105443) : tailrecursion.hoplon.markdown.code_node.call(null,G__105442,G__105443));
})()," of a leaf is 1."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105441;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105440;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__105438,G__105439) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__105438,G__105439));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__105436,G__105437) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__105436,G__105437));
})(),(function (){var G__105444 = cljs.core.PersistentArrayMap.EMPTY;
var G__105445 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To aid in writing recursive procedures on trees, Scheme provides a primitive predicate ",(function (){var G__105446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"pair?"], null);
var G__105447 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105446,G__105447) : tailrecursion.hoplon.markdown.code_node.call(null,G__105446,G__105447));
})(),", which tests whether its argument is a pair. Since pairs aren",(function (){var G__105448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105449 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105448,G__105449) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105448,G__105449));
})(),"t really a thing in Clojure, but rather we deal in lists directly, what, would you suppose, is the primitive to tell whether something is a list? The procedure ",(function (){var G__105450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list?"], null);
var G__105451 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105450,G__105451) : tailrecursion.hoplon.markdown.code_node.call(null,G__105450,G__105451));
})(),", of course. Alternatively, for our program, we could use the more general ",(function (){var G__105452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"seq?"], null);
var G__105453 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105452,G__105453) : tailrecursion.hoplon.markdown.code_node.call(null,G__105452,G__105453));
})(),", which returns ",(function (){var G__105454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__105455 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105454,G__105455) : tailrecursion.hoplon.markdown.code_node.call(null,G__105454,G__105455));
})()," when its argument is any sequential object, and false otherwise. But we",(function (){var G__105456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105457 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105456,G__105457) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105456,G__105457));
})(),"ll use ",(function (){var G__105458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__105459 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105458,G__105459) : tailrecursion.hoplon.markdown.code_node.call(null,G__105458,G__105459));
})()," because, we don",(function (){var G__105460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105461 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105460,G__105461) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105460,G__105461));
})(),"t really know the implications of including vectors and things into this function yet. Here is the complete procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105444,G__105445) : tailrecursion.hoplon.markdown.para_node.call(null,G__105444,G__105445));
})(),(function (){var G__105462 = (function (){var G__105463 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105464 = (function (){var G__105465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105466 = "(";
var G__105467 = (function (){var G__105508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105509 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105508,G__105509) : tailrecursion.hoplon.span.call(null,G__105508,G__105509));
})();
var G__105468 = (function (){var G__105510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105511 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105510,G__105511) : tailrecursion.hoplon.span.call(null,G__105510,G__105511));
})();
var G__105469 = " [";
var G__105470 = (function (){var G__105512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105513 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105512,G__105513) : tailrecursion.hoplon.span.call(null,G__105512,G__105513));
})();
var G__105471 = "]\n  (";
var G__105472 = (function (){var G__105514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105515 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105514,G__105515) : tailrecursion.hoplon.span.call(null,G__105514,G__105515));
})();
var G__105473 = "(";
var G__105474 = (function (){var G__105516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105517 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105516,G__105517) : tailrecursion.hoplon.span.call(null,G__105516,G__105517));
})();
var G__105475 = "(";
var G__105476 = (function (){var G__105518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105519 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105518,G__105519) : tailrecursion.hoplon.span.call(null,G__105518,G__105519));
})();
var G__105477 = " ";
var G__105478 = (function (){var G__105520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105521 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105520,G__105521) : tailrecursion.hoplon.span.call(null,G__105520,G__105521));
})();
var G__105479 = ")\n             (";
var G__105480 = (function (){var G__105522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105523 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105522,G__105523) : tailrecursion.hoplon.span.call(null,G__105522,G__105523));
})();
var G__105481 = " ";
var G__105482 = (function (){var G__105524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105525 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105524,G__105525) : tailrecursion.hoplon.span.call(null,G__105524,G__105525));
})();
var G__105483 = ")) ";
var G__105484 = (function (){var G__105526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105527 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105526,G__105527) : tailrecursion.hoplon.span.call(null,G__105526,G__105527));
})();
var G__105485 = "\n        (";
var G__105486 = (function (){var G__105528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105529 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105528,G__105529) : tailrecursion.hoplon.span.call(null,G__105528,G__105529));
})();
var G__105487 = "(";
var G__105488 = (function (){var G__105530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105531 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105530,G__105531) : tailrecursion.hoplon.span.call(null,G__105530,G__105531));
})();
var G__105489 = " ";
var G__105490 = (function (){var G__105532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105533 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105532,G__105533) : tailrecursion.hoplon.span.call(null,G__105532,G__105533));
})();
var G__105491 = ")) ";
var G__105492 = (function (){var G__105534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105535 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105534,G__105535) : tailrecursion.hoplon.span.call(null,G__105534,G__105535));
})();
var G__105493 = "\n        ";
var G__105494 = (function (){var G__105536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105537 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105536,G__105537) : tailrecursion.hoplon.span.call(null,G__105536,G__105537));
})();
var G__105495 = " (";
var G__105496 = (function (){var G__105538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105539 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105538,G__105539) : tailrecursion.hoplon.span.call(null,G__105538,G__105539));
})();
var G__105497 = "(";
var G__105498 = (function (){var G__105540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105541 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105540,G__105541) : tailrecursion.hoplon.span.call(null,G__105540,G__105541));
})();
var G__105499 = " (";
var G__105500 = (function (){var G__105542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105543 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105542,G__105543) : tailrecursion.hoplon.span.call(null,G__105542,G__105543));
})();
var G__105501 = (function (){var G__105544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105545 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105544,G__105545) : tailrecursion.hoplon.span.call(null,G__105544,G__105545));
})();
var G__105502 = "))\n                 (";
var G__105503 = (function (){var G__105546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105547 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105546,G__105547) : tailrecursion.hoplon.span.call(null,G__105546,G__105547));
})();
var G__105504 = " (";
var G__105505 = (function (){var G__105548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105549 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105548,G__105549) : tailrecursion.hoplon.span.call(null,G__105548,G__105549));
})();
var G__105506 = (function (){var G__105550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105551 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105550,G__105551) : tailrecursion.hoplon.span.call(null,G__105550,G__105551));
})();
var G__105507 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__105465,G__105466,G__105467,G__105468,G__105469,G__105470,G__105471,G__105472,G__105473,G__105474,G__105475,G__105476,G__105477,G__105478,G__105479,G__105480,G__105481,G__105482,G__105483,G__105484,G__105485,G__105486,G__105487,G__105488,G__105489,G__105490,G__105491,G__105492,G__105493,G__105494,G__105495,G__105496,G__105497,G__105498,G__105499,G__105500,G__105501,G__105502,G__105503,G__105504,G__105505,G__105506,G__105507) : tailrecursion.hoplon.pre.call(null,G__105465,G__105466,G__105467,G__105468,G__105469,G__105470,G__105471,G__105472,G__105473,G__105474,G__105475,G__105476,G__105477,G__105478,G__105479,G__105480,G__105481,G__105482,G__105483,G__105484,G__105485,G__105486,G__105487,G__105488,G__105489,G__105490,G__105491,G__105492,G__105493,G__105494,G__105495,G__105496,G__105497,G__105498,G__105499,G__105500,G__105501,G__105502,G__105503,G__105504,G__105505,G__105506,G__105507));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105463,G__105464) : tailrecursion.hoplon.div.call(null,G__105463,G__105464));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105462) : tailrecursion.hoplon.div.call(null,G__105462));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105196;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105195;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105194;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105193;
}})()], 0));
var G__101392 = "";
var G__101393 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105552 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105553 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105554 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105555 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105556 = cljs.core.PersistentArrayMap.EMPTY;
var G__105557 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we evaluate the expression ",(function (){var G__105558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 (list 2 (list 3 4)))"], null);
var G__105559 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105558,G__105559) : tailrecursion.hoplon.markdown.code_node.call(null,G__105558,G__105559));
})(),". Give the result printed by the interpreter, the corresponding box-and-pointer structure, and the interpretation of this as a tree (as in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/6/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.6"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105556,G__105557) : tailrecursion.hoplon.markdown.para_node.call(null,G__105556,G__105557));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105555;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105554;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105553;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105552;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105560 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105561 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105562 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105563 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105564 = (function (){var G__105565 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105566 = (function (){var G__105567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105568 = "(";
var G__105569 = (function (){var G__105588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105589 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105588,G__105589) : tailrecursion.hoplon.span.call(null,G__105588,G__105589));
})();
var G__105570 = (function (){var G__105590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105591 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105590,G__105591) : tailrecursion.hoplon.span.call(null,G__105590,G__105591));
})();
var G__105571 = " (";
var G__105572 = (function (){var G__105592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105593 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105592,G__105593) : tailrecursion.hoplon.span.call(null,G__105592,G__105593));
})();
var G__105573 = (function (){var G__105594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105595 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105594,G__105595) : tailrecursion.hoplon.span.call(null,G__105594,G__105595));
})();
var G__105574 = " (";
var G__105575 = (function (){var G__105596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105597 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105596,G__105597) : tailrecursion.hoplon.span.call(null,G__105596,G__105597));
})();
var G__105576 = (function (){var G__105598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105599 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105598,G__105599) : tailrecursion.hoplon.span.call(null,G__105598,G__105599));
})();
var G__105577 = " ";
var G__105578 = (function (){var G__105600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105601 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105600,G__105601) : tailrecursion.hoplon.span.call(null,G__105600,G__105601));
})();
var G__105579 = ")))\n(";
var G__105580 = (function (){var G__105602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105603 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105602,G__105603) : tailrecursion.hoplon.span.call(null,G__105602,G__105603));
})();
var G__105581 = " (";
var G__105582 = (function (){var G__105604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105605 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105604,G__105605) : tailrecursion.hoplon.span.call(null,G__105604,G__105605));
})();
var G__105583 = " (";
var G__105584 = (function (){var G__105606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105607 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105606,G__105607) : tailrecursion.hoplon.span.call(null,G__105606,G__105607));
})();
var G__105585 = " ";
var G__105586 = (function (){var G__105608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105609 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105608,G__105609) : tailrecursion.hoplon.span.call(null,G__105608,G__105609));
})();
var G__105587 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__105567,G__105568,G__105569,G__105570,G__105571,G__105572,G__105573,G__105574,G__105575,G__105576,G__105577,G__105578,G__105579,G__105580,G__105581,G__105582,G__105583,G__105584,G__105585,G__105586,G__105587) : tailrecursion.hoplon.pre.call(null,G__105567,G__105568,G__105569,G__105570,G__105571,G__105572,G__105573,G__105574,G__105575,G__105576,G__105577,G__105578,G__105579,G__105580,G__105581,G__105582,G__105583,G__105584,G__105585,G__105586,G__105587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105565,G__105566) : tailrecursion.hoplon.div.call(null,G__105565,G__105566));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105564) : tailrecursion.hoplon.div.call(null,G__105564));
})(),(function (){var G__105610 = cljs.core.PersistentArrayMap.EMPTY;
var G__105611 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But if you didn",(function (){var G__105612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105612,G__105613) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105612,G__105613));
})(),"t see that one already, I think you",(function (){var G__105614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105615 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105614,G__105615) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105614,G__105615));
})(),"re missing the point of this site here."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105610,G__105611) : tailrecursion.hoplon.markdown.para_node.call(null,G__105610,G__105611));
})(),(function (){var G__105616 = cljs.core.PersistentArrayMap.EMPTY;
var G__105617 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for the diagram, I will put that in later",(function (){var G__105618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__105619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105618,G__105619) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105618,G__105619));
})()," If anyone even reads this far",(function (){var G__105620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__105621 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105620,G__105621) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105620,G__105621));
})()," On that note: If you have read this far, please, shoot me an email at ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"mailto:amniskin@gmail.com",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["amniskin@gmail.com"], null)], 0)),". I",(function (){var G__105622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105623 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105622,G__105623) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105622,G__105623));
})(),"d love to hear any suggestions or just any feedback at all, really."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105616,G__105617) : tailrecursion.hoplon.markdown.para_node.call(null,G__105616,G__105617));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105563;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105562;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105561;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105560;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105624 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105625 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105626 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105627 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105628 = cljs.core.PersistentArrayMap.EMPTY;
var G__105629 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give combinations of ",(function (){var G__105630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105631 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105630,G__105631) : tailrecursion.hoplon.markdown.code_node.call(null,G__105630,G__105631));
})()," and ",(function (){var G__105632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105632,G__105633) : tailrecursion.hoplon.markdown.code_node.call(null,G__105632,G__105633));
})()," that will pick 7 from each of the following lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105628,G__105629) : tailrecursion.hoplon.markdown.para_node.call(null,G__105628,G__105629));
})(),(function (){var G__105634 = (function (){var G__105635 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105636 = (function (){var G__105637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105638 = "(";
var G__105639 = (function (){var G__105665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105666 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105665,G__105666) : tailrecursion.hoplon.span.call(null,G__105665,G__105666));
})();
var G__105640 = " ";
var G__105641 = (function (){var G__105667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105668 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105667,G__105668) : tailrecursion.hoplon.span.call(null,G__105667,G__105668));
})();
var G__105642 = " (";
var G__105643 = (function (){var G__105669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105670 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105669,G__105670) : tailrecursion.hoplon.span.call(null,G__105669,G__105670));
})();
var G__105644 = " ";
var G__105645 = (function (){var G__105671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105672 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105671,G__105672) : tailrecursion.hoplon.span.call(null,G__105671,G__105672));
})();
var G__105646 = ") ";
var G__105647 = (function (){var G__105673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105674 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105673,G__105674) : tailrecursion.hoplon.span.call(null,G__105673,G__105674));
})();
var G__105648 = ")\n\n((";
var G__105649 = (function (){var G__105675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105676 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105675,G__105676) : tailrecursion.hoplon.span.call(null,G__105675,G__105676));
})();
var G__105650 = "))\n\n(";
var G__105651 = (function (){var G__105677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105678 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105677,G__105678) : tailrecursion.hoplon.span.call(null,G__105677,G__105678));
})();
var G__105652 = " (";
var G__105653 = (function (){var G__105679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105680 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105679,G__105680) : tailrecursion.hoplon.span.call(null,G__105679,G__105680));
})();
var G__105654 = " (";
var G__105655 = (function (){var G__105681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105682 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105681,G__105682) : tailrecursion.hoplon.span.call(null,G__105681,G__105682));
})();
var G__105656 = " (";
var G__105657 = (function (){var G__105683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105684 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105683,G__105684) : tailrecursion.hoplon.span.call(null,G__105683,G__105684));
})();
var G__105658 = " (";
var G__105659 = (function (){var G__105685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105686 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105685,G__105686) : tailrecursion.hoplon.span.call(null,G__105685,G__105686));
})();
var G__105660 = " (";
var G__105661 = (function (){var G__105687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105688 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105687,G__105688) : tailrecursion.hoplon.span.call(null,G__105687,G__105688));
})();
var G__105662 = " ";
var G__105663 = (function (){var G__105689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105690 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105689,G__105690) : tailrecursion.hoplon.span.call(null,G__105689,G__105690));
})();
var G__105664 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__105637,G__105638,G__105639,G__105640,G__105641,G__105642,G__105643,G__105644,G__105645,G__105646,G__105647,G__105648,G__105649,G__105650,G__105651,G__105652,G__105653,G__105654,G__105655,G__105656,G__105657,G__105658,G__105659,G__105660,G__105661,G__105662,G__105663,G__105664) : tailrecursion.hoplon.pre.call(null,G__105637,G__105638,G__105639,G__105640,G__105641,G__105642,G__105643,G__105644,G__105645,G__105646,G__105647,G__105648,G__105649,G__105650,G__105651,G__105652,G__105653,G__105654,G__105655,G__105656,G__105657,G__105658,G__105659,G__105660,G__105661,G__105662,G__105663,G__105664));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105635,G__105636) : tailrecursion.hoplon.div.call(null,G__105635,G__105636));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105634) : tailrecursion.hoplon.div.call(null,G__105634));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105627;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105626;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105625;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105624;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105691 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105692 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105695 = (function (){var G__105696 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105697 = (function (){var G__105698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105699 = "(";
var G__105700 = (function (){var G__105784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105785 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105784,G__105785) : tailrecursion.hoplon.span.call(null,G__105784,G__105785));
})();
var G__105701 = "(";
var G__105702 = (function (){var G__105786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105787 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105786,G__105787) : tailrecursion.hoplon.span.call(null,G__105786,G__105787));
})();
var G__105703 = (function (){var G__105788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105789 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105788,G__105789) : tailrecursion.hoplon.span.call(null,G__105788,G__105789));
})();
var G__105704 = " ";
var G__105705 = (function (){var G__105790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105791 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105790,G__105791) : tailrecursion.hoplon.span.call(null,G__105790,G__105791));
})();
var G__105706 = " (";
var G__105707 = (function (){var G__105792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105793 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105792,G__105793) : tailrecursion.hoplon.span.call(null,G__105792,G__105793));
})();
var G__105708 = " ";
var G__105709 = (function (){var G__105794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105795 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105794,G__105795) : tailrecursion.hoplon.span.call(null,G__105794,G__105795));
})();
var G__105710 = ") ";
var G__105711 = (function (){var G__105796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105797 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105796,G__105797) : tailrecursion.hoplon.span.call(null,G__105796,G__105797));
})();
var G__105712 = "))\n(";
var G__105713 = (function (){var G__105798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105799 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105798,G__105799) : tailrecursion.hoplon.span.call(null,G__105798,G__105799));
})();
var G__105714 = " (";
var G__105715 = (function (){var G__105800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105801 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105800,G__105801) : tailrecursion.hoplon.span.call(null,G__105800,G__105801));
})();
var G__105716 = " ";
var G__105717 = (function (){var G__105802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105803 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105802,G__105803) : tailrecursion.hoplon.span.call(null,G__105802,G__105803));
})();
var G__105718 = ") ";
var G__105719 = (function (){var G__105804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105805 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105804,G__105805) : tailrecursion.hoplon.span.call(null,G__105804,G__105805));
})();
var G__105720 = ")\n\n(";
var G__105721 = (function (){var G__105806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105807 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105806,G__105807) : tailrecursion.hoplon.span.call(null,G__105806,G__105807));
})();
var G__105722 = "(";
var G__105723 = (function (){var G__105808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105809 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105808,G__105809) : tailrecursion.hoplon.span.call(null,G__105808,G__105809));
})();
var G__105724 = "(";
var G__105725 = (function (){var G__105810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105811 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105810,G__105811) : tailrecursion.hoplon.span.call(null,G__105810,G__105811));
})();
var G__105726 = (function (){var G__105812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105813 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105812,G__105813) : tailrecursion.hoplon.span.call(null,G__105812,G__105813));
})();
var G__105727 = " ";
var G__105728 = (function (){var G__105814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105815 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105814,G__105815) : tailrecursion.hoplon.span.call(null,G__105814,G__105815));
})();
var G__105729 = " (";
var G__105730 = (function (){var G__105816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105817 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105816,G__105817) : tailrecursion.hoplon.span.call(null,G__105816,G__105817));
})();
var G__105731 = " ";
var G__105732 = (function (){var G__105818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105819 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105818,G__105819) : tailrecursion.hoplon.span.call(null,G__105818,G__105819));
})();
var G__105733 = ") ";
var G__105734 = (function (){var G__105820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105821 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105820,G__105821) : tailrecursion.hoplon.span.call(null,G__105820,G__105821));
})();
var G__105735 = ")))\n((";
var G__105736 = (function (){var G__105822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105823 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105822,G__105823) : tailrecursion.hoplon.span.call(null,G__105822,G__105823));
})();
var G__105737 = " ";
var G__105738 = (function (){var G__105824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105825 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105824,G__105825) : tailrecursion.hoplon.span.call(null,G__105824,G__105825));
})();
var G__105739 = ") ";
var G__105740 = (function (){var G__105826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105827 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105826,G__105827) : tailrecursion.hoplon.span.call(null,G__105826,G__105827));
})();
var G__105741 = ")\n\n(";
var G__105742 = (function (){var G__105828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105829 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105828,G__105829) : tailrecursion.hoplon.span.call(null,G__105828,G__105829));
})();
var G__105743 = "(";
var G__105744 = (function (){var G__105830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105831 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105830,G__105831) : tailrecursion.hoplon.span.call(null,G__105830,G__105831));
})();
var G__105745 = "(";
var G__105746 = (function (){var G__105832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105833 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105832,G__105833) : tailrecursion.hoplon.span.call(null,G__105832,G__105833));
})();
var G__105747 = "(";
var G__105748 = (function (){var G__105834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105835 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105834,G__105835) : tailrecursion.hoplon.span.call(null,G__105834,G__105835));
})();
var G__105749 = (function (){var G__105836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105837 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105836,G__105837) : tailrecursion.hoplon.span.call(null,G__105836,G__105837));
})();
var G__105750 = " ";
var G__105751 = (function (){var G__105838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105839 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105838,G__105839) : tailrecursion.hoplon.span.call(null,G__105838,G__105839));
})();
var G__105752 = " (";
var G__105753 = (function (){var G__105840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105841 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105840,G__105841) : tailrecursion.hoplon.span.call(null,G__105840,G__105841));
})();
var G__105754 = " ";
var G__105755 = (function (){var G__105842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105843 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105842,G__105843) : tailrecursion.hoplon.span.call(null,G__105842,G__105843));
})();
var G__105756 = ") ";
var G__105757 = (function (){var G__105844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105845 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105844,G__105845) : tailrecursion.hoplon.span.call(null,G__105844,G__105845));
})();
var G__105758 = "))))\n(";
var G__105759 = (function (){var G__105846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105847 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105846,G__105847) : tailrecursion.hoplon.span.call(null,G__105846,G__105847));
})();
var G__105760 = " ";
var G__105761 = (function (){var G__105848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105849 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105848,G__105849) : tailrecursion.hoplon.span.call(null,G__105848,G__105849));
})();
var G__105762 = ")\n\n(";
var G__105763 = (function (){var G__105850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105851 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105850,G__105851) : tailrecursion.hoplon.span.call(null,G__105850,G__105851));
})();
var G__105764 = "(";
var G__105765 = (function (){var G__105852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105853 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105852,G__105853) : tailrecursion.hoplon.span.call(null,G__105852,G__105853));
})();
var G__105766 = "(";
var G__105767 = (function (){var G__105854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105855 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105854,G__105855) : tailrecursion.hoplon.span.call(null,G__105854,G__105855));
})();
var G__105768 = "(";
var G__105769 = (function (){var G__105856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105857 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105856,G__105857) : tailrecursion.hoplon.span.call(null,G__105856,G__105857));
})();
var G__105770 = "(";
var G__105771 = (function (){var G__105858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105859 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105858,G__105859) : tailrecursion.hoplon.span.call(null,G__105858,G__105859));
})();
var G__105772 = (function (){var G__105860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105861 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105860,G__105861) : tailrecursion.hoplon.span.call(null,G__105860,G__105861));
})();
var G__105773 = " ";
var G__105774 = (function (){var G__105862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105863 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105862,G__105863) : tailrecursion.hoplon.span.call(null,G__105862,G__105863));
})();
var G__105775 = " (";
var G__105776 = (function (){var G__105864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105865 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105864,G__105865) : tailrecursion.hoplon.span.call(null,G__105864,G__105865));
})();
var G__105777 = " ";
var G__105778 = (function (){var G__105866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105867 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105866,G__105867) : tailrecursion.hoplon.span.call(null,G__105866,G__105867));
})();
var G__105779 = ") ";
var G__105780 = (function (){var G__105868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105869 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105868,G__105869) : tailrecursion.hoplon.span.call(null,G__105868,G__105869));
})();
var G__105781 = ")))))\n(";
var G__105782 = (function (){var G__105870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105871 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105870,G__105871) : tailrecursion.hoplon.span.call(null,G__105870,G__105871));
})();
var G__105783 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86(G__105698,G__105699,G__105700,G__105701,G__105702,G__105703,G__105704,G__105705,G__105706,G__105707,G__105708,G__105709,G__105710,G__105711,G__105712,G__105713,G__105714,G__105715,G__105716,G__105717,G__105718,G__105719,G__105720,G__105721,G__105722,G__105723,G__105724,G__105725,G__105726,G__105727,G__105728,G__105729,G__105730,G__105731,G__105732,G__105733,G__105734,G__105735,G__105736,G__105737,G__105738,G__105739,G__105740,G__105741,G__105742,G__105743,G__105744,G__105745,G__105746,G__105747,G__105748,G__105749,G__105750,G__105751,G__105752,G__105753,G__105754,G__105755,G__105756,G__105757,G__105758,G__105759,G__105760,G__105761,G__105762,G__105763,G__105764,G__105765,G__105766,G__105767,G__105768,G__105769,G__105770,G__105771,G__105772,G__105773,G__105774,G__105775,G__105776,G__105777,G__105778,G__105779,G__105780,G__105781,G__105782,G__105783) : tailrecursion.hoplon.pre.call(null,G__105698,G__105699,G__105700,G__105701,G__105702,G__105703,G__105704,G__105705,G__105706,G__105707,G__105708,G__105709,G__105710,G__105711,G__105712,G__105713,G__105714,G__105715,G__105716,G__105717,G__105718,G__105719,G__105720,G__105721,G__105722,G__105723,G__105724,G__105725,G__105726,G__105727,G__105728,G__105729,G__105730,G__105731,G__105732,G__105733,G__105734,G__105735,G__105736,G__105737,G__105738,G__105739,G__105740,G__105741,G__105742,G__105743,G__105744,G__105745,G__105746,G__105747,G__105748,G__105749,G__105750,G__105751,G__105752,G__105753,G__105754,G__105755,G__105756,G__105757,G__105758,G__105759,G__105760,G__105761,G__105762,G__105763,G__105764,G__105765,G__105766,G__105767,G__105768,G__105769,G__105770,G__105771,G__105772,G__105773,G__105774,G__105775,G__105776,G__105777,G__105778,G__105779,G__105780,G__105781,G__105782,G__105783));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105696,G__105697) : tailrecursion.hoplon.div.call(null,G__105696,G__105697));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105695) : tailrecursion.hoplon.div.call(null,G__105695));
})(),(function (){var G__105872 = cljs.core.PersistentArrayMap.EMPTY;
var G__105873 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So we want, ",(function (){var G__105874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105874,G__105875) : tailrecursion.hoplon.markdown.code_node.call(null,G__105874,G__105875));
})(),", ",(function (){var G__105876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105876,G__105877) : tailrecursion.hoplon.markdown.code_node.call(null,G__105876,G__105877));
})(),", ",(function (){var G__105878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105878,G__105879) : tailrecursion.hoplon.markdown.code_node.call(null,G__105878,G__105879));
})(),", ",(function (){var G__105880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105880,G__105881) : tailrecursion.hoplon.markdown.code_node.call(null,G__105880,G__105881));
})(),", ",(function (){var G__105882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105882,G__105883) : tailrecursion.hoplon.markdown.code_node.call(null,G__105882,G__105883));
})()," (in written order, not the order of application)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105872,G__105873) : tailrecursion.hoplon.markdown.para_node.call(null,G__105872,G__105873));
})(),(function (){var G__105884 = cljs.core.PersistentArrayMap.EMPTY;
var G__105885 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second, we want ",(function (){var G__105886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105887 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105886,G__105887) : tailrecursion.hoplon.markdown.code_node.call(null,G__105886,G__105887));
})(),", ",(function (){var G__105888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105888,G__105889) : tailrecursion.hoplon.markdown.code_node.call(null,G__105888,G__105889));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105884,G__105885) : tailrecursion.hoplon.markdown.para_node.call(null,G__105884,G__105885));
})(),(function (){var G__105890 = cljs.core.PersistentArrayMap.EMPTY;
var G__105891 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The third:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105890,G__105891) : tailrecursion.hoplon.markdown.para_node.call(null,G__105890,G__105891));
})(),(function (){var G__105892 = (function (){var G__105893 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105894 = (function (){var G__105895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105896 = "(";
var G__105897 = (function (){var G__105926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105927 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105926,G__105927) : tailrecursion.hoplon.span.call(null,G__105926,G__105927));
})();
var G__105898 = "(";
var G__105899 = (function (){var G__105928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105929 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105928,G__105929) : tailrecursion.hoplon.span.call(null,G__105928,G__105929));
})();
var G__105900 = (function (){var G__105930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105931 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105930,G__105931) : tailrecursion.hoplon.span.call(null,G__105930,G__105931));
})();
var G__105901 = " (";
var G__105902 = (function (){var G__105932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105933 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105932,G__105933) : tailrecursion.hoplon.span.call(null,G__105932,G__105933));
})();
var G__105903 = " (";
var G__105904 = (function (){var G__105934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105935 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105934,G__105935) : tailrecursion.hoplon.span.call(null,G__105934,G__105935));
})();
var G__105905 = " (";
var G__105906 = (function (){var G__105936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105937 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105936,G__105937) : tailrecursion.hoplon.span.call(null,G__105936,G__105937));
})();
var G__105907 = " (";
var G__105908 = (function (){var G__105938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105939 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105938,G__105939) : tailrecursion.hoplon.span.call(null,G__105938,G__105939));
})();
var G__105909 = " (";
var G__105910 = (function (){var G__105940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105941 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105940,G__105941) : tailrecursion.hoplon.span.call(null,G__105940,G__105941));
})();
var G__105911 = " ";
var G__105912 = (function (){var G__105942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105943 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105942,G__105943) : tailrecursion.hoplon.span.call(null,G__105942,G__105943));
})();
var G__105913 = ")))))))\n((";
var G__105914 = (function (){var G__105944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105945 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105944,G__105945) : tailrecursion.hoplon.span.call(null,G__105944,G__105945));
})();
var G__105915 = " (";
var G__105916 = (function (){var G__105946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105947 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105946,G__105947) : tailrecursion.hoplon.span.call(null,G__105946,G__105947));
})();
var G__105917 = " (";
var G__105918 = (function (){var G__105948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105949 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105948,G__105949) : tailrecursion.hoplon.span.call(null,G__105948,G__105949));
})();
var G__105919 = " (";
var G__105920 = (function (){var G__105950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105951 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105950,G__105951) : tailrecursion.hoplon.span.call(null,G__105950,G__105951));
})();
var G__105921 = " (";
var G__105922 = (function (){var G__105952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105953 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105952,G__105953) : tailrecursion.hoplon.span.call(null,G__105952,G__105953));
})();
var G__105923 = " ";
var G__105924 = (function (){var G__105954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105955 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105954,G__105955) : tailrecursion.hoplon.span.call(null,G__105954,G__105955));
})();
var G__105925 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__105895,G__105896,G__105897,G__105898,G__105899,G__105900,G__105901,G__105902,G__105903,G__105904,G__105905,G__105906,G__105907,G__105908,G__105909,G__105910,G__105911,G__105912,G__105913,G__105914,G__105915,G__105916,G__105917,G__105918,G__105919,G__105920,G__105921,G__105922,G__105923,G__105924,G__105925) : tailrecursion.hoplon.pre.call(null,G__105895,G__105896,G__105897,G__105898,G__105899,G__105900,G__105901,G__105902,G__105903,G__105904,G__105905,G__105906,G__105907,G__105908,G__105909,G__105910,G__105911,G__105912,G__105913,G__105914,G__105915,G__105916,G__105917,G__105918,G__105919,G__105920,G__105921,G__105922,G__105923,G__105924,G__105925));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105893,G__105894) : tailrecursion.hoplon.div.call(null,G__105893,G__105894));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105892) : tailrecursion.hoplon.div.call(null,G__105892));
})(),(function (){var G__105956 = cljs.core.PersistentArrayMap.EMPTY;
var G__105957 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we can see that we",(function (){var G__105958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105959 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105958,G__105959) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105958,G__105959));
})(),"re going to have to do alternating ",(function (){var G__105960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105961 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105960,G__105961) : tailrecursion.hoplon.markdown.code_node.call(null,G__105960,G__105961));
})(),"s and ",(function (){var G__105962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105963 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105962,G__105963) : tailrecursion.hoplon.markdown.code_node.call(null,G__105962,G__105963));
})(),"s till we get to the answer (if you don",(function (){var G__105964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105965 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105964,G__105965) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105964,G__105965));
})(),"t believe me, write it out a bit, and be sure to check that this hypothesis works at the end as well!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105956,G__105957) : tailrecursion.hoplon.markdown.para_node.call(null,G__105956,G__105957));
})(),(function (){var G__105966 = cljs.core.PersistentArrayMap.EMPTY;
var G__105967 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So our answer is, ",(function (){var G__105968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__105969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105968,G__105969) : tailrecursion.hoplon.markdown.code_node.call(null,G__105968,G__105969));
})(),", ",(function (){var G__105970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__105971 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105970,G__105971) : tailrecursion.hoplon.markdown.code_node.call(null,G__105970,G__105971));
})(),", repeated 6 times (again, in written order, or equivalently, reverse application order)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105966,G__105967) : tailrecursion.hoplon.markdown.para_node.call(null,G__105966,G__105967));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105693;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105692;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105691;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105972 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105973 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105974 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105975 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105976 = cljs.core.PersistentArrayMap.EMPTY;
var G__105977 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we define ",(function (){var G__105978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__105979 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105978,G__105979) : tailrecursion.hoplon.markdown.code_node.call(null,G__105978,G__105979));
})()," and ",(function (){var G__105980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__105981 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105980,G__105981) : tailrecursion.hoplon.markdown.code_node.call(null,G__105980,G__105981));
})()," to be two lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105976,G__105977) : tailrecursion.hoplon.markdown.para_node.call(null,G__105976,G__105977));
})(),(function (){var G__105982 = (function (){var G__105983 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105984 = (function (){var G__105985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105986 = "(";
var G__105987 = (function (){var G__106007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106008 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106007,G__106008) : tailrecursion.hoplon.span.call(null,G__106007,G__106008));
})();
var G__105988 = (function (){var G__106009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106010 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106009,G__106010) : tailrecursion.hoplon.span.call(null,G__106009,G__106010));
})();
var G__105989 = " (";
var G__105990 = (function (){var G__106011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106012 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106011,G__106012) : tailrecursion.hoplon.span.call(null,G__106011,G__106012));
})();
var G__105991 = (function (){var G__106013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106014 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106013,G__106014) : tailrecursion.hoplon.span.call(null,G__106013,G__106014));
})();
var G__105992 = " ";
var G__105993 = (function (){var G__106015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106016 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106015,G__106016) : tailrecursion.hoplon.span.call(null,G__106015,G__106016));
})();
var G__105994 = " ";
var G__105995 = (function (){var G__106017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106018 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106017,G__106018) : tailrecursion.hoplon.span.call(null,G__106017,G__106018));
})();
var G__105996 = "))\n(";
var G__105997 = (function (){var G__106019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106020 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106019,G__106020) : tailrecursion.hoplon.span.call(null,G__106019,G__106020));
})();
var G__105998 = (function (){var G__106021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106022 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106021,G__106022) : tailrecursion.hoplon.span.call(null,G__106021,G__106022));
})();
var G__105999 = " (";
var G__106000 = (function (){var G__106023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106024 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106023,G__106024) : tailrecursion.hoplon.span.call(null,G__106023,G__106024));
})();
var G__106001 = (function (){var G__106025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106026 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106025,G__106026) : tailrecursion.hoplon.span.call(null,G__106025,G__106026));
})();
var G__106002 = " ";
var G__106003 = (function (){var G__106027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106028 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106027,G__106028) : tailrecursion.hoplon.span.call(null,G__106027,G__106028));
})();
var G__106004 = " ";
var G__106005 = (function (){var G__106029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106030 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106029,G__106030) : tailrecursion.hoplon.span.call(null,G__106029,G__106030));
})();
var G__106006 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__105985,G__105986,G__105987,G__105988,G__105989,G__105990,G__105991,G__105992,G__105993,G__105994,G__105995,G__105996,G__105997,G__105998,G__105999,G__106000,G__106001,G__106002,G__106003,G__106004,G__106005,G__106006) : tailrecursion.hoplon.pre.call(null,G__105985,G__105986,G__105987,G__105988,G__105989,G__105990,G__105991,G__105992,G__105993,G__105994,G__105995,G__105996,G__105997,G__105998,G__105999,G__106000,G__106001,G__106002,G__106003,G__106004,G__106005,G__106006));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105983,G__105984) : tailrecursion.hoplon.div.call(null,G__105983,G__105984));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105982) : tailrecursion.hoplon.div.call(null,G__105982));
})(),(function (){var G__106031 = cljs.core.PersistentArrayMap.EMPTY;
var G__106032 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What result is printed by the interpreter in response to evaluating each of the following expressions:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106031,G__106032) : tailrecursion.hoplon.markdown.para_node.call(null,G__106031,G__106032));
})(),(function (){var G__106033 = (function (){var G__106034 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106035 = (function (){var G__106036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106037 = "(";
var G__106038 = (function (){var G__106053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106054 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106053,G__106054) : tailrecursion.hoplon.span.call(null,G__106053,G__106054));
})();
var G__106039 = (function (){var G__106055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106056 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106055,G__106056) : tailrecursion.hoplon.span.call(null,G__106055,G__106056));
})();
var G__106040 = " ";
var G__106041 = (function (){var G__106057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106058 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106057,G__106058) : tailrecursion.hoplon.span.call(null,G__106057,G__106058));
})();
var G__106042 = ")\n\n(";
var G__106043 = (function (){var G__106059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106060 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106059,G__106060) : tailrecursion.hoplon.span.call(null,G__106059,G__106060));
})();
var G__106044 = (function (){var G__106061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106062 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106061,G__106062) : tailrecursion.hoplon.span.call(null,G__106061,G__106062));
})();
var G__106045 = " ";
var G__106046 = (function (){var G__106063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106064 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106063,G__106064) : tailrecursion.hoplon.span.call(null,G__106063,G__106064));
})();
var G__106047 = ")\n\n(";
var G__106048 = (function (){var G__106065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106066 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106065,G__106066) : tailrecursion.hoplon.span.call(null,G__106065,G__106066));
})();
var G__106049 = (function (){var G__106067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106068 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106067,G__106068) : tailrecursion.hoplon.span.call(null,G__106067,G__106068));
})();
var G__106050 = " ";
var G__106051 = (function (){var G__106069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106070 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106069,G__106070) : tailrecursion.hoplon.span.call(null,G__106069,G__106070));
})();
var G__106052 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__106036,G__106037,G__106038,G__106039,G__106040,G__106041,G__106042,G__106043,G__106044,G__106045,G__106046,G__106047,G__106048,G__106049,G__106050,G__106051,G__106052) : tailrecursion.hoplon.pre.call(null,G__106036,G__106037,G__106038,G__106039,G__106040,G__106041,G__106042,G__106043,G__106044,G__106045,G__106046,G__106047,G__106048,G__106049,G__106050,G__106051,G__106052));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106034,G__106035) : tailrecursion.hoplon.div.call(null,G__106034,G__106035));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106033) : tailrecursion.hoplon.div.call(null,G__106033));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105975;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105974;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105973;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105972;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106071 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106072 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106073 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106074 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106075 = (function (){var G__106076 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106077 = (function (){var G__106078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106079 = "(";
var G__106080 = (function (){var G__106131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106132 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106131,G__106132) : tailrecursion.hoplon.span.call(null,G__106131,G__106132));
})();
var G__106081 = (function (){var G__106133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106134 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106133,G__106134) : tailrecursion.hoplon.span.call(null,G__106133,G__106134));
})();
var G__106082 = " ";
var G__106083 = (function (){var G__106135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106136 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106135,G__106136) : tailrecursion.hoplon.span.call(null,G__106135,G__106136));
})();
var G__106084 = ")\n(";
var G__106085 = (function (){var G__106137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106138 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106137,G__106138) : tailrecursion.hoplon.span.call(null,G__106137,G__106138));
})();
var G__106086 = " ";
var G__106087 = (function (){var G__106139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106140 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106139,G__106140) : tailrecursion.hoplon.span.call(null,G__106139,G__106140));
})();
var G__106088 = " ";
var G__106089 = (function (){var G__106141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106142 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106141,G__106142) : tailrecursion.hoplon.span.call(null,G__106141,G__106142));
})();
var G__106090 = " ";
var G__106091 = (function (){var G__106143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106144 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106143,G__106144) : tailrecursion.hoplon.span.call(null,G__106143,G__106144));
})();
var G__106092 = " ";
var G__106093 = (function (){var G__106145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106146 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106145,G__106146) : tailrecursion.hoplon.span.call(null,G__106145,G__106146));
})();
var G__106094 = " ";
var G__106095 = (function (){var G__106147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106148 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106147,G__106148) : tailrecursion.hoplon.span.call(null,G__106147,G__106148));
})();
var G__106096 = ")\n\n(";
var G__106097 = (function (){var G__106149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106150 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106149,G__106150) : tailrecursion.hoplon.span.call(null,G__106149,G__106150));
})();
var G__106098 = (function (){var G__106151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106152 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106151,G__106152) : tailrecursion.hoplon.span.call(null,G__106151,G__106152));
})();
var G__106099 = " ";
var G__106100 = (function (){var G__106153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106154 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106153,G__106154) : tailrecursion.hoplon.span.call(null,G__106153,G__106154));
})();
var G__106101 = ")\n((";
var G__106102 = (function (){var G__106155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106156 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106155,G__106156) : tailrecursion.hoplon.span.call(null,G__106155,G__106156));
})();
var G__106103 = " ";
var G__106104 = (function (){var G__106157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106158 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106157,G__106158) : tailrecursion.hoplon.span.call(null,G__106157,G__106158));
})();
var G__106105 = " ";
var G__106106 = (function (){var G__106159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106160 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106159,G__106160) : tailrecursion.hoplon.span.call(null,G__106159,G__106160));
})();
var G__106107 = ") ";
var G__106108 = (function (){var G__106161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106162 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106161,G__106162) : tailrecursion.hoplon.span.call(null,G__106161,G__106162));
})();
var G__106109 = " ";
var G__106110 = (function (){var G__106163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106164 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106163,G__106164) : tailrecursion.hoplon.span.call(null,G__106163,G__106164));
})();
var G__106111 = " ";
var G__106112 = (function (){var G__106165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106166 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106165,G__106166) : tailrecursion.hoplon.span.call(null,G__106165,G__106166));
})();
var G__106113 = ")\n\n(";
var G__106114 = (function (){var G__106167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106168 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106167,G__106168) : tailrecursion.hoplon.span.call(null,G__106167,G__106168));
})();
var G__106115 = (function (){var G__106169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106170 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106169,G__106170) : tailrecursion.hoplon.span.call(null,G__106169,G__106170));
})();
var G__106116 = " ";
var G__106117 = (function (){var G__106171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106172 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106171,G__106172) : tailrecursion.hoplon.span.call(null,G__106171,G__106172));
})();
var G__106118 = ")\n((";
var G__106119 = (function (){var G__106173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106174 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106173,G__106174) : tailrecursion.hoplon.span.call(null,G__106173,G__106174));
})();
var G__106120 = " ";
var G__106121 = (function (){var G__106175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106176 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106175,G__106176) : tailrecursion.hoplon.span.call(null,G__106175,G__106176));
})();
var G__106122 = " ";
var G__106123 = (function (){var G__106177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106178 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106177,G__106178) : tailrecursion.hoplon.span.call(null,G__106177,G__106178));
})();
var G__106124 = ") (";
var G__106125 = (function (){var G__106179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106180 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106179,G__106180) : tailrecursion.hoplon.span.call(null,G__106179,G__106180));
})();
var G__106126 = " ";
var G__106127 = (function (){var G__106181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106182 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106181,G__106182) : tailrecursion.hoplon.span.call(null,G__106181,G__106182));
})();
var G__106128 = " ";
var G__106129 = (function (){var G__106183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106184 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106183,G__106184) : tailrecursion.hoplon.span.call(null,G__106183,G__106184));
})();
var G__106130 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__106078,G__106079,G__106080,G__106081,G__106082,G__106083,G__106084,G__106085,G__106086,G__106087,G__106088,G__106089,G__106090,G__106091,G__106092,G__106093,G__106094,G__106095,G__106096,G__106097,G__106098,G__106099,G__106100,G__106101,G__106102,G__106103,G__106104,G__106105,G__106106,G__106107,G__106108,G__106109,G__106110,G__106111,G__106112,G__106113,G__106114,G__106115,G__106116,G__106117,G__106118,G__106119,G__106120,G__106121,G__106122,G__106123,G__106124,G__106125,G__106126,G__106127,G__106128,G__106129,G__106130) : tailrecursion.hoplon.pre.call(null,G__106078,G__106079,G__106080,G__106081,G__106082,G__106083,G__106084,G__106085,G__106086,G__106087,G__106088,G__106089,G__106090,G__106091,G__106092,G__106093,G__106094,G__106095,G__106096,G__106097,G__106098,G__106099,G__106100,G__106101,G__106102,G__106103,G__106104,G__106105,G__106106,G__106107,G__106108,G__106109,G__106110,G__106111,G__106112,G__106113,G__106114,G__106115,G__106116,G__106117,G__106118,G__106119,G__106120,G__106121,G__106122,G__106123,G__106124,G__106125,G__106126,G__106127,G__106128,G__106129,G__106130));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106076,G__106077) : tailrecursion.hoplon.div.call(null,G__106076,G__106077));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106075) : tailrecursion.hoplon.div.call(null,G__106075));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106074;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106073;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106072;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106071;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106185 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106186 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106187 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106188 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106189 = cljs.core.PersistentArrayMap.EMPTY;
var G__106190 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify your ",(function (){var G__106191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__106192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106191,G__106192) : tailrecursion.hoplon.markdown.code_node.call(null,G__106191,G__106192));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/18/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.18"], null)], 0))," to produce a ",(function (){var G__106193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"deep-reverse"], null);
var G__106194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106193,G__106194) : tailrecursion.hoplon.markdown.code_node.call(null,G__106193,G__106194));
})()," procedure that takes a list as argument and returns as its value the list with its elements reversed and with all sublists deep-reversed as well. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106189,G__106190) : tailrecursion.hoplon.markdown.para_node.call(null,G__106189,G__106190));
})(),(function (){var G__106195 = cljs.core.PersistentArrayMap.EMPTY;
var G__106196 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["```clj (def x (list (list 1 2) (list 3 4)))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106195,G__106196) : tailrecursion.hoplon.markdown.para_node.call(null,G__106195,G__106196));
})(),(function (){var G__106197 = cljs.core.PersistentArrayMap.EMPTY;
var G__106198 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["x ((1 2) (3 4))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106197,G__106198) : tailrecursion.hoplon.markdown.para_node.call(null,G__106197,G__106198));
})(),(function (){var G__106199 = cljs.core.PersistentArrayMap.EMPTY;
var G__106200 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(reverse x) ((3 4) (1 2))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106199,G__106200) : tailrecursion.hoplon.markdown.para_node.call(null,G__106199,G__106200));
})(),(function (){var G__106201 = cljs.core.PersistentArrayMap.EMPTY;
var G__106202 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(deep-reverse x) ((4 3) (2 1))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106201,G__106202) : tailrecursion.hoplon.markdown.para_node.call(null,G__106201,G__106202));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106188;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106187;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106186;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106185;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106203 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106204 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106205 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106206 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106207 = (function (){var G__106208 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106209 = (function (){var G__106210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106211 = "(";
var G__106212 = (function (){var G__106264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106265 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106264,G__106265) : tailrecursion.hoplon.span.call(null,G__106264,G__106265));
})();
var G__106213 = (function (){var G__106266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106267 = "deep-reverse";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106266,G__106267) : tailrecursion.hoplon.span.call(null,G__106266,G__106267));
})();
var G__106214 = " [";
var G__106215 = (function (){var G__106268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106269 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106268,G__106269) : tailrecursion.hoplon.span.call(null,G__106268,G__106269));
})();
var G__106216 = "]\n  (";
var G__106217 = (function (){var G__106270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106271 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106270,G__106271) : tailrecursion.hoplon.span.call(null,G__106270,G__106271));
})();
var G__106218 = "[";
var G__106219 = (function (){var G__106272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106273 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106272,G__106273) : tailrecursion.hoplon.span.call(null,G__106272,G__106273));
})();
var G__106220 = " ";
var G__106221 = (function (){var G__106274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106275 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106274,G__106275) : tailrecursion.hoplon.span.call(null,G__106274,G__106275));
})();
var G__106222 = "\n         ";
var G__106223 = (function (){var G__106276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106277 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106276,G__106277) : tailrecursion.hoplon.span.call(null,G__106276,G__106277));
})();
var G__106224 = "   (";
var G__106225 = (function (){var G__106278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106279 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106278,G__106279) : tailrecursion.hoplon.span.call(null,G__106278,G__106279));
})();
var G__106226 = ")]\n    (";
var G__106227 = (function (){var G__106280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106281 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106280,G__106281) : tailrecursion.hoplon.span.call(null,G__106280,G__106281));
})();
var G__106228 = "(";
var G__106229 = (function (){var G__106282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106283 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106282,G__106283) : tailrecursion.hoplon.span.call(null,G__106282,G__106283));
})();
var G__106230 = "(";
var G__106231 = (function (){var G__106284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106285 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106284,G__106285) : tailrecursion.hoplon.span.call(null,G__106284,G__106285));
})();
var G__106232 = " ";
var G__106233 = (function (){var G__106286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106287 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106286,G__106287) : tailrecursion.hoplon.span.call(null,G__106286,G__106287));
})();
var G__106234 = ")\n               (";
var G__106235 = (function (){var G__106288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106289 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106288,G__106289) : tailrecursion.hoplon.span.call(null,G__106288,G__106289));
})();
var G__106236 = " ";
var G__106237 = (function (){var G__106290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106291 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106290,G__106291) : tailrecursion.hoplon.span.call(null,G__106290,G__106291));
})();
var G__106238 = ")) ";
var G__106239 = (function (){var G__106292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106293 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106292,G__106293) : tailrecursion.hoplon.span.call(null,G__106292,G__106293));
})();
var G__106240 = "\n          (";
var G__106241 = (function (){var G__106294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106295 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106294,G__106295) : tailrecursion.hoplon.span.call(null,G__106294,G__106295));
})();
var G__106242 = "(";
var G__106243 = (function (){var G__106296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106297 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106296,G__106297) : tailrecursion.hoplon.span.call(null,G__106296,G__106297));
})();
var G__106244 = " ";
var G__106245 = (function (){var G__106298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106299 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106298,G__106299) : tailrecursion.hoplon.span.call(null,G__106298,G__106299));
})();
var G__106246 = ")) ";
var G__106247 = (function (){var G__106300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106301 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106300,G__106301) : tailrecursion.hoplon.span.call(null,G__106300,G__106301));
})();
var G__106248 = "\n          ";
var G__106249 = (function (){var G__106302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106303 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106302,G__106303) : tailrecursion.hoplon.span.call(null,G__106302,G__106303));
})();
var G__106250 = " (";
var G__106251 = (function (){var G__106304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106305 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106304,G__106305) : tailrecursion.hoplon.span.call(null,G__106304,G__106305));
})();
var G__106252 = " (";
var G__106253 = (function (){var G__106306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106307 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106306,G__106307) : tailrecursion.hoplon.span.call(null,G__106306,G__106307));
})();
var G__106254 = (function (){var G__106308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106309 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106308,G__106309) : tailrecursion.hoplon.span.call(null,G__106308,G__106309));
})();
var G__106255 = ")\n                       (";
var G__106256 = (function (){var G__106310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106311 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106310,G__106311) : tailrecursion.hoplon.span.call(null,G__106310,G__106311));
})();
var G__106257 = (function (){var G__106312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106313 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106312,G__106313) : tailrecursion.hoplon.span.call(null,G__106312,G__106313));
})();
var G__106258 = "\n                             (";
var G__106259 = (function (){var G__106314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106315 = "deep-reverse";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106314,G__106315) : tailrecursion.hoplon.span.call(null,G__106314,G__106315));
})();
var G__106260 = " (";
var G__106261 = (function (){var G__106316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106317 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106316,G__106317) : tailrecursion.hoplon.span.call(null,G__106316,G__106317));
})();
var G__106262 = (function (){var G__106318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106319 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106318,G__106319) : tailrecursion.hoplon.span.call(null,G__106318,G__106319));
})();
var G__106263 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__106210,G__106211,G__106212,G__106213,G__106214,G__106215,G__106216,G__106217,G__106218,G__106219,G__106220,G__106221,G__106222,G__106223,G__106224,G__106225,G__106226,G__106227,G__106228,G__106229,G__106230,G__106231,G__106232,G__106233,G__106234,G__106235,G__106236,G__106237,G__106238,G__106239,G__106240,G__106241,G__106242,G__106243,G__106244,G__106245,G__106246,G__106247,G__106248,G__106249,G__106250,G__106251,G__106252,G__106253,G__106254,G__106255,G__106256,G__106257,G__106258,G__106259,G__106260,G__106261,G__106262,G__106263) : tailrecursion.hoplon.pre.call(null,G__106210,G__106211,G__106212,G__106213,G__106214,G__106215,G__106216,G__106217,G__106218,G__106219,G__106220,G__106221,G__106222,G__106223,G__106224,G__106225,G__106226,G__106227,G__106228,G__106229,G__106230,G__106231,G__106232,G__106233,G__106234,G__106235,G__106236,G__106237,G__106238,G__106239,G__106240,G__106241,G__106242,G__106243,G__106244,G__106245,G__106246,G__106247,G__106248,G__106249,G__106250,G__106251,G__106252,G__106253,G__106254,G__106255,G__106256,G__106257,G__106258,G__106259,G__106260,G__106261,G__106262,G__106263));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106208,G__106209) : tailrecursion.hoplon.div.call(null,G__106208,G__106209));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106207) : tailrecursion.hoplon.div.call(null,G__106207));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106206;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106205;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106204;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106203;
}})()], 0))], 0)),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106320 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106321 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106322 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106323 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106324 = cljs.core.PersistentArrayMap.EMPTY;
var G__106325 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Write a procedure ",(function (){var G__106326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fringe"], null);
var G__106327 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106326,G__106327) : tailrecursion.hoplon.markdown.code_node.call(null,G__106326,G__106327));
})()," that takes as argument a tree (represented as a list) and returns a list whose elements are all the leaves of the tree arranged in left-to-right order. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106324,G__106325) : tailrecursion.hoplon.markdown.para_node.call(null,G__106324,G__106325));
})(),(function (){var G__106328 = (function (){var G__106329 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106330 = (function (){var G__106331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106332 = "(";
var G__106333 = (function (){var G__106383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106384 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106383,G__106384) : tailrecursion.hoplon.span.call(null,G__106383,G__106384));
})();
var G__106334 = (function (){var G__106385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106386 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106385,G__106386) : tailrecursion.hoplon.span.call(null,G__106385,G__106386));
})();
var G__106335 = " (";
var G__106336 = (function (){var G__106387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106388 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106387,G__106388) : tailrecursion.hoplon.span.call(null,G__106387,G__106388));
})();
var G__106337 = "(";
var G__106338 = (function (){var G__106389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106390 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106389,G__106390) : tailrecursion.hoplon.span.call(null,G__106389,G__106390));
})();
var G__106339 = (function (){var G__106391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106392 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106391,G__106392) : tailrecursion.hoplon.span.call(null,G__106391,G__106392));
})();
var G__106340 = " ";
var G__106341 = (function (){var G__106393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106394 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106393,G__106394) : tailrecursion.hoplon.span.call(null,G__106393,G__106394));
})();
var G__106342 = ") (";
var G__106343 = (function (){var G__106395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106396 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106395,G__106396) : tailrecursion.hoplon.span.call(null,G__106395,G__106396));
})();
var G__106344 = (function (){var G__106397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106398 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106397,G__106398) : tailrecursion.hoplon.span.call(null,G__106397,G__106398));
})();
var G__106345 = " ";
var G__106346 = (function (){var G__106399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106400 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106399,G__106400) : tailrecursion.hoplon.span.call(null,G__106399,G__106400));
})();
var G__106347 = ")))\n\n(";
var G__106348 = (function (){var G__106401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106402 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106401,G__106402) : tailrecursion.hoplon.span.call(null,G__106401,G__106402));
})();
var G__106349 = " ";
var G__106350 = (function (){var G__106403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106404 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106403,G__106404) : tailrecursion.hoplon.span.call(null,G__106403,G__106404));
})();
var G__106351 = ")\n(";
var G__106352 = (function (){var G__106405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106406 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106405,G__106406) : tailrecursion.hoplon.span.call(null,G__106405,G__106406));
})();
var G__106353 = " ";
var G__106354 = (function (){var G__106407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106408 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106407,G__106408) : tailrecursion.hoplon.span.call(null,G__106407,G__106408));
})();
var G__106355 = " ";
var G__106356 = (function (){var G__106409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106410 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106409,G__106410) : tailrecursion.hoplon.span.call(null,G__106409,G__106410));
})();
var G__106357 = " ";
var G__106358 = (function (){var G__106411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106412 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106411,G__106412) : tailrecursion.hoplon.span.call(null,G__106411,G__106412));
})();
var G__106359 = ")\n\n(";
var G__106360 = (function (){var G__106413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106414 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106413,G__106414) : tailrecursion.hoplon.span.call(null,G__106413,G__106414));
})();
var G__106361 = " (";
var G__106362 = (function (){var G__106415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106416 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106415,G__106416) : tailrecursion.hoplon.span.call(null,G__106415,G__106416));
})();
var G__106363 = (function (){var G__106417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106418 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106417,G__106418) : tailrecursion.hoplon.span.call(null,G__106417,G__106418));
})();
var G__106364 = " ";
var G__106365 = (function (){var G__106419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106420 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106419,G__106420) : tailrecursion.hoplon.span.call(null,G__106419,G__106420));
})();
var G__106366 = "))\n(";
var G__106367 = (function (){var G__106421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106422 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106421,G__106422) : tailrecursion.hoplon.span.call(null,G__106421,G__106422));
})();
var G__106368 = " ";
var G__106369 = (function (){var G__106423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106424 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106423,G__106424) : tailrecursion.hoplon.span.call(null,G__106423,G__106424));
})();
var G__106370 = " ";
var G__106371 = (function (){var G__106425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106426 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106425,G__106426) : tailrecursion.hoplon.span.call(null,G__106425,G__106426));
})();
var G__106372 = " ";
var G__106373 = (function (){var G__106427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106428 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106427,G__106428) : tailrecursion.hoplon.span.call(null,G__106427,G__106428));
})();
var G__106374 = " ";
var G__106375 = (function (){var G__106429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106430 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106429,G__106430) : tailrecursion.hoplon.span.call(null,G__106429,G__106430));
})();
var G__106376 = " ";
var G__106377 = (function (){var G__106431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106432 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106431,G__106432) : tailrecursion.hoplon.span.call(null,G__106431,G__106432));
})();
var G__106378 = " ";
var G__106379 = (function (){var G__106433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106434 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106433,G__106434) : tailrecursion.hoplon.span.call(null,G__106433,G__106434));
})();
var G__106380 = " ";
var G__106381 = (function (){var G__106435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106436 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106435,G__106436) : tailrecursion.hoplon.span.call(null,G__106435,G__106436));
})();
var G__106382 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__106331,G__106332,G__106333,G__106334,G__106335,G__106336,G__106337,G__106338,G__106339,G__106340,G__106341,G__106342,G__106343,G__106344,G__106345,G__106346,G__106347,G__106348,G__106349,G__106350,G__106351,G__106352,G__106353,G__106354,G__106355,G__106356,G__106357,G__106358,G__106359,G__106360,G__106361,G__106362,G__106363,G__106364,G__106365,G__106366,G__106367,G__106368,G__106369,G__106370,G__106371,G__106372,G__106373,G__106374,G__106375,G__106376,G__106377,G__106378,G__106379,G__106380,G__106381,G__106382) : tailrecursion.hoplon.pre.call(null,G__106331,G__106332,G__106333,G__106334,G__106335,G__106336,G__106337,G__106338,G__106339,G__106340,G__106341,G__106342,G__106343,G__106344,G__106345,G__106346,G__106347,G__106348,G__106349,G__106350,G__106351,G__106352,G__106353,G__106354,G__106355,G__106356,G__106357,G__106358,G__106359,G__106360,G__106361,G__106362,G__106363,G__106364,G__106365,G__106366,G__106367,G__106368,G__106369,G__106370,G__106371,G__106372,G__106373,G__106374,G__106375,G__106376,G__106377,G__106378,G__106379,G__106380,G__106381,G__106382));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106329,G__106330) : tailrecursion.hoplon.div.call(null,G__106329,G__106330));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106328) : tailrecursion.hoplon.div.call(null,G__106328));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106323;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106322;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106321;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106320;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106437 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106438 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106439 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106440 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106441 = (function (){var G__106442 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106443 = (function (){var G__106444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106445 = "(";
var G__106446 = (function (){var G__106522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106523 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106522,G__106523) : tailrecursion.hoplon.span.call(null,G__106522,G__106523));
})();
var G__106447 = (function (){var G__106524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106525 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106524,G__106525) : tailrecursion.hoplon.span.call(null,G__106524,G__106525));
})();
var G__106448 = " [";
var G__106449 = (function (){var G__106526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106527 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106526,G__106527) : tailrecursion.hoplon.span.call(null,G__106526,G__106527));
})();
var G__106450 = "]\n  (";
var G__106451 = (function (){var G__106528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106529 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106528,G__106529) : tailrecursion.hoplon.span.call(null,G__106528,G__106529));
})();
var G__106452 = "[";
var G__106453 = (function (){var G__106530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106531 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106530,G__106531) : tailrecursion.hoplon.span.call(null,G__106530,G__106531));
})();
var G__106454 = " ";
var G__106455 = (function (){var G__106532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106533 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106532,G__106533) : tailrecursion.hoplon.span.call(null,G__106532,G__106533));
})();
var G__106456 = "\n         ";
var G__106457 = (function (){var G__106534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106535 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106534,G__106535) : tailrecursion.hoplon.span.call(null,G__106534,G__106535));
})();
var G__106458 = "   (";
var G__106459 = (function (){var G__106536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106537 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106536,G__106537) : tailrecursion.hoplon.span.call(null,G__106536,G__106537));
})();
var G__106460 = ")]\n    (";
var G__106461 = (function (){var G__106538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106539 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106538,G__106539) : tailrecursion.hoplon.span.call(null,G__106538,G__106539));
})();
var G__106462 = "(";
var G__106463 = (function (){var G__106540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106541 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106540,G__106541) : tailrecursion.hoplon.span.call(null,G__106540,G__106541));
})();
var G__106464 = "(";
var G__106465 = (function (){var G__106542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106543 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106542,G__106543) : tailrecursion.hoplon.span.call(null,G__106542,G__106543));
})();
var G__106466 = " ";
var G__106467 = (function (){var G__106544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106545 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106544,G__106545) : tailrecursion.hoplon.span.call(null,G__106544,G__106545));
})();
var G__106468 = "))\n          (";
var G__106469 = (function (){var G__106546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106547 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106546,G__106547) : tailrecursion.hoplon.span.call(null,G__106546,G__106547));
})();
var G__106470 = " (";
var G__106471 = (function (){var G__106548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106549 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106548,G__106549) : tailrecursion.hoplon.span.call(null,G__106548,G__106549));
})();
var G__106472 = " ";
var G__106473 = (function (){var G__106550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__106551 = "\"Oops. That's not a list.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106550,G__106551) : tailrecursion.hoplon.span.call(null,G__106550,G__106551));
})();
var G__106474 = "))\n          (";
var G__106475 = (function (){var G__106552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106553 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106552,G__106553) : tailrecursion.hoplon.span.call(null,G__106552,G__106553));
})();
var G__106476 = " ";
var G__106477 = (function (){var G__106554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106555 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106554,G__106555) : tailrecursion.hoplon.span.call(null,G__106554,G__106555));
})();
var G__106478 = ")\n          ";
var G__106479 = (function (){var G__106556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106557 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106556,G__106557) : tailrecursion.hoplon.span.call(null,G__106556,G__106557));
})();
var G__106480 = "\n          (";
var G__106481 = (function (){var G__106558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106559 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106558,G__106559) : tailrecursion.hoplon.span.call(null,G__106558,G__106559));
})();
var G__106482 = " (";
var G__106483 = (function (){var G__106560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106561 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106560,G__106561) : tailrecursion.hoplon.span.call(null,G__106560,G__106561));
})();
var G__106484 = (function (){var G__106562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106563 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106562,G__106563) : tailrecursion.hoplon.span.call(null,G__106562,G__106563));
})();
var G__106485 = "))\n          (";
var G__106486 = (function (){var G__106564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106565 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106564,G__106565) : tailrecursion.hoplon.span.call(null,G__106564,G__106565));
})();
var G__106487 = " (";
var G__106488 = (function (){var G__106566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106567 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106566,G__106567) : tailrecursion.hoplon.span.call(null,G__106566,G__106567));
})();
var G__106489 = "(";
var G__106490 = (function (){var G__106568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106569 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106568,G__106569) : tailrecursion.hoplon.span.call(null,G__106568,G__106569));
})();
var G__106491 = (function (){var G__106570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106571 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106570,G__106571) : tailrecursion.hoplon.span.call(null,G__106570,G__106571));
})();
var G__106492 = ")\n                         (";
var G__106493 = (function (){var G__106572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106573 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106572,G__106573) : tailrecursion.hoplon.span.call(null,G__106572,G__106573));
})();
var G__106494 = (function (){var G__106574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106575 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106574,G__106575) : tailrecursion.hoplon.span.call(null,G__106574,G__106575));
})();
var G__106495 = "))\n                 ";
var G__106496 = (function (){var G__106576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106577 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106576,G__106577) : tailrecursion.hoplon.span.call(null,G__106576,G__106577));
})();
var G__106497 = ")\n          ";
var G__106498 = (function (){var G__106578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106579 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106578,G__106579) : tailrecursion.hoplon.span.call(null,G__106578,G__106579));
})();
var G__106499 = "\n          (";
var G__106500 = (function (){var G__106580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106581 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106580,G__106581) : tailrecursion.hoplon.span.call(null,G__106580,G__106581));
})();
var G__106501 = " (";
var G__106502 = (function (){var G__106582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106583 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106582,G__106583) : tailrecursion.hoplon.span.call(null,G__106582,G__106583));
})();
var G__106503 = (function (){var G__106584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106585 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106584,G__106585) : tailrecursion.hoplon.span.call(null,G__106584,G__106585));
})();
var G__106504 = ")\n                 (";
var G__106505 = (function (){var G__106586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106587 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106586,G__106587) : tailrecursion.hoplon.span.call(null,G__106586,G__106587));
})();
var G__106506 = (function (){var G__106588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106589 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106588,G__106589) : tailrecursion.hoplon.span.call(null,G__106588,G__106589));
})();
var G__106507 = "\n                       (";
var G__106508 = (function (){var G__106590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106591 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106590,G__106591) : tailrecursion.hoplon.span.call(null,G__106590,G__106591));
})();
var G__106509 = (function (){var G__106592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106593 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106592,G__106593) : tailrecursion.hoplon.span.call(null,G__106592,G__106593));
})();
var G__106510 = "))))))\n(";
var G__106511 = (function (){var G__106594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106595 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106594,G__106595) : tailrecursion.hoplon.span.call(null,G__106594,G__106595));
})();
var G__106512 = (function (){var G__106596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106597 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106596,G__106597) : tailrecursion.hoplon.span.call(null,G__106596,G__106597));
})();
var G__106513 = " [";
var G__106514 = (function (){var G__106598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106599 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106598,G__106599) : tailrecursion.hoplon.span.call(null,G__106598,G__106599));
})();
var G__106515 = "]\n  (";
var G__106516 = (function (){var G__106600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106601 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106600,G__106601) : tailrecursion.hoplon.span.call(null,G__106600,G__106601));
})();
var G__106517 = "(";
var G__106518 = (function (){var G__106602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106603 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106602,G__106603) : tailrecursion.hoplon.span.call(null,G__106602,G__106603));
})();
var G__106519 = " ";
var G__106520 = (function (){var G__106604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106605 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106604,G__106605) : tailrecursion.hoplon.span.call(null,G__106604,G__106605));
})();
var G__106521 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78(G__106444,G__106445,G__106446,G__106447,G__106448,G__106449,G__106450,G__106451,G__106452,G__106453,G__106454,G__106455,G__106456,G__106457,G__106458,G__106459,G__106460,G__106461,G__106462,G__106463,G__106464,G__106465,G__106466,G__106467,G__106468,G__106469,G__106470,G__106471,G__106472,G__106473,G__106474,G__106475,G__106476,G__106477,G__106478,G__106479,G__106480,G__106481,G__106482,G__106483,G__106484,G__106485,G__106486,G__106487,G__106488,G__106489,G__106490,G__106491,G__106492,G__106493,G__106494,G__106495,G__106496,G__106497,G__106498,G__106499,G__106500,G__106501,G__106502,G__106503,G__106504,G__106505,G__106506,G__106507,G__106508,G__106509,G__106510,G__106511,G__106512,G__106513,G__106514,G__106515,G__106516,G__106517,G__106518,G__106519,G__106520,G__106521) : tailrecursion.hoplon.pre.call(null,G__106444,G__106445,G__106446,G__106447,G__106448,G__106449,G__106450,G__106451,G__106452,G__106453,G__106454,G__106455,G__106456,G__106457,G__106458,G__106459,G__106460,G__106461,G__106462,G__106463,G__106464,G__106465,G__106466,G__106467,G__106468,G__106469,G__106470,G__106471,G__106472,G__106473,G__106474,G__106475,G__106476,G__106477,G__106478,G__106479,G__106480,G__106481,G__106482,G__106483,G__106484,G__106485,G__106486,G__106487,G__106488,G__106489,G__106490,G__106491,G__106492,G__106493,G__106494,G__106495,G__106496,G__106497,G__106498,G__106499,G__106500,G__106501,G__106502,G__106503,G__106504,G__106505,G__106506,G__106507,G__106508,G__106509,G__106510,G__106511,G__106512,G__106513,G__106514,G__106515,G__106516,G__106517,G__106518,G__106519,G__106520,G__106521));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106442,G__106443) : tailrecursion.hoplon.div.call(null,G__106442,G__106443));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106441) : tailrecursion.hoplon.div.call(null,G__106441));
})(),(function (){var G__106606 = cljs.core.PersistentArrayMap.EMPTY;
var G__106607 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you execute this, it should return an error. The reason being that ",(function (){var G__106608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__106609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106608,G__106609) : tailrecursion.hoplon.markdown.code_node.call(null,G__106608,G__106609));
})()," doesn",(function (){var G__106610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__106611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__106610,G__106611) : tailrecursion.hoplon.markdown.simple_node.call(null,G__106610,G__106611));
})(),"t return a ",(function (){var G__106612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__106613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106612,G__106613) : tailrecursion.hoplon.markdown.code_node.call(null,G__106612,G__106613));
})(),", but rather a lazy sequence. To account for this, we could write:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106606,G__106607) : tailrecursion.hoplon.markdown.para_node.call(null,G__106606,G__106607));
})(),(function (){var G__106614 = (function (){var G__106615 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106616 = (function (){var G__106617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106618 = "(";
var G__106619 = (function (){var G__106694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106695 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106694,G__106695) : tailrecursion.hoplon.span.call(null,G__106694,G__106695));
})();
var G__106620 = (function (){var G__106696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106697 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106696,G__106697) : tailrecursion.hoplon.span.call(null,G__106696,G__106697));
})();
var G__106621 = " [";
var G__106622 = (function (){var G__106698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106699 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106698,G__106699) : tailrecursion.hoplon.span.call(null,G__106698,G__106699));
})();
var G__106623 = "]\n  (";
var G__106624 = (function (){var G__106700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106701 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106700,G__106701) : tailrecursion.hoplon.span.call(null,G__106700,G__106701));
})();
var G__106625 = "[";
var G__106626 = (function (){var G__106702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106703 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106702,G__106703) : tailrecursion.hoplon.span.call(null,G__106702,G__106703));
})();
var G__106627 = " ";
var G__106628 = (function (){var G__106704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106705 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106704,G__106705) : tailrecursion.hoplon.span.call(null,G__106704,G__106705));
})();
var G__106629 = "\n         ";
var G__106630 = (function (){var G__106706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106707 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106706,G__106707) : tailrecursion.hoplon.span.call(null,G__106706,G__106707));
})();
var G__106631 = "   (";
var G__106632 = (function (){var G__106708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106709 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106708,G__106709) : tailrecursion.hoplon.span.call(null,G__106708,G__106709));
})();
var G__106633 = ")]\n    (";
var G__106634 = (function (){var G__106710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106711 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106710,G__106711) : tailrecursion.hoplon.span.call(null,G__106710,G__106711));
})();
var G__106635 = "(";
var G__106636 = (function (){var G__106712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106713 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106712,G__106713) : tailrecursion.hoplon.span.call(null,G__106712,G__106713));
})();
var G__106637 = "(";
var G__106638 = (function (){var G__106714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106715 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106714,G__106715) : tailrecursion.hoplon.span.call(null,G__106714,G__106715));
})();
var G__106639 = (function (){var G__106716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106717 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106716,G__106717) : tailrecursion.hoplon.span.call(null,G__106716,G__106717));
})();
var G__106640 = "))\n          (";
var G__106641 = (function (){var G__106718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106719 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106718,G__106719) : tailrecursion.hoplon.span.call(null,G__106718,G__106719));
})();
var G__106642 = " (";
var G__106643 = (function (){var G__106720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106721 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106720,G__106721) : tailrecursion.hoplon.span.call(null,G__106720,G__106721));
})();
var G__106644 = " ";
var G__106645 = (function (){var G__106722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__106723 = "\"Oops. That's not a sequential object!.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106722,G__106723) : tailrecursion.hoplon.span.call(null,G__106722,G__106723));
})();
var G__106646 = "))\n          (";
var G__106647 = (function (){var G__106724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106725 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106724,G__106725) : tailrecursion.hoplon.span.call(null,G__106724,G__106725));
})();
var G__106648 = " ";
var G__106649 = (function (){var G__106726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106727 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106726,G__106727) : tailrecursion.hoplon.span.call(null,G__106726,G__106727));
})();
var G__106650 = ")\n          ";
var G__106651 = (function (){var G__106728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106729 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106728,G__106729) : tailrecursion.hoplon.span.call(null,G__106728,G__106729));
})();
var G__106652 = "\n          (";
var G__106653 = (function (){var G__106730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106731 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106730,G__106731) : tailrecursion.hoplon.span.call(null,G__106730,G__106731));
})();
var G__106654 = "(";
var G__106655 = (function (){var G__106732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106733 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106732,G__106733) : tailrecursion.hoplon.span.call(null,G__106732,G__106733));
})();
var G__106656 = (function (){var G__106734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106735 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106734,G__106735) : tailrecursion.hoplon.span.call(null,G__106734,G__106735));
})();
var G__106657 = "))\n          (";
var G__106658 = (function (){var G__106736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106737 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106736,G__106737) : tailrecursion.hoplon.span.call(null,G__106736,G__106737));
})();
var G__106659 = " (";
var G__106660 = (function (){var G__106738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106739 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106738,G__106739) : tailrecursion.hoplon.span.call(null,G__106738,G__106739));
})();
var G__106661 = "(";
var G__106662 = (function (){var G__106740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106741 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106740,G__106741) : tailrecursion.hoplon.span.call(null,G__106740,G__106741));
})();
var G__106663 = (function (){var G__106742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106743 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106742,G__106743) : tailrecursion.hoplon.span.call(null,G__106742,G__106743));
})();
var G__106664 = ")\n                         (";
var G__106665 = (function (){var G__106744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106745 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106744,G__106745) : tailrecursion.hoplon.span.call(null,G__106744,G__106745));
})();
var G__106666 = (function (){var G__106746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106747 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106746,G__106747) : tailrecursion.hoplon.span.call(null,G__106746,G__106747));
})();
var G__106667 = "))\n                 ";
var G__106668 = (function (){var G__106748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106749 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106748,G__106749) : tailrecursion.hoplon.span.call(null,G__106748,G__106749));
})();
var G__106669 = ")\n          ";
var G__106670 = (function (){var G__106750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106751 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106750,G__106751) : tailrecursion.hoplon.span.call(null,G__106750,G__106751));
})();
var G__106671 = "\n          (";
var G__106672 = (function (){var G__106752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106753 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106752,G__106753) : tailrecursion.hoplon.span.call(null,G__106752,G__106753));
})();
var G__106673 = " (";
var G__106674 = (function (){var G__106754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106755 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106754,G__106755) : tailrecursion.hoplon.span.call(null,G__106754,G__106755));
})();
var G__106675 = (function (){var G__106756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106757 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106756,G__106757) : tailrecursion.hoplon.span.call(null,G__106756,G__106757));
})();
var G__106676 = ")\n                 (";
var G__106677 = (function (){var G__106758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106759 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106758,G__106759) : tailrecursion.hoplon.span.call(null,G__106758,G__106759));
})();
var G__106678 = (function (){var G__106760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106761 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106760,G__106761) : tailrecursion.hoplon.span.call(null,G__106760,G__106761));
})();
var G__106679 = "\n                       (";
var G__106680 = (function (){var G__106762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106763 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106762,G__106763) : tailrecursion.hoplon.span.call(null,G__106762,G__106763));
})();
var G__106681 = (function (){var G__106764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106765 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106764,G__106765) : tailrecursion.hoplon.span.call(null,G__106764,G__106765));
})();
var G__106682 = "))))))\n(";
var G__106683 = (function (){var G__106766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106767 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106766,G__106767) : tailrecursion.hoplon.span.call(null,G__106766,G__106767));
})();
var G__106684 = (function (){var G__106768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106769 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106768,G__106769) : tailrecursion.hoplon.span.call(null,G__106768,G__106769));
})();
var G__106685 = " [";
var G__106686 = (function (){var G__106770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106771 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106770,G__106771) : tailrecursion.hoplon.span.call(null,G__106770,G__106771));
})();
var G__106687 = "]\n  (";
var G__106688 = (function (){var G__106772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106773 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106772,G__106773) : tailrecursion.hoplon.span.call(null,G__106772,G__106773));
})();
var G__106689 = "(";
var G__106690 = (function (){var G__106774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106775 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106774,G__106775) : tailrecursion.hoplon.span.call(null,G__106774,G__106775));
})();
var G__106691 = " ";
var G__106692 = (function (){var G__106776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106777 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106776,G__106777) : tailrecursion.hoplon.span.call(null,G__106776,G__106777));
})();
var G__106693 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$77 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$77(G__106617,G__106618,G__106619,G__106620,G__106621,G__106622,G__106623,G__106624,G__106625,G__106626,G__106627,G__106628,G__106629,G__106630,G__106631,G__106632,G__106633,G__106634,G__106635,G__106636,G__106637,G__106638,G__106639,G__106640,G__106641,G__106642,G__106643,G__106644,G__106645,G__106646,G__106647,G__106648,G__106649,G__106650,G__106651,G__106652,G__106653,G__106654,G__106655,G__106656,G__106657,G__106658,G__106659,G__106660,G__106661,G__106662,G__106663,G__106664,G__106665,G__106666,G__106667,G__106668,G__106669,G__106670,G__106671,G__106672,G__106673,G__106674,G__106675,G__106676,G__106677,G__106678,G__106679,G__106680,G__106681,G__106682,G__106683,G__106684,G__106685,G__106686,G__106687,G__106688,G__106689,G__106690,G__106691,G__106692,G__106693) : tailrecursion.hoplon.pre.call(null,G__106617,G__106618,G__106619,G__106620,G__106621,G__106622,G__106623,G__106624,G__106625,G__106626,G__106627,G__106628,G__106629,G__106630,G__106631,G__106632,G__106633,G__106634,G__106635,G__106636,G__106637,G__106638,G__106639,G__106640,G__106641,G__106642,G__106643,G__106644,G__106645,G__106646,G__106647,G__106648,G__106649,G__106650,G__106651,G__106652,G__106653,G__106654,G__106655,G__106656,G__106657,G__106658,G__106659,G__106660,G__106661,G__106662,G__106663,G__106664,G__106665,G__106666,G__106667,G__106668,G__106669,G__106670,G__106671,G__106672,G__106673,G__106674,G__106675,G__106676,G__106677,G__106678,G__106679,G__106680,G__106681,G__106682,G__106683,G__106684,G__106685,G__106686,G__106687,G__106688,G__106689,G__106690,G__106691,G__106692,G__106693));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106615,G__106616) : tailrecursion.hoplon.div.call(null,G__106615,G__106616));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106614) : tailrecursion.hoplon.div.call(null,G__106614));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106440;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106439;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106438;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106437;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106778 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106779 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106780 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106781 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106782 = cljs.core.PersistentArrayMap.EMPTY;
var G__106783 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A binary mobile consists of two branches, a left branch and a right branch. Each branch is a rod of a certain length, from which hangs either a weight or another binary mobile. We can represent a binary mobile using compund data by constructing it from two branches (for example, using ",(function (){var G__106784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__106785 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106784,G__106785) : tailrecursion.hoplon.markdown.code_node.call(null,G__106784,G__106785));
})(),"):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106782,G__106783) : tailrecursion.hoplon.markdown.para_node.call(null,G__106782,G__106783));
})(),(function (){var G__106786 = (function (){var G__106787 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106788 = (function (){var G__106789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106790 = "(";
var G__106791 = (function (){var G__106800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106801 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106800,G__106801) : tailrecursion.hoplon.span.call(null,G__106800,G__106801));
})();
var G__106792 = (function (){var G__106802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106803 = "make-mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106802,G__106803) : tailrecursion.hoplon.span.call(null,G__106802,G__106803));
})();
var G__106793 = " [";
var G__106794 = (function (){var G__106804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106805 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106804,G__106805) : tailrecursion.hoplon.span.call(null,G__106804,G__106805));
})();
var G__106795 = (function (){var G__106806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106807 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106806,G__106807) : tailrecursion.hoplon.span.call(null,G__106806,G__106807));
})();
var G__106796 = "]\n  (";
var G__106797 = (function (){var G__106808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106809 = "list left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106808,G__106809) : tailrecursion.hoplon.span.call(null,G__106808,G__106809));
})();
var G__106798 = (function (){var G__106810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106811 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106810,G__106811) : tailrecursion.hoplon.span.call(null,G__106810,G__106811));
})();
var G__106799 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__106789,G__106790,G__106791,G__106792,G__106793,G__106794,G__106795,G__106796,G__106797,G__106798,G__106799) : tailrecursion.hoplon.pre.call(null,G__106789,G__106790,G__106791,G__106792,G__106793,G__106794,G__106795,G__106796,G__106797,G__106798,G__106799));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106787,G__106788) : tailrecursion.hoplon.div.call(null,G__106787,G__106788));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106786) : tailrecursion.hoplon.div.call(null,G__106786));
})(),(function (){var G__106812 = cljs.core.PersistentArrayMap.EMPTY;
var G__106813 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A branch is constructed from a ",(function (){var G__106814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__106815 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106814,G__106815) : tailrecursion.hoplon.markdown.code_node.call(null,G__106814,G__106815));
})()," (which must be a number) together with a ",(function (){var G__106816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"structure"], null);
var G__106817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106816,G__106817) : tailrecursion.hoplon.markdown.code_node.call(null,G__106816,G__106817));
})(),", which may be either a number (representing a simple weight) or another mobile:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106812,G__106813) : tailrecursion.hoplon.markdown.para_node.call(null,G__106812,G__106813));
})(),(function (){var G__106818 = (function (){var G__106819 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106820 = (function (){var G__106821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106822 = "(";
var G__106823 = (function (){var G__106835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106836 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106835,G__106836) : tailrecursion.hoplon.span.call(null,G__106835,G__106836));
})();
var G__106824 = (function (){var G__106837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106838 = "make-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106837,G__106838) : tailrecursion.hoplon.span.call(null,G__106837,G__106838));
})();
var G__106825 = " [";
var G__106826 = (function (){var G__106839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106840 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106839,G__106840) : tailrecursion.hoplon.span.call(null,G__106839,G__106840));
})();
var G__106827 = " ";
var G__106828 = (function (){var G__106841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106842 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106841,G__106842) : tailrecursion.hoplon.span.call(null,G__106841,G__106842));
})();
var G__106829 = "]\n  (";
var G__106830 = (function (){var G__106843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106844 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106843,G__106844) : tailrecursion.hoplon.span.call(null,G__106843,G__106844));
})();
var G__106831 = (function (){var G__106845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106846 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106845,G__106846) : tailrecursion.hoplon.span.call(null,G__106845,G__106846));
})();
var G__106832 = " ";
var G__106833 = (function (){var G__106847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106848 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106847,G__106848) : tailrecursion.hoplon.span.call(null,G__106847,G__106848));
})();
var G__106834 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__106821,G__106822,G__106823,G__106824,G__106825,G__106826,G__106827,G__106828,G__106829,G__106830,G__106831,G__106832,G__106833,G__106834) : tailrecursion.hoplon.pre.call(null,G__106821,G__106822,G__106823,G__106824,G__106825,G__106826,G__106827,G__106828,G__106829,G__106830,G__106831,G__106832,G__106833,G__106834));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106819,G__106820) : tailrecursion.hoplon.div.call(null,G__106819,G__106820));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106818) : tailrecursion.hoplon.div.call(null,G__106818));
})(),(function (){var G__106849 = cljs.core.PersistentArrayMap.EMPTY;
var G__106850 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Write the corresponding selectors ",(function (){var G__106851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"left-branch"], null);
var G__106852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106851,G__106852) : tailrecursion.hoplon.markdown.code_node.call(null,G__106851,G__106852));
})()," and ",(function (){var G__106853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"right-branch"], null);
var G__106854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106853,G__106854) : tailrecursion.hoplon.markdown.code_node.call(null,G__106853,G__106854));
})(),", which return the branches of a mobile, and ",(function (){var G__106855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"branch-length"], null);
var G__106856 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106855,G__106856) : tailrecursion.hoplon.markdown.code_node.call(null,G__106855,G__106856));
})()," and ",(function (){var G__106857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"branch-structure"], null);
var G__106858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106857,G__106858) : tailrecursion.hoplon.markdown.code_node.call(null,G__106857,G__106858));
})(),", which return the components of a branch."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106849,G__106850) : tailrecursion.hoplon.markdown.para_node.call(null,G__106849,G__106850));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106781;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106780;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106779;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106778;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106859 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106860 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106861 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106862 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106863 = (function (){var G__106864 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106865 = (function (){var G__106866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106867 = "(";
var G__106868 = (function (){var G__106900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106901 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106900,G__106901) : tailrecursion.hoplon.span.call(null,G__106900,G__106901));
})();
var G__106869 = (function (){var G__106902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106903 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106902,G__106903) : tailrecursion.hoplon.span.call(null,G__106902,G__106903));
})();
var G__106870 = " [";
var G__106871 = (function (){var G__106904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106905 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106904,G__106905) : tailrecursion.hoplon.span.call(null,G__106904,G__106905));
})();
var G__106872 = "]\n  (";
var G__106873 = (function (){var G__106906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106907 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106906,G__106907) : tailrecursion.hoplon.span.call(null,G__106906,G__106907));
})();
var G__106874 = (function (){var G__106908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106909 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106908,G__106909) : tailrecursion.hoplon.span.call(null,G__106908,G__106909));
})();
var G__106875 = "))\n(";
var G__106876 = (function (){var G__106910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106911 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106910,G__106911) : tailrecursion.hoplon.span.call(null,G__106910,G__106911));
})();
var G__106877 = (function (){var G__106912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106913 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106912,G__106913) : tailrecursion.hoplon.span.call(null,G__106912,G__106913));
})();
var G__106878 = " [";
var G__106879 = (function (){var G__106914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106915 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106914,G__106915) : tailrecursion.hoplon.span.call(null,G__106914,G__106915));
})();
var G__106880 = "]\n  (";
var G__106881 = (function (){var G__106916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106917 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106916,G__106917) : tailrecursion.hoplon.span.call(null,G__106916,G__106917));
})();
var G__106882 = (function (){var G__106918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106919 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106918,G__106919) : tailrecursion.hoplon.span.call(null,G__106918,G__106919));
})();
var G__106883 = "))\n(";
var G__106884 = (function (){var G__106920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106921 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106920,G__106921) : tailrecursion.hoplon.span.call(null,G__106920,G__106921));
})();
var G__106885 = (function (){var G__106922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106923 = "branch-length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106922,G__106923) : tailrecursion.hoplon.span.call(null,G__106922,G__106923));
})();
var G__106886 = " [";
var G__106887 = (function (){var G__106924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106925 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106924,G__106925) : tailrecursion.hoplon.span.call(null,G__106924,G__106925));
})();
var G__106888 = "]\n  (";
var G__106889 = (function (){var G__106926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106927 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106926,G__106927) : tailrecursion.hoplon.span.call(null,G__106926,G__106927));
})();
var G__106890 = (function (){var G__106928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106929 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106928,G__106929) : tailrecursion.hoplon.span.call(null,G__106928,G__106929));
})();
var G__106891 = "))\n(";
var G__106892 = (function (){var G__106930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106931 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106930,G__106931) : tailrecursion.hoplon.span.call(null,G__106930,G__106931));
})();
var G__106893 = (function (){var G__106932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106933 = "branch-structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106932,G__106933) : tailrecursion.hoplon.span.call(null,G__106932,G__106933));
})();
var G__106894 = " [";
var G__106895 = (function (){var G__106934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106935 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106934,G__106935) : tailrecursion.hoplon.span.call(null,G__106934,G__106935));
})();
var G__106896 = "]\n  (";
var G__106897 = (function (){var G__106936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106937 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106936,G__106937) : tailrecursion.hoplon.span.call(null,G__106936,G__106937));
})();
var G__106898 = (function (){var G__106938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106939 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106938,G__106939) : tailrecursion.hoplon.span.call(null,G__106938,G__106939));
})();
var G__106899 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__106866,G__106867,G__106868,G__106869,G__106870,G__106871,G__106872,G__106873,G__106874,G__106875,G__106876,G__106877,G__106878,G__106879,G__106880,G__106881,G__106882,G__106883,G__106884,G__106885,G__106886,G__106887,G__106888,G__106889,G__106890,G__106891,G__106892,G__106893,G__106894,G__106895,G__106896,G__106897,G__106898,G__106899) : tailrecursion.hoplon.pre.call(null,G__106866,G__106867,G__106868,G__106869,G__106870,G__106871,G__106872,G__106873,G__106874,G__106875,G__106876,G__106877,G__106878,G__106879,G__106880,G__106881,G__106882,G__106883,G__106884,G__106885,G__106886,G__106887,G__106888,G__106889,G__106890,G__106891,G__106892,G__106893,G__106894,G__106895,G__106896,G__106897,G__106898,G__106899));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106864,G__106865) : tailrecursion.hoplon.div.call(null,G__106864,G__106865));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106863) : tailrecursion.hoplon.div.call(null,G__106863));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106862;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106861;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106860;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106859;
}})()], 0)),"",(function (){var _STAR_references_STAR_106940 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106941 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106942 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106943 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106944 = cljs.core.PersistentArrayMap.EMPTY;
var G__106945 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. Using your selectors, define a procedure ",(function (){var G__106946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"total-weight"], null);
var G__106947 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106946,G__106947) : tailrecursion.hoplon.markdown.code_node.call(null,G__106946,G__106947));
})()," that returns the total weight of a mobile."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106944,G__106945) : tailrecursion.hoplon.markdown.para_node.call(null,G__106944,G__106945));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106943;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106942;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106941;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106940;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106948 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106949 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106950 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106951 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106952 = (function (){var G__106953 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106954 = (function (){var G__106955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106956 = "(";
var G__106957 = (function (){var G__106983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106984 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106983,G__106984) : tailrecursion.hoplon.span.call(null,G__106983,G__106984));
})();
var G__106958 = (function (){var G__106985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106986 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106985,G__106986) : tailrecursion.hoplon.span.call(null,G__106985,G__106986));
})();
var G__106959 = " [";
var G__106960 = (function (){var G__106987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106988 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106987,G__106988) : tailrecursion.hoplon.span.call(null,G__106987,G__106988));
})();
var G__106961 = "]\n  (";
var G__106962 = (function (){var G__106989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106990 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106989,G__106990) : tailrecursion.hoplon.span.call(null,G__106989,G__106990));
})();
var G__106963 = "(";
var G__106964 = (function (){var G__106991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106992 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106991,G__106992) : tailrecursion.hoplon.span.call(null,G__106991,G__106992));
})();
var G__106965 = (function (){var G__106993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106994 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106993,G__106994) : tailrecursion.hoplon.span.call(null,G__106993,G__106994));
})();
var G__106966 = ")\n      (";
var G__106967 = (function (){var G__106995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106996 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106995,G__106996) : tailrecursion.hoplon.span.call(null,G__106995,G__106996));
})();
var G__106968 = "(";
var G__106969 = (function (){var G__106997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106998 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106997,G__106998) : tailrecursion.hoplon.span.call(null,G__106997,G__106998));
})();
var G__106970 = " (";
var G__106971 = (function (){var G__106999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107000 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106999,G__107000) : tailrecursion.hoplon.span.call(null,G__106999,G__107000));
})();
var G__106972 = " ";
var G__106973 = (function (){var G__107001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107002 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107001,G__107002) : tailrecursion.hoplon.span.call(null,G__107001,G__107002));
})();
var G__106974 = "))\n         (";
var G__106975 = (function (){var G__107003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107004 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107003,G__107004) : tailrecursion.hoplon.span.call(null,G__107003,G__107004));
})();
var G__106976 = " (";
var G__106977 = (function (){var G__107005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107006 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107005,G__107006) : tailrecursion.hoplon.span.call(null,G__107005,G__107006));
})();
var G__106978 = " ";
var G__106979 = (function (){var G__107007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107008 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107007,G__107008) : tailrecursion.hoplon.span.call(null,G__107007,G__107008));
})();
var G__106980 = ")))\n      ";
var G__106981 = (function (){var G__107009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107010 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107009,G__107010) : tailrecursion.hoplon.span.call(null,G__107009,G__107010));
})();
var G__106982 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__106955,G__106956,G__106957,G__106958,G__106959,G__106960,G__106961,G__106962,G__106963,G__106964,G__106965,G__106966,G__106967,G__106968,G__106969,G__106970,G__106971,G__106972,G__106973,G__106974,G__106975,G__106976,G__106977,G__106978,G__106979,G__106980,G__106981,G__106982) : tailrecursion.hoplon.pre.call(null,G__106955,G__106956,G__106957,G__106958,G__106959,G__106960,G__106961,G__106962,G__106963,G__106964,G__106965,G__106966,G__106967,G__106968,G__106969,G__106970,G__106971,G__106972,G__106973,G__106974,G__106975,G__106976,G__106977,G__106978,G__106979,G__106980,G__106981,G__106982));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106953,G__106954) : tailrecursion.hoplon.div.call(null,G__106953,G__106954));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106952) : tailrecursion.hoplon.div.call(null,G__106952));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106951;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106950;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106949;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106948;
}})()], 0)),"",(function (){var _STAR_references_STAR_107011 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107012 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107013 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107014 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107015 = cljs.core.PersistentArrayMap.EMPTY;
var G__107016 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["c. A mobile is said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced"], null)], 0))," if the torque applied by its top-left branch is equal to that applied by its top-right branch (that is, if the length of the left rod multiplied by the weight hanging from that rod is equal to the corresponding product for the right side) and if each of the submobiles hanging off its branches is balanced. Design a predicate that tests whether a binary mobile is balanced."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107015,G__107016) : tailrecursion.hoplon.markdown.para_node.call(null,G__107015,G__107016));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107014;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107013;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107012;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107011;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107017 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107018 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107019 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107020 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107021 = (function (){var G__107022 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107023 = (function (){var G__107024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107025 = "(";
var G__107026 = (function (){var G__107098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107099 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107098,G__107099) : tailrecursion.hoplon.span.call(null,G__107098,G__107099));
})();
var G__107027 = (function (){var G__107100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107101 = "branch-torque";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107100,G__107101) : tailrecursion.hoplon.span.call(null,G__107100,G__107101));
})();
var G__107028 = " [";
var G__107029 = (function (){var G__107102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107103 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107102,G__107103) : tailrecursion.hoplon.span.call(null,G__107102,G__107103));
})();
var G__107030 = "]\n  (";
var G__107031 = (function (){var G__107104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107105 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107104,G__107105) : tailrecursion.hoplon.span.call(null,G__107104,G__107105));
})();
var G__107032 = "(";
var G__107033 = (function (){var G__107106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107107 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107106,G__107107) : tailrecursion.hoplon.span.call(null,G__107106,G__107107));
})();
var G__107034 = " ";
var G__107035 = (function (){var G__107108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107109 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107108,G__107109) : tailrecursion.hoplon.span.call(null,G__107108,G__107109));
})();
var G__107036 = ")\n     (";
var G__107037 = (function (){var G__107110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107111 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107110,G__107111) : tailrecursion.hoplon.span.call(null,G__107110,G__107111));
})();
var G__107038 = " (";
var G__107039 = (function (){var G__107112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107113 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107112,G__107113) : tailrecursion.hoplon.span.call(null,G__107112,G__107113));
})();
var G__107040 = " ";
var G__107041 = (function (){var G__107114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107115 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107114,G__107115) : tailrecursion.hoplon.span.call(null,G__107114,G__107115));
})();
var G__107042 = "))))\n(";
var G__107043 = (function (){var G__107116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107117 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107116,G__107117) : tailrecursion.hoplon.span.call(null,G__107116,G__107117));
})();
var G__107044 = (function (){var G__107118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107119 = "top-level-balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107118,G__107119) : tailrecursion.hoplon.span.call(null,G__107118,G__107119));
})();
var G__107045 = " [";
var G__107046 = (function (){var G__107120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107121 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107120,G__107121) : tailrecursion.hoplon.span.call(null,G__107120,G__107121));
})();
var G__107047 = "]\n  (";
var G__107048 = (function (){var G__107122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107123 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107122,G__107123) : tailrecursion.hoplon.span.call(null,G__107122,G__107123));
})();
var G__107049 = "(";
var G__107050 = (function (){var G__107124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107125 = "branch-torque";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107124,G__107125) : tailrecursion.hoplon.span.call(null,G__107124,G__107125));
})();
var G__107051 = " (";
var G__107052 = (function (){var G__107126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107127 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107126,G__107127) : tailrecursion.hoplon.span.call(null,G__107126,G__107127));
})();
var G__107053 = " ";
var G__107054 = (function (){var G__107128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107129 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107128,G__107129) : tailrecursion.hoplon.span.call(null,G__107128,G__107129));
})();
var G__107055 = "))\n     (";
var G__107056 = (function (){var G__107130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107131 = "branch-torque";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107130,G__107131) : tailrecursion.hoplon.span.call(null,G__107130,G__107131));
})();
var G__107057 = " (";
var G__107058 = (function (){var G__107132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107133 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107132,G__107133) : tailrecursion.hoplon.span.call(null,G__107132,G__107133));
})();
var G__107059 = " ";
var G__107060 = (function (){var G__107134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107135 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107134,G__107135) : tailrecursion.hoplon.span.call(null,G__107134,G__107135));
})();
var G__107061 = "))))\n(";
var G__107062 = (function (){var G__107136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107137 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107136,G__107137) : tailrecursion.hoplon.span.call(null,G__107136,G__107137));
})();
var G__107063 = (function (){var G__107138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107139 = "balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107138,G__107139) : tailrecursion.hoplon.span.call(null,G__107138,G__107139));
})();
var G__107064 = " [";
var G__107065 = (function (){var G__107140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107141 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107140,G__107141) : tailrecursion.hoplon.span.call(null,G__107140,G__107141));
})();
var G__107066 = "]\n  (";
var G__107067 = (function (){var G__107142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107143 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107142,G__107143) : tailrecursion.hoplon.span.call(null,G__107142,G__107143));
})();
var G__107068 = "(";
var G__107069 = (function (){var G__107144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107145 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107144,G__107145) : tailrecursion.hoplon.span.call(null,G__107144,G__107145));
})();
var G__107070 = "(";
var G__107071 = (function (){var G__107146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107147 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107146,G__107147) : tailrecursion.hoplon.span.call(null,G__107146,G__107147));
})();
var G__107072 = (function (){var G__107148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107149 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107148,G__107149) : tailrecursion.hoplon.span.call(null,G__107148,G__107149));
})();
var G__107073 = "))\n      ";
var G__107074 = (function (){var G__107150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107151 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107150,G__107151) : tailrecursion.hoplon.span.call(null,G__107150,G__107151));
})();
var G__107075 = "\n      (";
var G__107076 = (function (){var G__107152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107153 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107152,G__107153) : tailrecursion.hoplon.span.call(null,G__107152,G__107153));
})();
var G__107077 = "(";
var G__107078 = (function (){var G__107154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107155 = "top-level-balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107154,G__107155) : tailrecursion.hoplon.span.call(null,G__107154,G__107155));
})();
var G__107079 = " ";
var G__107080 = (function (){var G__107156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107157 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107156,G__107157) : tailrecursion.hoplon.span.call(null,G__107156,G__107157));
})();
var G__107081 = ")\n           (";
var G__107082 = (function (){var G__107158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107159 = "balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107158,G__107159) : tailrecursion.hoplon.span.call(null,G__107158,G__107159));
})();
var G__107083 = " (";
var G__107084 = (function (){var G__107160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107161 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107160,G__107161) : tailrecursion.hoplon.span.call(null,G__107160,G__107161));
})();
var G__107085 = " (";
var G__107086 = (function (){var G__107162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107163 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107162,G__107163) : tailrecursion.hoplon.span.call(null,G__107162,G__107163));
})();
var G__107087 = " ";
var G__107088 = (function (){var G__107164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107165 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107164,G__107165) : tailrecursion.hoplon.span.call(null,G__107164,G__107165));
})();
var G__107089 = ")))\n           (";
var G__107090 = (function (){var G__107166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107167 = "balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107166,G__107167) : tailrecursion.hoplon.span.call(null,G__107166,G__107167));
})();
var G__107091 = " (";
var G__107092 = (function (){var G__107168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107169 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107168,G__107169) : tailrecursion.hoplon.span.call(null,G__107168,G__107169));
})();
var G__107093 = " (";
var G__107094 = (function (){var G__107170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107171 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107170,G__107171) : tailrecursion.hoplon.span.call(null,G__107170,G__107171));
})();
var G__107095 = " ";
var G__107096 = (function (){var G__107172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107173 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107172,G__107173) : tailrecursion.hoplon.span.call(null,G__107172,G__107173));
})();
var G__107097 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74(G__107024,G__107025,G__107026,G__107027,G__107028,G__107029,G__107030,G__107031,G__107032,G__107033,G__107034,G__107035,G__107036,G__107037,G__107038,G__107039,G__107040,G__107041,G__107042,G__107043,G__107044,G__107045,G__107046,G__107047,G__107048,G__107049,G__107050,G__107051,G__107052,G__107053,G__107054,G__107055,G__107056,G__107057,G__107058,G__107059,G__107060,G__107061,G__107062,G__107063,G__107064,G__107065,G__107066,G__107067,G__107068,G__107069,G__107070,G__107071,G__107072,G__107073,G__107074,G__107075,G__107076,G__107077,G__107078,G__107079,G__107080,G__107081,G__107082,G__107083,G__107084,G__107085,G__107086,G__107087,G__107088,G__107089,G__107090,G__107091,G__107092,G__107093,G__107094,G__107095,G__107096,G__107097) : tailrecursion.hoplon.pre.call(null,G__107024,G__107025,G__107026,G__107027,G__107028,G__107029,G__107030,G__107031,G__107032,G__107033,G__107034,G__107035,G__107036,G__107037,G__107038,G__107039,G__107040,G__107041,G__107042,G__107043,G__107044,G__107045,G__107046,G__107047,G__107048,G__107049,G__107050,G__107051,G__107052,G__107053,G__107054,G__107055,G__107056,G__107057,G__107058,G__107059,G__107060,G__107061,G__107062,G__107063,G__107064,G__107065,G__107066,G__107067,G__107068,G__107069,G__107070,G__107071,G__107072,G__107073,G__107074,G__107075,G__107076,G__107077,G__107078,G__107079,G__107080,G__107081,G__107082,G__107083,G__107084,G__107085,G__107086,G__107087,G__107088,G__107089,G__107090,G__107091,G__107092,G__107093,G__107094,G__107095,G__107096,G__107097));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107022,G__107023) : tailrecursion.hoplon.div.call(null,G__107022,G__107023));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107021) : tailrecursion.hoplon.div.call(null,G__107021));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107020;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107019;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107018;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107017;
}})()], 0)),"",(function (){var _STAR_references_STAR_107174 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107175 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107176 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107177 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107178 = cljs.core.PersistentArrayMap.EMPTY;
var G__107179 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["d. Now suppose we change the constructor"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107178,G__107179) : tailrecursion.hoplon.markdown.para_node.call(null,G__107178,G__107179));
})(),(function (){var G__107180 = (function (){var G__107181 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107182 = (function (){var G__107183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107184 = "(";
var G__107185 = (function (){var G__107194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107195 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107194,G__107195) : tailrecursion.hoplon.span.call(null,G__107194,G__107195));
})();
var G__107186 = (function (){var G__107196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107197 = "make-mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107196,G__107197) : tailrecursion.hoplon.span.call(null,G__107196,G__107197));
})();
var G__107187 = " [";
var G__107188 = (function (){var G__107198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107199 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107198,G__107199) : tailrecursion.hoplon.span.call(null,G__107198,G__107199));
})();
var G__107189 = (function (){var G__107200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107201 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107200,G__107201) : tailrecursion.hoplon.span.call(null,G__107200,G__107201));
})();
var G__107190 = "]\n  (";
var G__107191 = (function (){var G__107202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107203 = "conj right ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107202,G__107203) : tailrecursion.hoplon.span.call(null,G__107202,G__107203));
})();
var G__107192 = (function (){var G__107204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107205 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107204,G__107205) : tailrecursion.hoplon.span.call(null,G__107204,G__107205));
})();
var G__107193 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__107183,G__107184,G__107185,G__107186,G__107187,G__107188,G__107189,G__107190,G__107191,G__107192,G__107193) : tailrecursion.hoplon.pre.call(null,G__107183,G__107184,G__107185,G__107186,G__107187,G__107188,G__107189,G__107190,G__107191,G__107192,G__107193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107181,G__107182) : tailrecursion.hoplon.div.call(null,G__107181,G__107182));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107180) : tailrecursion.hoplon.div.call(null,G__107180));
})(),(function (){var G__107206 = cljs.core.PersistentArrayMap.EMPTY;
var G__107207 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How much do you need to change to your programs to convert them to the new representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107206,G__107207) : tailrecursion.hoplon.markdown.para_node.call(null,G__107206,G__107207));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107177;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107176;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107175;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107174;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107208 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107209 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107210 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107211 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107212 = (function (){var G__107213 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107214 = (function (){var G__107215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107216 = "(";
var G__107217 = (function (){var G__107233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107234 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107233,G__107234) : tailrecursion.hoplon.span.call(null,G__107233,G__107234));
})();
var G__107218 = (function (){var G__107235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107236 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107235,G__107236) : tailrecursion.hoplon.span.call(null,G__107235,G__107236));
})();
var G__107219 = " [";
var G__107220 = (function (){var G__107237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107238 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107237,G__107238) : tailrecursion.hoplon.span.call(null,G__107237,G__107238));
})();
var G__107221 = "]\n  (";
var G__107222 = (function (){var G__107239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107240 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107239,G__107240) : tailrecursion.hoplon.span.call(null,G__107239,G__107240));
})();
var G__107223 = (function (){var G__107241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107242 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107241,G__107242) : tailrecursion.hoplon.span.call(null,G__107241,G__107242));
})();
var G__107224 = "))\n(";
var G__107225 = (function (){var G__107243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107244 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107243,G__107244) : tailrecursion.hoplon.span.call(null,G__107243,G__107244));
})();
var G__107226 = (function (){var G__107245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107246 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107245,G__107246) : tailrecursion.hoplon.span.call(null,G__107245,G__107246));
})();
var G__107227 = " [";
var G__107228 = (function (){var G__107247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107248 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107247,G__107248) : tailrecursion.hoplon.span.call(null,G__107247,G__107248));
})();
var G__107229 = "]\n  (";
var G__107230 = (function (){var G__107249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107250 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107249,G__107250) : tailrecursion.hoplon.span.call(null,G__107249,G__107250));
})();
var G__107231 = (function (){var G__107251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107252 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107251,G__107252) : tailrecursion.hoplon.span.call(null,G__107251,G__107252));
})();
var G__107232 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__107215,G__107216,G__107217,G__107218,G__107219,G__107220,G__107221,G__107222,G__107223,G__107224,G__107225,G__107226,G__107227,G__107228,G__107229,G__107230,G__107231,G__107232) : tailrecursion.hoplon.pre.call(null,G__107215,G__107216,G__107217,G__107218,G__107219,G__107220,G__107221,G__107222,G__107223,G__107224,G__107225,G__107226,G__107227,G__107228,G__107229,G__107230,G__107231,G__107232));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107213,G__107214) : tailrecursion.hoplon.div.call(null,G__107213,G__107214));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107212) : tailrecursion.hoplon.div.call(null,G__107212));
})(),(function (){var G__107253 = cljs.core.PersistentArrayMap.EMPTY;
var G__107254 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And we",(function (){var G__107255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__107256 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__107255,G__107256) : tailrecursion.hoplon.markdown.simple_node.call(null,G__107255,G__107256));
})(),"re good to go."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107253,G__107254) : tailrecursion.hoplon.markdown.para_node.call(null,G__107253,G__107254));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107211;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107210;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107209;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107208;
}})()], 0))], 0))], 0));
var G__101394 = "";
var G__101395 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Mapping Over Trees"], null),(function (){var _STAR_references_STAR_107257 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107258 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107259 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107260 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107261 = cljs.core.PersistentArrayMap.EMPTY;
var G__107262 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Just as ",(function (){var G__107263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__107264 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107263,G__107264) : tailrecursion.hoplon.markdown.code_node.call(null,G__107263,G__107264));
})()," is a powerful abstraction for dealing with sequences, ",(function (){var G__107265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__107266 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107265,G__107266) : tailrecursion.hoplon.markdown.code_node.call(null,G__107265,G__107266));
})()," together with recursion is a powerful abstraction for dealing with trees. For instance, the ",(function (){var G__107267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-tree"], null);
var G__107268 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107267,G__107268) : tailrecursion.hoplon.markdown.code_node.call(null,G__107267,G__107268));
})()," procedure, analogous to ",(function (){var G__107269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__107270 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107269,G__107270) : tailrecursion.hoplon.markdown.code_node.call(null,G__107269,G__107270));
})()," of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.1"], null)], 0)),", takes as arguments a numeric factor and a tree whose leaves are numbers. It returns a tree of the same shape, where each number is multiplied by the factor. The recursive plan for ",(function (){var G__107271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-tree"], null);
var G__107272 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107271,G__107272) : tailrecursion.hoplon.markdown.code_node.call(null,G__107271,G__107272));
})()," is similar to the one for ",(function (){var G__107273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__107274 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107273,G__107274) : tailrecursion.hoplon.markdown.code_node.call(null,G__107273,G__107274));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107261,G__107262) : tailrecursion.hoplon.markdown.para_node.call(null,G__107261,G__107262));
})(),(function (){var G__107275 = (function (){var G__107276 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107277 = (function (){var G__107278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107279 = "(";
var G__107280 = (function (){var G__107359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107360 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107359,G__107360) : tailrecursion.hoplon.span.call(null,G__107359,G__107360));
})();
var G__107281 = (function (){var G__107361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107362 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107361,G__107362) : tailrecursion.hoplon.span.call(null,G__107361,G__107362));
})();
var G__107282 = " [";
var G__107283 = (function (){var G__107363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107364 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107363,G__107364) : tailrecursion.hoplon.span.call(null,G__107363,G__107364));
})();
var G__107284 = " ";
var G__107285 = (function (){var G__107365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107366 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107365,G__107366) : tailrecursion.hoplon.span.call(null,G__107365,G__107366));
})();
var G__107286 = "]\n  (";
var G__107287 = (function (){var G__107367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107368 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107367,G__107368) : tailrecursion.hoplon.span.call(null,G__107367,G__107368));
})();
var G__107288 = "(";
var G__107289 = (function (){var G__107369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107370 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107369,G__107370) : tailrecursion.hoplon.span.call(null,G__107369,G__107370));
})();
var G__107290 = "(";
var G__107291 = (function (){var G__107371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107372 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107371,G__107372) : tailrecursion.hoplon.span.call(null,G__107371,G__107372));
})();
var G__107292 = (function (){var G__107373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107374 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107373,G__107374) : tailrecursion.hoplon.span.call(null,G__107373,G__107374));
})();
var G__107293 = ")) (";
var G__107294 = (function (){var G__107375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107376 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107375,G__107376) : tailrecursion.hoplon.span.call(null,G__107375,G__107376));
})();
var G__107295 = (function (){var G__107377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107378 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107377,G__107378) : tailrecursion.hoplon.span.call(null,G__107377,G__107378));
})();
var G__107296 = " ";
var G__107297 = (function (){var G__107379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107380 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107379,G__107380) : tailrecursion.hoplon.span.call(null,G__107379,G__107380));
})();
var G__107298 = ")\n        (";
var G__107299 = (function (){var G__107381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107382 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107381,G__107382) : tailrecursion.hoplon.span.call(null,G__107381,G__107382));
})();
var G__107300 = " ";
var G__107301 = (function (){var G__107383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107384 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107383,G__107384) : tailrecursion.hoplon.span.call(null,G__107383,G__107384));
})();
var G__107302 = ") ";
var G__107303 = (function (){var G__107385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107386 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107385,G__107386) : tailrecursion.hoplon.span.call(null,G__107385,G__107386));
})();
var G__107304 = "\n        ";
var G__107305 = (function (){var G__107387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107388 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107387,G__107388) : tailrecursion.hoplon.span.call(null,G__107387,G__107388));
})();
var G__107306 = " (";
var G__107307 = (function (){var G__107389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107390 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107389,G__107390) : tailrecursion.hoplon.span.call(null,G__107389,G__107390));
})();
var G__107308 = "(";
var G__107309 = (function (){var G__107391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107392 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107391,G__107392) : tailrecursion.hoplon.span.call(null,G__107391,G__107392));
})();
var G__107310 = " (";
var G__107311 = (function (){var G__107393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107394 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107393,G__107394) : tailrecursion.hoplon.span.call(null,G__107393,G__107394));
})();
var G__107312 = (function (){var G__107395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107396 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107395,G__107396) : tailrecursion.hoplon.span.call(null,G__107395,G__107396));
})();
var G__107313 = ") ";
var G__107314 = (function (){var G__107397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107398 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107397,G__107398) : tailrecursion.hoplon.span.call(null,G__107397,G__107398));
})();
var G__107315 = ")\n                    (";
var G__107316 = (function (){var G__107399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107400 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107399,G__107400) : tailrecursion.hoplon.span.call(null,G__107399,G__107400));
})();
var G__107317 = " (";
var G__107318 = (function (){var G__107401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107402 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107401,G__107402) : tailrecursion.hoplon.span.call(null,G__107401,G__107402));
})();
var G__107319 = (function (){var G__107403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107404 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107403,G__107404) : tailrecursion.hoplon.span.call(null,G__107403,G__107404));
})();
var G__107320 = ") ";
var G__107321 = (function (){var G__107405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107406 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107405,G__107406) : tailrecursion.hoplon.span.call(null,G__107405,G__107406));
})();
var G__107322 = "))))\n\n(";
var G__107323 = (function (){var G__107407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107408 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107407,G__107408) : tailrecursion.hoplon.span.call(null,G__107407,G__107408));
})();
var G__107324 = " (";
var G__107325 = (function (){var G__107409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107410 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107409,G__107410) : tailrecursion.hoplon.span.call(null,G__107409,G__107410));
})();
var G__107326 = (function (){var G__107411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107412 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107411,G__107412) : tailrecursion.hoplon.span.call(null,G__107411,G__107412));
})();
var G__107327 = " (";
var G__107328 = (function (){var G__107413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107414 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107413,G__107414) : tailrecursion.hoplon.span.call(null,G__107413,G__107414));
})();
var G__107329 = (function (){var G__107415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107416 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107415,G__107416) : tailrecursion.hoplon.span.call(null,G__107415,G__107416));
})();
var G__107330 = " (";
var G__107331 = (function (){var G__107417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107418 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107417,G__107418) : tailrecursion.hoplon.span.call(null,G__107417,G__107418));
})();
var G__107332 = (function (){var G__107419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107420 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107419,G__107420) : tailrecursion.hoplon.span.call(null,G__107419,G__107420));
})();
var G__107333 = " ";
var G__107334 = (function (){var G__107421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107422 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107421,G__107422) : tailrecursion.hoplon.span.call(null,G__107421,G__107422));
})();
var G__107335 = ") ";
var G__107336 = (function (){var G__107423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107424 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107423,G__107424) : tailrecursion.hoplon.span.call(null,G__107423,G__107424));
})();
var G__107337 = ") (";
var G__107338 = (function (){var G__107425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107426 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107425,G__107426) : tailrecursion.hoplon.span.call(null,G__107425,G__107426));
})();
var G__107339 = (function (){var G__107427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107428 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107427,G__107428) : tailrecursion.hoplon.span.call(null,G__107427,G__107428));
})();
var G__107340 = " ";
var G__107341 = (function (){var G__107429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107430 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107429,G__107430) : tailrecursion.hoplon.span.call(null,G__107429,G__107430));
})();
var G__107342 = "))\n            ";
var G__107343 = (function (){var G__107431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107432 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107431,G__107432) : tailrecursion.hoplon.span.call(null,G__107431,G__107432));
})();
var G__107344 = ")\n(";
var G__107345 = (function (){var G__107433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107434 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107433,G__107434) : tailrecursion.hoplon.span.call(null,G__107433,G__107434));
})();
var G__107346 = " (";
var G__107347 = (function (){var G__107435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107436 = "20";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107435,G__107436) : tailrecursion.hoplon.span.call(null,G__107435,G__107436));
})();
var G__107348 = " (";
var G__107349 = (function (){var G__107437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107438 = "30";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107437,G__107438) : tailrecursion.hoplon.span.call(null,G__107437,G__107438));
})();
var G__107350 = " ";
var G__107351 = (function (){var G__107439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107440 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107439,G__107440) : tailrecursion.hoplon.span.call(null,G__107439,G__107440));
})();
var G__107352 = ") ";
var G__107353 = (function (){var G__107441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107442 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107441,G__107442) : tailrecursion.hoplon.span.call(null,G__107441,G__107442));
})();
var G__107354 = ") (";
var G__107355 = (function (){var G__107443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107444 = "60";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107443,G__107444) : tailrecursion.hoplon.span.call(null,G__107443,G__107444));
})();
var G__107356 = " ";
var G__107357 = (function (){var G__107445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107446 = "70";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107445,G__107446) : tailrecursion.hoplon.span.call(null,G__107445,G__107446));
})();
var G__107358 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81(G__107278,G__107279,G__107280,G__107281,G__107282,G__107283,G__107284,G__107285,G__107286,G__107287,G__107288,G__107289,G__107290,G__107291,G__107292,G__107293,G__107294,G__107295,G__107296,G__107297,G__107298,G__107299,G__107300,G__107301,G__107302,G__107303,G__107304,G__107305,G__107306,G__107307,G__107308,G__107309,G__107310,G__107311,G__107312,G__107313,G__107314,G__107315,G__107316,G__107317,G__107318,G__107319,G__107320,G__107321,G__107322,G__107323,G__107324,G__107325,G__107326,G__107327,G__107328,G__107329,G__107330,G__107331,G__107332,G__107333,G__107334,G__107335,G__107336,G__107337,G__107338,G__107339,G__107340,G__107341,G__107342,G__107343,G__107344,G__107345,G__107346,G__107347,G__107348,G__107349,G__107350,G__107351,G__107352,G__107353,G__107354,G__107355,G__107356,G__107357,G__107358) : tailrecursion.hoplon.pre.call(null,G__107278,G__107279,G__107280,G__107281,G__107282,G__107283,G__107284,G__107285,G__107286,G__107287,G__107288,G__107289,G__107290,G__107291,G__107292,G__107293,G__107294,G__107295,G__107296,G__107297,G__107298,G__107299,G__107300,G__107301,G__107302,G__107303,G__107304,G__107305,G__107306,G__107307,G__107308,G__107309,G__107310,G__107311,G__107312,G__107313,G__107314,G__107315,G__107316,G__107317,G__107318,G__107319,G__107320,G__107321,G__107322,G__107323,G__107324,G__107325,G__107326,G__107327,G__107328,G__107329,G__107330,G__107331,G__107332,G__107333,G__107334,G__107335,G__107336,G__107337,G__107338,G__107339,G__107340,G__107341,G__107342,G__107343,G__107344,G__107345,G__107346,G__107347,G__107348,G__107349,G__107350,G__107351,G__107352,G__107353,G__107354,G__107355,G__107356,G__107357,G__107358));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107276,G__107277) : tailrecursion.hoplon.div.call(null,G__107276,G__107277));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107275) : tailrecursion.hoplon.div.call(null,G__107275));
})(),(function (){var G__107447 = cljs.core.PersistentArrayMap.EMPTY;
var G__107448 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another way to implement ",(function (){var G__107449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-tree"], null);
var G__107450 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107449,G__107450) : tailrecursion.hoplon.markdown.code_node.call(null,G__107449,G__107450));
})()," is to regard the tree as a sequence of sub-trees and use ",(function (){var G__107451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__107452 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107451,G__107452) : tailrecursion.hoplon.markdown.code_node.call(null,G__107451,G__107452));
})(),". We mape over the sequence, scaling each sub-tree in turn, and return the list of results. In the base case, where the tree is a leaf, we simply multiply by the factor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107447,G__107448) : tailrecursion.hoplon.markdown.para_node.call(null,G__107447,G__107448));
})(),(function (){var G__107453 = (function (){var G__107454 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107455 = (function (){var G__107456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107457 = "(";
var G__107458 = (function (){var G__107489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107490 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107489,G__107490) : tailrecursion.hoplon.span.call(null,G__107489,G__107490));
})();
var G__107459 = (function (){var G__107491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107492 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107491,G__107492) : tailrecursion.hoplon.span.call(null,G__107491,G__107492));
})();
var G__107460 = " [";
var G__107461 = (function (){var G__107493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107494 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107493,G__107494) : tailrecursion.hoplon.span.call(null,G__107493,G__107494));
})();
var G__107462 = " ";
var G__107463 = (function (){var G__107495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107496 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107495,G__107496) : tailrecursion.hoplon.span.call(null,G__107495,G__107496));
})();
var G__107464 = "]\n  (";
var G__107465 = (function (){var G__107497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107498 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107497,G__107498) : tailrecursion.hoplon.span.call(null,G__107497,G__107498));
})();
var G__107466 = "(";
var G__107467 = (function (){var G__107499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107500 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107499,G__107500) : tailrecursion.hoplon.span.call(null,G__107499,G__107500));
})();
var G__107468 = "[";
var G__107469 = (function (){var G__107501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107502 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107501,G__107502) : tailrecursion.hoplon.span.call(null,G__107501,G__107502));
})();
var G__107470 = "]\n         (";
var G__107471 = (function (){var G__107503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107504 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107503,G__107504) : tailrecursion.hoplon.span.call(null,G__107503,G__107504));
})();
var G__107472 = "(";
var G__107473 = (function (){var G__107505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107506 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107505,G__107506) : tailrecursion.hoplon.span.call(null,G__107505,G__107506));
})();
var G__107474 = (function (){var G__107507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107508 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107507,G__107508) : tailrecursion.hoplon.span.call(null,G__107507,G__107508));
})();
var G__107475 = ")\n           (";
var G__107476 = (function (){var G__107509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107510 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107509,G__107510) : tailrecursion.hoplon.span.call(null,G__107509,G__107510));
})();
var G__107477 = " ";
var G__107478 = (function (){var G__107511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107512 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107511,G__107512) : tailrecursion.hoplon.span.call(null,G__107511,G__107512));
})();
var G__107479 = " ";
var G__107480 = (function (){var G__107513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107514 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107513,G__107514) : tailrecursion.hoplon.span.call(null,G__107513,G__107514));
})();
var G__107481 = ")\n           (";
var G__107482 = (function (){var G__107515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107516 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107515,G__107516) : tailrecursion.hoplon.span.call(null,G__107515,G__107516));
})();
var G__107483 = (function (){var G__107517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107518 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107517,G__107518) : tailrecursion.hoplon.span.call(null,G__107517,G__107518));
})();
var G__107484 = " ";
var G__107485 = (function (){var G__107519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107520 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107519,G__107520) : tailrecursion.hoplon.span.call(null,G__107519,G__107520));
})();
var G__107486 = ")))\n       ";
var G__107487 = (function (){var G__107521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107522 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107521,G__107522) : tailrecursion.hoplon.span.call(null,G__107521,G__107522));
})();
var G__107488 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__107456,G__107457,G__107458,G__107459,G__107460,G__107461,G__107462,G__107463,G__107464,G__107465,G__107466,G__107467,G__107468,G__107469,G__107470,G__107471,G__107472,G__107473,G__107474,G__107475,G__107476,G__107477,G__107478,G__107479,G__107480,G__107481,G__107482,G__107483,G__107484,G__107485,G__107486,G__107487,G__107488) : tailrecursion.hoplon.pre.call(null,G__107456,G__107457,G__107458,G__107459,G__107460,G__107461,G__107462,G__107463,G__107464,G__107465,G__107466,G__107467,G__107468,G__107469,G__107470,G__107471,G__107472,G__107473,G__107474,G__107475,G__107476,G__107477,G__107478,G__107479,G__107480,G__107481,G__107482,G__107483,G__107484,G__107485,G__107486,G__107487,G__107488));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107454,G__107455) : tailrecursion.hoplon.div.call(null,G__107454,G__107455));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107453) : tailrecursion.hoplon.div.call(null,G__107453));
})(),(function (){var G__107523 = cljs.core.PersistentArrayMap.EMPTY;
var G__107524 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Many tree operations can be implemented by similar combinations of sequence operations and recursion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107523,G__107524) : tailrecursion.hoplon.markdown.para_node.call(null,G__107523,G__107524));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107260;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107259;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107258;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107257;
}})()], 0));
var G__101396 = "";
var G__101397 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107525 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107526 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107527 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107528 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107529 = cljs.core.PersistentArrayMap.EMPTY;
var G__107530 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__107531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__107532 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107531,G__107532) : tailrecursion.hoplon.markdown.code_node.call(null,G__107531,G__107532));
})()," analogous to the ",(function (){var G__107533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__107534 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107533,G__107534) : tailrecursion.hoplon.markdown.code_node.call(null,G__107533,G__107534));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/21/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.21"], null)], 0)),". That is, ",(function (){var G__107535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__107536 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107535,G__107536) : tailrecursion.hoplon.markdown.code_node.call(null,G__107535,G__107536));
})()," should behave as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107529,G__107530) : tailrecursion.hoplon.markdown.para_node.call(null,G__107529,G__107530));
})(),(function (){var G__107537 = (function (){var G__107538 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107539 = (function (){var G__107540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107541 = "(";
var G__107542 = (function (){var G__107576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107577 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107576,G__107577) : tailrecursion.hoplon.span.call(null,G__107576,G__107577));
})();
var G__107543 = "\n  (";
var G__107544 = (function (){var G__107578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107579 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107578,G__107579) : tailrecursion.hoplon.span.call(null,G__107578,G__107579));
})();
var G__107545 = (function (){var G__107580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107581 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107580,G__107581) : tailrecursion.hoplon.span.call(null,G__107580,G__107581));
})();
var G__107546 = "\n        (";
var G__107547 = (function (){var G__107582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107583 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107582,G__107583) : tailrecursion.hoplon.span.call(null,G__107582,G__107583));
})();
var G__107548 = (function (){var G__107584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107585 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107584,G__107585) : tailrecursion.hoplon.span.call(null,G__107584,G__107585));
})();
var G__107549 = " (";
var G__107550 = (function (){var G__107586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107587 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107586,G__107587) : tailrecursion.hoplon.span.call(null,G__107586,G__107587));
})();
var G__107551 = (function (){var G__107588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107589 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107588,G__107589) : tailrecursion.hoplon.span.call(null,G__107588,G__107589));
})();
var G__107552 = " ";
var G__107553 = (function (){var G__107590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107591 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107590,G__107591) : tailrecursion.hoplon.span.call(null,G__107590,G__107591));
})();
var G__107554 = ") ";
var G__107555 = (function (){var G__107592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107593 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107592,G__107593) : tailrecursion.hoplon.span.call(null,G__107592,G__107593));
})();
var G__107556 = ")\n        (";
var G__107557 = (function (){var G__107594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107595 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107594,G__107595) : tailrecursion.hoplon.span.call(null,G__107594,G__107595));
})();
var G__107558 = (function (){var G__107596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107597 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107596,G__107597) : tailrecursion.hoplon.span.call(null,G__107596,G__107597));
})();
var G__107559 = " ";
var G__107560 = (function (){var G__107598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107599 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107598,G__107599) : tailrecursion.hoplon.span.call(null,G__107598,G__107599));
})();
var G__107561 = ")))\n(";
var G__107562 = (function (){var G__107600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107601 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107600,G__107601) : tailrecursion.hoplon.span.call(null,G__107600,G__107601));
})();
var G__107563 = " (";
var G__107564 = (function (){var G__107602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107603 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107602,G__107603) : tailrecursion.hoplon.span.call(null,G__107602,G__107603));
})();
var G__107565 = " (";
var G__107566 = (function (){var G__107604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107605 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107604,G__107605) : tailrecursion.hoplon.span.call(null,G__107604,G__107605));
})();
var G__107567 = " ";
var G__107568 = (function (){var G__107606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107607 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107606,G__107607) : tailrecursion.hoplon.span.call(null,G__107606,G__107607));
})();
var G__107569 = ") ";
var G__107570 = (function (){var G__107608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107609 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107608,G__107609) : tailrecursion.hoplon.span.call(null,G__107608,G__107609));
})();
var G__107571 = ") (";
var G__107572 = (function (){var G__107610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107611 = "36";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107610,G__107611) : tailrecursion.hoplon.span.call(null,G__107610,G__107611));
})();
var G__107573 = " ";
var G__107574 = (function (){var G__107612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107613 = "49";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107612,G__107613) : tailrecursion.hoplon.span.call(null,G__107612,G__107613));
})();
var G__107575 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__107540,G__107541,G__107542,G__107543,G__107544,G__107545,G__107546,G__107547,G__107548,G__107549,G__107550,G__107551,G__107552,G__107553,G__107554,G__107555,G__107556,G__107557,G__107558,G__107559,G__107560,G__107561,G__107562,G__107563,G__107564,G__107565,G__107566,G__107567,G__107568,G__107569,G__107570,G__107571,G__107572,G__107573,G__107574,G__107575) : tailrecursion.hoplon.pre.call(null,G__107540,G__107541,G__107542,G__107543,G__107544,G__107545,G__107546,G__107547,G__107548,G__107549,G__107550,G__107551,G__107552,G__107553,G__107554,G__107555,G__107556,G__107557,G__107558,G__107559,G__107560,G__107561,G__107562,G__107563,G__107564,G__107565,G__107566,G__107567,G__107568,G__107569,G__107570,G__107571,G__107572,G__107573,G__107574,G__107575));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107538,G__107539) : tailrecursion.hoplon.div.call(null,G__107538,G__107539));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107537) : tailrecursion.hoplon.div.call(null,G__107537));
})(),(function (){var G__107614 = cljs.core.PersistentArrayMap.EMPTY;
var G__107615 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__107616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__107617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107616,G__107617) : tailrecursion.hoplon.markdown.code_node.call(null,G__107616,G__107617));
})()," both directly (i.e., without using any higher-order procedures) and also by using ",(function (){var G__107618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__107619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107618,G__107619) : tailrecursion.hoplon.markdown.code_node.call(null,G__107618,G__107619));
})()," and recursion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107614,G__107615) : tailrecursion.hoplon.markdown.para_node.call(null,G__107614,G__107615));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107528;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107527;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107526;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107525;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107620 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107621 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107622 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107623 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107624 = (function (){var G__107625 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107626 = (function (){var G__107627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107628 = "(";
var G__107629 = (function (){var G__107655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107656 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107655,G__107656) : tailrecursion.hoplon.span.call(null,G__107655,G__107656));
})();
var G__107630 = (function (){var G__107657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107658 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107657,G__107658) : tailrecursion.hoplon.span.call(null,G__107657,G__107658));
})();
var G__107631 = " [";
var G__107632 = (function (){var G__107659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107660 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107659,G__107660) : tailrecursion.hoplon.span.call(null,G__107659,G__107660));
})();
var G__107633 = "]\n  (";
var G__107634 = (function (){var G__107661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107662 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107661,G__107662) : tailrecursion.hoplon.span.call(null,G__107661,G__107662));
})();
var G__107635 = "(";
var G__107636 = (function (){var G__107663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107664 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107663,G__107664) : tailrecursion.hoplon.span.call(null,G__107663,G__107664));
})();
var G__107637 = "[";
var G__107638 = (function (){var G__107665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107666 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107665,G__107666) : tailrecursion.hoplon.span.call(null,G__107665,G__107666));
})();
var G__107639 = "]\n         (";
var G__107640 = (function (){var G__107667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107668 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107667,G__107668) : tailrecursion.hoplon.span.call(null,G__107667,G__107668));
})();
var G__107641 = "(";
var G__107642 = (function (){var G__107669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107670 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107669,G__107670) : tailrecursion.hoplon.span.call(null,G__107669,G__107670));
})();
var G__107643 = (function (){var G__107671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107672 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107671,G__107672) : tailrecursion.hoplon.span.call(null,G__107671,G__107672));
})();
var G__107644 = ")\n             (";
var G__107645 = (function (){var G__107673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107674 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107673,G__107674) : tailrecursion.hoplon.span.call(null,G__107673,G__107674));
})();
var G__107646 = " ";
var G__107647 = (function (){var G__107675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107676 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107675,G__107676) : tailrecursion.hoplon.span.call(null,G__107675,G__107676));
})();
var G__107648 = ")\n             (";
var G__107649 = (function (){var G__107677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107678 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107677,G__107678) : tailrecursion.hoplon.span.call(null,G__107677,G__107678));
})();
var G__107650 = " ";
var G__107651 = (function (){var G__107679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107680 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107679,G__107680) : tailrecursion.hoplon.span.call(null,G__107679,G__107680));
})();
var G__107652 = ")))\n       ";
var G__107653 = (function (){var G__107681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107682 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107681,G__107682) : tailrecursion.hoplon.span.call(null,G__107681,G__107682));
})();
var G__107654 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__107627,G__107628,G__107629,G__107630,G__107631,G__107632,G__107633,G__107634,G__107635,G__107636,G__107637,G__107638,G__107639,G__107640,G__107641,G__107642,G__107643,G__107644,G__107645,G__107646,G__107647,G__107648,G__107649,G__107650,G__107651,G__107652,G__107653,G__107654) : tailrecursion.hoplon.pre.call(null,G__107627,G__107628,G__107629,G__107630,G__107631,G__107632,G__107633,G__107634,G__107635,G__107636,G__107637,G__107638,G__107639,G__107640,G__107641,G__107642,G__107643,G__107644,G__107645,G__107646,G__107647,G__107648,G__107649,G__107650,G__107651,G__107652,G__107653,G__107654));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107625,G__107626) : tailrecursion.hoplon.div.call(null,G__107625,G__107626));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107624) : tailrecursion.hoplon.div.call(null,G__107624));
})(),(function (){var G__107683 = cljs.core.PersistentArrayMap.EMPTY;
var G__107684 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107683,G__107684) : tailrecursion.hoplon.markdown.para_node.call(null,G__107683,G__107684));
})(),(function (){var G__107685 = (function (){var G__107686 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107687 = (function (){var G__107688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107689 = "(";
var G__107690 = (function (){var G__107726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107727 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107726,G__107727) : tailrecursion.hoplon.span.call(null,G__107726,G__107727));
})();
var G__107691 = (function (){var G__107728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107729 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107728,G__107729) : tailrecursion.hoplon.span.call(null,G__107728,G__107729));
})();
var G__107692 = " [";
var G__107693 = (function (){var G__107730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107731 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107730,G__107731) : tailrecursion.hoplon.span.call(null,G__107730,G__107731));
})();
var G__107694 = "]\n  (";
var G__107695 = (function (){var G__107732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107733 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107732,G__107733) : tailrecursion.hoplon.span.call(null,G__107732,G__107733));
})();
var G__107696 = "(";
var G__107697 = (function (){var G__107734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107735 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107734,G__107735) : tailrecursion.hoplon.span.call(null,G__107734,G__107735));
})();
var G__107698 = "(";
var G__107699 = (function (){var G__107736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107737 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107736,G__107737) : tailrecursion.hoplon.span.call(null,G__107736,G__107737));
})();
var G__107700 = (function (){var G__107738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107739 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107738,G__107739) : tailrecursion.hoplon.span.call(null,G__107738,G__107739));
})();
var G__107701 = ")) (";
var G__107702 = (function (){var G__107740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107741 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107740,G__107741) : tailrecursion.hoplon.span.call(null,G__107740,G__107741));
})();
var G__107703 = " ";
var G__107704 = (function (){var G__107742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107743 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107742,G__107743) : tailrecursion.hoplon.span.call(null,G__107742,G__107743));
})();
var G__107705 = ")\n        (";
var G__107706 = (function (){var G__107744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107745 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107744,G__107745) : tailrecursion.hoplon.span.call(null,G__107744,G__107745));
})();
var G__107707 = " ";
var G__107708 = (function (){var G__107746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107747 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107746,G__107747) : tailrecursion.hoplon.span.call(null,G__107746,G__107747));
})();
var G__107709 = ") ";
var G__107710 = (function (){var G__107748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107749 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107748,G__107749) : tailrecursion.hoplon.span.call(null,G__107748,G__107749));
})();
var G__107711 = "\n        ";
var G__107712 = (function (){var G__107750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107751 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107750,G__107751) : tailrecursion.hoplon.span.call(null,G__107750,G__107751));
})();
var G__107713 = "\n        (";
var G__107714 = (function (){var G__107752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107753 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107752,G__107753) : tailrecursion.hoplon.span.call(null,G__107752,G__107753));
})();
var G__107715 = "(";
var G__107716 = (function (){var G__107754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107755 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107754,G__107755) : tailrecursion.hoplon.span.call(null,G__107754,G__107755));
})();
var G__107717 = " (";
var G__107718 = (function (){var G__107756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107757 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107756,G__107757) : tailrecursion.hoplon.span.call(null,G__107756,G__107757));
})();
var G__107719 = (function (){var G__107758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107759 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107758,G__107759) : tailrecursion.hoplon.span.call(null,G__107758,G__107759));
})();
var G__107720 = "))\n              (";
var G__107721 = (function (){var G__107760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107761 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107760,G__107761) : tailrecursion.hoplon.span.call(null,G__107760,G__107761));
})();
var G__107722 = " (";
var G__107723 = (function (){var G__107762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107763 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107762,G__107763) : tailrecursion.hoplon.span.call(null,G__107762,G__107763));
})();
var G__107724 = (function (){var G__107764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107765 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107764,G__107765) : tailrecursion.hoplon.span.call(null,G__107764,G__107765));
})();
var G__107725 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__107688,G__107689,G__107690,G__107691,G__107692,G__107693,G__107694,G__107695,G__107696,G__107697,G__107698,G__107699,G__107700,G__107701,G__107702,G__107703,G__107704,G__107705,G__107706,G__107707,G__107708,G__107709,G__107710,G__107711,G__107712,G__107713,G__107714,G__107715,G__107716,G__107717,G__107718,G__107719,G__107720,G__107721,G__107722,G__107723,G__107724,G__107725) : tailrecursion.hoplon.pre.call(null,G__107688,G__107689,G__107690,G__107691,G__107692,G__107693,G__107694,G__107695,G__107696,G__107697,G__107698,G__107699,G__107700,G__107701,G__107702,G__107703,G__107704,G__107705,G__107706,G__107707,G__107708,G__107709,G__107710,G__107711,G__107712,G__107713,G__107714,G__107715,G__107716,G__107717,G__107718,G__107719,G__107720,G__107721,G__107722,G__107723,G__107724,G__107725));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107686,G__107687) : tailrecursion.hoplon.div.call(null,G__107686,G__107687));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107685) : tailrecursion.hoplon.div.call(null,G__107685));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107623;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107622;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107621;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107620;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107768 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107769 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107770 = cljs.core.PersistentArrayMap.EMPTY;
var G__107771 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Abstract your answer to ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/30/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.30"], null)], 0))," to produce a procedure ",(function (){var G__107772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"tree-map"], null);
var G__107773 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107772,G__107773) : tailrecursion.hoplon.markdown.code_node.call(null,G__107772,G__107773));
})()," with the property that ",(function (){var G__107774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__107775 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107774,G__107775) : tailrecursion.hoplon.markdown.code_node.call(null,G__107774,G__107775));
})()," could be defined as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107770,G__107771) : tailrecursion.hoplon.markdown.para_node.call(null,G__107770,G__107771));
})(),(function (){var G__107776 = (function (){var G__107777 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107778 = (function (){var G__107779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107780 = "(";
var G__107781 = (function (){var G__107792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107793 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107792,G__107793) : tailrecursion.hoplon.span.call(null,G__107792,G__107793));
})();
var G__107782 = (function (){var G__107794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107795 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107794,G__107795) : tailrecursion.hoplon.span.call(null,G__107794,G__107795));
})();
var G__107783 = " [";
var G__107784 = (function (){var G__107796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107797 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107796,G__107797) : tailrecursion.hoplon.span.call(null,G__107796,G__107797));
})();
var G__107785 = "]\n  (";
var G__107786 = (function (){var G__107798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107799 = "tree-map";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107798,G__107799) : tailrecursion.hoplon.span.call(null,G__107798,G__107799));
})();
var G__107787 = " ";
var G__107788 = (function (){var G__107800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107801 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107800,G__107801) : tailrecursion.hoplon.span.call(null,G__107800,G__107801));
})();
var G__107789 = " ";
var G__107790 = (function (){var G__107802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107803 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107802,G__107803) : tailrecursion.hoplon.span.call(null,G__107802,G__107803));
})();
var G__107791 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__107779,G__107780,G__107781,G__107782,G__107783,G__107784,G__107785,G__107786,G__107787,G__107788,G__107789,G__107790,G__107791) : tailrecursion.hoplon.pre.call(null,G__107779,G__107780,G__107781,G__107782,G__107783,G__107784,G__107785,G__107786,G__107787,G__107788,G__107789,G__107790,G__107791));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107777,G__107778) : tailrecursion.hoplon.div.call(null,G__107777,G__107778));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107776) : tailrecursion.hoplon.div.call(null,G__107776));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107769;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107768;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107766;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(defn tree-map [proc tree]\n  (map #(if (seq? %)\n            (tree-map proc %)\n            (proc %))\n       tree))\n```\n\nOr, if you prefer the non-abstraction-beholding version (which I\ndon't see why you would):\n\n```clj\n(defn tree-map [proc tree]\n  (cond (not (seq? tree)) (proc tree)\n        (empty? tree) nil\n        :else\n        (conj (tree-map proc (rest tree))\n              (tree-map proc (first tree)))))\n```"], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107804 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107805 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107806 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107807 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107808 = cljs.core.PersistentArrayMap.EMPTY;
var G__107809 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can represent a set as a list of distinct elements, and we can represent the set of all subsets of the set as a list of lists. For example, if the set is ",(function (){var G__107810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3)"], null);
var G__107811 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107810,G__107811) : tailrecursion.hoplon.markdown.code_node.call(null,G__107810,G__107811));
})(),", then the set of all subsets is, ",(function (){var G__107812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(() (3) (2) (2 3) (1) (1 3) (1 2) (1 2 3))"], null);
var G__107813 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107812,G__107813) : tailrecursion.hoplon.markdown.code_node.call(null,G__107812,G__107813));
})(),". Complete the following definition of a procedure that generates the set of subsets of a set and give a clear explanation of why it works:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107808,G__107809) : tailrecursion.hoplon.markdown.para_node.call(null,G__107808,G__107809));
})(),(function (){var G__107814 = (function (){var G__107815 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107816 = (function (){var G__107817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107818 = "(";
var G__107819 = (function (){var G__107850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107851 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107850,G__107851) : tailrecursion.hoplon.span.call(null,G__107850,G__107851));
})();
var G__107820 = (function (){var G__107852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107853 = "subsets";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107852,G__107853) : tailrecursion.hoplon.span.call(null,G__107852,G__107853));
})();
var G__107821 = " [";
var G__107822 = (function (){var G__107854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107855 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107854,G__107855) : tailrecursion.hoplon.span.call(null,G__107854,G__107855));
})();
var G__107823 = "]\n  (";
var G__107824 = (function (){var G__107856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107857 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107856,G__107857) : tailrecursion.hoplon.span.call(null,G__107856,G__107857));
})();
var G__107825 = "(";
var G__107826 = (function (){var G__107858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107859 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107858,G__107859) : tailrecursion.hoplon.span.call(null,G__107858,G__107859));
})();
var G__107827 = " ";
var G__107828 = (function (){var G__107860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107861 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107860,G__107861) : tailrecursion.hoplon.span.call(null,G__107860,G__107861));
})();
var G__107829 = ")\n      (";
var G__107830 = (function (){var G__107862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107863 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107862,G__107863) : tailrecursion.hoplon.span.call(null,G__107862,G__107863));
})();
var G__107831 = "(";
var G__107832 = (function (){var G__107864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107865 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107864,G__107865) : tailrecursion.hoplon.span.call(null,G__107864,G__107865));
})();
var G__107833 = "))\n      (";
var G__107834 = (function (){var G__107866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107867 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107866,G__107867) : tailrecursion.hoplon.span.call(null,G__107866,G__107867));
})();
var G__107835 = "[";
var G__107836 = (function (){var G__107868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107869 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107868,G__107869) : tailrecursion.hoplon.span.call(null,G__107868,G__107869));
})();
var G__107837 = "(";
var G__107838 = (function (){var G__107870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107871 = "subsets";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107870,G__107871) : tailrecursion.hoplon.span.call(null,G__107870,G__107871));
})();
var G__107839 = " (";
var G__107840 = (function (){var G__107872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107873 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107872,G__107873) : tailrecursion.hoplon.span.call(null,G__107872,G__107873));
})();
var G__107841 = (function (){var G__107874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107875 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107874,G__107875) : tailrecursion.hoplon.span.call(null,G__107874,G__107875));
})();
var G__107842 = "))]\n        (";
var G__107843 = (function (){var G__107876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107877 = "concat left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107876,G__107877) : tailrecursion.hoplon.span.call(null,G__107876,G__107877));
})();
var G__107844 = "(";
var G__107845 = (function (){var G__107878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107879 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107878,G__107879) : tailrecursion.hoplon.span.call(null,G__107878,G__107879));
})();
var G__107846 = (function (){var G__107880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107881 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107880,G__107881) : tailrecursion.hoplon.span.call(null,G__107880,G__107881));
})();
var G__107847 = " ";
var G__107848 = (function (){var G__107882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107883 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107882,G__107883) : tailrecursion.hoplon.span.call(null,G__107882,G__107883));
})();
var G__107849 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__107817,G__107818,G__107819,G__107820,G__107821,G__107822,G__107823,G__107824,G__107825,G__107826,G__107827,G__107828,G__107829,G__107830,G__107831,G__107832,G__107833,G__107834,G__107835,G__107836,G__107837,G__107838,G__107839,G__107840,G__107841,G__107842,G__107843,G__107844,G__107845,G__107846,G__107847,G__107848,G__107849) : tailrecursion.hoplon.pre.call(null,G__107817,G__107818,G__107819,G__107820,G__107821,G__107822,G__107823,G__107824,G__107825,G__107826,G__107827,G__107828,G__107829,G__107830,G__107831,G__107832,G__107833,G__107834,G__107835,G__107836,G__107837,G__107838,G__107839,G__107840,G__107841,G__107842,G__107843,G__107844,G__107845,G__107846,G__107847,G__107848,G__107849));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107815,G__107816) : tailrecursion.hoplon.div.call(null,G__107815,G__107816));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107814) : tailrecursion.hoplon.div.call(null,G__107814));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107807;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107806;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107805;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107804;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(defn subsets [s]\n  (if (empty? s)\n      (list (list ))\n      (let [left (subsets (rest s))]\n        (concat left \n                (map #(conj % \n                            (first s))\n                     left)))))\n```\n\nSo, the procedure in question is, `#(conj % (first s))`. As for why\nthis works, let's build it up inductively -- by that I mean that we\nshould look at this step by step. Let's assume we've already computed\n`(subsets (rest s))`, and see what we have to do to get `(subsets\ns)`.\n\nFirstly, if the list is `(list )` (in which case we can't use our\nassumption), then our procedure returns `(())`, which we know to be\ncorrect.\n\nNext, let's assume that our list `s` is not empty, and that we've\ncomputed `(subsets (rest s))`. If we take any subset `d` of `s` and\ndisregard `(first s)` if it's an element of `d`, then this (possibly)\nnew version of `d` is in `(subsets (rest s))`. Hence, we can generate\nany element of `(subsets s)` by either taking it directly from\n`(subsets (rest s))`, or by \"conjing\" `(first s)` onto something from\n`(subsets (rest s))`. Therefore, `(subsets s)`= `(subsets (rest s))`\n\\\\(\\cup\\\\) `(map #(conj % (first s)) (subsets (rest s)))`.\n\nIf this is at all unclear, please let me know. It's kinda hard to\nexplain things without any feedback."], 0))], 0))], 0));
var G__101398 = "";
var G__101399 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Sequences as Conventional Interfaces"], null),(function (){var _STAR_references_STAR_107884 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107885 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107886 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107887 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107888 = cljs.core.PersistentArrayMap.EMPTY;
var G__107889 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In working with compound data, we",(function (){var G__107890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__107891 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__107890,G__107891) : tailrecursion.hoplon.markdown.simple_node.call(null,G__107890,G__107891));
})(),"ve stressed how data abstraction permits us to design programs without becoming enmeshed in the details of data representations, and how abstraction preserves for us the flexibility to experiment with alternative representations. In this section, we introduce another powerful design principle for working with data structures ",(function (){var G__107892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__107893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__107892,G__107893) : tailrecursion.hoplon.markdown.simple_node.call(null,G__107892,G__107893));
})()," the use of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conventional interfaces"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107888,G__107889) : tailrecursion.hoplon.markdown.para_node.call(null,G__107888,G__107889));
})(),(function (){var G__107894 = cljs.core.PersistentArrayMap.EMPTY;
var G__107895 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3"], null)], 0))," we saw how program abstractions, implemented as higher-order procedures, can capture common patterns in programs that deal with numerical data. Our ability to formulate analogous operations for working with compound data depends crucially on the style in which we manipulate our data structures. Consider, for example, the following procedure, analogous to the ",(function (){var G__107896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__107897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107896,G__107897) : tailrecursion.hoplon.markdown.code_node.call(null,G__107896,G__107897));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.2"], null)], 0)),", which takes a tree as argument and computes the sum of the squares of the leaves that are odd:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107894,G__107895) : tailrecursion.hoplon.markdown.para_node.call(null,G__107894,G__107895));
})(),(function (){var G__107898 = (function (){var G__107899 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107900 = (function (){var G__107901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107902 = "(";
var G__107903 = (function (){var G__107947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107948 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107947,G__107948) : tailrecursion.hoplon.span.call(null,G__107947,G__107948));
})();
var G__107904 = (function (){var G__107949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107950 = "sum-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107949,G__107950) : tailrecursion.hoplon.span.call(null,G__107949,G__107950));
})();
var G__107905 = " [";
var G__107906 = (function (){var G__107951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107952 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107951,G__107952) : tailrecursion.hoplon.span.call(null,G__107951,G__107952));
})();
var G__107907 = "]\n  (";
var G__107908 = (function (){var G__107953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107954 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107953,G__107954) : tailrecursion.hoplon.span.call(null,G__107953,G__107954));
})();
var G__107909 = "(";
var G__107910 = (function (){var G__107955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107956 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107955,G__107956) : tailrecursion.hoplon.span.call(null,G__107955,G__107956));
})();
var G__107911 = " ";
var G__107912 = (function (){var G__107957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107958 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107957,G__107958) : tailrecursion.hoplon.span.call(null,G__107957,G__107958));
})();
var G__107913 = ") ";
var G__107914 = (function (){var G__107959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107960 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107959,G__107960) : tailrecursion.hoplon.span.call(null,G__107959,G__107960));
})();
var G__107915 = "\n        (";
var G__107916 = (function (){var G__107961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107962 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107961,G__107962) : tailrecursion.hoplon.span.call(null,G__107961,G__107962));
})();
var G__107917 = "(";
var G__107918 = (function (){var G__107963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107964 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107963,G__107964) : tailrecursion.hoplon.span.call(null,G__107963,G__107964));
})();
var G__107919 = (function (){var G__107965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107966 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107965,G__107966) : tailrecursion.hoplon.span.call(null,G__107965,G__107966));
})();
var G__107920 = ")) (";
var G__107921 = (function (){var G__107967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107968 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107967,G__107968) : tailrecursion.hoplon.span.call(null,G__107967,G__107968));
})();
var G__107922 = "(";
var G__107923 = (function (){var G__107969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107970 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107969,G__107970) : tailrecursion.hoplon.span.call(null,G__107969,G__107970));
})();
var G__107924 = " ";
var G__107925 = (function (){var G__107971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107972 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107971,G__107972) : tailrecursion.hoplon.span.call(null,G__107971,G__107972));
})();
var G__107926 = ")\n                              (";
var G__107927 = (function (){var G__107973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107974 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107973,G__107974) : tailrecursion.hoplon.span.call(null,G__107973,G__107974));
})();
var G__107928 = " ";
var G__107929 = (function (){var G__107975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107976 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107975,G__107976) : tailrecursion.hoplon.span.call(null,G__107975,G__107976));
})();
var G__107930 = ")\n                              ";
var G__107931 = (function (){var G__107977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107978 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107977,G__107978) : tailrecursion.hoplon.span.call(null,G__107977,G__107978));
})();
var G__107932 = ")\n        ";
var G__107933 = (function (){var G__107979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107980 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107979,G__107980) : tailrecursion.hoplon.span.call(null,G__107979,G__107980));
})();
var G__107934 = " (";
var G__107935 = (function (){var G__107981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107982 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107981,G__107982) : tailrecursion.hoplon.span.call(null,G__107981,G__107982));
})();
var G__107936 = "(";
var G__107937 = (function (){var G__107983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107984 = "sum-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107983,G__107984) : tailrecursion.hoplon.span.call(null,G__107983,G__107984));
})();
var G__107938 = " (";
var G__107939 = (function (){var G__107985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107986 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107985,G__107986) : tailrecursion.hoplon.span.call(null,G__107985,G__107986));
})();
var G__107940 = (function (){var G__107987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107988 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107987,G__107988) : tailrecursion.hoplon.span.call(null,G__107987,G__107988));
})();
var G__107941 = "))\n                 (";
var G__107942 = (function (){var G__107989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107990 = "sum-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107989,G__107990) : tailrecursion.hoplon.span.call(null,G__107989,G__107990));
})();
var G__107943 = " (";
var G__107944 = (function (){var G__107991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107992 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107991,G__107992) : tailrecursion.hoplon.span.call(null,G__107991,G__107992));
})();
var G__107945 = (function (){var G__107993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107994 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107993,G__107994) : tailrecursion.hoplon.span.call(null,G__107993,G__107994));
})();
var G__107946 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__107901,G__107902,G__107903,G__107904,G__107905,G__107906,G__107907,G__107908,G__107909,G__107910,G__107911,G__107912,G__107913,G__107914,G__107915,G__107916,G__107917,G__107918,G__107919,G__107920,G__107921,G__107922,G__107923,G__107924,G__107925,G__107926,G__107927,G__107928,G__107929,G__107930,G__107931,G__107932,G__107933,G__107934,G__107935,G__107936,G__107937,G__107938,G__107939,G__107940,G__107941,G__107942,G__107943,G__107944,G__107945,G__107946) : tailrecursion.hoplon.pre.call(null,G__107901,G__107902,G__107903,G__107904,G__107905,G__107906,G__107907,G__107908,G__107909,G__107910,G__107911,G__107912,G__107913,G__107914,G__107915,G__107916,G__107917,G__107918,G__107919,G__107920,G__107921,G__107922,G__107923,G__107924,G__107925,G__107926,G__107927,G__107928,G__107929,G__107930,G__107931,G__107932,G__107933,G__107934,G__107935,G__107936,G__107937,G__107938,G__107939,G__107940,G__107941,G__107942,G__107943,G__107944,G__107945,G__107946));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107899,G__107900) : tailrecursion.hoplon.div.call(null,G__107899,G__107900));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107898) : tailrecursion.hoplon.div.call(null,G__107898));
})(),(function (){var G__107995 = cljs.core.PersistentArrayMap.EMPTY;
var G__107996 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["On the surface, this procedure is very different from the following one, which constructs a list of all the even Fibonacci numbers \\(Fib(k)\\), where \\(k\\) is less than or equal to a given integer \\(n\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107995,G__107996) : tailrecursion.hoplon.markdown.para_node.call(null,G__107995,G__107996));
})(),(function (){var G__107997 = (function (){var G__107998 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107999 = (function (){var G__108000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108001 = "(";
var G__108002 = (function (){var G__108059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108060 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108059,G__108060) : tailrecursion.hoplon.span.call(null,G__108059,G__108060));
})();
var G__108003 = (function (){var G__108061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108062 = "even-fibs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108061,G__108062) : tailrecursion.hoplon.span.call(null,G__108061,G__108062));
})();
var G__108004 = " [";
var G__108005 = (function (){var G__108063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108064 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108063,G__108064) : tailrecursion.hoplon.span.call(null,G__108063,G__108064));
})();
var G__108006 = "]\n  (";
var G__108007 = (function (){var G__108065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108066 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108065,G__108066) : tailrecursion.hoplon.span.call(null,G__108065,G__108066));
})();
var G__108008 = "[";
var G__108009 = (function (){var G__108067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108068 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108067,G__108068) : tailrecursion.hoplon.span.call(null,G__108067,G__108068));
})();
var G__108010 = "(";
var G__108011 = (function (){var G__108069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108070 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108069,G__108070) : tailrecursion.hoplon.span.call(null,G__108069,G__108070));
})();
var G__108012 = "[";
var G__108013 = (function (){var G__108071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108072 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108071,G__108072) : tailrecursion.hoplon.span.call(null,G__108071,G__108072));
})();
var G__108014 = "] (";
var G__108015 = (function (){var G__108073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108074 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108073,G__108074) : tailrecursion.hoplon.span.call(null,G__108073,G__108074));
})();
var G__108016 = "(";
var G__108017 = (function (){var G__108075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108076 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108075,G__108076) : tailrecursion.hoplon.span.call(null,G__108075,G__108076));
})();
var G__108018 = (function (){var G__108077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108078 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108077,G__108078) : tailrecursion.hoplon.span.call(null,G__108077,G__108078));
})();
var G__108019 = " ";
var G__108020 = (function (){var G__108079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108080 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108079,G__108080) : tailrecursion.hoplon.span.call(null,G__108079,G__108080));
})();
var G__108021 = ")\n                         (";
var G__108022 = (function (){var G__108081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108082 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108081,G__108082) : tailrecursion.hoplon.span.call(null,G__108081,G__108082));
})();
var G__108023 = ")\n                         (";
var G__108024 = (function (){var G__108083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108084 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108083,G__108084) : tailrecursion.hoplon.span.call(null,G__108083,G__108084));
})();
var G__108025 = "[";
var G__108026 = (function (){var G__108085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108086 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108085,G__108086) : tailrecursion.hoplon.span.call(null,G__108085,G__108086));
})();
var G__108027 = " (";
var G__108028 = (function (){var G__108087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108088 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108087,G__108088) : tailrecursion.hoplon.span.call(null,G__108087,G__108088));
})();
var G__108029 = " ";
var G__108030 = (function (){var G__108089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108090 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108089,G__108090) : tailrecursion.hoplon.span.call(null,G__108089,G__108090));
})();
var G__108031 = ")]\n                           (";
var G__108032 = (function (){var G__108091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108092 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108091,G__108092) : tailrecursion.hoplon.span.call(null,G__108091,G__108092));
})();
var G__108033 = "(";
var G__108034 = (function (){var G__108093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108094 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108093,G__108094) : tailrecursion.hoplon.span.call(null,G__108093,G__108094));
})();
var G__108035 = " ";
var G__108036 = (function (){var G__108095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108096 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108095,G__108096) : tailrecursion.hoplon.span.call(null,G__108095,G__108096));
})();
var G__108037 = ")\n                               (";
var G__108038 = (function (){var G__108097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108098 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108097,G__108098) : tailrecursion.hoplon.span.call(null,G__108097,G__108098));
})();
var G__108039 = "(";
var G__108040 = (function (){var G__108099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108100 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108099,G__108100) : tailrecursion.hoplon.span.call(null,G__108099,G__108100));
})();
var G__108041 = "(";
var G__108042 = (function (){var G__108101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108102 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108101,G__108102) : tailrecursion.hoplon.span.call(null,G__108101,G__108102));
})();
var G__108043 = (function (){var G__108103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108104 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108103,G__108104) : tailrecursion.hoplon.span.call(null,G__108103,G__108104));
})();
var G__108044 = " ";
var G__108045 = (function (){var G__108105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108106 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108105,G__108106) : tailrecursion.hoplon.span.call(null,G__108105,G__108106));
})();
var G__108046 = ")) ";
var G__108047 = (function (){var G__108107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108108 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108107,G__108108) : tailrecursion.hoplon.span.call(null,G__108107,G__108108));
})();
var G__108048 = ")\n                               (";
var G__108049 = (function (){var G__108109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108110 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108109,G__108110) : tailrecursion.hoplon.span.call(null,G__108109,G__108110));
})();
var G__108050 = "(";
var G__108051 = (function (){var G__108111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108112 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108111,G__108112) : tailrecursion.hoplon.span.call(null,G__108111,G__108112));
})();
var G__108052 = (function (){var G__108113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108114 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108113,G__108114) : tailrecursion.hoplon.span.call(null,G__108113,G__108114));
})();
var G__108053 = " ";
var G__108054 = (function (){var G__108115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108116 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108115,G__108116) : tailrecursion.hoplon.span.call(null,G__108115,G__108116));
})();
var G__108055 = ")))))))\n  (";
var G__108056 = (function (){var G__108117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108118 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108117,G__108118) : tailrecursion.hoplon.span.call(null,G__108117,G__108118));
})();
var G__108057 = (function (){var G__108119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108120 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108119,G__108120) : tailrecursion.hoplon.span.call(null,G__108119,G__108120));
})();
var G__108058 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__108000,G__108001,G__108002,G__108003,G__108004,G__108005,G__108006,G__108007,G__108008,G__108009,G__108010,G__108011,G__108012,G__108013,G__108014,G__108015,G__108016,G__108017,G__108018,G__108019,G__108020,G__108021,G__108022,G__108023,G__108024,G__108025,G__108026,G__108027,G__108028,G__108029,G__108030,G__108031,G__108032,G__108033,G__108034,G__108035,G__108036,G__108037,G__108038,G__108039,G__108040,G__108041,G__108042,G__108043,G__108044,G__108045,G__108046,G__108047,G__108048,G__108049,G__108050,G__108051,G__108052,G__108053,G__108054,G__108055,G__108056,G__108057,G__108058) : tailrecursion.hoplon.pre.call(null,G__108000,G__108001,G__108002,G__108003,G__108004,G__108005,G__108006,G__108007,G__108008,G__108009,G__108010,G__108011,G__108012,G__108013,G__108014,G__108015,G__108016,G__108017,G__108018,G__108019,G__108020,G__108021,G__108022,G__108023,G__108024,G__108025,G__108026,G__108027,G__108028,G__108029,G__108030,G__108031,G__108032,G__108033,G__108034,G__108035,G__108036,G__108037,G__108038,G__108039,G__108040,G__108041,G__108042,G__108043,G__108044,G__108045,G__108046,G__108047,G__108048,G__108049,G__108050,G__108051,G__108052,G__108053,G__108054,G__108055,G__108056,G__108057,G__108058));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107998,G__107999) : tailrecursion.hoplon.div.call(null,G__107998,G__107999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107997) : tailrecursion.hoplon.div.call(null,G__107997));
})(),(function (){var G__108121 = cljs.core.PersistentArrayMap.EMPTY;
var G__108122 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Despite the fact that these two procedures are structurally very different, a more abstract description of the two computations reveals a great deal of similarity. The first program"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108121,G__108122) : tailrecursion.hoplon.markdown.para_node.call(null,G__108121,G__108122));
})(),(function (){var G__108123 = cljs.core.PersistentArrayMap.EMPTY;
var G__108124 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108125 = cljs.core.PersistentArrayMap.EMPTY;
var G__108126 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108127 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108128 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["enumerates the leaves of a tree;"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108128;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108127;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108125,G__108126) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108125,G__108126));
})(),(function (){var G__108129 = cljs.core.PersistentArrayMap.EMPTY;
var G__108130 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108131 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108132 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filters them, selecting the odd ones;"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108132;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108131;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108129,G__108130) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108129,G__108130));
})(),(function (){var G__108133 = cljs.core.PersistentArrayMap.EMPTY;
var G__108134 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108135 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108136 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["squares each of the selected one; and"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108136;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108135;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108133,G__108134) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108133,G__108134));
})(),(function (){var G__108137 = cljs.core.PersistentArrayMap.EMPTY;
var G__108138 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108139 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108140 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accumulates the results unsing +, starting with 0."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108140;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108139;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108137,G__108138) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108137,G__108138));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__108123,G__108124) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__108123,G__108124));
})(),(function (){var G__108141 = cljs.core.PersistentArrayMap.EMPTY;
var G__108142 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second program"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108141,G__108142) : tailrecursion.hoplon.markdown.para_node.call(null,G__108141,G__108142));
})(),(function (){var G__108143 = cljs.core.PersistentArrayMap.EMPTY;
var G__108144 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108145 = cljs.core.PersistentArrayMap.EMPTY;
var G__108146 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108147 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108148 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["enumerates the integers from 0 to \\(n\\);"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108148;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108147;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108145,G__108146) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108145,G__108146));
})(),(function (){var G__108149 = cljs.core.PersistentArrayMap.EMPTY;
var G__108150 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108151 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108152 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["computes the fibonacci number for each integer;"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108152;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108151;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108149,G__108150) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108149,G__108150));
})(),(function (){var G__108153 = cljs.core.PersistentArrayMap.EMPTY;
var G__108154 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108155 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108156 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filters them, selecting the even ones; and"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108156;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108155;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108153,G__108154) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108153,G__108154));
})(),(function (){var G__108157 = cljs.core.PersistentArrayMap.EMPTY;
var G__108158 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_108159 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108160 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accumulates the results using ",(function (){var G__108161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__108162 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108161,G__108162) : tailrecursion.hoplon.markdown.code_node.call(null,G__108161,G__108162));
})(),", starting with the empty list."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108160;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108159;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__108157,G__108158) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__108157,G__108158));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__108143,G__108144) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__108143,G__108144));
})(),(function (){var G__108163 = cljs.core.PersistentArrayMap.EMPTY;
var G__108164 = new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A signal-processing engineer would find it natural to conceptualize these processes in terms of signals flowing through a cascade of stages, each of which implements part of the program plan, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/7/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.7"], null)], 0)),". In ",(function (){var G__108165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__108166 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108165,G__108166) : tailrecursion.hoplon.markdown.code_node.call(null,G__108165,G__108166));
})(),", we begin with an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["enumerator"], null)], 0)),", which generates a ",(function (){var G__108167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__108168 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["signal"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108167,G__108168) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108167,G__108168));
})()," consisting of the leaves of a given tree. This signal is passed through a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filter"], null)], 0)),", which eliminates all but the odd elements. The resulting signal is in turn passed through a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["map"], null)], 0)),", which is a ",(function (){var G__108169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__108170 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["transducer"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108169,G__108170) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108169,G__108170));
})()," that applies the ",(function (){var G__108171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square"], null);
var G__108172 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108171,G__108172) : tailrecursion.hoplon.markdown.code_node.call(null,G__108171,G__108172));
})()," procedure to each element. The output of the map is then fed to an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accumulator"], null)], 0)),", which combines the elements using +, starting from an initial 0. The plan for ",(function (){var G__108173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__108174 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108173,G__108174) : tailrecursion.hoplon.markdown.code_node.call(null,G__108173,G__108174));
})()," is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108163,G__108164) : tailrecursion.hoplon.markdown.para_node.call(null,G__108163,G__108164));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107887;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107886;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107885;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107884;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The signal-flow plans for the procedures sum-odd-squares (top) and even-fibs (bottom) reveal the commonality between the two programs."], null)], 0)),"",(function (){var _STAR_references_STAR_108175 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108176 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_108177 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108178 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108179 = cljs.core.PersistentArrayMap.EMPTY;
var G__108180 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, the two procedure definitions above fail to exibit this signal-flow structure. For instance, if we examine the ",(function (){var G__108181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__108182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108181,G__108182) : tailrecursion.hoplon.markdown.code_node.call(null,G__108181,G__108182));
})()," procedure, we find that the enumeration is implemented partly by the ",(function (){var G__108183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"empty?"], null);
var G__108184 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108183,G__108184) : tailrecursion.hoplon.markdown.code_node.call(null,G__108183,G__108184));
})()," and ",(function (){var G__108185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"seq?"], null);
var G__108186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108185,G__108186) : tailrecursion.hoplon.markdown.code_node.call(null,G__108185,G__108186));
})()," tests and partly by the tree-recursive structure of the procedure. Similarly, the accumulation is found partly in the tests and partly in the addition used in the recursion. In general, there are no distinct parts of either procedure that correspond to the elements in the signal-flow description. Our two procedures decompose the computations in a different way, spreading the enumeration of the program and mingling it with the map, the filter, and the accumulation. If we could reorganize our programs to make the signal-flow structure manifest in the procedures we write, this would increase the conceptual clarity of the resulting code."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108179,G__108180) : tailrecursion.hoplon.markdown.para_node.call(null,G__108179,G__108180));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108178;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108177;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108176;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108175;
}})()], 0));
var G__101400 = "";
var G__101401 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Sequence Operations"], null),(function (){var _STAR_references_STAR_108187 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108188 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_108189 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108190 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108191 = cljs.core.PersistentArrayMap.EMPTY;
var G__108192 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The key to organizing programs so as to more clearly reflect the signal-flow structure is to concentrate on the ",(function (){var G__108193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__108194 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["signals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108193,G__108194) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108193,G__108194));
})()," that flow from one stage in the process to the next. If we represent these signals as lists, then we can use list operations to implement the processing at each of the stages. For instance, we can implement the mapping stages of the signal-flow diagrams using the ",(function (){var G__108195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__108196 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108195,G__108196) : tailrecursion.hoplon.markdown.code_node.call(null,G__108195,G__108196));
})()," procedure from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"@!/sicp/ch/2/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.1"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108191,G__108192) : tailrecursion.hoplon.markdown.para_node.call(null,G__108191,G__108192));
})(),(function (){var G__108197 = (function (){var G__108198 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108199 = (function (){var G__108200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108201 = "(";
var G__108202 = (function (){var G__108226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108227 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108226,G__108227) : tailrecursion.hoplon.span.call(null,G__108226,G__108227));
})();
var G__108203 = (function (){var G__108228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108229 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108228,G__108229) : tailrecursion.hoplon.span.call(null,G__108228,G__108229));
})();
var G__108204 = " (";
var G__108205 = (function (){var G__108230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108231 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108230,G__108231) : tailrecursion.hoplon.span.call(null,G__108230,G__108231));
})();
var G__108206 = (function (){var G__108232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108233 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108232,G__108233) : tailrecursion.hoplon.span.call(null,G__108232,G__108233));
})();
var G__108207 = " ";
var G__108208 = (function (){var G__108234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108235 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108234,G__108235) : tailrecursion.hoplon.span.call(null,G__108234,G__108235));
})();
var G__108209 = " ";
var G__108210 = (function (){var G__108236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108237 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108236,G__108237) : tailrecursion.hoplon.span.call(null,G__108236,G__108237));
})();
var G__108211 = " ";
var G__108212 = (function (){var G__108238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108239 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108238,G__108239) : tailrecursion.hoplon.span.call(null,G__108238,G__108239));
})();
var G__108213 = " ";
var G__108214 = (function (){var G__108240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108241 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108240,G__108241) : tailrecursion.hoplon.span.call(null,G__108240,G__108241));
})();
var G__108215 = "))\n(";
var G__108216 = (function (){var G__108242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108243 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108242,G__108243) : tailrecursion.hoplon.span.call(null,G__108242,G__108243));
})();
var G__108217 = " ";
var G__108218 = (function (){var G__108244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108245 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108244,G__108245) : tailrecursion.hoplon.span.call(null,G__108244,G__108245));
})();
var G__108219 = " ";
var G__108220 = (function (){var G__108246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108247 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108246,G__108247) : tailrecursion.hoplon.span.call(null,G__108246,G__108247));
})();
var G__108221 = " ";
var G__108222 = (function (){var G__108248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108249 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108248,G__108249) : tailrecursion.hoplon.span.call(null,G__108248,G__108249));
})();
var G__108223 = " ";
var G__108224 = (function (){var G__108250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108251 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108250,G__108251) : tailrecursion.hoplon.span.call(null,G__108250,G__108251));
})();
var G__108225 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__108200,G__108201,G__108202,G__108203,G__108204,G__108205,G__108206,G__108207,G__108208,G__108209,G__108210,G__108211,G__108212,G__108213,G__108214,G__108215,G__108216,G__108217,G__108218,G__108219,G__108220,G__108221,G__108222,G__108223,G__108224,G__108225) : tailrecursion.hoplon.pre.call(null,G__108200,G__108201,G__108202,G__108203,G__108204,G__108205,G__108206,G__108207,G__108208,G__108209,G__108210,G__108211,G__108212,G__108213,G__108214,G__108215,G__108216,G__108217,G__108218,G__108219,G__108220,G__108221,G__108222,G__108223,G__108224,G__108225));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108198,G__108199) : tailrecursion.hoplon.div.call(null,G__108198,G__108199));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108197) : tailrecursion.hoplon.div.call(null,G__108197));
})(),(function (){var G__108252 = cljs.core.PersistentArrayMap.EMPTY;
var G__108253 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Filtering a sequence to select only those elements that satisfy a given predicate is accomplished by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108252,G__108253) : tailrecursion.hoplon.markdown.para_node.call(null,G__108252,G__108253));
})(),(function (){var G__108254 = (function (){var G__108255 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108256 = (function (){var G__108257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108258 = "(";
var G__108259 = (function (){var G__108298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108299 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108298,G__108299) : tailrecursion.hoplon.span.call(null,G__108298,G__108299));
})();
var G__108260 = (function (){var G__108300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108301 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108300,G__108301) : tailrecursion.hoplon.span.call(null,G__108300,G__108301));
})();
var G__108261 = "[";
var G__108262 = (function (){var G__108302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108303 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108302,G__108303) : tailrecursion.hoplon.span.call(null,G__108302,G__108303));
})();
var G__108263 = " ";
var G__108264 = (function (){var G__108304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108305 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108304,G__108305) : tailrecursion.hoplon.span.call(null,G__108304,G__108305));
})();
var G__108265 = "]\n  (";
var G__108266 = (function (){var G__108306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108307 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108306,G__108307) : tailrecursion.hoplon.span.call(null,G__108306,G__108307));
})();
var G__108267 = "(";
var G__108268 = (function (){var G__108308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108309 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108308,G__108309) : tailrecursion.hoplon.span.call(null,G__108308,G__108309));
})();
var G__108269 = " ";
var G__108270 = (function (){var G__108310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108311 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108310,G__108311) : tailrecursion.hoplon.span.call(null,G__108310,G__108311));
})();
var G__108271 = ") (";
var G__108272 = (function (){var G__108312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108313 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108312,G__108313) : tailrecursion.hoplon.span.call(null,G__108312,G__108313));
})();
var G__108273 = ")\n        (";
var G__108274 = (function (){var G__108314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108315 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108314,G__108315) : tailrecursion.hoplon.span.call(null,G__108314,G__108315));
})();
var G__108275 = " (";
var G__108276 = (function (){var G__108316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108317 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108316,G__108317) : tailrecursion.hoplon.span.call(null,G__108316,G__108317));
})();
var G__108277 = (function (){var G__108318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108319 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108318,G__108319) : tailrecursion.hoplon.span.call(null,G__108318,G__108319));
})();
var G__108278 = ")) (";
var G__108279 = (function (){var G__108320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108321 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108320,G__108321) : tailrecursion.hoplon.span.call(null,G__108320,G__108321));
})();
var G__108280 = "(";
var G__108281 = (function (){var G__108322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108323 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108322,G__108323) : tailrecursion.hoplon.span.call(null,G__108322,G__108323));
})();
var G__108282 = (function (){var G__108324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108325 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108324,G__108325) : tailrecursion.hoplon.span.call(null,G__108324,G__108325));
})();
var G__108283 = " \n                                                   (";
var G__108284 = (function (){var G__108326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108327 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108326,G__108327) : tailrecursion.hoplon.span.call(null,G__108326,G__108327));
})();
var G__108285 = (function (){var G__108328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108329 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108328,G__108329) : tailrecursion.hoplon.span.call(null,G__108328,G__108329));
})();
var G__108286 = "))\n                                           (";
var G__108287 = (function (){var G__108330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108331 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108330,G__108331) : tailrecursion.hoplon.span.call(null,G__108330,G__108331));
})();
var G__108288 = (function (){var G__108332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108333 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108332,G__108333) : tailrecursion.hoplon.span.call(null,G__108332,G__108333));
})();
var G__108289 = "))\n        ";
var G__108290 = (function (){var G__108334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108335 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108334,G__108335) : tailrecursion.hoplon.span.call(null,G__108334,G__108335));
})();
var G__108291 = " (";
var G__108292 = (function (){var G__108336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108337 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108336,G__108337) : tailrecursion.hoplon.span.call(null,G__108336,G__108337));
})();
var G__108293 = (function (){var G__108338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108339 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108338,G__108339) : tailrecursion.hoplon.span.call(null,G__108338,G__108339));
})();
var G__108294 = " (";
var G__108295 = (function (){var G__108340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108341 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108340,G__108341) : tailrecursion.hoplon.span.call(null,G__108340,G__108341));
})();
var G__108296 = (function (){var G__108342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108343 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108342,G__108343) : tailrecursion.hoplon.span.call(null,G__108342,G__108343));
})();
var G__108297 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__108257,G__108258,G__108259,G__108260,G__108261,G__108262,G__108263,G__108264,G__108265,G__108266,G__108267,G__108268,G__108269,G__108270,G__108271,G__108272,G__108273,G__108274,G__108275,G__108276,G__108277,G__108278,G__108279,G__108280,G__108281,G__108282,G__108283,G__108284,G__108285,G__108286,G__108287,G__108288,G__108289,G__108290,G__108291,G__108292,G__108293,G__108294,G__108295,G__108296,G__108297) : tailrecursion.hoplon.pre.call(null,G__108257,G__108258,G__108259,G__108260,G__108261,G__108262,G__108263,G__108264,G__108265,G__108266,G__108267,G__108268,G__108269,G__108270,G__108271,G__108272,G__108273,G__108274,G__108275,G__108276,G__108277,G__108278,G__108279,G__108280,G__108281,G__108282,G__108283,G__108284,G__108285,G__108286,G__108287,G__108288,G__108289,G__108290,G__108291,G__108292,G__108293,G__108294,G__108295,G__108296,G__108297));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108255,G__108256) : tailrecursion.hoplon.div.call(null,G__108255,G__108256));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108254) : tailrecursion.hoplon.div.call(null,G__108254));
})(),(function (){var G__108344 = cljs.core.PersistentArrayMap.EMPTY;
var G__108345 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108344,G__108345) : tailrecursion.hoplon.markdown.para_node.call(null,G__108344,G__108345));
})(),(function (){var G__108346 = (function (){var G__108347 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108348 = (function (){var G__108349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108350 = "(";
var G__108351 = (function (){var G__108371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108372 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108371,G__108372) : tailrecursion.hoplon.span.call(null,G__108371,G__108372));
})();
var G__108352 = (function (){var G__108373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108374 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108373,G__108374) : tailrecursion.hoplon.span.call(null,G__108373,G__108374));
})();
var G__108353 = " (";
var G__108354 = (function (){var G__108375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108376 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108375,G__108376) : tailrecursion.hoplon.span.call(null,G__108375,G__108376));
})();
var G__108355 = (function (){var G__108377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108378 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108377,G__108378) : tailrecursion.hoplon.span.call(null,G__108377,G__108378));
})();
var G__108356 = " ";
var G__108357 = (function (){var G__108379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108380 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108379,G__108380) : tailrecursion.hoplon.span.call(null,G__108379,G__108380));
})();
var G__108358 = " ";
var G__108359 = (function (){var G__108381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108382 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108381,G__108382) : tailrecursion.hoplon.span.call(null,G__108381,G__108382));
})();
var G__108360 = " ";
var G__108361 = (function (){var G__108383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108384 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108383,G__108384) : tailrecursion.hoplon.span.call(null,G__108383,G__108384));
})();
var G__108362 = " ";
var G__108363 = (function (){var G__108385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108386 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108385,G__108386) : tailrecursion.hoplon.span.call(null,G__108385,G__108386));
})();
var G__108364 = "))\n(";
var G__108365 = (function (){var G__108387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108388 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108387,G__108388) : tailrecursion.hoplon.span.call(null,G__108387,G__108388));
})();
var G__108366 = " ";
var G__108367 = (function (){var G__108389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108390 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108389,G__108390) : tailrecursion.hoplon.span.call(null,G__108389,G__108390));
})();
var G__108368 = " ";
var G__108369 = (function (){var G__108391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108392 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108391,G__108392) : tailrecursion.hoplon.span.call(null,G__108391,G__108392));
})();
var G__108370 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__108349,G__108350,G__108351,G__108352,G__108353,G__108354,G__108355,G__108356,G__108357,G__108358,G__108359,G__108360,G__108361,G__108362,G__108363,G__108364,G__108365,G__108366,G__108367,G__108368,G__108369,G__108370) : tailrecursion.hoplon.pre.call(null,G__108349,G__108350,G__108351,G__108352,G__108353,G__108354,G__108355,G__108356,G__108357,G__108358,G__108359,G__108360,G__108361,G__108362,G__108363,G__108364,G__108365,G__108366,G__108367,G__108368,G__108369,G__108370));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108347,G__108348) : tailrecursion.hoplon.div.call(null,G__108347,G__108348));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108346) : tailrecursion.hoplon.div.call(null,G__108346));
})(),(function (){var G__108393 = cljs.core.PersistentArrayMap.EMPTY;
var G__108394 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Accumulations can be implemented by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108393,G__108394) : tailrecursion.hoplon.markdown.para_node.call(null,G__108393,G__108394));
})(),(function (){var G__108395 = (function (){var G__108396 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108397 = (function (){var G__108398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108399 = "(";
var G__108400 = (function (){var G__108493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108494 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108493,G__108494) : tailrecursion.hoplon.span.call(null,G__108493,G__108494));
})();
var G__108401 = (function (){var G__108495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108496 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108495,G__108496) : tailrecursion.hoplon.span.call(null,G__108495,G__108496));
})();
var G__108402 = " [";
var G__108403 = (function (){var G__108497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108498 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108497,G__108498) : tailrecursion.hoplon.span.call(null,G__108497,G__108498));
})();
var G__108404 = " ";
var G__108405 = (function (){var G__108499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108500 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108499,G__108500) : tailrecursion.hoplon.span.call(null,G__108499,G__108500));
})();
var G__108406 = " ";
var G__108407 = (function (){var G__108501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108502 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108501,G__108502) : tailrecursion.hoplon.span.call(null,G__108501,G__108502));
})();
var G__108408 = "]\n  (";
var G__108409 = (function (){var G__108503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108504 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108503,G__108504) : tailrecursion.hoplon.span.call(null,G__108503,G__108504));
})();
var G__108410 = "(";
var G__108411 = (function (){var G__108505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108506 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108505,G__108506) : tailrecursion.hoplon.span.call(null,G__108505,G__108506));
})();
var G__108412 = " ";
var G__108413 = (function (){var G__108507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108508 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108507,G__108508) : tailrecursion.hoplon.span.call(null,G__108507,G__108508));
})();
var G__108414 = ")\n      ";
var G__108415 = (function (){var G__108509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108510 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108509,G__108510) : tailrecursion.hoplon.span.call(null,G__108509,G__108510));
})();
var G__108416 = "\n      (";
var G__108417 = (function (){var G__108511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108512 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108511,G__108512) : tailrecursion.hoplon.span.call(null,G__108511,G__108512));
})();
var G__108418 = " (";
var G__108419 = (function (){var G__108513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108514 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108513,G__108514) : tailrecursion.hoplon.span.call(null,G__108513,G__108514));
})();
var G__108420 = (function (){var G__108515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108516 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108515,G__108516) : tailrecursion.hoplon.span.call(null,G__108515,G__108516));
})();
var G__108421 = ")\n          (";
var G__108422 = (function (){var G__108517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108518 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108517,G__108518) : tailrecursion.hoplon.span.call(null,G__108517,G__108518));
})();
var G__108423 = " ";
var G__108424 = (function (){var G__108519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108520 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108519,G__108520) : tailrecursion.hoplon.span.call(null,G__108519,G__108520));
})();
var G__108425 = " ";
var G__108426 = (function (){var G__108521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108522 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108521,G__108522) : tailrecursion.hoplon.span.call(null,G__108521,G__108522));
})();
var G__108427 = " (";
var G__108428 = (function (){var G__108523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108524 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108523,G__108524) : tailrecursion.hoplon.span.call(null,G__108523,G__108524));
})();
var G__108429 = (function (){var G__108525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108526 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108525,G__108526) : tailrecursion.hoplon.span.call(null,G__108525,G__108526));
})();
var G__108430 = ")))))\n\n(";
var G__108431 = (function (){var G__108527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108528 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108527,G__108528) : tailrecursion.hoplon.span.call(null,G__108527,G__108528));
})();
var G__108432 = " ";
var G__108433 = (function (){var G__108529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108530 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108529,G__108530) : tailrecursion.hoplon.span.call(null,G__108529,G__108530));
})();
var G__108434 = (function (){var G__108531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108532 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108531,G__108532) : tailrecursion.hoplon.span.call(null,G__108531,G__108532));
})();
var G__108435 = " (";
var G__108436 = (function (){var G__108533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108534 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108533,G__108534) : tailrecursion.hoplon.span.call(null,G__108533,G__108534));
})();
var G__108437 = (function (){var G__108535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108536 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108535,G__108536) : tailrecursion.hoplon.span.call(null,G__108535,G__108536));
})();
var G__108438 = " ";
var G__108439 = (function (){var G__108537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108538 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108537,G__108538) : tailrecursion.hoplon.span.call(null,G__108537,G__108538));
})();
var G__108440 = " ";
var G__108441 = (function (){var G__108539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108540 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108539,G__108540) : tailrecursion.hoplon.span.call(null,G__108539,G__108540));
})();
var G__108442 = " ";
var G__108443 = (function (){var G__108541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108542 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108541,G__108542) : tailrecursion.hoplon.span.call(null,G__108541,G__108542));
})();
var G__108444 = " ";
var G__108445 = (function (){var G__108543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108544 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108543,G__108544) : tailrecursion.hoplon.span.call(null,G__108543,G__108544));
})();
var G__108446 = "))\n";
var G__108447 = (function (){var G__108545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108546 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108545,G__108546) : tailrecursion.hoplon.span.call(null,G__108545,G__108546));
})();
var G__108448 = "\n\n(";
var G__108449 = (function (){var G__108547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108548 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108547,G__108548) : tailrecursion.hoplon.span.call(null,G__108547,G__108548));
})();
var G__108450 = " ";
var G__108451 = (function (){var G__108549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108550 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108549,G__108550) : tailrecursion.hoplon.span.call(null,G__108549,G__108550));
})();
var G__108452 = (function (){var G__108551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108552 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108551,G__108552) : tailrecursion.hoplon.span.call(null,G__108551,G__108552));
})();
var G__108453 = " (";
var G__108454 = (function (){var G__108553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108554 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108553,G__108554) : tailrecursion.hoplon.span.call(null,G__108553,G__108554));
})();
var G__108455 = (function (){var G__108555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108556 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108555,G__108556) : tailrecursion.hoplon.span.call(null,G__108555,G__108556));
})();
var G__108456 = " ";
var G__108457 = (function (){var G__108557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108558 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108557,G__108558) : tailrecursion.hoplon.span.call(null,G__108557,G__108558));
})();
var G__108458 = " ";
var G__108459 = (function (){var G__108559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108560 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108559,G__108560) : tailrecursion.hoplon.span.call(null,G__108559,G__108560));
})();
var G__108460 = " ";
var G__108461 = (function (){var G__108561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108562 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108561,G__108562) : tailrecursion.hoplon.span.call(null,G__108561,G__108562));
})();
var G__108462 = " ";
var G__108463 = (function (){var G__108563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108564 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108563,G__108564) : tailrecursion.hoplon.span.call(null,G__108563,G__108564));
})();
var G__108464 = "))\n";
var G__108465 = (function (){var G__108565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108566 = "120";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108565,G__108566) : tailrecursion.hoplon.span.call(null,G__108565,G__108566));
})();
var G__108466 = "\n\n(";
var G__108467 = (function (){var G__108567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108568 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108567,G__108568) : tailrecursion.hoplon.span.call(null,G__108567,G__108568));
})();
var G__108468 = " ";
var G__108469 = (function (){var G__108569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108570 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108569,G__108570) : tailrecursion.hoplon.span.call(null,G__108569,G__108570));
})();
var G__108470 = (function (){var G__108571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108572 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108571,G__108572) : tailrecursion.hoplon.span.call(null,G__108571,G__108572));
})();
var G__108471 = " (";
var G__108472 = (function (){var G__108573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108574 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108573,G__108574) : tailrecursion.hoplon.span.call(null,G__108573,G__108574));
})();
var G__108473 = (function (){var G__108575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108576 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108575,G__108576) : tailrecursion.hoplon.span.call(null,G__108575,G__108576));
})();
var G__108474 = " ";
var G__108475 = (function (){var G__108577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108578 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108577,G__108578) : tailrecursion.hoplon.span.call(null,G__108577,G__108578));
})();
var G__108476 = " ";
var G__108477 = (function (){var G__108579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108580 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108579,G__108580) : tailrecursion.hoplon.span.call(null,G__108579,G__108580));
})();
var G__108478 = " ";
var G__108479 = (function (){var G__108581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108582 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108581,G__108582) : tailrecursion.hoplon.span.call(null,G__108581,G__108582));
})();
var G__108480 = " ";
var G__108481 = (function (){var G__108583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108584 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108583,G__108584) : tailrecursion.hoplon.span.call(null,G__108583,G__108584));
})();
var G__108482 = "))\n(";
var G__108483 = (function (){var G__108585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108586 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108585,G__108586) : tailrecursion.hoplon.span.call(null,G__108585,G__108586));
})();
var G__108484 = " ";
var G__108485 = (function (){var G__108587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108588 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108587,G__108588) : tailrecursion.hoplon.span.call(null,G__108587,G__108588));
})();
var G__108486 = " ";
var G__108487 = (function (){var G__108589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108590 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108589,G__108590) : tailrecursion.hoplon.span.call(null,G__108589,G__108590));
})();
var G__108488 = " ";
var G__108489 = (function (){var G__108591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108592 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108591,G__108592) : tailrecursion.hoplon.span.call(null,G__108591,G__108592));
})();
var G__108490 = " ";
var G__108491 = (function (){var G__108593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108594 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108593,G__108594) : tailrecursion.hoplon.span.call(null,G__108593,G__108594));
})();
var G__108492 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95(G__108398,G__108399,G__108400,G__108401,G__108402,G__108403,G__108404,G__108405,G__108406,G__108407,G__108408,G__108409,G__108410,G__108411,G__108412,G__108413,G__108414,G__108415,G__108416,G__108417,G__108418,G__108419,G__108420,G__108421,G__108422,G__108423,G__108424,G__108425,G__108426,G__108427,G__108428,G__108429,G__108430,G__108431,G__108432,G__108433,G__108434,G__108435,G__108436,G__108437,G__108438,G__108439,G__108440,G__108441,G__108442,G__108443,G__108444,G__108445,G__108446,G__108447,G__108448,G__108449,G__108450,G__108451,G__108452,G__108453,G__108454,G__108455,G__108456,G__108457,G__108458,G__108459,G__108460,G__108461,G__108462,G__108463,G__108464,G__108465,G__108466,G__108467,G__108468,G__108469,G__108470,G__108471,G__108472,G__108473,G__108474,G__108475,G__108476,G__108477,G__108478,G__108479,G__108480,G__108481,G__108482,G__108483,G__108484,G__108485,G__108486,G__108487,G__108488,G__108489,G__108490,G__108491,G__108492) : tailrecursion.hoplon.pre.call(null,G__108398,G__108399,G__108400,G__108401,G__108402,G__108403,G__108404,G__108405,G__108406,G__108407,G__108408,G__108409,G__108410,G__108411,G__108412,G__108413,G__108414,G__108415,G__108416,G__108417,G__108418,G__108419,G__108420,G__108421,G__108422,G__108423,G__108424,G__108425,G__108426,G__108427,G__108428,G__108429,G__108430,G__108431,G__108432,G__108433,G__108434,G__108435,G__108436,G__108437,G__108438,G__108439,G__108440,G__108441,G__108442,G__108443,G__108444,G__108445,G__108446,G__108447,G__108448,G__108449,G__108450,G__108451,G__108452,G__108453,G__108454,G__108455,G__108456,G__108457,G__108458,G__108459,G__108460,G__108461,G__108462,G__108463,G__108464,G__108465,G__108466,G__108467,G__108468,G__108469,G__108470,G__108471,G__108472,G__108473,G__108474,G__108475,G__108476,G__108477,G__108478,G__108479,G__108480,G__108481,G__108482,G__108483,G__108484,G__108485,G__108486,G__108487,G__108488,G__108489,G__108490,G__108491,G__108492));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108396,G__108397) : tailrecursion.hoplon.div.call(null,G__108396,G__108397));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108395) : tailrecursion.hoplon.div.call(null,G__108395));
})(),(function (){var G__108595 = cljs.core.PersistentArrayMap.EMPTY;
var G__108596 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: in the original SICP, ",(function (){var G__108597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate"], null);
var G__108598 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108597,G__108598) : tailrecursion.hoplon.markdown.code_node.call(null,G__108597,G__108598));
})()," is defined as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108595,G__108596) : tailrecursion.hoplon.markdown.para_node.call(null,G__108595,G__108596));
})(),(function (){var G__108599 = (function (){var G__108600 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108601 = (function (){var G__108602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108603 = "(";
var G__108604 = (function (){var G__108635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108636 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108635,G__108636) : tailrecursion.hoplon.span.call(null,G__108635,G__108636));
})();
var G__108605 = "(";
var G__108606 = (function (){var G__108637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108638 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108637,G__108638) : tailrecursion.hoplon.span.call(null,G__108637,G__108638));
})();
var G__108607 = " ";
var G__108608 = (function (){var G__108639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108640 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108639,G__108640) : tailrecursion.hoplon.span.call(null,G__108639,G__108640));
})();
var G__108609 = " ";
var G__108610 = (function (){var G__108641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108642 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108641,G__108642) : tailrecursion.hoplon.span.call(null,G__108641,G__108642));
})();
var G__108611 = " ";
var G__108612 = (function (){var G__108643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108644 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108643,G__108644) : tailrecursion.hoplon.span.call(null,G__108643,G__108644));
})();
var G__108613 = ")\n  (";
var G__108614 = (function (){var G__108645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108646 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108645,G__108646) : tailrecursion.hoplon.span.call(null,G__108645,G__108646));
})();
var G__108615 = "(";
var G__108616 = (function (){var G__108647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108648 = "null? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108647,G__108648) : tailrecursion.hoplon.span.call(null,G__108647,G__108648));
})();
var G__108617 = (function (){var G__108649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108650 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108649,G__108650) : tailrecursion.hoplon.span.call(null,G__108649,G__108650));
})();
var G__108618 = ")\n      ";
var G__108619 = (function (){var G__108651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108652 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108651,G__108652) : tailrecursion.hoplon.span.call(null,G__108651,G__108652));
})();
var G__108620 = "\n      (";
var G__108621 = (function (){var G__108653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108654 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108653,G__108654) : tailrecursion.hoplon.span.call(null,G__108653,G__108654));
})();
var G__108622 = " (";
var G__108623 = (function (){var G__108655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108656 = "car ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108655,G__108656) : tailrecursion.hoplon.span.call(null,G__108655,G__108656));
})();
var G__108624 = (function (){var G__108657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108658 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108657,G__108658) : tailrecursion.hoplon.span.call(null,G__108657,G__108658));
})();
var G__108625 = ")\n          (";
var G__108626 = (function (){var G__108659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108660 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108659,G__108660) : tailrecursion.hoplon.span.call(null,G__108659,G__108660));
})();
var G__108627 = " ";
var G__108628 = (function (){var G__108661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108662 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108661,G__108662) : tailrecursion.hoplon.span.call(null,G__108661,G__108662));
})();
var G__108629 = " ";
var G__108630 = (function (){var G__108663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108664 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108663,G__108664) : tailrecursion.hoplon.span.call(null,G__108663,G__108664));
})();
var G__108631 = " (";
var G__108632 = (function (){var G__108665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108666 = "cdr ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108665,G__108666) : tailrecursion.hoplon.span.call(null,G__108665,G__108666));
})();
var G__108633 = (function (){var G__108667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108668 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108667,G__108668) : tailrecursion.hoplon.span.call(null,G__108667,G__108668));
})();
var G__108634 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__108602,G__108603,G__108604,G__108605,G__108606,G__108607,G__108608,G__108609,G__108610,G__108611,G__108612,G__108613,G__108614,G__108615,G__108616,G__108617,G__108618,G__108619,G__108620,G__108621,G__108622,G__108623,G__108624,G__108625,G__108626,G__108627,G__108628,G__108629,G__108630,G__108631,G__108632,G__108633,G__108634) : tailrecursion.hoplon.pre.call(null,G__108602,G__108603,G__108604,G__108605,G__108606,G__108607,G__108608,G__108609,G__108610,G__108611,G__108612,G__108613,G__108614,G__108615,G__108616,G__108617,G__108618,G__108619,G__108620,G__108621,G__108622,G__108623,G__108624,G__108625,G__108626,G__108627,G__108628,G__108629,G__108630,G__108631,G__108632,G__108633,G__108634));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108600,G__108601) : tailrecursion.hoplon.div.call(null,G__108600,G__108601));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108599) : tailrecursion.hoplon.div.call(null,G__108599));
})(),(function (){var G__108669 = cljs.core.PersistentArrayMap.EMPTY;
var G__108670 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we wanted to define this so as to be able to use ",(function (){var G__108671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__108672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108671,G__108672) : tailrecursion.hoplon.markdown.code_node.call(null,G__108671,G__108672));
})()," instead of ",(function (){var G__108673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__108674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108673,G__108674) : tailrecursion.hoplon.markdown.code_node.call(null,G__108673,G__108674));
})(),", what would we have to change?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108669,G__108670) : tailrecursion.hoplon.markdown.para_node.call(null,G__108669,G__108670));
})(),(function (){var G__108675 = cljs.core.PersistentArrayMap.EMPTY;
var G__108676 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["All that remains to implement signal-flow diagrams is to enumerate the sequence of elements to be processed. For ",(function (){var G__108677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__108678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108677,G__108678) : tailrecursion.hoplon.markdown.code_node.call(null,G__108677,G__108678));
})(),", we need to generate the sequence of integers in a given range, which we can do as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108675,G__108676) : tailrecursion.hoplon.markdown.para_node.call(null,G__108675,G__108676));
})(),(function (){var G__108679 = (function (){var G__108680 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108681 = (function (){var G__108682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108683 = "(";
var G__108684 = (function (){var G__108730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108731 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108730,G__108731) : tailrecursion.hoplon.span.call(null,G__108730,G__108731));
})();
var G__108685 = (function (){var G__108732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108733 = "enumerate-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108732,G__108733) : tailrecursion.hoplon.span.call(null,G__108732,G__108733));
})();
var G__108686 = " [";
var G__108687 = (function (){var G__108734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108735 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108734,G__108735) : tailrecursion.hoplon.span.call(null,G__108734,G__108735));
})();
var G__108688 = " ";
var G__108689 = (function (){var G__108736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108737 = "high";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108736,G__108737) : tailrecursion.hoplon.span.call(null,G__108736,G__108737));
})();
var G__108690 = "]\n  (";
var G__108691 = (function (){var G__108738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108739 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108738,G__108739) : tailrecursion.hoplon.span.call(null,G__108738,G__108739));
})();
var G__108692 = "(";
var G__108693 = (function (){var G__108740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108741 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108740,G__108741) : tailrecursion.hoplon.span.call(null,G__108740,G__108741));
})();
var G__108694 = (function (){var G__108742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108743 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108742,G__108743) : tailrecursion.hoplon.span.call(null,G__108742,G__108743));
})();
var G__108695 = " ";
var G__108696 = (function (){var G__108744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108745 = "high";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108744,G__108745) : tailrecursion.hoplon.span.call(null,G__108744,G__108745));
})();
var G__108697 = ")\n      ";
var G__108698 = (function (){var G__108746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108747 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108746,G__108747) : tailrecursion.hoplon.span.call(null,G__108746,G__108747));
})();
var G__108699 = "\n      (";
var G__108700 = (function (){var G__108748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108749 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108748,G__108749) : tailrecursion.hoplon.span.call(null,G__108748,G__108749));
})();
var G__108701 = (function (){var G__108750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108751 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108750,G__108751) : tailrecursion.hoplon.span.call(null,G__108750,G__108751));
})();
var G__108702 = " (";
var G__108703 = (function (){var G__108752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108753 = "enumerate-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108752,G__108753) : tailrecursion.hoplon.span.call(null,G__108752,G__108753));
})();
var G__108704 = " (";
var G__108705 = (function (){var G__108754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108755 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108754,G__108755) : tailrecursion.hoplon.span.call(null,G__108754,G__108755));
})();
var G__108706 = (function (){var G__108756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108757 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108756,G__108757) : tailrecursion.hoplon.span.call(null,G__108756,G__108757));
})();
var G__108707 = " ";
var G__108708 = (function (){var G__108758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108759 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108758,G__108759) : tailrecursion.hoplon.span.call(null,G__108758,G__108759));
})();
var G__108709 = ") ";
var G__108710 = (function (){var G__108760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108761 = "high";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108760,G__108761) : tailrecursion.hoplon.span.call(null,G__108760,G__108761));
})();
var G__108711 = "))))\n(";
var G__108712 = (function (){var G__108762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108763 = "enumerate-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108762,G__108763) : tailrecursion.hoplon.span.call(null,G__108762,G__108763));
})();
var G__108713 = " ";
var G__108714 = (function (){var G__108764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108765 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108764,G__108765) : tailrecursion.hoplon.span.call(null,G__108764,G__108765));
})();
var G__108715 = " ";
var G__108716 = (function (){var G__108766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108767 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108766,G__108767) : tailrecursion.hoplon.span.call(null,G__108766,G__108767));
})();
var G__108717 = ")\n(";
var G__108718 = (function (){var G__108768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108769 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108768,G__108769) : tailrecursion.hoplon.span.call(null,G__108768,G__108769));
})();
var G__108719 = " ";
var G__108720 = (function (){var G__108770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108771 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108770,G__108771) : tailrecursion.hoplon.span.call(null,G__108770,G__108771));
})();
var G__108721 = " ";
var G__108722 = (function (){var G__108772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108773 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108772,G__108773) : tailrecursion.hoplon.span.call(null,G__108772,G__108773));
})();
var G__108723 = " ";
var G__108724 = (function (){var G__108774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108775 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108774,G__108775) : tailrecursion.hoplon.span.call(null,G__108774,G__108775));
})();
var G__108725 = " ";
var G__108726 = (function (){var G__108776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108777 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108776,G__108777) : tailrecursion.hoplon.span.call(null,G__108776,G__108777));
})();
var G__108727 = " ";
var G__108728 = (function (){var G__108778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108779 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108778,G__108779) : tailrecursion.hoplon.span.call(null,G__108778,G__108779));
})();
var G__108729 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__108682,G__108683,G__108684,G__108685,G__108686,G__108687,G__108688,G__108689,G__108690,G__108691,G__108692,G__108693,G__108694,G__108695,G__108696,G__108697,G__108698,G__108699,G__108700,G__108701,G__108702,G__108703,G__108704,G__108705,G__108706,G__108707,G__108708,G__108709,G__108710,G__108711,G__108712,G__108713,G__108714,G__108715,G__108716,G__108717,G__108718,G__108719,G__108720,G__108721,G__108722,G__108723,G__108724,G__108725,G__108726,G__108727,G__108728,G__108729) : tailrecursion.hoplon.pre.call(null,G__108682,G__108683,G__108684,G__108685,G__108686,G__108687,G__108688,G__108689,G__108690,G__108691,G__108692,G__108693,G__108694,G__108695,G__108696,G__108697,G__108698,G__108699,G__108700,G__108701,G__108702,G__108703,G__108704,G__108705,G__108706,G__108707,G__108708,G__108709,G__108710,G__108711,G__108712,G__108713,G__108714,G__108715,G__108716,G__108717,G__108718,G__108719,G__108720,G__108721,G__108722,G__108723,G__108724,G__108725,G__108726,G__108727,G__108728,G__108729));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108680,G__108681) : tailrecursion.hoplon.div.call(null,G__108680,G__108681));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108679) : tailrecursion.hoplon.div.call(null,G__108679));
})(),(function (){var G__108780 = cljs.core.PersistentArrayMap.EMPTY;
var G__108781 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure has such a function, and it is called ",(function (){var G__108782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__108783 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108782,G__108783) : tailrecursion.hoplon.markdown.code_node.call(null,G__108782,G__108783));
})(),". ",(function (){var G__108784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__108785 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108784,G__108785) : tailrecursion.hoplon.markdown.code_node.call(null,G__108784,G__108785));
})()," is a function that takes, 1, 2 or 3 arguments. For more information on ",(function (){var G__108786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__108787 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108786,G__108787) : tailrecursion.hoplon.markdown.code_node.call(null,G__108786,G__108787));
})(),", see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/range",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clojure.org"], null)], 0)),". Try to define this using ",(function (){var G__108788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__108789 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108788,G__108789) : tailrecursion.hoplon.markdown.code_node.call(null,G__108788,G__108789));
})()," instead. Does it make a difference? Why or why not?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108780,G__108781) : tailrecursion.hoplon.markdown.para_node.call(null,G__108780,G__108781));
})(),(function (){var G__108790 = cljs.core.PersistentArrayMap.EMPTY;
var G__108791 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To enumerate the leaves of a tree, we can use",(function (){var G__108792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__108793 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is, in fact, precisely the fringe procedure from exercise 2.28. Here we've renamed it to emphasize that it is part of a family of general sequence-manipulation procedures."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108792,G__108793) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108792,G__108793));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108790,G__108791) : tailrecursion.hoplon.markdown.para_node.call(null,G__108790,G__108791));
})(),(function (){var G__108794 = (function (){var G__108795 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108796 = (function (){var G__108797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108798 = "(";
var G__108799 = (function (){var G__108859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108860 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108859,G__108860) : tailrecursion.hoplon.span.call(null,G__108859,G__108860));
})();
var G__108800 = (function (){var G__108861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108862 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108861,G__108862) : tailrecursion.hoplon.span.call(null,G__108861,G__108862));
})();
var G__108801 = " [";
var G__108802 = (function (){var G__108863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108864 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108863,G__108864) : tailrecursion.hoplon.span.call(null,G__108863,G__108864));
})();
var G__108803 = "]\n  (";
var G__108804 = (function (){var G__108865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108866 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108865,G__108866) : tailrecursion.hoplon.span.call(null,G__108865,G__108866));
})();
var G__108805 = "(";
var G__108806 = (function (){var G__108867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108868 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108867,G__108868) : tailrecursion.hoplon.span.call(null,G__108867,G__108868));
})();
var G__108807 = " ";
var G__108808 = (function (){var G__108869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108870 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108869,G__108870) : tailrecursion.hoplon.span.call(null,G__108869,G__108870));
})();
var G__108809 = ") ";
var G__108810 = (function (){var G__108871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108872 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108871,G__108872) : tailrecursion.hoplon.span.call(null,G__108871,G__108872));
})();
var G__108811 = "\n        (";
var G__108812 = (function (){var G__108873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108874 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108873,G__108874) : tailrecursion.hoplon.span.call(null,G__108873,G__108874));
})();
var G__108813 = "(";
var G__108814 = (function (){var G__108875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108876 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108875,G__108876) : tailrecursion.hoplon.span.call(null,G__108875,G__108876));
})();
var G__108815 = (function (){var G__108877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108878 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108877,G__108878) : tailrecursion.hoplon.span.call(null,G__108877,G__108878));
})();
var G__108816 = ")) (";
var G__108817 = (function (){var G__108879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108880 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108879,G__108880) : tailrecursion.hoplon.span.call(null,G__108879,G__108880));
})();
var G__108818 = (function (){var G__108881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108882 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108881,G__108882) : tailrecursion.hoplon.span.call(null,G__108881,G__108882));
})();
var G__108819 = ")\n        ";
var G__108820 = (function (){var G__108883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108884 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108883,G__108884) : tailrecursion.hoplon.span.call(null,G__108883,G__108884));
})();
var G__108821 = " (";
var G__108822 = (function (){var G__108885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108886 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108885,G__108886) : tailrecursion.hoplon.span.call(null,G__108885,G__108886));
})();
var G__108823 = "(";
var G__108824 = (function (){var G__108887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108888 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108887,G__108888) : tailrecursion.hoplon.span.call(null,G__108887,G__108888));
})();
var G__108825 = " (";
var G__108826 = (function (){var G__108889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108890 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108889,G__108890) : tailrecursion.hoplon.span.call(null,G__108889,G__108890));
})();
var G__108827 = (function (){var G__108891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108892 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108891,G__108892) : tailrecursion.hoplon.span.call(null,G__108891,G__108892));
})();
var G__108828 = "))\n                      (";
var G__108829 = (function (){var G__108893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108894 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108893,G__108894) : tailrecursion.hoplon.span.call(null,G__108893,G__108894));
})();
var G__108830 = " (";
var G__108831 = (function (){var G__108895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108896 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108895,G__108896) : tailrecursion.hoplon.span.call(null,G__108895,G__108896));
})();
var G__108832 = (function (){var G__108897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108898 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108897,G__108898) : tailrecursion.hoplon.span.call(null,G__108897,G__108898));
})();
var G__108833 = ")))))\n(";
var G__108834 = (function (){var G__108899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108900 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108899,G__108900) : tailrecursion.hoplon.span.call(null,G__108899,G__108900));
})();
var G__108835 = " (";
var G__108836 = (function (){var G__108901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108902 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108901,G__108902) : tailrecursion.hoplon.span.call(null,G__108901,G__108902));
})();
var G__108837 = (function (){var G__108903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108904 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108903,G__108904) : tailrecursion.hoplon.span.call(null,G__108903,G__108904));
})();
var G__108838 = " (";
var G__108839 = (function (){var G__108905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108906 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108905,G__108906) : tailrecursion.hoplon.span.call(null,G__108905,G__108906));
})();
var G__108840 = (function (){var G__108907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108908 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108907,G__108908) : tailrecursion.hoplon.span.call(null,G__108907,G__108908));
})();
var G__108841 = " (";
var G__108842 = (function (){var G__108909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108910 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108909,G__108910) : tailrecursion.hoplon.span.call(null,G__108909,G__108910));
})();
var G__108843 = (function (){var G__108911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108912 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108911,G__108912) : tailrecursion.hoplon.span.call(null,G__108911,G__108912));
})();
var G__108844 = " ";
var G__108845 = (function (){var G__108913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108914 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108913,G__108914) : tailrecursion.hoplon.span.call(null,G__108913,G__108914));
})();
var G__108846 = ")) ";
var G__108847 = (function (){var G__108915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108916 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108915,G__108916) : tailrecursion.hoplon.span.call(null,G__108915,G__108916));
})();
var G__108848 = "))\n(";
var G__108849 = (function (){var G__108917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108918 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108917,G__108918) : tailrecursion.hoplon.span.call(null,G__108917,G__108918));
})();
var G__108850 = " ";
var G__108851 = (function (){var G__108919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108920 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108919,G__108920) : tailrecursion.hoplon.span.call(null,G__108919,G__108920));
})();
var G__108852 = " ";
var G__108853 = (function (){var G__108921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108922 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108921,G__108922) : tailrecursion.hoplon.span.call(null,G__108921,G__108922));
})();
var G__108854 = " ";
var G__108855 = (function (){var G__108923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108924 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108923,G__108924) : tailrecursion.hoplon.span.call(null,G__108923,G__108924));
})();
var G__108856 = " ";
var G__108857 = (function (){var G__108925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108926 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108925,G__108926) : tailrecursion.hoplon.span.call(null,G__108925,G__108926));
})();
var G__108858 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__108797,G__108798,G__108799,G__108800,G__108801,G__108802,G__108803,G__108804,G__108805,G__108806,G__108807,G__108808,G__108809,G__108810,G__108811,G__108812,G__108813,G__108814,G__108815,G__108816,G__108817,G__108818,G__108819,G__108820,G__108821,G__108822,G__108823,G__108824,G__108825,G__108826,G__108827,G__108828,G__108829,G__108830,G__108831,G__108832,G__108833,G__108834,G__108835,G__108836,G__108837,G__108838,G__108839,G__108840,G__108841,G__108842,G__108843,G__108844,G__108845,G__108846,G__108847,G__108848,G__108849,G__108850,G__108851,G__108852,G__108853,G__108854,G__108855,G__108856,G__108857,G__108858) : tailrecursion.hoplon.pre.call(null,G__108797,G__108798,G__108799,G__108800,G__108801,G__108802,G__108803,G__108804,G__108805,G__108806,G__108807,G__108808,G__108809,G__108810,G__108811,G__108812,G__108813,G__108814,G__108815,G__108816,G__108817,G__108818,G__108819,G__108820,G__108821,G__108822,G__108823,G__108824,G__108825,G__108826,G__108827,G__108828,G__108829,G__108830,G__108831,G__108832,G__108833,G__108834,G__108835,G__108836,G__108837,G__108838,G__108839,G__108840,G__108841,G__108842,G__108843,G__108844,G__108845,G__108846,G__108847,G__108848,G__108849,G__108850,G__108851,G__108852,G__108853,G__108854,G__108855,G__108856,G__108857,G__108858));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108795,G__108796) : tailrecursion.hoplon.div.call(null,G__108795,G__108796));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108794) : tailrecursion.hoplon.div.call(null,G__108794));
})(),(function (){var G__108927 = cljs.core.PersistentArrayMap.EMPTY;
var G__108928 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can refomulate ",(function (){var G__108929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__108930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108929,G__108930) : tailrecursion.hoplon.markdown.code_node.call(null,G__108929,G__108930));
})()," and ",(function (){var G__108931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__108932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108931,G__108932) : tailrecursion.hoplon.markdown.code_node.call(null,G__108931,G__108932));
})()," as in the signal-flow diagrams. For ",(function (){var G__108933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__108934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108933,G__108934) : tailrecursion.hoplon.markdown.code_node.call(null,G__108933,G__108934));
})(),", we enumerate teh sequence of leaves of the tree, filter this to keep only the odd numbers in the sequence, square each element, and sum the results:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108927,G__108928) : tailrecursion.hoplon.markdown.para_node.call(null,G__108927,G__108928));
})(),(function (){var G__108935 = (function (){var G__108936 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108937 = (function (){var G__108938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108939 = "(";
var G__108940 = (function (){var G__108961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108962 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108961,G__108962) : tailrecursion.hoplon.span.call(null,G__108961,G__108962));
})();
var G__108941 = (function (){var G__108963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108964 = "summ-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108963,G__108964) : tailrecursion.hoplon.span.call(null,G__108963,G__108964));
})();
var G__108942 = " [";
var G__108943 = (function (){var G__108965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108966 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108965,G__108966) : tailrecursion.hoplon.span.call(null,G__108965,G__108966));
})();
var G__108944 = "]\n  (";
var G__108945 = (function (){var G__108967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108968 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108967,G__108968) : tailrecursion.hoplon.span.call(null,G__108967,G__108968));
})();
var G__108946 = " ";
var G__108947 = (function (){var G__108969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108970 = "+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108969,G__108970) : tailrecursion.hoplon.span.call(null,G__108969,G__108970));
})();
var G__108948 = "\n              ";
var G__108949 = (function (){var G__108971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108972 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108971,G__108972) : tailrecursion.hoplon.span.call(null,G__108971,G__108972));
})();
var G__108950 = "\n              (";
var G__108951 = (function (){var G__108973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108974 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108973,G__108974) : tailrecursion.hoplon.span.call(null,G__108973,G__108974));
})();
var G__108952 = (function (){var G__108975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108976 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108975,G__108976) : tailrecursion.hoplon.span.call(null,G__108975,G__108976));
})();
var G__108953 = "\n                   (";
var G__108954 = (function (){var G__108977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108978 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108977,G__108978) : tailrecursion.hoplon.span.call(null,G__108977,G__108978));
})();
var G__108955 = (function (){var G__108979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108980 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108979,G__108980) : tailrecursion.hoplon.span.call(null,G__108979,G__108980));
})();
var G__108956 = "\n                           (";
var G__108957 = (function (){var G__108981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108982 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108981,G__108982) : tailrecursion.hoplon.span.call(null,G__108981,G__108982));
})();
var G__108958 = " ";
var G__108959 = (function (){var G__108983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108984 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108983,G__108984) : tailrecursion.hoplon.span.call(null,G__108983,G__108984));
})();
var G__108960 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__108938,G__108939,G__108940,G__108941,G__108942,G__108943,G__108944,G__108945,G__108946,G__108947,G__108948,G__108949,G__108950,G__108951,G__108952,G__108953,G__108954,G__108955,G__108956,G__108957,G__108958,G__108959,G__108960) : tailrecursion.hoplon.pre.call(null,G__108938,G__108939,G__108940,G__108941,G__108942,G__108943,G__108944,G__108945,G__108946,G__108947,G__108948,G__108949,G__108950,G__108951,G__108952,G__108953,G__108954,G__108955,G__108956,G__108957,G__108958,G__108959,G__108960));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108936,G__108937) : tailrecursion.hoplon.div.call(null,G__108936,G__108937));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108935) : tailrecursion.hoplon.div.call(null,G__108935));
})(),(function (){var G__108985 = cljs.core.PersistentArrayMap.EMPTY;
var G__108986 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For ",(function (){var G__108987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__108988 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108987,G__108988) : tailrecursion.hoplon.markdown.code_node.call(null,G__108987,G__108988));
})(),", we enumerate the integers from 0 to \\(n\\), generate the Fibonacci number for each of these integers, filter the resulting sequence to keep only the even elements, and accumulate the results into a list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108985,G__108986) : tailrecursion.hoplon.markdown.para_node.call(null,G__108985,G__108986));
})(),(function (){var G__108989 = (function (){var G__108990 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108991 = (function (){var G__108992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108993 = "(";
var G__108994 = (function (){var G__109014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109015 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109014,G__109015) : tailrecursion.hoplon.span.call(null,G__109014,G__109015));
})();
var G__108995 = (function (){var G__109016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109017 = "even-fibs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109016,G__109017) : tailrecursion.hoplon.span.call(null,G__109016,G__109017));
})();
var G__108996 = " [";
var G__108997 = (function (){var G__109018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109019 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109018,G__109019) : tailrecursion.hoplon.span.call(null,G__109018,G__109019));
})();
var G__108998 = "]\n  (";
var G__108999 = (function (){var G__109020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109021 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109020,G__109021) : tailrecursion.hoplon.span.call(null,G__109020,G__109021));
})();
var G__109000 = " ";
var G__109001 = (function (){var G__109022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109023 = "cons";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109022,G__109023) : tailrecursion.hoplon.span.call(null,G__109022,G__109023));
})();
var G__109002 = "\n              ";
var G__109003 = (function (){var G__109024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109025 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109024,G__109025) : tailrecursion.hoplon.span.call(null,G__109024,G__109025));
})();
var G__109004 = "\n              (";
var G__109005 = (function (){var G__109026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109027 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109026,G__109027) : tailrecursion.hoplon.span.call(null,G__109026,G__109027));
})();
var G__109006 = (function (){var G__109028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109029 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109028,G__109029) : tailrecursion.hoplon.span.call(null,G__109028,G__109029));
})();
var G__109007 = "\n                      (";
var G__109008 = (function (){var G__109030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109031 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109030,G__109031) : tailrecursion.hoplon.span.call(null,G__109030,G__109031));
})();
var G__109009 = (function (){var G__109032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109033 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109032,G__109033) : tailrecursion.hoplon.span.call(null,G__109032,G__109033));
})();
var G__109010 = "\n                           (";
var G__109011 = (function (){var G__109034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109035 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109034,G__109035) : tailrecursion.hoplon.span.call(null,G__109034,G__109035));
})();
var G__109012 = (function (){var G__109036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109037 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109036,G__109037) : tailrecursion.hoplon.span.call(null,G__109036,G__109037));
})();
var G__109013 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__108992,G__108993,G__108994,G__108995,G__108996,G__108997,G__108998,G__108999,G__109000,G__109001,G__109002,G__109003,G__109004,G__109005,G__109006,G__109007,G__109008,G__109009,G__109010,G__109011,G__109012,G__109013) : tailrecursion.hoplon.pre.call(null,G__108992,G__108993,G__108994,G__108995,G__108996,G__108997,G__108998,G__108999,G__109000,G__109001,G__109002,G__109003,G__109004,G__109005,G__109006,G__109007,G__109008,G__109009,G__109010,G__109011,G__109012,G__109013));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108990,G__108991) : tailrecursion.hoplon.div.call(null,G__108990,G__108991));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108989) : tailrecursion.hoplon.div.call(null,G__108989));
})(),(function (){var G__109038 = cljs.core.PersistentArrayMap.EMPTY;
var G__109039 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The value of expressing programs as sequence operations is that this helps us make program designs that are modular, that is, designs that are constructed by combining relatively independent pieces. We can encourage modular design by providing a library of standard components together with a conventional interface for connecting the components in flexible ways."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109038,G__109039) : tailrecursion.hoplon.markdown.para_node.call(null,G__109038,G__109039));
})(),(function (){var G__109040 = cljs.core.PersistentArrayMap.EMPTY;
var G__109041 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modular construction is a powerful strategy for controlling complexity in engineering design. In real signal-processing applications, for example, designers regularly build systems by cascading elements selected from standard program elements that we can mix and match. For instance, we can reuse pieces from the ",(function (){var G__109042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__109043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109042,G__109043) : tailrecursion.hoplon.markdown.code_node.call(null,G__109042,G__109043));
})()," and ",(function (){var G__109044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__109045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109044,G__109045) : tailrecursion.hoplon.markdown.code_node.call(null,G__109044,G__109045));
})()," procedures in a program that constructs a list of the squares of the first \\(n+1\\) Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109040,G__109041) : tailrecursion.hoplon.markdown.para_node.call(null,G__109040,G__109041));
})(),(function (){var G__109046 = (function (){var G__109047 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109048 = (function (){var G__109049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109050 = "(";
var G__109051 = (function (){var G__109097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109098 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109097,G__109098) : tailrecursion.hoplon.span.call(null,G__109097,G__109098));
})();
var G__109052 = (function (){var G__109099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109100 = "list-fib-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109099,G__109100) : tailrecursion.hoplon.span.call(null,G__109099,G__109100));
})();
var G__109053 = " [";
var G__109054 = (function (){var G__109101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109102 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109101,G__109102) : tailrecursion.hoplon.span.call(null,G__109101,G__109102));
})();
var G__109055 = "]\n  (";
var G__109056 = (function (){var G__109103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109104 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109103,G__109104) : tailrecursion.hoplon.span.call(null,G__109103,G__109104));
})();
var G__109057 = " ";
var G__109058 = (function (){var G__109105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109106 = "cons";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109105,G__109106) : tailrecursion.hoplon.span.call(null,G__109105,G__109106));
})();
var G__109059 = "\n              ";
var G__109060 = (function (){var G__109107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109108 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109107,G__109108) : tailrecursion.hoplon.span.call(null,G__109107,G__109108));
})();
var G__109061 = "\n              (";
var G__109062 = (function (){var G__109109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109110 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109109,G__109110) : tailrecursion.hoplon.span.call(null,G__109109,G__109110));
})();
var G__109063 = (function (){var G__109111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109112 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109111,G__109112) : tailrecursion.hoplon.span.call(null,G__109111,G__109112));
})();
var G__109064 = "\n                   (";
var G__109065 = (function (){var G__109113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109114 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109113,G__109114) : tailrecursion.hoplon.span.call(null,G__109113,G__109114));
})();
var G__109066 = (function (){var G__109115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109116 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109115,G__109116) : tailrecursion.hoplon.span.call(null,G__109115,G__109116));
})();
var G__109067 = "\n                        (";
var G__109068 = (function (){var G__109117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109118 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109117,G__109118) : tailrecursion.hoplon.span.call(null,G__109117,G__109118));
})();
var G__109069 = (function (){var G__109119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109120 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109119,G__109120) : tailrecursion.hoplon.span.call(null,G__109119,G__109120));
})();
var G__109070 = ")))))\n(";
var G__109071 = (function (){var G__109121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109122 = "list-fib-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109121,G__109122) : tailrecursion.hoplon.span.call(null,G__109121,G__109122));
})();
var G__109072 = " ";
var G__109073 = (function (){var G__109123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109124 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109123,G__109124) : tailrecursion.hoplon.span.call(null,G__109123,G__109124));
})();
var G__109074 = ")\n(";
var G__109075 = (function (){var G__109125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109126 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109125,G__109126) : tailrecursion.hoplon.span.call(null,G__109125,G__109126));
})();
var G__109076 = " ";
var G__109077 = (function (){var G__109127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109128 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109127,G__109128) : tailrecursion.hoplon.span.call(null,G__109127,G__109128));
})();
var G__109078 = " ";
var G__109079 = (function (){var G__109129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109130 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109129,G__109130) : tailrecursion.hoplon.span.call(null,G__109129,G__109130));
})();
var G__109080 = " ";
var G__109081 = (function (){var G__109131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109132 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109131,G__109132) : tailrecursion.hoplon.span.call(null,G__109131,G__109132));
})();
var G__109082 = " ";
var G__109083 = (function (){var G__109133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109134 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109133,G__109134) : tailrecursion.hoplon.span.call(null,G__109133,G__109134));
})();
var G__109084 = " ";
var G__109085 = (function (){var G__109135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109136 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109135,G__109136) : tailrecursion.hoplon.span.call(null,G__109135,G__109136));
})();
var G__109086 = " ";
var G__109087 = (function (){var G__109137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109138 = "64";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109137,G__109138) : tailrecursion.hoplon.span.call(null,G__109137,G__109138));
})();
var G__109088 = " ";
var G__109089 = (function (){var G__109139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109140 = "169";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109139,G__109140) : tailrecursion.hoplon.span.call(null,G__109139,G__109140));
})();
var G__109090 = " ";
var G__109091 = (function (){var G__109141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109142 = "441";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109141,G__109142) : tailrecursion.hoplon.span.call(null,G__109141,G__109142));
})();
var G__109092 = " ";
var G__109093 = (function (){var G__109143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109144 = "1156";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109143,G__109144) : tailrecursion.hoplon.span.call(null,G__109143,G__109144));
})();
var G__109094 = " ";
var G__109095 = (function (){var G__109145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109146 = "3025";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109145,G__109146) : tailrecursion.hoplon.span.call(null,G__109145,G__109146));
})();
var G__109096 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__109049,G__109050,G__109051,G__109052,G__109053,G__109054,G__109055,G__109056,G__109057,G__109058,G__109059,G__109060,G__109061,G__109062,G__109063,G__109064,G__109065,G__109066,G__109067,G__109068,G__109069,G__109070,G__109071,G__109072,G__109073,G__109074,G__109075,G__109076,G__109077,G__109078,G__109079,G__109080,G__109081,G__109082,G__109083,G__109084,G__109085,G__109086,G__109087,G__109088,G__109089,G__109090,G__109091,G__109092,G__109093,G__109094,G__109095,G__109096) : tailrecursion.hoplon.pre.call(null,G__109049,G__109050,G__109051,G__109052,G__109053,G__109054,G__109055,G__109056,G__109057,G__109058,G__109059,G__109060,G__109061,G__109062,G__109063,G__109064,G__109065,G__109066,G__109067,G__109068,G__109069,G__109070,G__109071,G__109072,G__109073,G__109074,G__109075,G__109076,G__109077,G__109078,G__109079,G__109080,G__109081,G__109082,G__109083,G__109084,G__109085,G__109086,G__109087,G__109088,G__109089,G__109090,G__109091,G__109092,G__109093,G__109094,G__109095,G__109096));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109047,G__109048) : tailrecursion.hoplon.div.call(null,G__109047,G__109048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109046) : tailrecursion.hoplon.div.call(null,G__109046));
})(),(function (){var G__109147 = cljs.core.PersistentArrayMap.EMPTY;
var G__109148 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can rearrange the pieces and use them in computing the product of the odd integers in a sequence:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109147,G__109148) : tailrecursion.hoplon.markdown.para_node.call(null,G__109147,G__109148));
})(),(function (){var G__109149 = (function (){var G__109150 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109151 = (function (){var G__109152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109153 = "(";
var G__109154 = (function (){var G__109188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109189 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109188,G__109189) : tailrecursion.hoplon.span.call(null,G__109188,G__109189));
})();
var G__109155 = (function (){var G__109190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109191 = "product-of-squares-of-odd-elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109190,G__109191) : tailrecursion.hoplon.span.call(null,G__109190,G__109191));
})();
var G__109156 = " [";
var G__109157 = (function (){var G__109192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109193 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109192,G__109193) : tailrecursion.hoplon.span.call(null,G__109192,G__109193));
})();
var G__109158 = "]\n  (";
var G__109159 = (function (){var G__109194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109195 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109194,G__109195) : tailrecursion.hoplon.span.call(null,G__109194,G__109195));
})();
var G__109160 = " ";
var G__109161 = (function (){var G__109196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109197 = "*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109196,G__109197) : tailrecursion.hoplon.span.call(null,G__109196,G__109197));
})();
var G__109162 = "\n              ";
var G__109163 = (function (){var G__109198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109199 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109198,G__109199) : tailrecursion.hoplon.span.call(null,G__109198,G__109199));
})();
var G__109164 = "\n              (";
var G__109165 = (function (){var G__109200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109201 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109200,G__109201) : tailrecursion.hoplon.span.call(null,G__109200,G__109201));
})();
var G__109166 = (function (){var G__109202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109203 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109202,G__109203) : tailrecursion.hoplon.span.call(null,G__109202,G__109203));
})();
var G__109167 = "\n                (";
var G__109168 = (function (){var G__109204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109205 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109204,G__109205) : tailrecursion.hoplon.span.call(null,G__109204,G__109205));
})();
var G__109169 = (function (){var G__109206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109207 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109206,G__109207) : tailrecursion.hoplon.span.call(null,G__109206,G__109207));
})();
var G__109170 = " ";
var G__109171 = (function (){var G__109208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109209 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109208,G__109209) : tailrecursion.hoplon.span.call(null,G__109208,G__109209));
})();
var G__109172 = "))))\n(";
var G__109173 = (function (){var G__109210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109211 = "product-of-squares-of-odd-elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109210,G__109211) : tailrecursion.hoplon.span.call(null,G__109210,G__109211));
})();
var G__109174 = " (";
var G__109175 = (function (){var G__109212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109213 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109212,G__109213) : tailrecursion.hoplon.span.call(null,G__109212,G__109213));
})();
var G__109176 = (function (){var G__109214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109215 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109214,G__109215) : tailrecursion.hoplon.span.call(null,G__109214,G__109215));
})();
var G__109177 = " ";
var G__109178 = (function (){var G__109216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109217 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109216,G__109217) : tailrecursion.hoplon.span.call(null,G__109216,G__109217));
})();
var G__109179 = " ";
var G__109180 = (function (){var G__109218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109219 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109218,G__109219) : tailrecursion.hoplon.span.call(null,G__109218,G__109219));
})();
var G__109181 = " ";
var G__109182 = (function (){var G__109220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109221 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109220,G__109221) : tailrecursion.hoplon.span.call(null,G__109220,G__109221));
})();
var G__109183 = " ";
var G__109184 = (function (){var G__109222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109223 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109222,G__109223) : tailrecursion.hoplon.span.call(null,G__109222,G__109223));
})();
var G__109185 = "))\n";
var G__109186 = (function (){var G__109224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109225 = "225";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109224,G__109225) : tailrecursion.hoplon.span.call(null,G__109224,G__109225));
})();
var G__109187 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__109152,G__109153,G__109154,G__109155,G__109156,G__109157,G__109158,G__109159,G__109160,G__109161,G__109162,G__109163,G__109164,G__109165,G__109166,G__109167,G__109168,G__109169,G__109170,G__109171,G__109172,G__109173,G__109174,G__109175,G__109176,G__109177,G__109178,G__109179,G__109180,G__109181,G__109182,G__109183,G__109184,G__109185,G__109186,G__109187) : tailrecursion.hoplon.pre.call(null,G__109152,G__109153,G__109154,G__109155,G__109156,G__109157,G__109158,G__109159,G__109160,G__109161,G__109162,G__109163,G__109164,G__109165,G__109166,G__109167,G__109168,G__109169,G__109170,G__109171,G__109172,G__109173,G__109174,G__109175,G__109176,G__109177,G__109178,G__109179,G__109180,G__109181,G__109182,G__109183,G__109184,G__109185,G__109186,G__109187));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109150,G__109151) : tailrecursion.hoplon.div.call(null,G__109150,G__109151));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109149) : tailrecursion.hoplon.div.call(null,G__109149));
})(),(function (){var G__109226 = cljs.core.PersistentArrayMap.EMPTY;
var G__109227 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These examples give just a hint of the vast range of operations that can be expressed as sequence operations.",(function (){var G__109228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__109229 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Richard Waters (1979) developed a program that automatically analyzes traditional Fortran programs, viewing them in terms of maps, filters, and accumulations. He found that fully 90 percent of the code in the Fortran Scientific Subroutine Package fits neatly into this paradigm. One of the reasons for the success of Lisp as a programming language is that lists provide a standard medium for expressing ordered collections so that they can be manipulated using higher-order operations. The programming language APL owes much of its power and appeal to a similar choice. In APL all data are represented as arrays, and there is a universal and convenient set of generic operators for all sorts of array operations."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__109228,G__109229) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__109228,G__109229));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109226,G__109227) : tailrecursion.hoplon.markdown.para_node.call(null,G__109226,G__109227));
})(),(function (){var G__109230 = cljs.core.PersistentArrayMap.EMPTY;
var G__109231 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sequences, implemented here as lists, serve as a conventional interface that permits us to combine processing modules. Additionally, when we uniformly represent structures as sequences, we have localized the data-structure dependencies in our programs to a small number of sequences, while leaving the overall design of our programs intact. We will exploit this capability in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/3/sect/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 3.5"], null)], 0)),", when we generalize the sequence-processing paradigm to admit infinite sequences."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109230,G__109231) : tailrecursion.hoplon.markdown.para_node.call(null,G__109230,G__109231));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108190;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108189;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108188;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108187;
}})()], 0));
var G__101402 = "";
var G__101403 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109232 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109233 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109234 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109235 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109236 = cljs.core.PersistentArrayMap.EMPTY;
var G__109237 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fill in the missing expressions to complete the following definitions of some basic list-manipulation operations as accumulations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109236,G__109237) : tailrecursion.hoplon.markdown.para_node.call(null,G__109236,G__109237));
})(),(function (){var G__109238 = (function (){var G__109239 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109240 = (function (){var G__109241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109242 = "(";
var G__109243 = (function (){var G__109291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109292 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109291,G__109292) : tailrecursion.hoplon.span.call(null,G__109291,G__109292));
})();
var G__109244 = (function (){var G__109293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109294 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109293,G__109294) : tailrecursion.hoplon.span.call(null,G__109293,G__109294));
})();
var G__109245 = "[";
var G__109246 = (function (){var G__109295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109296 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109295,G__109296) : tailrecursion.hoplon.span.call(null,G__109295,G__109296));
})();
var G__109247 = " ";
var G__109248 = (function (){var G__109297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109298 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109297,G__109298) : tailrecursion.hoplon.span.call(null,G__109297,G__109298));
})();
var G__109249 = "]\n  (";
var G__109250 = (function (){var G__109299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109300 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109299,G__109300) : tailrecursion.hoplon.span.call(null,G__109299,G__109300));
})();
var G__109251 = " (";
var G__109252 = (function (){var G__109301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109302 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109301,G__109302) : tailrecursion.hoplon.span.call(null,G__109301,G__109302));
})();
var G__109253 = "[";
var G__109254 = (function (){var G__109303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109304 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109303,G__109304) : tailrecursion.hoplon.span.call(null,G__109303,G__109304));
})();
var G__109255 = " ";
var G__109256 = (function (){var G__109305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109306 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109305,G__109306) : tailrecursion.hoplon.span.call(null,G__109305,G__109306));
})();
var G__109257 = "] ";
var G__109258 = (function (){var G__109307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109308 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109307,G__109308) : tailrecursion.hoplon.span.call(null,G__109307,G__109308));
})();
var G__109259 = ") ";
var G__109260 = (function (){var G__109309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109310 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109309,G__109310) : tailrecursion.hoplon.span.call(null,G__109309,G__109310));
})();
var G__109261 = " ";
var G__109262 = (function (){var G__109311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109312 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109311,G__109312) : tailrecursion.hoplon.span.call(null,G__109311,G__109312));
})();
var G__109263 = "))\n\n(";
var G__109264 = (function (){var G__109313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109314 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109313,G__109314) : tailrecursion.hoplon.span.call(null,G__109313,G__109314));
})();
var G__109265 = (function (){var G__109315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109316 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109315,G__109316) : tailrecursion.hoplon.span.call(null,G__109315,G__109316));
})();
var G__109266 = "[";
var G__109267 = (function (){var G__109317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109318 = "items1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109317,G__109318) : tailrecursion.hoplon.span.call(null,G__109317,G__109318));
})();
var G__109268 = " ";
var G__109269 = (function (){var G__109319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109320 = "items2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109319,G__109320) : tailrecursion.hoplon.span.call(null,G__109319,G__109320));
})();
var G__109270 = "]\n  (";
var G__109271 = (function (){var G__109321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109322 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109321,G__109322) : tailrecursion.hoplon.span.call(null,G__109321,G__109322));
})();
var G__109272 = " ";
var G__109273 = (function (){var G__109323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109324 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109323,G__109324) : tailrecursion.hoplon.span.call(null,G__109323,G__109324));
})();
var G__109274 = (function (){var G__109325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109326 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109325,G__109326) : tailrecursion.hoplon.span.call(null,G__109325,G__109326));
})();
var G__109275 = " ";
var G__109276 = (function (){var G__109327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109328 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109327,G__109328) : tailrecursion.hoplon.span.call(null,G__109327,G__109328));
})();
var G__109277 = "))\n\n(";
var G__109278 = (function (){var G__109329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109330 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109329,G__109330) : tailrecursion.hoplon.span.call(null,G__109329,G__109330));
})();
var G__109279 = (function (){var G__109331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109332 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109331,G__109332) : tailrecursion.hoplon.span.call(null,G__109331,G__109332));
})();
var G__109280 = "[";
var G__109281 = (function (){var G__109333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109334 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109333,G__109334) : tailrecursion.hoplon.span.call(null,G__109333,G__109334));
})();
var G__109282 = "]\n  (";
var G__109283 = (function (){var G__109335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109336 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109335,G__109336) : tailrecursion.hoplon.span.call(null,G__109335,G__109336));
})();
var G__109284 = " ";
var G__109285 = (function (){var G__109337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109338 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109337,G__109338) : tailrecursion.hoplon.span.call(null,G__109337,G__109338));
})();
var G__109286 = " ";
var G__109287 = (function (){var G__109339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109340 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109339,G__109340) : tailrecursion.hoplon.span.call(null,G__109339,G__109340));
})();
var G__109288 = " ";
var G__109289 = (function (){var G__109341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109342 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109341,G__109342) : tailrecursion.hoplon.span.call(null,G__109341,G__109342));
})();
var G__109290 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50(G__109241,G__109242,G__109243,G__109244,G__109245,G__109246,G__109247,G__109248,G__109249,G__109250,G__109251,G__109252,G__109253,G__109254,G__109255,G__109256,G__109257,G__109258,G__109259,G__109260,G__109261,G__109262,G__109263,G__109264,G__109265,G__109266,G__109267,G__109268,G__109269,G__109270,G__109271,G__109272,G__109273,G__109274,G__109275,G__109276,G__109277,G__109278,G__109279,G__109280,G__109281,G__109282,G__109283,G__109284,G__109285,G__109286,G__109287,G__109288,G__109289,G__109290) : tailrecursion.hoplon.pre.call(null,G__109241,G__109242,G__109243,G__109244,G__109245,G__109246,G__109247,G__109248,G__109249,G__109250,G__109251,G__109252,G__109253,G__109254,G__109255,G__109256,G__109257,G__109258,G__109259,G__109260,G__109261,G__109262,G__109263,G__109264,G__109265,G__109266,G__109267,G__109268,G__109269,G__109270,G__109271,G__109272,G__109273,G__109274,G__109275,G__109276,G__109277,G__109278,G__109279,G__109280,G__109281,G__109282,G__109283,G__109284,G__109285,G__109286,G__109287,G__109288,G__109289,G__109290));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109239,G__109240) : tailrecursion.hoplon.div.call(null,G__109239,G__109240));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109238) : tailrecursion.hoplon.div.call(null,G__109238));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109235;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109234;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109233;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109232;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109343 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109344 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109345 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109346 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109347 = (function (){var G__109348 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109349 = (function (){var G__109350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109351 = "(";
var G__109352 = (function (){var G__109413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109414 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109413,G__109414) : tailrecursion.hoplon.span.call(null,G__109413,G__109414));
})();
var G__109353 = (function (){var G__109415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109416 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109415,G__109416) : tailrecursion.hoplon.span.call(null,G__109415,G__109416));
})();
var G__109354 = "[";
var G__109355 = (function (){var G__109417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109418 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109417,G__109418) : tailrecursion.hoplon.span.call(null,G__109417,G__109418));
})();
var G__109356 = " ";
var G__109357 = (function (){var G__109419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109420 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109419,G__109420) : tailrecursion.hoplon.span.call(null,G__109419,G__109420));
})();
var G__109358 = "]\n  (";
var G__109359 = (function (){var G__109421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109422 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109421,G__109422) : tailrecursion.hoplon.span.call(null,G__109421,G__109422));
})();
var G__109360 = " (";
var G__109361 = (function (){var G__109423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109424 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109423,G__109424) : tailrecursion.hoplon.span.call(null,G__109423,G__109424));
})();
var G__109362 = "[";
var G__109363 = (function (){var G__109425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109426 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109425,G__109426) : tailrecursion.hoplon.span.call(null,G__109425,G__109426));
})();
var G__109364 = " ";
var G__109365 = (function (){var G__109427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109428 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109427,G__109428) : tailrecursion.hoplon.span.call(null,G__109427,G__109428));
})();
var G__109366 = "] (";
var G__109367 = (function (){var G__109429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109430 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109429,G__109430) : tailrecursion.hoplon.span.call(null,G__109429,G__109430));
})();
var G__109368 = " ";
var G__109369 = (function (){var G__109431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109432 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109431,G__109432) : tailrecursion.hoplon.span.call(null,G__109431,G__109432));
})();
var G__109370 = ")) ";
var G__109371 = (function (){var G__109433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109434 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109433,G__109434) : tailrecursion.hoplon.span.call(null,G__109433,G__109434));
})();
var G__109372 = " ";
var G__109373 = (function (){var G__109435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109436 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109435,G__109436) : tailrecursion.hoplon.span.call(null,G__109435,G__109436));
})();
var G__109374 = "))\n\n(";
var G__109375 = (function (){var G__109437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109438 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109437,G__109438) : tailrecursion.hoplon.span.call(null,G__109437,G__109438));
})();
var G__109376 = (function (){var G__109439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109440 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109439,G__109440) : tailrecursion.hoplon.span.call(null,G__109439,G__109440));
})();
var G__109377 = "[";
var G__109378 = (function (){var G__109441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109442 = "items1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109441,G__109442) : tailrecursion.hoplon.span.call(null,G__109441,G__109442));
})();
var G__109379 = " ";
var G__109380 = (function (){var G__109443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109444 = "items2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109443,G__109444) : tailrecursion.hoplon.span.call(null,G__109443,G__109444));
})();
var G__109381 = "]\n  (";
var G__109382 = (function (){var G__109445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109446 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109445,G__109446) : tailrecursion.hoplon.span.call(null,G__109445,G__109446));
})();
var G__109383 = " ";
var G__109384 = (function (){var G__109447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109448 = "cons";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109447,G__109448) : tailrecursion.hoplon.span.call(null,G__109447,G__109448));
})();
var G__109385 = "\n              ";
var G__109386 = (function (){var G__109449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109450 = "items2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109449,G__109450) : tailrecursion.hoplon.span.call(null,G__109449,G__109450));
})();
var G__109387 = "\n              (";
var G__109388 = (function (){var G__109451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109452 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109451,G__109452) : tailrecursion.hoplon.span.call(null,G__109451,G__109452));
})();
var G__109389 = (function (){var G__109453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109454 = "items1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109453,G__109454) : tailrecursion.hoplon.span.call(null,G__109453,G__109454));
})();
var G__109390 = ")))\n\n(";
var G__109391 = (function (){var G__109455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109456 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109455,G__109456) : tailrecursion.hoplon.span.call(null,G__109455,G__109456));
})();
var G__109392 = (function (){var G__109457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109458 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109457,G__109458) : tailrecursion.hoplon.span.call(null,G__109457,G__109458));
})();
var G__109393 = "[";
var G__109394 = (function (){var G__109459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109460 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109459,G__109460) : tailrecursion.hoplon.span.call(null,G__109459,G__109460));
})();
var G__109395 = "]\n  (";
var G__109396 = (function (){var G__109461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109462 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109461,G__109462) : tailrecursion.hoplon.span.call(null,G__109461,G__109462));
})();
var G__109397 = " (";
var G__109398 = (function (){var G__109463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109464 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109463,G__109464) : tailrecursion.hoplon.span.call(null,G__109463,G__109464));
})();
var G__109399 = "[";
var G__109400 = (function (){var G__109465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109466 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109465,G__109466) : tailrecursion.hoplon.span.call(null,G__109465,G__109466));
})();
var G__109401 = " ";
var G__109402 = (function (){var G__109467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109468 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109467,G__109468) : tailrecursion.hoplon.span.call(null,G__109467,G__109468));
})();
var G__109403 = "] (";
var G__109404 = (function (){var G__109469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109470 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109469,G__109470) : tailrecursion.hoplon.span.call(null,G__109469,G__109470));
})();
var G__109405 = (function (){var G__109471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109472 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109471,G__109472) : tailrecursion.hoplon.span.call(null,G__109471,G__109472));
})();
var G__109406 = " ";
var G__109407 = (function (){var G__109473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109474 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109473,G__109474) : tailrecursion.hoplon.span.call(null,G__109473,G__109474));
})();
var G__109408 = ") ";
var G__109409 = (function (){var G__109475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109476 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109475,G__109476) : tailrecursion.hoplon.span.call(null,G__109475,G__109476));
})();
var G__109410 = " ";
var G__109411 = (function (){var G__109477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109478 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109477,G__109478) : tailrecursion.hoplon.span.call(null,G__109477,G__109478));
})();
var G__109412 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__109350,G__109351,G__109352,G__109353,G__109354,G__109355,G__109356,G__109357,G__109358,G__109359,G__109360,G__109361,G__109362,G__109363,G__109364,G__109365,G__109366,G__109367,G__109368,G__109369,G__109370,G__109371,G__109372,G__109373,G__109374,G__109375,G__109376,G__109377,G__109378,G__109379,G__109380,G__109381,G__109382,G__109383,G__109384,G__109385,G__109386,G__109387,G__109388,G__109389,G__109390,G__109391,G__109392,G__109393,G__109394,G__109395,G__109396,G__109397,G__109398,G__109399,G__109400,G__109401,G__109402,G__109403,G__109404,G__109405,G__109406,G__109407,G__109408,G__109409,G__109410,G__109411,G__109412) : tailrecursion.hoplon.pre.call(null,G__109350,G__109351,G__109352,G__109353,G__109354,G__109355,G__109356,G__109357,G__109358,G__109359,G__109360,G__109361,G__109362,G__109363,G__109364,G__109365,G__109366,G__109367,G__109368,G__109369,G__109370,G__109371,G__109372,G__109373,G__109374,G__109375,G__109376,G__109377,G__109378,G__109379,G__109380,G__109381,G__109382,G__109383,G__109384,G__109385,G__109386,G__109387,G__109388,G__109389,G__109390,G__109391,G__109392,G__109393,G__109394,G__109395,G__109396,G__109397,G__109398,G__109399,G__109400,G__109401,G__109402,G__109403,G__109404,G__109405,G__109406,G__109407,G__109408,G__109409,G__109410,G__109411,G__109412));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109348,G__109349) : tailrecursion.hoplon.div.call(null,G__109348,G__109349));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109347) : tailrecursion.hoplon.div.call(null,G__109347));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109346;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109345;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109344;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109343;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109479 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109480 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109481 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109482 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109483 = cljs.core.PersistentArrayMap.EMPTY;
var G__109484 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Evaluating a polynomial in \\(x\\) at a given value of \\(x\\) can be formulated as an accumulation. We evaluate the polynomial"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109483,G__109484) : tailrecursion.hoplon.markdown.para_node.call(null,G__109483,G__109484));
})(),(function (){var G__109485 = cljs.core.PersistentArrayMap.EMPTY;
var G__109486 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a_nx^n+a_{n-1}x^{n-1}+",(function (){var G__109487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__109488 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109487,G__109488) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109487,G__109488));
})(),"+a_1x+a_0$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109485,G__109486) : tailrecursion.hoplon.markdown.para_node.call(null,G__109485,G__109486));
})(),(function (){var G__109489 = cljs.core.PersistentArrayMap.EMPTY;
var G__109490 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["using a well-known algorithm called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Horner",(function (){var G__109491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__109492 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109491,G__109492) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109491,G__109492));
})(),"s rule"], null)], 0)),", which structures the computation as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109489,G__109490) : tailrecursion.hoplon.markdown.para_node.call(null,G__109489,G__109490));
})(),(function (){var G__109493 = cljs.core.PersistentArrayMap.EMPTY;
var G__109494 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(",(function (){var G__109495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__109496 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109495,G__109496) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109495,G__109496));
})(),"(a_n x+a_{n-1}) x+",(function (){var G__109497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__109498 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109497,G__109498) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109497,G__109498));
})(),"+a_1)x+a_0 $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109493,G__109494) : tailrecursion.hoplon.markdown.para_node.call(null,G__109493,G__109494));
})(),(function (){var G__109499 = cljs.core.PersistentArrayMap.EMPTY;
var G__109500 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In other words, we start with \\(a_n\\), multiply by \\(x\\), add \\(a_{n-1}\\), multiply by \\(x\\), and so on, until we reach \\(a_0\\).",(function (){var G__109501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__109502 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["According to Knuth (1981), this rule was formulated by W. G. Horner early in the nineteenth century, but the method was actually used by Newton over a hundred years earlier. Horner's rule evaluates the polynomial using fewer additions and multiplications than does the straightforward method of first computing an \\(x_n\\), then adding \\(a_{n-1}x_{n-1}\\), and so on. In fact, it is possible to prove that any algorithm for evaluating arbitrary polynomials must use at least as many additions and multiplications as does Horner",(function (){var G__109503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__109504 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109503,G__109504) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109503,G__109504));
})(),"s rule, and thus Horner",(function (){var G__109505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__109506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109505,G__109506) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109505,G__109506));
})(),"s rule is an optimal algorithm for polynomial evaluation. This was proved (for the number of additions) by A. M. Ostrowski in a 1954 paper that essentially founded the modern study of optimal algorithms. The analogous statement for multiplications was proved by V. Y. Pan in 1966. The book by Borodin and Munro (1975) provides an overview of these and other results about optimal algorithms."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__109501,G__109502) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__109501,G__109502));
})()," Fill in the following template to produce a procedure that evaluates a polynomial using Horner",(function (){var G__109507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__109508 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109507,G__109508) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109507,G__109508));
})(),"s rule. Assume that the coefficients of the polynomial are arranged in a sequence, from \\(a_0\\) through \\(a_n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109499,G__109500) : tailrecursion.hoplon.markdown.para_node.call(null,G__109499,G__109500));
})(),(function (){var G__109509 = (function (){var G__109510 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109511 = (function (){var G__109512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109513 = "(";
var G__109514 = (function (){var G__109535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109536 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109535,G__109536) : tailrecursion.hoplon.span.call(null,G__109535,G__109536));
})();
var G__109515 = (function (){var G__109537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109538 = "horner-eval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109537,G__109538) : tailrecursion.hoplon.span.call(null,G__109537,G__109538));
})();
var G__109516 = " [";
var G__109517 = (function (){var G__109539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109540 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109539,G__109540) : tailrecursion.hoplon.span.call(null,G__109539,G__109540));
})();
var G__109518 = " ";
var G__109519 = (function (){var G__109541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109542 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109541,G__109542) : tailrecursion.hoplon.span.call(null,G__109541,G__109542));
})();
var G__109520 = "]\n  (";
var G__109521 = (function (){var G__109543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109544 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109543,G__109544) : tailrecursion.hoplon.span.call(null,G__109543,G__109544));
})();
var G__109522 = " (";
var G__109523 = (function (){var G__109545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109546 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109545,G__109546) : tailrecursion.hoplon.span.call(null,G__109545,G__109546));
})();
var G__109524 = "[";
var G__109525 = (function (){var G__109547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109548 = "this-coeff";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109547,G__109548) : tailrecursion.hoplon.span.call(null,G__109547,G__109548));
})();
var G__109526 = " ";
var G__109527 = (function (){var G__109549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109550 = "higher-terms";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109549,G__109550) : tailrecursion.hoplon.span.call(null,G__109549,G__109550));
})();
var G__109528 = "] ";
var G__109529 = (function (){var G__109551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109552 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109551,G__109552) : tailrecursion.hoplon.span.call(null,G__109551,G__109552));
})();
var G__109530 = ")\n              ";
var G__109531 = (function (){var G__109553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109554 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109553,G__109554) : tailrecursion.hoplon.span.call(null,G__109553,G__109554));
})();
var G__109532 = "\n              ";
var G__109533 = (function (){var G__109555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109556 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109555,G__109556) : tailrecursion.hoplon.span.call(null,G__109555,G__109556));
})();
var G__109534 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__109512,G__109513,G__109514,G__109515,G__109516,G__109517,G__109518,G__109519,G__109520,G__109521,G__109522,G__109523,G__109524,G__109525,G__109526,G__109527,G__109528,G__109529,G__109530,G__109531,G__109532,G__109533,G__109534) : tailrecursion.hoplon.pre.call(null,G__109512,G__109513,G__109514,G__109515,G__109516,G__109517,G__109518,G__109519,G__109520,G__109521,G__109522,G__109523,G__109524,G__109525,G__109526,G__109527,G__109528,G__109529,G__109530,G__109531,G__109532,G__109533,G__109534));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109510,G__109511) : tailrecursion.hoplon.div.call(null,G__109510,G__109511));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109509) : tailrecursion.hoplon.div.call(null,G__109509));
})(),(function (){var G__109557 = cljs.core.PersistentArrayMap.EMPTY;
var G__109558 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, to compute \\(1+3x+5x^3+s^5\\) at \\(x=2\\) you would evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109557,G__109558) : tailrecursion.hoplon.markdown.para_node.call(null,G__109557,G__109558));
})(),(function (){var G__109559 = (function (){var G__109560 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109561 = (function (){var G__109562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109563 = "(";
var G__109564 = (function (){var G__109581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109582 = "horner-eval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109581,G__109582) : tailrecursion.hoplon.span.call(null,G__109581,G__109582));
})();
var G__109565 = " ";
var G__109566 = (function (){var G__109583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109584 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109583,G__109584) : tailrecursion.hoplon.span.call(null,G__109583,G__109584));
})();
var G__109567 = " (";
var G__109568 = (function (){var G__109585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109586 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109585,G__109586) : tailrecursion.hoplon.span.call(null,G__109585,G__109586));
})();
var G__109569 = (function (){var G__109587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109588 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109587,G__109588) : tailrecursion.hoplon.span.call(null,G__109587,G__109588));
})();
var G__109570 = " ";
var G__109571 = (function (){var G__109589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109590 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109589,G__109590) : tailrecursion.hoplon.span.call(null,G__109589,G__109590));
})();
var G__109572 = " ";
var G__109573 = (function (){var G__109591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109592 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109591,G__109592) : tailrecursion.hoplon.span.call(null,G__109591,G__109592));
})();
var G__109574 = " ";
var G__109575 = (function (){var G__109593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109594 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109593,G__109594) : tailrecursion.hoplon.span.call(null,G__109593,G__109594));
})();
var G__109576 = " ";
var G__109577 = (function (){var G__109595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109596 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109595,G__109596) : tailrecursion.hoplon.span.call(null,G__109595,G__109596));
})();
var G__109578 = " ";
var G__109579 = (function (){var G__109597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109598 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109597,G__109598) : tailrecursion.hoplon.span.call(null,G__109597,G__109598));
})();
var G__109580 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__109562,G__109563,G__109564,G__109565,G__109566,G__109567,G__109568,G__109569,G__109570,G__109571,G__109572,G__109573,G__109574,G__109575,G__109576,G__109577,G__109578,G__109579,G__109580) : tailrecursion.hoplon.pre.call(null,G__109562,G__109563,G__109564,G__109565,G__109566,G__109567,G__109568,G__109569,G__109570,G__109571,G__109572,G__109573,G__109574,G__109575,G__109576,G__109577,G__109578,G__109579,G__109580));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109560,G__109561) : tailrecursion.hoplon.div.call(null,G__109560,G__109561));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109559) : tailrecursion.hoplon.div.call(null,G__109559));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109482;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109481;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109480;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109479;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109599 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109600 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109601 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109602 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109603 = (function (){var G__109604 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109605 = (function (){var G__109606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109607 = "(";
var G__109608 = (function (){var G__109635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109636 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109635,G__109636) : tailrecursion.hoplon.span.call(null,G__109635,G__109636));
})();
var G__109609 = (function (){var G__109637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109638 = "horner-eval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109637,G__109638) : tailrecursion.hoplon.span.call(null,G__109637,G__109638));
})();
var G__109610 = " [";
var G__109611 = (function (){var G__109639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109640 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109639,G__109640) : tailrecursion.hoplon.span.call(null,G__109639,G__109640));
})();
var G__109612 = " ";
var G__109613 = (function (){var G__109641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109642 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109641,G__109642) : tailrecursion.hoplon.span.call(null,G__109641,G__109642));
})();
var G__109614 = "]\n  (";
var G__109615 = (function (){var G__109643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109644 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109643,G__109644) : tailrecursion.hoplon.span.call(null,G__109643,G__109644));
})();
var G__109616 = " (";
var G__109617 = (function (){var G__109645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109646 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109645,G__109646) : tailrecursion.hoplon.span.call(null,G__109645,G__109646));
})();
var G__109618 = "[";
var G__109619 = (function (){var G__109647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109648 = "this-coeff";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109647,G__109648) : tailrecursion.hoplon.span.call(null,G__109647,G__109648));
})();
var G__109620 = " ";
var G__109621 = (function (){var G__109649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109650 = "higher-terms";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109649,G__109650) : tailrecursion.hoplon.span.call(null,G__109649,G__109650));
})();
var G__109622 = "]\n                  (";
var G__109623 = (function (){var G__109651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109652 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109651,G__109652) : tailrecursion.hoplon.span.call(null,G__109651,G__109652));
})();
var G__109624 = (function (){var G__109653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109654 = "this-coeff";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109653,G__109654) : tailrecursion.hoplon.span.call(null,G__109653,G__109654));
})();
var G__109625 = " (";
var G__109626 = (function (){var G__109655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109656 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109655,G__109656) : tailrecursion.hoplon.span.call(null,G__109655,G__109656));
})();
var G__109627 = (function (){var G__109657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109658 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109657,G__109658) : tailrecursion.hoplon.span.call(null,G__109657,G__109658));
})();
var G__109628 = " ";
var G__109629 = (function (){var G__109659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109660 = "higher-tems";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109659,G__109660) : tailrecursion.hoplon.span.call(null,G__109659,G__109660));
})();
var G__109630 = ")))\n              ";
var G__109631 = (function (){var G__109661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109662 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109661,G__109662) : tailrecursion.hoplon.span.call(null,G__109661,G__109662));
})();
var G__109632 = "\n              ";
var G__109633 = (function (){var G__109663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109664 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109663,G__109664) : tailrecursion.hoplon.span.call(null,G__109663,G__109664));
})();
var G__109634 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__109606,G__109607,G__109608,G__109609,G__109610,G__109611,G__109612,G__109613,G__109614,G__109615,G__109616,G__109617,G__109618,G__109619,G__109620,G__109621,G__109622,G__109623,G__109624,G__109625,G__109626,G__109627,G__109628,G__109629,G__109630,G__109631,G__109632,G__109633,G__109634) : tailrecursion.hoplon.pre.call(null,G__109606,G__109607,G__109608,G__109609,G__109610,G__109611,G__109612,G__109613,G__109614,G__109615,G__109616,G__109617,G__109618,G__109619,G__109620,G__109621,G__109622,G__109623,G__109624,G__109625,G__109626,G__109627,G__109628,G__109629,G__109630,G__109631,G__109632,G__109633,G__109634));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109604,G__109605) : tailrecursion.hoplon.div.call(null,G__109604,G__109605));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109603) : tailrecursion.hoplon.div.call(null,G__109603));
})(),(function (){var G__109665 = cljs.core.PersistentArrayMap.EMPTY;
var G__109666 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Can you write a procedure that will compute Horner",(function (){var G__109667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__109668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__109667,G__109668) : tailrecursion.hoplon.markdown.simple_node.call(null,G__109667,G__109668));
})(),"s rule iteratively?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109665,G__109666) : tailrecursion.hoplon.markdown.para_node.call(null,G__109665,G__109666));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109602;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109601;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109600;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109599;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109669 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109670 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109671 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109672 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109673 = cljs.core.PersistentArrayMap.EMPTY;
var G__109674 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Redefine ",(function (){var G__109675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__109676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109675,G__109676) : tailrecursion.hoplon.markdown.code_node.call(null,G__109675,G__109676));
})()," from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.2"], null)], 0))," as an accumulation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109673,G__109674) : tailrecursion.hoplon.markdown.para_node.call(null,G__109673,G__109674));
})(),(function (){var G__109677 = (function (){var G__109678 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109679 = (function (){var G__109680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109681 = "(";
var G__109682 = (function (){var G__109698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109699 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109698,G__109699) : tailrecursion.hoplon.span.call(null,G__109698,G__109699));
})();
var G__109683 = (function (){var G__109700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109701 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109700,G__109701) : tailrecursion.hoplon.span.call(null,G__109700,G__109701));
})();
var G__109684 = " [";
var G__109685 = (function (){var G__109702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109703 = "t";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109702,G__109703) : tailrecursion.hoplon.span.call(null,G__109702,G__109703));
})();
var G__109686 = "]\n  (";
var G__109687 = (function (){var G__109704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109705 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109704,G__109705) : tailrecursion.hoplon.span.call(null,G__109704,G__109705));
})();
var G__109688 = " ";
var G__109689 = (function (){var G__109706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109707 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109706,G__109707) : tailrecursion.hoplon.span.call(null,G__109706,G__109707));
})();
var G__109690 = " ";
var G__109691 = (function (){var G__109708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109709 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109708,G__109709) : tailrecursion.hoplon.span.call(null,G__109708,G__109709));
})();
var G__109692 = " (";
var G__109693 = (function (){var G__109710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109711 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109710,G__109711) : tailrecursion.hoplon.span.call(null,G__109710,G__109711));
})();
var G__109694 = (function (){var G__109712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109713 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109712,G__109713) : tailrecursion.hoplon.span.call(null,G__109712,G__109713));
})();
var G__109695 = " ";
var G__109696 = (function (){var G__109714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109715 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109714,G__109715) : tailrecursion.hoplon.span.call(null,G__109714,G__109715));
})();
var G__109697 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__109680,G__109681,G__109682,G__109683,G__109684,G__109685,G__109686,G__109687,G__109688,G__109689,G__109690,G__109691,G__109692,G__109693,G__109694,G__109695,G__109696,G__109697) : tailrecursion.hoplon.pre.call(null,G__109680,G__109681,G__109682,G__109683,G__109684,G__109685,G__109686,G__109687,G__109688,G__109689,G__109690,G__109691,G__109692,G__109693,G__109694,G__109695,G__109696,G__109697));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109678,G__109679) : tailrecursion.hoplon.div.call(null,G__109678,G__109679));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109677) : tailrecursion.hoplon.div.call(null,G__109677));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109672;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109671;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109670;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109669;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109718 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109719 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109720 = (function (){var G__109721 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109722 = (function (){var G__109723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109724 = "(";
var G__109725 = (function (){var G__109755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109756 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109755,G__109756) : tailrecursion.hoplon.span.call(null,G__109755,G__109756));
})();
var G__109726 = (function (){var G__109757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109758 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109757,G__109758) : tailrecursion.hoplon.span.call(null,G__109757,G__109758));
})();
var G__109727 = " [";
var G__109728 = (function (){var G__109759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109760 = "t";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109759,G__109760) : tailrecursion.hoplon.span.call(null,G__109759,G__109760));
})();
var G__109729 = "]\n  (";
var G__109730 = (function (){var G__109761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109762 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109761,G__109762) : tailrecursion.hoplon.span.call(null,G__109761,G__109762));
})();
var G__109731 = " ";
var G__109732 = (function (){var G__109763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109764 = "+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109763,G__109764) : tailrecursion.hoplon.span.call(null,G__109763,G__109764));
})();
var G__109733 = "\n              ";
var G__109734 = (function (){var G__109765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109766 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109765,G__109766) : tailrecursion.hoplon.span.call(null,G__109765,G__109766));
})();
var G__109735 = "\n              (";
var G__109736 = (function (){var G__109767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109768 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109767,G__109768) : tailrecursion.hoplon.span.call(null,G__109767,G__109768));
})();
var G__109737 = "(";
var G__109738 = (function (){var G__109769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109770 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109769,G__109770) : tailrecursion.hoplon.span.call(null,G__109769,G__109770));
})();
var G__109739 = "[";
var G__109740 = (function (){var G__109771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109772 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109771,G__109772) : tailrecursion.hoplon.span.call(null,G__109771,G__109772));
})();
var G__109741 = "]\n                     (";
var G__109742 = (function (){var G__109773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109774 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109773,G__109774) : tailrecursion.hoplon.span.call(null,G__109773,G__109774));
})();
var G__109743 = "(";
var G__109744 = (function (){var G__109775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109776 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109775,G__109776) : tailrecursion.hoplon.span.call(null,G__109775,G__109776));
})();
var G__109745 = (function (){var G__109777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109778 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109777,G__109778) : tailrecursion.hoplon.span.call(null,G__109777,G__109778));
})();
var G__109746 = ")\n                         (";
var G__109747 = (function (){var G__109779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109780 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109779,G__109780) : tailrecursion.hoplon.span.call(null,G__109779,G__109780));
})();
var G__109748 = " ";
var G__109749 = (function (){var G__109781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109782 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109781,G__109782) : tailrecursion.hoplon.span.call(null,G__109781,G__109782));
})();
var G__109750 = ")\n                         ";
var G__109751 = (function (){var G__109783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109784 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109783,G__109784) : tailrecursion.hoplon.span.call(null,G__109783,G__109784));
})();
var G__109752 = "))\n                   ";
var G__109753 = (function (){var G__109785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109786 = "t";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109785,G__109786) : tailrecursion.hoplon.span.call(null,G__109785,G__109786));
})();
var G__109754 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$32 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$32(G__109723,G__109724,G__109725,G__109726,G__109727,G__109728,G__109729,G__109730,G__109731,G__109732,G__109733,G__109734,G__109735,G__109736,G__109737,G__109738,G__109739,G__109740,G__109741,G__109742,G__109743,G__109744,G__109745,G__109746,G__109747,G__109748,G__109749,G__109750,G__109751,G__109752,G__109753,G__109754) : tailrecursion.hoplon.pre.call(null,G__109723,G__109724,G__109725,G__109726,G__109727,G__109728,G__109729,G__109730,G__109731,G__109732,G__109733,G__109734,G__109735,G__109736,G__109737,G__109738,G__109739,G__109740,G__109741,G__109742,G__109743,G__109744,G__109745,G__109746,G__109747,G__109748,G__109749,G__109750,G__109751,G__109752,G__109753,G__109754));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109721,G__109722) : tailrecursion.hoplon.div.call(null,G__109721,G__109722));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109720) : tailrecursion.hoplon.div.call(null,G__109720));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109719;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109718;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109716;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109787 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109788 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109789 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109790 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109791 = cljs.core.PersistentArrayMap.EMPTY;
var G__109792 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedure ",(function (){var G__109793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate-n"], null);
var G__109794 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109793,G__109794) : tailrecursion.hoplon.markdown.code_node.call(null,G__109793,G__109794));
})()," is similar to ",(function (){var G__109795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate"], null);
var G__109796 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109795,G__109796) : tailrecursion.hoplon.markdown.code_node.call(null,G__109795,G__109796));
})()," except that it takes as its third argument a sequence of sequences, which are all assumed to have the same number of elements. It applies the designated accumulation procedure to combine all the first elements of the sequences, all the second elements of the sequences, and so on, and returns a sequence of the results. For instance, if ",(function (){var G__109797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"s"], null);
var G__109798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109797,G__109798) : tailrecursion.hoplon.markdown.code_node.call(null,G__109797,G__109798));
})()," is a sequence containing four sequences, ",(function (){var G__109799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"((1 2 3) (4 5 6) (7 8 9) (10 11\n12))"], null);
var G__109800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109799,G__109800) : tailrecursion.hoplon.markdown.code_node.call(null,G__109799,G__109800));
})(),", then the value of ",(function (){var G__109801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(accumulate-n + 0 s)"], null);
var G__109802 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109801,G__109802) : tailrecursion.hoplon.markdown.code_node.call(null,G__109801,G__109802));
})()," should be the sequence ",(function (){var G__109803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(22 26 30)"], null);
var G__109804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109803,G__109804) : tailrecursion.hoplon.markdown.code_node.call(null,G__109803,G__109804));
})(),". Fill in the missing expressions in the following definition of ",(function (){var G__109805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate-n"], null);
var G__109806 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109805,G__109806) : tailrecursion.hoplon.markdown.code_node.call(null,G__109805,G__109806));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109791,G__109792) : tailrecursion.hoplon.markdown.para_node.call(null,G__109791,G__109792));
})(),(function (){var G__109807 = (function (){var G__109808 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109809 = (function (){var G__109810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109811 = "(";
var G__109812 = (function (){var G__109848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109849 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109848,G__109849) : tailrecursion.hoplon.span.call(null,G__109848,G__109849));
})();
var G__109813 = (function (){var G__109850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109851 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109850,G__109851) : tailrecursion.hoplon.span.call(null,G__109850,G__109851));
})();
var G__109814 = " [";
var G__109815 = (function (){var G__109852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109853 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109852,G__109853) : tailrecursion.hoplon.span.call(null,G__109852,G__109853));
})();
var G__109816 = " ";
var G__109817 = (function (){var G__109854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109855 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109854,G__109855) : tailrecursion.hoplon.span.call(null,G__109854,G__109855));
})();
var G__109818 = " ";
var G__109819 = (function (){var G__109856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109857 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109856,G__109857) : tailrecursion.hoplon.span.call(null,G__109856,G__109857));
})();
var G__109820 = "]\n  (";
var G__109821 = (function (){var G__109858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109859 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109858,G__109859) : tailrecursion.hoplon.span.call(null,G__109858,G__109859));
})();
var G__109822 = "(";
var G__109823 = (function (){var G__109860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109861 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109860,G__109861) : tailrecursion.hoplon.span.call(null,G__109860,G__109861));
})();
var G__109824 = " (";
var G__109825 = (function (){var G__109862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109863 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109862,G__109863) : tailrecursion.hoplon.span.call(null,G__109862,G__109863));
})();
var G__109826 = (function (){var G__109864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109865 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109864,G__109865) : tailrecursion.hoplon.span.call(null,G__109864,G__109865));
})();
var G__109827 = "))\n      ";
var G__109828 = (function (){var G__109866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109867 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109866,G__109867) : tailrecursion.hoplon.span.call(null,G__109866,G__109867));
})();
var G__109829 = "\n      (";
var G__109830 = (function (){var G__109868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109869 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109868,G__109869) : tailrecursion.hoplon.span.call(null,G__109868,G__109869));
})();
var G__109831 = "(";
var G__109832 = (function (){var G__109870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109871 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109870,G__109871) : tailrecursion.hoplon.span.call(null,G__109870,G__109871));
})();
var G__109833 = "   ";
var G__109834 = (function (){var G__109872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109873 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109872,G__109873) : tailrecursion.hoplon.span.call(null,G__109872,G__109873));
})();
var G__109835 = " ";
var G__109836 = (function (){var G__109874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109875 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109874,G__109875) : tailrecursion.hoplon.span.call(null,G__109874,G__109875));
})();
var G__109837 = " ";
var G__109838 = (function (){var G__109876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109877 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109876,G__109877) : tailrecursion.hoplon.span.call(null,G__109876,G__109877));
})();
var G__109839 = ")\n            (";
var G__109840 = (function (){var G__109878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109879 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109878,G__109879) : tailrecursion.hoplon.span.call(null,G__109878,G__109879));
})();
var G__109841 = " ";
var G__109842 = (function (){var G__109880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109881 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109880,G__109881) : tailrecursion.hoplon.span.call(null,G__109880,G__109881));
})();
var G__109843 = " ";
var G__109844 = (function (){var G__109882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109883 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109882,G__109883) : tailrecursion.hoplon.span.call(null,G__109882,G__109883));
})();
var G__109845 = " ";
var G__109846 = (function (){var G__109884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109885 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109884,G__109885) : tailrecursion.hoplon.span.call(null,G__109884,G__109885));
})();
var G__109847 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__109810,G__109811,G__109812,G__109813,G__109814,G__109815,G__109816,G__109817,G__109818,G__109819,G__109820,G__109821,G__109822,G__109823,G__109824,G__109825,G__109826,G__109827,G__109828,G__109829,G__109830,G__109831,G__109832,G__109833,G__109834,G__109835,G__109836,G__109837,G__109838,G__109839,G__109840,G__109841,G__109842,G__109843,G__109844,G__109845,G__109846,G__109847) : tailrecursion.hoplon.pre.call(null,G__109810,G__109811,G__109812,G__109813,G__109814,G__109815,G__109816,G__109817,G__109818,G__109819,G__109820,G__109821,G__109822,G__109823,G__109824,G__109825,G__109826,G__109827,G__109828,G__109829,G__109830,G__109831,G__109832,G__109833,G__109834,G__109835,G__109836,G__109837,G__109838,G__109839,G__109840,G__109841,G__109842,G__109843,G__109844,G__109845,G__109846,G__109847));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109808,G__109809) : tailrecursion.hoplon.div.call(null,G__109808,G__109809));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109807) : tailrecursion.hoplon.div.call(null,G__109807));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109790;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109789;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109788;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109787;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109886 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109887 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109888 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109889 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109890 = (function (){var G__109891 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109892 = (function (){var G__109893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109894 = "(";
var G__109895 = (function (){var G__109933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109934 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109933,G__109934) : tailrecursion.hoplon.span.call(null,G__109933,G__109934));
})();
var G__109896 = (function (){var G__109935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109936 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109935,G__109936) : tailrecursion.hoplon.span.call(null,G__109935,G__109936));
})();
var G__109897 = " [";
var G__109898 = (function (){var G__109937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109938 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109937,G__109938) : tailrecursion.hoplon.span.call(null,G__109937,G__109938));
})();
var G__109899 = " ";
var G__109900 = (function (){var G__109939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109940 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109939,G__109940) : tailrecursion.hoplon.span.call(null,G__109939,G__109940));
})();
var G__109901 = " ";
var G__109902 = (function (){var G__109941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109942 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109941,G__109942) : tailrecursion.hoplon.span.call(null,G__109941,G__109942));
})();
var G__109903 = "]\n  (";
var G__109904 = (function (){var G__109943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109944 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109943,G__109944) : tailrecursion.hoplon.span.call(null,G__109943,G__109944));
})();
var G__109905 = "(";
var G__109906 = (function (){var G__109945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109946 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109945,G__109946) : tailrecursion.hoplon.span.call(null,G__109945,G__109946));
})();
var G__109907 = " (";
var G__109908 = (function (){var G__109947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109948 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109947,G__109948) : tailrecursion.hoplon.span.call(null,G__109947,G__109948));
})();
var G__109909 = (function (){var G__109949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109950 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109949,G__109950) : tailrecursion.hoplon.span.call(null,G__109949,G__109950));
})();
var G__109910 = "))\n      ";
var G__109911 = (function (){var G__109951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109952 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109951,G__109952) : tailrecursion.hoplon.span.call(null,G__109951,G__109952));
})();
var G__109912 = "\n      (";
var G__109913 = (function (){var G__109953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109954 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109953,G__109954) : tailrecursion.hoplon.span.call(null,G__109953,G__109954));
})();
var G__109914 = "(";
var G__109915 = (function (){var G__109955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109956 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109955,G__109956) : tailrecursion.hoplon.span.call(null,G__109955,G__109956));
})();
var G__109916 = "   ";
var G__109917 = (function (){var G__109957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109958 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109957,G__109958) : tailrecursion.hoplon.span.call(null,G__109957,G__109958));
})();
var G__109918 = " ";
var G__109919 = (function (){var G__109959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109960 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109959,G__109960) : tailrecursion.hoplon.span.call(null,G__109959,G__109960));
})();
var G__109920 = " (";
var G__109921 = (function (){var G__109961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109962 = "map first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109961,G__109962) : tailrecursion.hoplon.span.call(null,G__109961,G__109962));
})();
var G__109922 = (function (){var G__109963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109964 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109963,G__109964) : tailrecursion.hoplon.span.call(null,G__109963,G__109964));
})();
var G__109923 = "))\n            (";
var G__109924 = (function (){var G__109965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109966 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109965,G__109966) : tailrecursion.hoplon.span.call(null,G__109965,G__109966));
})();
var G__109925 = " ";
var G__109926 = (function (){var G__109967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109968 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109967,G__109968) : tailrecursion.hoplon.span.call(null,G__109967,G__109968));
})();
var G__109927 = " ";
var G__109928 = (function (){var G__109969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109970 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109969,G__109970) : tailrecursion.hoplon.span.call(null,G__109969,G__109970));
})();
var G__109929 = " (";
var G__109930 = (function (){var G__109971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109972 = "map rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109971,G__109972) : tailrecursion.hoplon.span.call(null,G__109971,G__109972));
})();
var G__109931 = (function (){var G__109973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109974 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109973,G__109974) : tailrecursion.hoplon.span.call(null,G__109973,G__109974));
})();
var G__109932 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__109893,G__109894,G__109895,G__109896,G__109897,G__109898,G__109899,G__109900,G__109901,G__109902,G__109903,G__109904,G__109905,G__109906,G__109907,G__109908,G__109909,G__109910,G__109911,G__109912,G__109913,G__109914,G__109915,G__109916,G__109917,G__109918,G__109919,G__109920,G__109921,G__109922,G__109923,G__109924,G__109925,G__109926,G__109927,G__109928,G__109929,G__109930,G__109931,G__109932) : tailrecursion.hoplon.pre.call(null,G__109893,G__109894,G__109895,G__109896,G__109897,G__109898,G__109899,G__109900,G__109901,G__109902,G__109903,G__109904,G__109905,G__109906,G__109907,G__109908,G__109909,G__109910,G__109911,G__109912,G__109913,G__109914,G__109915,G__109916,G__109917,G__109918,G__109919,G__109920,G__109921,G__109922,G__109923,G__109924,G__109925,G__109926,G__109927,G__109928,G__109929,G__109930,G__109931,G__109932));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109891,G__109892) : tailrecursion.hoplon.div.call(null,G__109891,G__109892));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109890) : tailrecursion.hoplon.div.call(null,G__109890));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109889;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109888;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109887;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109886;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_109975 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109976 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_109977 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_109978 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__109979 = cljs.core.PersistentArrayMap.EMPTY;
var G__109980 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we represent vectors \\(v=(v_i)\\) as sequences of numbers, and matrices \\(m=(m_{ij})\\) as sequences of vectors (the rows of the matrix). For example, the matrix"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109979,G__109980) : tailrecursion.hoplon.markdown.para_node.call(null,G__109979,G__109980));
})(),(function (){var G__109981 = cljs.core.PersistentArrayMap.EMPTY;
var G__109982 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\\begin{array}{cccc} 1 & 2 & 3 & 4 \\\\ 4 & 5 & 6 & 6 \\\\ 6 & 7 & 8 & 9 \\end{array}\\right"], null)], 0)),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109981,G__109982) : tailrecursion.hoplon.markdown.para_node.call(null,G__109981,G__109982));
})(),(function (){var G__109983 = cljs.core.PersistentArrayMap.EMPTY;
var G__109984 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is represented as the sequence ",(function (){var G__109985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"((1 2 3 4) (4 5 6 6) (6 7 8 9))"], null);
var G__109986 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109985,G__109986) : tailrecursion.hoplon.markdown.code_node.call(null,G__109985,G__109986));
})(),". With this representation, we can use sequence operations to concisely express the basic matrix and vector operations. These operations (which are described in any book on matrix algebra) are the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109983,G__109984) : tailrecursion.hoplon.markdown.para_node.call(null,G__109983,G__109984));
})(),(function (){var G__109987 = cljs.core.PersistentArrayMap.EMPTY;
var G__109988 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} (\\text{dot-product }v \\cdot w) & \\text{ returns the sum } \\sum_i v_iw_i \\\\ (\\text{matrix times vector }m \\cdot v) & \\text{ returns the vector } t \\text{, where }t_i=\\sum_j m_{ij}v_j \\\\ (\\text{matrix times matrix }m \\times n) & \\text{ returns the matrix }p\\text{ where }p_{ij}=\\sum_k m_{ik}n_{kj} \\\\ (\\text{transpose }m) & \\text{ returns the matrix }n \\text{ where}n_{ij}=m_{ji} \\\\ \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109987,G__109988) : tailrecursion.hoplon.markdown.para_node.call(null,G__109987,G__109988));
})(),(function (){var G__109989 = cljs.core.PersistentArrayMap.EMPTY;
var G__109990 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can define the product as",(function (){var G__109991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__109992 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This definition uses the extended version of map described in footnote 12. Luckily, our ",(function (){var G__109993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__109994 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109993,G__109994) : tailrecursion.hoplon.markdown.code_node.call(null,G__109993,G__109994));
})()," function can already take multiple list arguments. Play around with it and see how it works."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__109991,G__109992) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__109991,G__109992));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109989,G__109990) : tailrecursion.hoplon.markdown.para_node.call(null,G__109989,G__109990));
})(),(function (){var G__109995 = (function (){var G__109996 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109997 = (function (){var G__109998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109999 = "(";
var G__110000 = (function (){var G__110017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110018 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110017,G__110018) : tailrecursion.hoplon.span.call(null,G__110017,G__110018));
})();
var G__110001 = (function (){var G__110019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110020 = "dot-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110019,G__110020) : tailrecursion.hoplon.span.call(null,G__110019,G__110020));
})();
var G__110002 = " [";
var G__110003 = (function (){var G__110021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110022 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110021,G__110022) : tailrecursion.hoplon.span.call(null,G__110021,G__110022));
})();
var G__110004 = " ";
var G__110005 = (function (){var G__110023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110024 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110023,G__110024) : tailrecursion.hoplon.span.call(null,G__110023,G__110024));
})();
var G__110006 = "]\n  (";
var G__110007 = (function (){var G__110025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110026 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110025,G__110026) : tailrecursion.hoplon.span.call(null,G__110025,G__110026));
})();
var G__110008 = " ";
var G__110009 = (function (){var G__110027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110028 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110027,G__110028) : tailrecursion.hoplon.span.call(null,G__110027,G__110028));
})();
var G__110010 = (function (){var G__110029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110030 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110029,G__110030) : tailrecursion.hoplon.span.call(null,G__110029,G__110030));
})();
var G__110011 = " (";
var G__110012 = (function (){var G__110031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110032 = "map * ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110031,G__110032) : tailrecursion.hoplon.span.call(null,G__110031,G__110032));
})();
var G__110013 = (function (){var G__110033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110034 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110033,G__110034) : tailrecursion.hoplon.span.call(null,G__110033,G__110034));
})();
var G__110014 = " ";
var G__110015 = (function (){var G__110035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110036 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110035,G__110036) : tailrecursion.hoplon.span.call(null,G__110035,G__110036));
})();
var G__110016 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__109998,G__109999,G__110000,G__110001,G__110002,G__110003,G__110004,G__110005,G__110006,G__110007,G__110008,G__110009,G__110010,G__110011,G__110012,G__110013,G__110014,G__110015,G__110016) : tailrecursion.hoplon.pre.call(null,G__109998,G__109999,G__110000,G__110001,G__110002,G__110003,G__110004,G__110005,G__110006,G__110007,G__110008,G__110009,G__110010,G__110011,G__110012,G__110013,G__110014,G__110015,G__110016));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109996,G__109997) : tailrecursion.hoplon.div.call(null,G__109996,G__109997));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109995) : tailrecursion.hoplon.div.call(null,G__109995));
})(),(function (){var G__110037 = cljs.core.PersistentArrayMap.EMPTY;
var G__110038 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fill in the missing expressions in the following procedures for computing the other matrix operations. (The procedure ",(function (){var G__110039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate-n"], null);
var G__110040 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__110039,G__110040) : tailrecursion.hoplon.markdown.code_node.call(null,G__110039,G__110040));
})()," is defined in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/36/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.36"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__110037,G__110038) : tailrecursion.hoplon.markdown.para_node.call(null,G__110037,G__110038));
})(),(function (){var G__110041 = (function (){var G__110042 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110043 = (function (){var G__110044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110045 = "(";
var G__110046 = (function (){var G__110091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110092 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110091,G__110092) : tailrecursion.hoplon.span.call(null,G__110091,G__110092));
})();
var G__110047 = (function (){var G__110093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110094 = "matrix-*-vector";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110093,G__110094) : tailrecursion.hoplon.span.call(null,G__110093,G__110094));
})();
var G__110048 = " [";
var G__110049 = (function (){var G__110095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110096 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110095,G__110096) : tailrecursion.hoplon.span.call(null,G__110095,G__110096));
})();
var G__110050 = " ";
var G__110051 = (function (){var G__110097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110098 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110097,G__110098) : tailrecursion.hoplon.span.call(null,G__110097,G__110098));
})();
var G__110052 = "]\n  (";
var G__110053 = (function (){var G__110099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110100 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110099,G__110100) : tailrecursion.hoplon.span.call(null,G__110099,G__110100));
})();
var G__110054 = (function (){var G__110101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110102 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110101,G__110102) : tailrecursion.hoplon.span.call(null,G__110101,G__110102));
})();
var G__110055 = " ";
var G__110056 = (function (){var G__110103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110104 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110103,G__110104) : tailrecursion.hoplon.span.call(null,G__110103,G__110104));
})();
var G__110057 = "))\n\n(";
var G__110058 = (function (){var G__110105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110106 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110105,G__110106) : tailrecursion.hoplon.span.call(null,G__110105,G__110106));
})();
var G__110059 = (function (){var G__110107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110108 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110107,G__110108) : tailrecursion.hoplon.span.call(null,G__110107,G__110108));
})();
var G__110060 = " [";
var G__110061 = (function (){var G__110109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110110 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110109,G__110110) : tailrecursion.hoplon.span.call(null,G__110109,G__110110));
})();
var G__110062 = "]\n  (";
var G__110063 = (function (){var G__110111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110112 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110111,G__110112) : tailrecursion.hoplon.span.call(null,G__110111,G__110112));
})();
var G__110064 = " ";
var G__110065 = (function (){var G__110113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110114 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110113,G__110114) : tailrecursion.hoplon.span.call(null,G__110113,G__110114));
})();
var G__110066 = " ";
var G__110067 = (function (){var G__110115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110116 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110115,G__110116) : tailrecursion.hoplon.span.call(null,G__110115,G__110116));
})();
var G__110068 = " ";
var G__110069 = (function (){var G__110117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110118 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110117,G__110118) : tailrecursion.hoplon.span.call(null,G__110117,G__110118));
})();
var G__110070 = "))\n\n(";
var G__110071 = (function (){var G__110119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110120 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110119,G__110120) : tailrecursion.hoplon.span.call(null,G__110119,G__110120));
})();
var G__110072 = (function (){var G__110121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110122 = "matrix-*-matrix";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110121,G__110122) : tailrecursion.hoplon.span.call(null,G__110121,G__110122));
})();
var G__110073 = " [";
var G__110074 = (function (){var G__110123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110124 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110123,G__110124) : tailrecursion.hoplon.span.call(null,G__110123,G__110124));
})();
var G__110075 = " ";
var G__110076 = (function (){var G__110125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110126 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110125,G__110126) : tailrecursion.hoplon.span.call(null,G__110125,G__110126));
})();
var G__110077 = "]\n  (";
var G__110078 = (function (){var G__110127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110128 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110127,G__110128) : tailrecursion.hoplon.span.call(null,G__110127,G__110128));
})();
var G__110079 = "[";
var G__110080 = (function (){var G__110129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110130 = "cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110129,G__110130) : tailrecursion.hoplon.span.call(null,G__110129,G__110130));
})();
var G__110081 = " (";
var G__110082 = (function (){var G__110131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110132 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110131,G__110132) : tailrecursion.hoplon.span.call(null,G__110131,G__110132));
})();
var G__110083 = " ";
var G__110084 = (function (){var G__110133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110134 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110133,G__110134) : tailrecursion.hoplon.span.call(null,G__110133,G__110134));
})();
var G__110085 = ")]\n    (";
var G__110086 = (function (){var G__110135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110136 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110135,G__110136) : tailrecursion.hoplon.span.call(null,G__110135,G__110136));
})();
var G__110087 = (function (){var G__110137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110138 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110137,G__110138) : tailrecursion.hoplon.span.call(null,G__110137,G__110138));
})();
var G__110088 = " ";
var G__110089 = (function (){var G__110139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110140 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110139,G__110140) : tailrecursion.hoplon.span.call(null,G__110139,G__110140));
})();
var G__110090 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__110044,G__110045,G__110046,G__110047,G__110048,G__110049,G__110050,G__110051,G__110052,G__110053,G__110054,G__110055,G__110056,G__110057,G__110058,G__110059,G__110060,G__110061,G__110062,G__110063,G__110064,G__110065,G__110066,G__110067,G__110068,G__110069,G__110070,G__110071,G__110072,G__110073,G__110074,G__110075,G__110076,G__110077,G__110078,G__110079,G__110080,G__110081,G__110082,G__110083,G__110084,G__110085,G__110086,G__110087,G__110088,G__110089,G__110090) : tailrecursion.hoplon.pre.call(null,G__110044,G__110045,G__110046,G__110047,G__110048,G__110049,G__110050,G__110051,G__110052,G__110053,G__110054,G__110055,G__110056,G__110057,G__110058,G__110059,G__110060,G__110061,G__110062,G__110063,G__110064,G__110065,G__110066,G__110067,G__110068,G__110069,G__110070,G__110071,G__110072,G__110073,G__110074,G__110075,G__110076,G__110077,G__110078,G__110079,G__110080,G__110081,G__110082,G__110083,G__110084,G__110085,G__110086,G__110087,G__110088,G__110089,G__110090));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110042,G__110043) : tailrecursion.hoplon.div.call(null,G__110042,G__110043));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110041) : tailrecursion.hoplon.div.call(null,G__110041));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109978;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109977;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_109976;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_109975;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_110141 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110142 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110143 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110144 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110145 = (function (){var G__110146 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110147 = (function (){var G__110148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110149 = "(";
var G__110150 = (function (){var G__110206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110207 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110206,G__110207) : tailrecursion.hoplon.span.call(null,G__110206,G__110207));
})();
var G__110151 = (function (){var G__110208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110209 = "matrix-*-vector";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110208,G__110209) : tailrecursion.hoplon.span.call(null,G__110208,G__110209));
})();
var G__110152 = " [";
var G__110153 = (function (){var G__110210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110211 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110210,G__110211) : tailrecursion.hoplon.span.call(null,G__110210,G__110211));
})();
var G__110154 = " ";
var G__110155 = (function (){var G__110212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110213 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110212,G__110213) : tailrecursion.hoplon.span.call(null,G__110212,G__110213));
})();
var G__110156 = "]\n  (";
var G__110157 = (function (){var G__110214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110215 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110214,G__110215) : tailrecursion.hoplon.span.call(null,G__110214,G__110215));
})();
var G__110158 = (function (){var G__110216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110217 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110216,G__110217) : tailrecursion.hoplon.span.call(null,G__110216,G__110217));
})();
var G__110159 = "(";
var G__110160 = (function (){var G__110218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110219 = "dot-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110218,G__110219) : tailrecursion.hoplon.span.call(null,G__110218,G__110219));
})();
var G__110161 = " ";
var G__110162 = (function (){var G__110220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110221 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110220,G__110221) : tailrecursion.hoplon.span.call(null,G__110220,G__110221));
})();
var G__110163 = " ";
var G__110164 = (function (){var G__110222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110223 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110222,G__110223) : tailrecursion.hoplon.span.call(null,G__110222,G__110223));
})();
var G__110165 = ") ";
var G__110166 = (function (){var G__110224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110225 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110224,G__110225) : tailrecursion.hoplon.span.call(null,G__110224,G__110225));
})();
var G__110167 = "))\n\n(";
var G__110168 = (function (){var G__110226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110227 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110226,G__110227) : tailrecursion.hoplon.span.call(null,G__110226,G__110227));
})();
var G__110169 = (function (){var G__110228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110229 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110228,G__110229) : tailrecursion.hoplon.span.call(null,G__110228,G__110229));
})();
var G__110170 = " [";
var G__110171 = (function (){var G__110230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110231 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110230,G__110231) : tailrecursion.hoplon.span.call(null,G__110230,G__110231));
})();
var G__110172 = "]\n  (";
var G__110173 = (function (){var G__110232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110233 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110232,G__110233) : tailrecursion.hoplon.span.call(null,G__110232,G__110233));
})();
var G__110174 = " ";
var G__110175 = (function (){var G__110234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110235 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110234,G__110235) : tailrecursion.hoplon.span.call(null,G__110234,G__110235));
})();
var G__110176 = (function (){var G__110236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110237 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110236,G__110237) : tailrecursion.hoplon.span.call(null,G__110236,G__110237));
})();
var G__110177 = " ";
var G__110178 = (function (){var G__110238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110239 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110238,G__110239) : tailrecursion.hoplon.span.call(null,G__110238,G__110239));
})();
var G__110179 = "))\n\n(";
var G__110180 = (function (){var G__110240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110241 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110240,G__110241) : tailrecursion.hoplon.span.call(null,G__110240,G__110241));
})();
var G__110181 = (function (){var G__110242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110243 = "matrix-*-matrix";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110242,G__110243) : tailrecursion.hoplon.span.call(null,G__110242,G__110243));
})();
var G__110182 = " [";
var G__110183 = (function (){var G__110244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110245 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110244,G__110245) : tailrecursion.hoplon.span.call(null,G__110244,G__110245));
})();
var G__110184 = " ";
var G__110185 = (function (){var G__110246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110247 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110246,G__110247) : tailrecursion.hoplon.span.call(null,G__110246,G__110247));
})();
var G__110186 = "]\n  (";
var G__110187 = (function (){var G__110248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110249 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110248,G__110249) : tailrecursion.hoplon.span.call(null,G__110248,G__110249));
})();
var G__110188 = "[";
var G__110189 = (function (){var G__110250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110251 = "cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110250,G__110251) : tailrecursion.hoplon.span.call(null,G__110250,G__110251));
})();
var G__110190 = " (";
var G__110191 = (function (){var G__110252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110253 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110252,G__110253) : tailrecursion.hoplon.span.call(null,G__110252,G__110253));
})();
var G__110192 = " ";
var G__110193 = (function (){var G__110254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110255 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110254,G__110255) : tailrecursion.hoplon.span.call(null,G__110254,G__110255));
})();
var G__110194 = ")]\n    (";
var G__110195 = (function (){var G__110256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110257 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110256,G__110257) : tailrecursion.hoplon.span.call(null,G__110256,G__110257));
})();
var G__110196 = (function (){var G__110258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110259 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110258,G__110259) : tailrecursion.hoplon.span.call(null,G__110258,G__110259));
})();
var G__110197 = "(";
var G__110198 = (function (){var G__110260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110261 = "matrix-*-vector";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110260,G__110261) : tailrecursion.hoplon.span.call(null,G__110260,G__110261));
})();
var G__110199 = " ";
var G__110200 = (function (){var G__110262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110263 = "cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110262,G__110263) : tailrecursion.hoplon.span.call(null,G__110262,G__110263));
})();
var G__110201 = " ";
var G__110202 = (function (){var G__110264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110265 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110264,G__110265) : tailrecursion.hoplon.span.call(null,G__110264,G__110265));
})();
var G__110203 = ") ";
var G__110204 = (function (){var G__110266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110267 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110266,G__110267) : tailrecursion.hoplon.span.call(null,G__110266,G__110267));
})();
var G__110205 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__110148,G__110149,G__110150,G__110151,G__110152,G__110153,G__110154,G__110155,G__110156,G__110157,G__110158,G__110159,G__110160,G__110161,G__110162,G__110163,G__110164,G__110165,G__110166,G__110167,G__110168,G__110169,G__110170,G__110171,G__110172,G__110173,G__110174,G__110175,G__110176,G__110177,G__110178,G__110179,G__110180,G__110181,G__110182,G__110183,G__110184,G__110185,G__110186,G__110187,G__110188,G__110189,G__110190,G__110191,G__110192,G__110193,G__110194,G__110195,G__110196,G__110197,G__110198,G__110199,G__110200,G__110201,G__110202,G__110203,G__110204,G__110205) : tailrecursion.hoplon.pre.call(null,G__110148,G__110149,G__110150,G__110151,G__110152,G__110153,G__110154,G__110155,G__110156,G__110157,G__110158,G__110159,G__110160,G__110161,G__110162,G__110163,G__110164,G__110165,G__110166,G__110167,G__110168,G__110169,G__110170,G__110171,G__110172,G__110173,G__110174,G__110175,G__110176,G__110177,G__110178,G__110179,G__110180,G__110181,G__110182,G__110183,G__110184,G__110185,G__110186,G__110187,G__110188,G__110189,G__110190,G__110191,G__110192,G__110193,G__110194,G__110195,G__110196,G__110197,G__110198,G__110199,G__110200,G__110201,G__110202,G__110203,G__110204,G__110205));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110146,G__110147) : tailrecursion.hoplon.div.call(null,G__110146,G__110147));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110145) : tailrecursion.hoplon.div.call(null,G__110145));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110144;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110143;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110142;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110141;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_110268 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110269 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110270 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110271 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110272 = cljs.core.PersistentArrayMap.EMPTY;
var G__110273 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__110274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate"], null);
var G__110275 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__110274,G__110275) : tailrecursion.hoplon.markdown.code_node.call(null,G__110274,G__110275));
})()," procedure is also known as ",(function (){var G__110276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__110277 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__110276,G__110277) : tailrecursion.hoplon.markdown.code_node.call(null,G__110276,G__110277));
})(),", because it combines the first element of the sequence with the result of combining all the elements to the right. There is also a ",(function (){var G__110278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__110279 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__110278,G__110279) : tailrecursion.hoplon.markdown.code_node.call(null,G__110278,G__110279));
})(),", which is similar to ",(function (){var G__110280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__110281 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__110280,G__110281) : tailrecursion.hoplon.markdown.code_node.call(null,G__110280,G__110281));
})(),", except that it combines elements working in the opposite direction:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__110272,G__110273) : tailrecursion.hoplon.markdown.para_node.call(null,G__110272,G__110273));
})(),(function (){var G__110282 = (function (){var G__110283 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110284 = (function (){var G__110285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110286 = "(";
var G__110287 = (function (){var G__110326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110327 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110326,G__110327) : tailrecursion.hoplon.span.call(null,G__110326,G__110327));
})();
var G__110288 = (function (){var G__110328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110329 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110328,G__110329) : tailrecursion.hoplon.span.call(null,G__110328,G__110329));
})();
var G__110289 = " [";
var G__110290 = (function (){var G__110330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110331 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110330,G__110331) : tailrecursion.hoplon.span.call(null,G__110330,G__110331));
})();
var G__110291 = " ";
var G__110292 = (function (){var G__110332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110333 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110332,G__110333) : tailrecursion.hoplon.span.call(null,G__110332,G__110333));
})();
var G__110293 = " ";
var G__110294 = (function (){var G__110334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110335 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110334,G__110335) : tailrecursion.hoplon.span.call(null,G__110334,G__110335));
})();
var G__110295 = "]\n  (";
var G__110296 = (function (){var G__110336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110337 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110336,G__110337) : tailrecursion.hoplon.span.call(null,G__110336,G__110337));
})();
var G__110297 = "[";
var G__110298 = (function (){var G__110338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110339 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110338,G__110339) : tailrecursion.hoplon.span.call(null,G__110338,G__110339));
})();
var G__110299 = " ";
var G__110300 = (function (){var G__110340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110341 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110340,G__110341) : tailrecursion.hoplon.span.call(null,G__110340,G__110341));
})();
var G__110301 = "\n         ";
var G__110302 = (function (){var G__110342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110343 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110342,G__110343) : tailrecursion.hoplon.span.call(null,G__110342,G__110343));
})();
var G__110303 = " ";
var G__110304 = (function (){var G__110344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110345 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110344,G__110345) : tailrecursion.hoplon.span.call(null,G__110344,G__110345));
})();
var G__110305 = "]\n    (";
var G__110306 = (function (){var G__110346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110347 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110346,G__110347) : tailrecursion.hoplon.span.call(null,G__110346,G__110347));
})();
var G__110307 = "(";
var G__110308 = (function (){var G__110348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110349 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110348,G__110349) : tailrecursion.hoplon.span.call(null,G__110348,G__110349));
})();
var G__110309 = " ";
var G__110310 = (function (){var G__110350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110351 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110350,G__110351) : tailrecursion.hoplon.span.call(null,G__110350,G__110351));
})();
var G__110311 = ")\n        ";
var G__110312 = (function (){var G__110352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110353 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110352,G__110353) : tailrecursion.hoplon.span.call(null,G__110352,G__110353));
})();
var G__110313 = "\n        (";
var G__110314 = (function (){var G__110354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110355 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110354,G__110355) : tailrecursion.hoplon.span.call(null,G__110354,G__110355));
})();
var G__110315 = " (";
var G__110316 = (function (){var G__110356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110357 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110356,G__110357) : tailrecursion.hoplon.span.call(null,G__110356,G__110357));
})();
var G__110317 = " ";
var G__110318 = (function (){var G__110358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110359 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110358,G__110359) : tailrecursion.hoplon.span.call(null,G__110358,G__110359));
})();
var G__110319 = " (";
var G__110320 = (function (){var G__110360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110361 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110360,G__110361) : tailrecursion.hoplon.span.call(null,G__110360,G__110361));
})();
var G__110321 = (function (){var G__110362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110363 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110362,G__110363) : tailrecursion.hoplon.span.call(null,G__110362,G__110363));
})();
var G__110322 = "))\n               (";
var G__110323 = (function (){var G__110364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110365 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110364,G__110365) : tailrecursion.hoplon.span.call(null,G__110364,G__110365));
})();
var G__110324 = (function (){var G__110366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110367 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110366,G__110367) : tailrecursion.hoplon.span.call(null,G__110366,G__110367));
})();
var G__110325 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__110285,G__110286,G__110287,G__110288,G__110289,G__110290,G__110291,G__110292,G__110293,G__110294,G__110295,G__110296,G__110297,G__110298,G__110299,G__110300,G__110301,G__110302,G__110303,G__110304,G__110305,G__110306,G__110307,G__110308,G__110309,G__110310,G__110311,G__110312,G__110313,G__110314,G__110315,G__110316,G__110317,G__110318,G__110319,G__110320,G__110321,G__110322,G__110323,G__110324,G__110325) : tailrecursion.hoplon.pre.call(null,G__110285,G__110286,G__110287,G__110288,G__110289,G__110290,G__110291,G__110292,G__110293,G__110294,G__110295,G__110296,G__110297,G__110298,G__110299,G__110300,G__110301,G__110302,G__110303,G__110304,G__110305,G__110306,G__110307,G__110308,G__110309,G__110310,G__110311,G__110312,G__110313,G__110314,G__110315,G__110316,G__110317,G__110318,G__110319,G__110320,G__110321,G__110322,G__110323,G__110324,G__110325));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110283,G__110284) : tailrecursion.hoplon.div.call(null,G__110283,G__110284));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110282) : tailrecursion.hoplon.div.call(null,G__110282));
})(),(function (){var G__110368 = cljs.core.PersistentArrayMap.EMPTY;
var G__110369 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__110368,G__110369) : tailrecursion.hoplon.markdown.para_node.call(null,G__110368,G__110369));
})(),(function (){var G__110370 = (function (){var G__110371 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110372 = (function (){var G__110373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110374 = "(";
var G__110375 = (function (){var G__110387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110388 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110387,G__110388) : tailrecursion.hoplon.span.call(null,G__110387,G__110388));
})();
var G__110376 = " ";
var G__110377 = (function (){var G__110389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110390 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110389,G__110390) : tailrecursion.hoplon.span.call(null,G__110389,G__110390));
})();
var G__110378 = (function (){var G__110391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110392 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110391,G__110392) : tailrecursion.hoplon.span.call(null,G__110391,G__110392));
})();
var G__110379 = " (";
var G__110380 = (function (){var G__110393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110394 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110393,G__110394) : tailrecursion.hoplon.span.call(null,G__110393,G__110394));
})();
var G__110381 = (function (){var G__110395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110396 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110395,G__110396) : tailrecursion.hoplon.span.call(null,G__110395,G__110396));
})();
var G__110382 = " ";
var G__110383 = (function (){var G__110397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110398 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110397,G__110398) : tailrecursion.hoplon.span.call(null,G__110397,G__110398));
})();
var G__110384 = " ";
var G__110385 = (function (){var G__110399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110400 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110399,G__110400) : tailrecursion.hoplon.span.call(null,G__110399,G__110400));
})();
var G__110386 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__110373,G__110374,G__110375,G__110376,G__110377,G__110378,G__110379,G__110380,G__110381,G__110382,G__110383,G__110384,G__110385,G__110386) : tailrecursion.hoplon.pre.call(null,G__110373,G__110374,G__110375,G__110376,G__110377,G__110378,G__110379,G__110380,G__110381,G__110382,G__110383,G__110384,G__110385,G__110386));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110371,G__110372) : tailrecursion.hoplon.div.call(null,G__110371,G__110372));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110370) : tailrecursion.hoplon.div.call(null,G__110370));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110271;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110270;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110269;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110268;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_110401 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110402 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110403 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110404 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110405 = (function (){var G__110406 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110407 = (function (){var G__110408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110409 = "(";
var G__110410 = (function (){var G__110471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110472 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110471,G__110472) : tailrecursion.hoplon.span.call(null,G__110471,G__110472));
})();
var G__110411 = " ";
var G__110412 = (function (){var G__110473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110474 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110473,G__110474) : tailrecursion.hoplon.span.call(null,G__110473,G__110474));
})();
var G__110413 = (function (){var G__110475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110476 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110475,G__110476) : tailrecursion.hoplon.span.call(null,G__110475,G__110476));
})();
var G__110414 = " (";
var G__110415 = (function (){var G__110477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110478 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110477,G__110478) : tailrecursion.hoplon.span.call(null,G__110477,G__110478));
})();
var G__110416 = (function (){var G__110479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110480 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110479,G__110480) : tailrecursion.hoplon.span.call(null,G__110479,G__110480));
})();
var G__110417 = " ";
var G__110418 = (function (){var G__110481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110482 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110481,G__110482) : tailrecursion.hoplon.span.call(null,G__110481,G__110482));
})();
var G__110419 = " ";
var G__110420 = (function (){var G__110483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110484 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110483,G__110484) : tailrecursion.hoplon.span.call(null,G__110483,G__110484));
})();
var G__110421 = "))\n(";
var G__110422 = (function (){var G__110485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110486 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110485,G__110486) : tailrecursion.hoplon.span.call(null,G__110485,G__110486));
})();
var G__110423 = (function (){var G__110487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110488 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110487,G__110488) : tailrecursion.hoplon.span.call(null,G__110487,G__110488));
})();
var G__110424 = " (";
var G__110425 = (function (){var G__110489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110490 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110489,G__110490) : tailrecursion.hoplon.span.call(null,G__110489,G__110490));
})();
var G__110426 = " ";
var G__110427 = (function (){var G__110491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110492 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110491,G__110492) : tailrecursion.hoplon.span.call(null,G__110491,G__110492));
})();
var G__110428 = (function (){var G__110493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110494 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110493,G__110494) : tailrecursion.hoplon.span.call(null,G__110493,G__110494));
})();
var G__110429 = " (";
var G__110430 = (function (){var G__110495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110496 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110495,G__110496) : tailrecursion.hoplon.span.call(null,G__110495,G__110496));
})();
var G__110431 = (function (){var G__110497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110498 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110497,G__110498) : tailrecursion.hoplon.span.call(null,G__110497,G__110498));
})();
var G__110432 = " ";
var G__110433 = (function (){var G__110499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110500 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110499,G__110500) : tailrecursion.hoplon.span.call(null,G__110499,G__110500));
})();
var G__110434 = ")))\n(";
var G__110435 = (function (){var G__110501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110502 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110501,G__110502) : tailrecursion.hoplon.span.call(null,G__110501,G__110502));
})();
var G__110436 = (function (){var G__110503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110504 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110503,G__110504) : tailrecursion.hoplon.span.call(null,G__110503,G__110504));
})();
var G__110437 = " (";
var G__110438 = (function (){var G__110505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110506 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110505,G__110506) : tailrecursion.hoplon.span.call(null,G__110505,G__110506));
})();
var G__110439 = (function (){var G__110507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110508 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110507,G__110508) : tailrecursion.hoplon.span.call(null,G__110507,G__110508));
})();
var G__110440 = " (";
var G__110441 = (function (){var G__110509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110510 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110509,G__110510) : tailrecursion.hoplon.span.call(null,G__110509,G__110510));
})();
var G__110442 = " ";
var G__110443 = (function (){var G__110511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110512 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110511,G__110512) : tailrecursion.hoplon.span.call(null,G__110511,G__110512));
})();
var G__110444 = (function (){var G__110513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110514 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110513,G__110514) : tailrecursion.hoplon.span.call(null,G__110513,G__110514));
})();
var G__110445 = " (";
var G__110446 = (function (){var G__110515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110516 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110515,G__110516) : tailrecursion.hoplon.span.call(null,G__110515,G__110516));
})();
var G__110447 = (function (){var G__110517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110518 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110517,G__110518) : tailrecursion.hoplon.span.call(null,G__110517,G__110518));
})();
var G__110448 = "))))\n(";
var G__110449 = (function (){var G__110519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110520 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110519,G__110520) : tailrecursion.hoplon.span.call(null,G__110519,G__110520));
})();
var G__110450 = (function (){var G__110521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110522 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110521,G__110522) : tailrecursion.hoplon.span.call(null,G__110521,G__110522));
})();
var G__110451 = " (";
var G__110452 = (function (){var G__110523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110524 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110523,G__110524) : tailrecursion.hoplon.span.call(null,G__110523,G__110524));
})();
var G__110453 = (function (){var G__110525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110526 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110525,G__110526) : tailrecursion.hoplon.span.call(null,G__110525,G__110526));
})();
var G__110454 = " (";
var G__110455 = (function (){var G__110527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110528 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110527,G__110528) : tailrecursion.hoplon.span.call(null,G__110527,G__110528));
})();
var G__110456 = (function (){var G__110529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110530 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110529,G__110530) : tailrecursion.hoplon.span.call(null,G__110529,G__110530));
})();
var G__110457 = " ";
var G__110458 = (function (){var G__110531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110532 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110531,G__110532) : tailrecursion.hoplon.span.call(null,G__110531,G__110532));
})();
var G__110459 = ")))\n(";
var G__110460 = (function (){var G__110533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110534 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110533,G__110534) : tailrecursion.hoplon.span.call(null,G__110533,G__110534));
})();
var G__110461 = (function (){var G__110535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110536 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110535,G__110536) : tailrecursion.hoplon.span.call(null,G__110535,G__110536));
})();
var G__110462 = " (";
var G__110463 = (function (){var G__110537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110538 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110537,G__110538) : tailrecursion.hoplon.span.call(null,G__110537,G__110538));
})();
var G__110464 = (function (){var G__110539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110540 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110539,G__110540) : tailrecursion.hoplon.span.call(null,G__110539,G__110540));
})();
var G__110465 = " ";
var G__110466 = (function (){var G__110541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110542 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110541,G__110542) : tailrecursion.hoplon.span.call(null,G__110541,G__110542));
})();
var G__110467 = "))\n";
var G__110468 = (function (){var G__110543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110544 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110543,G__110544) : tailrecursion.hoplon.span.call(null,G__110543,G__110544));
})();
var G__110469 = (function (){var G__110545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110546 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110545,G__110546) : tailrecursion.hoplon.span.call(null,G__110545,G__110546));
})();
var G__110470 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__110408,G__110409,G__110410,G__110411,G__110412,G__110413,G__110414,G__110415,G__110416,G__110417,G__110418,G__110419,G__110420,G__110421,G__110422,G__110423,G__110424,G__110425,G__110426,G__110427,G__110428,G__110429,G__110430,G__110431,G__110432,G__110433,G__110434,G__110435,G__110436,G__110437,G__110438,G__110439,G__110440,G__110441,G__110442,G__110443,G__110444,G__110445,G__110446,G__110447,G__110448,G__110449,G__110450,G__110451,G__110452,G__110453,G__110454,G__110455,G__110456,G__110457,G__110458,G__110459,G__110460,G__110461,G__110462,G__110463,G__110464,G__110465,G__110466,G__110467,G__110468,G__110469,G__110470) : tailrecursion.hoplon.pre.call(null,G__110408,G__110409,G__110410,G__110411,G__110412,G__110413,G__110414,G__110415,G__110416,G__110417,G__110418,G__110419,G__110420,G__110421,G__110422,G__110423,G__110424,G__110425,G__110426,G__110427,G__110428,G__110429,G__110430,G__110431,G__110432,G__110433,G__110434,G__110435,G__110436,G__110437,G__110438,G__110439,G__110440,G__110441,G__110442,G__110443,G__110444,G__110445,G__110446,G__110447,G__110448,G__110449,G__110450,G__110451,G__110452,G__110453,G__110454,G__110455,G__110456,G__110457,G__110458,G__110459,G__110460,G__110461,G__110462,G__110463,G__110464,G__110465,G__110466,G__110467,G__110468,G__110469,G__110470));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110406,G__110407) : tailrecursion.hoplon.div.call(null,G__110406,G__110407));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110405) : tailrecursion.hoplon.div.call(null,G__110405));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110404;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110403;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110402;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110401;
}})()], 0)),"",(function (){var _STAR_references_STAR_110547 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110548 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110549 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110550 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110551 = (function (){var G__110552 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110553 = (function (){var G__110554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110555 = "(";
var G__110556 = (function (){var G__110568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110569 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110568,G__110569) : tailrecursion.hoplon.span.call(null,G__110568,G__110569));
})();
var G__110557 = " ";
var G__110558 = (function (){var G__110570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110571 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110570,G__110571) : tailrecursion.hoplon.span.call(null,G__110570,G__110571));
})();
var G__110559 = (function (){var G__110572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110573 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110572,G__110573) : tailrecursion.hoplon.span.call(null,G__110572,G__110573));
})();
var G__110560 = " (";
var G__110561 = (function (){var G__110574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110575 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110574,G__110575) : tailrecursion.hoplon.span.call(null,G__110574,G__110575));
})();
var G__110562 = (function (){var G__110576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110577 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110576,G__110577) : tailrecursion.hoplon.span.call(null,G__110576,G__110577));
})();
var G__110563 = " ";
var G__110564 = (function (){var G__110578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110579 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110578,G__110579) : tailrecursion.hoplon.span.call(null,G__110578,G__110579));
})();
var G__110565 = " ";
var G__110566 = (function (){var G__110580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110581 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110580,G__110581) : tailrecursion.hoplon.span.call(null,G__110580,G__110581));
})();
var G__110567 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__110554,G__110555,G__110556,G__110557,G__110558,G__110559,G__110560,G__110561,G__110562,G__110563,G__110564,G__110565,G__110566,G__110567) : tailrecursion.hoplon.pre.call(null,G__110554,G__110555,G__110556,G__110557,G__110558,G__110559,G__110560,G__110561,G__110562,G__110563,G__110564,G__110565,G__110566,G__110567));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110552,G__110553) : tailrecursion.hoplon.div.call(null,G__110552,G__110553));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110551) : tailrecursion.hoplon.div.call(null,G__110551));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110550;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110549;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110548;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110547;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_110582 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110583 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110584 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110585 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110586 = (function (){var G__110587 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110588 = (function (){var G__110589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110590 = "(";
var G__110591 = (function (){var G__110646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110647 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110646,G__110647) : tailrecursion.hoplon.span.call(null,G__110646,G__110647));
})();
var G__110592 = " ";
var G__110593 = (function (){var G__110648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110649 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110648,G__110649) : tailrecursion.hoplon.span.call(null,G__110648,G__110649));
})();
var G__110594 = (function (){var G__110650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110651 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110650,G__110651) : tailrecursion.hoplon.span.call(null,G__110650,G__110651));
})();
var G__110595 = " (";
var G__110596 = (function (){var G__110652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110653 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110652,G__110653) : tailrecursion.hoplon.span.call(null,G__110652,G__110653));
})();
var G__110597 = (function (){var G__110654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110655 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110654,G__110655) : tailrecursion.hoplon.span.call(null,G__110654,G__110655));
})();
var G__110598 = " ";
var G__110599 = (function (){var G__110656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110657 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110656,G__110657) : tailrecursion.hoplon.span.call(null,G__110656,G__110657));
})();
var G__110600 = " ";
var G__110601 = (function (){var G__110658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110659 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110658,G__110659) : tailrecursion.hoplon.span.call(null,G__110658,G__110659));
})();
var G__110602 = "))\n(";
var G__110603 = (function (){var G__110660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110661 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110660,G__110661) : tailrecursion.hoplon.span.call(null,G__110660,G__110661));
})();
var G__110604 = (function (){var G__110662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110663 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110662,G__110663) : tailrecursion.hoplon.span.call(null,G__110662,G__110663));
})();
var G__110605 = " (";
var G__110606 = (function (){var G__110664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110665 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110664,G__110665) : tailrecursion.hoplon.span.call(null,G__110664,G__110665));
})();
var G__110607 = (function (){var G__110666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110667 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110666,G__110667) : tailrecursion.hoplon.span.call(null,G__110666,G__110667));
})();
var G__110608 = " ";
var G__110609 = (function (){var G__110668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110669 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110668,G__110669) : tailrecursion.hoplon.span.call(null,G__110668,G__110669));
})();
var G__110610 = " ";
var G__110611 = (function (){var G__110670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110671 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110670,G__110671) : tailrecursion.hoplon.span.call(null,G__110670,G__110671));
})();
var G__110612 = "))\n(";
var G__110613 = (function (){var G__110672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110673 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110672,G__110673) : tailrecursion.hoplon.span.call(null,G__110672,G__110673));
})();
var G__110614 = (function (){var G__110674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110675 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110674,G__110675) : tailrecursion.hoplon.span.call(null,G__110674,G__110675));
})();
var G__110615 = (function (){var G__110676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110677 = "/1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110676,G__110677) : tailrecursion.hoplon.span.call(null,G__110676,G__110677));
})();
var G__110616 = " (";
var G__110617 = (function (){var G__110678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110679 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110678,G__110679) : tailrecursion.hoplon.span.call(null,G__110678,G__110679));
})();
var G__110618 = (function (){var G__110680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110681 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110680,G__110681) : tailrecursion.hoplon.span.call(null,G__110680,G__110681));
})();
var G__110619 = " ";
var G__110620 = (function (){var G__110682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110683 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110682,G__110683) : tailrecursion.hoplon.span.call(null,G__110682,G__110683));
})();
var G__110621 = "))\n(";
var G__110622 = (function (){var G__110684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110685 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110684,G__110685) : tailrecursion.hoplon.span.call(null,G__110684,G__110685));
})();
var G__110623 = (function (){var G__110686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110687 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110686,G__110687) : tailrecursion.hoplon.span.call(null,G__110686,G__110687));
})();
var G__110624 = " (";
var G__110625 = (function (){var G__110688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110689 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110688,G__110689) : tailrecursion.hoplon.span.call(null,G__110688,G__110689));
})();
var G__110626 = (function (){var G__110690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110691 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110690,G__110691) : tailrecursion.hoplon.span.call(null,G__110690,G__110691));
})();
var G__110627 = " ";
var G__110628 = (function (){var G__110692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110693 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110692,G__110693) : tailrecursion.hoplon.span.call(null,G__110692,G__110693));
})();
var G__110629 = "))\n(";
var G__110630 = (function (){var G__110694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110695 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110694,G__110695) : tailrecursion.hoplon.span.call(null,G__110694,G__110695));
})();
var G__110631 = (function (){var G__110696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110697 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110696,G__110697) : tailrecursion.hoplon.span.call(null,G__110696,G__110697));
})();
var G__110632 = (function (){var G__110698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110699 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110698,G__110699) : tailrecursion.hoplon.span.call(null,G__110698,G__110699));
})();
var G__110633 = " (";
var G__110634 = (function (){var G__110700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110701 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110700,G__110701) : tailrecursion.hoplon.span.call(null,G__110700,G__110701));
})();
var G__110635 = (function (){var G__110702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110703 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110702,G__110703) : tailrecursion.hoplon.span.call(null,G__110702,G__110703));
})();
var G__110636 = "))\n(";
var G__110637 = (function (){var G__110704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__110705 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110704,G__110705) : tailrecursion.hoplon.span.call(null,G__110704,G__110705));
})();
var G__110638 = (function (){var G__110706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110707 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110706,G__110707) : tailrecursion.hoplon.span.call(null,G__110706,G__110707));
})();
var G__110639 = (function (){var G__110708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110709 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110708,G__110709) : tailrecursion.hoplon.span.call(null,G__110708,G__110709));
})();
var G__110640 = " (";
var G__110641 = (function (){var G__110710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110711 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110710,G__110711) : tailrecursion.hoplon.span.call(null,G__110710,G__110711));
})();
var G__110642 = "))\n";
var G__110643 = (function (){var G__110712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110713 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110712,G__110713) : tailrecursion.hoplon.span.call(null,G__110712,G__110713));
})();
var G__110644 = (function (){var G__110714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110715 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110714,G__110715) : tailrecursion.hoplon.span.call(null,G__110714,G__110715));
})();
var G__110645 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__110589,G__110590,G__110591,G__110592,G__110593,G__110594,G__110595,G__110596,G__110597,G__110598,G__110599,G__110600,G__110601,G__110602,G__110603,G__110604,G__110605,G__110606,G__110607,G__110608,G__110609,G__110610,G__110611,G__110612,G__110613,G__110614,G__110615,G__110616,G__110617,G__110618,G__110619,G__110620,G__110621,G__110622,G__110623,G__110624,G__110625,G__110626,G__110627,G__110628,G__110629,G__110630,G__110631,G__110632,G__110633,G__110634,G__110635,G__110636,G__110637,G__110638,G__110639,G__110640,G__110641,G__110642,G__110643,G__110644,G__110645) : tailrecursion.hoplon.pre.call(null,G__110589,G__110590,G__110591,G__110592,G__110593,G__110594,G__110595,G__110596,G__110597,G__110598,G__110599,G__110600,G__110601,G__110602,G__110603,G__110604,G__110605,G__110606,G__110607,G__110608,G__110609,G__110610,G__110611,G__110612,G__110613,G__110614,G__110615,G__110616,G__110617,G__110618,G__110619,G__110620,G__110621,G__110622,G__110623,G__110624,G__110625,G__110626,G__110627,G__110628,G__110629,G__110630,G__110631,G__110632,G__110633,G__110634,G__110635,G__110636,G__110637,G__110638,G__110639,G__110640,G__110641,G__110642,G__110643,G__110644,G__110645));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110587,G__110588) : tailrecursion.hoplon.div.call(null,G__110587,G__110588));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110586) : tailrecursion.hoplon.div.call(null,G__110586));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110585;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110584;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110583;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110582;
}})()], 0)),"",(function (){var _STAR_references_STAR_110716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110718 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110719 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110720 = (function (){var G__110721 = "(fold-right list nil (list 1 2 3))\n";
return (tailrecursion.hoplon.code.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.code.cljs$core$IFn$_invoke$arity$1(G__110721) : tailrecursion.hoplon.code.call(null,G__110721));
})();
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$1(G__110720) : tailrecursion.hoplon.pre.call(null,G__110720));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110719;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110718;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110716;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_110722 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110723 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110724 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110725 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110726 = (function (){var G__110727 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110728 = (function (){var G__110729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110730 = "(";
var G__110731 = (function (){var G__110805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110806 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110805,G__110806) : tailrecursion.hoplon.span.call(null,G__110805,G__110806));
})();
var G__110732 = " ";
var G__110733 = (function (){var G__110807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110808 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110807,G__110808) : tailrecursion.hoplon.span.call(null,G__110807,G__110808));
})();
var G__110734 = (function (){var G__110809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110810 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110809,G__110810) : tailrecursion.hoplon.span.call(null,G__110809,G__110810));
})();
var G__110735 = " (";
var G__110736 = (function (){var G__110811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110812 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110811,G__110812) : tailrecursion.hoplon.span.call(null,G__110811,G__110812));
})();
var G__110737 = (function (){var G__110813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110814 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110813,G__110814) : tailrecursion.hoplon.span.call(null,G__110813,G__110814));
})();
var G__110738 = " ";
var G__110739 = (function (){var G__110815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110816 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110815,G__110816) : tailrecursion.hoplon.span.call(null,G__110815,G__110816));
})();
var G__110740 = " ";
var G__110741 = (function (){var G__110817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110818 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110817,G__110818) : tailrecursion.hoplon.span.call(null,G__110817,G__110818));
})();
var G__110742 = "))\n(";
var G__110743 = (function (){var G__110819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110820 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110819,G__110820) : tailrecursion.hoplon.span.call(null,G__110819,G__110820));
})();
var G__110744 = (function (){var G__110821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110822 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110821,G__110822) : tailrecursion.hoplon.span.call(null,G__110821,G__110822));
})();
var G__110745 = " (";
var G__110746 = (function (){var G__110823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110824 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110823,G__110824) : tailrecursion.hoplon.span.call(null,G__110823,G__110824));
})();
var G__110747 = " ";
var G__110748 = (function (){var G__110825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110826 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110825,G__110826) : tailrecursion.hoplon.span.call(null,G__110825,G__110826));
})();
var G__110749 = (function (){var G__110827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110828 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110827,G__110828) : tailrecursion.hoplon.span.call(null,G__110827,G__110828));
})();
var G__110750 = " (";
var G__110751 = (function (){var G__110829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110830 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110829,G__110830) : tailrecursion.hoplon.span.call(null,G__110829,G__110830));
})();
var G__110752 = (function (){var G__110831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110832 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110831,G__110832) : tailrecursion.hoplon.span.call(null,G__110831,G__110832));
})();
var G__110753 = " ";
var G__110754 = (function (){var G__110833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110834 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110833,G__110834) : tailrecursion.hoplon.span.call(null,G__110833,G__110834));
})();
var G__110755 = ")))\n(";
var G__110756 = (function (){var G__110835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110836 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110835,G__110836) : tailrecursion.hoplon.span.call(null,G__110835,G__110836));
})();
var G__110757 = (function (){var G__110837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110838 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110837,G__110838) : tailrecursion.hoplon.span.call(null,G__110837,G__110838));
})();
var G__110758 = " (";
var G__110759 = (function (){var G__110839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110840 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110839,G__110840) : tailrecursion.hoplon.span.call(null,G__110839,G__110840));
})();
var G__110760 = (function (){var G__110841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110842 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110841,G__110842) : tailrecursion.hoplon.span.call(null,G__110841,G__110842));
})();
var G__110761 = " (";
var G__110762 = (function (){var G__110843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110844 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110843,G__110844) : tailrecursion.hoplon.span.call(null,G__110843,G__110844));
})();
var G__110763 = " ";
var G__110764 = (function (){var G__110845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110846 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110845,G__110846) : tailrecursion.hoplon.span.call(null,G__110845,G__110846));
})();
var G__110765 = (function (){var G__110847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110848 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110847,G__110848) : tailrecursion.hoplon.span.call(null,G__110847,G__110848));
})();
var G__110766 = " (";
var G__110767 = (function (){var G__110849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110850 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110849,G__110850) : tailrecursion.hoplon.span.call(null,G__110849,G__110850));
})();
var G__110768 = (function (){var G__110851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110852 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110851,G__110852) : tailrecursion.hoplon.span.call(null,G__110851,G__110852));
})();
var G__110769 = "))))\n(";
var G__110770 = (function (){var G__110853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110854 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110853,G__110854) : tailrecursion.hoplon.span.call(null,G__110853,G__110854));
})();
var G__110771 = (function (){var G__110855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110856 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110855,G__110856) : tailrecursion.hoplon.span.call(null,G__110855,G__110856));
})();
var G__110772 = " (";
var G__110773 = (function (){var G__110857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110858 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110857,G__110858) : tailrecursion.hoplon.span.call(null,G__110857,G__110858));
})();
var G__110774 = (function (){var G__110859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110860 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110859,G__110860) : tailrecursion.hoplon.span.call(null,G__110859,G__110860));
})();
var G__110775 = " (";
var G__110776 = (function (){var G__110861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110862 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110861,G__110862) : tailrecursion.hoplon.span.call(null,G__110861,G__110862));
})();
var G__110777 = (function (){var G__110863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110864 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110863,G__110864) : tailrecursion.hoplon.span.call(null,G__110863,G__110864));
})();
var G__110778 = " (";
var G__110779 = (function (){var G__110865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110866 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110865,G__110866) : tailrecursion.hoplon.span.call(null,G__110865,G__110866));
})();
var G__110780 = " ";
var G__110781 = (function (){var G__110867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110868 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110867,G__110868) : tailrecursion.hoplon.span.call(null,G__110867,G__110868));
})();
var G__110782 = (function (){var G__110869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110870 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110869,G__110870) : tailrecursion.hoplon.span.call(null,G__110869,G__110870));
})();
var G__110783 = " (";
var G__110784 = (function (){var G__110871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110872 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110871,G__110872) : tailrecursion.hoplon.span.call(null,G__110871,G__110872));
})();
var G__110785 = ")))))\n(";
var G__110786 = (function (){var G__110873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110874 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110873,G__110874) : tailrecursion.hoplon.span.call(null,G__110873,G__110874));
})();
var G__110787 = (function (){var G__110875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110876 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110875,G__110876) : tailrecursion.hoplon.span.call(null,G__110875,G__110876));
})();
var G__110788 = " (";
var G__110789 = (function (){var G__110877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110878 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110877,G__110878) : tailrecursion.hoplon.span.call(null,G__110877,G__110878));
})();
var G__110790 = (function (){var G__110879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110880 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110879,G__110880) : tailrecursion.hoplon.span.call(null,G__110879,G__110880));
})();
var G__110791 = " (";
var G__110792 = (function (){var G__110881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110882 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110881,G__110882) : tailrecursion.hoplon.span.call(null,G__110881,G__110882));
})();
var G__110793 = (function (){var G__110883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110884 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110883,G__110884) : tailrecursion.hoplon.span.call(null,G__110883,G__110884));
})();
var G__110794 = " ";
var G__110795 = (function (){var G__110885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110886 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110885,G__110886) : tailrecursion.hoplon.span.call(null,G__110885,G__110886));
})();
var G__110796 = ")))\n(";
var G__110797 = (function (){var G__110887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110888 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110887,G__110888) : tailrecursion.hoplon.span.call(null,G__110887,G__110888));
})();
var G__110798 = " (";
var G__110799 = (function (){var G__110889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110890 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110889,G__110890) : tailrecursion.hoplon.span.call(null,G__110889,G__110890));
})();
var G__110800 = " (";
var G__110801 = (function (){var G__110891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110892 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110891,G__110892) : tailrecursion.hoplon.span.call(null,G__110891,G__110892));
})();
var G__110802 = " ";
var G__110803 = (function (){var G__110893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110894 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110893,G__110894) : tailrecursion.hoplon.span.call(null,G__110893,G__110894));
})();
var G__110804 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__110729,G__110730,G__110731,G__110732,G__110733,G__110734,G__110735,G__110736,G__110737,G__110738,G__110739,G__110740,G__110741,G__110742,G__110743,G__110744,G__110745,G__110746,G__110747,G__110748,G__110749,G__110750,G__110751,G__110752,G__110753,G__110754,G__110755,G__110756,G__110757,G__110758,G__110759,G__110760,G__110761,G__110762,G__110763,G__110764,G__110765,G__110766,G__110767,G__110768,G__110769,G__110770,G__110771,G__110772,G__110773,G__110774,G__110775,G__110776,G__110777,G__110778,G__110779,G__110780,G__110781,G__110782,G__110783,G__110784,G__110785,G__110786,G__110787,G__110788,G__110789,G__110790,G__110791,G__110792,G__110793,G__110794,G__110795,G__110796,G__110797,G__110798,G__110799,G__110800,G__110801,G__110802,G__110803,G__110804) : tailrecursion.hoplon.pre.call(null,G__110729,G__110730,G__110731,G__110732,G__110733,G__110734,G__110735,G__110736,G__110737,G__110738,G__110739,G__110740,G__110741,G__110742,G__110743,G__110744,G__110745,G__110746,G__110747,G__110748,G__110749,G__110750,G__110751,G__110752,G__110753,G__110754,G__110755,G__110756,G__110757,G__110758,G__110759,G__110760,G__110761,G__110762,G__110763,G__110764,G__110765,G__110766,G__110767,G__110768,G__110769,G__110770,G__110771,G__110772,G__110773,G__110774,G__110775,G__110776,G__110777,G__110778,G__110779,G__110780,G__110781,G__110782,G__110783,G__110784,G__110785,G__110786,G__110787,G__110788,G__110789,G__110790,G__110791,G__110792,G__110793,G__110794,G__110795,G__110796,G__110797,G__110798,G__110799,G__110800,G__110801,G__110802,G__110803,G__110804));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110727,G__110728) : tailrecursion.hoplon.div.call(null,G__110727,G__110728));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110726) : tailrecursion.hoplon.div.call(null,G__110726));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110725;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110724;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110723;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110722;
}})()], 0)),"",(function (){var _STAR_references_STAR_110895 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110896 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110897 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110898 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110899 = (function (){var G__110900 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110901 = (function (){var G__110902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110903 = "(";
var G__110904 = (function (){var G__110916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__110917 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110916,G__110917) : tailrecursion.hoplon.span.call(null,G__110916,G__110917));
})();
var G__110905 = " ";
var G__110906 = (function (){var G__110918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110919 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110918,G__110919) : tailrecursion.hoplon.span.call(null,G__110918,G__110919));
})();
var G__110907 = (function (){var G__110920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__110921 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110920,G__110921) : tailrecursion.hoplon.span.call(null,G__110920,G__110921));
})();
var G__110908 = " (";
var G__110909 = (function (){var G__110922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__110923 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110922,G__110923) : tailrecursion.hoplon.span.call(null,G__110922,G__110923));
})();
var G__110910 = (function (){var G__110924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110925 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110924,G__110925) : tailrecursion.hoplon.span.call(null,G__110924,G__110925));
})();
var G__110911 = " ";
var G__110912 = (function (){var G__110926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110927 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110926,G__110927) : tailrecursion.hoplon.span.call(null,G__110926,G__110927));
})();
var G__110913 = " ";
var G__110914 = (function (){var G__110928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__110929 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__110928,G__110929) : tailrecursion.hoplon.span.call(null,G__110928,G__110929));
})();
var G__110915 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__110902,G__110903,G__110904,G__110905,G__110906,G__110907,G__110908,G__110909,G__110910,G__110911,G__110912,G__110913,G__110914,G__110915) : tailrecursion.hoplon.pre.call(null,G__110902,G__110903,G__110904,G__110905,G__110906,G__110907,G__110908,G__110909,G__110910,G__110911,G__110912,G__110913,G__110914,G__110915));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110900,G__110901) : tailrecursion.hoplon.div.call(null,G__110900,G__110901));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110899) : tailrecursion.hoplon.div.call(null,G__110899));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110898;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110897;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110896;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110895;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_110930 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110931 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_110932 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_110933 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__110934 = (function (){var G__110935 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__110936 = (function (){var G__110937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__110938 = "(";
var G__110939 = (function (){var G__111012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111013 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111012,G__111013) : tailrecursion.hoplon.span.call(null,G__111012,G__111013));
})();
var G__110940 = " ";
var G__110941 = (function (){var G__111014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111015 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111014,G__111015) : tailrecursion.hoplon.span.call(null,G__111014,G__111015));
})();
var G__110942 = (function (){var G__111016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111017 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111016,G__111017) : tailrecursion.hoplon.span.call(null,G__111016,G__111017));
})();
var G__110943 = " (";
var G__110944 = (function (){var G__111018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111019 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111018,G__111019) : tailrecursion.hoplon.span.call(null,G__111018,G__111019));
})();
var G__110945 = (function (){var G__111020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111021 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111020,G__111021) : tailrecursion.hoplon.span.call(null,G__111020,G__111021));
})();
var G__110946 = " ";
var G__110947 = (function (){var G__111022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111023 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111022,G__111023) : tailrecursion.hoplon.span.call(null,G__111022,G__111023));
})();
var G__110948 = " ";
var G__110949 = (function (){var G__111024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111025 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111024,G__111025) : tailrecursion.hoplon.span.call(null,G__111024,G__111025));
})();
var G__110950 = "))\n(";
var G__110951 = (function (){var G__111026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__111027 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111026,G__111027) : tailrecursion.hoplon.span.call(null,G__111026,G__111027));
})();
var G__110952 = (function (){var G__111028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111029 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111028,G__111029) : tailrecursion.hoplon.span.call(null,G__111028,G__111029));
})();
var G__110953 = " (";
var G__110954 = (function (){var G__111030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111031 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111030,G__111031) : tailrecursion.hoplon.span.call(null,G__111030,G__111031));
})();
var G__110955 = (function (){var G__111032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111033 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111032,G__111033) : tailrecursion.hoplon.span.call(null,G__111032,G__111033));
})();
var G__110956 = " ";
var G__110957 = (function (){var G__111034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111035 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111034,G__111035) : tailrecursion.hoplon.span.call(null,G__111034,G__111035));
})();
var G__110958 = " ";
var G__110959 = (function (){var G__111036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111037 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111036,G__111037) : tailrecursion.hoplon.span.call(null,G__111036,G__111037));
})();
var G__110960 = "))\n(";
var G__110961 = (function (){var G__111038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__111039 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111038,G__111039) : tailrecursion.hoplon.span.call(null,G__111038,G__111039));
})();
var G__110962 = "(";
var G__110963 = (function (){var G__111040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111041 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111040,G__111041) : tailrecursion.hoplon.span.call(null,G__111040,G__111041));
})();
var G__110964 = (function (){var G__111042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111043 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111042,G__111043) : tailrecursion.hoplon.span.call(null,G__111042,G__111043));
})();
var G__110965 = " ";
var G__110966 = (function (){var G__111044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111045 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111044,G__111045) : tailrecursion.hoplon.span.call(null,G__111044,G__111045));
})();
var G__110967 = ") (";
var G__110968 = (function (){var G__111046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111047 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111046,G__111047) : tailrecursion.hoplon.span.call(null,G__111046,G__111047));
})();
var G__110969 = (function (){var G__111048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111049 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111048,G__111049) : tailrecursion.hoplon.span.call(null,G__111048,G__111049));
})();
var G__110970 = " ";
var G__110971 = (function (){var G__111050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111051 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111050,G__111051) : tailrecursion.hoplon.span.call(null,G__111050,G__111051));
})();
var G__110972 = "))\n(";
var G__110973 = (function (){var G__111052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__111053 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111052,G__111053) : tailrecursion.hoplon.span.call(null,G__111052,G__111053));
})();
var G__110974 = "(";
var G__110975 = (function (){var G__111054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111055 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111054,G__111055) : tailrecursion.hoplon.span.call(null,G__111054,G__111055));
})();
var G__110976 = "(";
var G__110977 = (function (){var G__111056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111057 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111056,G__111057) : tailrecursion.hoplon.span.call(null,G__111056,G__111057));
})();
var G__110978 = (function (){var G__111058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111059 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111058,G__111059) : tailrecursion.hoplon.span.call(null,G__111058,G__111059));
})();
var G__110979 = " ";
var G__110980 = (function (){var G__111060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111061 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111060,G__111061) : tailrecursion.hoplon.span.call(null,G__111060,G__111061));
})();
var G__110981 = ") ";
var G__110982 = (function (){var G__111062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111063 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111062,G__111063) : tailrecursion.hoplon.span.call(null,G__111062,G__111063));
})();
var G__110983 = ") (";
var G__110984 = (function (){var G__111064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111065 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111064,G__111065) : tailrecursion.hoplon.span.call(null,G__111064,G__111065));
})();
var G__110985 = (function (){var G__111066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111067 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111066,G__111067) : tailrecursion.hoplon.span.call(null,G__111066,G__111067));
})();
var G__110986 = "))\n(";
var G__110987 = (function (){var G__111068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__111069 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111068,G__111069) : tailrecursion.hoplon.span.call(null,G__111068,G__111069));
})();
var G__110988 = "(";
var G__110989 = (function (){var G__111070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111071 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111070,G__111071) : tailrecursion.hoplon.span.call(null,G__111070,G__111071));
})();
var G__110990 = "(";
var G__110991 = (function (){var G__111072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111073 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111072,G__111073) : tailrecursion.hoplon.span.call(null,G__111072,G__111073));
})();
var G__110992 = "(";
var G__110993 = (function (){var G__111074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111075 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111074,G__111075) : tailrecursion.hoplon.span.call(null,G__111074,G__111075));
})();
var G__110994 = (function (){var G__111076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111077 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111076,G__111077) : tailrecursion.hoplon.span.call(null,G__111076,G__111077));
})();
var G__110995 = " ";
var G__110996 = (function (){var G__111078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111079 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111078,G__111079) : tailrecursion.hoplon.span.call(null,G__111078,G__111079));
})();
var G__110997 = ") ";
var G__110998 = (function (){var G__111080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111081 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111080,G__111081) : tailrecursion.hoplon.span.call(null,G__111080,G__111081));
})();
var G__110999 = ") ";
var G__111000 = (function (){var G__111082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111083 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111082,G__111083) : tailrecursion.hoplon.span.call(null,G__111082,G__111083));
})();
var G__111001 = ") (";
var G__111002 = (function (){var G__111084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111085 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111084,G__111085) : tailrecursion.hoplon.span.call(null,G__111084,G__111085));
})();
var G__111003 = "))\n(((";
var G__111004 = (function (){var G__111086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111087 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111086,G__111087) : tailrecursion.hoplon.span.call(null,G__111086,G__111087));
})();
var G__111005 = " ";
var G__111006 = (function (){var G__111088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111089 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111088,G__111089) : tailrecursion.hoplon.span.call(null,G__111088,G__111089));
})();
var G__111007 = ") ";
var G__111008 = (function (){var G__111090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111091 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111090,G__111091) : tailrecursion.hoplon.span.call(null,G__111090,G__111091));
})();
var G__111009 = ") ";
var G__111010 = (function (){var G__111092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111093 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111092,G__111093) : tailrecursion.hoplon.span.call(null,G__111092,G__111093));
})();
var G__111011 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$75 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$75(G__110937,G__110938,G__110939,G__110940,G__110941,G__110942,G__110943,G__110944,G__110945,G__110946,G__110947,G__110948,G__110949,G__110950,G__110951,G__110952,G__110953,G__110954,G__110955,G__110956,G__110957,G__110958,G__110959,G__110960,G__110961,G__110962,G__110963,G__110964,G__110965,G__110966,G__110967,G__110968,G__110969,G__110970,G__110971,G__110972,G__110973,G__110974,G__110975,G__110976,G__110977,G__110978,G__110979,G__110980,G__110981,G__110982,G__110983,G__110984,G__110985,G__110986,G__110987,G__110988,G__110989,G__110990,G__110991,G__110992,G__110993,G__110994,G__110995,G__110996,G__110997,G__110998,G__110999,G__111000,G__111001,G__111002,G__111003,G__111004,G__111005,G__111006,G__111007,G__111008,G__111009,G__111010,G__111011) : tailrecursion.hoplon.pre.call(null,G__110937,G__110938,G__110939,G__110940,G__110941,G__110942,G__110943,G__110944,G__110945,G__110946,G__110947,G__110948,G__110949,G__110950,G__110951,G__110952,G__110953,G__110954,G__110955,G__110956,G__110957,G__110958,G__110959,G__110960,G__110961,G__110962,G__110963,G__110964,G__110965,G__110966,G__110967,G__110968,G__110969,G__110970,G__110971,G__110972,G__110973,G__110974,G__110975,G__110976,G__110977,G__110978,G__110979,G__110980,G__110981,G__110982,G__110983,G__110984,G__110985,G__110986,G__110987,G__110988,G__110989,G__110990,G__110991,G__110992,G__110993,G__110994,G__110995,G__110996,G__110997,G__110998,G__110999,G__111000,G__111001,G__111002,G__111003,G__111004,G__111005,G__111006,G__111007,G__111008,G__111009,G__111010,G__111011));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__110935,G__110936) : tailrecursion.hoplon.div.call(null,G__110935,G__110936));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__110934) : tailrecursion.hoplon.div.call(null,G__110934));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110933;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110932;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_110931;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_110930;
}})()], 0)),"",(function (){var _STAR_references_STAR_111094 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111095 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111096 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111097 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111098 = (function (){var G__111099 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111100 = (function (){var G__111101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111102 = "(";
var G__111103 = (function (){var G__111115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111116 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111115,G__111116) : tailrecursion.hoplon.span.call(null,G__111115,G__111116));
})();
var G__111104 = " ";
var G__111105 = (function (){var G__111117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111118 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111117,G__111118) : tailrecursion.hoplon.span.call(null,G__111117,G__111118));
})();
var G__111106 = (function (){var G__111119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111120 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111119,G__111120) : tailrecursion.hoplon.span.call(null,G__111119,G__111120));
})();
var G__111107 = " (";
var G__111108 = (function (){var G__111121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111122 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111121,G__111122) : tailrecursion.hoplon.span.call(null,G__111121,G__111122));
})();
var G__111109 = (function (){var G__111123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111124 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111123,G__111124) : tailrecursion.hoplon.span.call(null,G__111123,G__111124));
})();
var G__111110 = " ";
var G__111111 = (function (){var G__111125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111126 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111125,G__111126) : tailrecursion.hoplon.span.call(null,G__111125,G__111126));
})();
var G__111112 = " ";
var G__111113 = (function (){var G__111127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111128 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111127,G__111128) : tailrecursion.hoplon.span.call(null,G__111127,G__111128));
})();
var G__111114 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__111101,G__111102,G__111103,G__111104,G__111105,G__111106,G__111107,G__111108,G__111109,G__111110,G__111111,G__111112,G__111113,G__111114) : tailrecursion.hoplon.pre.call(null,G__111101,G__111102,G__111103,G__111104,G__111105,G__111106,G__111107,G__111108,G__111109,G__111110,G__111111,G__111112,G__111113,G__111114));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111099,G__111100) : tailrecursion.hoplon.div.call(null,G__111099,G__111100));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111098) : tailrecursion.hoplon.div.call(null,G__111098));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111097;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111096;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111095;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111094;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_111129 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111130 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111131 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111132 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111133 = (function (){var G__111134 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111135 = (function (){var G__111136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111137 = "(";
var G__111138 = (function (){var G__111210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111211 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111210,G__111211) : tailrecursion.hoplon.span.call(null,G__111210,G__111211));
})();
var G__111139 = " ";
var G__111140 = (function (){var G__111212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111213 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111212,G__111213) : tailrecursion.hoplon.span.call(null,G__111212,G__111213));
})();
var G__111141 = (function (){var G__111214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111215 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111214,G__111215) : tailrecursion.hoplon.span.call(null,G__111214,G__111215));
})();
var G__111142 = " (";
var G__111143 = (function (){var G__111216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111217 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111216,G__111217) : tailrecursion.hoplon.span.call(null,G__111216,G__111217));
})();
var G__111144 = (function (){var G__111218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111219 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111218,G__111219) : tailrecursion.hoplon.span.call(null,G__111218,G__111219));
})();
var G__111145 = " ";
var G__111146 = (function (){var G__111220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111221 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111220,G__111221) : tailrecursion.hoplon.span.call(null,G__111220,G__111221));
})();
var G__111147 = " ";
var G__111148 = (function (){var G__111222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111223 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111222,G__111223) : tailrecursion.hoplon.span.call(null,G__111222,G__111223));
})();
var G__111149 = "))\n(";
var G__111150 = (function (){var G__111224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111225 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111224,G__111225) : tailrecursion.hoplon.span.call(null,G__111224,G__111225));
})();
var G__111151 = (function (){var G__111226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111227 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111226,G__111227) : tailrecursion.hoplon.span.call(null,G__111226,G__111227));
})();
var G__111152 = " (";
var G__111153 = (function (){var G__111228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111229 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111228,G__111229) : tailrecursion.hoplon.span.call(null,G__111228,G__111229));
})();
var G__111154 = " ";
var G__111155 = (function (){var G__111230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111231 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111230,G__111231) : tailrecursion.hoplon.span.call(null,G__111230,G__111231));
})();
var G__111156 = (function (){var G__111232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111233 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111232,G__111233) : tailrecursion.hoplon.span.call(null,G__111232,G__111233));
})();
var G__111157 = " (";
var G__111158 = (function (){var G__111234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111235 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111234,G__111235) : tailrecursion.hoplon.span.call(null,G__111234,G__111235));
})();
var G__111159 = (function (){var G__111236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111237 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111236,G__111237) : tailrecursion.hoplon.span.call(null,G__111236,G__111237));
})();
var G__111160 = " ";
var G__111161 = (function (){var G__111238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111239 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111238,G__111239) : tailrecursion.hoplon.span.call(null,G__111238,G__111239));
})();
var G__111162 = ")))\n(";
var G__111163 = (function (){var G__111240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111241 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111240,G__111241) : tailrecursion.hoplon.span.call(null,G__111240,G__111241));
})();
var G__111164 = (function (){var G__111242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111243 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111242,G__111243) : tailrecursion.hoplon.span.call(null,G__111242,G__111243));
})();
var G__111165 = " (";
var G__111166 = (function (){var G__111244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111245 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111244,G__111245) : tailrecursion.hoplon.span.call(null,G__111244,G__111245));
})();
var G__111167 = (function (){var G__111246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111247 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111246,G__111247) : tailrecursion.hoplon.span.call(null,G__111246,G__111247));
})();
var G__111168 = " (";
var G__111169 = (function (){var G__111248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111249 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111248,G__111249) : tailrecursion.hoplon.span.call(null,G__111248,G__111249));
})();
var G__111170 = " ";
var G__111171 = (function (){var G__111250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111251 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111250,G__111251) : tailrecursion.hoplon.span.call(null,G__111250,G__111251));
})();
var G__111172 = (function (){var G__111252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111253 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111252,G__111253) : tailrecursion.hoplon.span.call(null,G__111252,G__111253));
})();
var G__111173 = " (";
var G__111174 = (function (){var G__111254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111255 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111254,G__111255) : tailrecursion.hoplon.span.call(null,G__111254,G__111255));
})();
var G__111175 = (function (){var G__111256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111257 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111256,G__111257) : tailrecursion.hoplon.span.call(null,G__111256,G__111257));
})();
var G__111176 = "))))\n(";
var G__111177 = (function (){var G__111258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111259 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111258,G__111259) : tailrecursion.hoplon.span.call(null,G__111258,G__111259));
})();
var G__111178 = (function (){var G__111260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111261 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111260,G__111261) : tailrecursion.hoplon.span.call(null,G__111260,G__111261));
})();
var G__111179 = " (";
var G__111180 = (function (){var G__111262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111263 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111262,G__111263) : tailrecursion.hoplon.span.call(null,G__111262,G__111263));
})();
var G__111181 = (function (){var G__111264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111265 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111264,G__111265) : tailrecursion.hoplon.span.call(null,G__111264,G__111265));
})();
var G__111182 = " (";
var G__111183 = (function (){var G__111266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111267 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111266,G__111267) : tailrecursion.hoplon.span.call(null,G__111266,G__111267));
})();
var G__111184 = (function (){var G__111268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111269 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111268,G__111269) : tailrecursion.hoplon.span.call(null,G__111268,G__111269));
})();
var G__111185 = " (";
var G__111186 = (function (){var G__111270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111271 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111270,G__111271) : tailrecursion.hoplon.span.call(null,G__111270,G__111271));
})();
var G__111187 = " ";
var G__111188 = (function (){var G__111272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111273 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111272,G__111273) : tailrecursion.hoplon.span.call(null,G__111272,G__111273));
})();
var G__111189 = (function (){var G__111274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111275 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111274,G__111275) : tailrecursion.hoplon.span.call(null,G__111274,G__111275));
})();
var G__111190 = " (";
var G__111191 = (function (){var G__111276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111277 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111276,G__111277) : tailrecursion.hoplon.span.call(null,G__111276,G__111277));
})();
var G__111192 = ")))))\n(";
var G__111193 = (function (){var G__111278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111279 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111278,G__111279) : tailrecursion.hoplon.span.call(null,G__111278,G__111279));
})();
var G__111194 = (function (){var G__111280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111281 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111280,G__111281) : tailrecursion.hoplon.span.call(null,G__111280,G__111281));
})();
var G__111195 = " (";
var G__111196 = (function (){var G__111282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111283 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111282,G__111283) : tailrecursion.hoplon.span.call(null,G__111282,G__111283));
})();
var G__111197 = (function (){var G__111284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111285 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111284,G__111285) : tailrecursion.hoplon.span.call(null,G__111284,G__111285));
})();
var G__111198 = " (";
var G__111199 = (function (){var G__111286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111287 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111286,G__111287) : tailrecursion.hoplon.span.call(null,G__111286,G__111287));
})();
var G__111200 = (function (){var G__111288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111289 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111288,G__111289) : tailrecursion.hoplon.span.call(null,G__111288,G__111289));
})();
var G__111201 = " ";
var G__111202 = (function (){var G__111290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111291 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111290,G__111291) : tailrecursion.hoplon.span.call(null,G__111290,G__111291));
})();
var G__111203 = ")))\n(";
var G__111204 = (function (){var G__111292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111293 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111292,G__111293) : tailrecursion.hoplon.span.call(null,G__111292,G__111293));
})();
var G__111205 = " ";
var G__111206 = (function (){var G__111294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111295 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111294,G__111295) : tailrecursion.hoplon.span.call(null,G__111294,G__111295));
})();
var G__111207 = " ";
var G__111208 = (function (){var G__111296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111297 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111296,G__111297) : tailrecursion.hoplon.span.call(null,G__111296,G__111297));
})();
var G__111209 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74(G__111136,G__111137,G__111138,G__111139,G__111140,G__111141,G__111142,G__111143,G__111144,G__111145,G__111146,G__111147,G__111148,G__111149,G__111150,G__111151,G__111152,G__111153,G__111154,G__111155,G__111156,G__111157,G__111158,G__111159,G__111160,G__111161,G__111162,G__111163,G__111164,G__111165,G__111166,G__111167,G__111168,G__111169,G__111170,G__111171,G__111172,G__111173,G__111174,G__111175,G__111176,G__111177,G__111178,G__111179,G__111180,G__111181,G__111182,G__111183,G__111184,G__111185,G__111186,G__111187,G__111188,G__111189,G__111190,G__111191,G__111192,G__111193,G__111194,G__111195,G__111196,G__111197,G__111198,G__111199,G__111200,G__111201,G__111202,G__111203,G__111204,G__111205,G__111206,G__111207,G__111208,G__111209) : tailrecursion.hoplon.pre.call(null,G__111136,G__111137,G__111138,G__111139,G__111140,G__111141,G__111142,G__111143,G__111144,G__111145,G__111146,G__111147,G__111148,G__111149,G__111150,G__111151,G__111152,G__111153,G__111154,G__111155,G__111156,G__111157,G__111158,G__111159,G__111160,G__111161,G__111162,G__111163,G__111164,G__111165,G__111166,G__111167,G__111168,G__111169,G__111170,G__111171,G__111172,G__111173,G__111174,G__111175,G__111176,G__111177,G__111178,G__111179,G__111180,G__111181,G__111182,G__111183,G__111184,G__111185,G__111186,G__111187,G__111188,G__111189,G__111190,G__111191,G__111192,G__111193,G__111194,G__111195,G__111196,G__111197,G__111198,G__111199,G__111200,G__111201,G__111202,G__111203,G__111204,G__111205,G__111206,G__111207,G__111208,G__111209));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111134,G__111135) : tailrecursion.hoplon.div.call(null,G__111134,G__111135));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111133) : tailrecursion.hoplon.div.call(null,G__111133));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111132;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111131;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111130;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111129;
}})()], 0)),"",(function (){var _STAR_references_STAR_111298 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111299 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111300 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111301 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111302 = (function (){var G__111303 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111304 = (function (){var G__111305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111306 = "(";
var G__111307 = (function (){var G__111319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111320 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111319,G__111320) : tailrecursion.hoplon.span.call(null,G__111319,G__111320));
})();
var G__111308 = " ";
var G__111309 = (function (){var G__111321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111322 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111321,G__111322) : tailrecursion.hoplon.span.call(null,G__111321,G__111322));
})();
var G__111310 = (function (){var G__111323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111324 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111323,G__111324) : tailrecursion.hoplon.span.call(null,G__111323,G__111324));
})();
var G__111311 = " (";
var G__111312 = (function (){var G__111325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111326 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111325,G__111326) : tailrecursion.hoplon.span.call(null,G__111325,G__111326));
})();
var G__111313 = (function (){var G__111327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111328 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111327,G__111328) : tailrecursion.hoplon.span.call(null,G__111327,G__111328));
})();
var G__111314 = " ";
var G__111315 = (function (){var G__111329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111330 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111329,G__111330) : tailrecursion.hoplon.span.call(null,G__111329,G__111330));
})();
var G__111316 = " ";
var G__111317 = (function (){var G__111331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111332 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111331,G__111332) : tailrecursion.hoplon.span.call(null,G__111331,G__111332));
})();
var G__111318 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__111305,G__111306,G__111307,G__111308,G__111309,G__111310,G__111311,G__111312,G__111313,G__111314,G__111315,G__111316,G__111317,G__111318) : tailrecursion.hoplon.pre.call(null,G__111305,G__111306,G__111307,G__111308,G__111309,G__111310,G__111311,G__111312,G__111313,G__111314,G__111315,G__111316,G__111317,G__111318));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111303,G__111304) : tailrecursion.hoplon.div.call(null,G__111303,G__111304));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111302) : tailrecursion.hoplon.div.call(null,G__111302));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111301;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111300;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111299;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111298;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_111333 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111334 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111335 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111336 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111337 = (function (){var G__111338 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111339 = (function (){var G__111340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111341 = "(";
var G__111342 = (function (){var G__111396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111397 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111396,G__111397) : tailrecursion.hoplon.span.call(null,G__111396,G__111397));
})();
var G__111343 = " ";
var G__111344 = (function (){var G__111398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111399 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111398,G__111399) : tailrecursion.hoplon.span.call(null,G__111398,G__111399));
})();
var G__111345 = (function (){var G__111400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111401 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111400,G__111401) : tailrecursion.hoplon.span.call(null,G__111400,G__111401));
})();
var G__111346 = " (";
var G__111347 = (function (){var G__111402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111403 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111402,G__111403) : tailrecursion.hoplon.span.call(null,G__111402,G__111403));
})();
var G__111348 = (function (){var G__111404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111405 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111404,G__111405) : tailrecursion.hoplon.span.call(null,G__111404,G__111405));
})();
var G__111349 = " ";
var G__111350 = (function (){var G__111406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111407 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111406,G__111407) : tailrecursion.hoplon.span.call(null,G__111406,G__111407));
})();
var G__111351 = " ";
var G__111352 = (function (){var G__111408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111409 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111408,G__111409) : tailrecursion.hoplon.span.call(null,G__111408,G__111409));
})();
var G__111353 = "))\n(";
var G__111354 = (function (){var G__111410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__111411 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111410,G__111411) : tailrecursion.hoplon.span.call(null,G__111410,G__111411));
})();
var G__111355 = (function (){var G__111412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111413 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111412,G__111413) : tailrecursion.hoplon.span.call(null,G__111412,G__111413));
})();
var G__111356 = " (";
var G__111357 = (function (){var G__111414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111415 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111414,G__111415) : tailrecursion.hoplon.span.call(null,G__111414,G__111415));
})();
var G__111358 = (function (){var G__111416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111417 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111416,G__111417) : tailrecursion.hoplon.span.call(null,G__111416,G__111417));
})();
var G__111359 = " ";
var G__111360 = (function (){var G__111418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111419 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111418,G__111419) : tailrecursion.hoplon.span.call(null,G__111418,G__111419));
})();
var G__111361 = " ";
var G__111362 = (function (){var G__111420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111421 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111420,G__111421) : tailrecursion.hoplon.span.call(null,G__111420,G__111421));
})();
var G__111363 = "))\n(";
var G__111364 = (function (){var G__111422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__111423 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111422,G__111423) : tailrecursion.hoplon.span.call(null,G__111422,G__111423));
})();
var G__111365 = "(";
var G__111366 = (function (){var G__111424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111425 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111424,G__111425) : tailrecursion.hoplon.span.call(null,G__111424,G__111425));
})();
var G__111367 = (function (){var G__111426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111427 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111426,G__111427) : tailrecursion.hoplon.span.call(null,G__111426,G__111427));
})();
var G__111368 = " ";
var G__111369 = (function (){var G__111428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111429 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111428,G__111429) : tailrecursion.hoplon.span.call(null,G__111428,G__111429));
})();
var G__111370 = ") (";
var G__111371 = (function (){var G__111430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111431 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111430,G__111431) : tailrecursion.hoplon.span.call(null,G__111430,G__111431));
})();
var G__111372 = (function (){var G__111432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111433 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111432,G__111433) : tailrecursion.hoplon.span.call(null,G__111432,G__111433));
})();
var G__111373 = " ";
var G__111374 = (function (){var G__111434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111435 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111434,G__111435) : tailrecursion.hoplon.span.call(null,G__111434,G__111435));
})();
var G__111375 = "))\n";
var G__111376 = (function (){var G__111436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111437 = "java.lang.IllegalArgumentException";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111436,G__111437) : tailrecursion.hoplon.span.call(null,G__111436,G__111437));
})();
var G__111377 = (function (){var G__111438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"border: 1px solid #FF0000"], null);
var G__111439 = ":";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111438,G__111439) : tailrecursion.hoplon.span.call(null,G__111438,G__111439));
})();
var G__111378 = " ";
var G__111379 = (function (){var G__111440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111441 = "Don't";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111440,G__111441) : tailrecursion.hoplon.span.call(null,G__111440,G__111441));
})();
var G__111380 = " ";
var G__111381 = (function (){var G__111442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111443 = "know";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111442,G__111443) : tailrecursion.hoplon.span.call(null,G__111442,G__111443));
})();
var G__111382 = " ";
var G__111383 = (function (){var G__111444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111445 = "how";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111444,G__111445) : tailrecursion.hoplon.span.call(null,G__111444,G__111445));
})();
var G__111384 = " ";
var G__111385 = (function (){var G__111446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111447 = "to";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111446,G__111447) : tailrecursion.hoplon.span.call(null,G__111446,G__111447));
})();
var G__111386 = " ";
var G__111387 = (function (){var G__111448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111449 = "create";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111448,G__111449) : tailrecursion.hoplon.span.call(null,G__111448,G__111449));
})();
var G__111388 = " ";
var G__111389 = (function (){var G__111450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111451 = "ISeq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111450,G__111451) : tailrecursion.hoplon.span.call(null,G__111450,G__111451));
})();
var G__111390 = " ";
var G__111391 = (function (){var G__111452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111453 = "from";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111452,G__111453) : tailrecursion.hoplon.span.call(null,G__111452,G__111453));
})();
var G__111392 = (function (){var G__111454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"border: 1px solid #FF0000"], null);
var G__111455 = ":";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111454,G__111455) : tailrecursion.hoplon.span.call(null,G__111454,G__111455));
})();
var G__111393 = " ";
var G__111394 = (function (){var G__111456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111457 = "java.lang.Long";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111456,G__111457) : tailrecursion.hoplon.span.call(null,G__111456,G__111457));
})();
var G__111395 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__111340,G__111341,G__111342,G__111343,G__111344,G__111345,G__111346,G__111347,G__111348,G__111349,G__111350,G__111351,G__111352,G__111353,G__111354,G__111355,G__111356,G__111357,G__111358,G__111359,G__111360,G__111361,G__111362,G__111363,G__111364,G__111365,G__111366,G__111367,G__111368,G__111369,G__111370,G__111371,G__111372,G__111373,G__111374,G__111375,G__111376,G__111377,G__111378,G__111379,G__111380,G__111381,G__111382,G__111383,G__111384,G__111385,G__111386,G__111387,G__111388,G__111389,G__111390,G__111391,G__111392,G__111393,G__111394,G__111395) : tailrecursion.hoplon.pre.call(null,G__111340,G__111341,G__111342,G__111343,G__111344,G__111345,G__111346,G__111347,G__111348,G__111349,G__111350,G__111351,G__111352,G__111353,G__111354,G__111355,G__111356,G__111357,G__111358,G__111359,G__111360,G__111361,G__111362,G__111363,G__111364,G__111365,G__111366,G__111367,G__111368,G__111369,G__111370,G__111371,G__111372,G__111373,G__111374,G__111375,G__111376,G__111377,G__111378,G__111379,G__111380,G__111381,G__111382,G__111383,G__111384,G__111385,G__111386,G__111387,G__111388,G__111389,G__111390,G__111391,G__111392,G__111393,G__111394,G__111395));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111338,G__111339) : tailrecursion.hoplon.div.call(null,G__111338,G__111339));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111337) : tailrecursion.hoplon.div.call(null,G__111337));
})(),(function (){var G__111458 = cljs.core.PersistentArrayMap.EMPTY;
var G__111459 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Why did that happen?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111458,G__111459) : tailrecursion.hoplon.markdown.para_node.call(null,G__111458,G__111459));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111336;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111335;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111334;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111333;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_111460 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111461 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111462 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111463 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111464 = cljs.core.PersistentArrayMap.EMPTY;
var G__111465 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Because the second argument to ",(function (){var G__111466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__111467 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111466,G__111467) : tailrecursion.hoplon.markdown.code_node.call(null,G__111466,G__111467));
})()," must be a sequential object! Remember the box and pointer drawing? The purpose of ",(function (){var G__111468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__111469 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111468,G__111469) : tailrecursion.hoplon.markdown.code_node.call(null,G__111468,G__111469));
})()," is to create linked lists (like the ones depicted in those figures)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111464,G__111465) : tailrecursion.hoplon.markdown.para_node.call(null,G__111464,G__111465));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111463;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111462;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111461;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111460;
}})()], 0))], 0)),"",(function (){var _STAR_references_STAR_111470 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111471 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111472 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111473 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111474 = cljs.core.PersistentArrayMap.EMPTY;
var G__111475 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give a property that ",(function (){var G__111476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__111477 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111476,G__111477) : tailrecursion.hoplon.markdown.code_node.call(null,G__111476,G__111477));
})()," should satisfy to guarantee that ",(function (){var G__111478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__111479 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111478,G__111479) : tailrecursion.hoplon.markdown.code_node.call(null,G__111478,G__111479));
})()," and ",(function (){var G__111480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__111481 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111480,G__111481) : tailrecursion.hoplon.markdown.code_node.call(null,G__111480,G__111481));
})()," will produce the same values for any sequence."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111474,G__111475) : tailrecursion.hoplon.markdown.para_node.call(null,G__111474,G__111475));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111473;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111472;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111471;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111470;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_111482 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111483 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_111484 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_111485 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__111486 = cljs.core.PersistentArrayMap.EMPTY;
var G__111487 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__111488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111489 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111488,G__111489) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111488,G__111489));
})(),"s take a simple example: ",(function (){var G__111490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a))"], null);
var G__111491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111490,G__111491) : tailrecursion.hoplon.markdown.code_node.call(null,G__111490,G__111491));
})()," unfolds as,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111486,G__111487) : tailrecursion.hoplon.markdown.para_node.call(null,G__111486,G__111487));
})(),(function (){var G__111492 = (function (){var G__111493 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111494 = (function (){var G__111495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111496 = "(";
var G__111497 = (function (){var G__111503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111504 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111503,G__111504) : tailrecursion.hoplon.span.call(null,G__111503,G__111504));
})();
var G__111498 = " ";
var G__111499 = (function (){var G__111505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111506 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111505,G__111506) : tailrecursion.hoplon.span.call(null,G__111505,G__111506));
})();
var G__111500 = " ";
var G__111501 = (function (){var G__111507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111508 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111507,G__111508) : tailrecursion.hoplon.span.call(null,G__111507,G__111508));
})();
var G__111502 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__111495,G__111496,G__111497,G__111498,G__111499,G__111500,G__111501,G__111502) : tailrecursion.hoplon.pre.call(null,G__111495,G__111496,G__111497,G__111498,G__111499,G__111500,G__111501,G__111502));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111493,G__111494) : tailrecursion.hoplon.div.call(null,G__111493,G__111494));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111492) : tailrecursion.hoplon.div.call(null,G__111492));
})(),(function (){var G__111509 = cljs.core.PersistentArrayMap.EMPTY;
var G__111510 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And ",(function (){var G__111511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-right op init (list a))"], null);
var G__111512 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111511,G__111512) : tailrecursion.hoplon.markdown.code_node.call(null,G__111511,G__111512));
})()," unfolds to:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111509,G__111510) : tailrecursion.hoplon.markdown.para_node.call(null,G__111509,G__111510));
})(),(function (){var G__111513 = (function (){var G__111514 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111515 = (function (){var G__111516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111517 = "(";
var G__111518 = (function (){var G__111524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111525 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111524,G__111525) : tailrecursion.hoplon.span.call(null,G__111524,G__111525));
})();
var G__111519 = " ";
var G__111520 = (function (){var G__111526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111527 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111526,G__111527) : tailrecursion.hoplon.span.call(null,G__111526,G__111527));
})();
var G__111521 = " ";
var G__111522 = (function (){var G__111528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111529 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111528,G__111529) : tailrecursion.hoplon.span.call(null,G__111528,G__111529));
})();
var G__111523 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__111516,G__111517,G__111518,G__111519,G__111520,G__111521,G__111522,G__111523) : tailrecursion.hoplon.pre.call(null,G__111516,G__111517,G__111518,G__111519,G__111520,G__111521,G__111522,G__111523));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111514,G__111515) : tailrecursion.hoplon.div.call(null,G__111514,G__111515));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111513) : tailrecursion.hoplon.div.call(null,G__111513));
})(),(function (){var G__111530 = cljs.core.PersistentArrayMap.EMPTY;
var G__111531 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that we need ",(function (){var G__111532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__111533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111532,G__111533) : tailrecursion.hoplon.markdown.code_node.call(null,G__111532,G__111533));
})()," to be commutative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111530,G__111531) : tailrecursion.hoplon.markdown.para_node.call(null,G__111530,G__111531));
})(),(function (){var G__111534 = cljs.core.PersistentArrayMap.EMPTY;
var G__111535 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__111536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111536,G__111537) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111536,G__111537));
})(),"s consider a slightly more convoluted example where ",(function (){var G__111538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__111539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111538,G__111539) : tailrecursion.hoplon.markdown.code_node.call(null,G__111538,G__111539));
})()," is commutative (to see whether there are any further requirements on ",(function (){var G__111540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__111541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111540,G__111541) : tailrecursion.hoplon.markdown.code_node.call(null,G__111540,G__111541));
})(),"). Let",(function (){var G__111542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111542,G__111543) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111542,G__111543));
})(),"s consider ",(function (){var G__111544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-right op init (list a b))"], null);
var G__111545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111544,G__111545) : tailrecursion.hoplon.markdown.code_node.call(null,G__111544,G__111545));
})()," and see if we can get it in the same form as ",(function (){var G__111546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a b))"], null);
var G__111547 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111546,G__111547) : tailrecursion.hoplon.markdown.code_node.call(null,G__111546,G__111547));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111534,G__111535) : tailrecursion.hoplon.markdown.para_node.call(null,G__111534,G__111535));
})(),(function (){var G__111548 = (function (){var G__111549 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111550 = (function (){var G__111551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111552 = "(";
var G__111553 = (function (){var G__111584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111585 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111584,G__111585) : tailrecursion.hoplon.span.call(null,G__111584,G__111585));
})();
var G__111554 = " ";
var G__111555 = (function (){var G__111586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111587 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111586,G__111587) : tailrecursion.hoplon.span.call(null,G__111586,G__111587));
})();
var G__111556 = " ";
var G__111557 = (function (){var G__111588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111589 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111588,G__111589) : tailrecursion.hoplon.span.call(null,G__111588,G__111589));
})();
var G__111558 = " (";
var G__111559 = (function (){var G__111590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__111591 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111590,G__111591) : tailrecursion.hoplon.span.call(null,G__111590,G__111591));
})();
var G__111560 = (function (){var G__111592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111593 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111592,G__111593) : tailrecursion.hoplon.span.call(null,G__111592,G__111593));
})();
var G__111561 = " ";
var G__111562 = (function (){var G__111594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111595 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111594,G__111595) : tailrecursion.hoplon.span.call(null,G__111594,G__111595));
})();
var G__111563 = "))\n(";
var G__111564 = (function (){var G__111596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111597 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111596,G__111597) : tailrecursion.hoplon.span.call(null,G__111596,G__111597));
})();
var G__111565 = " ";
var G__111566 = (function (){var G__111598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111599 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111598,G__111599) : tailrecursion.hoplon.span.call(null,G__111598,G__111599));
})();
var G__111567 = " (";
var G__111568 = (function (){var G__111600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111601 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111600,G__111601) : tailrecursion.hoplon.span.call(null,G__111600,G__111601));
})();
var G__111569 = " ";
var G__111570 = (function (){var G__111602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111603 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111602,G__111603) : tailrecursion.hoplon.span.call(null,G__111602,G__111603));
})();
var G__111571 = " ";
var G__111572 = (function (){var G__111604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111605 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111604,G__111605) : tailrecursion.hoplon.span.call(null,G__111604,G__111605));
})();
var G__111573 = "))\n(";
var G__111574 = (function (){var G__111606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111607 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111606,G__111607) : tailrecursion.hoplon.span.call(null,G__111606,G__111607));
})();
var G__111575 = " (";
var G__111576 = (function (){var G__111608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111609 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111608,G__111609) : tailrecursion.hoplon.span.call(null,G__111608,G__111609));
})();
var G__111577 = " ";
var G__111578 = (function (){var G__111610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111611 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111610,G__111611) : tailrecursion.hoplon.span.call(null,G__111610,G__111611));
})();
var G__111579 = " ";
var G__111580 = (function (){var G__111612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111613 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111612,G__111613) : tailrecursion.hoplon.span.call(null,G__111612,G__111613));
})();
var G__111581 = ") ";
var G__111582 = (function (){var G__111614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111615 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111614,G__111615) : tailrecursion.hoplon.span.call(null,G__111614,G__111615));
})();
var G__111583 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__111551,G__111552,G__111553,G__111554,G__111555,G__111556,G__111557,G__111558,G__111559,G__111560,G__111561,G__111562,G__111563,G__111564,G__111565,G__111566,G__111567,G__111568,G__111569,G__111570,G__111571,G__111572,G__111573,G__111574,G__111575,G__111576,G__111577,G__111578,G__111579,G__111580,G__111581,G__111582,G__111583) : tailrecursion.hoplon.pre.call(null,G__111551,G__111552,G__111553,G__111554,G__111555,G__111556,G__111557,G__111558,G__111559,G__111560,G__111561,G__111562,G__111563,G__111564,G__111565,G__111566,G__111567,G__111568,G__111569,G__111570,G__111571,G__111572,G__111573,G__111574,G__111575,G__111576,G__111577,G__111578,G__111579,G__111580,G__111581,G__111582,G__111583));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111549,G__111550) : tailrecursion.hoplon.div.call(null,G__111549,G__111550));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111548) : tailrecursion.hoplon.div.call(null,G__111548));
})(),(function (){var G__111616 = cljs.core.PersistentArrayMap.EMPTY;
var G__111617 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And ",(function (){var G__111618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a b))"], null);
var G__111619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111618,G__111619) : tailrecursion.hoplon.markdown.code_node.call(null,G__111618,G__111619));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111616,G__111617) : tailrecursion.hoplon.markdown.para_node.call(null,G__111616,G__111617));
})(),(function (){var G__111620 = (function (){var G__111621 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111622 = (function (){var G__111623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111624 = "(";
var G__111625 = (function (){var G__111645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111646 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111645,G__111646) : tailrecursion.hoplon.span.call(null,G__111645,G__111646));
})();
var G__111626 = " (";
var G__111627 = (function (){var G__111647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111648 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111647,G__111648) : tailrecursion.hoplon.span.call(null,G__111647,G__111648));
})();
var G__111628 = " ";
var G__111629 = (function (){var G__111649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111650 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111649,G__111650) : tailrecursion.hoplon.span.call(null,G__111649,G__111650));
})();
var G__111630 = " ";
var G__111631 = (function (){var G__111651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111652 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111651,G__111652) : tailrecursion.hoplon.span.call(null,G__111651,G__111652));
})();
var G__111632 = ") ";
var G__111633 = (function (){var G__111653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111654 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111653,G__111654) : tailrecursion.hoplon.span.call(null,G__111653,G__111654));
})();
var G__111634 = ")\n(";
var G__111635 = (function (){var G__111655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111656 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111655,G__111656) : tailrecursion.hoplon.span.call(null,G__111655,G__111656));
})();
var G__111636 = " ";
var G__111637 = (function (){var G__111657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111658 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111657,G__111658) : tailrecursion.hoplon.span.call(null,G__111657,G__111658));
})();
var G__111638 = " (";
var G__111639 = (function (){var G__111659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111660 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111659,G__111660) : tailrecursion.hoplon.span.call(null,G__111659,G__111660));
})();
var G__111640 = " ";
var G__111641 = (function (){var G__111661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111662 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111661,G__111662) : tailrecursion.hoplon.span.call(null,G__111661,G__111662));
})();
var G__111642 = " ";
var G__111643 = (function (){var G__111663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111664 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111663,G__111664) : tailrecursion.hoplon.span.call(null,G__111663,G__111664));
})();
var G__111644 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__111623,G__111624,G__111625,G__111626,G__111627,G__111628,G__111629,G__111630,G__111631,G__111632,G__111633,G__111634,G__111635,G__111636,G__111637,G__111638,G__111639,G__111640,G__111641,G__111642,G__111643,G__111644) : tailrecursion.hoplon.pre.call(null,G__111623,G__111624,G__111625,G__111626,G__111627,G__111628,G__111629,G__111630,G__111631,G__111632,G__111633,G__111634,G__111635,G__111636,G__111637,G__111638,G__111639,G__111640,G__111641,G__111642,G__111643,G__111644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111621,G__111622) : tailrecursion.hoplon.div.call(null,G__111621,G__111622));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111620) : tailrecursion.hoplon.div.call(null,G__111620));
})(),(function (){var G__111665 = cljs.core.PersistentArrayMap.EMPTY;
var G__111666 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in order for ",(function (){var G__111667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-right op init (list a b))"], null);
var G__111668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111667,G__111668) : tailrecursion.hoplon.markdown.code_node.call(null,G__111667,G__111668));
})()," to equal ",(function (){var G__111669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a b))"], null);
var G__111670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111669,G__111670) : tailrecursion.hoplon.markdown.code_node.call(null,G__111669,G__111670));
})(),", we require ",(function (){var G__111671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(op (op b init)\na)"], null);
var G__111672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111671,G__111672) : tailrecursion.hoplon.markdown.code_node.call(null,G__111671,G__111672));
})(),"=",(function (){var G__111673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(op b (op init a))"], null);
var G__111674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111673,G__111674) : tailrecursion.hoplon.markdown.code_node.call(null,G__111673,G__111674));
})(),". That property is called associativity."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111665,G__111666) : tailrecursion.hoplon.markdown.para_node.call(null,G__111665,G__111666));
})(),(function (){var G__111675 = cljs.core.PersistentArrayMap.EMPTY;
var G__111676 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__111677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111677,G__111678) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111677,G__111678));
})(),"s assume that our operation ",(function (){var G__111679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__111680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111679,G__111680) : tailrecursion.hoplon.markdown.code_node.call(null,G__111679,G__111680));
})()," is both commutative and associative. Let",(function (){var G__111681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111681,G__111682) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111681,G__111682));
})(),"s prove that no matter the size of the list, nor the initial value (as long as it is an acceptable one ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["eg not 0 for division"], null)], 0)),") we will get the same value. This proof might be a little tricky to comprehend if you are not mathematically inclined; so if feel free to move on if this doesn",(function (){var G__111683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111683,G__111684) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111683,G__111684));
})(),"t interest you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111675,G__111676) : tailrecursion.hoplon.markdown.para_node.call(null,G__111675,G__111676));
})(),(function (){var G__111685 = cljs.core.PersistentArrayMap.EMPTY;
var G__111686 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__111687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111687,G__111688) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111687,G__111688));
})(),"s prove this by induction on ",(function (){var G__111689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(count items)"], null);
var G__111690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111689,G__111690) : tailrecursion.hoplon.markdown.code_node.call(null,G__111689,G__111690));
})(),", where ",(function (){var G__111691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"items"], null);
var G__111692 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111691,G__111692) : tailrecursion.hoplon.markdown.code_node.call(null,G__111691,G__111692));
})()," is the list argument to the ",(function (){var G__111693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__111694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111693,G__111694) : tailrecursion.hoplon.markdown.code_node.call(null,G__111693,G__111694));
})()," and ",(function (){var G__111695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__111696 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111695,G__111696) : tailrecursion.hoplon.markdown.code_node.call(null,G__111695,G__111696));
})()," procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111685,G__111686) : tailrecursion.hoplon.markdown.para_node.call(null,G__111685,G__111686));
})(),(function (){var G__111697 = cljs.core.PersistentArrayMap.EMPTY;
var G__111698 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The base case is already taken care of above (cases ",(function (){var G__111699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__111700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111699,G__111700) : tailrecursion.hoplon.markdown.code_node.call(null,G__111699,G__111700));
})(),"=1 and 2 were both done above). Now let",(function (){var G__111701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__111702 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__111701,G__111702) : tailrecursion.hoplon.markdown.simple_node.call(null,G__111701,G__111702));
})(),"s pick an \\(n>1\\) and assume that for all \\(k\\lt n\\), if the list has \\(k\\) items, fold left and fold right are the same with this list and our specified operation and initial value."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111697,G__111698) : tailrecursion.hoplon.markdown.para_node.call(null,G__111697,G__111698));
})(),(function (){var G__111703 = cljs.core.PersistentArrayMap.EMPTY;
var G__111704 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we take ",(function (){var G__111705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"items"], null);
var G__111706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111705,G__111706) : tailrecursion.hoplon.markdown.code_node.call(null,G__111705,G__111706));
})()," to be a list with \\(n\\) items in it. For ease of notation, I will consider the list to be ",(function (){var G__111707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4 ... n)"], null);
var G__111708 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111707,G__111708) : tailrecursion.hoplon.markdown.code_node.call(null,G__111707,G__111708));
})(),", but I will not actually consider the elements of the list to be numbers necessarily. I make no assumption as to the content of the list or the nature of the operator (other than it being commutative and associative). To reaffirm the fact that we are not dealing with a concrete list here, I will denote the list as ",(function (){var G__111709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2... n)"], null);
var G__111710 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111709,G__111710) : tailrecursion.hoplon.markdown.code_node.call(null,G__111709,G__111710));
})()," without the ",(function (){var G__111711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__111712 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__111711,G__111712) : tailrecursion.hoplon.markdown.code_node.call(null,G__111711,G__111712));
})()," operator in front."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__111703,G__111704) : tailrecursion.hoplon.markdown.para_node.call(null,G__111703,G__111704));
})(),(function (){var G__111713 = (function (){var G__111714 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__111715 = (function (){var G__111716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__111717 = "(";
var G__111718 = (function (){var G__111862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111863 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111862,G__111863) : tailrecursion.hoplon.span.call(null,G__111862,G__111863));
})();
var G__111719 = " ";
var G__111720 = (function (){var G__111864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111865 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111864,G__111865) : tailrecursion.hoplon.span.call(null,G__111864,G__111865));
})();
var G__111721 = " ";
var G__111722 = (function (){var G__111866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111867 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111866,G__111867) : tailrecursion.hoplon.span.call(null,G__111866,G__111867));
})();
var G__111723 = " ";
var G__111724 = (function (){var G__111868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111869 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111868,G__111869) : tailrecursion.hoplon.span.call(null,G__111868,G__111869));
})();
var G__111725 = ")\n";
var G__111726 = (function (){var G__111870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111871 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111870,G__111871) : tailrecursion.hoplon.span.call(null,G__111870,G__111871));
})();
var G__111727 = "(";
var G__111728 = (function (){var G__111872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111873 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111872,G__111873) : tailrecursion.hoplon.span.call(null,G__111872,G__111873));
})();
var G__111729 = " ";
var G__111730 = (function (){var G__111874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111875 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111874,G__111875) : tailrecursion.hoplon.span.call(null,G__111874,G__111875));
})();
var G__111731 = " ";
var G__111732 = (function (){var G__111876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111877 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111876,G__111877) : tailrecursion.hoplon.span.call(null,G__111876,G__111877));
})();
var G__111733 = " (";
var G__111734 = (function (){var G__111878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111879 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111878,G__111879) : tailrecursion.hoplon.span.call(null,G__111878,G__111879));
})();
var G__111735 = " ";
var G__111736 = (function (){var G__111880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111881 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111880,G__111881) : tailrecursion.hoplon.span.call(null,G__111880,G__111881));
})();
var G__111737 = " ";
var G__111738 = (function (){var G__111882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111883 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111882,G__111883) : tailrecursion.hoplon.span.call(null,G__111882,G__111883));
})();
var G__111739 = " ";
var G__111740 = (function (){var G__111884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111885 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111884,G__111885) : tailrecursion.hoplon.span.call(null,G__111884,G__111885));
})();
var G__111741 = "))\n";
var G__111742 = (function (){var G__111886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111887 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111886,G__111887) : tailrecursion.hoplon.span.call(null,G__111886,G__111887));
})();
var G__111743 = "(";
var G__111744 = (function (){var G__111888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111889 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111888,G__111889) : tailrecursion.hoplon.span.call(null,G__111888,G__111889));
})();
var G__111745 = " ";
var G__111746 = (function (){var G__111890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111891 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111890,G__111891) : tailrecursion.hoplon.span.call(null,G__111890,G__111891));
})();
var G__111747 = " (";
var G__111748 = (function (){var G__111892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111893 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111892,G__111893) : tailrecursion.hoplon.span.call(null,G__111892,G__111893));
})();
var G__111749 = " ";
var G__111750 = (function (){var G__111894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111895 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111894,G__111895) : tailrecursion.hoplon.span.call(null,G__111894,G__111895));
})();
var G__111751 = " (";
var G__111752 = (function (){var G__111896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111897 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111896,G__111897) : tailrecursion.hoplon.span.call(null,G__111896,G__111897));
})();
var G__111753 = " ";
var G__111754 = (function (){var G__111898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111899 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111898,G__111899) : tailrecursion.hoplon.span.call(null,G__111898,G__111899));
})();
var G__111755 = " (";
var G__111756 = (function (){var G__111900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111901 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111900,G__111901) : tailrecursion.hoplon.span.call(null,G__111900,G__111901));
})();
var G__111757 = " ";
var G__111758 = (function (){var G__111902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111903 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111902,G__111903) : tailrecursion.hoplon.span.call(null,G__111902,G__111903));
})();
var G__111759 = " ";
var G__111760 = (function (){var G__111904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111905 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111904,G__111905) : tailrecursion.hoplon.span.call(null,G__111904,G__111905));
})();
var G__111761 = "))))\n";
var G__111762 = (function (){var G__111906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111907 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111906,G__111907) : tailrecursion.hoplon.span.call(null,G__111906,G__111907));
})();
var G__111763 = "(";
var G__111764 = (function (){var G__111908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111909 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111908,G__111909) : tailrecursion.hoplon.span.call(null,G__111908,G__111909));
})();
var G__111765 = " ";
var G__111766 = (function (){var G__111910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111911 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111910,G__111911) : tailrecursion.hoplon.span.call(null,G__111910,G__111911));
})();
var G__111767 = " (";
var G__111768 = (function (){var G__111912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111913 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111912,G__111913) : tailrecursion.hoplon.span.call(null,G__111912,G__111913));
})();
var G__111769 = " ";
var G__111770 = (function (){var G__111914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111915 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111914,G__111915) : tailrecursion.hoplon.span.call(null,G__111914,G__111915));
})();
var G__111771 = " (";
var G__111772 = (function (){var G__111916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111917 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111916,G__111917) : tailrecursion.hoplon.span.call(null,G__111916,G__111917));
})();
var G__111773 = " ";
var G__111774 = (function (){var G__111918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111919 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111918,G__111919) : tailrecursion.hoplon.span.call(null,G__111918,G__111919));
})();
var G__111775 = " (";
var G__111776 = (function (){var G__111920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111921 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111920,G__111921) : tailrecursion.hoplon.span.call(null,G__111920,G__111921));
})();
var G__111777 = " ";
var G__111778 = (function (){var G__111922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111923 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111922,G__111923) : tailrecursion.hoplon.span.call(null,G__111922,G__111923));
})();
var G__111779 = " ";
var G__111780 = (function (){var G__111924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111925 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111924,G__111925) : tailrecursion.hoplon.span.call(null,G__111924,G__111925));
})();
var G__111781 = "))))\n";
var G__111782 = (function (){var G__111926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111927 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111926,G__111927) : tailrecursion.hoplon.span.call(null,G__111926,G__111927));
})();
var G__111783 = "(";
var G__111784 = (function (){var G__111928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111929 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111928,G__111929) : tailrecursion.hoplon.span.call(null,G__111928,G__111929));
})();
var G__111785 = " ";
var G__111786 = (function (){var G__111930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111931 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111930,G__111931) : tailrecursion.hoplon.span.call(null,G__111930,G__111931));
})();
var G__111787 = " (";
var G__111788 = (function (){var G__111932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111933 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111932,G__111933) : tailrecursion.hoplon.span.call(null,G__111932,G__111933));
})();
var G__111789 = " ";
var G__111790 = (function (){var G__111934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111935 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111934,G__111935) : tailrecursion.hoplon.span.call(null,G__111934,G__111935));
})();
var G__111791 = " (";
var G__111792 = (function (){var G__111936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111937 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111936,G__111937) : tailrecursion.hoplon.span.call(null,G__111936,G__111937));
})();
var G__111793 = " ";
var G__111794 = (function (){var G__111938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111939 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111938,G__111939) : tailrecursion.hoplon.span.call(null,G__111938,G__111939));
})();
var G__111795 = " (";
var G__111796 = (function (){var G__111940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111941 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111940,G__111941) : tailrecursion.hoplon.span.call(null,G__111940,G__111941));
})();
var G__111797 = " (";
var G__111798 = (function (){var G__111942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111943 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111942,G__111943) : tailrecursion.hoplon.span.call(null,G__111942,G__111943));
})();
var G__111799 = " ";
var G__111800 = (function (){var G__111944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111945 = "<n-1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111944,G__111945) : tailrecursion.hoplon.span.call(null,G__111944,G__111945));
})();
var G__111801 = " ";
var G__111802 = (function (){var G__111946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111947 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111946,G__111947) : tailrecursion.hoplon.span.call(null,G__111946,G__111947));
})();
var G__111803 = ") ";
var G__111804 = (function (){var G__111948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111949 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111948,G__111949) : tailrecursion.hoplon.span.call(null,G__111948,G__111949));
})();
var G__111805 = "))))\n";
var G__111806 = (function (){var G__111950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111951 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111950,G__111951) : tailrecursion.hoplon.span.call(null,G__111950,G__111951));
})();
var G__111807 = "(";
var G__111808 = (function (){var G__111952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111953 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111952,G__111953) : tailrecursion.hoplon.span.call(null,G__111952,G__111953));
})();
var G__111809 = " ";
var G__111810 = (function (){var G__111954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111955 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111954,G__111955) : tailrecursion.hoplon.span.call(null,G__111954,G__111955));
})();
var G__111811 = " (";
var G__111812 = (function (){var G__111956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111957 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111956,G__111957) : tailrecursion.hoplon.span.call(null,G__111956,G__111957));
})();
var G__111813 = " ";
var G__111814 = (function (){var G__111958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111959 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111958,G__111959) : tailrecursion.hoplon.span.call(null,G__111958,G__111959));
})();
var G__111815 = " (";
var G__111816 = (function (){var G__111960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111961 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111960,G__111961) : tailrecursion.hoplon.span.call(null,G__111960,G__111961));
})();
var G__111817 = " ";
var G__111818 = (function (){var G__111962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111963 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111962,G__111963) : tailrecursion.hoplon.span.call(null,G__111962,G__111963));
})();
var G__111819 = " (";
var G__111820 = (function (){var G__111964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111965 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111964,G__111965) : tailrecursion.hoplon.span.call(null,G__111964,G__111965));
})();
var G__111821 = " (";
var G__111822 = (function (){var G__111966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111967 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111966,G__111967) : tailrecursion.hoplon.span.call(null,G__111966,G__111967));
})();
var G__111823 = " ";
var G__111824 = (function (){var G__111968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111969 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111968,G__111969) : tailrecursion.hoplon.span.call(null,G__111968,G__111969));
})();
var G__111825 = " ";
var G__111826 = (function (){var G__111970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111971 = "<n-1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111970,G__111971) : tailrecursion.hoplon.span.call(null,G__111970,G__111971));
})();
var G__111827 = ") ";
var G__111828 = (function (){var G__111972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111973 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111972,G__111973) : tailrecursion.hoplon.span.call(null,G__111972,G__111973));
})();
var G__111829 = "))))\n";
var G__111830 = (function (){var G__111974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111975 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111974,G__111975) : tailrecursion.hoplon.span.call(null,G__111974,G__111975));
})();
var G__111831 = "\n";
var G__111832 = (function (){var G__111976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111977 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111976,G__111977) : tailrecursion.hoplon.span.call(null,G__111976,G__111977));
})();
var G__111833 = "(";
var G__111834 = (function (){var G__111978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111979 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111978,G__111979) : tailrecursion.hoplon.span.call(null,G__111978,G__111979));
})();
var G__111835 = " (";
var G__111836 = (function (){var G__111980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111981 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111980,G__111981) : tailrecursion.hoplon.span.call(null,G__111980,G__111981));
})();
var G__111837 = " ";
var G__111838 = (function (){var G__111982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111983 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111982,G__111983) : tailrecursion.hoplon.span.call(null,G__111982,G__111983));
})();
var G__111839 = " (";
var G__111840 = (function (){var G__111984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111985 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111984,G__111985) : tailrecursion.hoplon.span.call(null,G__111984,G__111985));
})();
var G__111841 = " ";
var G__111842 = (function (){var G__111986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111987 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111986,G__111987) : tailrecursion.hoplon.span.call(null,G__111986,G__111987));
})();
var G__111843 = " ";
var G__111844 = (function (){var G__111988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111989 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111988,G__111989) : tailrecursion.hoplon.span.call(null,G__111988,G__111989));
})();
var G__111845 = ") ";
var G__111846 = (function (){var G__111990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__111991 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111990,G__111991) : tailrecursion.hoplon.span.call(null,G__111990,G__111991));
})();
var G__111847 = ") ";
var G__111848 = (function (){var G__111992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111993 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111992,G__111993) : tailrecursion.hoplon.span.call(null,G__111992,G__111993));
})();
var G__111849 = " ";
var G__111850 = (function (){var G__111994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111995 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111994,G__111995) : tailrecursion.hoplon.span.call(null,G__111994,G__111995));
})();
var G__111851 = ")\n";
var G__111852 = (function (){var G__111996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__111997 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111996,G__111997) : tailrecursion.hoplon.span.call(null,G__111996,G__111997));
})();
var G__111853 = "(";
var G__111854 = (function (){var G__111998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__111999 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__111998,G__111999) : tailrecursion.hoplon.span.call(null,G__111998,G__111999));
})();
var G__111855 = " ";
var G__111856 = (function (){var G__112000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112001 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112000,G__112001) : tailrecursion.hoplon.span.call(null,G__112000,G__112001));
})();
var G__111857 = " ";
var G__111858 = (function (){var G__112002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112003 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112002,G__112003) : tailrecursion.hoplon.span.call(null,G__112002,G__112003));
})();
var G__111859 = " ";
var G__111860 = (function (){var G__112004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112005 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112004,G__112005) : tailrecursion.hoplon.span.call(null,G__112004,G__112005));
})();
var G__111861 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$146 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$146(G__111716,G__111717,G__111718,G__111719,G__111720,G__111721,G__111722,G__111723,G__111724,G__111725,G__111726,G__111727,G__111728,G__111729,G__111730,G__111731,G__111732,G__111733,G__111734,G__111735,G__111736,G__111737,G__111738,G__111739,G__111740,G__111741,G__111742,G__111743,G__111744,G__111745,G__111746,G__111747,G__111748,G__111749,G__111750,G__111751,G__111752,G__111753,G__111754,G__111755,G__111756,G__111757,G__111758,G__111759,G__111760,G__111761,G__111762,G__111763,G__111764,G__111765,G__111766,G__111767,G__111768,G__111769,G__111770,G__111771,G__111772,G__111773,G__111774,G__111775,G__111776,G__111777,G__111778,G__111779,G__111780,G__111781,G__111782,G__111783,G__111784,G__111785,G__111786,G__111787,G__111788,G__111789,G__111790,G__111791,G__111792,G__111793,G__111794,G__111795,G__111796,G__111797,G__111798,G__111799,G__111800,G__111801,G__111802,G__111803,G__111804,G__111805,G__111806,G__111807,G__111808,G__111809,G__111810,G__111811,G__111812,G__111813,G__111814,G__111815,G__111816,G__111817,G__111818,G__111819,G__111820,G__111821,G__111822,G__111823,G__111824,G__111825,G__111826,G__111827,G__111828,G__111829,G__111830,G__111831,G__111832,G__111833,G__111834,G__111835,G__111836,G__111837,G__111838,G__111839,G__111840,G__111841,G__111842,G__111843,G__111844,G__111845,G__111846,G__111847,G__111848,G__111849,G__111850,G__111851,G__111852,G__111853,G__111854,G__111855,G__111856,G__111857,G__111858,G__111859,G__111860,G__111861) : tailrecursion.hoplon.pre.call(null,G__111716,G__111717,G__111718,G__111719,G__111720,G__111721,G__111722,G__111723,G__111724,G__111725,G__111726,G__111727,G__111728,G__111729,G__111730,G__111731,G__111732,G__111733,G__111734,G__111735,G__111736,G__111737,G__111738,G__111739,G__111740,G__111741,G__111742,G__111743,G__111744,G__111745,G__111746,G__111747,G__111748,G__111749,G__111750,G__111751,G__111752,G__111753,G__111754,G__111755,G__111756,G__111757,G__111758,G__111759,G__111760,G__111761,G__111762,G__111763,G__111764,G__111765,G__111766,G__111767,G__111768,G__111769,G__111770,G__111771,G__111772,G__111773,G__111774,G__111775,G__111776,G__111777,G__111778,G__111779,G__111780,G__111781,G__111782,G__111783,G__111784,G__111785,G__111786,G__111787,G__111788,G__111789,G__111790,G__111791,G__111792,G__111793,G__111794,G__111795,G__111796,G__111797,G__111798,G__111799,G__111800,G__111801,G__111802,G__111803,G__111804,G__111805,G__111806,G__111807,G__111808,G__111809,G__111810,G__111811,G__111812,G__111813,G__111814,G__111815,G__111816,G__111817,G__111818,G__111819,G__111820,G__111821,G__111822,G__111823,G__111824,G__111825,G__111826,G__111827,G__111828,G__111829,G__111830,G__111831,G__111832,G__111833,G__111834,G__111835,G__111836,G__111837,G__111838,G__111839,G__111840,G__111841,G__111842,G__111843,G__111844,G__111845,G__111846,G__111847,G__111848,G__111849,G__111850,G__111851,G__111852,G__111853,G__111854,G__111855,G__111856,G__111857,G__111858,G__111859,G__111860,G__111861));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__111714,G__111715) : tailrecursion.hoplon.div.call(null,G__111714,G__111715));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__111713) : tailrecursion.hoplon.div.call(null,G__111713));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111485;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111484;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_111483;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_111482;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_112006 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112007 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112008 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112009 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112010 = cljs.core.PersistentArrayMap.EMPTY;
var G__112011 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Complete the following definitions of ",(function (){var G__112012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__112013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112012,G__112013) : tailrecursion.hoplon.markdown.code_node.call(null,G__112012,G__112013));
})()," ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/18/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.18"], null)], 0))," in terms of ",(function (){var G__112014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-righ"], null);
var G__112015 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112014,G__112015) : tailrecursion.hoplon.markdown.code_node.call(null,G__112014,G__112015));
})()," and ",(function (){var G__112016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__112017 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112016,G__112017) : tailrecursion.hoplon.markdown.code_node.call(null,G__112016,G__112017));
})()," from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/38/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.38"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112010,G__112011) : tailrecursion.hoplon.markdown.para_node.call(null,G__112010,G__112011));
})(),(function (){var G__112018 = (function (){var G__112019 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112020 = (function (){var G__112021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112022 = "(";
var G__112023 = (function (){var G__112061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112062 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112061,G__112062) : tailrecursion.hoplon.span.call(null,G__112061,G__112062));
})();
var G__112024 = (function (){var G__112063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112064 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112063,G__112064) : tailrecursion.hoplon.span.call(null,G__112063,G__112064));
})();
var G__112025 = "[";
var G__112026 = (function (){var G__112065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112066 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112065,G__112066) : tailrecursion.hoplon.span.call(null,G__112065,G__112066));
})();
var G__112027 = "]\n  (";
var G__112028 = (function (){var G__112067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112068 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112067,G__112068) : tailrecursion.hoplon.span.call(null,G__112067,G__112068));
})();
var G__112029 = " (";
var G__112030 = (function (){var G__112069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112070 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112069,G__112070) : tailrecursion.hoplon.span.call(null,G__112069,G__112070));
})();
var G__112031 = "[";
var G__112032 = (function (){var G__112071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112072 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112071,G__112072) : tailrecursion.hoplon.span.call(null,G__112071,G__112072));
})();
var G__112033 = " ";
var G__112034 = (function (){var G__112073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112074 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112073,G__112074) : tailrecursion.hoplon.span.call(null,G__112073,G__112074));
})();
var G__112035 = "] ";
var G__112036 = (function (){var G__112075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112076 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112075,G__112076) : tailrecursion.hoplon.span.call(null,G__112075,G__112076));
})();
var G__112037 = ") ";
var G__112038 = (function (){var G__112077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112078 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112077,G__112078) : tailrecursion.hoplon.span.call(null,G__112077,G__112078));
})();
var G__112039 = " ";
var G__112040 = (function (){var G__112079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112080 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112079,G__112080) : tailrecursion.hoplon.span.call(null,G__112079,G__112080));
})();
var G__112041 = "))\n\n(";
var G__112042 = (function (){var G__112081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112082 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112081,G__112082) : tailrecursion.hoplon.span.call(null,G__112081,G__112082));
})();
var G__112043 = (function (){var G__112083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112084 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112083,G__112084) : tailrecursion.hoplon.span.call(null,G__112083,G__112084));
})();
var G__112044 = "[";
var G__112045 = (function (){var G__112085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112086 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112085,G__112086) : tailrecursion.hoplon.span.call(null,G__112085,G__112086));
})();
var G__112046 = "]\n  (";
var G__112047 = (function (){var G__112087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112088 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112087,G__112088) : tailrecursion.hoplon.span.call(null,G__112087,G__112088));
})();
var G__112048 = " (";
var G__112049 = (function (){var G__112089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112090 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112089,G__112090) : tailrecursion.hoplon.span.call(null,G__112089,G__112090));
})();
var G__112050 = "[";
var G__112051 = (function (){var G__112091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112092 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112091,G__112092) : tailrecursion.hoplon.span.call(null,G__112091,G__112092));
})();
var G__112052 = " ";
var G__112053 = (function (){var G__112093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112094 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112093,G__112094) : tailrecursion.hoplon.span.call(null,G__112093,G__112094));
})();
var G__112054 = "] ";
var G__112055 = (function (){var G__112095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112096 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112095,G__112096) : tailrecursion.hoplon.span.call(null,G__112095,G__112096));
})();
var G__112056 = ") ";
var G__112057 = (function (){var G__112097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112098 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112097,G__112098) : tailrecursion.hoplon.span.call(null,G__112097,G__112098));
})();
var G__112058 = " ";
var G__112059 = (function (){var G__112099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112100 = "itmes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112099,G__112100) : tailrecursion.hoplon.span.call(null,G__112099,G__112100));
})();
var G__112060 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__112021,G__112022,G__112023,G__112024,G__112025,G__112026,G__112027,G__112028,G__112029,G__112030,G__112031,G__112032,G__112033,G__112034,G__112035,G__112036,G__112037,G__112038,G__112039,G__112040,G__112041,G__112042,G__112043,G__112044,G__112045,G__112046,G__112047,G__112048,G__112049,G__112050,G__112051,G__112052,G__112053,G__112054,G__112055,G__112056,G__112057,G__112058,G__112059,G__112060) : tailrecursion.hoplon.pre.call(null,G__112021,G__112022,G__112023,G__112024,G__112025,G__112026,G__112027,G__112028,G__112029,G__112030,G__112031,G__112032,G__112033,G__112034,G__112035,G__112036,G__112037,G__112038,G__112039,G__112040,G__112041,G__112042,G__112043,G__112044,G__112045,G__112046,G__112047,G__112048,G__112049,G__112050,G__112051,G__112052,G__112053,G__112054,G__112055,G__112056,G__112057,G__112058,G__112059,G__112060));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112019,G__112020) : tailrecursion.hoplon.div.call(null,G__112019,G__112020));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112018) : tailrecursion.hoplon.div.call(null,G__112018));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112009;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112008;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112007;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112006;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_112101 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112102 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112103 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112104 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112105 = (function (){var G__112106 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112107 = (function (){var G__112108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112109 = "(";
var G__112110 = (function (){var G__112155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112156 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112155,G__112156) : tailrecursion.hoplon.span.call(null,G__112155,G__112156));
})();
var G__112111 = (function (){var G__112157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112158 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112157,G__112158) : tailrecursion.hoplon.span.call(null,G__112157,G__112158));
})();
var G__112112 = "[";
var G__112113 = (function (){var G__112159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112160 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112159,G__112160) : tailrecursion.hoplon.span.call(null,G__112159,G__112160));
})();
var G__112114 = "]\n  (";
var G__112115 = (function (){var G__112161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112162 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112161,G__112162) : tailrecursion.hoplon.span.call(null,G__112161,G__112162));
})();
var G__112116 = " (";
var G__112117 = (function (){var G__112163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112164 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112163,G__112164) : tailrecursion.hoplon.span.call(null,G__112163,G__112164));
})();
var G__112118 = "[";
var G__112119 = (function (){var G__112165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112166 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112165,G__112166) : tailrecursion.hoplon.span.call(null,G__112165,G__112166));
})();
var G__112120 = " ";
var G__112121 = (function (){var G__112167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112168 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112167,G__112168) : tailrecursion.hoplon.span.call(null,G__112167,G__112168));
})();
var G__112122 = "] (";
var G__112123 = (function (){var G__112169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112170 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112169,G__112170) : tailrecursion.hoplon.span.call(null,G__112169,G__112170));
})();
var G__112124 = (function (){var G__112171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112172 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112171,G__112172) : tailrecursion.hoplon.span.call(null,G__112171,G__112172));
})();
var G__112125 = " (";
var G__112126 = (function (){var G__112173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112174 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112173,G__112174) : tailrecursion.hoplon.span.call(null,G__112173,G__112174));
})();
var G__112127 = (function (){var G__112175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112176 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112175,G__112176) : tailrecursion.hoplon.span.call(null,G__112175,G__112176));
})();
var G__112128 = "))) ";
var G__112129 = (function (){var G__112177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112178 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112177,G__112178) : tailrecursion.hoplon.span.call(null,G__112177,G__112178));
})();
var G__112130 = " ";
var G__112131 = (function (){var G__112179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112180 = "itms";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112179,G__112180) : tailrecursion.hoplon.span.call(null,G__112179,G__112180));
})();
var G__112132 = "))\n\n(";
var G__112133 = (function (){var G__112181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112182 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112181,G__112182) : tailrecursion.hoplon.span.call(null,G__112181,G__112182));
})();
var G__112134 = (function (){var G__112183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112184 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112183,G__112184) : tailrecursion.hoplon.span.call(null,G__112183,G__112184));
})();
var G__112135 = "[";
var G__112136 = (function (){var G__112185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112186 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112185,G__112186) : tailrecursion.hoplon.span.call(null,G__112185,G__112186));
})();
var G__112137 = "]\n  (";
var G__112138 = (function (){var G__112187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112188 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112187,G__112188) : tailrecursion.hoplon.span.call(null,G__112187,G__112188));
})();
var G__112139 = " (";
var G__112140 = (function (){var G__112189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112190 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112189,G__112190) : tailrecursion.hoplon.span.call(null,G__112189,G__112190));
})();
var G__112141 = "[";
var G__112142 = (function (){var G__112191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112192 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112191,G__112192) : tailrecursion.hoplon.span.call(null,G__112191,G__112192));
})();
var G__112143 = " ";
var G__112144 = (function (){var G__112193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112194 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112193,G__112194) : tailrecursion.hoplon.span.call(null,G__112193,G__112194));
})();
var G__112145 = "] (";
var G__112146 = (function (){var G__112195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112196 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112195,G__112196) : tailrecursion.hoplon.span.call(null,G__112195,G__112196));
})();
var G__112147 = (function (){var G__112197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112198 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112197,G__112198) : tailrecursion.hoplon.span.call(null,G__112197,G__112198));
})();
var G__112148 = " ";
var G__112149 = (function (){var G__112199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112200 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112199,G__112200) : tailrecursion.hoplon.span.call(null,G__112199,G__112200));
})();
var G__112150 = ")) ";
var G__112151 = (function (){var G__112201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112202 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112201,G__112202) : tailrecursion.hoplon.span.call(null,G__112201,G__112202));
})();
var G__112152 = " ";
var G__112153 = (function (){var G__112203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112204 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112203,G__112204) : tailrecursion.hoplon.span.call(null,G__112203,G__112204));
})();
var G__112154 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__112108,G__112109,G__112110,G__112111,G__112112,G__112113,G__112114,G__112115,G__112116,G__112117,G__112118,G__112119,G__112120,G__112121,G__112122,G__112123,G__112124,G__112125,G__112126,G__112127,G__112128,G__112129,G__112130,G__112131,G__112132,G__112133,G__112134,G__112135,G__112136,G__112137,G__112138,G__112139,G__112140,G__112141,G__112142,G__112143,G__112144,G__112145,G__112146,G__112147,G__112148,G__112149,G__112150,G__112151,G__112152,G__112153,G__112154) : tailrecursion.hoplon.pre.call(null,G__112108,G__112109,G__112110,G__112111,G__112112,G__112113,G__112114,G__112115,G__112116,G__112117,G__112118,G__112119,G__112120,G__112121,G__112122,G__112123,G__112124,G__112125,G__112126,G__112127,G__112128,G__112129,G__112130,G__112131,G__112132,G__112133,G__112134,G__112135,G__112136,G__112137,G__112138,G__112139,G__112140,G__112141,G__112142,G__112143,G__112144,G__112145,G__112146,G__112147,G__112148,G__112149,G__112150,G__112151,G__112152,G__112153,G__112154));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112106,G__112107) : tailrecursion.hoplon.div.call(null,G__112106,G__112107));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112105) : tailrecursion.hoplon.div.call(null,G__112105));
})(),(function (){var G__112205 = cljs.core.PersistentArrayMap.EMPTY;
var G__112206 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, if we want to use ",(function (){var G__112207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__112208 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112207,G__112208) : tailrecursion.hoplon.markdown.code_node.call(null,G__112207,G__112208));
})()," instead of ",(function (){var G__112209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__112210 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112209,G__112210) : tailrecursion.hoplon.markdown.code_node.call(null,G__112209,G__112210));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112205,G__112206) : tailrecursion.hoplon.markdown.para_node.call(null,G__112205,G__112206));
})(),(function (){var G__112211 = (function (){var G__112212 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112213 = (function (){var G__112214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112215 = "(";
var G__112216 = (function (){var G__112238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112239 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112238,G__112239) : tailrecursion.hoplon.span.call(null,G__112238,G__112239));
})();
var G__112217 = (function (){var G__112240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112241 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112240,G__112241) : tailrecursion.hoplon.span.call(null,G__112240,G__112241));
})();
var G__112218 = "[";
var G__112219 = (function (){var G__112242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112243 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112242,G__112243) : tailrecursion.hoplon.span.call(null,G__112242,G__112243));
})();
var G__112220 = "]\n  (";
var G__112221 = (function (){var G__112244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112245 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112244,G__112245) : tailrecursion.hoplon.span.call(null,G__112244,G__112245));
})();
var G__112222 = " (";
var G__112223 = (function (){var G__112246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112247 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112246,G__112247) : tailrecursion.hoplon.span.call(null,G__112246,G__112247));
})();
var G__112224 = "[";
var G__112225 = (function (){var G__112248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112249 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112248,G__112249) : tailrecursion.hoplon.span.call(null,G__112248,G__112249));
})();
var G__112226 = " ";
var G__112227 = (function (){var G__112250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112251 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112250,G__112251) : tailrecursion.hoplon.span.call(null,G__112250,G__112251));
})();
var G__112228 = "] (";
var G__112229 = (function (){var G__112252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112253 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112252,G__112253) : tailrecursion.hoplon.span.call(null,G__112252,G__112253));
})();
var G__112230 = (function (){var G__112254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112255 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112254,G__112255) : tailrecursion.hoplon.span.call(null,G__112254,G__112255));
})();
var G__112231 = " ";
var G__112232 = (function (){var G__112256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112257 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112256,G__112257) : tailrecursion.hoplon.span.call(null,G__112256,G__112257));
})();
var G__112233 = ")) ";
var G__112234 = (function (){var G__112258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112259 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112258,G__112259) : tailrecursion.hoplon.span.call(null,G__112258,G__112259));
})();
var G__112235 = " ";
var G__112236 = (function (){var G__112260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112261 = "itmes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112260,G__112261) : tailrecursion.hoplon.span.call(null,G__112260,G__112261));
})();
var G__112237 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__112214,G__112215,G__112216,G__112217,G__112218,G__112219,G__112220,G__112221,G__112222,G__112223,G__112224,G__112225,G__112226,G__112227,G__112228,G__112229,G__112230,G__112231,G__112232,G__112233,G__112234,G__112235,G__112236,G__112237) : tailrecursion.hoplon.pre.call(null,G__112214,G__112215,G__112216,G__112217,G__112218,G__112219,G__112220,G__112221,G__112222,G__112223,G__112224,G__112225,G__112226,G__112227,G__112228,G__112229,G__112230,G__112231,G__112232,G__112233,G__112234,G__112235,G__112236,G__112237));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112212,G__112213) : tailrecursion.hoplon.div.call(null,G__112212,G__112213));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112211) : tailrecursion.hoplon.div.call(null,G__112211));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112104;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112103;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112102;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112101;
}})()], 0))], 0))], 0));
var G__101404 = "";
var G__101405 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Nested Mappings"], null),(function (){var _STAR_references_STAR_112262 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112263 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112264 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112265 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112266 = cljs.core.PersistentArrayMap.EMPTY;
var G__112267 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can extend the sequence paradigm to include many computations that are commonly expressed using nested loops.",(function (){var G__112268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__112269 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This approach to nested mappings was shown to us by David Turner, whose languages KRC and Miranda provide elegant formalisms for dealing with these constructs. The examples in this section (see also ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/42/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.42"], null)], 0))," are adapted from Turner 1981. In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/3/sect/5/sub/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 3.5.3"], null)], 0)),", we'll see how this approach generalizes to infinite sequences."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__112268,G__112269) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__112268,G__112269));
})()," Consider this problem: Given a positive integer \\(n\\), find all ordered pairs of distinct positive integers \\(i\\) and \\(j\\), where \\(1\\lt j\\lt i\\lt n\\), such that \\(i + j\\) is prime. For example, if \\(n\\) is 6, then the pairs are the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112266,G__112267) : tailrecursion.hoplon.markdown.para_node.call(null,G__112266,G__112267));
})(),(function (){var G__112270 = cljs.core.PersistentArrayMap.EMPTY;
var G__112271 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{array}{l | r r r r r r r} i & 2 & 3 & 4 & 4 & 5 & 6 & 6 \\\\ j & 1 & 2 & 1 & 3 & 2 & 1 & 5 \\\\ \\hline i+j & 3 & 5 & 5 & 7 & 7 & 7 & 11 \\end{array}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112270,G__112271) : tailrecursion.hoplon.markdown.para_node.call(null,G__112270,G__112271));
})(),(function (){var G__112272 = cljs.core.PersistentArrayMap.EMPTY;
var G__112273 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A natural way to organize this computation is to generalize the sequence of all ordered pairs of positive integers less than or equal to \\(n\\), filter to select those paris whose sum is prime, and then, for each pair \\((i,j)\\) that passes the filter, produce the triple \\((i, j, i+j)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112272,G__112273) : tailrecursion.hoplon.markdown.para_node.call(null,G__112272,G__112273));
})(),(function (){var G__112274 = cljs.core.PersistentArrayMap.EMPTY;
var G__112275 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is a way to generate the sequence of pairs: For each integer \\(i\\leq n\\), enumerate the integers \\(j\\lt i\\), and for each such \\(i\\) and \\(j\\) generate the pair \\((i,j)\\). In terms of sequence operations, we map along the sequence ",(function (){var G__112276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(range 1 (inc n))"], null);
var G__112277 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112276,G__112277) : tailrecursion.hoplon.markdown.code_node.call(null,G__112276,G__112277));
})(),". For each \\(i\\) in this sequence, we map along the sequence ",(function (){var G__112278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(range 1 i 1)"], null);
var G__112279 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112278,G__112279) : tailrecursion.hoplon.markdown.code_node.call(null,G__112278,G__112279));
})(),". For each \\(j\\) in this latter sequence, we generate the pair ",(function (){var G__112280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list i\nj)"], null);
var G__112281 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112280,G__112281) : tailrecursion.hoplon.markdown.code_node.call(null,G__112280,G__112281));
})(),". This gives us a sequence of pairs for each \\(i\\). Combining all the sequences for all the \\(i\\) (by accumulating with ",(function (){var G__112282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__112283 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112282,G__112283) : tailrecursion.hoplon.markdown.code_node.call(null,G__112282,G__112283));
})(),") produces the required sequence of pairs:",(function (){var G__112284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__112285 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note the behavior of ",(function (){var G__112286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__112287 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112286,G__112287) : tailrecursion.hoplon.markdown.code_node.call(null,G__112286,G__112287));
})(),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__112284,G__112285) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__112284,G__112285));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112274,G__112275) : tailrecursion.hoplon.markdown.para_node.call(null,G__112274,G__112275));
})(),(function (){var G__112288 = (function (){var G__112289 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112290 = (function (){var G__112291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112292 = "(";
var G__112293 = (function (){var G__112327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112328 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112327,G__112328) : tailrecursion.hoplon.span.call(null,G__112327,G__112328));
})();
var G__112294 = " ";
var G__112295 = (function (){var G__112329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112330 = "concat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112329,G__112330) : tailrecursion.hoplon.span.call(null,G__112329,G__112330));
})();
var G__112296 = "\n            ";
var G__112297 = (function (){var G__112331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112332 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112331,G__112332) : tailrecursion.hoplon.span.call(null,G__112331,G__112332));
})();
var G__112298 = "\n            (";
var G__112299 = (function (){var G__112333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112334 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112333,G__112334) : tailrecursion.hoplon.span.call(null,G__112333,G__112334));
})();
var G__112300 = "(";
var G__112301 = (function (){var G__112335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112336 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112335,G__112336) : tailrecursion.hoplon.span.call(null,G__112335,G__112336));
})();
var G__112302 = "[";
var G__112303 = (function (){var G__112337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112338 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112337,G__112338) : tailrecursion.hoplon.span.call(null,G__112337,G__112338));
})();
var G__112304 = "]\n                   (";
var G__112305 = (function (){var G__112339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112340 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112339,G__112340) : tailrecursion.hoplon.span.call(null,G__112339,G__112340));
})();
var G__112306 = "(";
var G__112307 = (function (){var G__112341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112342 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112341,G__112342) : tailrecursion.hoplon.span.call(null,G__112341,G__112342));
})();
var G__112308 = "[";
var G__112309 = (function (){var G__112343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112344 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112343,G__112344) : tailrecursion.hoplon.span.call(null,G__112343,G__112344));
})();
var G__112310 = "] (";
var G__112311 = (function (){var G__112345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112346 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112345,G__112346) : tailrecursion.hoplon.span.call(null,G__112345,G__112346));
})();
var G__112312 = (function (){var G__112347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112348 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112347,G__112348) : tailrecursion.hoplon.span.call(null,G__112347,G__112348));
})();
var G__112313 = " ";
var G__112314 = (function (){var G__112349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112350 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112349,G__112350) : tailrecursion.hoplon.span.call(null,G__112349,G__112350));
})();
var G__112315 = "))\n                        (";
var G__112316 = (function (){var G__112351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112352 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112351,G__112352) : tailrecursion.hoplon.span.call(null,G__112351,G__112352));
})();
var G__112317 = (function (){var G__112353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112354 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112353,G__112354) : tailrecursion.hoplon.span.call(null,G__112353,G__112354));
})();
var G__112318 = " ";
var G__112319 = (function (){var G__112355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112356 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112355,G__112356) : tailrecursion.hoplon.span.call(null,G__112355,G__112356));
})();
var G__112320 = ")))\n                 (";
var G__112321 = (function (){var G__112357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112358 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112357,G__112358) : tailrecursion.hoplon.span.call(null,G__112357,G__112358));
})();
var G__112322 = (function (){var G__112359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112360 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112359,G__112360) : tailrecursion.hoplon.span.call(null,G__112359,G__112360));
})();
var G__112323 = " (";
var G__112324 = (function (){var G__112361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112362 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112361,G__112362) : tailrecursion.hoplon.span.call(null,G__112361,G__112362));
})();
var G__112325 = (function (){var G__112363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112364 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112363,G__112364) : tailrecursion.hoplon.span.call(null,G__112363,G__112364));
})();
var G__112326 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__112291,G__112292,G__112293,G__112294,G__112295,G__112296,G__112297,G__112298,G__112299,G__112300,G__112301,G__112302,G__112303,G__112304,G__112305,G__112306,G__112307,G__112308,G__112309,G__112310,G__112311,G__112312,G__112313,G__112314,G__112315,G__112316,G__112317,G__112318,G__112319,G__112320,G__112321,G__112322,G__112323,G__112324,G__112325,G__112326) : tailrecursion.hoplon.pre.call(null,G__112291,G__112292,G__112293,G__112294,G__112295,G__112296,G__112297,G__112298,G__112299,G__112300,G__112301,G__112302,G__112303,G__112304,G__112305,G__112306,G__112307,G__112308,G__112309,G__112310,G__112311,G__112312,G__112313,G__112314,G__112315,G__112316,G__112317,G__112318,G__112319,G__112320,G__112321,G__112322,G__112323,G__112324,G__112325,G__112326));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112289,G__112290) : tailrecursion.hoplon.div.call(null,G__112289,G__112290));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112288) : tailrecursion.hoplon.div.call(null,G__112288));
})(),(function (){var G__112365 = cljs.core.PersistentArrayMap.EMPTY;
var G__112366 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The combination of mapping and accumulating with ",(function (){var G__112367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__112368 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112367,G__112368) : tailrecursion.hoplon.markdown.code_node.call(null,G__112367,G__112368));
})()," is so common in this sort of program that we will isolate it as a separate procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112365,G__112366) : tailrecursion.hoplon.markdown.para_node.call(null,G__112365,G__112366));
})(),(function (){var G__112369 = (function (){var G__112370 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112371 = (function (){var G__112372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112373 = "(";
var G__112374 = (function (){var G__112392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112393 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112392,G__112393) : tailrecursion.hoplon.span.call(null,G__112392,G__112393));
})();
var G__112375 = (function (){var G__112394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112395 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112394,G__112395) : tailrecursion.hoplon.span.call(null,G__112394,G__112395));
})();
var G__112376 = " [";
var G__112377 = (function (){var G__112396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112397 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112396,G__112397) : tailrecursion.hoplon.span.call(null,G__112396,G__112397));
})();
var G__112378 = " ";
var G__112379 = (function (){var G__112398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112399 = "seq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112398,G__112399) : tailrecursion.hoplon.span.call(null,G__112398,G__112399));
})();
var G__112380 = "]\n  (";
var G__112381 = (function (){var G__112400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112401 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112400,G__112401) : tailrecursion.hoplon.span.call(null,G__112400,G__112401));
})();
var G__112382 = " ";
var G__112383 = (function (){var G__112402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112403 = "append";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112402,G__112403) : tailrecursion.hoplon.span.call(null,G__112402,G__112403));
})();
var G__112384 = " ";
var G__112385 = (function (){var G__112404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112405 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112404,G__112405) : tailrecursion.hoplon.span.call(null,G__112404,G__112405));
})();
var G__112386 = " (";
var G__112387 = (function (){var G__112406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112407 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112406,G__112407) : tailrecursion.hoplon.span.call(null,G__112406,G__112407));
})();
var G__112388 = (function (){var G__112408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112409 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112408,G__112409) : tailrecursion.hoplon.span.call(null,G__112408,G__112409));
})();
var G__112389 = " ";
var G__112390 = (function (){var G__112410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112411 = "seq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112410,G__112411) : tailrecursion.hoplon.span.call(null,G__112410,G__112411));
})();
var G__112391 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__112372,G__112373,G__112374,G__112375,G__112376,G__112377,G__112378,G__112379,G__112380,G__112381,G__112382,G__112383,G__112384,G__112385,G__112386,G__112387,G__112388,G__112389,G__112390,G__112391) : tailrecursion.hoplon.pre.call(null,G__112372,G__112373,G__112374,G__112375,G__112376,G__112377,G__112378,G__112379,G__112380,G__112381,G__112382,G__112383,G__112384,G__112385,G__112386,G__112387,G__112388,G__112389,G__112390,G__112391));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112370,G__112371) : tailrecursion.hoplon.div.call(null,G__112370,G__112371));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112369) : tailrecursion.hoplon.div.call(null,G__112369));
})(),(function (){var G__112412 = cljs.core.PersistentArrayMap.EMPTY;
var G__112413 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now filter this sequence of pairs to find those whose sum is prime. The filter predicate is called for each element of the sequence; its argument is a pair and it must extract the integers from the pair. Thus, the predicate to apply to each element in the sequence is"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112412,G__112413) : tailrecursion.hoplon.markdown.para_node.call(null,G__112412,G__112413));
})(),(function (){var G__112414 = (function (){var G__112415 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112416 = (function (){var G__112417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112418 = "(";
var G__112419 = (function (){var G__112434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112435 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112434,G__112435) : tailrecursion.hoplon.span.call(null,G__112434,G__112435));
})();
var G__112420 = (function (){var G__112436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112437 = "prime-sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112436,G__112437) : tailrecursion.hoplon.span.call(null,G__112436,G__112437));
})();
var G__112421 = " [";
var G__112422 = (function (){var G__112438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112439 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112438,G__112439) : tailrecursion.hoplon.span.call(null,G__112438,G__112439));
})();
var G__112423 = "]\n  (";
var G__112424 = (function (){var G__112440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112441 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112440,G__112441) : tailrecursion.hoplon.span.call(null,G__112440,G__112441));
})();
var G__112425 = " (";
var G__112426 = (function (){var G__112442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112443 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112442,G__112443) : tailrecursion.hoplon.span.call(null,G__112442,G__112443));
})();
var G__112427 = "(";
var G__112428 = (function (){var G__112444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112445 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112444,G__112445) : tailrecursion.hoplon.span.call(null,G__112444,G__112445));
})();
var G__112429 = (function (){var G__112446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112447 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112446,G__112447) : tailrecursion.hoplon.span.call(null,G__112446,G__112447));
})();
var G__112430 = ") (";
var G__112431 = (function (){var G__112448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112449 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112448,G__112449) : tailrecursion.hoplon.span.call(null,G__112448,G__112449));
})();
var G__112432 = (function (){var G__112450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112451 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112450,G__112451) : tailrecursion.hoplon.span.call(null,G__112450,G__112451));
})();
var G__112433 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__112417,G__112418,G__112419,G__112420,G__112421,G__112422,G__112423,G__112424,G__112425,G__112426,G__112427,G__112428,G__112429,G__112430,G__112431,G__112432,G__112433) : tailrecursion.hoplon.pre.call(null,G__112417,G__112418,G__112419,G__112420,G__112421,G__112422,G__112423,G__112424,G__112425,G__112426,G__112427,G__112428,G__112429,G__112430,G__112431,G__112432,G__112433));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112415,G__112416) : tailrecursion.hoplon.div.call(null,G__112415,G__112416));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112414) : tailrecursion.hoplon.div.call(null,G__112414));
})(),(function (){var G__112452 = cljs.core.PersistentArrayMap.EMPTY;
var G__112453 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Finally, generate the sequence of results by mapping over the filtered pairs using the following procedure, which constructs a triple consisting of the two elements of the pair along with their sum:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112452,G__112453) : tailrecursion.hoplon.markdown.para_node.call(null,G__112452,G__112453));
})(),(function (){var G__112454 = (function (){var G__112455 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112456 = (function (){var G__112457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112458 = "(";
var G__112459 = (function (){var G__112480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112481 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112480,G__112481) : tailrecursion.hoplon.span.call(null,G__112480,G__112481));
})();
var G__112460 = (function (){var G__112482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112483 = "make-pair-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112482,G__112483) : tailrecursion.hoplon.span.call(null,G__112482,G__112483));
})();
var G__112461 = " [";
var G__112462 = (function (){var G__112484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112485 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112484,G__112485) : tailrecursion.hoplon.span.call(null,G__112484,G__112485));
})();
var G__112463 = "]\n  (";
var G__112464 = (function (){var G__112486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112487 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112486,G__112487) : tailrecursion.hoplon.span.call(null,G__112486,G__112487));
})();
var G__112465 = "(";
var G__112466 = (function (){var G__112488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112489 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112488,G__112489) : tailrecursion.hoplon.span.call(null,G__112488,G__112489));
})();
var G__112467 = (function (){var G__112490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112491 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112490,G__112491) : tailrecursion.hoplon.span.call(null,G__112490,G__112491));
})();
var G__112468 = ") (";
var G__112469 = (function (){var G__112492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112493 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112492,G__112493) : tailrecursion.hoplon.span.call(null,G__112492,G__112493));
})();
var G__112470 = (function (){var G__112494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112495 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112494,G__112495) : tailrecursion.hoplon.span.call(null,G__112494,G__112495));
})();
var G__112471 = ") (";
var G__112472 = (function (){var G__112496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112497 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112496,G__112497) : tailrecursion.hoplon.span.call(null,G__112496,G__112497));
})();
var G__112473 = "(";
var G__112474 = (function (){var G__112498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112499 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112498,G__112499) : tailrecursion.hoplon.span.call(null,G__112498,G__112499));
})();
var G__112475 = (function (){var G__112500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112501 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112500,G__112501) : tailrecursion.hoplon.span.call(null,G__112500,G__112501));
})();
var G__112476 = ") (";
var G__112477 = (function (){var G__112502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112503 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112502,G__112503) : tailrecursion.hoplon.span.call(null,G__112502,G__112503));
})();
var G__112478 = (function (){var G__112504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112505 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112504,G__112505) : tailrecursion.hoplon.span.call(null,G__112504,G__112505));
})();
var G__112479 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__112457,G__112458,G__112459,G__112460,G__112461,G__112462,G__112463,G__112464,G__112465,G__112466,G__112467,G__112468,G__112469,G__112470,G__112471,G__112472,G__112473,G__112474,G__112475,G__112476,G__112477,G__112478,G__112479) : tailrecursion.hoplon.pre.call(null,G__112457,G__112458,G__112459,G__112460,G__112461,G__112462,G__112463,G__112464,G__112465,G__112466,G__112467,G__112468,G__112469,G__112470,G__112471,G__112472,G__112473,G__112474,G__112475,G__112476,G__112477,G__112478,G__112479));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112455,G__112456) : tailrecursion.hoplon.div.call(null,G__112455,G__112456));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112454) : tailrecursion.hoplon.div.call(null,G__112454));
})(),(function (){var G__112506 = cljs.core.PersistentArrayMap.EMPTY;
var G__112507 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Combining all these steps yields the complete procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112506,G__112507) : tailrecursion.hoplon.markdown.para_node.call(null,G__112506,G__112507));
})(),(function (){var G__112508 = (function (){var G__112509 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112510 = (function (){var G__112511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112512 = "(";
var G__112513 = (function (){var G__112551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112552 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112551,G__112552) : tailrecursion.hoplon.span.call(null,G__112551,G__112552));
})();
var G__112514 = (function (){var G__112553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112554 = "prime-sum-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112553,G__112554) : tailrecursion.hoplon.span.call(null,G__112553,G__112554));
})();
var G__112515 = " [";
var G__112516 = (function (){var G__112555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112556 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112555,G__112556) : tailrecursion.hoplon.span.call(null,G__112555,G__112556));
})();
var G__112517 = "]\n  (";
var G__112518 = (function (){var G__112557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112558 = "make-pair-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112557,G__112558) : tailrecursion.hoplon.span.call(null,G__112557,G__112558));
})();
var G__112519 = "\n    (";
var G__112520 = (function (){var G__112559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112560 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112559,G__112560) : tailrecursion.hoplon.span.call(null,G__112559,G__112560));
})();
var G__112521 = (function (){var G__112561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112562 = "prime-sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112561,G__112562) : tailrecursion.hoplon.span.call(null,G__112561,G__112562));
})();
var G__112522 = "\n      (";
var G__112523 = (function (){var G__112563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112564 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112563,G__112564) : tailrecursion.hoplon.span.call(null,G__112563,G__112564));
})();
var G__112524 = "\n        (";
var G__112525 = (function (){var G__112565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112566 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112565,G__112566) : tailrecursion.hoplon.span.call(null,G__112565,G__112566));
})();
var G__112526 = "[";
var G__112527 = (function (){var G__112567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112568 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112567,G__112568) : tailrecursion.hoplon.span.call(null,G__112567,G__112568));
})();
var G__112528 = "]\n          (";
var G__112529 = (function (){var G__112569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112570 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112569,G__112570) : tailrecursion.hoplon.span.call(null,G__112569,G__112570));
})();
var G__112530 = "(";
var G__112531 = (function (){var G__112571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112572 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112571,G__112572) : tailrecursion.hoplon.span.call(null,G__112571,G__112572));
})();
var G__112532 = "[";
var G__112533 = (function (){var G__112573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112574 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112573,G__112574) : tailrecursion.hoplon.span.call(null,G__112573,G__112574));
})();
var G__112534 = "] (";
var G__112535 = (function (){var G__112575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112576 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112575,G__112576) : tailrecursion.hoplon.span.call(null,G__112575,G__112576));
})();
var G__112536 = (function (){var G__112577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112578 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112577,G__112578) : tailrecursion.hoplon.span.call(null,G__112577,G__112578));
})();
var G__112537 = " ";
var G__112538 = (function (){var G__112579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112580 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112579,G__112580) : tailrecursion.hoplon.span.call(null,G__112579,G__112580));
})();
var G__112539 = "))\n               (";
var G__112540 = (function (){var G__112581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112582 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112581,G__112582) : tailrecursion.hoplon.span.call(null,G__112581,G__112582));
})();
var G__112541 = (function (){var G__112583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112584 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112583,G__112584) : tailrecursion.hoplon.span.call(null,G__112583,G__112584));
})();
var G__112542 = " ";
var G__112543 = (function (){var G__112585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112586 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112585,G__112586) : tailrecursion.hoplon.span.call(null,G__112585,G__112586));
})();
var G__112544 = ")))\n        (";
var G__112545 = (function (){var G__112587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112588 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112587,G__112588) : tailrecursion.hoplon.span.call(null,G__112587,G__112588));
})();
var G__112546 = (function (){var G__112589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112590 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112589,G__112590) : tailrecursion.hoplon.span.call(null,G__112589,G__112590));
})();
var G__112547 = " (";
var G__112548 = (function (){var G__112591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112592 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112591,G__112592) : tailrecursion.hoplon.span.call(null,G__112591,G__112592));
})();
var G__112549 = (function (){var G__112593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112594 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112593,G__112594) : tailrecursion.hoplon.span.call(null,G__112593,G__112594));
})();
var G__112550 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__112511,G__112512,G__112513,G__112514,G__112515,G__112516,G__112517,G__112518,G__112519,G__112520,G__112521,G__112522,G__112523,G__112524,G__112525,G__112526,G__112527,G__112528,G__112529,G__112530,G__112531,G__112532,G__112533,G__112534,G__112535,G__112536,G__112537,G__112538,G__112539,G__112540,G__112541,G__112542,G__112543,G__112544,G__112545,G__112546,G__112547,G__112548,G__112549,G__112550) : tailrecursion.hoplon.pre.call(null,G__112511,G__112512,G__112513,G__112514,G__112515,G__112516,G__112517,G__112518,G__112519,G__112520,G__112521,G__112522,G__112523,G__112524,G__112525,G__112526,G__112527,G__112528,G__112529,G__112530,G__112531,G__112532,G__112533,G__112534,G__112535,G__112536,G__112537,G__112538,G__112539,G__112540,G__112541,G__112542,G__112543,G__112544,G__112545,G__112546,G__112547,G__112548,G__112549,G__112550));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112509,G__112510) : tailrecursion.hoplon.div.call(null,G__112509,G__112510));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112508) : tailrecursion.hoplon.div.call(null,G__112508));
})(),(function (){var G__112595 = cljs.core.PersistentArrayMap.EMPTY;
var G__112596 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Nested mappings are also useful for sequences other than those that enumerate intervals. Suppose we wish to generate all the permutations of a set \\(S\\); that is, all the ways of ordering the items in the set. For instance, the permutations of {1,2,3} are {1,2,3}, {1,3,2}, {2,1,3}, {2,3,1}, {3,1,2}, and {3,2,1}. Here is a plan for generating the permutations of \\(S\\): For each item \\(x\\) in \\(S\\), recursively generate the sequence of permutations of \\(S-x\\),",(function (){var G__112597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__112598 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The set \\(S-x\\) is the set of all elements of \\(S\\), excluding \\(x\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__112597,G__112598) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__112597,G__112598));
})()," and adjoin \\(x\\) to the front of each one. This yields, for each \\(x\\) in \\(S\\), the sequence of permutations of \\(S\\) that begin with \\(x\\). Combining these sequences for all \\(x\\) gives all the permutations of \\(S\\):",(function (){var G__112599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__112600 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Semicolons in Scheme code are used to introduce comments. Everything from the semicolon to the end of the line is ignored by the interpreter. In this book we don't use many comments; we try to make our programs self-documenting by using descriptive names."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__112599,G__112600) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__112599,G__112600));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112595,G__112596) : tailrecursion.hoplon.markdown.para_node.call(null,G__112595,G__112596));
})(),(function (){var G__112601 = (function (){var G__112602 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112603 = (function (){var G__112604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112605 = "(";
var G__112606 = (function (){var G__112651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112652 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112651,G__112652) : tailrecursion.hoplon.span.call(null,G__112651,G__112652));
})();
var G__112607 = (function (){var G__112653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112654 = "permutations";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112653,G__112654) : tailrecursion.hoplon.span.call(null,G__112653,G__112654));
})();
var G__112608 = " [";
var G__112609 = (function (){var G__112655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112656 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112655,G__112656) : tailrecursion.hoplon.span.call(null,G__112655,G__112656));
})();
var G__112610 = "]\n  (";
var G__112611 = (function (){var G__112657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112658 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112657,G__112658) : tailrecursion.hoplon.span.call(null,G__112657,G__112658));
})();
var G__112612 = "(";
var G__112613 = (function (){var G__112659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112660 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112659,G__112660) : tailrecursion.hoplon.span.call(null,G__112659,G__112660));
})();
var G__112614 = " ";
var G__112615 = (function (){var G__112661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112662 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112661,G__112662) : tailrecursion.hoplon.span.call(null,G__112661,G__112662));
})();
var G__112616 = ")      ";
var G__112617 = (function (){var G__112663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__112664 = "; empty set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112663,G__112664) : tailrecursion.hoplon.span.call(null,G__112663,G__112664));
})();
var G__112618 = "\n      (";
var G__112619 = (function (){var G__112665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112666 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112665,G__112666) : tailrecursion.hoplon.span.call(null,G__112665,G__112666));
})();
var G__112620 = "(";
var G__112621 = (function (){var G__112667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112668 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112667,G__112668) : tailrecursion.hoplon.span.call(null,G__112667,G__112668));
})();
var G__112622 = "))  ";
var G__112623 = (function (){var G__112669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__112670 = "; sequence containing only the empty list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112669,G__112670) : tailrecursion.hoplon.span.call(null,G__112669,G__112670));
})();
var G__112624 = "\n      (";
var G__112625 = (function (){var G__112671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112672 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112671,G__112672) : tailrecursion.hoplon.span.call(null,G__112671,G__112672));
})();
var G__112626 = " (";
var G__112627 = (function (){var G__112673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112674 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112673,G__112674) : tailrecursion.hoplon.span.call(null,G__112673,G__112674));
})();
var G__112628 = "[";
var G__112629 = (function (){var G__112675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112676 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112675,G__112676) : tailrecursion.hoplon.span.call(null,G__112675,G__112676));
})();
var G__112630 = "]\n                 (";
var G__112631 = (function (){var G__112677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112678 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112677,G__112678) : tailrecursion.hoplon.span.call(null,G__112677,G__112678));
})();
var G__112632 = "(";
var G__112633 = (function (){var G__112679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112680 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112679,G__112680) : tailrecursion.hoplon.span.call(null,G__112679,G__112680));
})();
var G__112634 = "[";
var G__112635 = (function (){var G__112681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112682 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112681,G__112682) : tailrecursion.hoplon.span.call(null,G__112681,G__112682));
})();
var G__112636 = "] (";
var G__112637 = (function (){var G__112683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112684 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112683,G__112684) : tailrecursion.hoplon.span.call(null,G__112683,G__112684));
})();
var G__112638 = (function (){var G__112685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112686 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112685,G__112686) : tailrecursion.hoplon.span.call(null,G__112685,G__112686));
})();
var G__112639 = " ";
var G__112640 = (function (){var G__112687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112688 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112687,G__112688) : tailrecursion.hoplon.span.call(null,G__112687,G__112688));
})();
var G__112641 = "))\n                      (";
var G__112642 = (function (){var G__112689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112690 = "permutations";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112689,G__112690) : tailrecursion.hoplon.span.call(null,G__112689,G__112690));
})();
var G__112643 = " (";
var G__112644 = (function (){var G__112691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112692 = "remove ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112691,G__112692) : tailrecursion.hoplon.span.call(null,G__112691,G__112692));
})();
var G__112645 = (function (){var G__112693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112694 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112693,G__112694) : tailrecursion.hoplon.span.call(null,G__112693,G__112694));
})();
var G__112646 = " ";
var G__112647 = (function (){var G__112695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112696 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112695,G__112696) : tailrecursion.hoplon.span.call(null,G__112695,G__112696));
})();
var G__112648 = "))))\n               ";
var G__112649 = (function (){var G__112697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112698 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112697,G__112698) : tailrecursion.hoplon.span.call(null,G__112697,G__112698));
})();
var G__112650 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__112604,G__112605,G__112606,G__112607,G__112608,G__112609,G__112610,G__112611,G__112612,G__112613,G__112614,G__112615,G__112616,G__112617,G__112618,G__112619,G__112620,G__112621,G__112622,G__112623,G__112624,G__112625,G__112626,G__112627,G__112628,G__112629,G__112630,G__112631,G__112632,G__112633,G__112634,G__112635,G__112636,G__112637,G__112638,G__112639,G__112640,G__112641,G__112642,G__112643,G__112644,G__112645,G__112646,G__112647,G__112648,G__112649,G__112650) : tailrecursion.hoplon.pre.call(null,G__112604,G__112605,G__112606,G__112607,G__112608,G__112609,G__112610,G__112611,G__112612,G__112613,G__112614,G__112615,G__112616,G__112617,G__112618,G__112619,G__112620,G__112621,G__112622,G__112623,G__112624,G__112625,G__112626,G__112627,G__112628,G__112629,G__112630,G__112631,G__112632,G__112633,G__112634,G__112635,G__112636,G__112637,G__112638,G__112639,G__112640,G__112641,G__112642,G__112643,G__112644,G__112645,G__112646,G__112647,G__112648,G__112649,G__112650));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112602,G__112603) : tailrecursion.hoplon.div.call(null,G__112602,G__112603));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112601) : tailrecursion.hoplon.div.call(null,G__112601));
})(),(function (){var G__112699 = cljs.core.PersistentArrayMap.EMPTY;
var G__112700 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice how this strategy reduces the problem of generating permutations of \\(S\\) to the problem of generating the permutations of sets with fewer elements than \\(S\\). In the terminal case, we work our way down to the empty list, which represents a set of no elements. For this, we generate ",(function (){var G__112701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list (list ))"], null);
var G__112702 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112701,G__112702) : tailrecursion.hoplon.markdown.code_node.call(null,G__112701,G__112702));
})(),", which is a sequence with one item, namely the set with no elements. The remove procedure used in permutations returns all the items in a given sequence except for a given item. This can be expressed as a simple filter:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112699,G__112700) : tailrecursion.hoplon.markdown.para_node.call(null,G__112699,G__112700));
})(),(function (){var G__112703 = (function (){var G__112704 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112705 = (function (){var G__112706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112707 = "(";
var G__112708 = (function (){var G__112725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112726 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112725,G__112726) : tailrecursion.hoplon.span.call(null,G__112725,G__112726));
})();
var G__112709 = (function (){var G__112727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112728 = "remove ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112727,G__112728) : tailrecursion.hoplon.span.call(null,G__112727,G__112728));
})();
var G__112710 = "[";
var G__112711 = (function (){var G__112729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112730 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112729,G__112730) : tailrecursion.hoplon.span.call(null,G__112729,G__112730));
})();
var G__112712 = " ";
var G__112713 = (function (){var G__112731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112732 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112731,G__112732) : tailrecursion.hoplon.span.call(null,G__112731,G__112732));
})();
var G__112714 = "]\n  (";
var G__112715 = (function (){var G__112733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112734 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112733,G__112734) : tailrecursion.hoplon.span.call(null,G__112733,G__112734));
})();
var G__112716 = (function (){var G__112735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112736 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112735,G__112736) : tailrecursion.hoplon.span.call(null,G__112735,G__112736));
})();
var G__112717 = "(";
var G__112718 = (function (){var G__112737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112738 = "not= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112737,G__112738) : tailrecursion.hoplon.span.call(null,G__112737,G__112738));
})();
var G__112719 = (function (){var G__112739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112740 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112739,G__112740) : tailrecursion.hoplon.span.call(null,G__112739,G__112740));
})();
var G__112720 = " ";
var G__112721 = (function (){var G__112741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112742 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112741,G__112742) : tailrecursion.hoplon.span.call(null,G__112741,G__112742));
})();
var G__112722 = ") \n          ";
var G__112723 = (function (){var G__112743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112744 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112743,G__112744) : tailrecursion.hoplon.span.call(null,G__112743,G__112744));
})();
var G__112724 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__112706,G__112707,G__112708,G__112709,G__112710,G__112711,G__112712,G__112713,G__112714,G__112715,G__112716,G__112717,G__112718,G__112719,G__112720,G__112721,G__112722,G__112723,G__112724) : tailrecursion.hoplon.pre.call(null,G__112706,G__112707,G__112708,G__112709,G__112710,G__112711,G__112712,G__112713,G__112714,G__112715,G__112716,G__112717,G__112718,G__112719,G__112720,G__112721,G__112722,G__112723,G__112724));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112704,G__112705) : tailrecursion.hoplon.div.call(null,G__112704,G__112705));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112703) : tailrecursion.hoplon.div.call(null,G__112703));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112265;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112264;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112263;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112262;
}})()], 0));
var G__101406 = "";
var G__101407 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_112745 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112746 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112747 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112748 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112749 = cljs.core.PersistentArrayMap.EMPTY;
var G__112750 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__112751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"unique-pairs"], null);
var G__112752 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112751,G__112752) : tailrecursion.hoplon.markdown.code_node.call(null,G__112751,G__112752));
})()," that, given an integer \\(n\\), generates the sequence of pairs \\((i,j)\\) with \\(1\\leq j\\lt i\\leq n\\). Use ",(function (){var G__112753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"unique-pairs"], null);
var G__112754 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112753,G__112754) : tailrecursion.hoplon.markdown.code_node.call(null,G__112753,G__112754));
})()," to simplify the definition of ",(function (){var G__112755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"prime-sum-pairs"], null);
var G__112756 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__112755,G__112756) : tailrecursion.hoplon.markdown.code_node.call(null,G__112755,G__112756));
})()," given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112749,G__112750) : tailrecursion.hoplon.markdown.para_node.call(null,G__112749,G__112750));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112748;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112747;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112746;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112745;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_112757 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112758 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112759 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112760 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112761 = (function (){var G__112762 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112763 = (function (){var G__112764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112765 = "(";
var G__112766 = (function (){var G__112799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112800 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112799,G__112800) : tailrecursion.hoplon.span.call(null,G__112799,G__112800));
})();
var G__112767 = (function (){var G__112801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112802 = "make-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112801,G__112802) : tailrecursion.hoplon.span.call(null,G__112801,G__112802));
})();
var G__112768 = " [";
var G__112769 = (function (){var G__112803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112804 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112803,G__112804) : tailrecursion.hoplon.span.call(null,G__112803,G__112804));
})();
var G__112770 = "]\n  (";
var G__112771 = (function (){var G__112805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112806 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112805,G__112806) : tailrecursion.hoplon.span.call(null,G__112805,G__112806));
})();
var G__112772 = (function (){var G__112807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112808 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112807,G__112808) : tailrecursion.hoplon.span.call(null,G__112807,G__112808));
})();
var G__112773 = "(";
var G__112774 = (function (){var G__112809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112810 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112809,G__112810) : tailrecursion.hoplon.span.call(null,G__112809,G__112810));
})();
var G__112775 = (function (){var G__112811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112812 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112811,G__112812) : tailrecursion.hoplon.span.call(null,G__112811,G__112812));
})();
var G__112776 = " ";
var G__112777 = (function (){var G__112813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112814 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112813,G__112814) : tailrecursion.hoplon.span.call(null,G__112813,G__112814));
})();
var G__112778 = ")\n    (";
var G__112779 = (function (){var G__112815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112816 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112815,G__112816) : tailrecursion.hoplon.span.call(null,G__112815,G__112816));
})();
var G__112780 = (function (){var G__112817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112818 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112817,G__112818) : tailrecursion.hoplon.span.call(null,G__112817,G__112818));
})();
var G__112781 = " ";
var G__112782 = (function (){var G__112819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112820 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112819,G__112820) : tailrecursion.hoplon.span.call(null,G__112819,G__112820));
})();
var G__112783 = ")))\n\n(";
var G__112784 = (function (){var G__112821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112822 = "devn";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112821,G__112822) : tailrecursion.hoplon.span.call(null,G__112821,G__112822));
})();
var G__112785 = " ";
var G__112786 = (function (){var G__112823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112824 = "unique-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112823,G__112824) : tailrecursion.hoplon.span.call(null,G__112823,G__112824));
})();
var G__112787 = " [";
var G__112788 = (function (){var G__112825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112826 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112825,G__112826) : tailrecursion.hoplon.span.call(null,G__112825,G__112826));
})();
var G__112789 = "]\n  (";
var G__112790 = (function (){var G__112827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112828 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112827,G__112828) : tailrecursion.hoplon.span.call(null,G__112827,G__112828));
})();
var G__112791 = " ";
var G__112792 = (function (){var G__112829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112830 = "make-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112829,G__112830) : tailrecursion.hoplon.span.call(null,G__112829,G__112830));
})();
var G__112793 = " (";
var G__112794 = (function (){var G__112831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112832 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112831,G__112832) : tailrecursion.hoplon.span.call(null,G__112831,G__112832));
})();
var G__112795 = (function (){var G__112833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112834 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112833,G__112834) : tailrecursion.hoplon.span.call(null,G__112833,G__112834));
})();
var G__112796 = " ";
var G__112797 = (function (){var G__112835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112836 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112835,G__112836) : tailrecursion.hoplon.span.call(null,G__112835,G__112836));
})();
var G__112798 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__112764,G__112765,G__112766,G__112767,G__112768,G__112769,G__112770,G__112771,G__112772,G__112773,G__112774,G__112775,G__112776,G__112777,G__112778,G__112779,G__112780,G__112781,G__112782,G__112783,G__112784,G__112785,G__112786,G__112787,G__112788,G__112789,G__112790,G__112791,G__112792,G__112793,G__112794,G__112795,G__112796,G__112797,G__112798) : tailrecursion.hoplon.pre.call(null,G__112764,G__112765,G__112766,G__112767,G__112768,G__112769,G__112770,G__112771,G__112772,G__112773,G__112774,G__112775,G__112776,G__112777,G__112778,G__112779,G__112780,G__112781,G__112782,G__112783,G__112784,G__112785,G__112786,G__112787,G__112788,G__112789,G__112790,G__112791,G__112792,G__112793,G__112794,G__112795,G__112796,G__112797,G__112798));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112762,G__112763) : tailrecursion.hoplon.div.call(null,G__112762,G__112763));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112761) : tailrecursion.hoplon.div.call(null,G__112761));
})(),(function (){var G__112837 = cljs.core.PersistentArrayMap.EMPTY;
var G__112838 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112837,G__112838) : tailrecursion.hoplon.markdown.para_node.call(null,G__112837,G__112838));
})(),(function (){var G__112839 = (function (){var G__112840 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112841 = (function (){var G__112842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112843 = "(";
var G__112844 = (function (){var G__112858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112859 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112858,G__112859) : tailrecursion.hoplon.span.call(null,G__112858,G__112859));
})();
var G__112845 = (function (){var G__112860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112861 = "prime-sum-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112860,G__112861) : tailrecursion.hoplon.span.call(null,G__112860,G__112861));
})();
var G__112846 = " [";
var G__112847 = (function (){var G__112862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112863 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112862,G__112863) : tailrecursion.hoplon.span.call(null,G__112862,G__112863));
})();
var G__112848 = "]\n  (";
var G__112849 = (function (){var G__112864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112865 = "make-pair-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112864,G__112865) : tailrecursion.hoplon.span.call(null,G__112864,G__112865));
})();
var G__112850 = "\n    (";
var G__112851 = (function (){var G__112866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112867 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112866,G__112867) : tailrecursion.hoplon.span.call(null,G__112866,G__112867));
})();
var G__112852 = (function (){var G__112868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112869 = "prime-sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112868,G__112869) : tailrecursion.hoplon.span.call(null,G__112868,G__112869));
})();
var G__112853 = "\n            (";
var G__112854 = (function (){var G__112870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112871 = "unique-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112870,G__112871) : tailrecursion.hoplon.span.call(null,G__112870,G__112871));
})();
var G__112855 = " ";
var G__112856 = (function (){var G__112872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112873 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112872,G__112873) : tailrecursion.hoplon.span.call(null,G__112872,G__112873));
})();
var G__112857 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__112842,G__112843,G__112844,G__112845,G__112846,G__112847,G__112848,G__112849,G__112850,G__112851,G__112852,G__112853,G__112854,G__112855,G__112856,G__112857) : tailrecursion.hoplon.pre.call(null,G__112842,G__112843,G__112844,G__112845,G__112846,G__112847,G__112848,G__112849,G__112850,G__112851,G__112852,G__112853,G__112854,G__112855,G__112856,G__112857));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112840,G__112841) : tailrecursion.hoplon.div.call(null,G__112840,G__112841));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112839) : tailrecursion.hoplon.div.call(null,G__112839));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112760;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112759;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112758;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112757;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_112874 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112875 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112876 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112877 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112878 = cljs.core.PersistentArrayMap.EMPTY;
var G__112879 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Write a procedure to find all ordered triples of distinct positive integers \\(i\\), \\(j\\), and \\(k\\) less than or equal to a given integer \\(n\\) that sum to a given integer \\(s\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__112878,G__112879) : tailrecursion.hoplon.markdown.para_node.call(null,G__112878,G__112879));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112877;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112876;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112875;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112874;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_112880 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112881 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_112882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_112883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__112884 = (function (){var G__112885 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__112886 = (function (){var G__112887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__112888 = "(";
var G__112889 = (function (){var G__112958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112959 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112958,G__112959) : tailrecursion.hoplon.span.call(null,G__112958,G__112959));
})();
var G__112890 = (function (){var G__112960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112961 = "make-triples";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112960,G__112961) : tailrecursion.hoplon.span.call(null,G__112960,G__112961));
})();
var G__112891 = " [";
var G__112892 = (function (){var G__112962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112963 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112962,G__112963) : tailrecursion.hoplon.span.call(null,G__112962,G__112963));
})();
var G__112893 = "]\n  (";
var G__112894 = (function (){var G__112964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112965 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112964,G__112965) : tailrecursion.hoplon.span.call(null,G__112964,G__112965));
})();
var G__112895 = (function (){var G__112966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112967 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112966,G__112967) : tailrecursion.hoplon.span.call(null,G__112966,G__112967));
})();
var G__112896 = "(";
var G__112897 = (function (){var G__112968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112969 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112968,G__112969) : tailrecursion.hoplon.span.call(null,G__112968,G__112969));
})();
var G__112898 = (function (){var G__112970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112971 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112970,G__112971) : tailrecursion.hoplon.span.call(null,G__112970,G__112971));
})();
var G__112899 = " (";
var G__112900 = (function (){var G__112972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112973 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112972,G__112973) : tailrecursion.hoplon.span.call(null,G__112972,G__112973));
})();
var G__112901 = (function (){var G__112974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112975 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112974,G__112975) : tailrecursion.hoplon.span.call(null,G__112974,G__112975));
})();
var G__112902 = ") (";
var G__112903 = (function (){var G__112976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112977 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112976,G__112977) : tailrecursion.hoplon.span.call(null,G__112976,G__112977));
})();
var G__112904 = (function (){var G__112978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112979 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112978,G__112979) : tailrecursion.hoplon.span.call(null,G__112978,G__112979));
})();
var G__112905 = ")) (";
var G__112906 = (function (){var G__112980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112981 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112980,G__112981) : tailrecursion.hoplon.span.call(null,G__112980,G__112981));
})();
var G__112907 = (function (){var G__112982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__112983 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112982,G__112983) : tailrecursion.hoplon.span.call(null,G__112982,G__112983));
})();
var G__112908 = " (";
var G__112909 = (function (){var G__112984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__112985 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112984,G__112985) : tailrecursion.hoplon.span.call(null,G__112984,G__112985));
})();
var G__112910 = (function (){var G__112986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112987 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112986,G__112987) : tailrecursion.hoplon.span.call(null,G__112986,G__112987));
})();
var G__112911 = "))))\n\n(";
var G__112912 = (function (){var G__112988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__112989 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112988,G__112989) : tailrecursion.hoplon.span.call(null,G__112988,G__112989));
})();
var G__112913 = (function (){var G__112990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112991 = "unique-triples";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112990,G__112991) : tailrecursion.hoplon.span.call(null,G__112990,G__112991));
})();
var G__112914 = " [";
var G__112915 = (function (){var G__112992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112993 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112992,G__112993) : tailrecursion.hoplon.span.call(null,G__112992,G__112993));
})();
var G__112916 = "]\n  (";
var G__112917 = (function (){var G__112994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112995 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112994,G__112995) : tailrecursion.hoplon.span.call(null,G__112994,G__112995));
})();
var G__112918 = " ";
var G__112919 = (function (){var G__112996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__112997 = "make-triples";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112996,G__112997) : tailrecursion.hoplon.span.call(null,G__112996,G__112997));
})();
var G__112920 = " \n           (";
var G__112921 = (function (){var G__112998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__112999 = "unique-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__112998,G__112999) : tailrecursion.hoplon.span.call(null,G__112998,G__112999));
})();
var G__112922 = " ";
var G__112923 = (function (){var G__113000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113001 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113000,G__113001) : tailrecursion.hoplon.span.call(null,G__113000,G__113001));
})();
var G__112924 = ")))\n\n(";
var G__112925 = (function (){var G__113002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113003 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113002,G__113003) : tailrecursion.hoplon.span.call(null,G__113002,G__113003));
})();
var G__112926 = (function (){var G__113004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113005 = "sum-filter?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113004,G__113005) : tailrecursion.hoplon.span.call(null,G__113004,G__113005));
})();
var G__112927 = " [";
var G__112928 = (function (){var G__113006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113007 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113006,G__113007) : tailrecursion.hoplon.span.call(null,G__113006,G__113007));
})();
var G__112929 = " ";
var G__112930 = (function (){var G__113008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113009 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113008,G__113009) : tailrecursion.hoplon.span.call(null,G__113008,G__113009));
})();
var G__112931 = "]\n  (";
var G__112932 = (function (){var G__113010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113011 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113010,G__113011) : tailrecursion.hoplon.span.call(null,G__113010,G__113011));
})();
var G__112933 = (function (){var G__113012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113013 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113012,G__113013) : tailrecursion.hoplon.span.call(null,G__113012,G__113013));
})();
var G__112934 = " (";
var G__112935 = (function (){var G__113014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113015 = "reduce + ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113014,G__113015) : tailrecursion.hoplon.span.call(null,G__113014,G__113015));
})();
var G__112936 = (function (){var G__113016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113017 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113016,G__113017) : tailrecursion.hoplon.span.call(null,G__113016,G__113017));
})();
var G__112937 = ")))\n\n(";
var G__112938 = (function (){var G__113018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113019 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113018,G__113019) : tailrecursion.hoplon.span.call(null,G__113018,G__113019));
})();
var G__112939 = (function (){var G__113020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113021 = "triple-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113020,G__113021) : tailrecursion.hoplon.span.call(null,G__113020,G__113021));
})();
var G__112940 = " [";
var G__112941 = (function (){var G__113022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113023 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113022,G__113023) : tailrecursion.hoplon.span.call(null,G__113022,G__113023));
})();
var G__112942 = " ";
var G__112943 = (function (){var G__113024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113025 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113024,G__113025) : tailrecursion.hoplon.span.call(null,G__113024,G__113025));
})();
var G__112944 = "]\n  (";
var G__112945 = (function (){var G__113026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113027 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113026,G__113027) : tailrecursion.hoplon.span.call(null,G__113026,G__113027));
})();
var G__112946 = (function (){var G__113028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113029 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113028,G__113029) : tailrecursion.hoplon.span.call(null,G__113028,G__113029));
})();
var G__112947 = "(";
var G__112948 = (function (){var G__113030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113031 = "sum-filter?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113030,G__113031) : tailrecursion.hoplon.span.call(null,G__113030,G__113031));
})();
var G__112949 = " ";
var G__112950 = (function (){var G__113032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113033 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113032,G__113033) : tailrecursion.hoplon.span.call(null,G__113032,G__113033));
})();
var G__112951 = " ";
var G__112952 = (function (){var G__113034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113035 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113034,G__113035) : tailrecursion.hoplon.span.call(null,G__113034,G__113035));
})();
var G__112953 = ")\n          (";
var G__112954 = (function (){var G__113036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113037 = "unique-triples";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113036,G__113037) : tailrecursion.hoplon.span.call(null,G__113036,G__113037));
})();
var G__112955 = " ";
var G__112956 = (function (){var G__113038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113039 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113038,G__113039) : tailrecursion.hoplon.span.call(null,G__113038,G__113039));
})();
var G__112957 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__112887,G__112888,G__112889,G__112890,G__112891,G__112892,G__112893,G__112894,G__112895,G__112896,G__112897,G__112898,G__112899,G__112900,G__112901,G__112902,G__112903,G__112904,G__112905,G__112906,G__112907,G__112908,G__112909,G__112910,G__112911,G__112912,G__112913,G__112914,G__112915,G__112916,G__112917,G__112918,G__112919,G__112920,G__112921,G__112922,G__112923,G__112924,G__112925,G__112926,G__112927,G__112928,G__112929,G__112930,G__112931,G__112932,G__112933,G__112934,G__112935,G__112936,G__112937,G__112938,G__112939,G__112940,G__112941,G__112942,G__112943,G__112944,G__112945,G__112946,G__112947,G__112948,G__112949,G__112950,G__112951,G__112952,G__112953,G__112954,G__112955,G__112956,G__112957) : tailrecursion.hoplon.pre.call(null,G__112887,G__112888,G__112889,G__112890,G__112891,G__112892,G__112893,G__112894,G__112895,G__112896,G__112897,G__112898,G__112899,G__112900,G__112901,G__112902,G__112903,G__112904,G__112905,G__112906,G__112907,G__112908,G__112909,G__112910,G__112911,G__112912,G__112913,G__112914,G__112915,G__112916,G__112917,G__112918,G__112919,G__112920,G__112921,G__112922,G__112923,G__112924,G__112925,G__112926,G__112927,G__112928,G__112929,G__112930,G__112931,G__112932,G__112933,G__112934,G__112935,G__112936,G__112937,G__112938,G__112939,G__112940,G__112941,G__112942,G__112943,G__112944,G__112945,G__112946,G__112947,G__112948,G__112949,G__112950,G__112951,G__112952,G__112953,G__112954,G__112955,G__112956,G__112957));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__112885,G__112886) : tailrecursion.hoplon.div.call(null,G__112885,G__112886));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__112884) : tailrecursion.hoplon.div.call(null,G__112884));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112882;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_112881;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_112880;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"A solution to the eight-queens puzzle."], null)], 0)),(function (){var _STAR_references_STAR_113040 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113041 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_113042 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113043 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__113044 = cljs.core.PersistentArrayMap.EMPTY;
var G__113045 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__113046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__113047 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["eight-queens puzzle"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__113046,G__113047) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__113046,G__113047));
})()," asks how to place eight queens on a chessboard so that no queen is in check from any other (i.e., no two queens are in the same row, column, or diagonal). One possible solution is shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/8/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.8"], null)], 0)),". One way to solve the puzzle is to work across the board, placing a queen in each column. Once we have placed \\(k - 1\\) queens, we must place the \\(k\\)th queen in a position where it does not check any of the queens already on the board. We can formulate this approach recursively: Assume that we have already generated the sequence of all possible ways to place \\(k - 1\\) queens in the first \\(k - 1\\) columns of the board. For each of these ways, generate an extended set of positions by placing a queen in each row of the \\(k\\)th column. Now filter these, keeping only the positions for which the queen in the \\(k\\)th column is safe with respect to the other queens. This produces the sequence of all ways to place k queens in the first \\(k\\) columns. By continuing this process, we will produce not only one solution, but all solutions to the puzzle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113044,G__113045) : tailrecursion.hoplon.markdown.para_node.call(null,G__113044,G__113045));
})(),(function (){var G__113048 = cljs.core.PersistentArrayMap.EMPTY;
var G__113049 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We implement this solution as a procedure ",(function (){var G__113050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"queens"], null);
var G__113051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113050,G__113051) : tailrecursion.hoplon.markdown.code_node.call(null,G__113050,G__113051));
})(),", which returns a sequence of all solutions to the problem of placing \\(n\\) queens on an \\(n\\times n\\) chessboard. ",(function (){var G__113052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"Queens"], null);
var G__113053 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113052,G__113053) : tailrecursion.hoplon.markdown.code_node.call(null,G__113052,G__113053));
})()," has an internal procedure ",(function (){var G__113054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"queen-cols"], null);
var G__113055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113054,G__113055) : tailrecursion.hoplon.markdown.code_node.call(null,G__113054,G__113055));
})()," that returns the sequence of all ways to place queens in the first \\(k\\) columns of the board."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113048,G__113049) : tailrecursion.hoplon.markdown.para_node.call(null,G__113048,G__113049));
})(),(function (){var G__113056 = (function (){var G__113057 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__113058 = (function (){var G__113059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__113060 = "(";
var G__113061 = (function (){var G__113131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113132 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113131,G__113132) : tailrecursion.hoplon.span.call(null,G__113131,G__113132));
})();
var G__113062 = (function (){var G__113133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113134 = "queens";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113133,G__113134) : tailrecursion.hoplon.span.call(null,G__113133,G__113134));
})();
var G__113063 = " [";
var G__113064 = (function (){var G__113135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113136 = "board-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113135,G__113136) : tailrecursion.hoplon.span.call(null,G__113135,G__113136));
})();
var G__113065 = "]\n  (";
var G__113066 = (function (){var G__113137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113138 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113137,G__113138) : tailrecursion.hoplon.span.call(null,G__113137,G__113138));
})();
var G__113067 = "[";
var G__113068 = (function (){var G__113139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113140 = "queen-cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113139,G__113140) : tailrecursion.hoplon.span.call(null,G__113139,G__113140));
})();
var G__113069 = " \n        (";
var G__113070 = (function (){var G__113141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113142 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113141,G__113142) : tailrecursion.hoplon.span.call(null,G__113141,G__113142));
})();
var G__113071 = "[";
var G__113072 = (function (){var G__113143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113144 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113143,G__113144) : tailrecursion.hoplon.span.call(null,G__113143,G__113144));
})();
var G__113073 = "] \n            (";
var G__113074 = (function (){var G__113145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113146 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113145,G__113146) : tailrecursion.hoplon.span.call(null,G__113145,G__113146));
})();
var G__113075 = "(";
var G__113076 = (function (){var G__113147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113148 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113147,G__113148) : tailrecursion.hoplon.span.call(null,G__113147,G__113148));
})();
var G__113077 = (function (){var G__113149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113150 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113149,G__113150) : tailrecursion.hoplon.span.call(null,G__113149,G__113150));
})();
var G__113078 = " ";
var G__113079 = (function (){var G__113151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113152 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113151,G__113152) : tailrecursion.hoplon.span.call(null,G__113151,G__113152));
})();
var G__113080 = ")\n                (";
var G__113081 = (function (){var G__113153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113154 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113153,G__113154) : tailrecursion.hoplon.span.call(null,G__113153,G__113154));
})();
var G__113082 = (function (){var G__113155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113156 = "empty-board";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113155,G__113156) : tailrecursion.hoplon.span.call(null,G__113155,G__113156));
})();
var G__113083 = ")\n                (";
var G__113084 = (function (){var G__113157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113158 = "filter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113157,G__113158) : tailrecursion.hoplon.span.call(null,G__113157,G__113158));
})();
var G__113085 = "\n                  (";
var G__113086 = (function (){var G__113159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113160 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113159,G__113160) : tailrecursion.hoplon.span.call(null,G__113159,G__113160));
})();
var G__113087 = "[";
var G__113088 = (function (){var G__113161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113162 = "positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113161,G__113162) : tailrecursion.hoplon.span.call(null,G__113161,G__113162));
})();
var G__113089 = "] (";
var G__113090 = (function (){var G__113163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113164 = "safe?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113163,G__113164) : tailrecursion.hoplon.span.call(null,G__113163,G__113164));
})();
var G__113091 = " ";
var G__113092 = (function (){var G__113165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113166 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113165,G__113166) : tailrecursion.hoplon.span.call(null,G__113165,G__113166));
})();
var G__113093 = " ";
var G__113094 = (function (){var G__113167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113168 = "positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113167,G__113168) : tailrecursion.hoplon.span.call(null,G__113167,G__113168));
})();
var G__113095 = "))\n                  (";
var G__113096 = (function (){var G__113169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113170 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113169,G__113170) : tailrecursion.hoplon.span.call(null,G__113169,G__113170));
})();
var G__113097 = "\n                    (";
var G__113098 = (function (){var G__113171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113172 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113171,G__113172) : tailrecursion.hoplon.span.call(null,G__113171,G__113172));
})();
var G__113099 = "[";
var G__113100 = (function (){var G__113173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113174 = "rest-of-queens";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113173,G__113174) : tailrecursion.hoplon.span.call(null,G__113173,G__113174));
})();
var G__113101 = "]\n                      (";
var G__113102 = (function (){var G__113175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113176 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113175,G__113176) : tailrecursion.hoplon.span.call(null,G__113175,G__113176));
})();
var G__113103 = "(";
var G__113104 = (function (){var G__113177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113178 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113177,G__113178) : tailrecursion.hoplon.span.call(null,G__113177,G__113178));
})();
var G__113105 = "[";
var G__113106 = (function (){var G__113179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113180 = "new-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113179,G__113180) : tailrecursion.hoplon.span.call(null,G__113179,G__113180));
})();
var G__113107 = "]\n                        (";
var G__113108 = (function (){var G__113181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113182 = "adjoin-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113181,G__113182) : tailrecursion.hoplon.span.call(null,G__113181,G__113182));
})();
var G__113109 = " ";
var G__113110 = (function (){var G__113183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113184 = "new-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113183,G__113184) : tailrecursion.hoplon.span.call(null,G__113183,G__113184));
})();
var G__113111 = " \n                                         ";
var G__113112 = (function (){var G__113185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113186 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113185,G__113186) : tailrecursion.hoplon.span.call(null,G__113185,G__113186));
})();
var G__113113 = " \n                                         ";
var G__113114 = (function (){var G__113187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113188 = "rest-of-queens";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113187,G__113188) : tailrecursion.hoplon.span.call(null,G__113187,G__113188));
})();
var G__113115 = "))\n                           (";
var G__113116 = (function (){var G__113189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113190 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113189,G__113190) : tailrecursion.hoplon.span.call(null,G__113189,G__113190));
})();
var G__113117 = (function (){var G__113191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113192 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113191,G__113192) : tailrecursion.hoplon.span.call(null,G__113191,G__113192));
})();
var G__113118 = " (";
var G__113119 = (function (){var G__113193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113194 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113193,G__113194) : tailrecursion.hoplon.span.call(null,G__113193,G__113194));
})();
var G__113120 = (function (){var G__113195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113196 = "board-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113195,G__113196) : tailrecursion.hoplon.span.call(null,G__113195,G__113196));
})();
var G__113121 = "))))\n                    (";
var G__113122 = (function (){var G__113197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113198 = "queen-cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113197,G__113198) : tailrecursion.hoplon.span.call(null,G__113197,G__113198));
})();
var G__113123 = " (";
var G__113124 = (function (){var G__113199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113200 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113199,G__113200) : tailrecursion.hoplon.span.call(null,G__113199,G__113200));
})();
var G__113125 = (function (){var G__113201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113202 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113201,G__113202) : tailrecursion.hoplon.span.call(null,G__113201,G__113202));
})();
var G__113126 = "))))))]\n    (";
var G__113127 = (function (){var G__113203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113204 = "queen-cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113203,G__113204) : tailrecursion.hoplon.span.call(null,G__113203,G__113204));
})();
var G__113128 = " ";
var G__113129 = (function (){var G__113205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113206 = "board-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113205,G__113206) : tailrecursion.hoplon.span.call(null,G__113205,G__113206));
})();
var G__113130 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72(G__113059,G__113060,G__113061,G__113062,G__113063,G__113064,G__113065,G__113066,G__113067,G__113068,G__113069,G__113070,G__113071,G__113072,G__113073,G__113074,G__113075,G__113076,G__113077,G__113078,G__113079,G__113080,G__113081,G__113082,G__113083,G__113084,G__113085,G__113086,G__113087,G__113088,G__113089,G__113090,G__113091,G__113092,G__113093,G__113094,G__113095,G__113096,G__113097,G__113098,G__113099,G__113100,G__113101,G__113102,G__113103,G__113104,G__113105,G__113106,G__113107,G__113108,G__113109,G__113110,G__113111,G__113112,G__113113,G__113114,G__113115,G__113116,G__113117,G__113118,G__113119,G__113120,G__113121,G__113122,G__113123,G__113124,G__113125,G__113126,G__113127,G__113128,G__113129,G__113130) : tailrecursion.hoplon.pre.call(null,G__113059,G__113060,G__113061,G__113062,G__113063,G__113064,G__113065,G__113066,G__113067,G__113068,G__113069,G__113070,G__113071,G__113072,G__113073,G__113074,G__113075,G__113076,G__113077,G__113078,G__113079,G__113080,G__113081,G__113082,G__113083,G__113084,G__113085,G__113086,G__113087,G__113088,G__113089,G__113090,G__113091,G__113092,G__113093,G__113094,G__113095,G__113096,G__113097,G__113098,G__113099,G__113100,G__113101,G__113102,G__113103,G__113104,G__113105,G__113106,G__113107,G__113108,G__113109,G__113110,G__113111,G__113112,G__113113,G__113114,G__113115,G__113116,G__113117,G__113118,G__113119,G__113120,G__113121,G__113122,G__113123,G__113124,G__113125,G__113126,G__113127,G__113128,G__113129,G__113130));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__113057,G__113058) : tailrecursion.hoplon.div.call(null,G__113057,G__113058));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__113056) : tailrecursion.hoplon.div.call(null,G__113056));
})(),(function (){var G__113207 = cljs.core.PersistentArrayMap.EMPTY;
var G__113208 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this procedure ",(function (){var G__113209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest-of-queens"], null);
var G__113210 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113209,G__113210) : tailrecursion.hoplon.markdown.code_node.call(null,G__113209,G__113210));
})()," is a way to place \\(k - 1\\) queens in the first \\(k - 1\\) columns, and ",(function (){var G__113211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"new-row"], null);
var G__113212 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113211,G__113212) : tailrecursion.hoplon.markdown.code_node.call(null,G__113211,G__113212));
})()," is a proposed row in which to place the queen for the \\(k\\)th column. Complete the program by implementing the representation for sets of board positions, including the procedure ",(function (){var G__113213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"adjoin-position"], null);
var G__113214 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113213,G__113214) : tailrecursion.hoplon.markdown.code_node.call(null,G__113213,G__113214));
})(),", which adjoins a new row-column position to a set of positions, and ",(function (){var G__113215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"empty-board"], null);
var G__113216 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113215,G__113216) : tailrecursion.hoplon.markdown.code_node.call(null,G__113215,G__113216));
})(),", which represents an empty set of positions. You must also write the procedure ",(function (){var G__113217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"safe?"], null);
var G__113218 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113217,G__113218) : tailrecursion.hoplon.markdown.code_node.call(null,G__113217,G__113218));
})(),", which determines for a set of positions, whether the queen in the \\(k\\)th column is safe with respect to the others. (Note that we need only check whether the new queen is safe ",(function (){var G__113219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__113220 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113219,G__113220) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113219,G__113220));
})()," the other queens are already guaranteed safe with respect to each other.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113207,G__113208) : tailrecursion.hoplon.markdown.para_node.call(null,G__113207,G__113208));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113043;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113042;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113041;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113040;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_113221 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113222 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_113223 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113224 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__113225 = (function (){var G__113226 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__113227 = (function (){var G__113228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__113229 = "(";
var G__113230 = (function (){var G__113450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113451 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113450,G__113451) : tailrecursion.hoplon.span.call(null,G__113450,G__113451));
})();
var G__113231 = (function (){var G__113452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113453 = "make-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113452,G__113453) : tailrecursion.hoplon.span.call(null,G__113452,G__113453));
})();
var G__113232 = " [";
var G__113233 = (function (){var G__113454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113455 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113454,G__113455) : tailrecursion.hoplon.span.call(null,G__113454,G__113455));
})();
var G__113234 = " ";
var G__113235 = (function (){var G__113456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113457 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113456,G__113457) : tailrecursion.hoplon.span.call(null,G__113456,G__113457));
})();
var G__113236 = "]\n  (";
var G__113237 = (function (){var G__113458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113459 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113458,G__113459) : tailrecursion.hoplon.span.call(null,G__113458,G__113459));
})();
var G__113238 = (function (){var G__113460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113461 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113460,G__113461) : tailrecursion.hoplon.span.call(null,G__113460,G__113461));
})();
var G__113239 = " ";
var G__113240 = (function (){var G__113462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113463 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113462,G__113463) : tailrecursion.hoplon.span.call(null,G__113462,G__113463));
})();
var G__113241 = "))\n(";
var G__113242 = (function (){var G__113464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113465 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113464,G__113465) : tailrecursion.hoplon.span.call(null,G__113464,G__113465));
})();
var G__113243 = (function (){var G__113466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113467 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113466,G__113467) : tailrecursion.hoplon.span.call(null,G__113466,G__113467));
})();
var G__113244 = " [";
var G__113245 = (function (){var G__113468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113469 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113468,G__113469) : tailrecursion.hoplon.span.call(null,G__113468,G__113469));
})();
var G__113246 = "]\n  (";
var G__113247 = (function (){var G__113470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113471 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113470,G__113471) : tailrecursion.hoplon.span.call(null,G__113470,G__113471));
})();
var G__113248 = (function (){var G__113472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113473 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113472,G__113473) : tailrecursion.hoplon.span.call(null,G__113472,G__113473));
})();
var G__113249 = "))\n(";
var G__113250 = (function (){var G__113474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113475 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113474,G__113475) : tailrecursion.hoplon.span.call(null,G__113474,G__113475));
})();
var G__113251 = (function (){var G__113476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113477 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113476,G__113477) : tailrecursion.hoplon.span.call(null,G__113476,G__113477));
})();
var G__113252 = " [";
var G__113253 = (function (){var G__113478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113479 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113478,G__113479) : tailrecursion.hoplon.span.call(null,G__113478,G__113479));
})();
var G__113254 = "]\n  (";
var G__113255 = (function (){var G__113480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113481 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113480,G__113481) : tailrecursion.hoplon.span.call(null,G__113480,G__113481));
})();
var G__113256 = (function (){var G__113482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113483 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113482,G__113483) : tailrecursion.hoplon.span.call(null,G__113482,G__113483));
})();
var G__113257 = "))\n(";
var G__113258 = (function (){var G__113484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113485 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113484,G__113485) : tailrecursion.hoplon.span.call(null,G__113484,G__113485));
})();
var G__113259 = (function (){var G__113486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113487 = "empty-board";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113486,G__113487) : tailrecursion.hoplon.span.call(null,G__113486,G__113487));
})();
var G__113260 = " (";
var G__113261 = (function (){var G__113488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113489 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113488,G__113489) : tailrecursion.hoplon.span.call(null,G__113488,G__113489));
})();
var G__113262 = "))\n(";
var G__113263 = (function (){var G__113490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113491 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113490,G__113491) : tailrecursion.hoplon.span.call(null,G__113490,G__113491));
})();
var G__113264 = (function (){var G__113492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113493 = "adjoin-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113492,G__113493) : tailrecursion.hoplon.span.call(null,G__113492,G__113493));
})();
var G__113265 = " [";
var G__113266 = (function (){var G__113494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113495 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113494,G__113495) : tailrecursion.hoplon.span.call(null,G__113494,G__113495));
})();
var G__113267 = " ";
var G__113268 = (function (){var G__113496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113497 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113496,G__113497) : tailrecursion.hoplon.span.call(null,G__113496,G__113497));
})();
var G__113269 = " ";
var G__113270 = (function (){var G__113498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113499 = "set-of-positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113498,G__113499) : tailrecursion.hoplon.span.call(null,G__113498,G__113499));
})();
var G__113271 = "]\n  (";
var G__113272 = (function (){var G__113500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113501 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113500,G__113501) : tailrecursion.hoplon.span.call(null,G__113500,G__113501));
})();
var G__113273 = (function (){var G__113502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113503 = "set-of-positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113502,G__113503) : tailrecursion.hoplon.span.call(null,G__113502,G__113503));
})();
var G__113274 = " (";
var G__113275 = (function (){var G__113504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113505 = "make-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113504,G__113505) : tailrecursion.hoplon.span.call(null,G__113504,G__113505));
})();
var G__113276 = " ";
var G__113277 = (function (){var G__113506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113507 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113506,G__113507) : tailrecursion.hoplon.span.call(null,G__113506,G__113507));
})();
var G__113278 = " ";
var G__113279 = (function (){var G__113508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113509 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113508,G__113509) : tailrecursion.hoplon.span.call(null,G__113508,G__113509));
})();
var G__113280 = ")))\n(";
var G__113281 = (function (){var G__113510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113511 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113510,G__113511) : tailrecursion.hoplon.span.call(null,G__113510,G__113511));
})();
var G__113282 = (function (){var G__113512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113513 = "same-row?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113512,G__113513) : tailrecursion.hoplon.span.call(null,G__113512,G__113513));
})();
var G__113283 = " [";
var G__113284 = (function (){var G__113514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113515 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113514,G__113515) : tailrecursion.hoplon.span.call(null,G__113514,G__113515));
})();
var G__113285 = " ";
var G__113286 = (function (){var G__113516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113517 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113516,G__113517) : tailrecursion.hoplon.span.call(null,G__113516,G__113517));
})();
var G__113287 = "]\n  (";
var G__113288 = (function (){var G__113518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113519 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113518,G__113519) : tailrecursion.hoplon.span.call(null,G__113518,G__113519));
})();
var G__113289 = "(";
var G__113290 = (function (){var G__113520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113521 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113520,G__113521) : tailrecursion.hoplon.span.call(null,G__113520,G__113521));
})();
var G__113291 = " ";
var G__113292 = (function (){var G__113522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113523 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113522,G__113523) : tailrecursion.hoplon.span.call(null,G__113522,G__113523));
})();
var G__113293 = ") (";
var G__113294 = (function (){var G__113524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113525 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113524,G__113525) : tailrecursion.hoplon.span.call(null,G__113524,G__113525));
})();
var G__113295 = " ";
var G__113296 = (function (){var G__113526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113527 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113526,G__113527) : tailrecursion.hoplon.span.call(null,G__113526,G__113527));
})();
var G__113297 = ")))\n(";
var G__113298 = (function (){var G__113528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113529 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113528,G__113529) : tailrecursion.hoplon.span.call(null,G__113528,G__113529));
})();
var G__113299 = (function (){var G__113530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113531 = "same-column?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113530,G__113531) : tailrecursion.hoplon.span.call(null,G__113530,G__113531));
})();
var G__113300 = " [";
var G__113301 = (function (){var G__113532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113533 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113532,G__113533) : tailrecursion.hoplon.span.call(null,G__113532,G__113533));
})();
var G__113302 = " ";
var G__113303 = (function (){var G__113534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113535 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113534,G__113535) : tailrecursion.hoplon.span.call(null,G__113534,G__113535));
})();
var G__113304 = "]\n  (";
var G__113305 = (function (){var G__113536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113537 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113536,G__113537) : tailrecursion.hoplon.span.call(null,G__113536,G__113537));
})();
var G__113306 = "(";
var G__113307 = (function (){var G__113538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113539 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113538,G__113539) : tailrecursion.hoplon.span.call(null,G__113538,G__113539));
})();
var G__113308 = " ";
var G__113309 = (function (){var G__113540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113541 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113540,G__113541) : tailrecursion.hoplon.span.call(null,G__113540,G__113541));
})();
var G__113310 = ") (";
var G__113311 = (function (){var G__113542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113543 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113542,G__113543) : tailrecursion.hoplon.span.call(null,G__113542,G__113543));
})();
var G__113312 = " ";
var G__113313 = (function (){var G__113544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113545 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113544,G__113545) : tailrecursion.hoplon.span.call(null,G__113544,G__113545));
})();
var G__113314 = ")))\n(";
var G__113315 = (function (){var G__113546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113547 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113546,G__113547) : tailrecursion.hoplon.span.call(null,G__113546,G__113547));
})();
var G__113316 = (function (){var G__113548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113549 = "same-diagonal?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113548,G__113549) : tailrecursion.hoplon.span.call(null,G__113548,G__113549));
})();
var G__113317 = " [";
var G__113318 = (function (){var G__113550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113551 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113550,G__113551) : tailrecursion.hoplon.span.call(null,G__113550,G__113551));
})();
var G__113319 = " ";
var G__113320 = (function (){var G__113552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113553 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113552,G__113553) : tailrecursion.hoplon.span.call(null,G__113552,G__113553));
})();
var G__113321 = "]\n  (";
var G__113322 = (function (){var G__113554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113555 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113554,G__113555) : tailrecursion.hoplon.span.call(null,G__113554,G__113555));
})();
var G__113323 = "(";
var G__113324 = (function (){var G__113556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113557 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113556,G__113557) : tailrecursion.hoplon.span.call(null,G__113556,G__113557));
})();
var G__113325 = "(";
var G__113326 = (function (){var G__113558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113559 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113558,G__113559) : tailrecursion.hoplon.span.call(null,G__113558,G__113559));
})();
var G__113327 = "(";
var G__113328 = (function (){var G__113560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113561 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113560,G__113561) : tailrecursion.hoplon.span.call(null,G__113560,G__113561));
})();
var G__113329 = " ";
var G__113330 = (function (){var G__113562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113563 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113562,G__113563) : tailrecursion.hoplon.span.call(null,G__113562,G__113563));
})();
var G__113331 = ") (";
var G__113332 = (function (){var G__113564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113565 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113564,G__113565) : tailrecursion.hoplon.span.call(null,G__113564,G__113565));
})();
var G__113333 = " ";
var G__113334 = (function (){var G__113566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113567 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113566,G__113567) : tailrecursion.hoplon.span.call(null,G__113566,G__113567));
})();
var G__113335 = "))\n         (";
var G__113336 = (function (){var G__113568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113569 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113568,G__113569) : tailrecursion.hoplon.span.call(null,G__113568,G__113569));
})();
var G__113337 = "(";
var G__113338 = (function (){var G__113570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113571 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113570,G__113571) : tailrecursion.hoplon.span.call(null,G__113570,G__113571));
})();
var G__113339 = " ";
var G__113340 = (function (){var G__113572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113573 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113572,G__113573) : tailrecursion.hoplon.span.call(null,G__113572,G__113573));
})();
var G__113341 = ") (";
var G__113342 = (function (){var G__113574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113575 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113574,G__113575) : tailrecursion.hoplon.span.call(null,G__113574,G__113575));
})();
var G__113343 = " ";
var G__113344 = (function (){var G__113576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113577 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113576,G__113577) : tailrecursion.hoplon.span.call(null,G__113576,G__113577));
})();
var G__113345 = ")))\n      (";
var G__113346 = (function (){var G__113578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113579 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113578,G__113579) : tailrecursion.hoplon.span.call(null,G__113578,G__113579));
})();
var G__113347 = "(";
var G__113348 = (function (){var G__113580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113581 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113580,G__113581) : tailrecursion.hoplon.span.call(null,G__113580,G__113581));
})();
var G__113349 = "(";
var G__113350 = (function (){var G__113582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113583 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113582,G__113583) : tailrecursion.hoplon.span.call(null,G__113582,G__113583));
})();
var G__113351 = " ";
var G__113352 = (function (){var G__113584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113585 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113584,G__113585) : tailrecursion.hoplon.span.call(null,G__113584,G__113585));
})();
var G__113353 = ") (";
var G__113354 = (function (){var G__113586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113587 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113586,G__113587) : tailrecursion.hoplon.span.call(null,G__113586,G__113587));
})();
var G__113355 = " ";
var G__113356 = (function (){var G__113588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113589 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113588,G__113589) : tailrecursion.hoplon.span.call(null,G__113588,G__113589));
})();
var G__113357 = "))\n         (";
var G__113358 = (function (){var G__113590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113591 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113590,G__113591) : tailrecursion.hoplon.span.call(null,G__113590,G__113591));
})();
var G__113359 = "(";
var G__113360 = (function (){var G__113592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113593 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113592,G__113593) : tailrecursion.hoplon.span.call(null,G__113592,G__113593));
})();
var G__113361 = " ";
var G__113362 = (function (){var G__113594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113595 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113594,G__113595) : tailrecursion.hoplon.span.call(null,G__113594,G__113595));
})();
var G__113363 = ") (";
var G__113364 = (function (){var G__113596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113597 = "get-column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113596,G__113597) : tailrecursion.hoplon.span.call(null,G__113596,G__113597));
})();
var G__113365 = " ";
var G__113366 = (function (){var G__113598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113599 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113598,G__113599) : tailrecursion.hoplon.span.call(null,G__113598,G__113599));
})();
var G__113367 = ")))))\n(";
var G__113368 = (function (){var G__113600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113601 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113600,G__113601) : tailrecursion.hoplon.span.call(null,G__113600,G__113601));
})();
var G__113369 = (function (){var G__113602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113603 = "check-fn?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113602,G__113603) : tailrecursion.hoplon.span.call(null,G__113602,G__113603));
})();
var G__113370 = " [";
var G__113371 = (function (){var G__113604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113605 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113604,G__113605) : tailrecursion.hoplon.span.call(null,G__113604,G__113605));
})();
var G__113372 = "]\n  (";
var G__113373 = (function (){var G__113606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113607 = "some-fn";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113606,G__113607) : tailrecursion.hoplon.span.call(null,G__113606,G__113607));
})();
var G__113374 = " ";
var G__113375 = (function (){var G__113608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113609 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113608,G__113609) : tailrecursion.hoplon.span.call(null,G__113608,G__113609));
})();
var G__113376 = "(";
var G__113377 = (function (){var G__113610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113611 = "same-row?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113610,G__113611) : tailrecursion.hoplon.span.call(null,G__113610,G__113611));
})();
var G__113378 = " ";
var G__113379 = (function (){var G__113612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113613 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113612,G__113613) : tailrecursion.hoplon.span.call(null,G__113612,G__113613));
})();
var G__113380 = " ";
var G__113381 = (function (){var G__113614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113615 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113614,G__113615) : tailrecursion.hoplon.span.call(null,G__113614,G__113615));
})();
var G__113382 = ")\n           ";
var G__113383 = (function (){var G__113616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113617 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113616,G__113617) : tailrecursion.hoplon.span.call(null,G__113616,G__113617));
})();
var G__113384 = "(";
var G__113385 = (function (){var G__113618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113619 = "same-column?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113618,G__113619) : tailrecursion.hoplon.span.call(null,G__113618,G__113619));
})();
var G__113386 = " ";
var G__113387 = (function (){var G__113620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113621 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113620,G__113621) : tailrecursion.hoplon.span.call(null,G__113620,G__113621));
})();
var G__113388 = " ";
var G__113389 = (function (){var G__113622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113623 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113622,G__113623) : tailrecursion.hoplon.span.call(null,G__113622,G__113623));
})();
var G__113390 = ")\n           ";
var G__113391 = (function (){var G__113624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113625 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113624,G__113625) : tailrecursion.hoplon.span.call(null,G__113624,G__113625));
})();
var G__113392 = "(";
var G__113393 = (function (){var G__113626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113627 = "same-diagonal?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113626,G__113627) : tailrecursion.hoplon.span.call(null,G__113626,G__113627));
})();
var G__113394 = " ";
var G__113395 = (function (){var G__113628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113629 = "position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113628,G__113629) : tailrecursion.hoplon.span.call(null,G__113628,G__113629));
})();
var G__113396 = " ";
var G__113397 = (function (){var G__113630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113631 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113630,G__113631) : tailrecursion.hoplon.span.call(null,G__113630,G__113631));
})();
var G__113398 = ")))\n(";
var G__113399 = (function (){var G__113632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113633 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113632,G__113633) : tailrecursion.hoplon.span.call(null,G__113632,G__113633));
})();
var G__113400 = (function (){var G__113634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113635 = "get-queen-by-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113634,G__113635) : tailrecursion.hoplon.span.call(null,G__113634,G__113635));
})();
var G__113401 = " [";
var G__113402 = (function (){var G__113636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113637 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113636,G__113637) : tailrecursion.hoplon.span.call(null,G__113636,G__113637));
})();
var G__113403 = " ";
var G__113404 = (function (){var G__113638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113639 = "collection";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113638,G__113639) : tailrecursion.hoplon.span.call(null,G__113638,G__113639));
})();
var G__113405 = "]\n  (";
var G__113406 = (function (){var G__113640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113641 = "some ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113640,G__113641) : tailrecursion.hoplon.span.call(null,G__113640,G__113641));
})();
var G__113407 = (function (){var G__113642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113643 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113642,G__113643) : tailrecursion.hoplon.span.call(null,G__113642,G__113643));
})();
var G__113408 = "(";
var G__113409 = (function (){var G__113644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113645 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113644,G__113645) : tailrecursion.hoplon.span.call(null,G__113644,G__113645));
})();
var G__113410 = (function (){var G__113646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113647 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113646,G__113647) : tailrecursion.hoplon.span.call(null,G__113646,G__113647));
})();
var G__113411 = " (";
var G__113412 = (function (){var G__113648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113649 = "get-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113648,G__113649) : tailrecursion.hoplon.span.call(null,G__113648,G__113649));
})();
var G__113413 = " ";
var G__113414 = (function (){var G__113650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113651 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113650,G__113651) : tailrecursion.hoplon.span.call(null,G__113650,G__113651));
})();
var G__113415 = ")) ";
var G__113416 = (function (){var G__113652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113653 = "collection";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113652,G__113653) : tailrecursion.hoplon.span.call(null,G__113652,G__113653));
})();
var G__113417 = "))\n(";
var G__113418 = (function (){var G__113654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113655 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113654,G__113655) : tailrecursion.hoplon.span.call(null,G__113654,G__113655));
})();
var G__113419 = (function (){var G__113656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113657 = "in-check?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113656,G__113657) : tailrecursion.hoplon.span.call(null,G__113656,G__113657));
})();
var G__113420 = " [";
var G__113421 = (function (){var G__113658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113659 = "new-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113658,G__113659) : tailrecursion.hoplon.span.call(null,G__113658,G__113659));
})();
var G__113422 = " ";
var G__113423 = (function (){var G__113660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113661 = "old-positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113660,G__113661) : tailrecursion.hoplon.span.call(null,G__113660,G__113661));
})();
var G__113424 = "]\n  (";
var G__113425 = (function (){var G__113662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113663 = "some ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113662,G__113663) : tailrecursion.hoplon.span.call(null,G__113662,G__113663));
})();
var G__113426 = "(";
var G__113427 = (function (){var G__113664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113665 = "check-fn?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113664,G__113665) : tailrecursion.hoplon.span.call(null,G__113664,G__113665));
})();
var G__113428 = " ";
var G__113429 = (function (){var G__113666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113667 = "new-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113666,G__113667) : tailrecursion.hoplon.span.call(null,G__113666,G__113667));
})();
var G__113430 = ") ";
var G__113431 = (function (){var G__113668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113669 = "old-positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113668,G__113669) : tailrecursion.hoplon.span.call(null,G__113668,G__113669));
})();
var G__113432 = "))\n\n(";
var G__113433 = (function (){var G__113670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113671 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113670,G__113671) : tailrecursion.hoplon.span.call(null,G__113670,G__113671));
})();
var G__113434 = (function (){var G__113672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113673 = "safe?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113672,G__113673) : tailrecursion.hoplon.span.call(null,G__113672,G__113673));
})();
var G__113435 = " [";
var G__113436 = (function (){var G__113674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113675 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113674,G__113675) : tailrecursion.hoplon.span.call(null,G__113674,G__113675));
})();
var G__113437 = " ";
var G__113438 = (function (){var G__113676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113677 = "positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113676,G__113677) : tailrecursion.hoplon.span.call(null,G__113676,G__113677));
})();
var G__113439 = "]\n  (";
var G__113440 = (function (){var G__113678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113679 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113678,G__113679) : tailrecursion.hoplon.span.call(null,G__113678,G__113679));
})();
var G__113441 = "(";
var G__113442 = (function (){var G__113680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113681 = "in-check?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113680,G__113681) : tailrecursion.hoplon.span.call(null,G__113680,G__113681));
})();
var G__113443 = " (";
var G__113444 = (function (){var G__113682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113683 = "get-queen-by-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113682,G__113683) : tailrecursion.hoplon.span.call(null,G__113682,G__113683));
})();
var G__113445 = " ";
var G__113446 = (function (){var G__113684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113685 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113684,G__113685) : tailrecursion.hoplon.span.call(null,G__113684,G__113685));
})();
var G__113447 = ") ";
var G__113448 = (function (){var G__113686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113687 = "positions";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113686,G__113687) : tailrecursion.hoplon.span.call(null,G__113686,G__113687));
})();
var G__113449 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222(G__113228,G__113229,G__113230,G__113231,G__113232,G__113233,G__113234,G__113235,G__113236,G__113237,G__113238,G__113239,G__113240,G__113241,G__113242,G__113243,G__113244,G__113245,G__113246,G__113247,G__113248,G__113249,G__113250,G__113251,G__113252,G__113253,G__113254,G__113255,G__113256,G__113257,G__113258,G__113259,G__113260,G__113261,G__113262,G__113263,G__113264,G__113265,G__113266,G__113267,G__113268,G__113269,G__113270,G__113271,G__113272,G__113273,G__113274,G__113275,G__113276,G__113277,G__113278,G__113279,G__113280,G__113281,G__113282,G__113283,G__113284,G__113285,G__113286,G__113287,G__113288,G__113289,G__113290,G__113291,G__113292,G__113293,G__113294,G__113295,G__113296,G__113297,G__113298,G__113299,G__113300,G__113301,G__113302,G__113303,G__113304,G__113305,G__113306,G__113307,G__113308,G__113309,G__113310,G__113311,G__113312,G__113313,G__113314,G__113315,G__113316,G__113317,G__113318,G__113319,G__113320,G__113321,G__113322,G__113323,G__113324,G__113325,G__113326,G__113327,G__113328,G__113329,G__113330,G__113331,G__113332,G__113333,G__113334,G__113335,G__113336,G__113337,G__113338,G__113339,G__113340,G__113341,G__113342,G__113343,G__113344,G__113345,G__113346,G__113347,G__113348,G__113349,G__113350,G__113351,G__113352,G__113353,G__113354,G__113355,G__113356,G__113357,G__113358,G__113359,G__113360,G__113361,G__113362,G__113363,G__113364,G__113365,G__113366,G__113367,G__113368,G__113369,G__113370,G__113371,G__113372,G__113373,G__113374,G__113375,G__113376,G__113377,G__113378,G__113379,G__113380,G__113381,G__113382,G__113383,G__113384,G__113385,G__113386,G__113387,G__113388,G__113389,G__113390,G__113391,G__113392,G__113393,G__113394,G__113395,G__113396,G__113397,G__113398,G__113399,G__113400,G__113401,G__113402,G__113403,G__113404,G__113405,G__113406,G__113407,G__113408,G__113409,G__113410,G__113411,G__113412,G__113413,G__113414,G__113415,G__113416,G__113417,G__113418,G__113419,G__113420,G__113421,G__113422,G__113423,G__113424,G__113425,G__113426,G__113427,G__113428,G__113429,G__113430,G__113431,G__113432,G__113433,G__113434,G__113435,G__113436,G__113437,G__113438,G__113439,G__113440,G__113441,G__113442,G__113443,G__113444,G__113445,G__113446,G__113447,G__113448,G__113449) : tailrecursion.hoplon.pre.call(null,G__113228,G__113229,G__113230,G__113231,G__113232,G__113233,G__113234,G__113235,G__113236,G__113237,G__113238,G__113239,G__113240,G__113241,G__113242,G__113243,G__113244,G__113245,G__113246,G__113247,G__113248,G__113249,G__113250,G__113251,G__113252,G__113253,G__113254,G__113255,G__113256,G__113257,G__113258,G__113259,G__113260,G__113261,G__113262,G__113263,G__113264,G__113265,G__113266,G__113267,G__113268,G__113269,G__113270,G__113271,G__113272,G__113273,G__113274,G__113275,G__113276,G__113277,G__113278,G__113279,G__113280,G__113281,G__113282,G__113283,G__113284,G__113285,G__113286,G__113287,G__113288,G__113289,G__113290,G__113291,G__113292,G__113293,G__113294,G__113295,G__113296,G__113297,G__113298,G__113299,G__113300,G__113301,G__113302,G__113303,G__113304,G__113305,G__113306,G__113307,G__113308,G__113309,G__113310,G__113311,G__113312,G__113313,G__113314,G__113315,G__113316,G__113317,G__113318,G__113319,G__113320,G__113321,G__113322,G__113323,G__113324,G__113325,G__113326,G__113327,G__113328,G__113329,G__113330,G__113331,G__113332,G__113333,G__113334,G__113335,G__113336,G__113337,G__113338,G__113339,G__113340,G__113341,G__113342,G__113343,G__113344,G__113345,G__113346,G__113347,G__113348,G__113349,G__113350,G__113351,G__113352,G__113353,G__113354,G__113355,G__113356,G__113357,G__113358,G__113359,G__113360,G__113361,G__113362,G__113363,G__113364,G__113365,G__113366,G__113367,G__113368,G__113369,G__113370,G__113371,G__113372,G__113373,G__113374,G__113375,G__113376,G__113377,G__113378,G__113379,G__113380,G__113381,G__113382,G__113383,G__113384,G__113385,G__113386,G__113387,G__113388,G__113389,G__113390,G__113391,G__113392,G__113393,G__113394,G__113395,G__113396,G__113397,G__113398,G__113399,G__113400,G__113401,G__113402,G__113403,G__113404,G__113405,G__113406,G__113407,G__113408,G__113409,G__113410,G__113411,G__113412,G__113413,G__113414,G__113415,G__113416,G__113417,G__113418,G__113419,G__113420,G__113421,G__113422,G__113423,G__113424,G__113425,G__113426,G__113427,G__113428,G__113429,G__113430,G__113431,G__113432,G__113433,G__113434,G__113435,G__113436,G__113437,G__113438,G__113439,G__113440,G__113441,G__113442,G__113443,G__113444,G__113445,G__113446,G__113447,G__113448,G__113449));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__113226,G__113227) : tailrecursion.hoplon.div.call(null,G__113226,G__113227));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__113225) : tailrecursion.hoplon.div.call(null,G__113225));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113224;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113223;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113222;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113221;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_113688 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113689 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_113690 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113691 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__113692 = cljs.core.PersistentArrayMap.EMPTY;
var G__113693 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner is having a terrible time doing ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/42/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.42"], null)], 0)),". His ",(function (){var G__113694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"queens"], null);
var G__113695 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113694,G__113695) : tailrecursion.hoplon.markdown.code_node.call(null,G__113694,G__113695));
})()," procedure seems to work, but it runs extremely slowly. (Louis never does manage to wait long enough for it to solve even the \\(6\\times 6\\) case.) When Louis asks Eva Lu Ator for help, she points out that he has interchanged the order of the nested mappings in the ",(function (){var G__113696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"flatmap"], null);
var G__113697 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113696,G__113697) : tailrecursion.hoplon.markdown.code_node.call(null,G__113696,G__113697));
})(),", writing it as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113692,G__113693) : tailrecursion.hoplon.markdown.para_node.call(null,G__113692,G__113693));
})(),(function (){var G__113698 = (function (){var G__113699 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__113700 = (function (){var G__113701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__113702 = "(";
var G__113703 = (function (){var G__113734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113735 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113734,G__113735) : tailrecursion.hoplon.span.call(null,G__113734,G__113735));
})();
var G__113704 = "\n  (";
var G__113705 = (function (){var G__113736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113737 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113736,G__113737) : tailrecursion.hoplon.span.call(null,G__113736,G__113737));
})();
var G__113706 = "[";
var G__113707 = (function (){var G__113738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113739 = "new-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113738,G__113739) : tailrecursion.hoplon.span.call(null,G__113738,G__113739));
})();
var G__113708 = "]\n    (";
var G__113709 = (function (){var G__113740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113741 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113740,G__113741) : tailrecursion.hoplon.span.call(null,G__113740,G__113741));
})();
var G__113710 = "(";
var G__113711 = (function (){var G__113742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__113743 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113742,G__113743) : tailrecursion.hoplon.span.call(null,G__113742,G__113743));
})();
var G__113712 = "[";
var G__113713 = (function (){var G__113744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113745 = "rest-of-queens";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113744,G__113745) : tailrecursion.hoplon.span.call(null,G__113744,G__113745));
})();
var G__113714 = "]\n           (";
var G__113715 = (function (){var G__113746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113747 = "adjoin-position";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113746,G__113747) : tailrecursion.hoplon.span.call(null,G__113746,G__113747));
})();
var G__113716 = " ";
var G__113717 = (function (){var G__113748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113749 = "new-row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113748,G__113749) : tailrecursion.hoplon.span.call(null,G__113748,G__113749));
})();
var G__113718 = " ";
var G__113719 = (function (){var G__113750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113751 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113750,G__113751) : tailrecursion.hoplon.span.call(null,G__113750,G__113751));
})();
var G__113720 = " ";
var G__113721 = (function (){var G__113752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113753 = "rest-of-queens";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113752,G__113753) : tailrecursion.hoplon.span.call(null,G__113752,G__113753));
})();
var G__113722 = "))\n         (";
var G__113723 = (function (){var G__113754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__113755 = "queen-cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113754,G__113755) : tailrecursion.hoplon.span.call(null,G__113754,G__113755));
})();
var G__113724 = " (";
var G__113725 = (function (){var G__113756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113757 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113756,G__113757) : tailrecursion.hoplon.span.call(null,G__113756,G__113757));
})();
var G__113726 = (function (){var G__113758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113759 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113758,G__113759) : tailrecursion.hoplon.span.call(null,G__113758,G__113759));
})();
var G__113727 = "))))\n  (";
var G__113728 = (function (){var G__113760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113761 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113760,G__113761) : tailrecursion.hoplon.span.call(null,G__113760,G__113761));
})();
var G__113729 = (function (){var G__113762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__113763 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113762,G__113763) : tailrecursion.hoplon.span.call(null,G__113762,G__113763));
})();
var G__113730 = " (";
var G__113731 = (function (){var G__113764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__113765 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113764,G__113765) : tailrecursion.hoplon.span.call(null,G__113764,G__113765));
})();
var G__113732 = (function (){var G__113766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__113767 = "board-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__113766,G__113767) : tailrecursion.hoplon.span.call(null,G__113766,G__113767));
})();
var G__113733 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__113701,G__113702,G__113703,G__113704,G__113705,G__113706,G__113707,G__113708,G__113709,G__113710,G__113711,G__113712,G__113713,G__113714,G__113715,G__113716,G__113717,G__113718,G__113719,G__113720,G__113721,G__113722,G__113723,G__113724,G__113725,G__113726,G__113727,G__113728,G__113729,G__113730,G__113731,G__113732,G__113733) : tailrecursion.hoplon.pre.call(null,G__113701,G__113702,G__113703,G__113704,G__113705,G__113706,G__113707,G__113708,G__113709,G__113710,G__113711,G__113712,G__113713,G__113714,G__113715,G__113716,G__113717,G__113718,G__113719,G__113720,G__113721,G__113722,G__113723,G__113724,G__113725,G__113726,G__113727,G__113728,G__113729,G__113730,G__113731,G__113732,G__113733));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__113699,G__113700) : tailrecursion.hoplon.div.call(null,G__113699,G__113700));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__113698) : tailrecursion.hoplon.div.call(null,G__113698));
})(),(function (){var G__113768 = cljs.core.PersistentArrayMap.EMPTY;
var G__113769 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain why this interchange makes the program run slowly. Estimate how long it will take Louis",(function (){var G__113770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113771 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113770,G__113771) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113770,G__113771));
})(),"s program to solve the eight-queens puzzle, assuming that the program in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/ex/42/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.42"], null)], 0))," solce the puzzle in time \\(T\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113768,G__113769) : tailrecursion.hoplon.markdown.para_node.call(null,G__113768,G__113769));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113691;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113690;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113689;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113688;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_113772 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113773 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_113774 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113775 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__113776 = cljs.core.PersistentArrayMap.EMPTY;
var G__113777 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Every iteration of ",(function (){var G__113778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"flatmap"], null);
var G__113779 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113778,G__113779) : tailrecursion.hoplon.markdown.code_node.call(null,G__113778,G__113779));
})()," would incur an entire computation of ",(function (){var G__113780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols (dec k))"], null);
var G__113781 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113780,G__113781) : tailrecursion.hoplon.markdown.code_node.call(null,G__113780,G__113781));
})(),". This would be very computationally expensive. Luckily, in today",(function (){var G__113782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113783 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113782,G__113783) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113782,G__113783));
})(),"s computing environment, we have something called the Just In Time compiler. The Just In Time compiler runs at runtime and looks for values that are being computed repeatedly, then saves them so as to improve performance. It",(function (){var G__113784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113785 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113784,G__113785) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113784,G__113785));
})(),"s basically a reactive method of improving performace that will store things like ",(function (){var G__113786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols 5)"], null);
var G__113787 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113786,G__113787) : tailrecursion.hoplon.markdown.code_node.call(null,G__113786,G__113787));
})()," so that it doesn",(function (){var G__113788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113789 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113788,G__113789) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113788,G__113789));
})(),"t have to be computed so many times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113776,G__113777) : tailrecursion.hoplon.markdown.para_node.call(null,G__113776,G__113777));
})(),(function (){var G__113790 = cljs.core.PersistentArrayMap.EMPTY;
var G__113791 = cljs.core.PersistentVector.fromArray(["However, let",(function (){var G__113792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113793 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113792,G__113793) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113792,G__113793));
})(),"s pretend as though we did not have the JIT compiler (as was the case when this book was written). Then, for each iteration in the ",(function (){var G__113794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"flatmap"], null);
var G__113795 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113794,G__113795) : tailrecursion.hoplon.markdown.code_node.call(null,G__113794,G__113795));
})(),", we",(function (){var G__113796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113797 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113796,G__113797) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113796,G__113797));
})(),"d have 8 computations of ",(function (){var G__113798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols (dec k))"], null);
var G__113799 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113798,G__113799) : tailrecursion.hoplon.markdown.code_node.call(null,G__113798,G__113799));
})()," (one for each new column in the new row), and for each of those calls we",(function (){var G__113800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113801 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113800,G__113801) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113800,G__113801));
})(),"d have a similar situation. So for instance, when \\(k=3\\), we",(function (){var G__113802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113803 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113802,G__113803) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113802,G__113803));
})(),"d end up computing ",(function (){var G__113804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols 2)"], null);
var G__113805 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113804,G__113805) : tailrecursion.hoplon.markdown.code_node.call(null,G__113804,G__113805));
})()," 8 times, and for each one of those we",(function (){var G__113806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113806,G__113807) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113806,G__113807));
})(),"d compute ",(function (){var G__113808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols 1)"], null);
var G__113809 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113808,G__113809) : tailrecursion.hoplon.markdown.code_node.call(null,G__113808,G__113809));
})()," 8 times, and for each one of those, we",(function (){var G__113810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113811 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113810,G__113811) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113810,G__113811));
})(),"d compute ",(function (){var G__113812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols 0)"], null);
var G__113813 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113812,G__113813) : tailrecursion.hoplon.markdown.code_node.call(null,G__113812,G__113813));
})()," 8 times. So the number of times we",(function (){var G__113814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113815 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113814,G__113815) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113814,G__113815));
})(),"d compute ",(function (){var G__113816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"queen-cols"], null);
var G__113817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113816,G__113817) : tailrecursion.hoplon.markdown.code_node.call(null,G__113816,G__113817));
})()," for \\(k=3\\) would by \\(8^3\\). Through similar reasoning, we can deduce that to compute ",(function (){var G__113818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(queen-cols 8)"], null);
var G__113819 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113818,G__113819) : tailrecursion.hoplon.markdown.code_node.call(null,G__113818,G__113819));
})(),", we",(function (){var G__113820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113821 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113820,G__113821) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113820,G__113821));
})(),"d have to compute ",(function (){var G__113822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"queen-cols"], null);
var G__113823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113822,G__113823) : tailrecursion.hoplon.markdown.code_node.call(null,G__113822,G__113823));
})()," \\(8^8\\) times. So, since that",(function (){var G__113824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113824,G__113825) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113824,G__113825));
})(),"s the bulk of the computation, we can deduce that the time taken would be \\(T^8\\) (where \\(T\\) is measured in computation cycles)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113790,G__113791) : tailrecursion.hoplon.markdown.para_node.call(null,G__113790,G__113791));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113775;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113774;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113773;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113772;
}})()], 0))], 0))], 0));
var G__101408 = "";
var G__101409 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: A Picture Language"], null),(function (){var _STAR_references_STAR_113826 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113827 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_113828 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113829 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__113830 = cljs.core.PersistentArrayMap.EMPTY;
var G__113831 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section presents a simple language for drawing pictures that illustrates the power of data abstraction and closure, and also exploits higher-order procedures in an essential way. The language is designed to make it easy to experiment with patterns such as the ones in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/9/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.9"], null)], 0)),", which are composed of repeated elements that are shifted and scaled.",(function (){var G__113832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__113833 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The picture language is based on the language Peter Henderson created to construct images like M.C. Escher's ",(function (){var G__113834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__113835 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Square Limit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__113834,G__113835) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__113834,G__113835));
})()," woodcut (see Henderson 1982). The woodcut incorporates a repeated scaled pattern, similar to the arrangements drawn using the ",(function (){var G__113836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-limit"], null);
var G__113837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113836,G__113837) : tailrecursion.hoplon.markdown.code_node.call(null,G__113836,G__113837));
})()," procedure in this section."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__113832,G__113833) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__113832,G__113833));
})()," In this language, the data objects being combined are represented as procedures rather than as list structure. Just as ",(function (){var G__113838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__113839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__113838,G__113839) : tailrecursion.hoplon.markdown.code_node.call(null,G__113838,G__113839));
})(),", which satisfies the closure property, allowed us to easily build arbitrarily complicated list structure, the operations in this language, which also satisfy the closure property, allow us to easily build arbitrarily complicated patterns."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113830,G__113831) : tailrecursion.hoplon.markdown.para_node.call(null,G__113830,G__113831));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113829;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113828;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113827;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113826;
}})(),"",(function (){var G__113840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$src,"img/sicp/figure2_9b.gif"], null);
return (tailrecursion.hoplon.img.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.img.cljs$core$IFn$_invoke$arity$1(G__113840) : tailrecursion.hoplon.img.call(null,G__113840));
})(),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$number,(2),cljs.core.constant$keyword$footer,"Designs generated with the picture language."], null)], 0))], 0));
var G__101410 = "";
var G__101411 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"The Picture Language"], null),(function (){var _STAR_references_STAR_113841 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113842 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_113843 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_113844 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__113845 = cljs.core.PersistentArrayMap.EMPTY;
var G__113846 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we began our study of programming in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1"], null)], 0)),", we emphasized the importance of describing a language by focusing on the language",(function (){var G__113847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113848 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113847,G__113848) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113847,G__113848));
})(),"s primitives, its means of combination, and its means of abstraction. We",(function (){var G__113849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__113850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__113849,G__113850) : tailrecursion.hoplon.markdown.simple_node.call(null,G__113849,G__113850));
})(),"ll follow that framework here."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113845,G__113846) : tailrecursion.hoplon.markdown.para_node.call(null,G__113845,G__113846));
})(),(function (){var G__113851 = cljs.core.PersistentArrayMap.EMPTY;
var G__113852 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Part of the elegance of this picture language is that there is only one kind of element, called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pointer"], null)], 0))], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__113851,G__113852) : tailrecursion.hoplon.markdown.para_node.call(null,G__113851,G__113852));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113844;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113843;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_113842;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_113841;
}})()], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$34(G__101378,G__101379,G__101380,G__101381,G__101382,G__101383,G__101384,G__101385,G__101386,G__101387,G__101388,G__101389,G__101390,G__101391,G__101392,G__101393,G__101394,G__101395,G__101396,G__101397,G__101398,G__101399,G__101400,G__101401,G__101402,G__101403,G__101404,G__101405,G__101406,G__101407,G__101408,G__101409,G__101410,G__101411) : tailrecursion.hoplon.div.call(null,G__101378,G__101379,G__101380,G__101381,G__101382,G__101383,G__101384,G__101385,G__101386,G__101387,G__101388,G__101389,G__101390,G__101391,G__101392,G__101393,G__101394,G__101395,G__101396,G__101397,G__101398,G__101399,G__101400,G__101401,G__101402,G__101403,G__101404,G__101405,G__101406,G__101407,G__101408,G__101409,G__101410,G__101411));
};
var content$sicp$texts$ch2sect2$content = function (var_args){
var args__10403__auto__ = null;
if (arguments.length > 0) {
var G__113853__i = 0, G__113853__a = new Array(arguments.length -  0);
while (G__113853__i < G__113853__a.length) {G__113853__a[G__113853__i] = arguments[G__113853__i + 0]; ++G__113853__i;}
  args__10403__auto__ = new cljs.core.IndexedSeq(G__113853__a,0);
} 
return content$sicp$texts$ch2sect2$content__delegate.call(this,args__10403__auto__);};
content$sicp$texts$ch2sect2$content.cljs$lang$maxFixedArity = 0;
content$sicp$texts$ch2sect2$content.cljs$lang$applyTo = (function (arglist__113854){
var args__10403__auto__ = cljs.core.seq(arglist__113854);
return content$sicp$texts$ch2sect2$content__delegate(args__10403__auto__);
});
content$sicp$texts$ch2sect2$content.cljs$core$IFn$_invoke$arity$variadic = content$sicp$texts$ch2sect2$content__delegate;
return content$sicp$texts$ch2sect2$content;
})()
;

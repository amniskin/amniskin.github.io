// Compiled by ClojureScript 0.0-3308 {:static-fns true, :optimize-constants true}
goog.provide('content.sicp.texts.ch2sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('content.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
content.sicp.texts.ch2sect2.content = (function() { 
var content$sicp$texts$ch2sect2$content__delegate = function (args__10403__auto__){
var vec__97775 = tailrecursion.hoplon.parse_args(args__10403__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97775,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97775,(1),null);
var G__97776 = cljs.core.PersistentArrayMap.EMPTY;
var G__97777 = content.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Hierarchial Data and the Closure Property"], null),(function (){var _STAR_references_STAR_97806 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_97807 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_97808 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_97809 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__97810 = cljs.core.PersistentArrayMap.EMPTY;
var G__97811 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As we have seen, pairs provide a primitive ",(function (){var G__97812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__97813 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["glue"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97812,G__97813) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97812,G__97813));
})()," that we can use to construct compound data objects. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.2"], null)], 0))," shows a standard way to visualize a pair ",(function (){var G__97814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__97815 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97814,G__97815) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97814,G__97815));
})()," in this case, the pair formed by ",(function (){var G__97816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(cons 1 2)"], null);
var G__97817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97816,G__97817) : tailrecursion.hoplon.markdown.code_node.call(null,G__97816,G__97817));
})()," in Scheme (we",(function (){var G__97818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97819 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97818,G__97819) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97818,G__97819));
})(),"re using Scheme again for these examples, but lists are implemented similarly in Clojure, and after all, we don",(function (){var G__97820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97821 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97820,G__97821) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97820,G__97821));
})(),"t really care too much about the specifics of their implementation, but rather that they have the characteristics we desire, right?). In this representation, which is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["box-and-pointer notation"], null)], 0)),", each object is shown as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pointer"], null)], 0))," to a box. The box for a primitive object contains a representation of the object. For example, the box for a number contains a numeral. The box for a pair is actually a double box, the left part containing (a pointer to) the ",(function (){var G__97822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__97823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97822,G__97823) : tailrecursion.hoplon.markdown.code_node.call(null,G__97822,G__97823));
})()," of the pair and the right part containing the ",(function (){var G__97824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__97825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97824,G__97825) : tailrecursion.hoplon.markdown.code_node.call(null,G__97824,G__97825));
})(),". Note that we",(function (){var G__97826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97826,G__97827) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97826,G__97827));
})(),"re using Scheme for this part. Don",(function (){var G__97828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97828,G__97829) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97828,G__97829));
})(),"t worry though, we",(function (){var G__97830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97830,G__97831) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97830,G__97831));
})(),"ll be back to Clojureland soon enough."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97810,G__97811) : tailrecursion.hoplon.markdown.para_node.call(null,G__97810,G__97811));
})(),(function (){var G__97832 = cljs.core.PersistentArrayMap.EMPTY;
var G__97833 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have already seen that ",(function (){var G__97834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__97835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97834,G__97835) : tailrecursion.hoplon.markdown.code_node.call(null,G__97834,G__97835));
})()," can be used to combine not only numbers but pairs as well. (You made use of this fact, or should have, in doing exercises ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2.2"], null)], 0))," and ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2.3"], null)], 0)),".) As a consequence, pairs provide a universal building block from which we can construct all sorts of data structures. Figure 2.3 shows two ways to use pairs to combine the numbers 1, 2, 3, and 4."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97832,G__97833) : tailrecursion.hoplon.markdown.para_node.call(null,G__97832,G__97833));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_97809;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_97808;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_97807;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_97806;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Box-and-pointer representation of (cons 1 2)."], null)], 0)),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Two ways to combine 1,2,3, and 4 using pairs."], null)], 0)),"",(function (){var _STAR_references_STAR_97836 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_97837 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_97838 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_97839 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__97840 = cljs.core.PersistentArrayMap.EMPTY;
var G__97841 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to create pairs whose elements are pairs is the essence of list structure",(function (){var G__97842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97842,G__97843) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97842,G__97843));
})(),"s importance as a representational tool. We refer to this ability as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure property"], null)], 0))," of ",(function (){var G__97844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__97845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97844,G__97845) : tailrecursion.hoplon.markdown.code_node.call(null,G__97844,G__97845));
})()," (",(function (){var G__97846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__97847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97846,G__97847) : tailrecursion.hoplon.markdown.code_node.call(null,G__97846,G__97847));
})()," is closed in Clojure as well, but don",(function (){var G__97848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97848,G__97849) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97848,G__97849));
})(),"t just take my word for it, try it out!). In general, an operation for combining data objects satisfies the closure property if the results of combining things with that operation can themselves be combined using the same operation.",(function (){var G__97850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__97851 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The use of the word ",(function (){var G__97852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__97853 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97852,G__97853) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97852,G__97853));
})()," here comes from abstract algebra, where a set of elements is said to be closed under an operation if applying the operation to elements in the set produces an element that is again an element of the set. The Lisp community also (unfortunately) uses the word ",(function (){var G__97854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__97855 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97854,G__97855) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97854,G__97855));
})()," to describe a totally unrelated concept: A closure is an implementation technique for representing procedures with free variables. We do not use the word ",(function (){var G__97856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__97857 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["closure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97856,G__97857) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97856,G__97857));
})()," in this second sense in this book."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97850,G__97851) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97850,G__97851));
})()," Closure is the key to power in any means of combination because it permits us to create ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hierarchical"], null)], 0))," structures ",(function (){var G__97858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__97859 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97858,G__97859) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97858,G__97859));
})()," structures made up of parts, which themselves are made up of parts, and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97840,G__97841) : tailrecursion.hoplon.markdown.para_node.call(null,G__97840,G__97841));
})(),(function (){var G__97860 = cljs.core.PersistentArrayMap.EMPTY;
var G__97861 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["From the outset of chapter 1, we",(function (){var G__97862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__97863 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97862,G__97863) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97862,G__97863));
})(),"ve made essential use of closure in dealing with procedures, because all but the very simplest programs rely on the fact that the elements of a combination can themselves be combinations. In this section, we take up the consequences of closure for compound data. We describe some conventional techniques for using pairs to represent sequences and trees, and we exhibit a graphics language that illustrates closure in a vivid way.",(function (){var G__97864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__97865 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The notion that a means of combination should satisfy closure is a straightforward idea. Unfortunately, the data combiners provided in many popular programming languages do not satisfy closure, or make closure cumbersome to exploit. In Fortran or Basic, one typically combines data elements by assembling them into arrays ",(function (){var G__97866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__97867 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97866,G__97867) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97866,G__97867));
})()," but one cannot form arrays whose elements are themselves arrays. Pascal and C admit structures whose elements are structures. However, this requires that the programmer manipulate pointers explicitly, and adhere to the restriction that each field of a structure can contain only elements of a prespecified form. Unlike Lisp with its pairs, these languages have no built-in general-purpose glue that makes it easy to manipulate compound data in a uniform way. This limitation lies behind Alan Perlis's comment in his foreword to this book: ",(function (){var G__97868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__97869 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Pascal the plethora of declarable data structures induces a specialization within functions that inhibits and penalizes casual cooperation. It is better to have 100 functions operate on one data structure than to have 10 functions operate on 10 data structures."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97868,G__97869) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97868,G__97869));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97864,G__97865) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97864,G__97865));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97860,G__97861) : tailrecursion.hoplon.markdown.para_node.call(null,G__97860,G__97861));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_97839;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_97838;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_97837;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_97836;
}})()], 0));
var G__97778 = "";
var G__97779 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Representing Sequences"], null),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The sequence 1, 2, 3, 4 represented as a chain of pairs."], null)], 0)),"",(function (){var _STAR_references_STAR_97870 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_97871 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_97872 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_97873 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__97874 = cljs.core.PersistentArrayMap.EMPTY;
var G__97875 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the useful structures we can build with pairs is a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequence"], null)], 0))," ",(function (){var G__97876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__97877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__97876,G__97877) : tailrecursion.hoplon.markdown.simple_node.call(null,G__97876,G__97877));
})()," an ordered collection of data objects. There are, of course, many ways to represent sequences in terms of pairs. One particularly straightforward representation is illustrated in figure 2.4, where the sequence 1, 2, 3, 4 is represented as a chain of pairs. The ",(function (){var G__97878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__97879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97878,G__97879) : tailrecursion.hoplon.markdown.code_node.call(null,G__97878,G__97879));
})()," of each pair is the corresponding item in the chain, and the cdr of the pair is the next pair in the chain. The ",(function (){var G__97880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__97881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97880,G__97881) : tailrecursion.hoplon.markdown.code_node.call(null,G__97880,G__97881));
})()," of the final pair signals the end of the sequence by pointing to a distinguished value that is not a pair, represented in box-and-pointer diagrams as a diagonal line and in programs as the value of the variable ",(function (){var G__97882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__97883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97882,G__97883) : tailrecursion.hoplon.markdown.code_node.call(null,G__97882,G__97883));
})(),". The entire sequence is constructed by nested ",(function (){var G__97884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__97885 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97884,G__97885) : tailrecursion.hoplon.markdown.code_node.call(null,G__97884,G__97885));
})()," operations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97874,G__97875) : tailrecursion.hoplon.markdown.para_node.call(null,G__97874,G__97875));
})(),(function (){var G__97886 = (function (){var G__97887 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__97888 = (function (){var G__97889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__97890 = "(";
var G__97891 = (function (){var G__97905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97906 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97905,G__97906) : tailrecursion.hoplon.span.call(null,G__97905,G__97906));
})();
var G__97892 = (function (){var G__97907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__97908 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97907,G__97908) : tailrecursion.hoplon.span.call(null,G__97907,G__97908));
})();
var G__97893 = "\n      (";
var G__97894 = (function (){var G__97909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97910 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97909,G__97910) : tailrecursion.hoplon.span.call(null,G__97909,G__97910));
})();
var G__97895 = (function (){var G__97911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__97912 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97911,G__97912) : tailrecursion.hoplon.span.call(null,G__97911,G__97912));
})();
var G__97896 = "\n            (";
var G__97897 = (function (){var G__97913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97914 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97913,G__97914) : tailrecursion.hoplon.span.call(null,G__97913,G__97914));
})();
var G__97898 = (function (){var G__97915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__97916 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97915,G__97916) : tailrecursion.hoplon.span.call(null,G__97915,G__97916));
})();
var G__97899 = "\n                  (";
var G__97900 = (function (){var G__97917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97918 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97917,G__97918) : tailrecursion.hoplon.span.call(null,G__97917,G__97918));
})();
var G__97901 = (function (){var G__97919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__97920 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97919,G__97920) : tailrecursion.hoplon.span.call(null,G__97919,G__97920));
})();
var G__97902 = " ";
var G__97903 = (function (){var G__97921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97922 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97921,G__97922) : tailrecursion.hoplon.span.call(null,G__97921,G__97922));
})();
var G__97904 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__97889,G__97890,G__97891,G__97892,G__97893,G__97894,G__97895,G__97896,G__97897,G__97898,G__97899,G__97900,G__97901,G__97902,G__97903,G__97904) : tailrecursion.hoplon.pre.call(null,G__97889,G__97890,G__97891,G__97892,G__97893,G__97894,G__97895,G__97896,G__97897,G__97898,G__97899,G__97900,G__97901,G__97902,G__97903,G__97904));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__97887,G__97888) : tailrecursion.hoplon.div.call(null,G__97887,G__97888));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__97886) : tailrecursion.hoplon.div.call(null,G__97886));
})(),(function (){var G__97923 = cljs.core.PersistentArrayMap.EMPTY;
var G__97924 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Such a sequence of pairs, formed by nested ",(function (){var G__97925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__97926 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97925,G__97926) : tailrecursion.hoplon.markdown.code_node.call(null,G__97925,G__97926));
})(),"es is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),", and Scheme provides a primitive called ",(function (){var G__97927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__97928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97927,G__97928) : tailrecursion.hoplon.markdown.code_node.call(null,G__97927,G__97928));
})()," to help in constructing lists.",(function (){var G__97929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__97930 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this book, we use ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0))," to mean a chain of pairs terminated by the end-of-list marker which is convenient because that is the way they are implemented in Clojure. To test this, type ",(function (){var G__97931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (cons 1 (cons 2\nnil)) (list 1 2))"], null);
var G__97932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97931,G__97932) : tailrecursion.hoplon.markdown.code_node.call(null,G__97931,G__97932));
})()," to see if they are indeed equal. In contrast, the term ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list structure"], null)], 0))," refers to any data structure made out of pairs, not just to lists."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__97929,G__97930) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__97929,G__97930));
})()," The above sequence could be produced by ",(function (){var G__97933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 2\n3 4)"], null);
var G__97934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__97933,G__97934) : tailrecursion.hoplon.markdown.code_node.call(null,G__97933,G__97934));
})(),". In general,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97923,G__97924) : tailrecursion.hoplon.markdown.para_node.call(null,G__97923,G__97924));
})(),(function (){var G__97935 = (function (){var G__97936 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__97937 = (function (){var G__97938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__97939 = "(";
var G__97940 = (function (){var G__97949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97950 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97949,G__97950) : tailrecursion.hoplon.span.call(null,G__97949,G__97950));
})();
var G__97941 = (function (){var G__97951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97952 = "<a1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97951,G__97952) : tailrecursion.hoplon.span.call(null,G__97951,G__97952));
})();
var G__97942 = " ";
var G__97943 = (function (){var G__97953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97954 = "<a2>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97953,G__97954) : tailrecursion.hoplon.span.call(null,G__97953,G__97954));
})();
var G__97944 = " ";
var G__97945 = (function (){var G__97955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97956 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97955,G__97956) : tailrecursion.hoplon.span.call(null,G__97955,G__97956));
})();
var G__97946 = " ";
var G__97947 = (function (){var G__97957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97958 = "<an>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97957,G__97958) : tailrecursion.hoplon.span.call(null,G__97957,G__97958));
})();
var G__97948 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__97938,G__97939,G__97940,G__97941,G__97942,G__97943,G__97944,G__97945,G__97946,G__97947,G__97948) : tailrecursion.hoplon.pre.call(null,G__97938,G__97939,G__97940,G__97941,G__97942,G__97943,G__97944,G__97945,G__97946,G__97947,G__97948));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__97936,G__97937) : tailrecursion.hoplon.div.call(null,G__97936,G__97937));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__97935) : tailrecursion.hoplon.div.call(null,G__97935));
})(),(function (){var G__97959 = cljs.core.PersistentArrayMap.EMPTY;
var G__97960 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is equivalent to"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__97959,G__97960) : tailrecursion.hoplon.markdown.para_node.call(null,G__97959,G__97960));
})(),(function (){var G__97961 = (function (){var G__97962 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__97963 = (function (){var G__97964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__97965 = "(";
var G__97966 = (function (){var G__97982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97983 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97982,G__97983) : tailrecursion.hoplon.span.call(null,G__97982,G__97983));
})();
var G__97967 = (function (){var G__97984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97985 = "<a1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97984,G__97985) : tailrecursion.hoplon.span.call(null,G__97984,G__97985));
})();
var G__97968 = " (";
var G__97969 = (function (){var G__97986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97987 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97986,G__97987) : tailrecursion.hoplon.span.call(null,G__97986,G__97987));
})();
var G__97970 = (function (){var G__97988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97989 = "<a2>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97988,G__97989) : tailrecursion.hoplon.span.call(null,G__97988,G__97989));
})();
var G__97971 = " (";
var G__97972 = (function (){var G__97990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97991 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97990,G__97991) : tailrecursion.hoplon.span.call(null,G__97990,G__97991));
})();
var G__97973 = (function (){var G__97992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97993 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97992,G__97993) : tailrecursion.hoplon.span.call(null,G__97992,G__97993));
})();
var G__97974 = " (";
var G__97975 = (function (){var G__97994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__97995 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97994,G__97995) : tailrecursion.hoplon.span.call(null,G__97994,G__97995));
})();
var G__97976 = (function (){var G__97996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97997 = "<an>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97996,G__97997) : tailrecursion.hoplon.span.call(null,G__97996,G__97997));
})();
var G__97977 = " ";
var G__97978 = (function (){var G__97998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__97999 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__97998,G__97999) : tailrecursion.hoplon.span.call(null,G__97998,G__97999));
})();
var G__97979 = ") ";
var G__97980 = (function (){var G__98000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98001 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98000,G__98001) : tailrecursion.hoplon.span.call(null,G__98000,G__98001));
})();
var G__97981 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__97964,G__97965,G__97966,G__97967,G__97968,G__97969,G__97970,G__97971,G__97972,G__97973,G__97974,G__97975,G__97976,G__97977,G__97978,G__97979,G__97980,G__97981) : tailrecursion.hoplon.pre.call(null,G__97964,G__97965,G__97966,G__97967,G__97968,G__97969,G__97970,G__97971,G__97972,G__97973,G__97974,G__97975,G__97976,G__97977,G__97978,G__97979,G__97980,G__97981));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__97962,G__97963) : tailrecursion.hoplon.div.call(null,G__97962,G__97963));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__97961) : tailrecursion.hoplon.div.call(null,G__97961));
})(),(function (){var G__98002 = cljs.core.PersistentArrayMap.EMPTY;
var G__98003 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lisp systems conventionally print lists by printing the sequence of elements, enclosed in parentheses. Thus, the data object in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/4/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.4"], null)], 0))," is printed as ",(function (){var G__98004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4)"], null);
var G__98005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98004,G__98005) : tailrecursion.hoplon.markdown.code_node.call(null,G__98004,G__98005));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98002,G__98003) : tailrecursion.hoplon.markdown.para_node.call(null,G__98002,G__98003));
})(),(function (){var G__98006 = (function (){var G__98007 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98008 = (function (){var G__98009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98010 = "(";
var G__98011 = (function (){var G__98033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98034 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98033,G__98034) : tailrecursion.hoplon.span.call(null,G__98033,G__98034));
})();
var G__98012 = (function (){var G__98035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98036 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98035,G__98036) : tailrecursion.hoplon.span.call(null,G__98035,G__98036));
})();
var G__98013 = " (";
var G__98014 = (function (){var G__98037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98038 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98037,G__98038) : tailrecursion.hoplon.span.call(null,G__98037,G__98038));
})();
var G__98015 = (function (){var G__98039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98040 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98039,G__98040) : tailrecursion.hoplon.span.call(null,G__98039,G__98040));
})();
var G__98016 = " ";
var G__98017 = (function (){var G__98041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98042 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98041,G__98042) : tailrecursion.hoplon.span.call(null,G__98041,G__98042));
})();
var G__98018 = " ";
var G__98019 = (function (){var G__98043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98044 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98043,G__98044) : tailrecursion.hoplon.span.call(null,G__98043,G__98044));
})();
var G__98020 = " ";
var G__98021 = (function (){var G__98045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98046 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98045,G__98046) : tailrecursion.hoplon.span.call(null,G__98045,G__98046));
})();
var G__98022 = ")\n\n";
var G__98023 = (function (){var G__98047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98048 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98047,G__98048) : tailrecursion.hoplon.span.call(null,G__98047,G__98048));
})();
var G__98024 = "\n(";
var G__98025 = (function (){var G__98049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98050 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98049,G__98050) : tailrecursion.hoplon.span.call(null,G__98049,G__98050));
})();
var G__98026 = " ";
var G__98027 = (function (){var G__98051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98052 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98051,G__98052) : tailrecursion.hoplon.span.call(null,G__98051,G__98052));
})();
var G__98028 = " ";
var G__98029 = (function (){var G__98053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98054 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98053,G__98054) : tailrecursion.hoplon.span.call(null,G__98053,G__98054));
})();
var G__98030 = " ";
var G__98031 = (function (){var G__98055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98056 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98055,G__98056) : tailrecursion.hoplon.span.call(null,G__98055,G__98056));
})();
var G__98032 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__98009,G__98010,G__98011,G__98012,G__98013,G__98014,G__98015,G__98016,G__98017,G__98018,G__98019,G__98020,G__98021,G__98022,G__98023,G__98024,G__98025,G__98026,G__98027,G__98028,G__98029,G__98030,G__98031,G__98032) : tailrecursion.hoplon.pre.call(null,G__98009,G__98010,G__98011,G__98012,G__98013,G__98014,G__98015,G__98016,G__98017,G__98018,G__98019,G__98020,G__98021,G__98022,G__98023,G__98024,G__98025,G__98026,G__98027,G__98028,G__98029,G__98030,G__98031,G__98032));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98007,G__98008) : tailrecursion.hoplon.div.call(null,G__98007,G__98008));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98006) : tailrecursion.hoplon.div.call(null,G__98006));
})(),(function (){var G__98057 = cljs.core.PersistentArrayMap.EMPTY;
var G__98058 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Be careful not to confuse the expression ",(function (){var G__98059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 2 3 4)"], null);
var G__98060 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98059,G__98060) : tailrecursion.hoplon.markdown.code_node.call(null,G__98059,G__98060));
})()," with the list ",(function (){var G__98061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4)"], null);
var G__98062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98061,G__98062) : tailrecursion.hoplon.markdown.code_node.call(null,G__98061,G__98062));
})(),", which is the result obtained when the expression is evaluated. Attempting to evaluate the expression ",(function (){var G__98063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4)"], null);
var G__98064 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98063,G__98064) : tailrecursion.hoplon.markdown.code_node.call(null,G__98063,G__98064));
})()," will signal an error when the interpreter tries to apply the procedure 1 to arguments 2,3, and 4."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98057,G__98058) : tailrecursion.hoplon.markdown.para_node.call(null,G__98057,G__98058));
})(),(function (){var G__98065 = cljs.core.PersistentArrayMap.EMPTY;
var G__98066 = cljs.core.PersistentVector.fromArray(["We can think of ",(function (){var G__98067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"car"], null);
var G__98068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98067,G__98068) : tailrecursion.hoplon.markdown.code_node.call(null,G__98067,G__98068));
})()," as selecting the first item in the list (as I",(function (){var G__98069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__98070 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__98069,G__98070) : tailrecursion.hoplon.markdown.simple_node.call(null,G__98069,G__98070));
})(),"m sure you surmised ",(function (){var G__98071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__98072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98071,G__98072) : tailrecursion.hoplon.markdown.code_node.call(null,G__98071,G__98072));
})()," does), and of ",(function (){var G__98073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__98074 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98073,G__98074) : tailrecursion.hoplon.markdown.code_node.call(null,G__98073,G__98074));
})()," as selecting the sublist consisting of the rest of the items (as does ",(function (){var G__98075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98076 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98075,G__98076) : tailrecursion.hoplon.markdown.code_node.call(null,G__98075,G__98076));
})(),"). This is actually more true in Clojure than in Scheme.",(function (){var G__98077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__98078 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Clojure the procedure we would be dealing with is, ",(function (){var G__98079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98080 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98079,G__98080) : tailrecursion.hoplon.markdown.code_node.call(null,G__98079,G__98080));
})(),", which, given a list returns a new list consisting of all but the first item. A key thing to notice here is that unlike ",(function (){var G__98081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__98082 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98081,G__98082) : tailrecursion.hoplon.markdown.code_node.call(null,G__98081,G__98082));
})(),", when you supply ",(function (){var G__98083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98084 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98083,G__98084) : tailrecursion.hoplon.markdown.code_node.call(null,G__98083,G__98084));
})()," with a list, it returns a list. Always. So, ",(function (){var G__98085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(rest (list 1 2))"], null);
var G__98086 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98085,G__98086) : tailrecursion.hoplon.markdown.code_node.call(null,G__98085,G__98086));
})()," returns ",(function (){var G__98087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(2)"], null);
var G__98088 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98087,G__98088) : tailrecursion.hoplon.markdown.code_node.call(null,G__98087,G__98088));
})(),", and ",(function (){var G__98089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(rest (list\n1))"], null);
var G__98090 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98089,G__98090) : tailrecursion.hoplon.markdown.code_node.call(null,G__98089,G__98090));
})()," would return ",(function (){var G__98091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"()"], null);
var G__98092 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98091,G__98092) : tailrecursion.hoplon.markdown.code_node.call(null,G__98091,G__98092));
})(),", the empty list."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__98077,G__98078) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__98077,G__98078));
})()," Nested applications of ",(function (){var G__98093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__98094 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98093,G__98094) : tailrecursion.hoplon.markdown.code_node.call(null,G__98093,G__98094));
})()," and ",(function (){var G__98095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98096 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98095,G__98096) : tailrecursion.hoplon.markdown.code_node.call(null,G__98095,G__98096));
})()," can be used to extract the second, third, and subsequent items in the list. Our language, along with ",(function (){var G__98097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__98098 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98097,G__98098) : tailrecursion.hoplon.markdown.code_node.call(null,G__98097,G__98098));
})()," has a ",(function (){var G__98099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"second"], null);
var G__98100 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98099,G__98100) : tailrecursion.hoplon.markdown.code_node.call(null,G__98099,G__98100));
})()," procedure which, given a list returns the second value. The constructor ",(function (){var G__98101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__98102 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98101,G__98102) : tailrecursion.hoplon.markdown.code_node.call(null,G__98101,G__98102));
})()," makes a list like the original one, but with an additional item at the beginning, but Clojure has a more general version called ",(function (){var G__98103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__98104 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98103,G__98104) : tailrecursion.hoplon.markdown.code_node.call(null,G__98103,G__98104));
})()," built in that works well with other sequential objects. So, as we",(function (){var G__98105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__98106 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__98105,G__98106) : tailrecursion.hoplon.markdown.simple_node.call(null,G__98105,G__98106));
})(),"ve seen, prepending things on a list is very cheap (computationally). That is why ",(function (){var G__98107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__98108 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98107,G__98108) : tailrecursion.hoplon.markdown.code_node.call(null,G__98107,G__98108));
})()," prepends things to lists. There are other sequential objects that ",(function (){var G__98109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__98110 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98109,G__98110) : tailrecursion.hoplon.markdown.code_node.call(null,G__98109,G__98110));
})()," operates on and doesn",(function (){var G__98111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__98112 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__98111,G__98112) : tailrecursion.hoplon.markdown.simple_node.call(null,G__98111,G__98112));
})(),"t prepend, but we",(function (){var G__98113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__98114 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__98113,G__98114) : tailrecursion.hoplon.markdown.simple_node.call(null,G__98113,G__98114));
})(),"ll get into that later."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98065,G__98066) : tailrecursion.hoplon.markdown.para_node.call(null,G__98065,G__98066));
})(),(function (){var G__98115 = (function (){var G__98116 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98117 = (function (){var G__98118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98119 = "(";
var G__98120 = (function (){var G__98229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98230 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98229,G__98230) : tailrecursion.hoplon.span.call(null,G__98229,G__98230));
})();
var G__98121 = (function (){var G__98231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98232 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98231,G__98232) : tailrecursion.hoplon.span.call(null,G__98231,G__98232));
})();
var G__98122 = ")\n";
var G__98123 = (function (){var G__98233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98234 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98233,G__98234) : tailrecursion.hoplon.span.call(null,G__98233,G__98234));
})();
var G__98124 = "\n\n(";
var G__98125 = (function (){var G__98235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98236 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98235,G__98236) : tailrecursion.hoplon.span.call(null,G__98235,G__98236));
})();
var G__98126 = (function (){var G__98237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98238 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98237,G__98238) : tailrecursion.hoplon.span.call(null,G__98237,G__98238));
})();
var G__98127 = ")\n(";
var G__98128 = (function (){var G__98239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98240 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98239,G__98240) : tailrecursion.hoplon.span.call(null,G__98239,G__98240));
})();
var G__98129 = " ";
var G__98130 = (function (){var G__98241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98242 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98241,G__98242) : tailrecursion.hoplon.span.call(null,G__98241,G__98242));
})();
var G__98131 = " ";
var G__98132 = (function (){var G__98243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98244 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98243,G__98244) : tailrecursion.hoplon.span.call(null,G__98243,G__98244));
})();
var G__98133 = ")\n\n(";
var G__98134 = (function (){var G__98245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98246 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98245,G__98246) : tailrecursion.hoplon.span.call(null,G__98245,G__98246));
})();
var G__98135 = "(";
var G__98136 = (function (){var G__98247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98248 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98247,G__98248) : tailrecursion.hoplon.span.call(null,G__98247,G__98248));
})();
var G__98137 = (function (){var G__98249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98250 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98249,G__98250) : tailrecursion.hoplon.span.call(null,G__98249,G__98250));
})();
var G__98138 = "))\n";
var G__98139 = (function (){var G__98251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98252 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98251,G__98252) : tailrecursion.hoplon.span.call(null,G__98251,G__98252));
})();
var G__98140 = "\n\n(";
var G__98141 = (function (){var G__98253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98254 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98253,G__98254) : tailrecursion.hoplon.span.call(null,G__98253,G__98254));
})();
var G__98142 = (function (){var G__98255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98256 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98255,G__98256) : tailrecursion.hoplon.span.call(null,G__98255,G__98256));
})();
var G__98143 = ")\n";
var G__98144 = (function (){var G__98257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98258 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98257,G__98258) : tailrecursion.hoplon.span.call(null,G__98257,G__98258));
})();
var G__98145 = "\n\n(";
var G__98146 = (function (){var G__98259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98260 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98259,G__98260) : tailrecursion.hoplon.span.call(null,G__98259,G__98260));
})();
var G__98147 = (function (){var G__98261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98262 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98261,G__98262) : tailrecursion.hoplon.span.call(null,G__98261,G__98262));
})();
var G__98148 = " ";
var G__98149 = (function (){var G__98263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98264 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98263,G__98264) : tailrecursion.hoplon.span.call(null,G__98263,G__98264));
})();
var G__98150 = ")\n(";
var G__98151 = (function (){var G__98265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98266 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98265,G__98266) : tailrecursion.hoplon.span.call(null,G__98265,G__98266));
})();
var G__98152 = " ";
var G__98153 = (function (){var G__98267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98268 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98267,G__98268) : tailrecursion.hoplon.span.call(null,G__98267,G__98268));
})();
var G__98154 = " ";
var G__98155 = (function (){var G__98269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98270 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98269,G__98270) : tailrecursion.hoplon.span.call(null,G__98269,G__98270));
})();
var G__98156 = " ";
var G__98157 = (function (){var G__98271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98272 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98271,G__98272) : tailrecursion.hoplon.span.call(null,G__98271,G__98272));
})();
var G__98158 = " ";
var G__98159 = (function (){var G__98273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98274 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98273,G__98274) : tailrecursion.hoplon.span.call(null,G__98273,G__98274));
})();
var G__98160 = ")\n\n(";
var G__98161 = (function (){var G__98275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98276 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98275,G__98276) : tailrecursion.hoplon.span.call(null,G__98275,G__98276));
})();
var G__98162 = (function (){var G__98277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98278 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98277,G__98278) : tailrecursion.hoplon.span.call(null,G__98277,G__98278));
})();
var G__98163 = " ";
var G__98164 = (function (){var G__98279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98280 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98279,G__98280) : tailrecursion.hoplon.span.call(null,G__98279,G__98280));
})();
var G__98165 = ")\n(";
var G__98166 = (function (){var G__98281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98282 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98281,G__98282) : tailrecursion.hoplon.span.call(null,G__98281,G__98282));
})();
var G__98167 = " ";
var G__98168 = (function (){var G__98283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98284 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98283,G__98284) : tailrecursion.hoplon.span.call(null,G__98283,G__98284));
})();
var G__98169 = " ";
var G__98170 = (function (){var G__98285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98286 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98285,G__98286) : tailrecursion.hoplon.span.call(null,G__98285,G__98286));
})();
var G__98171 = " ";
var G__98172 = (function (){var G__98287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98288 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98287,G__98288) : tailrecursion.hoplon.span.call(null,G__98287,G__98288));
})();
var G__98173 = " ";
var G__98174 = (function (){var G__98289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98290 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98289,G__98290) : tailrecursion.hoplon.span.call(null,G__98289,G__98290));
})();
var G__98175 = ")\n\n(";
var G__98176 = (function (){var G__98291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98292 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98291,G__98292) : tailrecursion.hoplon.span.call(null,G__98291,G__98292));
})();
var G__98177 = (function (){var G__98293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98294 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98293,G__98294) : tailrecursion.hoplon.span.call(null,G__98293,G__98294));
})();
var G__98178 = " ";
var G__98179 = (function (){var G__98295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98296 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98295,G__98296) : tailrecursion.hoplon.span.call(null,G__98295,G__98296));
})();
var G__98180 = ")\n(";
var G__98181 = (function (){var G__98297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98298 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98297,G__98298) : tailrecursion.hoplon.span.call(null,G__98297,G__98298));
})();
var G__98182 = " ";
var G__98183 = (function (){var G__98299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98300 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98299,G__98300) : tailrecursion.hoplon.span.call(null,G__98299,G__98300));
})();
var G__98184 = " ";
var G__98185 = (function (){var G__98301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98302 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98301,G__98302) : tailrecursion.hoplon.span.call(null,G__98301,G__98302));
})();
var G__98186 = " ";
var G__98187 = (function (){var G__98303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98304 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98303,G__98304) : tailrecursion.hoplon.span.call(null,G__98303,G__98304));
})();
var G__98188 = " ";
var G__98189 = (function (){var G__98305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98306 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98305,G__98306) : tailrecursion.hoplon.span.call(null,G__98305,G__98306));
})();
var G__98190 = ")\n\n(";
var G__98191 = (function (){var G__98307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98308 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98307,G__98308) : tailrecursion.hoplon.span.call(null,G__98307,G__98308));
})();
var G__98192 = (function (){var G__98309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98310 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98309,G__98310) : tailrecursion.hoplon.span.call(null,G__98309,G__98310));
})();
var G__98193 = " ";
var G__98194 = (function (){var G__98311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98312 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98311,G__98312) : tailrecursion.hoplon.span.call(null,G__98311,G__98312));
})();
var G__98195 = ")\n(";
var G__98196 = (function (){var G__98313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98314 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98313,G__98314) : tailrecursion.hoplon.span.call(null,G__98313,G__98314));
})();
var G__98197 = " ";
var G__98198 = (function (){var G__98315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98316 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98315,G__98316) : tailrecursion.hoplon.span.call(null,G__98315,G__98316));
})();
var G__98199 = " ";
var G__98200 = (function (){var G__98317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98318 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98317,G__98318) : tailrecursion.hoplon.span.call(null,G__98317,G__98318));
})();
var G__98201 = " ";
var G__98202 = (function (){var G__98319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98320 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98319,G__98320) : tailrecursion.hoplon.span.call(null,G__98319,G__98320));
})();
var G__98203 = " ";
var G__98204 = (function (){var G__98321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98322 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98321,G__98322) : tailrecursion.hoplon.span.call(null,G__98321,G__98322));
})();
var G__98205 = ")\n\n(";
var G__98206 = (function (){var G__98323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98324 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98323,G__98324) : tailrecursion.hoplon.span.call(null,G__98323,G__98324));
})();
var G__98207 = (function (){var G__98325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98326 = "one-through-four";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98325,G__98326) : tailrecursion.hoplon.span.call(null,G__98325,G__98326));
})();
var G__98208 = " ";
var G__98209 = (function (){var G__98327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98328 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98327,G__98328) : tailrecursion.hoplon.span.call(null,G__98327,G__98328));
})();
var G__98210 = " ";
var G__98211 = (function (){var G__98329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98330 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98329,G__98330) : tailrecursion.hoplon.span.call(null,G__98329,G__98330));
})();
var G__98212 = " ";
var G__98213 = (function (){var G__98331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98332 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98331,G__98332) : tailrecursion.hoplon.span.call(null,G__98331,G__98332));
})();
var G__98214 = ")\n(";
var G__98215 = (function (){var G__98333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98334 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98333,G__98334) : tailrecursion.hoplon.span.call(null,G__98333,G__98334));
})();
var G__98216 = " ";
var G__98217 = (function (){var G__98335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98336 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98335,G__98336) : tailrecursion.hoplon.span.call(null,G__98335,G__98336));
})();
var G__98218 = " ";
var G__98219 = (function (){var G__98337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98338 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98337,G__98338) : tailrecursion.hoplon.span.call(null,G__98337,G__98338));
})();
var G__98220 = " ";
var G__98221 = (function (){var G__98339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98340 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98339,G__98340) : tailrecursion.hoplon.span.call(null,G__98339,G__98340));
})();
var G__98222 = " ";
var G__98223 = (function (){var G__98341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98342 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98341,G__98342) : tailrecursion.hoplon.span.call(null,G__98341,G__98342));
})();
var G__98224 = " ";
var G__98225 = (function (){var G__98343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98344 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98343,G__98344) : tailrecursion.hoplon.span.call(null,G__98343,G__98344));
})();
var G__98226 = " ";
var G__98227 = (function (){var G__98345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98346 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98345,G__98346) : tailrecursion.hoplon.span.call(null,G__98345,G__98346));
})();
var G__98228 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$111 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$111(G__98118,G__98119,G__98120,G__98121,G__98122,G__98123,G__98124,G__98125,G__98126,G__98127,G__98128,G__98129,G__98130,G__98131,G__98132,G__98133,G__98134,G__98135,G__98136,G__98137,G__98138,G__98139,G__98140,G__98141,G__98142,G__98143,G__98144,G__98145,G__98146,G__98147,G__98148,G__98149,G__98150,G__98151,G__98152,G__98153,G__98154,G__98155,G__98156,G__98157,G__98158,G__98159,G__98160,G__98161,G__98162,G__98163,G__98164,G__98165,G__98166,G__98167,G__98168,G__98169,G__98170,G__98171,G__98172,G__98173,G__98174,G__98175,G__98176,G__98177,G__98178,G__98179,G__98180,G__98181,G__98182,G__98183,G__98184,G__98185,G__98186,G__98187,G__98188,G__98189,G__98190,G__98191,G__98192,G__98193,G__98194,G__98195,G__98196,G__98197,G__98198,G__98199,G__98200,G__98201,G__98202,G__98203,G__98204,G__98205,G__98206,G__98207,G__98208,G__98209,G__98210,G__98211,G__98212,G__98213,G__98214,G__98215,G__98216,G__98217,G__98218,G__98219,G__98220,G__98221,G__98222,G__98223,G__98224,G__98225,G__98226,G__98227,G__98228) : tailrecursion.hoplon.pre.call(null,G__98118,G__98119,G__98120,G__98121,G__98122,G__98123,G__98124,G__98125,G__98126,G__98127,G__98128,G__98129,G__98130,G__98131,G__98132,G__98133,G__98134,G__98135,G__98136,G__98137,G__98138,G__98139,G__98140,G__98141,G__98142,G__98143,G__98144,G__98145,G__98146,G__98147,G__98148,G__98149,G__98150,G__98151,G__98152,G__98153,G__98154,G__98155,G__98156,G__98157,G__98158,G__98159,G__98160,G__98161,G__98162,G__98163,G__98164,G__98165,G__98166,G__98167,G__98168,G__98169,G__98170,G__98171,G__98172,G__98173,G__98174,G__98175,G__98176,G__98177,G__98178,G__98179,G__98180,G__98181,G__98182,G__98183,G__98184,G__98185,G__98186,G__98187,G__98188,G__98189,G__98190,G__98191,G__98192,G__98193,G__98194,G__98195,G__98196,G__98197,G__98198,G__98199,G__98200,G__98201,G__98202,G__98203,G__98204,G__98205,G__98206,G__98207,G__98208,G__98209,G__98210,G__98211,G__98212,G__98213,G__98214,G__98215,G__98216,G__98217,G__98218,G__98219,G__98220,G__98221,G__98222,G__98223,G__98224,G__98225,G__98226,G__98227,G__98228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98116,G__98117) : tailrecursion.hoplon.div.call(null,G__98116,G__98117));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98115) : tailrecursion.hoplon.div.call(null,G__98115));
})(),(function (){var G__98347 = cljs.core.PersistentArrayMap.EMPTY;
var G__98348 = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice in that last one that ",(function (){var G__98349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__98350 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98349,G__98350) : tailrecursion.hoplon.markdown.code_node.call(null,G__98349,G__98350));
})()," put them in backward. That is because ",(function (){var G__98351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__98352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98351,G__98352) : tailrecursion.hoplon.markdown.code_node.call(null,G__98351,G__98352));
})()," prepends them one by one in the order they appear. The value of ",(function (){var G__98353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98354 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98353,G__98354) : tailrecursion.hoplon.markdown.code_node.call(null,G__98353,G__98354));
})(),", used to terminate the chain of pairs, in Clojure is only named ",(function (){var G__98355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98356 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98355,G__98356) : tailrecursion.hoplon.markdown.code_node.call(null,G__98355,G__98356));
})()," for legacy reasons. In Scheme, however, ",(function (){var G__98357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98358 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98357,G__98358) : tailrecursion.hoplon.markdown.code_node.call(null,G__98357,G__98358));
})()," was a sequence of no elements or the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["empty list"], null)], 0)),". The word ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nil"], null)], 0))," is a contraction of the Latin word ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nihil"], null)], 0)),", which means ",(function (){var G__98359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__98360 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nothing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__98359,G__98360) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__98359,G__98360));
})(),".",(function (){var G__98361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__98362 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It's remarkable how much energy in the standardization of Lisp dialects has been dissipated in arguments that are literally over nothing: Should ",(function (){var G__98363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98364 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98363,G__98364) : tailrecursion.hoplon.markdown.code_node.call(null,G__98363,G__98364));
})()," be an ordinary name? Should the value of ",(function (){var G__98365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98366 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98365,G__98366) : tailrecursion.hoplon.markdown.code_node.call(null,G__98365,G__98366));
})()," be a symbol? Should it be a list? Should it be a pair? In Scheme, ",(function (){var G__98367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98368 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98367,G__98368) : tailrecursion.hoplon.markdown.code_node.call(null,G__98367,G__98368));
})()," is an ordinary name, which we use in this section as a variable whose value is the end-of-list marker (just as ",(function (){var G__98369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__98370 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98369,G__98370) : tailrecursion.hoplon.markdown.code_node.call(null,G__98369,G__98370));
})()," is an ordinary variable that has a true value). Other dialects of Lisp, including Common Lisp, treat nil as a special symbol. The authors of this book, who have endured too many language standardization brawls, would like to avoid the entire issue. Once we have introduced quotation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.3"], null)], 0)),", we will denote the empty list as ",(function (){var G__98371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"&#39;()"], null);
var G__98372 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98371,G__98372) : tailrecursion.hoplon.markdown.code_node.call(null,G__98371,G__98372));
})()," and dispense with the variable ",(function (){var G__98373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__98374 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98373,G__98374) : tailrecursion.hoplon.markdown.code_node.call(null,G__98373,G__98374));
})()," entirely."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__98361,G__98362) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__98361,G__98362));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98347,G__98348) : tailrecursion.hoplon.markdown.para_node.call(null,G__98347,G__98348));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_97873;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_97872;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_97871;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_97870;
}})()], 0));
var G__97780 = "";
var G__97781 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"List Operations"], null),(function (){var _STAR_references_STAR_98375 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98376 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_98377 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98378 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98379 = cljs.core.PersistentArrayMap.EMPTY;
var G__98380 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The use of pairs to represent sequences of elements as lists is accompanied by conventional programming techniques for manipulating lists by successively ",(function (){var G__98381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__98382 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cdring down"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__98381,G__98382) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__98381,G__98382));
})()," the lists. For example, the procedure ",(function (){var G__98383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list-ref"], null);
var G__98384 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98383,G__98384) : tailrecursion.hoplon.markdown.code_node.call(null,G__98383,G__98384));
})()," in Scheme and ",(function (){var G__98385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__98386 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98385,G__98386) : tailrecursion.hoplon.markdown.code_node.call(null,G__98385,G__98386));
})()," in Clojure takes as arguments a list and a number \\(n\\) and returns the \\(n\\)th item of the list. It is customary to number the elements of the list beginning with 0. The method for computing ",(function (){var G__98387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__98388 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98387,G__98388) : tailrecursion.hoplon.markdown.code_node.call(null,G__98387,G__98388));
})()," is the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98379,G__98380) : tailrecursion.hoplon.markdown.para_node.call(null,G__98379,G__98380));
})(),(function (){var G__98389 = cljs.core.PersistentArrayMap.EMPTY;
var G__98390 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98391 = cljs.core.PersistentArrayMap.EMPTY;
var G__98392 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98393 = cljs.core.PersistentArrayMap.EMPTY;
var G__98394 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For \\(n=0\\), ",(function (){var G__98395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__98396 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98395,G__98396) : tailrecursion.hoplon.markdown.code_node.call(null,G__98395,G__98396));
})()," should return the ",(function (){var G__98397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__98398 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98397,G__98398) : tailrecursion.hoplon.markdown.code_node.call(null,G__98397,G__98398));
})()," of the list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98393,G__98394) : tailrecursion.hoplon.markdown.para_node.call(null,G__98393,G__98394));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__98391,G__98392) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__98391,G__98392));
})(),(function (){var G__98399 = cljs.core.PersistentArrayMap.EMPTY;
var G__98400 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_98401 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98402 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98403 = cljs.core.PersistentArrayMap.EMPTY;
var G__98404 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Otherwise, ",(function (){var G__98405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nth"], null);
var G__98406 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98405,G__98406) : tailrecursion.hoplon.markdown.code_node.call(null,G__98405,G__98406));
})()," should return the \\(n-1\\)st item of the ",(function (){var G__98407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98408 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98407,G__98408) : tailrecursion.hoplon.markdown.code_node.call(null,G__98407,G__98408));
})()," of the list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98403,G__98404) : tailrecursion.hoplon.markdown.para_node.call(null,G__98403,G__98404));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98402;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98401;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__98399,G__98400) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__98399,G__98400));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__98389,G__98390) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__98389,G__98390));
})(),(function (){var G__98409 = (function (){var G__98410 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98411 = (function (){var G__98412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98413 = "(";
var G__98414 = (function (){var G__98470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98471 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98470,G__98471) : tailrecursion.hoplon.span.call(null,G__98470,G__98471));
})();
var G__98415 = (function (){var G__98472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98473 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98472,G__98473) : tailrecursion.hoplon.span.call(null,G__98472,G__98473));
})();
var G__98416 = "[";
var G__98417 = (function (){var G__98474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98475 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98474,G__98475) : tailrecursion.hoplon.span.call(null,G__98474,G__98475));
})();
var G__98418 = " ";
var G__98419 = (function (){var G__98476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98477 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98476,G__98477) : tailrecursion.hoplon.span.call(null,G__98476,G__98477));
})();
var G__98420 = "]\n  (";
var G__98421 = (function (){var G__98478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98479 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98478,G__98479) : tailrecursion.hoplon.span.call(null,G__98478,G__98479));
})();
var G__98422 = "[";
var G__98423 = (function (){var G__98480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98481 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98480,G__98481) : tailrecursion.hoplon.span.call(null,G__98480,G__98481));
})();
var G__98424 = " ";
var G__98425 = (function (){var G__98482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98483 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98482,G__98483) : tailrecursion.hoplon.span.call(null,G__98482,G__98483));
})();
var G__98426 = "\n         ";
var G__98427 = (function (){var G__98484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98485 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98484,G__98485) : tailrecursion.hoplon.span.call(null,G__98484,G__98485));
})();
var G__98428 = " ";
var G__98429 = (function (){var G__98486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98487 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98486,G__98487) : tailrecursion.hoplon.span.call(null,G__98486,G__98487));
})();
var G__98430 = "]\n    (";
var G__98431 = (function (){var G__98488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98489 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98488,G__98489) : tailrecursion.hoplon.span.call(null,G__98488,G__98489));
})();
var G__98432 = "(";
var G__98433 = (function (){var G__98490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98491 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98490,G__98491) : tailrecursion.hoplon.span.call(null,G__98490,G__98491));
})();
var G__98434 = (function (){var G__98492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98493 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98492,G__98493) : tailrecursion.hoplon.span.call(null,G__98492,G__98493));
})();
var G__98435 = " ";
var G__98436 = (function (){var G__98494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98495 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98494,G__98495) : tailrecursion.hoplon.span.call(null,G__98494,G__98495));
})();
var G__98437 = ")\n        (";
var G__98438 = (function (){var G__98496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98497 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98496,G__98497) : tailrecursion.hoplon.span.call(null,G__98496,G__98497));
})();
var G__98439 = (function (){var G__98498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98499 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98498,G__98499) : tailrecursion.hoplon.span.call(null,G__98498,G__98499));
})();
var G__98440 = ")\n        (";
var G__98441 = (function (){var G__98500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98501 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98500,G__98501) : tailrecursion.hoplon.span.call(null,G__98500,G__98501));
})();
var G__98442 = " (";
var G__98443 = (function (){var G__98502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98503 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98502,G__98503) : tailrecursion.hoplon.span.call(null,G__98502,G__98503));
})();
var G__98444 = (function (){var G__98504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98505 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98504,G__98505) : tailrecursion.hoplon.span.call(null,G__98504,G__98505));
})();
var G__98445 = ") (";
var G__98446 = (function (){var G__98506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98507 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98506,G__98507) : tailrecursion.hoplon.span.call(null,G__98506,G__98507));
})();
var G__98447 = (function (){var G__98508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98509 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98508,G__98509) : tailrecursion.hoplon.span.call(null,G__98508,G__98509));
})();
var G__98448 = ")))))\n(";
var G__98449 = (function (){var G__98510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98511 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98510,G__98511) : tailrecursion.hoplon.span.call(null,G__98510,G__98511));
})();
var G__98450 = (function (){var G__98512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98513 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98512,G__98513) : tailrecursion.hoplon.span.call(null,G__98512,G__98513));
})();
var G__98451 = " (";
var G__98452 = (function (){var G__98514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98515 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98514,G__98515) : tailrecursion.hoplon.span.call(null,G__98514,G__98515));
})();
var G__98453 = (function (){var G__98516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98517 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98516,G__98517) : tailrecursion.hoplon.span.call(null,G__98516,G__98517));
})();
var G__98454 = " ";
var G__98455 = (function (){var G__98518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98519 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98518,G__98519) : tailrecursion.hoplon.span.call(null,G__98518,G__98519));
})();
var G__98456 = " ";
var G__98457 = (function (){var G__98520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98521 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98520,G__98521) : tailrecursion.hoplon.span.call(null,G__98520,G__98521));
})();
var G__98458 = " ";
var G__98459 = (function (){var G__98522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98523 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98522,G__98523) : tailrecursion.hoplon.span.call(null,G__98522,G__98523));
})();
var G__98460 = " ";
var G__98461 = (function (){var G__98524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98525 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98524,G__98525) : tailrecursion.hoplon.span.call(null,G__98524,G__98525));
})();
var G__98462 = "))\n\n(";
var G__98463 = (function (){var G__98526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98527 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98526,G__98527) : tailrecursion.hoplon.span.call(null,G__98526,G__98527));
})();
var G__98464 = (function (){var G__98528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98529 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98528,G__98529) : tailrecursion.hoplon.span.call(null,G__98528,G__98529));
})();
var G__98465 = " ";
var G__98466 = (function (){var G__98530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98531 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98530,G__98531) : tailrecursion.hoplon.span.call(null,G__98530,G__98531));
})();
var G__98467 = ")\n";
var G__98468 = (function (){var G__98532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98533 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98532,G__98533) : tailrecursion.hoplon.span.call(null,G__98532,G__98533));
})();
var G__98469 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__98412,G__98413,G__98414,G__98415,G__98416,G__98417,G__98418,G__98419,G__98420,G__98421,G__98422,G__98423,G__98424,G__98425,G__98426,G__98427,G__98428,G__98429,G__98430,G__98431,G__98432,G__98433,G__98434,G__98435,G__98436,G__98437,G__98438,G__98439,G__98440,G__98441,G__98442,G__98443,G__98444,G__98445,G__98446,G__98447,G__98448,G__98449,G__98450,G__98451,G__98452,G__98453,G__98454,G__98455,G__98456,G__98457,G__98458,G__98459,G__98460,G__98461,G__98462,G__98463,G__98464,G__98465,G__98466,G__98467,G__98468,G__98469) : tailrecursion.hoplon.pre.call(null,G__98412,G__98413,G__98414,G__98415,G__98416,G__98417,G__98418,G__98419,G__98420,G__98421,G__98422,G__98423,G__98424,G__98425,G__98426,G__98427,G__98428,G__98429,G__98430,G__98431,G__98432,G__98433,G__98434,G__98435,G__98436,G__98437,G__98438,G__98439,G__98440,G__98441,G__98442,G__98443,G__98444,G__98445,G__98446,G__98447,G__98448,G__98449,G__98450,G__98451,G__98452,G__98453,G__98454,G__98455,G__98456,G__98457,G__98458,G__98459,G__98460,G__98461,G__98462,G__98463,G__98464,G__98465,G__98466,G__98467,G__98468,G__98469));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98410,G__98411) : tailrecursion.hoplon.div.call(null,G__98410,G__98411));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98409) : tailrecursion.hoplon.div.call(null,G__98409));
})(),(function (){var G__98534 = cljs.core.PersistentArrayMap.EMPTY;
var G__98535 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Often we ",(function (){var G__98536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cdr"], null);
var G__98537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98536,G__98537) : tailrecursion.hoplon.markdown.code_node.call(null,G__98536,G__98537));
})()," down the whole list. To aid in this, Scheme includes a primitive ",(function (){var G__98538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"null?"], null);
var G__98539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98538,G__98539) : tailrecursion.hoplon.markdown.code_node.call(null,G__98538,G__98539));
})(),", which tests whether its argument is the empty list. Being as how Clojure is intended to be more general than that, the analog in Clojure, called ",(function (){var G__98540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"empty?"], null);
var G__98541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98540,G__98541) : tailrecursion.hoplon.markdown.code_node.call(null,G__98540,G__98541));
})()," accepts any collection as an argument, and returns true if that collection is empty and false otherwise. The Scheme procedure ",(function (){var G__98542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__98543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98542,G__98543) : tailrecursion.hoplon.markdown.code_node.call(null,G__98542,G__98543));
})(),", which returns the number of items in a list (called ",(function (){var G__98544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__98545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98544,G__98545) : tailrecursion.hoplon.markdown.code_node.call(null,G__98544,G__98545));
})()," in Clojure), illustrates this typical pattern of use:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98534,G__98535) : tailrecursion.hoplon.markdown.para_node.call(null,G__98534,G__98535));
})(),(function (){var G__98546 = (function (){var G__98547 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98548 = (function (){var G__98549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98550 = "(";
var G__98551 = (function (){var G__98588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98589 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98588,G__98589) : tailrecursion.hoplon.span.call(null,G__98588,G__98589));
})();
var G__98552 = (function (){var G__98590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98591 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98590,G__98591) : tailrecursion.hoplon.span.call(null,G__98590,G__98591));
})();
var G__98553 = "[";
var G__98554 = (function (){var G__98592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98593 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98592,G__98593) : tailrecursion.hoplon.span.call(null,G__98592,G__98593));
})();
var G__98555 = "]\n  (";
var G__98556 = (function (){var G__98594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98595 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98594,G__98595) : tailrecursion.hoplon.span.call(null,G__98594,G__98595));
})();
var G__98557 = "(";
var G__98558 = (function (){var G__98596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98597 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98596,G__98597) : tailrecursion.hoplon.span.call(null,G__98596,G__98597));
})();
var G__98559 = " ";
var G__98560 = (function (){var G__98598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98599 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98598,G__98599) : tailrecursion.hoplon.span.call(null,G__98598,G__98599));
})();
var G__98561 = ")\n      ";
var G__98562 = (function (){var G__98600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98601 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98600,G__98601) : tailrecursion.hoplon.span.call(null,G__98600,G__98601));
})();
var G__98563 = "\n      (";
var G__98564 = (function (){var G__98602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98603 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98602,G__98603) : tailrecursion.hoplon.span.call(null,G__98602,G__98603));
})();
var G__98565 = "(";
var G__98566 = (function (){var G__98604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98605 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98604,G__98605) : tailrecursion.hoplon.span.call(null,G__98604,G__98605));
})();
var G__98567 = " (";
var G__98568 = (function (){var G__98606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98607 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98606,G__98607) : tailrecursion.hoplon.span.call(null,G__98606,G__98607));
})();
var G__98569 = (function (){var G__98608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98609 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98608,G__98609) : tailrecursion.hoplon.span.call(null,G__98608,G__98609));
})();
var G__98570 = ")))))\n(";
var G__98571 = (function (){var G__98610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98611 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98610,G__98611) : tailrecursion.hoplon.span.call(null,G__98610,G__98611));
})();
var G__98572 = (function (){var G__98612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98613 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98612,G__98613) : tailrecursion.hoplon.span.call(null,G__98612,G__98613));
})();
var G__98573 = " (";
var G__98574 = (function (){var G__98614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98615 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98614,G__98615) : tailrecursion.hoplon.span.call(null,G__98614,G__98615));
})();
var G__98575 = (function (){var G__98616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98617 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98616,G__98617) : tailrecursion.hoplon.span.call(null,G__98616,G__98617));
})();
var G__98576 = " ";
var G__98577 = (function (){var G__98618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98619 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98618,G__98619) : tailrecursion.hoplon.span.call(null,G__98618,G__98619));
})();
var G__98578 = " ";
var G__98579 = (function (){var G__98620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98621 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98620,G__98621) : tailrecursion.hoplon.span.call(null,G__98620,G__98621));
})();
var G__98580 = " ";
var G__98581 = (function (){var G__98622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98623 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98622,G__98623) : tailrecursion.hoplon.span.call(null,G__98622,G__98623));
})();
var G__98582 = "))\n\n(";
var G__98583 = (function (){var G__98624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98625 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98624,G__98625) : tailrecursion.hoplon.span.call(null,G__98624,G__98625));
})();
var G__98584 = (function (){var G__98626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98627 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98626,G__98627) : tailrecursion.hoplon.span.call(null,G__98626,G__98627));
})();
var G__98585 = ")\n";
var G__98586 = (function (){var G__98628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98629 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98628,G__98629) : tailrecursion.hoplon.span.call(null,G__98628,G__98629));
})();
var G__98587 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__98549,G__98550,G__98551,G__98552,G__98553,G__98554,G__98555,G__98556,G__98557,G__98558,G__98559,G__98560,G__98561,G__98562,G__98563,G__98564,G__98565,G__98566,G__98567,G__98568,G__98569,G__98570,G__98571,G__98572,G__98573,G__98574,G__98575,G__98576,G__98577,G__98578,G__98579,G__98580,G__98581,G__98582,G__98583,G__98584,G__98585,G__98586,G__98587) : tailrecursion.hoplon.pre.call(null,G__98549,G__98550,G__98551,G__98552,G__98553,G__98554,G__98555,G__98556,G__98557,G__98558,G__98559,G__98560,G__98561,G__98562,G__98563,G__98564,G__98565,G__98566,G__98567,G__98568,G__98569,G__98570,G__98571,G__98572,G__98573,G__98574,G__98575,G__98576,G__98577,G__98578,G__98579,G__98580,G__98581,G__98582,G__98583,G__98584,G__98585,G__98586,G__98587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98547,G__98548) : tailrecursion.hoplon.div.call(null,G__98547,G__98548));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98546) : tailrecursion.hoplon.div.call(null,G__98546));
})(),(function (){var G__98630 = cljs.core.PersistentArrayMap.EMPTY;
var G__98631 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__98632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__98633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98632,G__98633) : tailrecursion.hoplon.markdown.code_node.call(null,G__98632,G__98633));
})()," procedure implements a simple recursive plan. The reduction step is:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98630,G__98631) : tailrecursion.hoplon.markdown.para_node.call(null,G__98630,G__98631));
})(),(function (){var G__98634 = cljs.core.PersistentArrayMap.EMPTY;
var G__98635 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98636 = cljs.core.PersistentArrayMap.EMPTY;
var G__98637 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_98638 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98639 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__98640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__98641 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98640,G__98641) : tailrecursion.hoplon.markdown.code_node.call(null,G__98640,G__98641));
})()," of any list is 1 plus the count of the ",(function (){var G__98642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98643 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98642,G__98643) : tailrecursion.hoplon.markdown.code_node.call(null,G__98642,G__98643));
})()," of the list."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98639;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98638;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__98636,G__98637) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__98636,G__98637));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__98634,G__98635) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__98634,G__98635));
})(),(function (){var G__98644 = cljs.core.PersistentArrayMap.EMPTY;
var G__98645 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is applied successively until we reach the base case:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98644,G__98645) : tailrecursion.hoplon.markdown.para_node.call(null,G__98644,G__98645));
})(),(function (){var G__98646 = cljs.core.PersistentArrayMap.EMPTY;
var G__98647 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98648 = cljs.core.PersistentArrayMap.EMPTY;
var G__98649 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_98650 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98651 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__98652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__98653 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98652,G__98653) : tailrecursion.hoplon.markdown.code_node.call(null,G__98652,G__98653));
})()," of the empty list is 0."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98651;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98650;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__98648,G__98649) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__98648,G__98649));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__98646,G__98647) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__98646,G__98647));
})(),(function (){var G__98654 = cljs.core.PersistentArrayMap.EMPTY;
var G__98655 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We could also compute ",(function (){var G__98656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__98657 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98656,G__98657) : tailrecursion.hoplon.markdown.code_node.call(null,G__98656,G__98657));
})()," in an iterative style:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98654,G__98655) : tailrecursion.hoplon.markdown.para_node.call(null,G__98654,G__98655));
})(),(function (){var G__98658 = (function (){var G__98659 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98660 = (function (){var G__98661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98662 = "(";
var G__98663 = (function (){var G__98694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98695 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98694,G__98695) : tailrecursion.hoplon.span.call(null,G__98694,G__98695));
})();
var G__98664 = (function (){var G__98696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98697 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98696,G__98697) : tailrecursion.hoplon.span.call(null,G__98696,G__98697));
})();
var G__98665 = "[";
var G__98666 = (function (){var G__98698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98699 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98698,G__98699) : tailrecursion.hoplon.span.call(null,G__98698,G__98699));
})();
var G__98667 = "]\n  (";
var G__98668 = (function (){var G__98700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98701 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98700,G__98701) : tailrecursion.hoplon.span.call(null,G__98700,G__98701));
})();
var G__98669 = "[";
var G__98670 = (function (){var G__98702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98703 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98702,G__98703) : tailrecursion.hoplon.span.call(null,G__98702,G__98703));
})();
var G__98671 = " ";
var G__98672 = (function (){var G__98704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98705 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98704,G__98705) : tailrecursion.hoplon.span.call(null,G__98704,G__98705));
})();
var G__98673 = "\n         ";
var G__98674 = (function (){var G__98706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98707 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98706,G__98707) : tailrecursion.hoplon.span.call(null,G__98706,G__98707));
})();
var G__98675 = "   ";
var G__98676 = (function (){var G__98708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98709 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98708,G__98709) : tailrecursion.hoplon.span.call(null,G__98708,G__98709));
})();
var G__98677 = "]\n    (";
var G__98678 = (function (){var G__98710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98711 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98710,G__98711) : tailrecursion.hoplon.span.call(null,G__98710,G__98711));
})();
var G__98679 = "(";
var G__98680 = (function (){var G__98712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98713 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98712,G__98713) : tailrecursion.hoplon.span.call(null,G__98712,G__98713));
})();
var G__98681 = " ";
var G__98682 = (function (){var G__98714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98715 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98714,G__98715) : tailrecursion.hoplon.span.call(null,G__98714,G__98715));
})();
var G__98683 = ")\n        ";
var G__98684 = (function (){var G__98716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98717 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98716,G__98717) : tailrecursion.hoplon.span.call(null,G__98716,G__98717));
})();
var G__98685 = "\n        (";
var G__98686 = (function (){var G__98718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98719 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98718,G__98719) : tailrecursion.hoplon.span.call(null,G__98718,G__98719));
})();
var G__98687 = " (";
var G__98688 = (function (){var G__98720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98721 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98720,G__98721) : tailrecursion.hoplon.span.call(null,G__98720,G__98721));
})();
var G__98689 = (function (){var G__98722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98723 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98722,G__98723) : tailrecursion.hoplon.span.call(null,G__98722,G__98723));
})();
var G__98690 = ") (";
var G__98691 = (function (){var G__98724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98725 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98724,G__98725) : tailrecursion.hoplon.span.call(null,G__98724,G__98725));
})();
var G__98692 = (function (){var G__98726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98727 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98726,G__98727) : tailrecursion.hoplon.span.call(null,G__98726,G__98727));
})();
var G__98693 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__98661,G__98662,G__98663,G__98664,G__98665,G__98666,G__98667,G__98668,G__98669,G__98670,G__98671,G__98672,G__98673,G__98674,G__98675,G__98676,G__98677,G__98678,G__98679,G__98680,G__98681,G__98682,G__98683,G__98684,G__98685,G__98686,G__98687,G__98688,G__98689,G__98690,G__98691,G__98692,G__98693) : tailrecursion.hoplon.pre.call(null,G__98661,G__98662,G__98663,G__98664,G__98665,G__98666,G__98667,G__98668,G__98669,G__98670,G__98671,G__98672,G__98673,G__98674,G__98675,G__98676,G__98677,G__98678,G__98679,G__98680,G__98681,G__98682,G__98683,G__98684,G__98685,G__98686,G__98687,G__98688,G__98689,G__98690,G__98691,G__98692,G__98693));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98659,G__98660) : tailrecursion.hoplon.div.call(null,G__98659,G__98660));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98658) : tailrecursion.hoplon.div.call(null,G__98658));
})(),(function (){var G__98728 = cljs.core.PersistentArrayMap.EMPTY;
var G__98729 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another conventional programming technique is to ",(function (){var G__98730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__98731 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cons up"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__98730,G__98731) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__98730,G__98731));
})()," an answer list while cdring down a list, as in the procedure ",(function (){var G__98732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"append"], null);
var G__98733 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98732,G__98733) : tailrecursion.hoplon.markdown.code_node.call(null,G__98732,G__98733));
})()," (",(function (){var G__98734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__98735 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98734,G__98735) : tailrecursion.hoplon.markdown.code_node.call(null,G__98734,G__98735));
})()," in Clojure), which takes two lists as arguments and combines their elements to make a new list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98728,G__98729) : tailrecursion.hoplon.markdown.para_node.call(null,G__98728,G__98729));
})(),(function (){var G__98736 = (function (){var G__98737 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98738 = (function (){var G__98739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98740 = "(";
var G__98741 = (function (){var G__98787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98788 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98787,G__98788) : tailrecursion.hoplon.span.call(null,G__98787,G__98788));
})();
var G__98742 = (function (){var G__98789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98790 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98789,G__98790) : tailrecursion.hoplon.span.call(null,G__98789,G__98790));
})();
var G__98743 = " ";
var G__98744 = (function (){var G__98791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98792 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98791,G__98792) : tailrecursion.hoplon.span.call(null,G__98791,G__98792));
})();
var G__98745 = ")\n(";
var G__98746 = (function (){var G__98793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98794 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98793,G__98794) : tailrecursion.hoplon.span.call(null,G__98793,G__98794));
})();
var G__98747 = " ";
var G__98748 = (function (){var G__98795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98796 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98795,G__98796) : tailrecursion.hoplon.span.call(null,G__98795,G__98796));
})();
var G__98749 = " ";
var G__98750 = (function (){var G__98797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98798 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98797,G__98798) : tailrecursion.hoplon.span.call(null,G__98797,G__98798));
})();
var G__98751 = " ";
var G__98752 = (function (){var G__98799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98800 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98799,G__98800) : tailrecursion.hoplon.span.call(null,G__98799,G__98800));
})();
var G__98753 = " ";
var G__98754 = (function (){var G__98801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98802 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98801,G__98802) : tailrecursion.hoplon.span.call(null,G__98801,G__98802));
})();
var G__98755 = " ";
var G__98756 = (function (){var G__98803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98804 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98803,G__98804) : tailrecursion.hoplon.span.call(null,G__98803,G__98804));
})();
var G__98757 = " ";
var G__98758 = (function (){var G__98805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98806 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98805,G__98806) : tailrecursion.hoplon.span.call(null,G__98805,G__98806));
})();
var G__98759 = " ";
var G__98760 = (function (){var G__98807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98808 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98807,G__98808) : tailrecursion.hoplon.span.call(null,G__98807,G__98808));
})();
var G__98761 = " ";
var G__98762 = (function (){var G__98809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98810 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98809,G__98810) : tailrecursion.hoplon.span.call(null,G__98809,G__98810));
})();
var G__98763 = ")\n\n(";
var G__98764 = (function (){var G__98811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98812 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98811,G__98812) : tailrecursion.hoplon.span.call(null,G__98811,G__98812));
})();
var G__98765 = (function (){var G__98813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98814 = "odds";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98813,G__98814) : tailrecursion.hoplon.span.call(null,G__98813,G__98814));
})();
var G__98766 = " ";
var G__98767 = (function (){var G__98815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98816 = "squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98815,G__98816) : tailrecursion.hoplon.span.call(null,G__98815,G__98816));
})();
var G__98768 = ")\n(";
var G__98769 = (function (){var G__98817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98818 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98817,G__98818) : tailrecursion.hoplon.span.call(null,G__98817,G__98818));
})();
var G__98770 = " ";
var G__98771 = (function (){var G__98819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98820 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98819,G__98820) : tailrecursion.hoplon.span.call(null,G__98819,G__98820));
})();
var G__98772 = " ";
var G__98773 = (function (){var G__98821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98822 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98821,G__98822) : tailrecursion.hoplon.span.call(null,G__98821,G__98822));
})();
var G__98774 = " ";
var G__98775 = (function (){var G__98823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98824 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98823,G__98824) : tailrecursion.hoplon.span.call(null,G__98823,G__98824));
})();
var G__98776 = " ";
var G__98777 = (function (){var G__98825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98826 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98825,G__98826) : tailrecursion.hoplon.span.call(null,G__98825,G__98826));
})();
var G__98778 = " ";
var G__98779 = (function (){var G__98827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98828 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98827,G__98828) : tailrecursion.hoplon.span.call(null,G__98827,G__98828));
})();
var G__98780 = " ";
var G__98781 = (function (){var G__98829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98830 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98829,G__98830) : tailrecursion.hoplon.span.call(null,G__98829,G__98830));
})();
var G__98782 = " ";
var G__98783 = (function (){var G__98831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98832 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98831,G__98832) : tailrecursion.hoplon.span.call(null,G__98831,G__98832));
})();
var G__98784 = " ";
var G__98785 = (function (){var G__98833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98834 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98833,G__98834) : tailrecursion.hoplon.span.call(null,G__98833,G__98834));
})();
var G__98786 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__98739,G__98740,G__98741,G__98742,G__98743,G__98744,G__98745,G__98746,G__98747,G__98748,G__98749,G__98750,G__98751,G__98752,G__98753,G__98754,G__98755,G__98756,G__98757,G__98758,G__98759,G__98760,G__98761,G__98762,G__98763,G__98764,G__98765,G__98766,G__98767,G__98768,G__98769,G__98770,G__98771,G__98772,G__98773,G__98774,G__98775,G__98776,G__98777,G__98778,G__98779,G__98780,G__98781,G__98782,G__98783,G__98784,G__98785,G__98786) : tailrecursion.hoplon.pre.call(null,G__98739,G__98740,G__98741,G__98742,G__98743,G__98744,G__98745,G__98746,G__98747,G__98748,G__98749,G__98750,G__98751,G__98752,G__98753,G__98754,G__98755,G__98756,G__98757,G__98758,G__98759,G__98760,G__98761,G__98762,G__98763,G__98764,G__98765,G__98766,G__98767,G__98768,G__98769,G__98770,G__98771,G__98772,G__98773,G__98774,G__98775,G__98776,G__98777,G__98778,G__98779,G__98780,G__98781,G__98782,G__98783,G__98784,G__98785,G__98786));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98737,G__98738) : tailrecursion.hoplon.div.call(null,G__98737,G__98738));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98736) : tailrecursion.hoplon.div.call(null,G__98736));
})(),(function (){var G__98835 = cljs.core.PersistentArrayMap.EMPTY;
var G__98836 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__98838 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98837,G__98838) : tailrecursion.hoplon.markdown.code_node.call(null,G__98837,G__98838));
})()," is also implemented using a recursive plan. To ",(function (){var G__98839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__98840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98839,G__98840) : tailrecursion.hoplon.markdown.code_node.call(null,G__98839,G__98840));
})()," lists ",(function (){var G__98841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__98842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98841,G__98842) : tailrecursion.hoplon.markdown.code_node.call(null,G__98841,G__98842));
})()," and ",(function (){var G__98843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list2"], null);
var G__98844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98843,G__98844) : tailrecursion.hoplon.markdown.code_node.call(null,G__98843,G__98844));
})(),", do the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98835,G__98836) : tailrecursion.hoplon.markdown.para_node.call(null,G__98835,G__98836));
})(),(function (){var G__98845 = cljs.core.PersistentArrayMap.EMPTY;
var G__98846 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98847 = cljs.core.PersistentArrayMap.EMPTY;
var G__98848 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98849 = cljs.core.PersistentArrayMap.EMPTY;
var G__98850 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If ",(function (){var G__98851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__98852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98851,G__98852) : tailrecursion.hoplon.markdown.code_node.call(null,G__98851,G__98852));
})()," is the empty list, then the result is just ",(function (){var G__98853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list2"], null);
var G__98854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98853,G__98854) : tailrecursion.hoplon.markdown.code_node.call(null,G__98853,G__98854));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98849,G__98850) : tailrecursion.hoplon.markdown.para_node.call(null,G__98849,G__98850));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__98847,G__98848) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__98847,G__98848));
})(),(function (){var G__98855 = cljs.core.PersistentArrayMap.EMPTY;
var G__98856 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_98857 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98858 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98859 = cljs.core.PersistentArrayMap.EMPTY;
var G__98860 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Otherwise, ",(function (){var G__98861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__98862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98861,G__98862) : tailrecursion.hoplon.markdown.code_node.call(null,G__98861,G__98862));
})()," the ",(function (){var G__98863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__98864 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98863,G__98864) : tailrecursion.hoplon.markdown.code_node.call(null,G__98863,G__98864));
})()," of ",(function (){var G__98865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__98866 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98865,G__98866) : tailrecursion.hoplon.markdown.code_node.call(null,G__98865,G__98866));
})()," and ",(function (){var G__98867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list2"], null);
var G__98868 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98867,G__98868) : tailrecursion.hoplon.markdown.code_node.call(null,G__98867,G__98868));
})(),", and ",(function (){var G__98869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__98870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98869,G__98870) : tailrecursion.hoplon.markdown.code_node.call(null,G__98869,G__98870));
})()," the ",(function (){var G__98871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__98872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98871,G__98872) : tailrecursion.hoplon.markdown.code_node.call(null,G__98871,G__98872));
})()," of ",(function (){var G__98873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list1"], null);
var G__98874 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98873,G__98874) : tailrecursion.hoplon.markdown.code_node.call(null,G__98873,G__98874));
})()," onto the result:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98859,G__98860) : tailrecursion.hoplon.markdown.para_node.call(null,G__98859,G__98860));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98858;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98857;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__98855,G__98856) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__98855,G__98856));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__98845,G__98846) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__98845,G__98846));
})(),(function (){var G__98875 = (function (){var G__98876 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98877 = (function (){var G__98878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98879 = "(";
var G__98880 = (function (){var G__98907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98908 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98907,G__98908) : tailrecursion.hoplon.span.call(null,G__98907,G__98908));
})();
var G__98881 = (function (){var G__98909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98910 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98909,G__98910) : tailrecursion.hoplon.span.call(null,G__98909,G__98910));
})();
var G__98882 = "[";
var G__98883 = (function (){var G__98911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98912 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98911,G__98912) : tailrecursion.hoplon.span.call(null,G__98911,G__98912));
})();
var G__98884 = " ";
var G__98885 = (function (){var G__98913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98914 = "list2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98913,G__98914) : tailrecursion.hoplon.span.call(null,G__98913,G__98914));
})();
var G__98886 = "]\n  (";
var G__98887 = (function (){var G__98915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__98916 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98915,G__98916) : tailrecursion.hoplon.span.call(null,G__98915,G__98916));
})();
var G__98888 = "(";
var G__98889 = (function (){var G__98917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98918 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98917,G__98918) : tailrecursion.hoplon.span.call(null,G__98917,G__98918));
})();
var G__98890 = " ";
var G__98891 = (function (){var G__98919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98920 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98919,G__98920) : tailrecursion.hoplon.span.call(null,G__98919,G__98920));
})();
var G__98892 = ")\n      ";
var G__98893 = (function (){var G__98921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98922 = "list2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98921,G__98922) : tailrecursion.hoplon.span.call(null,G__98921,G__98922));
})();
var G__98894 = "\n      (";
var G__98895 = (function (){var G__98923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98924 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98923,G__98924) : tailrecursion.hoplon.span.call(null,G__98923,G__98924));
})();
var G__98896 = "(";
var G__98897 = (function (){var G__98925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98926 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98925,G__98926) : tailrecursion.hoplon.span.call(null,G__98925,G__98926));
})();
var G__98898 = "(";
var G__98899 = (function (){var G__98927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98928 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98927,G__98928) : tailrecursion.hoplon.span.call(null,G__98927,G__98928));
})();
var G__98900 = (function (){var G__98929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98930 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98929,G__98930) : tailrecursion.hoplon.span.call(null,G__98929,G__98930));
})();
var G__98901 = ") ";
var G__98902 = (function (){var G__98931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98932 = "list2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98931,G__98932) : tailrecursion.hoplon.span.call(null,G__98931,G__98932));
})();
var G__98903 = ") (";
var G__98904 = (function (){var G__98933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98934 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98933,G__98934) : tailrecursion.hoplon.span.call(null,G__98933,G__98934));
})();
var G__98905 = (function (){var G__98935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__98936 = "list1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98935,G__98936) : tailrecursion.hoplon.span.call(null,G__98935,G__98936));
})();
var G__98906 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__98878,G__98879,G__98880,G__98881,G__98882,G__98883,G__98884,G__98885,G__98886,G__98887,G__98888,G__98889,G__98890,G__98891,G__98892,G__98893,G__98894,G__98895,G__98896,G__98897,G__98898,G__98899,G__98900,G__98901,G__98902,G__98903,G__98904,G__98905,G__98906) : tailrecursion.hoplon.pre.call(null,G__98878,G__98879,G__98880,G__98881,G__98882,G__98883,G__98884,G__98885,G__98886,G__98887,G__98888,G__98889,G__98890,G__98891,G__98892,G__98893,G__98894,G__98895,G__98896,G__98897,G__98898,G__98899,G__98900,G__98901,G__98902,G__98903,G__98904,G__98905,G__98906));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98876,G__98877) : tailrecursion.hoplon.div.call(null,G__98876,G__98877));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98875) : tailrecursion.hoplon.div.call(null,G__98875));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98378;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98377;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98376;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98375;
}})()], 0));
var G__97782 = "";
var G__97783 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_98937 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98938 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_98939 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98940 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98941 = cljs.core.PersistentArrayMap.EMPTY;
var G__98942 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__98943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"last-pair"], null);
var G__98944 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__98943,G__98944) : tailrecursion.hoplon.markdown.code_node.call(null,G__98943,G__98944));
})()," that returns the list that contains only the last element of a given (nonempty) list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__98941,G__98942) : tailrecursion.hoplon.markdown.para_node.call(null,G__98941,G__98942));
})(),(function (){var G__98945 = (function (){var G__98946 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98947 = (function (){var G__98948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98949 = "(";
var G__98950 = (function (){var G__98963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__98964 = "last-pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98963,G__98964) : tailrecursion.hoplon.span.call(null,G__98963,G__98964));
})();
var G__98951 = " (";
var G__98952 = (function (){var G__98965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__98966 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98965,G__98966) : tailrecursion.hoplon.span.call(null,G__98965,G__98966));
})();
var G__98953 = (function (){var G__98967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98968 = "23";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98967,G__98968) : tailrecursion.hoplon.span.call(null,G__98967,G__98968));
})();
var G__98954 = " ";
var G__98955 = (function (){var G__98969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98970 = "72";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98969,G__98970) : tailrecursion.hoplon.span.call(null,G__98969,G__98970));
})();
var G__98956 = " ";
var G__98957 = (function (){var G__98971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98972 = "149";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98971,G__98972) : tailrecursion.hoplon.span.call(null,G__98971,G__98972));
})();
var G__98958 = " ";
var G__98959 = (function (){var G__98973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98974 = "34";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98973,G__98974) : tailrecursion.hoplon.span.call(null,G__98973,G__98974));
})();
var G__98960 = "))\n";
var G__98961 = (function (){var G__98975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__98976 = "34";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__98975,G__98976) : tailrecursion.hoplon.span.call(null,G__98975,G__98976));
})();
var G__98962 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__98948,G__98949,G__98950,G__98951,G__98952,G__98953,G__98954,G__98955,G__98956,G__98957,G__98958,G__98959,G__98960,G__98961,G__98962) : tailrecursion.hoplon.pre.call(null,G__98948,G__98949,G__98950,G__98951,G__98952,G__98953,G__98954,G__98955,G__98956,G__98957,G__98958,G__98959,G__98960,G__98961,G__98962));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98946,G__98947) : tailrecursion.hoplon.div.call(null,G__98946,G__98947));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98945) : tailrecursion.hoplon.div.call(null,G__98945));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98940;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98939;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98938;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98937;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_98977 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98978 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_98979 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_98980 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__98981 = (function (){var G__98982 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__98983 = (function (){var G__98984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__98985 = "(";
var G__98986 = (function (){var G__99011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99012 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99011,G__99012) : tailrecursion.hoplon.span.call(null,G__99011,G__99012));
})();
var G__98987 = (function (){var G__99013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99014 = "last-pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99013,G__99014) : tailrecursion.hoplon.span.call(null,G__99013,G__99014));
})();
var G__98988 = " [";
var G__98989 = (function (){var G__99015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99016 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99015,G__99016) : tailrecursion.hoplon.span.call(null,G__99015,G__99016));
})();
var G__98990 = "]\n  (";
var G__98991 = (function (){var G__99017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99018 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99017,G__99018) : tailrecursion.hoplon.span.call(null,G__99017,G__99018));
})();
var G__98992 = "[";
var G__98993 = (function (){var G__99019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99020 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99019,G__99020) : tailrecursion.hoplon.span.call(null,G__99019,G__99020));
})();
var G__98994 = " ";
var G__98995 = (function (){var G__99021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99022 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99021,G__99022) : tailrecursion.hoplon.span.call(null,G__99021,G__99022));
})();
var G__98996 = "]\n    (";
var G__98997 = (function (){var G__99023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99024 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99023,G__99024) : tailrecursion.hoplon.span.call(null,G__99023,G__99024));
})();
var G__98998 = "(";
var G__98999 = (function (){var G__99025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99026 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99025,G__99026) : tailrecursion.hoplon.span.call(null,G__99025,G__99026));
})();
var G__99000 = " (";
var G__99001 = (function (){var G__99027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99028 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99027,G__99028) : tailrecursion.hoplon.span.call(null,G__99027,G__99028));
})();
var G__99002 = (function (){var G__99029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99030 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99029,G__99030) : tailrecursion.hoplon.span.call(null,G__99029,G__99030));
})();
var G__99003 = "))\n        ";
var G__99004 = (function (){var G__99031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99032 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99031,G__99032) : tailrecursion.hoplon.span.call(null,G__99031,G__99032));
})();
var G__99005 = "\n        (";
var G__99006 = (function (){var G__99033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99034 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99033,G__99034) : tailrecursion.hoplon.span.call(null,G__99033,G__99034));
})();
var G__99007 = " (";
var G__99008 = (function (){var G__99035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99036 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99035,G__99036) : tailrecursion.hoplon.span.call(null,G__99035,G__99036));
})();
var G__99009 = (function (){var G__99037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99038 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99037,G__99038) : tailrecursion.hoplon.span.call(null,G__99037,G__99038));
})();
var G__99010 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__98984,G__98985,G__98986,G__98987,G__98988,G__98989,G__98990,G__98991,G__98992,G__98993,G__98994,G__98995,G__98996,G__98997,G__98998,G__98999,G__99000,G__99001,G__99002,G__99003,G__99004,G__99005,G__99006,G__99007,G__99008,G__99009,G__99010) : tailrecursion.hoplon.pre.call(null,G__98984,G__98985,G__98986,G__98987,G__98988,G__98989,G__98990,G__98991,G__98992,G__98993,G__98994,G__98995,G__98996,G__98997,G__98998,G__98999,G__99000,G__99001,G__99002,G__99003,G__99004,G__99005,G__99006,G__99007,G__99008,G__99009,G__99010));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__98982,G__98983) : tailrecursion.hoplon.div.call(null,G__98982,G__98983));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__98981) : tailrecursion.hoplon.div.call(null,G__98981));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98980;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98979;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_98978;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_98977;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_99039 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99040 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99041 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99042 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99043 = cljs.core.PersistentArrayMap.EMPTY;
var G__99044 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__99045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__99046 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99045,G__99046) : tailrecursion.hoplon.markdown.code_node.call(null,G__99045,G__99046));
})()," that takes a list as arguments and returns a list of the same elements in reverse order:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99043,G__99044) : tailrecursion.hoplon.markdown.para_node.call(null,G__99043,G__99044));
})(),(function (){var G__99047 = (function (){var G__99048 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99049 = (function (){var G__99050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99051 = "(";
var G__99052 = (function (){var G__99075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99076 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99075,G__99076) : tailrecursion.hoplon.span.call(null,G__99075,G__99076));
})();
var G__99053 = "(";
var G__99054 = (function (){var G__99077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99078 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99077,G__99078) : tailrecursion.hoplon.span.call(null,G__99077,G__99078));
})();
var G__99055 = (function (){var G__99079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99080 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99079,G__99080) : tailrecursion.hoplon.span.call(null,G__99079,G__99080));
})();
var G__99056 = " ";
var G__99057 = (function (){var G__99081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99082 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99081,G__99082) : tailrecursion.hoplon.span.call(null,G__99081,G__99082));
})();
var G__99058 = " ";
var G__99059 = (function (){var G__99083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99084 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99083,G__99084) : tailrecursion.hoplon.span.call(null,G__99083,G__99084));
})();
var G__99060 = " ";
var G__99061 = (function (){var G__99085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99086 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99085,G__99086) : tailrecursion.hoplon.span.call(null,G__99085,G__99086));
})();
var G__99062 = " ";
var G__99063 = (function (){var G__99087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99088 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99087,G__99088) : tailrecursion.hoplon.span.call(null,G__99087,G__99088));
})();
var G__99064 = "))\n(";
var G__99065 = (function (){var G__99089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99090 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99089,G__99090) : tailrecursion.hoplon.span.call(null,G__99089,G__99090));
})();
var G__99066 = " ";
var G__99067 = (function (){var G__99091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99092 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99091,G__99092) : tailrecursion.hoplon.span.call(null,G__99091,G__99092));
})();
var G__99068 = " ";
var G__99069 = (function (){var G__99093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99094 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99093,G__99094) : tailrecursion.hoplon.span.call(null,G__99093,G__99094));
})();
var G__99070 = " ";
var G__99071 = (function (){var G__99095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99096 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99095,G__99096) : tailrecursion.hoplon.span.call(null,G__99095,G__99096));
})();
var G__99072 = " ";
var G__99073 = (function (){var G__99097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99098 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99097,G__99098) : tailrecursion.hoplon.span.call(null,G__99097,G__99098));
})();
var G__99074 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$25 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$25(G__99050,G__99051,G__99052,G__99053,G__99054,G__99055,G__99056,G__99057,G__99058,G__99059,G__99060,G__99061,G__99062,G__99063,G__99064,G__99065,G__99066,G__99067,G__99068,G__99069,G__99070,G__99071,G__99072,G__99073,G__99074) : tailrecursion.hoplon.pre.call(null,G__99050,G__99051,G__99052,G__99053,G__99054,G__99055,G__99056,G__99057,G__99058,G__99059,G__99060,G__99061,G__99062,G__99063,G__99064,G__99065,G__99066,G__99067,G__99068,G__99069,G__99070,G__99071,G__99072,G__99073,G__99074));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99048,G__99049) : tailrecursion.hoplon.div.call(null,G__99048,G__99049));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99047) : tailrecursion.hoplon.div.call(null,G__99047));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99042;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99041;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99040;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99039;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_99099 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99100 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99101 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99102 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99103 = (function (){var G__99104 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99105 = (function (){var G__99106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99107 = "(";
var G__99108 = (function (){var G__99142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99143 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99142,G__99143) : tailrecursion.hoplon.span.call(null,G__99142,G__99143));
})();
var G__99109 = (function (){var G__99144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99145 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99144,G__99145) : tailrecursion.hoplon.span.call(null,G__99144,G__99145));
})();
var G__99110 = "[";
var G__99111 = (function (){var G__99146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99147 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99146,G__99147) : tailrecursion.hoplon.span.call(null,G__99146,G__99147));
})();
var G__99112 = "]\n  (";
var G__99113 = (function (){var G__99148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99149 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99148,G__99149) : tailrecursion.hoplon.span.call(null,G__99148,G__99149));
})();
var G__99114 = "[";
var G__99115 = (function (){var G__99150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99151 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99150,G__99151) : tailrecursion.hoplon.span.call(null,G__99150,G__99151));
})();
var G__99116 = " ";
var G__99117 = (function (){var G__99152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99153 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99152,G__99153) : tailrecursion.hoplon.span.call(null,G__99152,G__99153));
})();
var G__99118 = "\n         ";
var G__99119 = (function (){var G__99154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99155 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99154,G__99155) : tailrecursion.hoplon.span.call(null,G__99154,G__99155));
})();
var G__99120 = "   ";
var G__99121 = (function (){var G__99156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99157 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99156,G__99157) : tailrecursion.hoplon.span.call(null,G__99156,G__99157));
})();
var G__99122 = "]\n    (";
var G__99123 = (function (){var G__99158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99159 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99158,G__99159) : tailrecursion.hoplon.span.call(null,G__99158,G__99159));
})();
var G__99124 = "(";
var G__99125 = (function (){var G__99160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99161 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99160,G__99161) : tailrecursion.hoplon.span.call(null,G__99160,G__99161));
})();
var G__99126 = " ";
var G__99127 = (function (){var G__99162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99163 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99162,G__99163) : tailrecursion.hoplon.span.call(null,G__99162,G__99163));
})();
var G__99128 = ")\n        ";
var G__99129 = (function (){var G__99164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99165 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99164,G__99165) : tailrecursion.hoplon.span.call(null,G__99164,G__99165));
})();
var G__99130 = "\n        (";
var G__99131 = (function (){var G__99166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99167 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99166,G__99167) : tailrecursion.hoplon.span.call(null,G__99166,G__99167));
})();
var G__99132 = " (";
var G__99133 = (function (){var G__99168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99169 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99168,G__99169) : tailrecursion.hoplon.span.call(null,G__99168,G__99169));
})();
var G__99134 = (function (){var G__99170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99171 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99170,G__99171) : tailrecursion.hoplon.span.call(null,G__99170,G__99171));
})();
var G__99135 = ") (";
var G__99136 = (function (){var G__99172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99173 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99172,G__99173) : tailrecursion.hoplon.span.call(null,G__99172,G__99173));
})();
var G__99137 = (function (){var G__99174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99175 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99174,G__99175) : tailrecursion.hoplon.span.call(null,G__99174,G__99175));
})();
var G__99138 = " (";
var G__99139 = (function (){var G__99176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99177 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99176,G__99177) : tailrecursion.hoplon.span.call(null,G__99176,G__99177));
})();
var G__99140 = (function (){var G__99178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99179 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99178,G__99179) : tailrecursion.hoplon.span.call(null,G__99178,G__99179));
})();
var G__99141 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__99106,G__99107,G__99108,G__99109,G__99110,G__99111,G__99112,G__99113,G__99114,G__99115,G__99116,G__99117,G__99118,G__99119,G__99120,G__99121,G__99122,G__99123,G__99124,G__99125,G__99126,G__99127,G__99128,G__99129,G__99130,G__99131,G__99132,G__99133,G__99134,G__99135,G__99136,G__99137,G__99138,G__99139,G__99140,G__99141) : tailrecursion.hoplon.pre.call(null,G__99106,G__99107,G__99108,G__99109,G__99110,G__99111,G__99112,G__99113,G__99114,G__99115,G__99116,G__99117,G__99118,G__99119,G__99120,G__99121,G__99122,G__99123,G__99124,G__99125,G__99126,G__99127,G__99128,G__99129,G__99130,G__99131,G__99132,G__99133,G__99134,G__99135,G__99136,G__99137,G__99138,G__99139,G__99140,G__99141));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99104,G__99105) : tailrecursion.hoplon.div.call(null,G__99104,G__99105));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99103) : tailrecursion.hoplon.div.call(null,G__99103));
})(),(function (){var G__99180 = cljs.core.PersistentArrayMap.EMPTY;
var G__99181 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure already has a procedure ",(function (){var G__99182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__99183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99182,G__99183) : tailrecursion.hoplon.markdown.code_node.call(null,G__99182,G__99183));
})()," that does exactly that. Clojure has many powerful tools for manipulating sequences. You can check them out at ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"http://clojure.org/sequences",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99180,G__99181) : tailrecursion.hoplon.markdown.para_node.call(null,G__99180,G__99181));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99102;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99101;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99100;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99099;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_99184 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99185 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99186 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99187 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99188 = cljs.core.PersistentArrayMap.EMPTY;
var G__99189 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the change-counting program of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),". It would be nice to be able to easily change the currency used by the program, so that we could compute the number of ways to change a british pound, for example. As the program is written, the knowledge of the currency is distributed partly into the procedure ",(function (){var G__99190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__99191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99190,G__99191) : tailrecursion.hoplon.markdown.code_node.call(null,G__99190,G__99191));
})()," and partly into the procedure ",(function (){var G__99192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__99193 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99192,G__99193) : tailrecursion.hoplon.markdown.code_node.call(null,G__99192,G__99193));
})()," (which knows that there are five kids of U.S. coins). It would be nicer to be able to supply a list of coins to be used for making change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99188,G__99189) : tailrecursion.hoplon.markdown.para_node.call(null,G__99188,G__99189));
})(),(function (){var G__99194 = cljs.core.PersistentArrayMap.EMPTY;
var G__99195 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We want to rewrite the procedure ",(function (){var G__99196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__99197 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99196,G__99197) : tailrecursion.hoplon.markdown.code_node.call(null,G__99196,G__99197));
})()," so that its second argument is a list of the values of the coins to use rather than an integer specifying which coins to use. We could then have lists that defined each kind of currency:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99194,G__99195) : tailrecursion.hoplon.markdown.para_node.call(null,G__99194,G__99195));
})(),(function (){var G__99198 = (function (){var G__99199 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99200 = (function (){var G__99201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99202 = "(";
var G__99203 = (function (){var G__99237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99238 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99237,G__99238) : tailrecursion.hoplon.span.call(null,G__99237,G__99238));
})();
var G__99204 = (function (){var G__99239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99240 = "us-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99239,G__99240) : tailrecursion.hoplon.span.call(null,G__99239,G__99240));
})();
var G__99205 = " (";
var G__99206 = (function (){var G__99241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99242 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99241,G__99242) : tailrecursion.hoplon.span.call(null,G__99241,G__99242));
})();
var G__99207 = (function (){var G__99243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99244 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99243,G__99244) : tailrecursion.hoplon.span.call(null,G__99243,G__99244));
})();
var G__99208 = " ";
var G__99209 = (function (){var G__99245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99246 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99245,G__99246) : tailrecursion.hoplon.span.call(null,G__99245,G__99246));
})();
var G__99210 = " ";
var G__99211 = (function (){var G__99247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99248 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99247,G__99248) : tailrecursion.hoplon.span.call(null,G__99247,G__99248));
})();
var G__99212 = " ";
var G__99213 = (function (){var G__99249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99250 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99249,G__99250) : tailrecursion.hoplon.span.call(null,G__99249,G__99250));
})();
var G__99214 = " ";
var G__99215 = (function (){var G__99251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99252 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99251,G__99252) : tailrecursion.hoplon.span.call(null,G__99251,G__99252));
})();
var G__99216 = "))\n(";
var G__99217 = (function (){var G__99253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99254 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99253,G__99254) : tailrecursion.hoplon.span.call(null,G__99253,G__99254));
})();
var G__99218 = (function (){var G__99255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99256 = "uk-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99255,G__99256) : tailrecursion.hoplon.span.call(null,G__99255,G__99256));
})();
var G__99219 = " (";
var G__99220 = (function (){var G__99257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99258 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99257,G__99258) : tailrecursion.hoplon.span.call(null,G__99257,G__99258));
})();
var G__99221 = (function (){var G__99259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99260 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99259,G__99260) : tailrecursion.hoplon.span.call(null,G__99259,G__99260));
})();
var G__99222 = " ";
var G__99223 = (function (){var G__99261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99262 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99261,G__99262) : tailrecursion.hoplon.span.call(null,G__99261,G__99262));
})();
var G__99224 = " ";
var G__99225 = (function (){var G__99263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99264 = "20";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99263,G__99264) : tailrecursion.hoplon.span.call(null,G__99263,G__99264));
})();
var G__99226 = " ";
var G__99227 = (function (){var G__99265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99266 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99265,G__99266) : tailrecursion.hoplon.span.call(null,G__99265,G__99266));
})();
var G__99228 = " ";
var G__99229 = (function (){var G__99267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99268 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99267,G__99268) : tailrecursion.hoplon.span.call(null,G__99267,G__99268));
})();
var G__99230 = " ";
var G__99231 = (function (){var G__99269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99270 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99269,G__99270) : tailrecursion.hoplon.span.call(null,G__99269,G__99270));
})();
var G__99232 = " ";
var G__99233 = (function (){var G__99271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99272 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99271,G__99272) : tailrecursion.hoplon.span.call(null,G__99271,G__99272));
})();
var G__99234 = " ";
var G__99235 = (function (){var G__99273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99274 = "0.5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99273,G__99274) : tailrecursion.hoplon.span.call(null,G__99273,G__99274));
})();
var G__99236 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__99201,G__99202,G__99203,G__99204,G__99205,G__99206,G__99207,G__99208,G__99209,G__99210,G__99211,G__99212,G__99213,G__99214,G__99215,G__99216,G__99217,G__99218,G__99219,G__99220,G__99221,G__99222,G__99223,G__99224,G__99225,G__99226,G__99227,G__99228,G__99229,G__99230,G__99231,G__99232,G__99233,G__99234,G__99235,G__99236) : tailrecursion.hoplon.pre.call(null,G__99201,G__99202,G__99203,G__99204,G__99205,G__99206,G__99207,G__99208,G__99209,G__99210,G__99211,G__99212,G__99213,G__99214,G__99215,G__99216,G__99217,G__99218,G__99219,G__99220,G__99221,G__99222,G__99223,G__99224,G__99225,G__99226,G__99227,G__99228,G__99229,G__99230,G__99231,G__99232,G__99233,G__99234,G__99235,G__99236));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99199,G__99200) : tailrecursion.hoplon.div.call(null,G__99199,G__99200));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99198) : tailrecursion.hoplon.div.call(null,G__99198));
})(),(function (){var G__99275 = cljs.core.PersistentArrayMap.EMPTY;
var G__99276 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We could then call ",(function (){var G__99277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__99278 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99277,G__99278) : tailrecursion.hoplon.markdown.code_node.call(null,G__99277,G__99278));
})()," as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99275,G__99276) : tailrecursion.hoplon.markdown.para_node.call(null,G__99275,G__99276));
})(),(function (){var G__99279 = (function (){var G__99280 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99281 = (function (){var G__99282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99283 = "(";
var G__99284 = (function (){var G__99292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99293 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99292,G__99293) : tailrecursion.hoplon.span.call(null,G__99292,G__99293));
})();
var G__99285 = " ";
var G__99286 = (function (){var G__99294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99295 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99294,G__99295) : tailrecursion.hoplon.span.call(null,G__99294,G__99295));
})();
var G__99287 = " ";
var G__99288 = (function (){var G__99296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99297 = "us-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99296,G__99297) : tailrecursion.hoplon.span.call(null,G__99296,G__99297));
})();
var G__99289 = ")\n";
var G__99290 = (function (){var G__99298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99299 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99298,G__99299) : tailrecursion.hoplon.span.call(null,G__99298,G__99299));
})();
var G__99291 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__99282,G__99283,G__99284,G__99285,G__99286,G__99287,G__99288,G__99289,G__99290,G__99291) : tailrecursion.hoplon.pre.call(null,G__99282,G__99283,G__99284,G__99285,G__99286,G__99287,G__99288,G__99289,G__99290,G__99291));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99280,G__99281) : tailrecursion.hoplon.div.call(null,G__99280,G__99281));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99279) : tailrecursion.hoplon.div.call(null,G__99279));
})(),(function (){var G__99300 = cljs.core.PersistentArrayMap.EMPTY;
var G__99301 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this will require changing the program ",(function (){var G__99302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__99303 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99302,G__99303) : tailrecursion.hoplon.markdown.code_node.call(null,G__99302,G__99303));
})()," somewhat. It will still have the same form, but it will access its second argument differently, as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99300,G__99301) : tailrecursion.hoplon.markdown.para_node.call(null,G__99300,G__99301));
})(),(function (){var G__99304 = (function (){var G__99305 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99306 = (function (){var G__99307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99308 = "(";
var G__99309 = (function (){var G__99361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99362 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99361,G__99362) : tailrecursion.hoplon.span.call(null,G__99361,G__99362));
})();
var G__99310 = (function (){var G__99363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99364 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99363,G__99364) : tailrecursion.hoplon.span.call(null,G__99363,G__99364));
})();
var G__99311 = " [";
var G__99312 = (function (){var G__99365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99366 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99365,G__99366) : tailrecursion.hoplon.span.call(null,G__99365,G__99366));
})();
var G__99313 = " ";
var G__99314 = (function (){var G__99367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99368 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99367,G__99368) : tailrecursion.hoplon.span.call(null,G__99367,G__99368));
})();
var G__99315 = "]\n  (";
var G__99316 = (function (){var G__99369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99370 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99369,G__99370) : tailrecursion.hoplon.span.call(null,G__99369,G__99370));
})();
var G__99317 = "(";
var G__99318 = (function (){var G__99371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99372 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99371,G__99372) : tailrecursion.hoplon.span.call(null,G__99371,G__99372));
})();
var G__99319 = (function (){var G__99373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99374 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99373,G__99374) : tailrecursion.hoplon.span.call(null,G__99373,G__99374));
})();
var G__99320 = " ";
var G__99321 = (function (){var G__99375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99376 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99375,G__99376) : tailrecursion.hoplon.span.call(null,G__99375,G__99376));
})();
var G__99322 = ") ";
var G__99323 = (function (){var G__99377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99378 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99377,G__99378) : tailrecursion.hoplon.span.call(null,G__99377,G__99378));
})();
var G__99324 = "\n        (";
var G__99325 = (function (){var G__99379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99380 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99379,G__99380) : tailrecursion.hoplon.span.call(null,G__99379,G__99380));
})();
var G__99326 = "(";
var G__99327 = (function (){var G__99381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99382 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99381,G__99382) : tailrecursion.hoplon.span.call(null,G__99381,G__99382));
})();
var G__99328 = (function (){var G__99383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99384 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99383,G__99384) : tailrecursion.hoplon.span.call(null,G__99383,G__99384));
})();
var G__99329 = " ";
var G__99330 = (function (){var G__99385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99386 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99385,G__99386) : tailrecursion.hoplon.span.call(null,G__99385,G__99386));
})();
var G__99331 = ") (";
var G__99332 = (function (){var G__99387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99388 = "no-more?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99387,G__99388) : tailrecursion.hoplon.span.call(null,G__99387,G__99388));
})();
var G__99333 = " ";
var G__99334 = (function (){var G__99389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99390 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99389,G__99390) : tailrecursion.hoplon.span.call(null,G__99389,G__99390));
})();
var G__99335 = ")) ";
var G__99336 = (function (){var G__99391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99392 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99391,G__99392) : tailrecursion.hoplon.span.call(null,G__99391,G__99392));
})();
var G__99337 = "\n        ";
var G__99338 = (function (){var G__99393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99394 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99393,G__99394) : tailrecursion.hoplon.span.call(null,G__99393,G__99394));
})();
var G__99339 = " (";
var G__99340 = (function (){var G__99395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99396 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99395,G__99396) : tailrecursion.hoplon.span.call(null,G__99395,G__99396));
})();
var G__99341 = "(";
var G__99342 = (function (){var G__99397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99398 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99397,G__99398) : tailrecursion.hoplon.span.call(null,G__99397,G__99398));
})();
var G__99343 = " ";
var G__99344 = (function (){var G__99399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99400 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99399,G__99400) : tailrecursion.hoplon.span.call(null,G__99399,G__99400));
})();
var G__99345 = "\n                     (";
var G__99346 = (function (){var G__99401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99402 = "except-first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99401,G__99402) : tailrecursion.hoplon.span.call(null,G__99401,G__99402));
})();
var G__99347 = " ";
var G__99348 = (function (){var G__99403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99404 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99403,G__99404) : tailrecursion.hoplon.span.call(null,G__99403,G__99404));
})();
var G__99349 = "))\n                 (";
var G__99350 = (function (){var G__99405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99406 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99405,G__99406) : tailrecursion.hoplon.span.call(null,G__99405,G__99406));
})();
var G__99351 = " (";
var G__99352 = (function (){var G__99407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99408 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99407,G__99408) : tailrecursion.hoplon.span.call(null,G__99407,G__99408));
})();
var G__99353 = (function (){var G__99409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99410 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99409,G__99410) : tailrecursion.hoplon.span.call(null,G__99409,G__99410));
})();
var G__99354 = " \n                        (";
var G__99355 = (function (){var G__99411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99412 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99411,G__99412) : tailrecursion.hoplon.span.call(null,G__99411,G__99412));
})();
var G__99356 = " ";
var G__99357 = (function (){var G__99413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99414 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99413,G__99414) : tailrecursion.hoplon.span.call(null,G__99413,G__99414));
})();
var G__99358 = "))\n                     ";
var G__99359 = (function (){var G__99415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99416 = "coin-values";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99415,G__99416) : tailrecursion.hoplon.span.call(null,G__99415,G__99416));
})();
var G__99360 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__99307,G__99308,G__99309,G__99310,G__99311,G__99312,G__99313,G__99314,G__99315,G__99316,G__99317,G__99318,G__99319,G__99320,G__99321,G__99322,G__99323,G__99324,G__99325,G__99326,G__99327,G__99328,G__99329,G__99330,G__99331,G__99332,G__99333,G__99334,G__99335,G__99336,G__99337,G__99338,G__99339,G__99340,G__99341,G__99342,G__99343,G__99344,G__99345,G__99346,G__99347,G__99348,G__99349,G__99350,G__99351,G__99352,G__99353,G__99354,G__99355,G__99356,G__99357,G__99358,G__99359,G__99360) : tailrecursion.hoplon.pre.call(null,G__99307,G__99308,G__99309,G__99310,G__99311,G__99312,G__99313,G__99314,G__99315,G__99316,G__99317,G__99318,G__99319,G__99320,G__99321,G__99322,G__99323,G__99324,G__99325,G__99326,G__99327,G__99328,G__99329,G__99330,G__99331,G__99332,G__99333,G__99334,G__99335,G__99336,G__99337,G__99338,G__99339,G__99340,G__99341,G__99342,G__99343,G__99344,G__99345,G__99346,G__99347,G__99348,G__99349,G__99350,G__99351,G__99352,G__99353,G__99354,G__99355,G__99356,G__99357,G__99358,G__99359,G__99360));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99305,G__99306) : tailrecursion.hoplon.div.call(null,G__99305,G__99306));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99304) : tailrecursion.hoplon.div.call(null,G__99304));
})(),(function (){var G__99417 = cljs.core.PersistentArrayMap.EMPTY;
var G__99418 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define the procedures ",(function (){var G__99419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__99420 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99419,G__99420) : tailrecursion.hoplon.markdown.code_node.call(null,G__99419,G__99420));
})(),", ",(function (){var G__99421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"except-first-denomination"], null);
var G__99422 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99421,G__99422) : tailrecursion.hoplon.markdown.code_node.call(null,G__99421,G__99422));
})(),", and ",(function (){var G__99423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"no-more?"], null);
var G__99424 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99423,G__99424) : tailrecursion.hoplon.markdown.code_node.call(null,G__99423,G__99424));
})()," in terms of primitive operations on list structures. Does the order of the list ",(function (){var G__99425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"coin-values"], null);
var G__99426 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99425,G__99426) : tailrecursion.hoplon.markdown.code_node.call(null,G__99425,G__99426));
})()," affect the answer produced by ",(function (){var G__99427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cc"], null);
var G__99428 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99427,G__99428) : tailrecursion.hoplon.markdown.code_node.call(null,G__99427,G__99428));
})(),"? Why or why not?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99417,G__99418) : tailrecursion.hoplon.markdown.para_node.call(null,G__99417,G__99418));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99187;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99186;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99185;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99184;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_99429 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99430 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99431 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99432 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99433 = (function (){var G__99434 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99435 = (function (){var G__99436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99437 = "(";
var G__99438 = (function (){var G__99463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99464 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99463,G__99464) : tailrecursion.hoplon.span.call(null,G__99463,G__99464));
})();
var G__99439 = (function (){var G__99465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99466 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99465,G__99466) : tailrecursion.hoplon.span.call(null,G__99465,G__99466));
})();
var G__99440 = " [";
var G__99441 = (function (){var G__99467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99468 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99467,G__99468) : tailrecursion.hoplon.span.call(null,G__99467,G__99468));
})();
var G__99442 = "]\n  (";
var G__99443 = (function (){var G__99469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99470 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99469,G__99470) : tailrecursion.hoplon.span.call(null,G__99469,G__99470));
})();
var G__99444 = (function (){var G__99471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99472 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99471,G__99472) : tailrecursion.hoplon.span.call(null,G__99471,G__99472));
})();
var G__99445 = "))\n(";
var G__99446 = (function (){var G__99473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99474 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99473,G__99474) : tailrecursion.hoplon.span.call(null,G__99473,G__99474));
})();
var G__99447 = (function (){var G__99475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99476 = "except-first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99475,G__99476) : tailrecursion.hoplon.span.call(null,G__99475,G__99476));
})();
var G__99448 = " [";
var G__99449 = (function (){var G__99477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99478 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99477,G__99478) : tailrecursion.hoplon.span.call(null,G__99477,G__99478));
})();
var G__99450 = "]\n  (";
var G__99451 = (function (){var G__99479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99480 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99479,G__99480) : tailrecursion.hoplon.span.call(null,G__99479,G__99480));
})();
var G__99452 = (function (){var G__99481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99482 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99481,G__99482) : tailrecursion.hoplon.span.call(null,G__99481,G__99482));
})();
var G__99453 = "))\n(";
var G__99454 = (function (){var G__99483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99484 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99483,G__99484) : tailrecursion.hoplon.span.call(null,G__99483,G__99484));
})();
var G__99455 = (function (){var G__99485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99486 = "no-more?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99485,G__99486) : tailrecursion.hoplon.span.call(null,G__99485,G__99486));
})();
var G__99456 = " [";
var G__99457 = (function (){var G__99487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99488 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99487,G__99488) : tailrecursion.hoplon.span.call(null,G__99487,G__99488));
})();
var G__99458 = "]\n  (";
var G__99459 = (function (){var G__99489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99490 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99489,G__99490) : tailrecursion.hoplon.span.call(null,G__99489,G__99490));
})();
var G__99460 = " ";
var G__99461 = (function (){var G__99491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99492 = "coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99491,G__99492) : tailrecursion.hoplon.span.call(null,G__99491,G__99492));
})();
var G__99462 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__99436,G__99437,G__99438,G__99439,G__99440,G__99441,G__99442,G__99443,G__99444,G__99445,G__99446,G__99447,G__99448,G__99449,G__99450,G__99451,G__99452,G__99453,G__99454,G__99455,G__99456,G__99457,G__99458,G__99459,G__99460,G__99461,G__99462) : tailrecursion.hoplon.pre.call(null,G__99436,G__99437,G__99438,G__99439,G__99440,G__99441,G__99442,G__99443,G__99444,G__99445,G__99446,G__99447,G__99448,G__99449,G__99450,G__99451,G__99452,G__99453,G__99454,G__99455,G__99456,G__99457,G__99458,G__99459,G__99460,G__99461,G__99462));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99434,G__99435) : tailrecursion.hoplon.div.call(null,G__99434,G__99435));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99433) : tailrecursion.hoplon.div.call(null,G__99433));
})(),(function (){var G__99493 = cljs.core.PersistentArrayMap.EMPTY;
var G__99494 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, we could have done it this way,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99493,G__99494) : tailrecursion.hoplon.markdown.para_node.call(null,G__99493,G__99494));
})(),(function (){var G__99495 = (function (){var G__99496 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99497 = (function (){var G__99498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99499 = "(";
var G__99500 = (function (){var G__99515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99516 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99515,G__99516) : tailrecursion.hoplon.span.call(null,G__99515,G__99516));
})();
var G__99501 = (function (){var G__99517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99518 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99517,G__99518) : tailrecursion.hoplon.span.call(null,G__99517,G__99518));
})();
var G__99502 = " ";
var G__99503 = (function (){var G__99519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99520 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99519,G__99520) : tailrecursion.hoplon.span.call(null,G__99519,G__99520));
})();
var G__99504 = ")\n(";
var G__99505 = (function (){var G__99521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99522 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99521,G__99522) : tailrecursion.hoplon.span.call(null,G__99521,G__99522));
})();
var G__99506 = (function (){var G__99523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99524 = "except-first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99523,G__99524) : tailrecursion.hoplon.span.call(null,G__99523,G__99524));
})();
var G__99507 = " ";
var G__99508 = (function (){var G__99525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99526 = "rest";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99525,G__99526) : tailrecursion.hoplon.span.call(null,G__99525,G__99526));
})();
var G__99509 = ")\n(";
var G__99510 = (function (){var G__99527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99528 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99527,G__99528) : tailrecursion.hoplon.span.call(null,G__99527,G__99528));
})();
var G__99511 = (function (){var G__99529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99530 = "no-more";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99529,G__99530) : tailrecursion.hoplon.span.call(null,G__99529,G__99530));
})();
var G__99512 = " ";
var G__99513 = (function (){var G__99531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99532 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99531,G__99532) : tailrecursion.hoplon.span.call(null,G__99531,G__99532));
})();
var G__99514 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__99498,G__99499,G__99500,G__99501,G__99502,G__99503,G__99504,G__99505,G__99506,G__99507,G__99508,G__99509,G__99510,G__99511,G__99512,G__99513,G__99514) : tailrecursion.hoplon.pre.call(null,G__99498,G__99499,G__99500,G__99501,G__99502,G__99503,G__99504,G__99505,G__99506,G__99507,G__99508,G__99509,G__99510,G__99511,G__99512,G__99513,G__99514));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99496,G__99497) : tailrecursion.hoplon.div.call(null,G__99496,G__99497));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99495) : tailrecursion.hoplon.div.call(null,G__99495));
})(),(function (){var G__99533 = cljs.core.PersistentArrayMap.EMPTY;
var G__99534 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which requires fewer steps to evaluate."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99533,G__99534) : tailrecursion.hoplon.markdown.para_node.call(null,G__99533,G__99534));
})(),(function (){var G__99535 = cljs.core.PersistentArrayMap.EMPTY;
var G__99536 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as the order, the procedure would return the same answer, but it would require a lot more steps and more memory (which might cause a stack overflow if the ",(function (){var G__99537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"amount"], null);
var G__99538 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99537,G__99538) : tailrecursion.hoplon.markdown.code_node.call(null,G__99537,G__99538));
})()," is high enough. If you don",(function (){var G__99539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__99540 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__99539,G__99540) : tailrecursion.hoplon.markdown.simple_node.call(null,G__99539,G__99540));
})(),"t understand what I",(function (){var G__99541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__99542 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__99541,G__99542) : tailrecursion.hoplon.markdown.simple_node.call(null,G__99541,G__99542));
})(),"m saying, draw a diagram of what would happen if the order of the coins were reversed (pennies up to half-dollars in USD)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99535,G__99536) : tailrecursion.hoplon.markdown.para_node.call(null,G__99535,G__99536));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99432;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99431;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99430;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99429;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_99543 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99544 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99545 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99546 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99547 = cljs.core.PersistentArrayMap.EMPTY;
var G__99548 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedures ",(function (){var G__99549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"+"], null);
var G__99550 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99549,G__99550) : tailrecursion.hoplon.markdown.code_node.call(null,G__99549,G__99550));
})(),", ",(function (){var G__99551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"*"], null);
var G__99552 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99551,G__99552) : tailrecursion.hoplon.markdown.code_node.call(null,G__99551,G__99552));
})(),", and ",(function (){var G__99553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__99554 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99553,G__99554) : tailrecursion.hoplon.markdown.code_node.call(null,G__99553,G__99554));
})()," take arbitrary numbers of arguments. One way to define such procedures is to use ",(function (){var G__99555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"defn"], null);
var G__99556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99555,G__99556) : tailrecursion.hoplon.markdown.code_node.call(null,G__99555,G__99556));
})()," with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dotted-tail notation"], null)], 0)),". In a procedure definition in Scheme, a parameter list that has a dot before the last parameter name indicates that, when the procedure is called, the initial parameters (if any) will have as values the initial arguments, as usual, but the final parameter",(function (){var G__99557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__99558 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__99557,G__99558) : tailrecursion.hoplon.markdown.simple_node.call(null,G__99557,G__99558));
})(),"s value will be a list of any remaining arguments. Clojure has a similar construct, but instead of a dot, we use an ampersand. For instance, given the definition"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99547,G__99548) : tailrecursion.hoplon.markdown.para_node.call(null,G__99547,G__99548));
})(),(function (){var G__99559 = (function (){var G__99560 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99561 = (function (){var G__99562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99563 = "(";
var G__99564 = (function (){var G__99577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99578 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99577,G__99578) : tailrecursion.hoplon.span.call(null,G__99577,G__99578));
})();
var G__99565 = (function (){var G__99579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99580 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99579,G__99580) : tailrecursion.hoplon.span.call(null,G__99579,G__99580));
})();
var G__99566 = " [";
var G__99567 = (function (){var G__99581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99582 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99581,G__99582) : tailrecursion.hoplon.span.call(null,G__99581,G__99582));
})();
var G__99568 = " ";
var G__99569 = (function (){var G__99583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99584 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99583,G__99584) : tailrecursion.hoplon.span.call(null,G__99583,G__99584));
})();
var G__99570 = " ";
var G__99571 = (function (){var G__99585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99586 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99585,G__99586) : tailrecursion.hoplon.span.call(null,G__99585,G__99586));
})();
var G__99572 = " ";
var G__99573 = (function (){var G__99587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99588 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99587,G__99588) : tailrecursion.hoplon.span.call(null,G__99587,G__99588));
})();
var G__99574 = "] ";
var G__99575 = (function (){var G__99589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99590 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99589,G__99590) : tailrecursion.hoplon.span.call(null,G__99589,G__99590));
})();
var G__99576 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__99562,G__99563,G__99564,G__99565,G__99566,G__99567,G__99568,G__99569,G__99570,G__99571,G__99572,G__99573,G__99574,G__99575,G__99576) : tailrecursion.hoplon.pre.call(null,G__99562,G__99563,G__99564,G__99565,G__99566,G__99567,G__99568,G__99569,G__99570,G__99571,G__99572,G__99573,G__99574,G__99575,G__99576));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99560,G__99561) : tailrecursion.hoplon.div.call(null,G__99560,G__99561));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99559) : tailrecursion.hoplon.div.call(null,G__99559));
})(),(function (){var G__99591 = cljs.core.PersistentArrayMap.EMPTY;
var G__99592 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure ",(function (){var G__99593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"f"], null);
var G__99594 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99593,G__99594) : tailrecursion.hoplon.markdown.code_node.call(null,G__99593,G__99594));
})()," can be called with two or more arguments. If we evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99591,G__99592) : tailrecursion.hoplon.markdown.para_node.call(null,G__99591,G__99592));
})(),(function (){var G__99595 = (function (){var G__99596 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99597 = (function (){var G__99598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99599 = "(";
var G__99600 = (function (){var G__99614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99615 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99614,G__99615) : tailrecursion.hoplon.span.call(null,G__99614,G__99615));
})();
var G__99601 = " ";
var G__99602 = (function (){var G__99616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99617 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99616,G__99617) : tailrecursion.hoplon.span.call(null,G__99616,G__99617));
})();
var G__99603 = " ";
var G__99604 = (function (){var G__99618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99619 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99618,G__99619) : tailrecursion.hoplon.span.call(null,G__99618,G__99619));
})();
var G__99605 = " ";
var G__99606 = (function (){var G__99620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99621 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99620,G__99621) : tailrecursion.hoplon.span.call(null,G__99620,G__99621));
})();
var G__99607 = " ";
var G__99608 = (function (){var G__99622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99623 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99622,G__99623) : tailrecursion.hoplon.span.call(null,G__99622,G__99623));
})();
var G__99609 = " ";
var G__99610 = (function (){var G__99624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99625 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99624,G__99625) : tailrecursion.hoplon.span.call(null,G__99624,G__99625));
})();
var G__99611 = " ";
var G__99612 = (function (){var G__99626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99627 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99626,G__99627) : tailrecursion.hoplon.span.call(null,G__99626,G__99627));
})();
var G__99613 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__99598,G__99599,G__99600,G__99601,G__99602,G__99603,G__99604,G__99605,G__99606,G__99607,G__99608,G__99609,G__99610,G__99611,G__99612,G__99613) : tailrecursion.hoplon.pre.call(null,G__99598,G__99599,G__99600,G__99601,G__99602,G__99603,G__99604,G__99605,G__99606,G__99607,G__99608,G__99609,G__99610,G__99611,G__99612,G__99613));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99596,G__99597) : tailrecursion.hoplon.div.call(null,G__99596,G__99597));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99595) : tailrecursion.hoplon.div.call(null,G__99595));
})(),(function (){var G__99628 = cljs.core.PersistentArrayMap.EMPTY;
var G__99629 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["then in the body of ",(function (){var G__99630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"f"], null);
var G__99631 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99630,G__99631) : tailrecursion.hoplon.markdown.code_node.call(null,G__99630,G__99631));
})(),", ",(function (){var G__99632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__99633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99632,G__99633) : tailrecursion.hoplon.markdown.code_node.call(null,G__99632,G__99633));
})()," will be 1, ",(function (){var G__99634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__99635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99634,G__99635) : tailrecursion.hoplon.markdown.code_node.call(null,G__99634,G__99635));
})()," will be 2, and ",(function (){var G__99636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"z"], null);
var G__99637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99636,G__99637) : tailrecursion.hoplon.markdown.code_node.call(null,G__99636,G__99637));
})()," will be the list ",(function (){var G__99638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(3 4 5 6)"], null);
var G__99639 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99638,G__99639) : tailrecursion.hoplon.markdown.code_node.call(null,G__99638,G__99639));
})(),". Given the definition"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99628,G__99629) : tailrecursion.hoplon.markdown.para_node.call(null,G__99628,G__99629));
})(),(function (){var G__99640 = (function (){var G__99641 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99642 = (function (){var G__99643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99644 = "(";
var G__99645 = (function (){var G__99654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99655 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99654,G__99655) : tailrecursion.hoplon.span.call(null,G__99654,G__99655));
})();
var G__99646 = (function (){var G__99656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99657 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99656,G__99657) : tailrecursion.hoplon.span.call(null,G__99656,G__99657));
})();
var G__99647 = " [";
var G__99648 = (function (){var G__99658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99659 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99658,G__99659) : tailrecursion.hoplon.span.call(null,G__99658,G__99659));
})();
var G__99649 = " ";
var G__99650 = (function (){var G__99660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99661 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99660,G__99661) : tailrecursion.hoplon.span.call(null,G__99660,G__99661));
})();
var G__99651 = "] ";
var G__99652 = (function (){var G__99662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99663 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99662,G__99663) : tailrecursion.hoplon.span.call(null,G__99662,G__99663));
})();
var G__99653 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__99643,G__99644,G__99645,G__99646,G__99647,G__99648,G__99649,G__99650,G__99651,G__99652,G__99653) : tailrecursion.hoplon.pre.call(null,G__99643,G__99644,G__99645,G__99646,G__99647,G__99648,G__99649,G__99650,G__99651,G__99652,G__99653));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99641,G__99642) : tailrecursion.hoplon.div.call(null,G__99641,G__99642));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99640) : tailrecursion.hoplon.div.call(null,G__99640));
})(),(function (){var G__99664 = cljs.core.PersistentArrayMap.EMPTY;
var G__99665 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure ",(function (){var G__99666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"g"], null);
var G__99667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99666,G__99667) : tailrecursion.hoplon.markdown.code_node.call(null,G__99666,G__99667));
})()," can be called with zero or more arguments. If we evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99664,G__99665) : tailrecursion.hoplon.markdown.para_node.call(null,G__99664,G__99665));
})(),(function (){var G__99668 = (function (){var G__99669 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99670 = (function (){var G__99671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99672 = "(";
var G__99673 = (function (){var G__99687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99688 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99687,G__99688) : tailrecursion.hoplon.span.call(null,G__99687,G__99688));
})();
var G__99674 = " ";
var G__99675 = (function (){var G__99689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99690 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99689,G__99690) : tailrecursion.hoplon.span.call(null,G__99689,G__99690));
})();
var G__99676 = " ";
var G__99677 = (function (){var G__99691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99692 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99691,G__99692) : tailrecursion.hoplon.span.call(null,G__99691,G__99692));
})();
var G__99678 = " ";
var G__99679 = (function (){var G__99693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99694 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99693,G__99694) : tailrecursion.hoplon.span.call(null,G__99693,G__99694));
})();
var G__99680 = " ";
var G__99681 = (function (){var G__99695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99696 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99695,G__99696) : tailrecursion.hoplon.span.call(null,G__99695,G__99696));
})();
var G__99682 = " ";
var G__99683 = (function (){var G__99697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99698 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99697,G__99698) : tailrecursion.hoplon.span.call(null,G__99697,G__99698));
})();
var G__99684 = " ";
var G__99685 = (function (){var G__99699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99700 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99699,G__99700) : tailrecursion.hoplon.span.call(null,G__99699,G__99700));
})();
var G__99686 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__99671,G__99672,G__99673,G__99674,G__99675,G__99676,G__99677,G__99678,G__99679,G__99680,G__99681,G__99682,G__99683,G__99684,G__99685,G__99686) : tailrecursion.hoplon.pre.call(null,G__99671,G__99672,G__99673,G__99674,G__99675,G__99676,G__99677,G__99678,G__99679,G__99680,G__99681,G__99682,G__99683,G__99684,G__99685,G__99686));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99669,G__99670) : tailrecursion.hoplon.div.call(null,G__99669,G__99670));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99668) : tailrecursion.hoplon.div.call(null,G__99668));
})(),(function (){var G__99701 = cljs.core.PersistentArrayMap.EMPTY;
var G__99702 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["then in the body of ",(function (){var G__99703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"g"], null);
var G__99704 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99703,G__99704) : tailrecursion.hoplon.markdown.code_node.call(null,G__99703,G__99704));
})(),", ",(function (){var G__99705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"w"], null);
var G__99706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99705,G__99706) : tailrecursion.hoplon.markdown.code_node.call(null,G__99705,G__99706));
})()," will be the list ",(function (){var G__99707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4 5 6)"], null);
var G__99708 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99707,G__99708) : tailrecursion.hoplon.markdown.code_node.call(null,G__99707,G__99708));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99701,G__99702) : tailrecursion.hoplon.markdown.para_node.call(null,G__99701,G__99702));
})(),(function (){var G__99709 = cljs.core.PersistentArrayMap.EMPTY;
var G__99710 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use this notation to write a procedure ",(function (){var G__99711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"same-parity"], null);
var G__99712 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__99711,G__99712) : tailrecursion.hoplon.markdown.code_node.call(null,G__99711,G__99712));
})()," that takes one or more integers and returns a list of all the arguments that have the same even-odd parity as the first argument. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99709,G__99710) : tailrecursion.hoplon.markdown.para_node.call(null,G__99709,G__99710));
})(),(function (){var G__99713 = cljs.core.PersistentArrayMap.EMPTY;
var G__99714 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["```clj (same-parity 1 2 3 4 5 6 7) (1 3 5 7)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99713,G__99714) : tailrecursion.hoplon.markdown.para_node.call(null,G__99713,G__99714));
})(),(function (){var G__99715 = cljs.core.PersistentArrayMap.EMPTY;
var G__99716 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(same-parity 2 3 4 5 6 7) (2 4 6)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99715,G__99716) : tailrecursion.hoplon.markdown.para_node.call(null,G__99715,G__99716));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99546;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99545;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99544;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99543;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_99717 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99718 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99719 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99720 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99721 = (function (){var G__99722 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99723 = (function (){var G__99724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99725 = "(";
var G__99726 = (function (){var G__99810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99811 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99810,G__99811) : tailrecursion.hoplon.span.call(null,G__99810,G__99811));
})();
var G__99727 = (function (){var G__99812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99813 = "same-parity*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99812,G__99813) : tailrecursion.hoplon.span.call(null,G__99812,G__99813));
})();
var G__99728 = " [";
var G__99729 = (function (){var G__99814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99815 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99814,G__99815) : tailrecursion.hoplon.span.call(null,G__99814,G__99815));
})();
var G__99730 = " ";
var G__99731 = (function (){var G__99816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99817 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99816,G__99817) : tailrecursion.hoplon.span.call(null,G__99816,G__99817));
})();
var G__99732 = "]\n  (";
var G__99733 = (function (){var G__99818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99819 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99818,G__99819) : tailrecursion.hoplon.span.call(null,G__99818,G__99819));
})();
var G__99734 = "[";
var G__99735 = (function (){var G__99820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99821 = "parity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99820,G__99821) : tailrecursion.hoplon.span.call(null,G__99820,G__99821));
})();
var G__99736 = " (";
var G__99737 = (function (){var G__99822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99823 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99822,G__99823) : tailrecursion.hoplon.span.call(null,G__99822,G__99823));
})();
var G__99738 = " ";
var G__99739 = (function (){var G__99824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99825 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99824,G__99825) : tailrecursion.hoplon.span.call(null,G__99824,G__99825));
})();
var G__99740 = " ";
var G__99741 = (function (){var G__99826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99827 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99826,G__99827) : tailrecursion.hoplon.span.call(null,G__99826,G__99827));
})();
var G__99742 = ")]\n    (";
var G__99743 = (function (){var G__99828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99829 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99828,G__99829) : tailrecursion.hoplon.span.call(null,G__99828,G__99829));
})();
var G__99744 = "[";
var G__99745 = (function (){var G__99830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99831 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99830,G__99831) : tailrecursion.hoplon.span.call(null,G__99830,G__99831));
})();
var G__99746 = " ";
var G__99747 = (function (){var G__99832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99833 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99832,G__99833) : tailrecursion.hoplon.span.call(null,G__99832,G__99833));
})();
var G__99748 = "\n           ";
var G__99749 = (function (){var G__99834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99835 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99834,G__99835) : tailrecursion.hoplon.span.call(null,G__99834,G__99835));
})();
var G__99750 = "   (";
var G__99751 = (function (){var G__99836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99837 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99836,G__99837) : tailrecursion.hoplon.span.call(null,G__99836,G__99837));
})();
var G__99752 = (function (){var G__99838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99839 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99838,G__99839) : tailrecursion.hoplon.span.call(null,G__99838,G__99839));
})();
var G__99753 = ")]\n      (";
var G__99754 = (function (){var G__99840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99841 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99840,G__99841) : tailrecursion.hoplon.span.call(null,G__99840,G__99841));
})();
var G__99755 = "(";
var G__99756 = (function (){var G__99842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99843 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99842,G__99843) : tailrecursion.hoplon.span.call(null,G__99842,G__99843));
})();
var G__99757 = " ";
var G__99758 = (function (){var G__99844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99845 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99844,G__99845) : tailrecursion.hoplon.span.call(null,G__99844,G__99845));
})();
var G__99759 = ")\n            ";
var G__99760 = (function (){var G__99846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99847 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99846,G__99847) : tailrecursion.hoplon.span.call(null,G__99846,G__99847));
})();
var G__99761 = "\n            (";
var G__99762 = (function (){var G__99848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99849 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99848,G__99849) : tailrecursion.hoplon.span.call(null,G__99848,G__99849));
})();
var G__99763 = "(";
var G__99764 = (function (){var G__99850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99851 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99850,G__99851) : tailrecursion.hoplon.span.call(null,G__99850,G__99851));
})();
var G__99765 = " (";
var G__99766 = (function (){var G__99852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99853 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99852,G__99853) : tailrecursion.hoplon.span.call(null,G__99852,G__99853));
})();
var G__99767 = (function (){var G__99854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99855 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99854,G__99855) : tailrecursion.hoplon.span.call(null,G__99854,G__99855));
})();
var G__99768 = ") ";
var G__99769 = (function (){var G__99856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99857 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99856,G__99857) : tailrecursion.hoplon.span.call(null,G__99856,G__99857));
})();
var G__99770 = ") ";
var G__99771 = (function (){var G__99858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99859 = "parity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99858,G__99859) : tailrecursion.hoplon.span.call(null,G__99858,G__99859));
})();
var G__99772 = ")\n            (";
var G__99773 = (function (){var G__99860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99861 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99860,G__99861) : tailrecursion.hoplon.span.call(null,G__99860,G__99861));
})();
var G__99774 = " (";
var G__99775 = (function (){var G__99862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99863 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99862,G__99863) : tailrecursion.hoplon.span.call(null,G__99862,G__99863));
})();
var G__99776 = (function (){var G__99864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99865 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99864,G__99865) : tailrecursion.hoplon.span.call(null,G__99864,G__99865));
})();
var G__99777 = ")\n                   (";
var G__99778 = (function (){var G__99866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99867 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99866,G__99867) : tailrecursion.hoplon.span.call(null,G__99866,G__99867));
})();
var G__99779 = (function (){var G__99868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99869 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99868,G__99869) : tailrecursion.hoplon.span.call(null,G__99868,G__99869));
})();
var G__99780 = " (";
var G__99781 = (function (){var G__99870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99871 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99870,G__99871) : tailrecursion.hoplon.span.call(null,G__99870,G__99871));
})();
var G__99782 = (function (){var G__99872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99873 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99872,G__99873) : tailrecursion.hoplon.span.call(null,G__99872,G__99873));
})();
var G__99783 = ")))\n            ";
var G__99784 = (function (){var G__99874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99875 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99874,G__99875) : tailrecursion.hoplon.span.call(null,G__99874,G__99875));
})();
var G__99785 = " (";
var G__99786 = (function (){var G__99876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99877 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99876,G__99877) : tailrecursion.hoplon.span.call(null,G__99876,G__99877));
})();
var G__99787 = " (";
var G__99788 = (function (){var G__99878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99879 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99878,G__99879) : tailrecursion.hoplon.span.call(null,G__99878,G__99879));
})();
var G__99789 = (function (){var G__99880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99881 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99880,G__99881) : tailrecursion.hoplon.span.call(null,G__99880,G__99881));
})();
var G__99790 = ") ";
var G__99791 = (function (){var G__99882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99883 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99882,G__99883) : tailrecursion.hoplon.span.call(null,G__99882,G__99883));
})();
var G__99792 = ")))))\n(";
var G__99793 = (function (){var G__99884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99885 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99884,G__99885) : tailrecursion.hoplon.span.call(null,G__99884,G__99885));
})();
var G__99794 = (function (){var G__99886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99887 = "same-parity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99886,G__99887) : tailrecursion.hoplon.span.call(null,G__99886,G__99887));
})();
var G__99795 = " [";
var G__99796 = (function (){var G__99888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99889 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99888,G__99889) : tailrecursion.hoplon.span.call(null,G__99888,G__99889));
})();
var G__99797 = " ";
var G__99798 = (function (){var G__99890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__99891 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99890,G__99891) : tailrecursion.hoplon.span.call(null,G__99890,G__99891));
})();
var G__99799 = " ";
var G__99800 = (function (){var G__99892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99893 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99892,G__99893) : tailrecursion.hoplon.span.call(null,G__99892,G__99893));
})();
var G__99801 = "]\n  (";
var G__99802 = (function (){var G__99894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99895 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99894,G__99895) : tailrecursion.hoplon.span.call(null,G__99894,G__99895));
})();
var G__99803 = "(";
var G__99804 = (function (){var G__99896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99897 = "same-parity*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99896,G__99897) : tailrecursion.hoplon.span.call(null,G__99896,G__99897));
})();
var G__99805 = " (";
var G__99806 = (function (){var G__99898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99899 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99898,G__99899) : tailrecursion.hoplon.span.call(null,G__99898,G__99899));
})();
var G__99807 = " ";
var G__99808 = (function (){var G__99900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99901 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99900,G__99901) : tailrecursion.hoplon.span.call(null,G__99900,G__99901));
})();
var G__99809 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86(G__99724,G__99725,G__99726,G__99727,G__99728,G__99729,G__99730,G__99731,G__99732,G__99733,G__99734,G__99735,G__99736,G__99737,G__99738,G__99739,G__99740,G__99741,G__99742,G__99743,G__99744,G__99745,G__99746,G__99747,G__99748,G__99749,G__99750,G__99751,G__99752,G__99753,G__99754,G__99755,G__99756,G__99757,G__99758,G__99759,G__99760,G__99761,G__99762,G__99763,G__99764,G__99765,G__99766,G__99767,G__99768,G__99769,G__99770,G__99771,G__99772,G__99773,G__99774,G__99775,G__99776,G__99777,G__99778,G__99779,G__99780,G__99781,G__99782,G__99783,G__99784,G__99785,G__99786,G__99787,G__99788,G__99789,G__99790,G__99791,G__99792,G__99793,G__99794,G__99795,G__99796,G__99797,G__99798,G__99799,G__99800,G__99801,G__99802,G__99803,G__99804,G__99805,G__99806,G__99807,G__99808,G__99809) : tailrecursion.hoplon.pre.call(null,G__99724,G__99725,G__99726,G__99727,G__99728,G__99729,G__99730,G__99731,G__99732,G__99733,G__99734,G__99735,G__99736,G__99737,G__99738,G__99739,G__99740,G__99741,G__99742,G__99743,G__99744,G__99745,G__99746,G__99747,G__99748,G__99749,G__99750,G__99751,G__99752,G__99753,G__99754,G__99755,G__99756,G__99757,G__99758,G__99759,G__99760,G__99761,G__99762,G__99763,G__99764,G__99765,G__99766,G__99767,G__99768,G__99769,G__99770,G__99771,G__99772,G__99773,G__99774,G__99775,G__99776,G__99777,G__99778,G__99779,G__99780,G__99781,G__99782,G__99783,G__99784,G__99785,G__99786,G__99787,G__99788,G__99789,G__99790,G__99791,G__99792,G__99793,G__99794,G__99795,G__99796,G__99797,G__99798,G__99799,G__99800,G__99801,G__99802,G__99803,G__99804,G__99805,G__99806,G__99807,G__99808,G__99809));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99722,G__99723) : tailrecursion.hoplon.div.call(null,G__99722,G__99723));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99721) : tailrecursion.hoplon.div.call(null,G__99721));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99720;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99719;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99718;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99717;
}})()], 0))], 0))], 0));
var G__97784 = "";
var G__97785 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Mapping Over Lists"], null),(function (){var _STAR_references_STAR_99902 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99903 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_99904 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_99905 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99906 = cljs.core.PersistentArrayMap.EMPTY;
var G__99907 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One extremely useful operation is to apply some transformation to each element in a list and generate the list of results. For instance, the following procedure scales each number in a list by a given factor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__99906,G__99907) : tailrecursion.hoplon.markdown.para_node.call(null,G__99906,G__99907));
})(),(function (){var G__99908 = (function (){var G__99909 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__99910 = (function (){var G__99911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__99912 = "(";
var G__99913 = (function (){var G__99969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99970 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99969,G__99970) : tailrecursion.hoplon.span.call(null,G__99969,G__99970));
})();
var G__99914 = (function (){var G__99971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99972 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99971,G__99972) : tailrecursion.hoplon.span.call(null,G__99971,G__99972));
})();
var G__99915 = " [";
var G__99916 = (function (){var G__99973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99974 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99973,G__99974) : tailrecursion.hoplon.span.call(null,G__99973,G__99974));
})();
var G__99917 = " ";
var G__99918 = (function (){var G__99975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99976 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99975,G__99976) : tailrecursion.hoplon.span.call(null,G__99975,G__99976));
})();
var G__99919 = "]\n  (";
var G__99920 = (function (){var G__99977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__99978 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99977,G__99978) : tailrecursion.hoplon.span.call(null,G__99977,G__99978));
})();
var G__99921 = "(";
var G__99922 = (function (){var G__99979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99980 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99979,G__99980) : tailrecursion.hoplon.span.call(null,G__99979,G__99980));
})();
var G__99923 = " ";
var G__99924 = (function (){var G__99981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99982 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99981,G__99982) : tailrecursion.hoplon.span.call(null,G__99981,G__99982));
})();
var G__99925 = ")\n      ";
var G__99926 = (function (){var G__99983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99984 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99983,G__99984) : tailrecursion.hoplon.span.call(null,G__99983,G__99984));
})();
var G__99927 = "\n      (";
var G__99928 = (function (){var G__99985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99986 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99985,G__99986) : tailrecursion.hoplon.span.call(null,G__99985,G__99986));
})();
var G__99929 = "(";
var G__99930 = (function (){var G__99987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99988 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99987,G__99988) : tailrecursion.hoplon.span.call(null,G__99987,G__99988));
})();
var G__99931 = "(";
var G__99932 = (function (){var G__99989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99990 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99989,G__99990) : tailrecursion.hoplon.span.call(null,G__99989,G__99990));
})();
var G__99933 = (function (){var G__99991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99992 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99991,G__99992) : tailrecursion.hoplon.span.call(null,G__99991,G__99992));
})();
var G__99934 = ") ";
var G__99935 = (function (){var G__99993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__99994 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99993,G__99994) : tailrecursion.hoplon.span.call(null,G__99993,G__99994));
})();
var G__99936 = ")\n        (";
var G__99937 = (function (){var G__99995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__99996 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99995,G__99996) : tailrecursion.hoplon.span.call(null,G__99995,G__99996));
})();
var G__99938 = " (";
var G__99939 = (function (){var G__99997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__99998 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99997,G__99998) : tailrecursion.hoplon.span.call(null,G__99997,G__99998));
})();
var G__99940 = (function (){var G__99999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100000 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__99999,G__100000) : tailrecursion.hoplon.span.call(null,G__99999,G__100000));
})();
var G__99941 = ") ";
var G__99942 = (function (){var G__100001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100002 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100001,G__100002) : tailrecursion.hoplon.span.call(null,G__100001,G__100002));
})();
var G__99943 = "))))\n\n(";
var G__99944 = (function (){var G__100003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100004 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100003,G__100004) : tailrecursion.hoplon.span.call(null,G__100003,G__100004));
})();
var G__99945 = " (";
var G__99946 = (function (){var G__100005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100006 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100005,G__100006) : tailrecursion.hoplon.span.call(null,G__100005,G__100006));
})();
var G__99947 = (function (){var G__100007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100008 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100007,G__100008) : tailrecursion.hoplon.span.call(null,G__100007,G__100008));
})();
var G__99948 = " ";
var G__99949 = (function (){var G__100009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100010 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100009,G__100010) : tailrecursion.hoplon.span.call(null,G__100009,G__100010));
})();
var G__99950 = " ";
var G__99951 = (function (){var G__100011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100012 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100011,G__100012) : tailrecursion.hoplon.span.call(null,G__100011,G__100012));
})();
var G__99952 = " ";
var G__99953 = (function (){var G__100013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100014 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100013,G__100014) : tailrecursion.hoplon.span.call(null,G__100013,G__100014));
})();
var G__99954 = " ";
var G__99955 = (function (){var G__100015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100016 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100015,G__100016) : tailrecursion.hoplon.span.call(null,G__100015,G__100016));
})();
var G__99956 = ") ";
var G__99957 = (function (){var G__100017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100018 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100017,G__100018) : tailrecursion.hoplon.span.call(null,G__100017,G__100018));
})();
var G__99958 = ")\n(";
var G__99959 = (function (){var G__100019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100020 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100019,G__100020) : tailrecursion.hoplon.span.call(null,G__100019,G__100020));
})();
var G__99960 = " ";
var G__99961 = (function (){var G__100021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100022 = "20";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100021,G__100022) : tailrecursion.hoplon.span.call(null,G__100021,G__100022));
})();
var G__99962 = " ";
var G__99963 = (function (){var G__100023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100024 = "30";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100023,G__100024) : tailrecursion.hoplon.span.call(null,G__100023,G__100024));
})();
var G__99964 = " ";
var G__99965 = (function (){var G__100025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100026 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100025,G__100026) : tailrecursion.hoplon.span.call(null,G__100025,G__100026));
})();
var G__99966 = " ";
var G__99967 = (function (){var G__100027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100028 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100027,G__100028) : tailrecursion.hoplon.span.call(null,G__100027,G__100028));
})();
var G__99968 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__99911,G__99912,G__99913,G__99914,G__99915,G__99916,G__99917,G__99918,G__99919,G__99920,G__99921,G__99922,G__99923,G__99924,G__99925,G__99926,G__99927,G__99928,G__99929,G__99930,G__99931,G__99932,G__99933,G__99934,G__99935,G__99936,G__99937,G__99938,G__99939,G__99940,G__99941,G__99942,G__99943,G__99944,G__99945,G__99946,G__99947,G__99948,G__99949,G__99950,G__99951,G__99952,G__99953,G__99954,G__99955,G__99956,G__99957,G__99958,G__99959,G__99960,G__99961,G__99962,G__99963,G__99964,G__99965,G__99966,G__99967,G__99968) : tailrecursion.hoplon.pre.call(null,G__99911,G__99912,G__99913,G__99914,G__99915,G__99916,G__99917,G__99918,G__99919,G__99920,G__99921,G__99922,G__99923,G__99924,G__99925,G__99926,G__99927,G__99928,G__99929,G__99930,G__99931,G__99932,G__99933,G__99934,G__99935,G__99936,G__99937,G__99938,G__99939,G__99940,G__99941,G__99942,G__99943,G__99944,G__99945,G__99946,G__99947,G__99948,G__99949,G__99950,G__99951,G__99952,G__99953,G__99954,G__99955,G__99956,G__99957,G__99958,G__99959,G__99960,G__99961,G__99962,G__99963,G__99964,G__99965,G__99966,G__99967,G__99968));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__99909,G__99910) : tailrecursion.hoplon.div.call(null,G__99909,G__99910));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__99908) : tailrecursion.hoplon.div.call(null,G__99908));
})(),(function (){var G__100029 = cljs.core.PersistentArrayMap.EMPTY;
var G__100030 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In an effort to get used to writing in ways that won",(function (){var G__100031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__100032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__100031,G__100032) : tailrecursion.hoplon.markdown.simple_node.call(null,G__100031,G__100032));
})(),"t cause stack overflow errors, let",(function (){var G__100033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__100034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__100033,G__100034) : tailrecursion.hoplon.markdown.simple_node.call(null,G__100033,G__100034));
})(),"s turn this recursive procedure into an iterative one using ",(function (){var G__100035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"loop"], null);
var G__100036 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100035,G__100036) : tailrecursion.hoplon.markdown.code_node.call(null,G__100035,G__100036));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100029,G__100030) : tailrecursion.hoplon.markdown.para_node.call(null,G__100029,G__100030));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99905;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99904;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_99903;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_99902;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_100037 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100038 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100039 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100040 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100041 = (function (){var G__100042 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100043 = (function (){var G__100044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100045 = "(";
var G__100046 = (function (){var G__100100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100101 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100100,G__100101) : tailrecursion.hoplon.span.call(null,G__100100,G__100101));
})();
var G__100047 = (function (){var G__100102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100103 = "scale-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100102,G__100103) : tailrecursion.hoplon.span.call(null,G__100102,G__100103));
})();
var G__100048 = " [";
var G__100049 = (function (){var G__100104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100105 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100104,G__100105) : tailrecursion.hoplon.span.call(null,G__100104,G__100105));
})();
var G__100050 = " ";
var G__100051 = (function (){var G__100106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100107 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100106,G__100107) : tailrecursion.hoplon.span.call(null,G__100106,G__100107));
})();
var G__100052 = "]\n  (";
var G__100053 = (function (){var G__100108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100109 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100108,G__100109) : tailrecursion.hoplon.span.call(null,G__100108,G__100109));
})();
var G__100054 = "[";
var G__100055 = (function (){var G__100110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100111 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100110,G__100111) : tailrecursion.hoplon.span.call(null,G__100110,G__100111));
})();
var G__100056 = " ";
var G__100057 = (function (){var G__100112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100113 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100112,G__100113) : tailrecursion.hoplon.span.call(null,G__100112,G__100113));
})();
var G__100058 = "\n         ";
var G__100059 = (function (){var G__100114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100115 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100114,G__100115) : tailrecursion.hoplon.span.call(null,G__100114,G__100115));
})();
var G__100060 = "   (";
var G__100061 = (function (){var G__100116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100117 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100116,G__100117) : tailrecursion.hoplon.span.call(null,G__100116,G__100117));
})();
var G__100062 = ")]\n    (";
var G__100063 = (function (){var G__100118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100119 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100118,G__100119) : tailrecursion.hoplon.span.call(null,G__100118,G__100119));
})();
var G__100064 = "(";
var G__100065 = (function (){var G__100120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100121 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100120,G__100121) : tailrecursion.hoplon.span.call(null,G__100120,G__100121));
})();
var G__100066 = " ";
var G__100067 = (function (){var G__100122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100123 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100122,G__100123) : tailrecursion.hoplon.span.call(null,G__100122,G__100123));
})();
var G__100068 = ")\n        ";
var G__100069 = (function (){var G__100124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100125 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100124,G__100125) : tailrecursion.hoplon.span.call(null,G__100124,G__100125));
})();
var G__100070 = "\n        (";
var G__100071 = (function (){var G__100126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100127 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100126,G__100127) : tailrecursion.hoplon.span.call(null,G__100126,G__100127));
})();
var G__100072 = " (";
var G__100073 = (function (){var G__100128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100129 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100128,G__100129) : tailrecursion.hoplon.span.call(null,G__100128,G__100129));
})();
var G__100074 = (function (){var G__100130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100131 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100130,G__100131) : tailrecursion.hoplon.span.call(null,G__100130,G__100131));
})();
var G__100075 = ")\n               (";
var G__100076 = (function (){var G__100132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100133 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100132,G__100133) : tailrecursion.hoplon.span.call(null,G__100132,G__100133));
})();
var G__100077 = (function (){var G__100134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100135 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100134,G__100135) : tailrecursion.hoplon.span.call(null,G__100134,G__100135));
})();
var G__100078 = "\n                     (";
var G__100079 = (function (){var G__100136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100137 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100136,G__100137) : tailrecursion.hoplon.span.call(null,G__100136,G__100137));
})();
var G__100080 = (function (){var G__100138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100139 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100138,G__100139) : tailrecursion.hoplon.span.call(null,G__100138,G__100139));
})();
var G__100081 = " \n                        (";
var G__100082 = (function (){var G__100140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100141 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100140,G__100141) : tailrecursion.hoplon.span.call(null,G__100140,G__100141));
})();
var G__100083 = (function (){var G__100142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100143 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100142,G__100143) : tailrecursion.hoplon.span.call(null,G__100142,G__100143));
})();
var G__100084 = ")))))))\n(";
var G__100085 = (function (){var G__100144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100145 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100144,G__100145) : tailrecursion.hoplon.span.call(null,G__100144,G__100145));
})();
var G__100086 = (function (){var G__100146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100147 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100146,G__100147) : tailrecursion.hoplon.span.call(null,G__100146,G__100147));
})();
var G__100087 = " [";
var G__100088 = (function (){var G__100148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100149 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100148,G__100149) : tailrecursion.hoplon.span.call(null,G__100148,G__100149));
})();
var G__100089 = " ";
var G__100090 = (function (){var G__100150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100151 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100150,G__100151) : tailrecursion.hoplon.span.call(null,G__100150,G__100151));
})();
var G__100091 = "]\n  (";
var G__100092 = (function (){var G__100152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100153 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100152,G__100153) : tailrecursion.hoplon.span.call(null,G__100152,G__100153));
})();
var G__100093 = "(";
var G__100094 = (function (){var G__100154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100155 = "scale-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100154,G__100155) : tailrecursion.hoplon.span.call(null,G__100154,G__100155));
})();
var G__100095 = " ";
var G__100096 = (function (){var G__100156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100157 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100156,G__100157) : tailrecursion.hoplon.span.call(null,G__100156,G__100157));
})();
var G__100097 = " ";
var G__100098 = (function (){var G__100158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100159 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100158,G__100159) : tailrecursion.hoplon.span.call(null,G__100158,G__100159));
})();
var G__100099 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__100044,G__100045,G__100046,G__100047,G__100048,G__100049,G__100050,G__100051,G__100052,G__100053,G__100054,G__100055,G__100056,G__100057,G__100058,G__100059,G__100060,G__100061,G__100062,G__100063,G__100064,G__100065,G__100066,G__100067,G__100068,G__100069,G__100070,G__100071,G__100072,G__100073,G__100074,G__100075,G__100076,G__100077,G__100078,G__100079,G__100080,G__100081,G__100082,G__100083,G__100084,G__100085,G__100086,G__100087,G__100088,G__100089,G__100090,G__100091,G__100092,G__100093,G__100094,G__100095,G__100096,G__100097,G__100098,G__100099) : tailrecursion.hoplon.pre.call(null,G__100044,G__100045,G__100046,G__100047,G__100048,G__100049,G__100050,G__100051,G__100052,G__100053,G__100054,G__100055,G__100056,G__100057,G__100058,G__100059,G__100060,G__100061,G__100062,G__100063,G__100064,G__100065,G__100066,G__100067,G__100068,G__100069,G__100070,G__100071,G__100072,G__100073,G__100074,G__100075,G__100076,G__100077,G__100078,G__100079,G__100080,G__100081,G__100082,G__100083,G__100084,G__100085,G__100086,G__100087,G__100088,G__100089,G__100090,G__100091,G__100092,G__100093,G__100094,G__100095,G__100096,G__100097,G__100098,G__100099));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100042,G__100043) : tailrecursion.hoplon.div.call(null,G__100042,G__100043));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100041) : tailrecursion.hoplon.div.call(null,G__100041));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100040;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100039;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100038;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100037;
}})()], 0)),"",(function (){var _STAR_references_STAR_100160 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100161 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100162 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100163 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100164 = cljs.core.PersistentArrayMap.EMPTY;
var G__100165 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can abstract this general idea and capture it as a common patter expressed as a higher-order procedure, just as in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3"], null)], 0)),". The higher-order procedure here is called ",(function (){var G__100166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__100167 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100166,G__100167) : tailrecursion.hoplon.markdown.code_node.call(null,G__100166,G__100167));
})(),". ",(function (){var G__100168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__100169 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100168,G__100169) : tailrecursion.hoplon.markdown.code_node.call(null,G__100168,G__100169));
})()," takes as arguments a procedure of one argument and a sequential object (in our case a list), and in our case, returns a list of the results produced by applying the procedure to each element of the list",(function (){var G__100170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__100171 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scheme standardly provides a map procedure that is more general than the one described here. This more general map takes a procedure of n arguments, together with n lists, and applies the procedure to all the first elements of the lists, all the second elements of the lists, and so on, returning a list of the results. For example, ",(function (){var G__100172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(map + (list 1 2 3) (list 40 50 60) (list 700 800\n900))"], null);
var G__100173 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100172,G__100173) : tailrecursion.hoplon.markdown.code_node.call(null,G__100172,G__100173));
})()," returns ",(function (){var G__100174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(741 852 963)"], null);
var G__100175 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100174,G__100175) : tailrecursion.hoplon.markdown.code_node.call(null,G__100174,G__100175));
})(),", and so on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__100170,G__100171) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__100170,G__100171));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100164,G__100165) : tailrecursion.hoplon.markdown.para_node.call(null,G__100164,G__100165));
})(),(function (){var G__100176 = (function (){var G__100177 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100178 = (function (){var G__100179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100180 = "(";
var G__100181 = (function (){var G__100266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100267 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100266,G__100267) : tailrecursion.hoplon.span.call(null,G__100266,G__100267));
})();
var G__100182 = (function (){var G__100268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100269 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100268,G__100269) : tailrecursion.hoplon.span.call(null,G__100268,G__100269));
})();
var G__100183 = "[";
var G__100184 = (function (){var G__100270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100271 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100270,G__100271) : tailrecursion.hoplon.span.call(null,G__100270,G__100271));
})();
var G__100185 = " ";
var G__100186 = (function (){var G__100272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100273 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100272,G__100273) : tailrecursion.hoplon.span.call(null,G__100272,G__100273));
})();
var G__100187 = "]\n  (";
var G__100188 = (function (){var G__100274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100275 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100274,G__100275) : tailrecursion.hoplon.span.call(null,G__100274,G__100275));
})();
var G__100189 = "(";
var G__100190 = (function (){var G__100276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100277 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100276,G__100277) : tailrecursion.hoplon.span.call(null,G__100276,G__100277));
})();
var G__100191 = " ";
var G__100192 = (function (){var G__100278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100279 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100278,G__100279) : tailrecursion.hoplon.span.call(null,G__100278,G__100279));
})();
var G__100193 = ")\n      ";
var G__100194 = (function (){var G__100280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100281 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100280,G__100281) : tailrecursion.hoplon.span.call(null,G__100280,G__100281));
})();
var G__100195 = "\n      (";
var G__100196 = (function (){var G__100282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100283 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100282,G__100283) : tailrecursion.hoplon.span.call(null,G__100282,G__100283));
})();
var G__100197 = "(";
var G__100198 = (function (){var G__100284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100285 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100284,G__100285) : tailrecursion.hoplon.span.call(null,G__100284,G__100285));
})();
var G__100199 = " (";
var G__100200 = (function (){var G__100286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100287 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100286,G__100287) : tailrecursion.hoplon.span.call(null,G__100286,G__100287));
})();
var G__100201 = (function (){var G__100288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100289 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100288,G__100289) : tailrecursion.hoplon.span.call(null,G__100288,G__100289));
})();
var G__100202 = "))\n            (";
var G__100203 = (function (){var G__100290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100291 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100290,G__100291) : tailrecursion.hoplon.span.call(null,G__100290,G__100291));
})();
var G__100204 = (function (){var G__100292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100293 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100292,G__100293) : tailrecursion.hoplon.span.call(null,G__100292,G__100293));
})();
var G__100205 = " (";
var G__100206 = (function (){var G__100294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100295 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100294,G__100295) : tailrecursion.hoplon.span.call(null,G__100294,G__100295));
})();
var G__100207 = (function (){var G__100296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100297 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100296,G__100297) : tailrecursion.hoplon.span.call(null,G__100296,G__100297));
})();
var G__100208 = ")))))\n(";
var G__100209 = (function (){var G__100298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100299 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100298,G__100299) : tailrecursion.hoplon.span.call(null,G__100298,G__100299));
})();
var G__100210 = (function (){var G__100300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100301 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100300,G__100301) : tailrecursion.hoplon.span.call(null,G__100300,G__100301));
})();
var G__100211 = " [";
var G__100212 = (function (){var G__100302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100303 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100302,G__100303) : tailrecursion.hoplon.span.call(null,G__100302,G__100303));
})();
var G__100213 = "] (";
var G__100214 = (function (){var G__100304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100305 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100304,G__100305) : tailrecursion.hoplon.span.call(null,G__100304,G__100305));
})();
var G__100215 = " ";
var G__100216 = (function (){var G__100306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100307 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100306,G__100307) : tailrecursion.hoplon.span.call(null,G__100306,G__100307));
})();
var G__100217 = "))\n(";
var G__100218 = (function (){var G__100308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100309 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100308,G__100309) : tailrecursion.hoplon.span.call(null,G__100308,G__100309));
})();
var G__100219 = (function (){var G__100310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100311 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100310,G__100311) : tailrecursion.hoplon.span.call(null,G__100310,G__100311));
})();
var G__100220 = " (";
var G__100221 = (function (){var G__100312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100313 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100312,G__100313) : tailrecursion.hoplon.span.call(null,G__100312,G__100313));
})();
var G__100222 = (function (){var G__100314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100315 = "-10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100314,G__100315) : tailrecursion.hoplon.span.call(null,G__100314,G__100315));
})();
var G__100223 = " ";
var G__100224 = (function (){var G__100316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100317 = "2.5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100316,G__100317) : tailrecursion.hoplon.span.call(null,G__100316,G__100317));
})();
var G__100225 = " ";
var G__100226 = (function (){var G__100318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100319 = "-11.6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100318,G__100319) : tailrecursion.hoplon.span.call(null,G__100318,G__100319));
})();
var G__100227 = " ";
var G__100228 = (function (){var G__100320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100321 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100320,G__100321) : tailrecursion.hoplon.span.call(null,G__100320,G__100321));
})();
var G__100229 = "))\n(";
var G__100230 = (function (){var G__100322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100323 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100322,G__100323) : tailrecursion.hoplon.span.call(null,G__100322,G__100323));
})();
var G__100231 = " ";
var G__100232 = (function (){var G__100324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100325 = "2.5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100324,G__100325) : tailrecursion.hoplon.span.call(null,G__100324,G__100325));
})();
var G__100233 = " ";
var G__100234 = (function (){var G__100326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100327 = "11.6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100326,G__100327) : tailrecursion.hoplon.span.call(null,G__100326,G__100327));
})();
var G__100235 = " ";
var G__100236 = (function (){var G__100328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100329 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100328,G__100329) : tailrecursion.hoplon.span.call(null,G__100328,G__100329));
})();
var G__100237 = ")\n(";
var G__100238 = (function (){var G__100330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100331 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100330,G__100331) : tailrecursion.hoplon.span.call(null,G__100330,G__100331));
})();
var G__100239 = "(";
var G__100240 = (function (){var G__100332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100333 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100332,G__100333) : tailrecursion.hoplon.span.call(null,G__100332,G__100333));
})();
var G__100241 = "[";
var G__100242 = (function (){var G__100334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100335 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100334,G__100335) : tailrecursion.hoplon.span.call(null,G__100334,G__100335));
})();
var G__100243 = "] (";
var G__100244 = (function (){var G__100336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100337 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100336,G__100337) : tailrecursion.hoplon.span.call(null,G__100336,G__100337));
})();
var G__100245 = (function (){var G__100338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100339 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100338,G__100339) : tailrecursion.hoplon.span.call(null,G__100338,G__100339));
})();
var G__100246 = " ";
var G__100247 = (function (){var G__100340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100341 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100340,G__100341) : tailrecursion.hoplon.span.call(null,G__100340,G__100341));
})();
var G__100248 = "))\n     (";
var G__100249 = (function (){var G__100342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100343 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100342,G__100343) : tailrecursion.hoplon.span.call(null,G__100342,G__100343));
})();
var G__100250 = (function (){var G__100344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100345 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100344,G__100345) : tailrecursion.hoplon.span.call(null,G__100344,G__100345));
})();
var G__100251 = " ";
var G__100252 = (function (){var G__100346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100347 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100346,G__100347) : tailrecursion.hoplon.span.call(null,G__100346,G__100347));
})();
var G__100253 = " ";
var G__100254 = (function (){var G__100348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100349 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100348,G__100349) : tailrecursion.hoplon.span.call(null,G__100348,G__100349));
})();
var G__100255 = " ";
var G__100256 = (function (){var G__100350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100351 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100350,G__100351) : tailrecursion.hoplon.span.call(null,G__100350,G__100351));
})();
var G__100257 = "))\n(";
var G__100258 = (function (){var G__100352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100353 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100352,G__100353) : tailrecursion.hoplon.span.call(null,G__100352,G__100353));
})();
var G__100259 = " ";
var G__100260 = (function (){var G__100354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100355 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100354,G__100355) : tailrecursion.hoplon.span.call(null,G__100354,G__100355));
})();
var G__100261 = " ";
var G__100262 = (function (){var G__100356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100357 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100356,G__100357) : tailrecursion.hoplon.span.call(null,G__100356,G__100357));
})();
var G__100263 = " ";
var G__100264 = (function (){var G__100358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100359 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100358,G__100359) : tailrecursion.hoplon.span.call(null,G__100358,G__100359));
})();
var G__100265 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$87 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$87(G__100179,G__100180,G__100181,G__100182,G__100183,G__100184,G__100185,G__100186,G__100187,G__100188,G__100189,G__100190,G__100191,G__100192,G__100193,G__100194,G__100195,G__100196,G__100197,G__100198,G__100199,G__100200,G__100201,G__100202,G__100203,G__100204,G__100205,G__100206,G__100207,G__100208,G__100209,G__100210,G__100211,G__100212,G__100213,G__100214,G__100215,G__100216,G__100217,G__100218,G__100219,G__100220,G__100221,G__100222,G__100223,G__100224,G__100225,G__100226,G__100227,G__100228,G__100229,G__100230,G__100231,G__100232,G__100233,G__100234,G__100235,G__100236,G__100237,G__100238,G__100239,G__100240,G__100241,G__100242,G__100243,G__100244,G__100245,G__100246,G__100247,G__100248,G__100249,G__100250,G__100251,G__100252,G__100253,G__100254,G__100255,G__100256,G__100257,G__100258,G__100259,G__100260,G__100261,G__100262,G__100263,G__100264,G__100265) : tailrecursion.hoplon.pre.call(null,G__100179,G__100180,G__100181,G__100182,G__100183,G__100184,G__100185,G__100186,G__100187,G__100188,G__100189,G__100190,G__100191,G__100192,G__100193,G__100194,G__100195,G__100196,G__100197,G__100198,G__100199,G__100200,G__100201,G__100202,G__100203,G__100204,G__100205,G__100206,G__100207,G__100208,G__100209,G__100210,G__100211,G__100212,G__100213,G__100214,G__100215,G__100216,G__100217,G__100218,G__100219,G__100220,G__100221,G__100222,G__100223,G__100224,G__100225,G__100226,G__100227,G__100228,G__100229,G__100230,G__100231,G__100232,G__100233,G__100234,G__100235,G__100236,G__100237,G__100238,G__100239,G__100240,G__100241,G__100242,G__100243,G__100244,G__100245,G__100246,G__100247,G__100248,G__100249,G__100250,G__100251,G__100252,G__100253,G__100254,G__100255,G__100256,G__100257,G__100258,G__100259,G__100260,G__100261,G__100262,G__100263,G__100264,G__100265));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100177,G__100178) : tailrecursion.hoplon.div.call(null,G__100177,G__100178));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100176) : tailrecursion.hoplon.div.call(null,G__100176));
})(),(function (){var G__100360 = cljs.core.PersistentArrayMap.EMPTY;
var G__100361 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__100362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__100363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__100362,G__100363) : tailrecursion.hoplon.markdown.simple_node.call(null,G__100362,G__100363));
})(),"s try to make this one iterative as well!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100360,G__100361) : tailrecursion.hoplon.markdown.para_node.call(null,G__100360,G__100361));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100163;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100162;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100161;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100160;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_100364 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100365 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100366 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100367 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100368 = (function (){var G__100369 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100370 = (function (){var G__100371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100372 = "(";
var G__100373 = (function (){var G__100423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100424 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100423,G__100424) : tailrecursion.hoplon.span.call(null,G__100423,G__100424));
})();
var G__100374 = (function (){var G__100425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100426 = "map*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100425,G__100426) : tailrecursion.hoplon.span.call(null,G__100425,G__100426));
})();
var G__100375 = " [";
var G__100376 = (function (){var G__100427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100428 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100427,G__100428) : tailrecursion.hoplon.span.call(null,G__100427,G__100428));
})();
var G__100377 = " ";
var G__100378 = (function (){var G__100429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100430 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100429,G__100430) : tailrecursion.hoplon.span.call(null,G__100429,G__100430));
})();
var G__100379 = "]\n  (";
var G__100380 = (function (){var G__100431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100432 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100431,G__100432) : tailrecursion.hoplon.span.call(null,G__100431,G__100432));
})();
var G__100381 = "[";
var G__100382 = (function (){var G__100433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100434 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100433,G__100434) : tailrecursion.hoplon.span.call(null,G__100433,G__100434));
})();
var G__100383 = " ";
var G__100384 = (function (){var G__100435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100436 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100435,G__100436) : tailrecursion.hoplon.span.call(null,G__100435,G__100436));
})();
var G__100385 = "\n         ";
var G__100386 = (function (){var G__100437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100438 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100437,G__100438) : tailrecursion.hoplon.span.call(null,G__100437,G__100438));
})();
var G__100387 = "   (";
var G__100388 = (function (){var G__100439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100440 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100439,G__100440) : tailrecursion.hoplon.span.call(null,G__100439,G__100440));
})();
var G__100389 = ")]\n    (";
var G__100390 = (function (){var G__100441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100442 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100441,G__100442) : tailrecursion.hoplon.span.call(null,G__100441,G__100442));
})();
var G__100391 = "(";
var G__100392 = (function (){var G__100443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100444 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100443,G__100444) : tailrecursion.hoplon.span.call(null,G__100443,G__100444));
})();
var G__100393 = " ";
var G__100394 = (function (){var G__100445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100446 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100445,G__100446) : tailrecursion.hoplon.span.call(null,G__100445,G__100446));
})();
var G__100395 = ")\n        ";
var G__100396 = (function (){var G__100447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100448 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100447,G__100448) : tailrecursion.hoplon.span.call(null,G__100447,G__100448));
})();
var G__100397 = "\n        (";
var G__100398 = (function (){var G__100449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100450 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100449,G__100450) : tailrecursion.hoplon.span.call(null,G__100449,G__100450));
})();
var G__100399 = " (";
var G__100400 = (function (){var G__100451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100452 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100451,G__100452) : tailrecursion.hoplon.span.call(null,G__100451,G__100452));
})();
var G__100401 = (function (){var G__100453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100454 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100453,G__100454) : tailrecursion.hoplon.span.call(null,G__100453,G__100454));
})();
var G__100402 = "\n                     (";
var G__100403 = (function (){var G__100455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100456 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100455,G__100456) : tailrecursion.hoplon.span.call(null,G__100455,G__100456));
})();
var G__100404 = " (";
var G__100405 = (function (){var G__100457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100458 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100457,G__100458) : tailrecursion.hoplon.span.call(null,G__100457,G__100458));
})();
var G__100406 = (function (){var G__100459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100460 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100459,G__100460) : tailrecursion.hoplon.span.call(null,G__100459,G__100460));
})();
var G__100407 = ")))))))\n(";
var G__100408 = (function (){var G__100461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100462 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100461,G__100462) : tailrecursion.hoplon.span.call(null,G__100461,G__100462));
})();
var G__100409 = (function (){var G__100463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100464 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100463,G__100464) : tailrecursion.hoplon.span.call(null,G__100463,G__100464));
})();
var G__100410 = "[";
var G__100411 = (function (){var G__100465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100466 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100465,G__100466) : tailrecursion.hoplon.span.call(null,G__100465,G__100466));
})();
var G__100412 = " ";
var G__100413 = (function (){var G__100467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100468 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100467,G__100468) : tailrecursion.hoplon.span.call(null,G__100467,G__100468));
})();
var G__100414 = "]\n  (";
var G__100415 = (function (){var G__100469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100470 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100469,G__100470) : tailrecursion.hoplon.span.call(null,G__100469,G__100470));
})();
var G__100416 = "(";
var G__100417 = (function (){var G__100471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100472 = "map*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100471,G__100472) : tailrecursion.hoplon.span.call(null,G__100471,G__100472));
})();
var G__100418 = " ";
var G__100419 = (function (){var G__100473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100474 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100473,G__100474) : tailrecursion.hoplon.span.call(null,G__100473,G__100474));
})();
var G__100420 = " ";
var G__100421 = (function (){var G__100475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100476 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100475,G__100476) : tailrecursion.hoplon.span.call(null,G__100475,G__100476));
})();
var G__100422 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__100371,G__100372,G__100373,G__100374,G__100375,G__100376,G__100377,G__100378,G__100379,G__100380,G__100381,G__100382,G__100383,G__100384,G__100385,G__100386,G__100387,G__100388,G__100389,G__100390,G__100391,G__100392,G__100393,G__100394,G__100395,G__100396,G__100397,G__100398,G__100399,G__100400,G__100401,G__100402,G__100403,G__100404,G__100405,G__100406,G__100407,G__100408,G__100409,G__100410,G__100411,G__100412,G__100413,G__100414,G__100415,G__100416,G__100417,G__100418,G__100419,G__100420,G__100421,G__100422) : tailrecursion.hoplon.pre.call(null,G__100371,G__100372,G__100373,G__100374,G__100375,G__100376,G__100377,G__100378,G__100379,G__100380,G__100381,G__100382,G__100383,G__100384,G__100385,G__100386,G__100387,G__100388,G__100389,G__100390,G__100391,G__100392,G__100393,G__100394,G__100395,G__100396,G__100397,G__100398,G__100399,G__100400,G__100401,G__100402,G__100403,G__100404,G__100405,G__100406,G__100407,G__100408,G__100409,G__100410,G__100411,G__100412,G__100413,G__100414,G__100415,G__100416,G__100417,G__100418,G__100419,G__100420,G__100421,G__100422));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100369,G__100370) : tailrecursion.hoplon.div.call(null,G__100369,G__100370));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100368) : tailrecursion.hoplon.div.call(null,G__100368));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100367;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100366;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100365;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100364;
}})()], 0)),"",(function (){var _STAR_references_STAR_100477 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100478 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100479 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100480 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100481 = cljs.core.PersistentArrayMap.EMPTY;
var G__100482 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can give a new definition of ",(function (){var G__100483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__100484 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100483,G__100484) : tailrecursion.hoplon.markdown.code_node.call(null,G__100483,G__100484));
})()," in terms of ",(function (){var G__100485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__100486 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100485,G__100486) : tailrecursion.hoplon.markdown.code_node.call(null,G__100485,G__100486));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100481,G__100482) : tailrecursion.hoplon.markdown.para_node.call(null,G__100481,G__100482));
})(),(function (){var G__100487 = (function (){var G__100488 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100489 = (function (){var G__100490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100491 = "(";
var G__100492 = (function (){var G__100512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100513 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100512,G__100513) : tailrecursion.hoplon.span.call(null,G__100512,G__100513));
})();
var G__100493 = (function (){var G__100514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100515 = "scale-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100514,G__100515) : tailrecursion.hoplon.span.call(null,G__100514,G__100515));
})();
var G__100494 = " [";
var G__100495 = (function (){var G__100516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100517 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100516,G__100517) : tailrecursion.hoplon.span.call(null,G__100516,G__100517));
})();
var G__100496 = " ";
var G__100497 = (function (){var G__100518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100519 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100518,G__100519) : tailrecursion.hoplon.span.call(null,G__100518,G__100519));
})();
var G__100498 = "]\n  (";
var G__100499 = (function (){var G__100520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100521 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100520,G__100521) : tailrecursion.hoplon.span.call(null,G__100520,G__100521));
})();
var G__100500 = "(";
var G__100501 = (function (){var G__100522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100523 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100522,G__100523) : tailrecursion.hoplon.span.call(null,G__100522,G__100523));
})();
var G__100502 = "[";
var G__100503 = (function (){var G__100524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100525 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100524,G__100525) : tailrecursion.hoplon.span.call(null,G__100524,G__100525));
})();
var G__100504 = "] (";
var G__100505 = (function (){var G__100526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100527 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100526,G__100527) : tailrecursion.hoplon.span.call(null,G__100526,G__100527));
})();
var G__100506 = (function (){var G__100528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100529 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100528,G__100529) : tailrecursion.hoplon.span.call(null,G__100528,G__100529));
})();
var G__100507 = " ";
var G__100508 = (function (){var G__100530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100531 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100530,G__100531) : tailrecursion.hoplon.span.call(null,G__100530,G__100531));
})();
var G__100509 = "))\n       ";
var G__100510 = (function (){var G__100532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100533 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100532,G__100533) : tailrecursion.hoplon.span.call(null,G__100532,G__100533));
})();
var G__100511 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__100490,G__100491,G__100492,G__100493,G__100494,G__100495,G__100496,G__100497,G__100498,G__100499,G__100500,G__100501,G__100502,G__100503,G__100504,G__100505,G__100506,G__100507,G__100508,G__100509,G__100510,G__100511) : tailrecursion.hoplon.pre.call(null,G__100490,G__100491,G__100492,G__100493,G__100494,G__100495,G__100496,G__100497,G__100498,G__100499,G__100500,G__100501,G__100502,G__100503,G__100504,G__100505,G__100506,G__100507,G__100508,G__100509,G__100510,G__100511));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100488,G__100489) : tailrecursion.hoplon.div.call(null,G__100488,G__100489));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100487) : tailrecursion.hoplon.div.call(null,G__100487));
})(),(function (){var G__100534 = cljs.core.PersistentArrayMap.EMPTY;
var G__100535 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__100537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100536,G__100537) : tailrecursion.hoplon.markdown.code_node.call(null,G__100536,G__100537));
})()," is an important construct, not only because it captures a common pattern, but because it establishes a higher level of abstraction in dealing with lists. In the original definition of ",(function (){var G__100538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__100539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100538,G__100539) : tailrecursion.hoplon.markdown.code_node.call(null,G__100538,G__100539));
})(),", the recursive structure of the program draws attention to the element-by-element processing of the list. Defining ",(function (){var G__100540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__100541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100540,G__100541) : tailrecursion.hoplon.markdown.code_node.call(null,G__100540,G__100541));
})()," in terms of ",(function (){var G__100542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__100543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100542,G__100543) : tailrecursion.hoplon.markdown.code_node.call(null,G__100542,G__100543));
})()," surpresses that level of detail and emphasizes that scaling transforms a list of elements to a list of results. The difference between the two definitions is not that the computer is performing a differnt process (it isn",(function (){var G__100544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__100545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__100544,G__100545) : tailrecursion.hoplon.markdown.simple_node.call(null,G__100544,G__100545));
})(),"t) but that we think about the process differently. In effect, ",(function (){var G__100546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__100547 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100546,G__100547) : tailrecursion.hoplon.markdown.code_node.call(null,G__100546,G__100547));
})()," helps establish an abstraction barrier that isolates the implementation of procedures that transform lists from the details of how the elements of the list are extracted and combined. Like the barriers shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),", this abstraction gives us the flexibility to change the low-level details of how sequences are implemented, while preserving the conceptual framework of operations that transform sequences to sequences. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Section 2.2.3"], null)], 0))," expands on this use of sequences as a framework for organizing programs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100534,G__100535) : tailrecursion.hoplon.markdown.para_node.call(null,G__100534,G__100535));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100480;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100479;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100478;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100477;
}})()], 0));
var G__97786 = "";
var G__97787 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_100548 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100549 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100550 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100551 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100552 = cljs.core.PersistentArrayMap.EMPTY;
var G__100553 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedure ",(function (){var G__100554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__100555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100554,G__100555) : tailrecursion.hoplon.markdown.code_node.call(null,G__100554,G__100555));
})()," takes a list of numbers as arguments and returns a list of the squares of those numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100552,G__100553) : tailrecursion.hoplon.markdown.para_node.call(null,G__100552,G__100553));
})(),(function (){var G__100556 = (function (){var G__100557 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100558 = (function (){var G__100559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100560 = "(";
var G__100561 = (function (){var G__100580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100581 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100580,G__100581) : tailrecursion.hoplon.span.call(null,G__100580,G__100581));
})();
var G__100562 = " (";
var G__100563 = (function (){var G__100582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100583 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100582,G__100583) : tailrecursion.hoplon.span.call(null,G__100582,G__100583));
})();
var G__100564 = (function (){var G__100584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100585 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100584,G__100585) : tailrecursion.hoplon.span.call(null,G__100584,G__100585));
})();
var G__100565 = " ";
var G__100566 = (function (){var G__100586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100587 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100586,G__100587) : tailrecursion.hoplon.span.call(null,G__100586,G__100587));
})();
var G__100567 = " ";
var G__100568 = (function (){var G__100588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100589 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100588,G__100589) : tailrecursion.hoplon.span.call(null,G__100588,G__100589));
})();
var G__100569 = " ";
var G__100570 = (function (){var G__100590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100591 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100590,G__100591) : tailrecursion.hoplon.span.call(null,G__100590,G__100591));
})();
var G__100571 = "))\n(";
var G__100572 = (function (){var G__100592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100593 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100592,G__100593) : tailrecursion.hoplon.span.call(null,G__100592,G__100593));
})();
var G__100573 = " ";
var G__100574 = (function (){var G__100594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100595 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100594,G__100595) : tailrecursion.hoplon.span.call(null,G__100594,G__100595));
})();
var G__100575 = " ";
var G__100576 = (function (){var G__100596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100597 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100596,G__100597) : tailrecursion.hoplon.span.call(null,G__100596,G__100597));
})();
var G__100577 = " ";
var G__100578 = (function (){var G__100598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__100599 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100598,G__100599) : tailrecursion.hoplon.span.call(null,G__100598,G__100599));
})();
var G__100579 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__100559,G__100560,G__100561,G__100562,G__100563,G__100564,G__100565,G__100566,G__100567,G__100568,G__100569,G__100570,G__100571,G__100572,G__100573,G__100574,G__100575,G__100576,G__100577,G__100578,G__100579) : tailrecursion.hoplon.pre.call(null,G__100559,G__100560,G__100561,G__100562,G__100563,G__100564,G__100565,G__100566,G__100567,G__100568,G__100569,G__100570,G__100571,G__100572,G__100573,G__100574,G__100575,G__100576,G__100577,G__100578,G__100579));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100557,G__100558) : tailrecursion.hoplon.div.call(null,G__100557,G__100558));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100556) : tailrecursion.hoplon.div.call(null,G__100556));
})(),(function (){var G__100600 = cljs.core.PersistentArrayMap.EMPTY;
var G__100601 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here are two different definitions of ",(function (){var G__100602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__100603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100602,G__100603) : tailrecursion.hoplon.markdown.code_node.call(null,G__100602,G__100603));
})(),". Complete both of them by filling in the missing expressions:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100600,G__100601) : tailrecursion.hoplon.markdown.para_node.call(null,G__100600,G__100601));
})(),(function (){var G__100604 = (function (){var G__100605 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100606 = (function (){var G__100607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100608 = "(";
var G__100609 = (function (){var G__100649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100650 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100649,G__100650) : tailrecursion.hoplon.span.call(null,G__100649,G__100650));
})();
var G__100610 = (function (){var G__100651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100652 = "square-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100651,G__100652) : tailrecursion.hoplon.span.call(null,G__100651,G__100652));
})();
var G__100611 = " [";
var G__100612 = (function (){var G__100653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100654 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100653,G__100654) : tailrecursion.hoplon.span.call(null,G__100653,G__100654));
})();
var G__100613 = "]\n  (";
var G__100614 = (function (){var G__100655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100656 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100655,G__100656) : tailrecursion.hoplon.span.call(null,G__100655,G__100656));
})();
var G__100615 = "[";
var G__100616 = (function (){var G__100657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100658 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100657,G__100658) : tailrecursion.hoplon.span.call(null,G__100657,G__100658));
})();
var G__100617 = " ";
var G__100618 = (function (){var G__100659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100660 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100659,G__100660) : tailrecursion.hoplon.span.call(null,G__100659,G__100660));
})();
var G__100619 = "\n         ";
var G__100620 = (function (){var G__100661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100662 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100661,G__100662) : tailrecursion.hoplon.span.call(null,G__100661,G__100662));
})();
var G__100621 = "   (";
var G__100622 = (function (){var G__100663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100664 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100663,G__100664) : tailrecursion.hoplon.span.call(null,G__100663,G__100664));
})();
var G__100623 = ")] \n    (";
var G__100624 = (function (){var G__100665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100666 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100665,G__100666) : tailrecursion.hoplon.span.call(null,G__100665,G__100666));
})();
var G__100625 = "(";
var G__100626 = (function (){var G__100667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100668 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100667,G__100668) : tailrecursion.hoplon.span.call(null,G__100667,G__100668));
})();
var G__100627 = " ";
var G__100628 = (function (){var G__100669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100670 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100669,G__100670) : tailrecursion.hoplon.span.call(null,G__100669,G__100670));
})();
var G__100629 = ")\n        ";
var G__100630 = (function (){var G__100671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100672 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100671,G__100672) : tailrecursion.hoplon.span.call(null,G__100671,G__100672));
})();
var G__100631 = "\n        (";
var G__100632 = (function (){var G__100673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100674 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100673,G__100674) : tailrecursion.hoplon.span.call(null,G__100673,G__100674));
})();
var G__100633 = " ";
var G__100634 = (function (){var G__100675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100676 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100675,G__100676) : tailrecursion.hoplon.span.call(null,G__100675,G__100676));
})();
var G__100635 = " ";
var G__100636 = (function (){var G__100677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100678 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100677,G__100678) : tailrecursion.hoplon.span.call(null,G__100677,G__100678));
})();
var G__100637 = "))))\n(";
var G__100638 = (function (){var G__100679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100680 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100679,G__100680) : tailrecursion.hoplon.span.call(null,G__100679,G__100680));
})();
var G__100639 = (function (){var G__100681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100682 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100681,G__100682) : tailrecursion.hoplon.span.call(null,G__100681,G__100682));
})();
var G__100640 = " [";
var G__100641 = (function (){var G__100683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100684 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100683,G__100684) : tailrecursion.hoplon.span.call(null,G__100683,G__100684));
})();
var G__100642 = "]\n  (";
var G__100643 = (function (){var G__100685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100686 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100685,G__100686) : tailrecursion.hoplon.span.call(null,G__100685,G__100686));
})();
var G__100644 = "(";
var G__100645 = (function (){var G__100687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100688 = "square-list*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100687,G__100688) : tailrecursion.hoplon.span.call(null,G__100687,G__100688));
})();
var G__100646 = " ";
var G__100647 = (function (){var G__100689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100690 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100689,G__100690) : tailrecursion.hoplon.span.call(null,G__100689,G__100690));
})();
var G__100648 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__100607,G__100608,G__100609,G__100610,G__100611,G__100612,G__100613,G__100614,G__100615,G__100616,G__100617,G__100618,G__100619,G__100620,G__100621,G__100622,G__100623,G__100624,G__100625,G__100626,G__100627,G__100628,G__100629,G__100630,G__100631,G__100632,G__100633,G__100634,G__100635,G__100636,G__100637,G__100638,G__100639,G__100640,G__100641,G__100642,G__100643,G__100644,G__100645,G__100646,G__100647,G__100648) : tailrecursion.hoplon.pre.call(null,G__100607,G__100608,G__100609,G__100610,G__100611,G__100612,G__100613,G__100614,G__100615,G__100616,G__100617,G__100618,G__100619,G__100620,G__100621,G__100622,G__100623,G__100624,G__100625,G__100626,G__100627,G__100628,G__100629,G__100630,G__100631,G__100632,G__100633,G__100634,G__100635,G__100636,G__100637,G__100638,G__100639,G__100640,G__100641,G__100642,G__100643,G__100644,G__100645,G__100646,G__100647,G__100648));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100605,G__100606) : tailrecursion.hoplon.div.call(null,G__100605,G__100606));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100604) : tailrecursion.hoplon.div.call(null,G__100604));
})(),(function (){var G__100691 = cljs.core.PersistentArrayMap.EMPTY;
var G__100692 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100691,G__100692) : tailrecursion.hoplon.markdown.para_node.call(null,G__100691,G__100692));
})(),(function (){var G__100693 = (function (){var G__100694 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100695 = (function (){var G__100696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100697 = "(";
var G__100698 = (function (){var G__100708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100709 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100708,G__100709) : tailrecursion.hoplon.span.call(null,G__100708,G__100709));
})();
var G__100699 = (function (){var G__100710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100711 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100710,G__100711) : tailrecursion.hoplon.span.call(null,G__100710,G__100711));
})();
var G__100700 = " [";
var G__100701 = (function (){var G__100712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100713 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100712,G__100713) : tailrecursion.hoplon.span.call(null,G__100712,G__100713));
})();
var G__100702 = "]\n  (";
var G__100703 = (function (){var G__100714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100715 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100714,G__100715) : tailrecursion.hoplon.span.call(null,G__100714,G__100715));
})();
var G__100704 = (function (){var G__100716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100717 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100716,G__100717) : tailrecursion.hoplon.span.call(null,G__100716,G__100717));
})();
var G__100705 = " ";
var G__100706 = (function (){var G__100718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100719 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100718,G__100719) : tailrecursion.hoplon.span.call(null,G__100718,G__100719));
})();
var G__100707 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__100696,G__100697,G__100698,G__100699,G__100700,G__100701,G__100702,G__100703,G__100704,G__100705,G__100706,G__100707) : tailrecursion.hoplon.pre.call(null,G__100696,G__100697,G__100698,G__100699,G__100700,G__100701,G__100702,G__100703,G__100704,G__100705,G__100706,G__100707));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100694,G__100695) : tailrecursion.hoplon.div.call(null,G__100694,G__100695));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100693) : tailrecursion.hoplon.div.call(null,G__100693));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100551;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100550;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100549;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100548;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_100720 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100721 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100722 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100723 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100724 = (function (){var G__100725 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100726 = (function (){var G__100727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100728 = "(";
var G__100729 = (function (){var G__100775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100776 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100775,G__100776) : tailrecursion.hoplon.span.call(null,G__100775,G__100776));
})();
var G__100730 = (function (){var G__100777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100778 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100777,G__100778) : tailrecursion.hoplon.span.call(null,G__100777,G__100778));
})();
var G__100731 = " [";
var G__100732 = (function (){var G__100779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100780 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100779,G__100780) : tailrecursion.hoplon.span.call(null,G__100779,G__100780));
})();
var G__100733 = "]\n  (";
var G__100734 = (function (){var G__100781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100782 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100781,G__100782) : tailrecursion.hoplon.span.call(null,G__100781,G__100782));
})();
var G__100735 = "[";
var G__100736 = (function (){var G__100783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100784 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100783,G__100784) : tailrecursion.hoplon.span.call(null,G__100783,G__100784));
})();
var G__100737 = " ";
var G__100738 = (function (){var G__100785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100786 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100785,G__100786) : tailrecursion.hoplon.span.call(null,G__100785,G__100786));
})();
var G__100739 = "\n         ";
var G__100740 = (function (){var G__100787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100788 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100787,G__100788) : tailrecursion.hoplon.span.call(null,G__100787,G__100788));
})();
var G__100741 = "   (";
var G__100742 = (function (){var G__100789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100790 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100789,G__100790) : tailrecursion.hoplon.span.call(null,G__100789,G__100790));
})();
var G__100743 = ")]\n    (";
var G__100744 = (function (){var G__100791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100792 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100791,G__100792) : tailrecursion.hoplon.span.call(null,G__100791,G__100792));
})();
var G__100745 = "(";
var G__100746 = (function (){var G__100793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100794 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100793,G__100794) : tailrecursion.hoplon.span.call(null,G__100793,G__100794));
})();
var G__100747 = " ";
var G__100748 = (function (){var G__100795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100796 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100795,G__100796) : tailrecursion.hoplon.span.call(null,G__100795,G__100796));
})();
var G__100749 = ")\n        ";
var G__100750 = (function (){var G__100797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100798 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100797,G__100798) : tailrecursion.hoplon.span.call(null,G__100797,G__100798));
})();
var G__100751 = "\n        (";
var G__100752 = (function (){var G__100799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100800 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100799,G__100800) : tailrecursion.hoplon.span.call(null,G__100799,G__100800));
})();
var G__100753 = " (";
var G__100754 = (function (){var G__100801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100802 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100801,G__100802) : tailrecursion.hoplon.span.call(null,G__100801,G__100802));
})();
var G__100755 = (function (){var G__100803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100804 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100803,G__100804) : tailrecursion.hoplon.span.call(null,G__100803,G__100804));
})();
var G__100756 = ")\n               (";
var G__100757 = (function (){var G__100805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100806 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100805,G__100806) : tailrecursion.hoplon.span.call(null,G__100805,G__100806));
})();
var G__100758 = (function (){var G__100807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100808 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100807,G__100808) : tailrecursion.hoplon.span.call(null,G__100807,G__100808));
})();
var G__100759 = " (";
var G__100760 = (function (){var G__100809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100810 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100809,G__100810) : tailrecursion.hoplon.span.call(null,G__100809,G__100810));
})();
var G__100761 = " (";
var G__100762 = (function (){var G__100811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100812 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100811,G__100812) : tailrecursion.hoplon.span.call(null,G__100811,G__100812));
})();
var G__100763 = (function (){var G__100813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100814 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100813,G__100814) : tailrecursion.hoplon.span.call(null,G__100813,G__100814));
})();
var G__100764 = ")))))))\n\n(";
var G__100765 = (function (){var G__100815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100816 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100815,G__100816) : tailrecursion.hoplon.span.call(null,G__100815,G__100816));
})();
var G__100766 = (function (){var G__100817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100818 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100817,G__100818) : tailrecursion.hoplon.span.call(null,G__100817,G__100818));
})();
var G__100767 = " [";
var G__100768 = (function (){var G__100819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100820 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100819,G__100820) : tailrecursion.hoplon.span.call(null,G__100819,G__100820));
})();
var G__100769 = "]\n  (";
var G__100770 = (function (){var G__100821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100822 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100821,G__100822) : tailrecursion.hoplon.span.call(null,G__100821,G__100822));
})();
var G__100771 = (function (){var G__100823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100824 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100823,G__100824) : tailrecursion.hoplon.span.call(null,G__100823,G__100824));
})();
var G__100772 = " ";
var G__100773 = (function (){var G__100825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100826 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100825,G__100826) : tailrecursion.hoplon.span.call(null,G__100825,G__100826));
})();
var G__100774 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__100727,G__100728,G__100729,G__100730,G__100731,G__100732,G__100733,G__100734,G__100735,G__100736,G__100737,G__100738,G__100739,G__100740,G__100741,G__100742,G__100743,G__100744,G__100745,G__100746,G__100747,G__100748,G__100749,G__100750,G__100751,G__100752,G__100753,G__100754,G__100755,G__100756,G__100757,G__100758,G__100759,G__100760,G__100761,G__100762,G__100763,G__100764,G__100765,G__100766,G__100767,G__100768,G__100769,G__100770,G__100771,G__100772,G__100773,G__100774) : tailrecursion.hoplon.pre.call(null,G__100727,G__100728,G__100729,G__100730,G__100731,G__100732,G__100733,G__100734,G__100735,G__100736,G__100737,G__100738,G__100739,G__100740,G__100741,G__100742,G__100743,G__100744,G__100745,G__100746,G__100747,G__100748,G__100749,G__100750,G__100751,G__100752,G__100753,G__100754,G__100755,G__100756,G__100757,G__100758,G__100759,G__100760,G__100761,G__100762,G__100763,G__100764,G__100765,G__100766,G__100767,G__100768,G__100769,G__100770,G__100771,G__100772,G__100773,G__100774));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100725,G__100726) : tailrecursion.hoplon.div.call(null,G__100725,G__100726));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100724) : tailrecursion.hoplon.div.call(null,G__100724));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100723;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100722;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100721;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100720;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_100827 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100828 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100829 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100830 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100831 = cljs.core.PersistentArrayMap.EMPTY;
var G__100832 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner tries to rewrite the first ",(function (){var G__100833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__100834 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100833,G__100834) : tailrecursion.hoplon.markdown.code_node.call(null,G__100833,G__100834));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/21/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.21"], null)], 0))," so that it evolves an iterative process:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100831,G__100832) : tailrecursion.hoplon.markdown.para_node.call(null,G__100831,G__100832));
})(),(function (){var G__100835 = (function (){var G__100836 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100837 = (function (){var G__100838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100839 = "(";
var G__100840 = (function (){var G__100876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100877 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100876,G__100877) : tailrecursion.hoplon.span.call(null,G__100876,G__100877));
})();
var G__100841 = (function (){var G__100878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100879 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100878,G__100879) : tailrecursion.hoplon.span.call(null,G__100878,G__100879));
})();
var G__100842 = " [";
var G__100843 = (function (){var G__100880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100881 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100880,G__100881) : tailrecursion.hoplon.span.call(null,G__100880,G__100881));
})();
var G__100844 = "]\n  (";
var G__100845 = (function (){var G__100882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100883 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100882,G__100883) : tailrecursion.hoplon.span.call(null,G__100882,G__100883));
})();
var G__100846 = "[";
var G__100847 = (function (){var G__100884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100885 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100884,G__100885) : tailrecursion.hoplon.span.call(null,G__100884,G__100885));
})();
var G__100848 = " ";
var G__100849 = (function (){var G__100886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100887 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100886,G__100887) : tailrecursion.hoplon.span.call(null,G__100886,G__100887));
})();
var G__100850 = "\n         ";
var G__100851 = (function (){var G__100888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100889 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100888,G__100889) : tailrecursion.hoplon.span.call(null,G__100888,G__100889));
})();
var G__100852 = "   (";
var G__100853 = (function (){var G__100890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100891 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100890,G__100891) : tailrecursion.hoplon.span.call(null,G__100890,G__100891));
})();
var G__100854 = ")]\n    (";
var G__100855 = (function (){var G__100892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100893 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100892,G__100893) : tailrecursion.hoplon.span.call(null,G__100892,G__100893));
})();
var G__100856 = "(";
var G__100857 = (function (){var G__100894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100895 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100894,G__100895) : tailrecursion.hoplon.span.call(null,G__100894,G__100895));
})();
var G__100858 = " ";
var G__100859 = (function (){var G__100896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100897 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100896,G__100897) : tailrecursion.hoplon.span.call(null,G__100896,G__100897));
})();
var G__100860 = ")\n        ";
var G__100861 = (function (){var G__100898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100899 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100898,G__100899) : tailrecursion.hoplon.span.call(null,G__100898,G__100899));
})();
var G__100862 = "\n        (";
var G__100863 = (function (){var G__100900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100901 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100900,G__100901) : tailrecursion.hoplon.span.call(null,G__100900,G__100901));
})();
var G__100864 = " (";
var G__100865 = (function (){var G__100902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100903 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100902,G__100903) : tailrecursion.hoplon.span.call(null,G__100902,G__100903));
})();
var G__100866 = (function (){var G__100904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100905 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100904,G__100905) : tailrecursion.hoplon.span.call(null,G__100904,G__100905));
})();
var G__100867 = ")\n               (";
var G__100868 = (function (){var G__100906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100907 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100906,G__100907) : tailrecursion.hoplon.span.call(null,G__100906,G__100907));
})();
var G__100869 = (function (){var G__100908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100909 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100908,G__100909) : tailrecursion.hoplon.span.call(null,G__100908,G__100909));
})();
var G__100870 = " \n                     (";
var G__100871 = (function (){var G__100910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__100911 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100910,G__100911) : tailrecursion.hoplon.span.call(null,G__100910,G__100911));
})();
var G__100872 = " (";
var G__100873 = (function (){var G__100912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__100913 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100912,G__100913) : tailrecursion.hoplon.span.call(null,G__100912,G__100913));
})();
var G__100874 = (function (){var G__100914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100915 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100914,G__100915) : tailrecursion.hoplon.span.call(null,G__100914,G__100915));
})();
var G__100875 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__100838,G__100839,G__100840,G__100841,G__100842,G__100843,G__100844,G__100845,G__100846,G__100847,G__100848,G__100849,G__100850,G__100851,G__100852,G__100853,G__100854,G__100855,G__100856,G__100857,G__100858,G__100859,G__100860,G__100861,G__100862,G__100863,G__100864,G__100865,G__100866,G__100867,G__100868,G__100869,G__100870,G__100871,G__100872,G__100873,G__100874,G__100875) : tailrecursion.hoplon.pre.call(null,G__100838,G__100839,G__100840,G__100841,G__100842,G__100843,G__100844,G__100845,G__100846,G__100847,G__100848,G__100849,G__100850,G__100851,G__100852,G__100853,G__100854,G__100855,G__100856,G__100857,G__100858,G__100859,G__100860,G__100861,G__100862,G__100863,G__100864,G__100865,G__100866,G__100867,G__100868,G__100869,G__100870,G__100871,G__100872,G__100873,G__100874,G__100875));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100836,G__100837) : tailrecursion.hoplon.div.call(null,G__100836,G__100837));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100835) : tailrecursion.hoplon.div.call(null,G__100835));
})(),(function (){var G__100916 = cljs.core.PersistentArrayMap.EMPTY;
var G__100917 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, defining ",(function (){var G__100918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__100919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100918,G__100919) : tailrecursion.hoplon.markdown.code_node.call(null,G__100918,G__100919));
})()," this way produces the answer list in the reverse order of the one desired. Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100916,G__100917) : tailrecursion.hoplon.markdown.para_node.call(null,G__100916,G__100917));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100830;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100829;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100828;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100827;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_100920 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100921 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100922 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100923 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100924 = cljs.core.PersistentArrayMap.EMPTY;
var G__100925 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As you probably noticed, I used an auxiliary function (decorated with an asterisk) to define the iterative part, then the actual function just applies ",(function (){var G__100926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__100927 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100926,G__100927) : tailrecursion.hoplon.markdown.code_node.call(null,G__100926,G__100927));
})()," to the auxiliary one. The reason is, every time we ",(function (){var G__100928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__100929 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100928,G__100929) : tailrecursion.hoplon.markdown.code_node.call(null,G__100928,G__100929));
})()," onto a list, the things get put out in front. So if we take things off the front of one list, then put them on the front of the other, we",(function (){var G__100930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__100931 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__100930,G__100931) : tailrecursion.hoplon.markdown.simple_node.call(null,G__100930,G__100931));
})(),"re reversing the order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100924,G__100925) : tailrecursion.hoplon.markdown.para_node.call(null,G__100924,G__100925));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100923;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100922;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100921;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100920;
}})()], 0)),"",(function (){var _STAR_references_STAR_100932 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100933 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_100934 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_100935 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__100936 = cljs.core.PersistentArrayMap.EMPTY;
var G__100937 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis then tries to fix his bug by using ",(function (){var G__100938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__100939 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100938,G__100939) : tailrecursion.hoplon.markdown.code_node.call(null,G__100938,G__100939));
})()," instead of ",(function (){var G__100940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__100941 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100940,G__100941) : tailrecursion.hoplon.markdown.code_node.call(null,G__100940,G__100941));
})(),", and interchanging the arguments to ",(function (){var G__100942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__100943 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__100942,G__100943) : tailrecursion.hoplon.markdown.code_node.call(null,G__100942,G__100943));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__100936,G__100937) : tailrecursion.hoplon.markdown.para_node.call(null,G__100936,G__100937));
})(),(function (){var G__100944 = (function (){var G__100945 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__100946 = (function (){var G__100947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__100948 = "(";
var G__100949 = (function (){var G__100985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100986 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100985,G__100986) : tailrecursion.hoplon.span.call(null,G__100985,G__100986));
})();
var G__100950 = (function (){var G__100987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100988 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100987,G__100988) : tailrecursion.hoplon.span.call(null,G__100987,G__100988));
})();
var G__100951 = " [";
var G__100952 = (function (){var G__100989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100990 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100989,G__100990) : tailrecursion.hoplon.span.call(null,G__100989,G__100990));
})();
var G__100953 = "]\n  (";
var G__100954 = (function (){var G__100991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__100992 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100991,G__100992) : tailrecursion.hoplon.span.call(null,G__100991,G__100992));
})();
var G__100955 = "[";
var G__100956 = (function (){var G__100993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100994 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100993,G__100994) : tailrecursion.hoplon.span.call(null,G__100993,G__100994));
})();
var G__100957 = " ";
var G__100958 = (function (){var G__100995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100996 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100995,G__100996) : tailrecursion.hoplon.span.call(null,G__100995,G__100996));
})();
var G__100959 = "\n         ";
var G__100960 = (function (){var G__100997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__100998 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100997,G__100998) : tailrecursion.hoplon.span.call(null,G__100997,G__100998));
})();
var G__100961 = "   (";
var G__100962 = (function (){var G__100999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101000 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__100999,G__101000) : tailrecursion.hoplon.span.call(null,G__100999,G__101000));
})();
var G__100963 = ")]\n    (";
var G__100964 = (function (){var G__101001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101002 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101001,G__101002) : tailrecursion.hoplon.span.call(null,G__101001,G__101002));
})();
var G__100965 = "(";
var G__100966 = (function (){var G__101003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101004 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101003,G__101004) : tailrecursion.hoplon.span.call(null,G__101003,G__101004));
})();
var G__100967 = " ";
var G__100968 = (function (){var G__101005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101006 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101005,G__101006) : tailrecursion.hoplon.span.call(null,G__101005,G__101006));
})();
var G__100969 = ")\n        ";
var G__100970 = (function (){var G__101007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101008 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101007,G__101008) : tailrecursion.hoplon.span.call(null,G__101007,G__101008));
})();
var G__100971 = "\n        (";
var G__100972 = (function (){var G__101009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101010 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101009,G__101010) : tailrecursion.hoplon.span.call(null,G__101009,G__101010));
})();
var G__100973 = " (";
var G__100974 = (function (){var G__101011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101012 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101011,G__101012) : tailrecursion.hoplon.span.call(null,G__101011,G__101012));
})();
var G__100975 = (function (){var G__101013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101014 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101013,G__101014) : tailrecursion.hoplon.span.call(null,G__101013,G__101014));
})();
var G__100976 = ")\n               (";
var G__100977 = (function (){var G__101015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101016 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101015,G__101016) : tailrecursion.hoplon.span.call(null,G__101015,G__101016));
})();
var G__100978 = (function (){var G__101017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101018 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101017,G__101018) : tailrecursion.hoplon.span.call(null,G__101017,G__101018));
})();
var G__100979 = "\n                     (";
var G__100980 = (function (){var G__101019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101020 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101019,G__101020) : tailrecursion.hoplon.span.call(null,G__101019,G__101020));
})();
var G__100981 = " (";
var G__100982 = (function (){var G__101021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101022 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101021,G__101022) : tailrecursion.hoplon.span.call(null,G__101021,G__101022));
})();
var G__100983 = (function (){var G__101023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101024 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101023,G__101024) : tailrecursion.hoplon.span.call(null,G__101023,G__101024));
})();
var G__100984 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__100947,G__100948,G__100949,G__100950,G__100951,G__100952,G__100953,G__100954,G__100955,G__100956,G__100957,G__100958,G__100959,G__100960,G__100961,G__100962,G__100963,G__100964,G__100965,G__100966,G__100967,G__100968,G__100969,G__100970,G__100971,G__100972,G__100973,G__100974,G__100975,G__100976,G__100977,G__100978,G__100979,G__100980,G__100981,G__100982,G__100983,G__100984) : tailrecursion.hoplon.pre.call(null,G__100947,G__100948,G__100949,G__100950,G__100951,G__100952,G__100953,G__100954,G__100955,G__100956,G__100957,G__100958,G__100959,G__100960,G__100961,G__100962,G__100963,G__100964,G__100965,G__100966,G__100967,G__100968,G__100969,G__100970,G__100971,G__100972,G__100973,G__100974,G__100975,G__100976,G__100977,G__100978,G__100979,G__100980,G__100981,G__100982,G__100983,G__100984));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__100945,G__100946) : tailrecursion.hoplon.div.call(null,G__100945,G__100946));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__100944) : tailrecursion.hoplon.div.call(null,G__100944));
})(),(function (){var G__101025 = cljs.core.PersistentArrayMap.EMPTY;
var G__101026 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This doesn",(function (){var G__101027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101028 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101027,G__101028) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101027,G__101028));
})(),"t work either. Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101025,G__101026) : tailrecursion.hoplon.markdown.para_node.call(null,G__101025,G__101026));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100935;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100934;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_100933;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_100932;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_101029 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101030 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101031 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101032 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101033 = cljs.core.PersistentArrayMap.EMPTY;
var G__101034 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is not how lists are constructed. Let",(function (){var G__101035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101036 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101035,G__101036) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101035,G__101036));
})(),"s see what happens with an actual example. Let",(function (){var G__101037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101037,G__101038) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101037,G__101038));
})(),"s see what this would return:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101033,G__101034) : tailrecursion.hoplon.markdown.para_node.call(null,G__101033,G__101034));
})(),(function (){var G__101039 = (function (){var G__101040 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101041 = (function (){var G__101042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101043 = "(";
var G__101044 = (function (){var G__101173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101174 = "square-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101173,G__101174) : tailrecursion.hoplon.span.call(null,G__101173,G__101174));
})();
var G__101045 = " (";
var G__101046 = (function (){var G__101175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101176 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101175,G__101176) : tailrecursion.hoplon.span.call(null,G__101175,G__101176));
})();
var G__101047 = (function (){var G__101177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101178 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101177,G__101178) : tailrecursion.hoplon.span.call(null,G__101177,G__101178));
})();
var G__101048 = " ";
var G__101049 = (function (){var G__101179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101180 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101179,G__101180) : tailrecursion.hoplon.span.call(null,G__101179,G__101180));
})();
var G__101050 = " ";
var G__101051 = (function (){var G__101181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101182 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101181,G__101182) : tailrecursion.hoplon.span.call(null,G__101181,G__101182));
})();
var G__101052 = "))\n(";
var G__101053 = (function (){var G__101183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101184 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101183,G__101184) : tailrecursion.hoplon.span.call(null,G__101183,G__101184));
})();
var G__101054 = "[";
var G__101055 = (function (){var G__101185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101186 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101185,G__101186) : tailrecursion.hoplon.span.call(null,G__101185,G__101186));
})();
var G__101056 = " (";
var G__101057 = (function (){var G__101187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101188 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101187,G__101188) : tailrecursion.hoplon.span.call(null,G__101187,G__101188));
})();
var G__101058 = (function (){var G__101189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101190 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101189,G__101190) : tailrecursion.hoplon.span.call(null,G__101189,G__101190));
})();
var G__101059 = " ";
var G__101060 = (function (){var G__101191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101192 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101191,G__101192) : tailrecursion.hoplon.span.call(null,G__101191,G__101192));
})();
var G__101061 = " ";
var G__101062 = (function (){var G__101193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101194 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101193,G__101194) : tailrecursion.hoplon.span.call(null,G__101193,G__101194));
})();
var G__101063 = ")\n       ";
var G__101064 = (function (){var G__101195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101196 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101195,G__101196) : tailrecursion.hoplon.span.call(null,G__101195,G__101196));
})();
var G__101065 = "  (";
var G__101066 = (function (){var G__101197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101198 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101197,G__101198) : tailrecursion.hoplon.span.call(null,G__101197,G__101198));
})();
var G__101067 = ")]\n  (";
var G__101068 = (function (){var G__101199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101200 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101199,G__101200) : tailrecursion.hoplon.span.call(null,G__101199,G__101200));
})();
var G__101069 = "(";
var G__101070 = (function (){var G__101201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101202 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101201,G__101202) : tailrecursion.hoplon.span.call(null,G__101201,G__101202));
})();
var G__101071 = " (";
var G__101072 = (function (){var G__101203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101204 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101203,G__101204) : tailrecursion.hoplon.span.call(null,G__101203,G__101204));
})();
var G__101073 = (function (){var G__101205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101206 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101205,G__101206) : tailrecursion.hoplon.span.call(null,G__101205,G__101206));
})();
var G__101074 = " ";
var G__101075 = (function (){var G__101207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101208 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101207,G__101208) : tailrecursion.hoplon.span.call(null,G__101207,G__101208));
})();
var G__101076 = " ";
var G__101077 = (function (){var G__101209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101210 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101209,G__101210) : tailrecursion.hoplon.span.call(null,G__101209,G__101210));
})();
var G__101078 = "))\n      ";
var G__101079 = (function (){var G__101211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101212 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101211,G__101212) : tailrecursion.hoplon.span.call(null,G__101211,G__101212));
})();
var G__101080 = "\n      (";
var G__101081 = (function (){var G__101213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101214 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101213,G__101214) : tailrecursion.hoplon.span.call(null,G__101213,G__101214));
})();
var G__101082 = " (";
var G__101083 = (function (){var G__101215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101216 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101215,G__101216) : tailrecursion.hoplon.span.call(null,G__101215,G__101216));
})();
var G__101084 = "(";
var G__101085 = (function (){var G__101217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101218 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101217,G__101218) : tailrecursion.hoplon.span.call(null,G__101217,G__101218));
})();
var G__101086 = (function (){var G__101219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101220 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101219,G__101220) : tailrecursion.hoplon.span.call(null,G__101219,G__101220));
})();
var G__101087 = " ";
var G__101088 = (function (){var G__101221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101222 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101221,G__101222) : tailrecursion.hoplon.span.call(null,G__101221,G__101222));
})();
var G__101089 = " ";
var G__101090 = (function (){var G__101223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101224 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101223,G__101224) : tailrecursion.hoplon.span.call(null,G__101223,G__101224));
})();
var G__101091 = "))\n             (";
var G__101092 = (function (){var G__101225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101226 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101225,G__101226) : tailrecursion.hoplon.span.call(null,G__101225,G__101226));
})();
var G__101093 = (function (){var G__101227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101228 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101227,G__101228) : tailrecursion.hoplon.span.call(null,G__101227,G__101228));
})();
var G__101094 = " \n                   (";
var G__101095 = (function (){var G__101229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101230 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101229,G__101230) : tailrecursion.hoplon.span.call(null,G__101229,G__101230));
})();
var G__101096 = " (";
var G__101097 = (function (){var G__101231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101232 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101231,G__101232) : tailrecursion.hoplon.span.call(null,G__101231,G__101232));
})();
var G__101098 = "(";
var G__101099 = (function (){var G__101233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101234 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101233,G__101234) : tailrecursion.hoplon.span.call(null,G__101233,G__101234));
})();
var G__101100 = (function (){var G__101235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101236 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101235,G__101236) : tailrecursion.hoplon.span.call(null,G__101235,G__101236));
})();
var G__101101 = " ";
var G__101102 = (function (){var G__101237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101238 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101237,G__101238) : tailrecursion.hoplon.span.call(null,G__101237,G__101238));
})();
var G__101103 = " ";
var G__101104 = (function (){var G__101239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101240 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101239,G__101240) : tailrecursion.hoplon.span.call(null,G__101239,G__101240));
})();
var G__101105 = ")))))))\n(";
var G__101106 = (function (){var G__101241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101242 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101241,G__101242) : tailrecursion.hoplon.span.call(null,G__101241,G__101242));
})();
var G__101107 = " ";
var G__101108 = (function (){var G__101243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101244 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101243,G__101244) : tailrecursion.hoplon.span.call(null,G__101243,G__101244));
})();
var G__101109 = (function (){var G__101245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101246 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101245,G__101246) : tailrecursion.hoplon.span.call(null,G__101245,G__101246));
})();
var G__101110 = " ";
var G__101111 = (function (){var G__101247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101248 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101247,G__101248) : tailrecursion.hoplon.span.call(null,G__101247,G__101248));
})();
var G__101112 = " ";
var G__101113 = (function (){var G__101249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101250 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101249,G__101250) : tailrecursion.hoplon.span.call(null,G__101249,G__101250));
})();
var G__101114 = ") ";
var G__101115 = (function (){var G__101251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__101252 = ";false, so...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101251,G__101252) : tailrecursion.hoplon.span.call(null,G__101251,G__101252));
})();
var G__101116 = "\n(";
var G__101117 = (function (){var G__101253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101254 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101253,G__101254) : tailrecursion.hoplon.span.call(null,G__101253,G__101254));
})();
var G__101118 = " (";
var G__101119 = (function (){var G__101255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101256 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101255,G__101256) : tailrecursion.hoplon.span.call(null,G__101255,G__101256));
})();
var G__101120 = "(";
var G__101121 = (function (){var G__101257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101258 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101257,G__101258) : tailrecursion.hoplon.span.call(null,G__101257,G__101258));
})();
var G__101122 = (function (){var G__101259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101260 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101259,G__101260) : tailrecursion.hoplon.span.call(null,G__101259,G__101260));
})();
var G__101123 = " ";
var G__101124 = (function (){var G__101261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101262 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101261,G__101262) : tailrecursion.hoplon.span.call(null,G__101261,G__101262));
})();
var G__101125 = " ";
var G__101126 = (function (){var G__101263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101264 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101263,G__101264) : tailrecursion.hoplon.span.call(null,G__101263,G__101264));
})();
var G__101127 = "))\n       (";
var G__101128 = (function (){var G__101265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101266 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101265,G__101266) : tailrecursion.hoplon.span.call(null,G__101265,G__101266));
})();
var G__101129 = "(";
var G__101130 = (function (){var G__101267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101268 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101267,G__101268) : tailrecursion.hoplon.span.call(null,G__101267,G__101268));
})();
var G__101131 = ")\n             (";
var G__101132 = (function (){var G__101269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101270 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101269,G__101270) : tailrecursion.hoplon.span.call(null,G__101269,G__101270));
})();
var G__101133 = " (";
var G__101134 = (function (){var G__101271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101272 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101271,G__101272) : tailrecursion.hoplon.span.call(null,G__101271,G__101272));
})();
var G__101135 = "(";
var G__101136 = (function (){var G__101273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101274 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101273,G__101274) : tailrecursion.hoplon.span.call(null,G__101273,G__101274));
})();
var G__101137 = (function (){var G__101275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101276 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101275,G__101276) : tailrecursion.hoplon.span.call(null,G__101275,G__101276));
})();
var G__101138 = " ";
var G__101139 = (function (){var G__101277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101278 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101277,G__101278) : tailrecursion.hoplon.span.call(null,G__101277,G__101278));
})();
var G__101140 = " ";
var G__101141 = (function (){var G__101279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101280 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101279,G__101280) : tailrecursion.hoplon.span.call(null,G__101279,G__101280));
})();
var G__101142 = ")))))\n(";
var G__101143 = (function (){var G__101281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101282 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101281,G__101282) : tailrecursion.hoplon.span.call(null,G__101281,G__101282));
})();
var G__101144 = " (";
var G__101145 = (function (){var G__101283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101284 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101283,G__101284) : tailrecursion.hoplon.span.call(null,G__101283,G__101284));
})();
var G__101146 = (function (){var G__101285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101286 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101285,G__101286) : tailrecursion.hoplon.span.call(null,G__101285,G__101286));
})();
var G__101147 = " ";
var G__101148 = (function (){var G__101287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101288 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101287,G__101288) : tailrecursion.hoplon.span.call(null,G__101287,G__101288));
})();
var G__101149 = ")\n       (";
var G__101150 = (function (){var G__101289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101290 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101289,G__101290) : tailrecursion.hoplon.span.call(null,G__101289,G__101290));
})();
var G__101151 = "(";
var G__101152 = (function (){var G__101291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101292 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101291,G__101292) : tailrecursion.hoplon.span.call(null,G__101291,G__101292));
})();
var G__101153 = ")\n             (";
var G__101154 = (function (){var G__101293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101294 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101293,G__101294) : tailrecursion.hoplon.span.call(null,G__101293,G__101294));
})();
var G__101155 = " ";
var G__101156 = (function (){var G__101295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101296 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101295,G__101296) : tailrecursion.hoplon.span.call(null,G__101295,G__101296));
})();
var G__101157 = ")))\n(";
var G__101158 = (function (){var G__101297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101298 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101297,G__101298) : tailrecursion.hoplon.span.call(null,G__101297,G__101298));
})();
var G__101159 = " (";
var G__101160 = (function (){var G__101299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101300 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101299,G__101300) : tailrecursion.hoplon.span.call(null,G__101299,G__101300));
})();
var G__101161 = (function (){var G__101301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101302 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101301,G__101302) : tailrecursion.hoplon.span.call(null,G__101301,G__101302));
})();
var G__101162 = " ";
var G__101163 = (function (){var G__101303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101304 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101303,G__101304) : tailrecursion.hoplon.span.call(null,G__101303,G__101304));
})();
var G__101164 = ")\n       (";
var G__101165 = (function (){var G__101305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101306 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101305,G__101306) : tailrecursion.hoplon.span.call(null,G__101305,G__101306));
})();
var G__101166 = "(";
var G__101167 = (function (){var G__101307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101308 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101307,G__101308) : tailrecursion.hoplon.span.call(null,G__101307,G__101308));
})();
var G__101168 = ")\n             ";
var G__101169 = (function (){var G__101309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101310 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101309,G__101310) : tailrecursion.hoplon.span.call(null,G__101309,G__101310));
})();
var G__101170 = "))\n";
var G__101171 = (function (){var G__101311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__101312 = ";Error: Don't know how to create ISeq from Java Long.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101311,G__101312) : tailrecursion.hoplon.span.call(null,G__101311,G__101312));
})();
var G__101172 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$131 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$131(G__101042,G__101043,G__101044,G__101045,G__101046,G__101047,G__101048,G__101049,G__101050,G__101051,G__101052,G__101053,G__101054,G__101055,G__101056,G__101057,G__101058,G__101059,G__101060,G__101061,G__101062,G__101063,G__101064,G__101065,G__101066,G__101067,G__101068,G__101069,G__101070,G__101071,G__101072,G__101073,G__101074,G__101075,G__101076,G__101077,G__101078,G__101079,G__101080,G__101081,G__101082,G__101083,G__101084,G__101085,G__101086,G__101087,G__101088,G__101089,G__101090,G__101091,G__101092,G__101093,G__101094,G__101095,G__101096,G__101097,G__101098,G__101099,G__101100,G__101101,G__101102,G__101103,G__101104,G__101105,G__101106,G__101107,G__101108,G__101109,G__101110,G__101111,G__101112,G__101113,G__101114,G__101115,G__101116,G__101117,G__101118,G__101119,G__101120,G__101121,G__101122,G__101123,G__101124,G__101125,G__101126,G__101127,G__101128,G__101129,G__101130,G__101131,G__101132,G__101133,G__101134,G__101135,G__101136,G__101137,G__101138,G__101139,G__101140,G__101141,G__101142,G__101143,G__101144,G__101145,G__101146,G__101147,G__101148,G__101149,G__101150,G__101151,G__101152,G__101153,G__101154,G__101155,G__101156,G__101157,G__101158,G__101159,G__101160,G__101161,G__101162,G__101163,G__101164,G__101165,G__101166,G__101167,G__101168,G__101169,G__101170,G__101171,G__101172) : tailrecursion.hoplon.pre.call(null,G__101042,G__101043,G__101044,G__101045,G__101046,G__101047,G__101048,G__101049,G__101050,G__101051,G__101052,G__101053,G__101054,G__101055,G__101056,G__101057,G__101058,G__101059,G__101060,G__101061,G__101062,G__101063,G__101064,G__101065,G__101066,G__101067,G__101068,G__101069,G__101070,G__101071,G__101072,G__101073,G__101074,G__101075,G__101076,G__101077,G__101078,G__101079,G__101080,G__101081,G__101082,G__101083,G__101084,G__101085,G__101086,G__101087,G__101088,G__101089,G__101090,G__101091,G__101092,G__101093,G__101094,G__101095,G__101096,G__101097,G__101098,G__101099,G__101100,G__101101,G__101102,G__101103,G__101104,G__101105,G__101106,G__101107,G__101108,G__101109,G__101110,G__101111,G__101112,G__101113,G__101114,G__101115,G__101116,G__101117,G__101118,G__101119,G__101120,G__101121,G__101122,G__101123,G__101124,G__101125,G__101126,G__101127,G__101128,G__101129,G__101130,G__101131,G__101132,G__101133,G__101134,G__101135,G__101136,G__101137,G__101138,G__101139,G__101140,G__101141,G__101142,G__101143,G__101144,G__101145,G__101146,G__101147,G__101148,G__101149,G__101150,G__101151,G__101152,G__101153,G__101154,G__101155,G__101156,G__101157,G__101158,G__101159,G__101160,G__101161,G__101162,G__101163,G__101164,G__101165,G__101166,G__101167,G__101168,G__101169,G__101170,G__101171,G__101172));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101040,G__101041) : tailrecursion.hoplon.div.call(null,G__101040,G__101041));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101039) : tailrecursion.hoplon.div.call(null,G__101039));
})(),(function (){var G__101313 = cljs.core.PersistentArrayMap.EMPTY;
var G__101314 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["That happened because ",(function (){var G__101315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__101316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101315,G__101316) : tailrecursion.hoplon.markdown.code_node.call(null,G__101315,G__101316));
})()," requires a sequential object as its second argument. Since numbers are not sequential objects, we get that error."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101313,G__101314) : tailrecursion.hoplon.markdown.para_node.call(null,G__101313,G__101314));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101032;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101031;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101030;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101029;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_101317 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101318 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101319 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101320 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101321 = cljs.core.PersistentArrayMap.EMPTY;
var G__101322 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Scheme procedure ",(function (){var G__101323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__101324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101323,G__101324) : tailrecursion.hoplon.markdown.code_node.call(null,G__101323,G__101324));
})()," is similar to ",(function (){var G__101325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__101326 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101325,G__101326) : tailrecursion.hoplon.markdown.code_node.call(null,G__101325,G__101326));
})(),". It takes as arguments a procedure and a list of elements. However, rather than forming a list of the results, ",(function (){var G__101327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__101328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101327,G__101328) : tailrecursion.hoplon.markdown.code_node.call(null,G__101327,G__101328));
})()," just applies the procedure to each of the elements in turn, from left to right. The values returned by applying the procedure to the elements are not used at all ",(function (){var G__101329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__101330 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101329,G__101330) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101329,G__101330));
})(),(function (){var G__101331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__101332 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101331,G__101332) : tailrecursion.hoplon.markdown.code_node.call(null,G__101331,G__101332));
})()," is used with procedures that perform an action, such as printing. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101321,G__101322) : tailrecursion.hoplon.markdown.para_node.call(null,G__101321,G__101322));
})(),(function (){var G__101333 = (function (){var G__101334 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101335 = (function (){var G__101336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101337 = "(";
var G__101338 = (function (){var G__101362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101363 = "for-each ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101362,G__101363) : tailrecursion.hoplon.span.call(null,G__101362,G__101363));
})();
var G__101339 = "(";
var G__101340 = (function (){var G__101364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101365 = "lambda ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101364,G__101365) : tailrecursion.hoplon.span.call(null,G__101364,G__101365));
})();
var G__101341 = "(";
var G__101342 = (function (){var G__101366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101367 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101366,G__101367) : tailrecursion.hoplon.span.call(null,G__101366,G__101367));
})();
var G__101343 = ") (";
var G__101344 = (function (){var G__101368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101369 = "newline";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101368,G__101369) : tailrecursion.hoplon.span.call(null,G__101368,G__101369));
})();
var G__101345 = ") (";
var G__101346 = (function (){var G__101370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101371 = "display ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101370,G__101371) : tailrecursion.hoplon.span.call(null,G__101370,G__101371));
})();
var G__101347 = (function (){var G__101372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101373 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101372,G__101373) : tailrecursion.hoplon.span.call(null,G__101372,G__101373));
})();
var G__101348 = ")) \n          (";
var G__101349 = (function (){var G__101374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101375 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101374,G__101375) : tailrecursion.hoplon.span.call(null,G__101374,G__101375));
})();
var G__101350 = (function (){var G__101376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101377 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101376,G__101377) : tailrecursion.hoplon.span.call(null,G__101376,G__101377));
})();
var G__101351 = " ";
var G__101352 = (function (){var G__101378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101379 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101378,G__101379) : tailrecursion.hoplon.span.call(null,G__101378,G__101379));
})();
var G__101353 = " ";
var G__101354 = (function (){var G__101380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101381 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101380,G__101381) : tailrecursion.hoplon.span.call(null,G__101380,G__101381));
})();
var G__101355 = "))\n";
var G__101356 = (function (){var G__101382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101383 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101382,G__101383) : tailrecursion.hoplon.span.call(null,G__101382,G__101383));
})();
var G__101357 = "\n";
var G__101358 = (function (){var G__101384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101385 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101384,G__101385) : tailrecursion.hoplon.span.call(null,G__101384,G__101385));
})();
var G__101359 = "\n";
var G__101360 = (function (){var G__101386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101387 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101386,G__101387) : tailrecursion.hoplon.span.call(null,G__101386,G__101387));
})();
var G__101361 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__101336,G__101337,G__101338,G__101339,G__101340,G__101341,G__101342,G__101343,G__101344,G__101345,G__101346,G__101347,G__101348,G__101349,G__101350,G__101351,G__101352,G__101353,G__101354,G__101355,G__101356,G__101357,G__101358,G__101359,G__101360,G__101361) : tailrecursion.hoplon.pre.call(null,G__101336,G__101337,G__101338,G__101339,G__101340,G__101341,G__101342,G__101343,G__101344,G__101345,G__101346,G__101347,G__101348,G__101349,G__101350,G__101351,G__101352,G__101353,G__101354,G__101355,G__101356,G__101357,G__101358,G__101359,G__101360,G__101361));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101334,G__101335) : tailrecursion.hoplon.div.call(null,G__101334,G__101335));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101333) : tailrecursion.hoplon.div.call(null,G__101333));
})(),(function (){var G__101388 = cljs.core.PersistentArrayMap.EMPTY;
var G__101389 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have something similar in Clojure, called ",(function (){var G__101390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__101391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101390,G__101391) : tailrecursion.hoplon.markdown.code_node.call(null,G__101390,G__101391));
})(),". The function differs mainly in the syntax for calling it. In the traditional Clojurian sytnax, it starts out with bindings, then you just say what you want it to do. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101388,G__101389) : tailrecursion.hoplon.markdown.para_node.call(null,G__101388,G__101389));
})(),(function (){var G__101392 = (function (){var G__101393 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101394 = (function (){var G__101395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101396 = "(";
var G__101397 = (function (){var G__101417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101418 = "doseq ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101417,G__101418) : tailrecursion.hoplon.span.call(null,G__101417,G__101418));
})();
var G__101398 = "[";
var G__101399 = (function (){var G__101419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101420 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101419,G__101420) : tailrecursion.hoplon.span.call(null,G__101419,G__101420));
})();
var G__101400 = " (";
var G__101401 = (function (){var G__101421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101422 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101421,G__101422) : tailrecursion.hoplon.span.call(null,G__101421,G__101422));
})();
var G__101402 = (function (){var G__101423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101424 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101423,G__101424) : tailrecursion.hoplon.span.call(null,G__101423,G__101424));
})();
var G__101403 = " ";
var G__101404 = (function (){var G__101425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101426 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101425,G__101426) : tailrecursion.hoplon.span.call(null,G__101425,G__101426));
})();
var G__101405 = " ";
var G__101406 = (function (){var G__101427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101428 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101427,G__101428) : tailrecursion.hoplon.span.call(null,G__101427,G__101428));
})();
var G__101407 = ")]\n  (";
var G__101408 = (function (){var G__101429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101430 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101429,G__101430) : tailrecursion.hoplon.span.call(null,G__101429,G__101430));
})();
var G__101409 = (function (){var G__101431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101432 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101431,G__101432) : tailrecursion.hoplon.span.call(null,G__101431,G__101432));
})();
var G__101410 = "))\n";
var G__101411 = (function (){var G__101433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101434 = "57";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101433,G__101434) : tailrecursion.hoplon.span.call(null,G__101433,G__101434));
})();
var G__101412 = "\n";
var G__101413 = (function (){var G__101435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101436 = "321";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101435,G__101436) : tailrecursion.hoplon.span.call(null,G__101435,G__101436));
})();
var G__101414 = "\n";
var G__101415 = (function (){var G__101437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101438 = "88";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101437,G__101438) : tailrecursion.hoplon.span.call(null,G__101437,G__101438));
})();
var G__101416 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__101395,G__101396,G__101397,G__101398,G__101399,G__101400,G__101401,G__101402,G__101403,G__101404,G__101405,G__101406,G__101407,G__101408,G__101409,G__101410,G__101411,G__101412,G__101413,G__101414,G__101415,G__101416) : tailrecursion.hoplon.pre.call(null,G__101395,G__101396,G__101397,G__101398,G__101399,G__101400,G__101401,G__101402,G__101403,G__101404,G__101405,G__101406,G__101407,G__101408,G__101409,G__101410,G__101411,G__101412,G__101413,G__101414,G__101415,G__101416));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101393,G__101394) : tailrecursion.hoplon.div.call(null,G__101393,G__101394));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101392) : tailrecursion.hoplon.div.call(null,G__101392));
})(),(function (){var G__101439 = cljs.core.PersistentArrayMap.EMPTY;
var G__101440 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You might notice, if you are following along with an open repl trying these things for yourself, that ",(function (){var G__101441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101442 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101441,G__101442) : tailrecursion.hoplon.markdown.code_node.call(null,G__101441,G__101442));
})()," was printed below the 88. That is because, like everything else in Clojure, ",(function (){var G__101443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__101444 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101443,G__101444) : tailrecursion.hoplon.markdown.code_node.call(null,G__101443,G__101444));
})()," returns a value, which happens to be ",(function (){var G__101445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101446 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101445,G__101446) : tailrecursion.hoplon.markdown.code_node.call(null,G__101445,G__101446));
})(),". ",(function (){var G__101447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__101448 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101447,G__101448) : tailrecursion.hoplon.markdown.code_node.call(null,G__101447,G__101448));
})()," always returns ",(function (){var G__101449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"nil"], null);
var G__101450 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101449,G__101450) : tailrecursion.hoplon.markdown.code_node.call(null,G__101449,G__101450));
})()," (just something to keep in mind)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101439,G__101440) : tailrecursion.hoplon.markdown.para_node.call(null,G__101439,G__101440));
})(),(function (){var G__101451 = cljs.core.PersistentArrayMap.EMPTY;
var G__101452 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__101453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101454 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101453,G__101454) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101453,G__101454));
})(),"s pretend, however, that we prefer the Scheme version of things. Give an implementation of ",(function (){var G__101455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for-each"], null);
var G__101456 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101455,G__101456) : tailrecursion.hoplon.markdown.code_node.call(null,G__101455,G__101456));
})()," (without using ",(function (){var G__101457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"doseq"], null);
var G__101458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101457,G__101458) : tailrecursion.hoplon.markdown.code_node.call(null,G__101457,G__101458));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101451,G__101452) : tailrecursion.hoplon.markdown.para_node.call(null,G__101451,G__101452));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101320;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101319;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101318;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101317;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_101459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101463 = (function (){var G__101464 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101465 = (function (){var G__101466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101467 = "(";
var G__101468 = (function (){var G__101502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101503 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101502,G__101503) : tailrecursion.hoplon.span.call(null,G__101502,G__101503));
})();
var G__101469 = (function (){var G__101504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101505 = "for-each";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101504,G__101505) : tailrecursion.hoplon.span.call(null,G__101504,G__101505));
})();
var G__101470 = " [";
var G__101471 = (function (){var G__101506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101507 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101506,G__101507) : tailrecursion.hoplon.span.call(null,G__101506,G__101507));
})();
var G__101472 = " ";
var G__101473 = (function (){var G__101508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101509 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101508,G__101509) : tailrecursion.hoplon.span.call(null,G__101508,G__101509));
})();
var G__101474 = "]\n  (";
var G__101475 = (function (){var G__101510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101511 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101510,G__101511) : tailrecursion.hoplon.span.call(null,G__101510,G__101511));
})();
var G__101476 = "[";
var G__101477 = (function (){var G__101512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101513 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101512,G__101513) : tailrecursion.hoplon.span.call(null,G__101512,G__101513));
})();
var G__101478 = " ";
var G__101479 = (function (){var G__101514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101515 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101514,G__101515) : tailrecursion.hoplon.span.call(null,G__101514,G__101515));
})();
var G__101480 = "]\n    (";
var G__101481 = (function (){var G__101516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101517 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101516,G__101517) : tailrecursion.hoplon.span.call(null,G__101516,G__101517));
})();
var G__101482 = "(";
var G__101483 = (function (){var G__101518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101519 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101518,G__101519) : tailrecursion.hoplon.span.call(null,G__101518,G__101519));
})();
var G__101484 = " ";
var G__101485 = (function (){var G__101520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101521 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101520,G__101521) : tailrecursion.hoplon.span.call(null,G__101520,G__101521));
})();
var G__101486 = ")\n        ";
var G__101487 = (function (){var G__101522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101523 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101522,G__101523) : tailrecursion.hoplon.span.call(null,G__101522,G__101523));
})();
var G__101488 = "\n        (";
var G__101489 = (function (){var G__101524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101525 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101524,G__101525) : tailrecursion.hoplon.span.call(null,G__101524,G__101525));
})();
var G__101490 = "(";
var G__101491 = (function (){var G__101526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101527 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101526,G__101527) : tailrecursion.hoplon.span.call(null,G__101526,G__101527));
})();
var G__101492 = " (";
var G__101493 = (function (){var G__101528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101529 = "fist";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101528,G__101529) : tailrecursion.hoplon.span.call(null,G__101528,G__101529));
})();
var G__101494 = " ";
var G__101495 = (function (){var G__101530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101531 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101530,G__101531) : tailrecursion.hoplon.span.call(null,G__101530,G__101531));
})();
var G__101496 = "))\n            (";
var G__101497 = (function (){var G__101532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101533 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101532,G__101533) : tailrecursion.hoplon.span.call(null,G__101532,G__101533));
})();
var G__101498 = " (";
var G__101499 = (function (){var G__101534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101535 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101534,G__101535) : tailrecursion.hoplon.span.call(null,G__101534,G__101535));
})();
var G__101500 = (function (){var G__101536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101537 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101536,G__101537) : tailrecursion.hoplon.span.call(null,G__101536,G__101537));
})();
var G__101501 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__101466,G__101467,G__101468,G__101469,G__101470,G__101471,G__101472,G__101473,G__101474,G__101475,G__101476,G__101477,G__101478,G__101479,G__101480,G__101481,G__101482,G__101483,G__101484,G__101485,G__101486,G__101487,G__101488,G__101489,G__101490,G__101491,G__101492,G__101493,G__101494,G__101495,G__101496,G__101497,G__101498,G__101499,G__101500,G__101501) : tailrecursion.hoplon.pre.call(null,G__101466,G__101467,G__101468,G__101469,G__101470,G__101471,G__101472,G__101473,G__101474,G__101475,G__101476,G__101477,G__101478,G__101479,G__101480,G__101481,G__101482,G__101483,G__101484,G__101485,G__101486,G__101487,G__101488,G__101489,G__101490,G__101491,G__101492,G__101493,G__101494,G__101495,G__101496,G__101497,G__101498,G__101499,G__101500,G__101501));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101464,G__101465) : tailrecursion.hoplon.div.call(null,G__101464,G__101465));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101463) : tailrecursion.hoplon.div.call(null,G__101463));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101461;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101459;
}})()], 0))], 0))], 0));
var G__97788 = "";
var G__97789 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Hierarchical Structures"], null),(function (){var _STAR_references_STAR_101538 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101539 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101540 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101541 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101542 = cljs.core.PersistentArrayMap.EMPTY;
var G__101543 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The representation of sequences in terms of lists generalizes naturally to represent sequences whose elements may themselves be sequences. For example, we can regard the object ",(function (){var G__101544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"((1 2) 3 4)"], null);
var G__101545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101544,G__101545) : tailrecursion.hoplon.markdown.code_node.call(null,G__101544,G__101545));
})()," constructed by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101542,G__101543) : tailrecursion.hoplon.markdown.para_node.call(null,G__101542,G__101543));
})(),(function (){var G__101546 = (function (){var G__101547 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101548 = (function (){var G__101549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101550 = "(";
var G__101551 = (function (){var G__101563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101564 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101563,G__101564) : tailrecursion.hoplon.span.call(null,G__101563,G__101564));
})();
var G__101552 = "(";
var G__101553 = (function (){var G__101565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101566 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101565,G__101566) : tailrecursion.hoplon.span.call(null,G__101565,G__101566));
})();
var G__101554 = (function (){var G__101567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101568 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101567,G__101568) : tailrecursion.hoplon.span.call(null,G__101567,G__101568));
})();
var G__101555 = " ";
var G__101556 = (function (){var G__101569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101570 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101569,G__101570) : tailrecursion.hoplon.span.call(null,G__101569,G__101570));
})();
var G__101557 = ") (";
var G__101558 = (function (){var G__101571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101572 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101571,G__101572) : tailrecursion.hoplon.span.call(null,G__101571,G__101572));
})();
var G__101559 = (function (){var G__101573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101574 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101573,G__101574) : tailrecursion.hoplon.span.call(null,G__101573,G__101574));
})();
var G__101560 = " ";
var G__101561 = (function (){var G__101575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101576 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101575,G__101576) : tailrecursion.hoplon.span.call(null,G__101575,G__101576));
})();
var G__101562 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__101549,G__101550,G__101551,G__101552,G__101553,G__101554,G__101555,G__101556,G__101557,G__101558,G__101559,G__101560,G__101561,G__101562) : tailrecursion.hoplon.pre.call(null,G__101549,G__101550,G__101551,G__101552,G__101553,G__101554,G__101555,G__101556,G__101557,G__101558,G__101559,G__101560,G__101561,G__101562));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101547,G__101548) : tailrecursion.hoplon.div.call(null,G__101547,G__101548));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101546) : tailrecursion.hoplon.div.call(null,G__101546));
})(),(function (){var G__101577 = cljs.core.PersistentArrayMap.EMPTY;
var G__101578 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as a list of three items, the first of which is itself a list ",(function (){var G__101579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2)"], null);
var G__101580 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101579,G__101580) : tailrecursion.hoplon.markdown.code_node.call(null,G__101579,G__101580));
})(),". Indeed, this is suggested by the form in which the result is printed by the interpreter. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.5"], null)], 0))," shows the representation of this structure in terms of pairs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101577,G__101578) : tailrecursion.hoplon.markdown.para_node.call(null,G__101577,G__101578));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101541;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101540;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101539;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101538;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"Structure formed by (conj (list 3 4) (list 1 2))"], null)], 0)),"",(function (){var _STAR_references_STAR_101581 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101582 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101583 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101584 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101585 = cljs.core.PersistentArrayMap.EMPTY;
var G__101586 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another way to think of sequences whose elements are sequences is as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["trees"], null)], 0)),". The elements of the sequence are the branches of the tree, and elements that are themselves sequences are subtrees. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/6/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.6"], null)], 0))," shows the structure in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.5"], null)], 0))," viewed as a tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101585,G__101586) : tailrecursion.hoplon.markdown.para_node.call(null,G__101585,G__101586));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101584;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101583;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101582;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101581;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The list structure in figure 2.5 viewed as a tree."], null)], 0)),"",(function (){var _STAR_references_STAR_101587 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101588 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101589 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101590 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101591 = cljs.core.PersistentArrayMap.EMPTY;
var G__101592 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursion is a natural tool for dealing with tree structures, since we can often reduce operations on trees to operations on their branches, which reduce in tern to operations on the branches of the branches, and so on, until we reach the leaves of the tree. As an example, compare the ",(function (){var G__101593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__101594 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101593,G__101594) : tailrecursion.hoplon.markdown.code_node.call(null,G__101593,G__101594));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.1"], null)], 0))," with the ",(function (){var G__101595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101596 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101595,G__101596) : tailrecursion.hoplon.markdown.code_node.call(null,G__101595,G__101596));
})()," procedure, which returns the total number of leaves of a tree:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101591,G__101592) : tailrecursion.hoplon.markdown.para_node.call(null,G__101591,G__101592));
})(),(function (){var G__101597 = (function (){var G__101598 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101599 = (function (){var G__101600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101601 = "(";
var G__101602 = (function (){var G__101676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101677 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101676,G__101677) : tailrecursion.hoplon.span.call(null,G__101676,G__101677));
})();
var G__101603 = (function (){var G__101678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101679 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101678,G__101679) : tailrecursion.hoplon.span.call(null,G__101678,G__101679));
})();
var G__101604 = " (";
var G__101605 = (function (){var G__101680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101681 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101680,G__101681) : tailrecursion.hoplon.span.call(null,G__101680,G__101681));
})();
var G__101606 = "(";
var G__101607 = (function (){var G__101682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101683 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101682,G__101683) : tailrecursion.hoplon.span.call(null,G__101682,G__101683));
})();
var G__101608 = (function (){var G__101684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101685 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101684,G__101685) : tailrecursion.hoplon.span.call(null,G__101684,G__101685));
})();
var G__101609 = " ";
var G__101610 = (function (){var G__101686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101687 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101686,G__101687) : tailrecursion.hoplon.span.call(null,G__101686,G__101687));
})();
var G__101611 = ") (";
var G__101612 = (function (){var G__101688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101689 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101688,G__101689) : tailrecursion.hoplon.span.call(null,G__101688,G__101689));
})();
var G__101613 = (function (){var G__101690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101691 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101690,G__101691) : tailrecursion.hoplon.span.call(null,G__101690,G__101691));
})();
var G__101614 = " ";
var G__101615 = (function (){var G__101692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101693 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101692,G__101693) : tailrecursion.hoplon.span.call(null,G__101692,G__101693));
})();
var G__101616 = ")))\n((";
var G__101617 = (function (){var G__101694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101695 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101694,G__101695) : tailrecursion.hoplon.span.call(null,G__101694,G__101695));
})();
var G__101618 = " ";
var G__101619 = (function (){var G__101696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101697 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101696,G__101697) : tailrecursion.hoplon.span.call(null,G__101696,G__101697));
})();
var G__101620 = ") ";
var G__101621 = (function (){var G__101698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101699 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101698,G__101699) : tailrecursion.hoplon.span.call(null,G__101698,G__101699));
})();
var G__101622 = " ";
var G__101623 = (function (){var G__101700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101701 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101700,G__101701) : tailrecursion.hoplon.span.call(null,G__101700,G__101701));
})();
var G__101624 = ")\n\n(";
var G__101625 = (function (){var G__101702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101703 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101702,G__101703) : tailrecursion.hoplon.span.call(null,G__101702,G__101703));
})();
var G__101626 = " ";
var G__101627 = (function (){var G__101704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101705 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101704,G__101705) : tailrecursion.hoplon.span.call(null,G__101704,G__101705));
})();
var G__101628 = ")\n";
var G__101629 = (function (){var G__101706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101707 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101706,G__101707) : tailrecursion.hoplon.span.call(null,G__101706,G__101707));
})();
var G__101630 = "\n\n(";
var G__101631 = (function (){var G__101708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101709 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101708,G__101709) : tailrecursion.hoplon.span.call(null,G__101708,G__101709));
})();
var G__101632 = " ";
var G__101633 = (function (){var G__101710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101711 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101710,G__101711) : tailrecursion.hoplon.span.call(null,G__101710,G__101711));
})();
var G__101634 = ")\n";
var G__101635 = (function (){var G__101712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101713 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101712,G__101713) : tailrecursion.hoplon.span.call(null,G__101712,G__101713));
})();
var G__101636 = "\n\n(";
var G__101637 = (function (){var G__101714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101715 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101714,G__101715) : tailrecursion.hoplon.span.call(null,G__101714,G__101715));
})();
var G__101638 = (function (){var G__101716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101717 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101716,G__101717) : tailrecursion.hoplon.span.call(null,G__101716,G__101717));
})();
var G__101639 = " ";
var G__101640 = (function (){var G__101718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101719 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101718,G__101719) : tailrecursion.hoplon.span.call(null,G__101718,G__101719));
})();
var G__101641 = ")\n(((";
var G__101642 = (function (){var G__101720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101721 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101720,G__101721) : tailrecursion.hoplon.span.call(null,G__101720,G__101721));
})();
var G__101643 = " ";
var G__101644 = (function (){var G__101722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101723 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101722,G__101723) : tailrecursion.hoplon.span.call(null,G__101722,G__101723));
})();
var G__101645 = ") ";
var G__101646 = (function (){var G__101724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101725 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101724,G__101725) : tailrecursion.hoplon.span.call(null,G__101724,G__101725));
})();
var G__101647 = " ";
var G__101648 = (function (){var G__101726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101727 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101726,G__101727) : tailrecursion.hoplon.span.call(null,G__101726,G__101727));
})();
var G__101649 = ") ((";
var G__101650 = (function (){var G__101728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101729 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101728,G__101729) : tailrecursion.hoplon.span.call(null,G__101728,G__101729));
})();
var G__101651 = " ";
var G__101652 = (function (){var G__101730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101731 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101730,G__101731) : tailrecursion.hoplon.span.call(null,G__101730,G__101731));
})();
var G__101653 = ") ";
var G__101654 = (function (){var G__101732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101733 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101732,G__101733) : tailrecursion.hoplon.span.call(null,G__101732,G__101733));
})();
var G__101655 = " ";
var G__101656 = (function (){var G__101734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101735 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101734,G__101735) : tailrecursion.hoplon.span.call(null,G__101734,G__101735));
})();
var G__101657 = "))\n\n(";
var G__101658 = (function (){var G__101736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101737 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101736,G__101737) : tailrecursion.hoplon.span.call(null,G__101736,G__101737));
})();
var G__101659 = " (";
var G__101660 = (function (){var G__101738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101739 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101738,G__101739) : tailrecursion.hoplon.span.call(null,G__101738,G__101739));
})();
var G__101661 = (function (){var G__101740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101741 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101740,G__101741) : tailrecursion.hoplon.span.call(null,G__101740,G__101741));
})();
var G__101662 = " ";
var G__101663 = (function (){var G__101742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101743 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101742,G__101743) : tailrecursion.hoplon.span.call(null,G__101742,G__101743));
})();
var G__101664 = "))\n";
var G__101665 = (function (){var G__101744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101745 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101744,G__101745) : tailrecursion.hoplon.span.call(null,G__101744,G__101745));
})();
var G__101666 = "\n\n(";
var G__101667 = (function (){var G__101746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101747 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101746,G__101747) : tailrecursion.hoplon.span.call(null,G__101746,G__101747));
})();
var G__101668 = " (";
var G__101669 = (function (){var G__101748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101749 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101748,G__101749) : tailrecursion.hoplon.span.call(null,G__101748,G__101749));
})();
var G__101670 = (function (){var G__101750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101751 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101750,G__101751) : tailrecursion.hoplon.span.call(null,G__101750,G__101751));
})();
var G__101671 = " ";
var G__101672 = (function (){var G__101752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101753 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101752,G__101753) : tailrecursion.hoplon.span.call(null,G__101752,G__101753));
})();
var G__101673 = "))\n";
var G__101674 = (function (){var G__101754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101755 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101754,G__101755) : tailrecursion.hoplon.span.call(null,G__101754,G__101755));
})();
var G__101675 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__101600,G__101601,G__101602,G__101603,G__101604,G__101605,G__101606,G__101607,G__101608,G__101609,G__101610,G__101611,G__101612,G__101613,G__101614,G__101615,G__101616,G__101617,G__101618,G__101619,G__101620,G__101621,G__101622,G__101623,G__101624,G__101625,G__101626,G__101627,G__101628,G__101629,G__101630,G__101631,G__101632,G__101633,G__101634,G__101635,G__101636,G__101637,G__101638,G__101639,G__101640,G__101641,G__101642,G__101643,G__101644,G__101645,G__101646,G__101647,G__101648,G__101649,G__101650,G__101651,G__101652,G__101653,G__101654,G__101655,G__101656,G__101657,G__101658,G__101659,G__101660,G__101661,G__101662,G__101663,G__101664,G__101665,G__101666,G__101667,G__101668,G__101669,G__101670,G__101671,G__101672,G__101673,G__101674,G__101675) : tailrecursion.hoplon.pre.call(null,G__101600,G__101601,G__101602,G__101603,G__101604,G__101605,G__101606,G__101607,G__101608,G__101609,G__101610,G__101611,G__101612,G__101613,G__101614,G__101615,G__101616,G__101617,G__101618,G__101619,G__101620,G__101621,G__101622,G__101623,G__101624,G__101625,G__101626,G__101627,G__101628,G__101629,G__101630,G__101631,G__101632,G__101633,G__101634,G__101635,G__101636,G__101637,G__101638,G__101639,G__101640,G__101641,G__101642,G__101643,G__101644,G__101645,G__101646,G__101647,G__101648,G__101649,G__101650,G__101651,G__101652,G__101653,G__101654,G__101655,G__101656,G__101657,G__101658,G__101659,G__101660,G__101661,G__101662,G__101663,G__101664,G__101665,G__101666,G__101667,G__101668,G__101669,G__101670,G__101671,G__101672,G__101673,G__101674,G__101675));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101598,G__101599) : tailrecursion.hoplon.div.call(null,G__101598,G__101599));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101597) : tailrecursion.hoplon.div.call(null,G__101597));
})(),(function (){var G__101756 = cljs.core.PersistentArrayMap.EMPTY;
var G__101757 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement ",(function (){var G__101758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101759 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101758,G__101759) : tailrecursion.hoplon.markdown.code_node.call(null,G__101758,G__101759));
})(),", recall the recursive plan for computing ",(function (){var G__101760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__101761 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101760,G__101761) : tailrecursion.hoplon.markdown.code_node.call(null,G__101760,G__101761));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101756,G__101757) : tailrecursion.hoplon.markdown.para_node.call(null,G__101756,G__101757));
})(),(function (){var G__101762 = cljs.core.PersistentArrayMap.EMPTY;
var G__101763 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101764 = cljs.core.PersistentArrayMap.EMPTY;
var G__101765 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101766 = cljs.core.PersistentArrayMap.EMPTY;
var G__101767 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__101769 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101768,G__101769) : tailrecursion.hoplon.markdown.code_node.call(null,G__101768,G__101769));
})()," of a list ",(function (){var G__101770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__101771 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101770,G__101771) : tailrecursion.hoplon.markdown.code_node.call(null,G__101770,G__101771));
})()," is 1 plus the ",(function (){var G__101772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__101773 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101772,G__101773) : tailrecursion.hoplon.markdown.code_node.call(null,G__101772,G__101773));
})()," of the ",(function (){var G__101774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__101775 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101774,G__101775) : tailrecursion.hoplon.markdown.code_node.call(null,G__101774,G__101775));
})()," of ",(function (){var G__101776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__101777 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101776,G__101777) : tailrecursion.hoplon.markdown.code_node.call(null,G__101776,G__101777));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101766,G__101767) : tailrecursion.hoplon.markdown.para_node.call(null,G__101766,G__101767));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__101764,G__101765) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__101764,G__101765));
})(),(function (){var G__101778 = cljs.core.PersistentArrayMap.EMPTY;
var G__101779 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_101780 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101781 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101782 = cljs.core.PersistentArrayMap.EMPTY;
var G__101783 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__101785 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101784,G__101785) : tailrecursion.hoplon.markdown.code_node.call(null,G__101784,G__101785));
})()," of the empty list is 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101782,G__101783) : tailrecursion.hoplon.markdown.para_node.call(null,G__101782,G__101783));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101781;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101780;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__101778,G__101779) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__101778,G__101779));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__101762,G__101763) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__101762,G__101763));
})(),(function (){var G__101786 = cljs.core.PersistentArrayMap.EMPTY;
var G__101787 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101789 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101788,G__101789) : tailrecursion.hoplon.markdown.code_node.call(null,G__101788,G__101789));
})()," is similar. The value for the empty list is the same:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101786,G__101787) : tailrecursion.hoplon.markdown.para_node.call(null,G__101786,G__101787));
})(),(function (){var G__101790 = cljs.core.PersistentArrayMap.EMPTY;
var G__101791 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101792 = cljs.core.PersistentArrayMap.EMPTY;
var G__101793 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_101794 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101795 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101797 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101796,G__101797) : tailrecursion.hoplon.markdown.code_node.call(null,G__101796,G__101797));
})()," of the empty list is 0."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101795;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101794;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__101792,G__101793) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__101792,G__101793));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__101790,G__101791) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__101790,G__101791));
})(),(function (){var G__101798 = cljs.core.PersistentArrayMap.EMPTY;
var G__101799 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But in the reduction step, where we strip off the ",(function (){var G__101800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101801 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101800,G__101801) : tailrecursion.hoplon.markdown.code_node.call(null,G__101800,G__101801));
})()," of the list, we must take into account that the ",(function (){var G__101802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101803 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101802,G__101803) : tailrecursion.hoplon.markdown.code_node.call(null,G__101802,G__101803));
})()," may itself be a tree whose leaves we need to count. Thus, the appropriate reduction step is"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101798,G__101799) : tailrecursion.hoplon.markdown.para_node.call(null,G__101798,G__101799));
})(),(function (){var G__101804 = cljs.core.PersistentArrayMap.EMPTY;
var G__101805 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101806 = cljs.core.PersistentArrayMap.EMPTY;
var G__101807 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_101808 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101809 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101811 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101810,G__101811) : tailrecursion.hoplon.markdown.code_node.call(null,G__101810,G__101811));
})()," of a tree ",(function (){var G__101812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__101813 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101812,G__101813) : tailrecursion.hoplon.markdown.code_node.call(null,G__101812,G__101813));
})()," is ",(function (){var G__101814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101815 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101814,G__101815) : tailrecursion.hoplon.markdown.code_node.call(null,G__101814,G__101815));
})()," of the ",(function (){var G__101816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101816,G__101817) : tailrecursion.hoplon.markdown.code_node.call(null,G__101816,G__101817));
})()," of ",(function (){var G__101818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__101819 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101818,G__101819) : tailrecursion.hoplon.markdown.code_node.call(null,G__101818,G__101819));
})()," plus ",(function (){var G__101820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101821 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101820,G__101821) : tailrecursion.hoplon.markdown.code_node.call(null,G__101820,G__101821));
})()," of the ",(function (){var G__101822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__101823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101822,G__101823) : tailrecursion.hoplon.markdown.code_node.call(null,G__101822,G__101823));
})()," of ",(function (){var G__101824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__101825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101824,G__101825) : tailrecursion.hoplon.markdown.code_node.call(null,G__101824,G__101825));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101809;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101808;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__101806,G__101807) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__101806,G__101807));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__101804,G__101805) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__101804,G__101805));
})(),(function (){var G__101826 = cljs.core.PersistentArrayMap.EMPTY;
var G__101827 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Finally, by taking ",(function (){var G__101828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__101829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101828,G__101829) : tailrecursion.hoplon.markdown.code_node.call(null,G__101828,G__101829));
})(),"s we reach actual leaves, so we need another base case:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101826,G__101827) : tailrecursion.hoplon.markdown.para_node.call(null,G__101826,G__101827));
})(),(function (){var G__101830 = cljs.core.PersistentArrayMap.EMPTY;
var G__101831 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101832 = cljs.core.PersistentArrayMap.EMPTY;
var G__101833 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_101834 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101835 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__101837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101836,G__101837) : tailrecursion.hoplon.markdown.code_node.call(null,G__101836,G__101837));
})()," of a leaf is 1."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101835;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101834;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__101832,G__101833) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__101832,G__101833));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__101830,G__101831) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__101830,G__101831));
})(),(function (){var G__101838 = cljs.core.PersistentArrayMap.EMPTY;
var G__101839 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To aid in writing recursive procedures on trees, Scheme provides a primitive predicate ",(function (){var G__101840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"pair?"], null);
var G__101841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101840,G__101841) : tailrecursion.hoplon.markdown.code_node.call(null,G__101840,G__101841));
})(),", which tests whether its argument is a pair. Since pairs aren",(function (){var G__101842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101842,G__101843) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101842,G__101843));
})(),"t really a thing in Clojure, but rather we deal in lists directly, what, would you suppose, is the primitive to tell whether something is a list? The procedure ",(function (){var G__101844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list?"], null);
var G__101845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101844,G__101845) : tailrecursion.hoplon.markdown.code_node.call(null,G__101844,G__101845));
})(),", of course. Alternatively, for our program, we could use the more general ",(function (){var G__101846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"seq?"], null);
var G__101847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101846,G__101847) : tailrecursion.hoplon.markdown.code_node.call(null,G__101846,G__101847));
})(),", which returns ",(function (){var G__101848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__101849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101848,G__101849) : tailrecursion.hoplon.markdown.code_node.call(null,G__101848,G__101849));
})()," when its argument is any sequential object, and false otherwise. But we",(function (){var G__101850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101851 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101850,G__101851) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101850,G__101851));
})(),"ll use ",(function (){var G__101852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__101853 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101852,G__101853) : tailrecursion.hoplon.markdown.code_node.call(null,G__101852,G__101853));
})()," because, we don",(function (){var G__101854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__101855 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__101854,G__101855) : tailrecursion.hoplon.markdown.simple_node.call(null,G__101854,G__101855));
})(),"t really know the implications of including vectors and things into this function yet. Here is the complete procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101838,G__101839) : tailrecursion.hoplon.markdown.para_node.call(null,G__101838,G__101839));
})(),(function (){var G__101856 = (function (){var G__101857 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101858 = (function (){var G__101859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101860 = "(";
var G__101861 = (function (){var G__101902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__101903 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101902,G__101903) : tailrecursion.hoplon.span.call(null,G__101902,G__101903));
})();
var G__101862 = (function (){var G__101904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101905 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101904,G__101905) : tailrecursion.hoplon.span.call(null,G__101904,G__101905));
})();
var G__101863 = " [";
var G__101864 = (function (){var G__101906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101907 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101906,G__101907) : tailrecursion.hoplon.span.call(null,G__101906,G__101907));
})();
var G__101865 = "]\n  (";
var G__101866 = (function (){var G__101908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101909 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101908,G__101909) : tailrecursion.hoplon.span.call(null,G__101908,G__101909));
})();
var G__101867 = "(";
var G__101868 = (function (){var G__101910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101911 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101910,G__101911) : tailrecursion.hoplon.span.call(null,G__101910,G__101911));
})();
var G__101869 = "(";
var G__101870 = (function (){var G__101912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101913 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101912,G__101913) : tailrecursion.hoplon.span.call(null,G__101912,G__101913));
})();
var G__101871 = " ";
var G__101872 = (function (){var G__101914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101915 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101914,G__101915) : tailrecursion.hoplon.span.call(null,G__101914,G__101915));
})();
var G__101873 = ")\n             (";
var G__101874 = (function (){var G__101916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101917 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101916,G__101917) : tailrecursion.hoplon.span.call(null,G__101916,G__101917));
})();
var G__101875 = " ";
var G__101876 = (function (){var G__101918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101919 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101918,G__101919) : tailrecursion.hoplon.span.call(null,G__101918,G__101919));
})();
var G__101877 = ")) ";
var G__101878 = (function (){var G__101920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101921 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101920,G__101921) : tailrecursion.hoplon.span.call(null,G__101920,G__101921));
})();
var G__101879 = "\n        (";
var G__101880 = (function (){var G__101922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101923 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101922,G__101923) : tailrecursion.hoplon.span.call(null,G__101922,G__101923));
})();
var G__101881 = "(";
var G__101882 = (function (){var G__101924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101925 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101924,G__101925) : tailrecursion.hoplon.span.call(null,G__101924,G__101925));
})();
var G__101883 = " ";
var G__101884 = (function (){var G__101926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101927 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101926,G__101927) : tailrecursion.hoplon.span.call(null,G__101926,G__101927));
})();
var G__101885 = ")) ";
var G__101886 = (function (){var G__101928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101929 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101928,G__101929) : tailrecursion.hoplon.span.call(null,G__101928,G__101929));
})();
var G__101887 = "\n        ";
var G__101888 = (function (){var G__101930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101931 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101930,G__101931) : tailrecursion.hoplon.span.call(null,G__101930,G__101931));
})();
var G__101889 = " (";
var G__101890 = (function (){var G__101932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101933 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101932,G__101933) : tailrecursion.hoplon.span.call(null,G__101932,G__101933));
})();
var G__101891 = "(";
var G__101892 = (function (){var G__101934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101935 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101934,G__101935) : tailrecursion.hoplon.span.call(null,G__101934,G__101935));
})();
var G__101893 = " (";
var G__101894 = (function (){var G__101936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101937 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101936,G__101937) : tailrecursion.hoplon.span.call(null,G__101936,G__101937));
})();
var G__101895 = (function (){var G__101938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101939 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101938,G__101939) : tailrecursion.hoplon.span.call(null,G__101938,G__101939));
})();
var G__101896 = "))\n                 (";
var G__101897 = (function (){var G__101940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__101941 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101940,G__101941) : tailrecursion.hoplon.span.call(null,G__101940,G__101941));
})();
var G__101898 = " (";
var G__101899 = (function (){var G__101942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101943 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101942,G__101943) : tailrecursion.hoplon.span.call(null,G__101942,G__101943));
})();
var G__101900 = (function (){var G__101944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__101945 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101944,G__101945) : tailrecursion.hoplon.span.call(null,G__101944,G__101945));
})();
var G__101901 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__101859,G__101860,G__101861,G__101862,G__101863,G__101864,G__101865,G__101866,G__101867,G__101868,G__101869,G__101870,G__101871,G__101872,G__101873,G__101874,G__101875,G__101876,G__101877,G__101878,G__101879,G__101880,G__101881,G__101882,G__101883,G__101884,G__101885,G__101886,G__101887,G__101888,G__101889,G__101890,G__101891,G__101892,G__101893,G__101894,G__101895,G__101896,G__101897,G__101898,G__101899,G__101900,G__101901) : tailrecursion.hoplon.pre.call(null,G__101859,G__101860,G__101861,G__101862,G__101863,G__101864,G__101865,G__101866,G__101867,G__101868,G__101869,G__101870,G__101871,G__101872,G__101873,G__101874,G__101875,G__101876,G__101877,G__101878,G__101879,G__101880,G__101881,G__101882,G__101883,G__101884,G__101885,G__101886,G__101887,G__101888,G__101889,G__101890,G__101891,G__101892,G__101893,G__101894,G__101895,G__101896,G__101897,G__101898,G__101899,G__101900,G__101901));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101857,G__101858) : tailrecursion.hoplon.div.call(null,G__101857,G__101858));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101856) : tailrecursion.hoplon.div.call(null,G__101856));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101590;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101589;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101588;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101587;
}})()], 0));
var G__97790 = "";
var G__97791 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_101946 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101947 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101948 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101949 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101950 = cljs.core.PersistentArrayMap.EMPTY;
var G__101951 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we evaluate the expression ",(function (){var G__101952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list 1 (list 2 (list 3 4)))"], null);
var G__101953 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__101952,G__101953) : tailrecursion.hoplon.markdown.code_node.call(null,G__101952,G__101953));
})(),". Give the result printed by the interpreter, the corresponding box-and-pointer structure, and the interpretation of this as a tree (as in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/6/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.6"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__101950,G__101951) : tailrecursion.hoplon.markdown.para_node.call(null,G__101950,G__101951));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101949;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101948;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101947;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101946;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_101954 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101955 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_101956 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_101957 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__101958 = (function (){var G__101959 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__101960 = (function (){var G__101961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__101962 = "(";
var G__101963 = (function (){var G__101982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101983 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101982,G__101983) : tailrecursion.hoplon.span.call(null,G__101982,G__101983));
})();
var G__101964 = (function (){var G__101984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101985 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101984,G__101985) : tailrecursion.hoplon.span.call(null,G__101984,G__101985));
})();
var G__101965 = " (";
var G__101966 = (function (){var G__101986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101987 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101986,G__101987) : tailrecursion.hoplon.span.call(null,G__101986,G__101987));
})();
var G__101967 = (function (){var G__101988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101989 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101988,G__101989) : tailrecursion.hoplon.span.call(null,G__101988,G__101989));
})();
var G__101968 = " (";
var G__101969 = (function (){var G__101990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__101991 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101990,G__101991) : tailrecursion.hoplon.span.call(null,G__101990,G__101991));
})();
var G__101970 = (function (){var G__101992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101993 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101992,G__101993) : tailrecursion.hoplon.span.call(null,G__101992,G__101993));
})();
var G__101971 = " ";
var G__101972 = (function (){var G__101994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101995 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101994,G__101995) : tailrecursion.hoplon.span.call(null,G__101994,G__101995));
})();
var G__101973 = ")))\n(";
var G__101974 = (function (){var G__101996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101997 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101996,G__101997) : tailrecursion.hoplon.span.call(null,G__101996,G__101997));
})();
var G__101975 = " (";
var G__101976 = (function (){var G__101998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__101999 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__101998,G__101999) : tailrecursion.hoplon.span.call(null,G__101998,G__101999));
})();
var G__101977 = " (";
var G__101978 = (function (){var G__102000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102001 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102000,G__102001) : tailrecursion.hoplon.span.call(null,G__102000,G__102001));
})();
var G__101979 = " ";
var G__101980 = (function (){var G__102002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102003 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102002,G__102003) : tailrecursion.hoplon.span.call(null,G__102002,G__102003));
})();
var G__101981 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__101961,G__101962,G__101963,G__101964,G__101965,G__101966,G__101967,G__101968,G__101969,G__101970,G__101971,G__101972,G__101973,G__101974,G__101975,G__101976,G__101977,G__101978,G__101979,G__101980,G__101981) : tailrecursion.hoplon.pre.call(null,G__101961,G__101962,G__101963,G__101964,G__101965,G__101966,G__101967,G__101968,G__101969,G__101970,G__101971,G__101972,G__101973,G__101974,G__101975,G__101976,G__101977,G__101978,G__101979,G__101980,G__101981));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__101959,G__101960) : tailrecursion.hoplon.div.call(null,G__101959,G__101960));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__101958) : tailrecursion.hoplon.div.call(null,G__101958));
})(),(function (){var G__102004 = cljs.core.PersistentArrayMap.EMPTY;
var G__102005 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But if you didn",(function (){var G__102006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__102007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102006,G__102007) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102006,G__102007));
})(),"t see that one already, I think you",(function (){var G__102008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__102009 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102008,G__102009) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102008,G__102009));
})(),"re missing the point of this site here."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102004,G__102005) : tailrecursion.hoplon.markdown.para_node.call(null,G__102004,G__102005));
})(),(function (){var G__102010 = cljs.core.PersistentArrayMap.EMPTY;
var G__102011 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for the diagram, I will put that in later",(function (){var G__102012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__102013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102012,G__102013) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102012,G__102013));
})()," If anyone even reads this far",(function (){var G__102014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__102015 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102014,G__102015) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102014,G__102015));
})()," On that note: If you have read this far, please, shoot me an email at ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"mailto:amniskin@gmail.com",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["amniskin@gmail.com"], null)], 0)),". I",(function (){var G__102016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__102017 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102016,G__102017) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102016,G__102017));
})(),"d love to hear any suggestions or just any feedback at all, really."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102010,G__102011) : tailrecursion.hoplon.markdown.para_node.call(null,G__102010,G__102011));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101957;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101956;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_101955;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_101954;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102018 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102019 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102020 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102021 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102022 = cljs.core.PersistentArrayMap.EMPTY;
var G__102023 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give combinations of ",(function (){var G__102024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102024,G__102025) : tailrecursion.hoplon.markdown.code_node.call(null,G__102024,G__102025));
})()," and ",(function (){var G__102026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102026,G__102027) : tailrecursion.hoplon.markdown.code_node.call(null,G__102026,G__102027));
})()," that will pick 7 from each of the following lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102022,G__102023) : tailrecursion.hoplon.markdown.para_node.call(null,G__102022,G__102023));
})(),(function (){var G__102028 = (function (){var G__102029 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102030 = (function (){var G__102031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102032 = "(";
var G__102033 = (function (){var G__102059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102060 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102059,G__102060) : tailrecursion.hoplon.span.call(null,G__102059,G__102060));
})();
var G__102034 = " ";
var G__102035 = (function (){var G__102061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102062 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102061,G__102062) : tailrecursion.hoplon.span.call(null,G__102061,G__102062));
})();
var G__102036 = " (";
var G__102037 = (function (){var G__102063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102064 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102063,G__102064) : tailrecursion.hoplon.span.call(null,G__102063,G__102064));
})();
var G__102038 = " ";
var G__102039 = (function (){var G__102065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102066 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102065,G__102066) : tailrecursion.hoplon.span.call(null,G__102065,G__102066));
})();
var G__102040 = ") ";
var G__102041 = (function (){var G__102067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102068 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102067,G__102068) : tailrecursion.hoplon.span.call(null,G__102067,G__102068));
})();
var G__102042 = ")\n\n((";
var G__102043 = (function (){var G__102069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102070 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102069,G__102070) : tailrecursion.hoplon.span.call(null,G__102069,G__102070));
})();
var G__102044 = "))\n\n(";
var G__102045 = (function (){var G__102071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102072 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102071,G__102072) : tailrecursion.hoplon.span.call(null,G__102071,G__102072));
})();
var G__102046 = " (";
var G__102047 = (function (){var G__102073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102074 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102073,G__102074) : tailrecursion.hoplon.span.call(null,G__102073,G__102074));
})();
var G__102048 = " (";
var G__102049 = (function (){var G__102075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102076 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102075,G__102076) : tailrecursion.hoplon.span.call(null,G__102075,G__102076));
})();
var G__102050 = " (";
var G__102051 = (function (){var G__102077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102078 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102077,G__102078) : tailrecursion.hoplon.span.call(null,G__102077,G__102078));
})();
var G__102052 = " (";
var G__102053 = (function (){var G__102079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102080 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102079,G__102080) : tailrecursion.hoplon.span.call(null,G__102079,G__102080));
})();
var G__102054 = " (";
var G__102055 = (function (){var G__102081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102082 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102081,G__102082) : tailrecursion.hoplon.span.call(null,G__102081,G__102082));
})();
var G__102056 = " ";
var G__102057 = (function (){var G__102083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102084 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102083,G__102084) : tailrecursion.hoplon.span.call(null,G__102083,G__102084));
})();
var G__102058 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__102031,G__102032,G__102033,G__102034,G__102035,G__102036,G__102037,G__102038,G__102039,G__102040,G__102041,G__102042,G__102043,G__102044,G__102045,G__102046,G__102047,G__102048,G__102049,G__102050,G__102051,G__102052,G__102053,G__102054,G__102055,G__102056,G__102057,G__102058) : tailrecursion.hoplon.pre.call(null,G__102031,G__102032,G__102033,G__102034,G__102035,G__102036,G__102037,G__102038,G__102039,G__102040,G__102041,G__102042,G__102043,G__102044,G__102045,G__102046,G__102047,G__102048,G__102049,G__102050,G__102051,G__102052,G__102053,G__102054,G__102055,G__102056,G__102057,G__102058));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102029,G__102030) : tailrecursion.hoplon.div.call(null,G__102029,G__102030));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102028) : tailrecursion.hoplon.div.call(null,G__102028));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102021;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102020;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102019;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102018;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102087 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102088 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102089 = (function (){var G__102090 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102091 = (function (){var G__102092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102093 = "(";
var G__102094 = (function (){var G__102178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102179 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102178,G__102179) : tailrecursion.hoplon.span.call(null,G__102178,G__102179));
})();
var G__102095 = "(";
var G__102096 = (function (){var G__102180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102181 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102180,G__102181) : tailrecursion.hoplon.span.call(null,G__102180,G__102181));
})();
var G__102097 = (function (){var G__102182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102183 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102182,G__102183) : tailrecursion.hoplon.span.call(null,G__102182,G__102183));
})();
var G__102098 = " ";
var G__102099 = (function (){var G__102184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102185 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102184,G__102185) : tailrecursion.hoplon.span.call(null,G__102184,G__102185));
})();
var G__102100 = " (";
var G__102101 = (function (){var G__102186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102187 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102186,G__102187) : tailrecursion.hoplon.span.call(null,G__102186,G__102187));
})();
var G__102102 = " ";
var G__102103 = (function (){var G__102188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102189 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102188,G__102189) : tailrecursion.hoplon.span.call(null,G__102188,G__102189));
})();
var G__102104 = ") ";
var G__102105 = (function (){var G__102190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102191 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102190,G__102191) : tailrecursion.hoplon.span.call(null,G__102190,G__102191));
})();
var G__102106 = "))\n(";
var G__102107 = (function (){var G__102192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102193 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102192,G__102193) : tailrecursion.hoplon.span.call(null,G__102192,G__102193));
})();
var G__102108 = " (";
var G__102109 = (function (){var G__102194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102195 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102194,G__102195) : tailrecursion.hoplon.span.call(null,G__102194,G__102195));
})();
var G__102110 = " ";
var G__102111 = (function (){var G__102196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102197 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102196,G__102197) : tailrecursion.hoplon.span.call(null,G__102196,G__102197));
})();
var G__102112 = ") ";
var G__102113 = (function (){var G__102198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102199 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102198,G__102199) : tailrecursion.hoplon.span.call(null,G__102198,G__102199));
})();
var G__102114 = ")\n\n(";
var G__102115 = (function (){var G__102200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102201 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102200,G__102201) : tailrecursion.hoplon.span.call(null,G__102200,G__102201));
})();
var G__102116 = "(";
var G__102117 = (function (){var G__102202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102203 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102202,G__102203) : tailrecursion.hoplon.span.call(null,G__102202,G__102203));
})();
var G__102118 = "(";
var G__102119 = (function (){var G__102204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102205 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102204,G__102205) : tailrecursion.hoplon.span.call(null,G__102204,G__102205));
})();
var G__102120 = (function (){var G__102206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102207 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102206,G__102207) : tailrecursion.hoplon.span.call(null,G__102206,G__102207));
})();
var G__102121 = " ";
var G__102122 = (function (){var G__102208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102209 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102208,G__102209) : tailrecursion.hoplon.span.call(null,G__102208,G__102209));
})();
var G__102123 = " (";
var G__102124 = (function (){var G__102210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102211 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102210,G__102211) : tailrecursion.hoplon.span.call(null,G__102210,G__102211));
})();
var G__102125 = " ";
var G__102126 = (function (){var G__102212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102213 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102212,G__102213) : tailrecursion.hoplon.span.call(null,G__102212,G__102213));
})();
var G__102127 = ") ";
var G__102128 = (function (){var G__102214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102215 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102214,G__102215) : tailrecursion.hoplon.span.call(null,G__102214,G__102215));
})();
var G__102129 = ")))\n((";
var G__102130 = (function (){var G__102216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102217 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102216,G__102217) : tailrecursion.hoplon.span.call(null,G__102216,G__102217));
})();
var G__102131 = " ";
var G__102132 = (function (){var G__102218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102219 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102218,G__102219) : tailrecursion.hoplon.span.call(null,G__102218,G__102219));
})();
var G__102133 = ") ";
var G__102134 = (function (){var G__102220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102221 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102220,G__102221) : tailrecursion.hoplon.span.call(null,G__102220,G__102221));
})();
var G__102135 = ")\n\n(";
var G__102136 = (function (){var G__102222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102223 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102222,G__102223) : tailrecursion.hoplon.span.call(null,G__102222,G__102223));
})();
var G__102137 = "(";
var G__102138 = (function (){var G__102224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102225 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102224,G__102225) : tailrecursion.hoplon.span.call(null,G__102224,G__102225));
})();
var G__102139 = "(";
var G__102140 = (function (){var G__102226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102227 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102226,G__102227) : tailrecursion.hoplon.span.call(null,G__102226,G__102227));
})();
var G__102141 = "(";
var G__102142 = (function (){var G__102228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102229 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102228,G__102229) : tailrecursion.hoplon.span.call(null,G__102228,G__102229));
})();
var G__102143 = (function (){var G__102230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102231 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102230,G__102231) : tailrecursion.hoplon.span.call(null,G__102230,G__102231));
})();
var G__102144 = " ";
var G__102145 = (function (){var G__102232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102233 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102232,G__102233) : tailrecursion.hoplon.span.call(null,G__102232,G__102233));
})();
var G__102146 = " (";
var G__102147 = (function (){var G__102234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102235 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102234,G__102235) : tailrecursion.hoplon.span.call(null,G__102234,G__102235));
})();
var G__102148 = " ";
var G__102149 = (function (){var G__102236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102237 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102236,G__102237) : tailrecursion.hoplon.span.call(null,G__102236,G__102237));
})();
var G__102150 = ") ";
var G__102151 = (function (){var G__102238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102239 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102238,G__102239) : tailrecursion.hoplon.span.call(null,G__102238,G__102239));
})();
var G__102152 = "))))\n(";
var G__102153 = (function (){var G__102240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102241 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102240,G__102241) : tailrecursion.hoplon.span.call(null,G__102240,G__102241));
})();
var G__102154 = " ";
var G__102155 = (function (){var G__102242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102243 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102242,G__102243) : tailrecursion.hoplon.span.call(null,G__102242,G__102243));
})();
var G__102156 = ")\n\n(";
var G__102157 = (function (){var G__102244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102245 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102244,G__102245) : tailrecursion.hoplon.span.call(null,G__102244,G__102245));
})();
var G__102158 = "(";
var G__102159 = (function (){var G__102246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102247 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102246,G__102247) : tailrecursion.hoplon.span.call(null,G__102246,G__102247));
})();
var G__102160 = "(";
var G__102161 = (function (){var G__102248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102249 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102248,G__102249) : tailrecursion.hoplon.span.call(null,G__102248,G__102249));
})();
var G__102162 = "(";
var G__102163 = (function (){var G__102250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102251 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102250,G__102251) : tailrecursion.hoplon.span.call(null,G__102250,G__102251));
})();
var G__102164 = "(";
var G__102165 = (function (){var G__102252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102253 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102252,G__102253) : tailrecursion.hoplon.span.call(null,G__102252,G__102253));
})();
var G__102166 = (function (){var G__102254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102255 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102254,G__102255) : tailrecursion.hoplon.span.call(null,G__102254,G__102255));
})();
var G__102167 = " ";
var G__102168 = (function (){var G__102256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102257 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102256,G__102257) : tailrecursion.hoplon.span.call(null,G__102256,G__102257));
})();
var G__102169 = " (";
var G__102170 = (function (){var G__102258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102259 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102258,G__102259) : tailrecursion.hoplon.span.call(null,G__102258,G__102259));
})();
var G__102171 = " ";
var G__102172 = (function (){var G__102260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102261 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102260,G__102261) : tailrecursion.hoplon.span.call(null,G__102260,G__102261));
})();
var G__102173 = ") ";
var G__102174 = (function (){var G__102262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102263 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102262,G__102263) : tailrecursion.hoplon.span.call(null,G__102262,G__102263));
})();
var G__102175 = ")))))\n(";
var G__102176 = (function (){var G__102264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102265 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102264,G__102265) : tailrecursion.hoplon.span.call(null,G__102264,G__102265));
})();
var G__102177 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$86(G__102092,G__102093,G__102094,G__102095,G__102096,G__102097,G__102098,G__102099,G__102100,G__102101,G__102102,G__102103,G__102104,G__102105,G__102106,G__102107,G__102108,G__102109,G__102110,G__102111,G__102112,G__102113,G__102114,G__102115,G__102116,G__102117,G__102118,G__102119,G__102120,G__102121,G__102122,G__102123,G__102124,G__102125,G__102126,G__102127,G__102128,G__102129,G__102130,G__102131,G__102132,G__102133,G__102134,G__102135,G__102136,G__102137,G__102138,G__102139,G__102140,G__102141,G__102142,G__102143,G__102144,G__102145,G__102146,G__102147,G__102148,G__102149,G__102150,G__102151,G__102152,G__102153,G__102154,G__102155,G__102156,G__102157,G__102158,G__102159,G__102160,G__102161,G__102162,G__102163,G__102164,G__102165,G__102166,G__102167,G__102168,G__102169,G__102170,G__102171,G__102172,G__102173,G__102174,G__102175,G__102176,G__102177) : tailrecursion.hoplon.pre.call(null,G__102092,G__102093,G__102094,G__102095,G__102096,G__102097,G__102098,G__102099,G__102100,G__102101,G__102102,G__102103,G__102104,G__102105,G__102106,G__102107,G__102108,G__102109,G__102110,G__102111,G__102112,G__102113,G__102114,G__102115,G__102116,G__102117,G__102118,G__102119,G__102120,G__102121,G__102122,G__102123,G__102124,G__102125,G__102126,G__102127,G__102128,G__102129,G__102130,G__102131,G__102132,G__102133,G__102134,G__102135,G__102136,G__102137,G__102138,G__102139,G__102140,G__102141,G__102142,G__102143,G__102144,G__102145,G__102146,G__102147,G__102148,G__102149,G__102150,G__102151,G__102152,G__102153,G__102154,G__102155,G__102156,G__102157,G__102158,G__102159,G__102160,G__102161,G__102162,G__102163,G__102164,G__102165,G__102166,G__102167,G__102168,G__102169,G__102170,G__102171,G__102172,G__102173,G__102174,G__102175,G__102176,G__102177));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102090,G__102091) : tailrecursion.hoplon.div.call(null,G__102090,G__102091));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102089) : tailrecursion.hoplon.div.call(null,G__102089));
})(),(function (){var G__102266 = cljs.core.PersistentArrayMap.EMPTY;
var G__102267 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So we want, ",(function (){var G__102268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102269 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102268,G__102269) : tailrecursion.hoplon.markdown.code_node.call(null,G__102268,G__102269));
})(),", ",(function (){var G__102270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102271 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102270,G__102271) : tailrecursion.hoplon.markdown.code_node.call(null,G__102270,G__102271));
})(),", ",(function (){var G__102272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102273 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102272,G__102273) : tailrecursion.hoplon.markdown.code_node.call(null,G__102272,G__102273));
})(),", ",(function (){var G__102274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102275 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102274,G__102275) : tailrecursion.hoplon.markdown.code_node.call(null,G__102274,G__102275));
})(),", ",(function (){var G__102276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102277 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102276,G__102277) : tailrecursion.hoplon.markdown.code_node.call(null,G__102276,G__102277));
})()," (in written order, not the order of application)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102266,G__102267) : tailrecursion.hoplon.markdown.para_node.call(null,G__102266,G__102267));
})(),(function (){var G__102278 = cljs.core.PersistentArrayMap.EMPTY;
var G__102279 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second, we want ",(function (){var G__102280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102281 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102280,G__102281) : tailrecursion.hoplon.markdown.code_node.call(null,G__102280,G__102281));
})(),", ",(function (){var G__102282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102283 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102282,G__102283) : tailrecursion.hoplon.markdown.code_node.call(null,G__102282,G__102283));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102278,G__102279) : tailrecursion.hoplon.markdown.para_node.call(null,G__102278,G__102279));
})(),(function (){var G__102284 = cljs.core.PersistentArrayMap.EMPTY;
var G__102285 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The third:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102284,G__102285) : tailrecursion.hoplon.markdown.para_node.call(null,G__102284,G__102285));
})(),(function (){var G__102286 = (function (){var G__102287 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102288 = (function (){var G__102289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102290 = "(";
var G__102291 = (function (){var G__102320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102321 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102320,G__102321) : tailrecursion.hoplon.span.call(null,G__102320,G__102321));
})();
var G__102292 = "(";
var G__102293 = (function (){var G__102322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102323 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102322,G__102323) : tailrecursion.hoplon.span.call(null,G__102322,G__102323));
})();
var G__102294 = (function (){var G__102324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102325 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102324,G__102325) : tailrecursion.hoplon.span.call(null,G__102324,G__102325));
})();
var G__102295 = " (";
var G__102296 = (function (){var G__102326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102327 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102326,G__102327) : tailrecursion.hoplon.span.call(null,G__102326,G__102327));
})();
var G__102297 = " (";
var G__102298 = (function (){var G__102328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102329 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102328,G__102329) : tailrecursion.hoplon.span.call(null,G__102328,G__102329));
})();
var G__102299 = " (";
var G__102300 = (function (){var G__102330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102331 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102330,G__102331) : tailrecursion.hoplon.span.call(null,G__102330,G__102331));
})();
var G__102301 = " (";
var G__102302 = (function (){var G__102332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102333 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102332,G__102333) : tailrecursion.hoplon.span.call(null,G__102332,G__102333));
})();
var G__102303 = " (";
var G__102304 = (function (){var G__102334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102335 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102334,G__102335) : tailrecursion.hoplon.span.call(null,G__102334,G__102335));
})();
var G__102305 = " ";
var G__102306 = (function (){var G__102336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102337 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102336,G__102337) : tailrecursion.hoplon.span.call(null,G__102336,G__102337));
})();
var G__102307 = ")))))))\n((";
var G__102308 = (function (){var G__102338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102339 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102338,G__102339) : tailrecursion.hoplon.span.call(null,G__102338,G__102339));
})();
var G__102309 = " (";
var G__102310 = (function (){var G__102340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102341 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102340,G__102341) : tailrecursion.hoplon.span.call(null,G__102340,G__102341));
})();
var G__102311 = " (";
var G__102312 = (function (){var G__102342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102343 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102342,G__102343) : tailrecursion.hoplon.span.call(null,G__102342,G__102343));
})();
var G__102313 = " (";
var G__102314 = (function (){var G__102344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102345 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102344,G__102345) : tailrecursion.hoplon.span.call(null,G__102344,G__102345));
})();
var G__102315 = " (";
var G__102316 = (function (){var G__102346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102347 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102346,G__102347) : tailrecursion.hoplon.span.call(null,G__102346,G__102347));
})();
var G__102317 = " ";
var G__102318 = (function (){var G__102348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102349 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102348,G__102349) : tailrecursion.hoplon.span.call(null,G__102348,G__102349));
})();
var G__102319 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__102289,G__102290,G__102291,G__102292,G__102293,G__102294,G__102295,G__102296,G__102297,G__102298,G__102299,G__102300,G__102301,G__102302,G__102303,G__102304,G__102305,G__102306,G__102307,G__102308,G__102309,G__102310,G__102311,G__102312,G__102313,G__102314,G__102315,G__102316,G__102317,G__102318,G__102319) : tailrecursion.hoplon.pre.call(null,G__102289,G__102290,G__102291,G__102292,G__102293,G__102294,G__102295,G__102296,G__102297,G__102298,G__102299,G__102300,G__102301,G__102302,G__102303,G__102304,G__102305,G__102306,G__102307,G__102308,G__102309,G__102310,G__102311,G__102312,G__102313,G__102314,G__102315,G__102316,G__102317,G__102318,G__102319));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102287,G__102288) : tailrecursion.hoplon.div.call(null,G__102287,G__102288));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102286) : tailrecursion.hoplon.div.call(null,G__102286));
})(),(function (){var G__102350 = cljs.core.PersistentArrayMap.EMPTY;
var G__102351 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we can see that we",(function (){var G__102352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__102353 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102352,G__102353) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102352,G__102353));
})(),"re going to have to do alternating ",(function (){var G__102354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102355 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102354,G__102355) : tailrecursion.hoplon.markdown.code_node.call(null,G__102354,G__102355));
})(),"s and ",(function (){var G__102356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102356,G__102357) : tailrecursion.hoplon.markdown.code_node.call(null,G__102356,G__102357));
})(),"s till we get to the answer (if you don",(function (){var G__102358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__102359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__102358,G__102359) : tailrecursion.hoplon.markdown.simple_node.call(null,G__102358,G__102359));
})(),"t believe me, write it out a bit, and be sure to check that this hypothesis works at the end as well!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102350,G__102351) : tailrecursion.hoplon.markdown.para_node.call(null,G__102350,G__102351));
})(),(function (){var G__102360 = cljs.core.PersistentArrayMap.EMPTY;
var G__102361 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So our answer is, ",(function (){var G__102362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first"], null);
var G__102363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102362,G__102363) : tailrecursion.hoplon.markdown.code_node.call(null,G__102362,G__102363));
})(),", ",(function (){var G__102364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rest"], null);
var G__102365 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102364,G__102365) : tailrecursion.hoplon.markdown.code_node.call(null,G__102364,G__102365));
})(),", repeated 6 times (again, in written order, or equivalently, reverse application order)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102360,G__102361) : tailrecursion.hoplon.markdown.para_node.call(null,G__102360,G__102361));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102088;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102087;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102085;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102366 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102367 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102368 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102369 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102370 = cljs.core.PersistentArrayMap.EMPTY;
var G__102371 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we define ",(function (){var G__102372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"x"], null);
var G__102373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102372,G__102373) : tailrecursion.hoplon.markdown.code_node.call(null,G__102372,G__102373));
})()," and ",(function (){var G__102374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"y"], null);
var G__102375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102374,G__102375) : tailrecursion.hoplon.markdown.code_node.call(null,G__102374,G__102375));
})()," to be two lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102370,G__102371) : tailrecursion.hoplon.markdown.para_node.call(null,G__102370,G__102371));
})(),(function (){var G__102376 = (function (){var G__102377 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102378 = (function (){var G__102379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102380 = "(";
var G__102381 = (function (){var G__102401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102402 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102401,G__102402) : tailrecursion.hoplon.span.call(null,G__102401,G__102402));
})();
var G__102382 = (function (){var G__102403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102404 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102403,G__102404) : tailrecursion.hoplon.span.call(null,G__102403,G__102404));
})();
var G__102383 = " (";
var G__102384 = (function (){var G__102405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102406 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102405,G__102406) : tailrecursion.hoplon.span.call(null,G__102405,G__102406));
})();
var G__102385 = (function (){var G__102407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102408 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102407,G__102408) : tailrecursion.hoplon.span.call(null,G__102407,G__102408));
})();
var G__102386 = " ";
var G__102387 = (function (){var G__102409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102410 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102409,G__102410) : tailrecursion.hoplon.span.call(null,G__102409,G__102410));
})();
var G__102388 = " ";
var G__102389 = (function (){var G__102411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102412 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102411,G__102412) : tailrecursion.hoplon.span.call(null,G__102411,G__102412));
})();
var G__102390 = "))\n(";
var G__102391 = (function (){var G__102413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102414 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102413,G__102414) : tailrecursion.hoplon.span.call(null,G__102413,G__102414));
})();
var G__102392 = (function (){var G__102415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102416 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102415,G__102416) : tailrecursion.hoplon.span.call(null,G__102415,G__102416));
})();
var G__102393 = " (";
var G__102394 = (function (){var G__102417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102418 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102417,G__102418) : tailrecursion.hoplon.span.call(null,G__102417,G__102418));
})();
var G__102395 = (function (){var G__102419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102420 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102419,G__102420) : tailrecursion.hoplon.span.call(null,G__102419,G__102420));
})();
var G__102396 = " ";
var G__102397 = (function (){var G__102421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102422 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102421,G__102422) : tailrecursion.hoplon.span.call(null,G__102421,G__102422));
})();
var G__102398 = " ";
var G__102399 = (function (){var G__102423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102424 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102423,G__102424) : tailrecursion.hoplon.span.call(null,G__102423,G__102424));
})();
var G__102400 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__102379,G__102380,G__102381,G__102382,G__102383,G__102384,G__102385,G__102386,G__102387,G__102388,G__102389,G__102390,G__102391,G__102392,G__102393,G__102394,G__102395,G__102396,G__102397,G__102398,G__102399,G__102400) : tailrecursion.hoplon.pre.call(null,G__102379,G__102380,G__102381,G__102382,G__102383,G__102384,G__102385,G__102386,G__102387,G__102388,G__102389,G__102390,G__102391,G__102392,G__102393,G__102394,G__102395,G__102396,G__102397,G__102398,G__102399,G__102400));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102377,G__102378) : tailrecursion.hoplon.div.call(null,G__102377,G__102378));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102376) : tailrecursion.hoplon.div.call(null,G__102376));
})(),(function (){var G__102425 = cljs.core.PersistentArrayMap.EMPTY;
var G__102426 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What result is printed by the interpreter in response to evaluating each of the following expressions:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102425,G__102426) : tailrecursion.hoplon.markdown.para_node.call(null,G__102425,G__102426));
})(),(function (){var G__102427 = (function (){var G__102428 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102429 = (function (){var G__102430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102431 = "(";
var G__102432 = (function (){var G__102447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102448 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102447,G__102448) : tailrecursion.hoplon.span.call(null,G__102447,G__102448));
})();
var G__102433 = (function (){var G__102449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102450 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102449,G__102450) : tailrecursion.hoplon.span.call(null,G__102449,G__102450));
})();
var G__102434 = " ";
var G__102435 = (function (){var G__102451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102452 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102451,G__102452) : tailrecursion.hoplon.span.call(null,G__102451,G__102452));
})();
var G__102436 = ")\n\n(";
var G__102437 = (function (){var G__102453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102454 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102453,G__102454) : tailrecursion.hoplon.span.call(null,G__102453,G__102454));
})();
var G__102438 = (function (){var G__102455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102456 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102455,G__102456) : tailrecursion.hoplon.span.call(null,G__102455,G__102456));
})();
var G__102439 = " ";
var G__102440 = (function (){var G__102457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102458 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102457,G__102458) : tailrecursion.hoplon.span.call(null,G__102457,G__102458));
})();
var G__102441 = ")\n\n(";
var G__102442 = (function (){var G__102459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102460 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102459,G__102460) : tailrecursion.hoplon.span.call(null,G__102459,G__102460));
})();
var G__102443 = (function (){var G__102461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102462 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102461,G__102462) : tailrecursion.hoplon.span.call(null,G__102461,G__102462));
})();
var G__102444 = " ";
var G__102445 = (function (){var G__102463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102464 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102463,G__102464) : tailrecursion.hoplon.span.call(null,G__102463,G__102464));
})();
var G__102446 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__102430,G__102431,G__102432,G__102433,G__102434,G__102435,G__102436,G__102437,G__102438,G__102439,G__102440,G__102441,G__102442,G__102443,G__102444,G__102445,G__102446) : tailrecursion.hoplon.pre.call(null,G__102430,G__102431,G__102432,G__102433,G__102434,G__102435,G__102436,G__102437,G__102438,G__102439,G__102440,G__102441,G__102442,G__102443,G__102444,G__102445,G__102446));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102428,G__102429) : tailrecursion.hoplon.div.call(null,G__102428,G__102429));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102427) : tailrecursion.hoplon.div.call(null,G__102427));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102369;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102368;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102367;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102366;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102465 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102466 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102467 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102468 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102469 = (function (){var G__102470 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102471 = (function (){var G__102472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102473 = "(";
var G__102474 = (function (){var G__102525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102526 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102525,G__102526) : tailrecursion.hoplon.span.call(null,G__102525,G__102526));
})();
var G__102475 = (function (){var G__102527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102528 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102527,G__102528) : tailrecursion.hoplon.span.call(null,G__102527,G__102528));
})();
var G__102476 = " ";
var G__102477 = (function (){var G__102529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102530 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102529,G__102530) : tailrecursion.hoplon.span.call(null,G__102529,G__102530));
})();
var G__102478 = ")\n(";
var G__102479 = (function (){var G__102531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102532 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102531,G__102532) : tailrecursion.hoplon.span.call(null,G__102531,G__102532));
})();
var G__102480 = " ";
var G__102481 = (function (){var G__102533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102534 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102533,G__102534) : tailrecursion.hoplon.span.call(null,G__102533,G__102534));
})();
var G__102482 = " ";
var G__102483 = (function (){var G__102535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102536 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102535,G__102536) : tailrecursion.hoplon.span.call(null,G__102535,G__102536));
})();
var G__102484 = " ";
var G__102485 = (function (){var G__102537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102538 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102537,G__102538) : tailrecursion.hoplon.span.call(null,G__102537,G__102538));
})();
var G__102486 = " ";
var G__102487 = (function (){var G__102539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102540 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102539,G__102540) : tailrecursion.hoplon.span.call(null,G__102539,G__102540));
})();
var G__102488 = " ";
var G__102489 = (function (){var G__102541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102542 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102541,G__102542) : tailrecursion.hoplon.span.call(null,G__102541,G__102542));
})();
var G__102490 = ")\n\n(";
var G__102491 = (function (){var G__102543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102544 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102543,G__102544) : tailrecursion.hoplon.span.call(null,G__102543,G__102544));
})();
var G__102492 = (function (){var G__102545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102546 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102545,G__102546) : tailrecursion.hoplon.span.call(null,G__102545,G__102546));
})();
var G__102493 = " ";
var G__102494 = (function (){var G__102547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102548 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102547,G__102548) : tailrecursion.hoplon.span.call(null,G__102547,G__102548));
})();
var G__102495 = ")\n((";
var G__102496 = (function (){var G__102549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102550 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102549,G__102550) : tailrecursion.hoplon.span.call(null,G__102549,G__102550));
})();
var G__102497 = " ";
var G__102498 = (function (){var G__102551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102552 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102551,G__102552) : tailrecursion.hoplon.span.call(null,G__102551,G__102552));
})();
var G__102499 = " ";
var G__102500 = (function (){var G__102553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102554 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102553,G__102554) : tailrecursion.hoplon.span.call(null,G__102553,G__102554));
})();
var G__102501 = ") ";
var G__102502 = (function (){var G__102555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102556 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102555,G__102556) : tailrecursion.hoplon.span.call(null,G__102555,G__102556));
})();
var G__102503 = " ";
var G__102504 = (function (){var G__102557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102558 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102557,G__102558) : tailrecursion.hoplon.span.call(null,G__102557,G__102558));
})();
var G__102505 = " ";
var G__102506 = (function (){var G__102559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102560 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102559,G__102560) : tailrecursion.hoplon.span.call(null,G__102559,G__102560));
})();
var G__102507 = ")\n\n(";
var G__102508 = (function (){var G__102561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102562 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102561,G__102562) : tailrecursion.hoplon.span.call(null,G__102561,G__102562));
})();
var G__102509 = (function (){var G__102563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102564 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102563,G__102564) : tailrecursion.hoplon.span.call(null,G__102563,G__102564));
})();
var G__102510 = " ";
var G__102511 = (function (){var G__102565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102566 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102565,G__102566) : tailrecursion.hoplon.span.call(null,G__102565,G__102566));
})();
var G__102512 = ")\n((";
var G__102513 = (function (){var G__102567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102568 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102567,G__102568) : tailrecursion.hoplon.span.call(null,G__102567,G__102568));
})();
var G__102514 = " ";
var G__102515 = (function (){var G__102569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102570 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102569,G__102570) : tailrecursion.hoplon.span.call(null,G__102569,G__102570));
})();
var G__102516 = " ";
var G__102517 = (function (){var G__102571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102572 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102571,G__102572) : tailrecursion.hoplon.span.call(null,G__102571,G__102572));
})();
var G__102518 = ") (";
var G__102519 = (function (){var G__102573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102574 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102573,G__102574) : tailrecursion.hoplon.span.call(null,G__102573,G__102574));
})();
var G__102520 = " ";
var G__102521 = (function (){var G__102575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102576 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102575,G__102576) : tailrecursion.hoplon.span.call(null,G__102575,G__102576));
})();
var G__102522 = " ";
var G__102523 = (function (){var G__102577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102578 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102577,G__102578) : tailrecursion.hoplon.span.call(null,G__102577,G__102578));
})();
var G__102524 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__102472,G__102473,G__102474,G__102475,G__102476,G__102477,G__102478,G__102479,G__102480,G__102481,G__102482,G__102483,G__102484,G__102485,G__102486,G__102487,G__102488,G__102489,G__102490,G__102491,G__102492,G__102493,G__102494,G__102495,G__102496,G__102497,G__102498,G__102499,G__102500,G__102501,G__102502,G__102503,G__102504,G__102505,G__102506,G__102507,G__102508,G__102509,G__102510,G__102511,G__102512,G__102513,G__102514,G__102515,G__102516,G__102517,G__102518,G__102519,G__102520,G__102521,G__102522,G__102523,G__102524) : tailrecursion.hoplon.pre.call(null,G__102472,G__102473,G__102474,G__102475,G__102476,G__102477,G__102478,G__102479,G__102480,G__102481,G__102482,G__102483,G__102484,G__102485,G__102486,G__102487,G__102488,G__102489,G__102490,G__102491,G__102492,G__102493,G__102494,G__102495,G__102496,G__102497,G__102498,G__102499,G__102500,G__102501,G__102502,G__102503,G__102504,G__102505,G__102506,G__102507,G__102508,G__102509,G__102510,G__102511,G__102512,G__102513,G__102514,G__102515,G__102516,G__102517,G__102518,G__102519,G__102520,G__102521,G__102522,G__102523,G__102524));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102470,G__102471) : tailrecursion.hoplon.div.call(null,G__102470,G__102471));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102469) : tailrecursion.hoplon.div.call(null,G__102469));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102468;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102467;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102466;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102465;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102579 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102580 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102581 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102582 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102583 = cljs.core.PersistentArrayMap.EMPTY;
var G__102584 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify your ",(function (){var G__102585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__102586 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102585,G__102586) : tailrecursion.hoplon.markdown.code_node.call(null,G__102585,G__102586));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/18/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.18"], null)], 0))," to produce a ",(function (){var G__102587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"deep-reverse"], null);
var G__102588 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102587,G__102588) : tailrecursion.hoplon.markdown.code_node.call(null,G__102587,G__102588));
})()," procedure that takes a list as argument and returns as its value the list with its elements reversed and with all sublists deep-reversed as well. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102583,G__102584) : tailrecursion.hoplon.markdown.para_node.call(null,G__102583,G__102584));
})(),(function (){var G__102589 = cljs.core.PersistentArrayMap.EMPTY;
var G__102590 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["```clj (def x (list (list 1 2) (list 3 4)))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102589,G__102590) : tailrecursion.hoplon.markdown.para_node.call(null,G__102589,G__102590));
})(),(function (){var G__102591 = cljs.core.PersistentArrayMap.EMPTY;
var G__102592 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["x ((1 2) (3 4))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102591,G__102592) : tailrecursion.hoplon.markdown.para_node.call(null,G__102591,G__102592));
})(),(function (){var G__102593 = cljs.core.PersistentArrayMap.EMPTY;
var G__102594 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(reverse x) ((3 4) (1 2))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102593,G__102594) : tailrecursion.hoplon.markdown.para_node.call(null,G__102593,G__102594));
})(),(function (){var G__102595 = cljs.core.PersistentArrayMap.EMPTY;
var G__102596 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(deep-reverse x) ((4 3) (2 1))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102595,G__102596) : tailrecursion.hoplon.markdown.para_node.call(null,G__102595,G__102596));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102582;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102581;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102580;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102579;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102597 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102598 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102599 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102600 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102601 = (function (){var G__102602 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102603 = (function (){var G__102604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102605 = "(";
var G__102606 = (function (){var G__102658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102659 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102658,G__102659) : tailrecursion.hoplon.span.call(null,G__102658,G__102659));
})();
var G__102607 = (function (){var G__102660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102661 = "deep-reverse";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102660,G__102661) : tailrecursion.hoplon.span.call(null,G__102660,G__102661));
})();
var G__102608 = " [";
var G__102609 = (function (){var G__102662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102663 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102662,G__102663) : tailrecursion.hoplon.span.call(null,G__102662,G__102663));
})();
var G__102610 = "]\n  (";
var G__102611 = (function (){var G__102664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102665 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102664,G__102665) : tailrecursion.hoplon.span.call(null,G__102664,G__102665));
})();
var G__102612 = "[";
var G__102613 = (function (){var G__102666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102667 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102666,G__102667) : tailrecursion.hoplon.span.call(null,G__102666,G__102667));
})();
var G__102614 = " ";
var G__102615 = (function (){var G__102668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102669 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102668,G__102669) : tailrecursion.hoplon.span.call(null,G__102668,G__102669));
})();
var G__102616 = "\n         ";
var G__102617 = (function (){var G__102670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102671 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102670,G__102671) : tailrecursion.hoplon.span.call(null,G__102670,G__102671));
})();
var G__102618 = "   (";
var G__102619 = (function (){var G__102672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102673 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102672,G__102673) : tailrecursion.hoplon.span.call(null,G__102672,G__102673));
})();
var G__102620 = ")]\n    (";
var G__102621 = (function (){var G__102674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102675 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102674,G__102675) : tailrecursion.hoplon.span.call(null,G__102674,G__102675));
})();
var G__102622 = "(";
var G__102623 = (function (){var G__102676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102677 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102676,G__102677) : tailrecursion.hoplon.span.call(null,G__102676,G__102677));
})();
var G__102624 = "(";
var G__102625 = (function (){var G__102678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102679 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102678,G__102679) : tailrecursion.hoplon.span.call(null,G__102678,G__102679));
})();
var G__102626 = " ";
var G__102627 = (function (){var G__102680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102681 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102680,G__102681) : tailrecursion.hoplon.span.call(null,G__102680,G__102681));
})();
var G__102628 = ")\n               (";
var G__102629 = (function (){var G__102682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102683 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102682,G__102683) : tailrecursion.hoplon.span.call(null,G__102682,G__102683));
})();
var G__102630 = " ";
var G__102631 = (function (){var G__102684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102685 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102684,G__102685) : tailrecursion.hoplon.span.call(null,G__102684,G__102685));
})();
var G__102632 = ")) ";
var G__102633 = (function (){var G__102686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102687 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102686,G__102687) : tailrecursion.hoplon.span.call(null,G__102686,G__102687));
})();
var G__102634 = "\n          (";
var G__102635 = (function (){var G__102688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102689 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102688,G__102689) : tailrecursion.hoplon.span.call(null,G__102688,G__102689));
})();
var G__102636 = "(";
var G__102637 = (function (){var G__102690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102691 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102690,G__102691) : tailrecursion.hoplon.span.call(null,G__102690,G__102691));
})();
var G__102638 = " ";
var G__102639 = (function (){var G__102692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102693 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102692,G__102693) : tailrecursion.hoplon.span.call(null,G__102692,G__102693));
})();
var G__102640 = ")) ";
var G__102641 = (function (){var G__102694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102695 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102694,G__102695) : tailrecursion.hoplon.span.call(null,G__102694,G__102695));
})();
var G__102642 = "\n          ";
var G__102643 = (function (){var G__102696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102697 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102696,G__102697) : tailrecursion.hoplon.span.call(null,G__102696,G__102697));
})();
var G__102644 = " (";
var G__102645 = (function (){var G__102698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102699 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102698,G__102699) : tailrecursion.hoplon.span.call(null,G__102698,G__102699));
})();
var G__102646 = " (";
var G__102647 = (function (){var G__102700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102701 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102700,G__102701) : tailrecursion.hoplon.span.call(null,G__102700,G__102701));
})();
var G__102648 = (function (){var G__102702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102703 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102702,G__102703) : tailrecursion.hoplon.span.call(null,G__102702,G__102703));
})();
var G__102649 = ")\n                       (";
var G__102650 = (function (){var G__102704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102705 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102704,G__102705) : tailrecursion.hoplon.span.call(null,G__102704,G__102705));
})();
var G__102651 = (function (){var G__102706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102707 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102706,G__102707) : tailrecursion.hoplon.span.call(null,G__102706,G__102707));
})();
var G__102652 = "\n                             (";
var G__102653 = (function (){var G__102708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102709 = "deep-reverse";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102708,G__102709) : tailrecursion.hoplon.span.call(null,G__102708,G__102709));
})();
var G__102654 = " (";
var G__102655 = (function (){var G__102710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102711 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102710,G__102711) : tailrecursion.hoplon.span.call(null,G__102710,G__102711));
})();
var G__102656 = (function (){var G__102712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102713 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102712,G__102713) : tailrecursion.hoplon.span.call(null,G__102712,G__102713));
})();
var G__102657 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__102604,G__102605,G__102606,G__102607,G__102608,G__102609,G__102610,G__102611,G__102612,G__102613,G__102614,G__102615,G__102616,G__102617,G__102618,G__102619,G__102620,G__102621,G__102622,G__102623,G__102624,G__102625,G__102626,G__102627,G__102628,G__102629,G__102630,G__102631,G__102632,G__102633,G__102634,G__102635,G__102636,G__102637,G__102638,G__102639,G__102640,G__102641,G__102642,G__102643,G__102644,G__102645,G__102646,G__102647,G__102648,G__102649,G__102650,G__102651,G__102652,G__102653,G__102654,G__102655,G__102656,G__102657) : tailrecursion.hoplon.pre.call(null,G__102604,G__102605,G__102606,G__102607,G__102608,G__102609,G__102610,G__102611,G__102612,G__102613,G__102614,G__102615,G__102616,G__102617,G__102618,G__102619,G__102620,G__102621,G__102622,G__102623,G__102624,G__102625,G__102626,G__102627,G__102628,G__102629,G__102630,G__102631,G__102632,G__102633,G__102634,G__102635,G__102636,G__102637,G__102638,G__102639,G__102640,G__102641,G__102642,G__102643,G__102644,G__102645,G__102646,G__102647,G__102648,G__102649,G__102650,G__102651,G__102652,G__102653,G__102654,G__102655,G__102656,G__102657));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102602,G__102603) : tailrecursion.hoplon.div.call(null,G__102602,G__102603));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102601) : tailrecursion.hoplon.div.call(null,G__102601));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102600;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102599;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102598;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102597;
}})()], 0))], 0)),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102714 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102715 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102718 = cljs.core.PersistentArrayMap.EMPTY;
var G__102719 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Write a procedure ",(function (){var G__102720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fringe"], null);
var G__102721 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__102720,G__102721) : tailrecursion.hoplon.markdown.code_node.call(null,G__102720,G__102721));
})()," that takes as argument a tree (represented as a list) and returns a list whose elements are all the leaves of the tree arranged in left-to-right order. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__102718,G__102719) : tailrecursion.hoplon.markdown.para_node.call(null,G__102718,G__102719));
})(),(function (){var G__102722 = (function (){var G__102723 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102724 = (function (){var G__102725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102726 = "(";
var G__102727 = (function (){var G__102777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102778 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102777,G__102778) : tailrecursion.hoplon.span.call(null,G__102777,G__102778));
})();
var G__102728 = (function (){var G__102779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102780 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102779,G__102780) : tailrecursion.hoplon.span.call(null,G__102779,G__102780));
})();
var G__102729 = " (";
var G__102730 = (function (){var G__102781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102782 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102781,G__102782) : tailrecursion.hoplon.span.call(null,G__102781,G__102782));
})();
var G__102731 = "(";
var G__102732 = (function (){var G__102783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102784 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102783,G__102784) : tailrecursion.hoplon.span.call(null,G__102783,G__102784));
})();
var G__102733 = (function (){var G__102785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102786 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102785,G__102786) : tailrecursion.hoplon.span.call(null,G__102785,G__102786));
})();
var G__102734 = " ";
var G__102735 = (function (){var G__102787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102788 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102787,G__102788) : tailrecursion.hoplon.span.call(null,G__102787,G__102788));
})();
var G__102736 = ") (";
var G__102737 = (function (){var G__102789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102790 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102789,G__102790) : tailrecursion.hoplon.span.call(null,G__102789,G__102790));
})();
var G__102738 = (function (){var G__102791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102792 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102791,G__102792) : tailrecursion.hoplon.span.call(null,G__102791,G__102792));
})();
var G__102739 = " ";
var G__102740 = (function (){var G__102793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102794 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102793,G__102794) : tailrecursion.hoplon.span.call(null,G__102793,G__102794));
})();
var G__102741 = ")))\n\n(";
var G__102742 = (function (){var G__102795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102796 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102795,G__102796) : tailrecursion.hoplon.span.call(null,G__102795,G__102796));
})();
var G__102743 = " ";
var G__102744 = (function (){var G__102797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102798 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102797,G__102798) : tailrecursion.hoplon.span.call(null,G__102797,G__102798));
})();
var G__102745 = ")\n(";
var G__102746 = (function (){var G__102799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102800 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102799,G__102800) : tailrecursion.hoplon.span.call(null,G__102799,G__102800));
})();
var G__102747 = " ";
var G__102748 = (function (){var G__102801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102802 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102801,G__102802) : tailrecursion.hoplon.span.call(null,G__102801,G__102802));
})();
var G__102749 = " ";
var G__102750 = (function (){var G__102803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102804 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102803,G__102804) : tailrecursion.hoplon.span.call(null,G__102803,G__102804));
})();
var G__102751 = " ";
var G__102752 = (function (){var G__102805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102806 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102805,G__102806) : tailrecursion.hoplon.span.call(null,G__102805,G__102806));
})();
var G__102753 = ")\n\n(";
var G__102754 = (function (){var G__102807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102808 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102807,G__102808) : tailrecursion.hoplon.span.call(null,G__102807,G__102808));
})();
var G__102755 = " (";
var G__102756 = (function (){var G__102809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102810 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102809,G__102810) : tailrecursion.hoplon.span.call(null,G__102809,G__102810));
})();
var G__102757 = (function (){var G__102811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102812 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102811,G__102812) : tailrecursion.hoplon.span.call(null,G__102811,G__102812));
})();
var G__102758 = " ";
var G__102759 = (function (){var G__102813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102814 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102813,G__102814) : tailrecursion.hoplon.span.call(null,G__102813,G__102814));
})();
var G__102760 = "))\n(";
var G__102761 = (function (){var G__102815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102816 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102815,G__102816) : tailrecursion.hoplon.span.call(null,G__102815,G__102816));
})();
var G__102762 = " ";
var G__102763 = (function (){var G__102817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102818 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102817,G__102818) : tailrecursion.hoplon.span.call(null,G__102817,G__102818));
})();
var G__102764 = " ";
var G__102765 = (function (){var G__102819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102820 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102819,G__102820) : tailrecursion.hoplon.span.call(null,G__102819,G__102820));
})();
var G__102766 = " ";
var G__102767 = (function (){var G__102821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102822 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102821,G__102822) : tailrecursion.hoplon.span.call(null,G__102821,G__102822));
})();
var G__102768 = " ";
var G__102769 = (function (){var G__102823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102824 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102823,G__102824) : tailrecursion.hoplon.span.call(null,G__102823,G__102824));
})();
var G__102770 = " ";
var G__102771 = (function (){var G__102825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102826 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102825,G__102826) : tailrecursion.hoplon.span.call(null,G__102825,G__102826));
})();
var G__102772 = " ";
var G__102773 = (function (){var G__102827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102828 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102827,G__102828) : tailrecursion.hoplon.span.call(null,G__102827,G__102828));
})();
var G__102774 = " ";
var G__102775 = (function (){var G__102829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__102830 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102829,G__102830) : tailrecursion.hoplon.span.call(null,G__102829,G__102830));
})();
var G__102776 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__102725,G__102726,G__102727,G__102728,G__102729,G__102730,G__102731,G__102732,G__102733,G__102734,G__102735,G__102736,G__102737,G__102738,G__102739,G__102740,G__102741,G__102742,G__102743,G__102744,G__102745,G__102746,G__102747,G__102748,G__102749,G__102750,G__102751,G__102752,G__102753,G__102754,G__102755,G__102756,G__102757,G__102758,G__102759,G__102760,G__102761,G__102762,G__102763,G__102764,G__102765,G__102766,G__102767,G__102768,G__102769,G__102770,G__102771,G__102772,G__102773,G__102774,G__102775,G__102776) : tailrecursion.hoplon.pre.call(null,G__102725,G__102726,G__102727,G__102728,G__102729,G__102730,G__102731,G__102732,G__102733,G__102734,G__102735,G__102736,G__102737,G__102738,G__102739,G__102740,G__102741,G__102742,G__102743,G__102744,G__102745,G__102746,G__102747,G__102748,G__102749,G__102750,G__102751,G__102752,G__102753,G__102754,G__102755,G__102756,G__102757,G__102758,G__102759,G__102760,G__102761,G__102762,G__102763,G__102764,G__102765,G__102766,G__102767,G__102768,G__102769,G__102770,G__102771,G__102772,G__102773,G__102774,G__102775,G__102776));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102723,G__102724) : tailrecursion.hoplon.div.call(null,G__102723,G__102724));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102722) : tailrecursion.hoplon.div.call(null,G__102722));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102716;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102715;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102714;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_102831 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102832 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_102833 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_102834 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__102835 = (function (){var G__102836 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__102837 = (function (){var G__102838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__102839 = "(";
var G__102840 = (function (){var G__102916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102917 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102916,G__102917) : tailrecursion.hoplon.span.call(null,G__102916,G__102917));
})();
var G__102841 = (function (){var G__102918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102919 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102918,G__102919) : tailrecursion.hoplon.span.call(null,G__102918,G__102919));
})();
var G__102842 = " [";
var G__102843 = (function (){var G__102920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102921 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102920,G__102921) : tailrecursion.hoplon.span.call(null,G__102920,G__102921));
})();
var G__102844 = "]\n  (";
var G__102845 = (function (){var G__102922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102923 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102922,G__102923) : tailrecursion.hoplon.span.call(null,G__102922,G__102923));
})();
var G__102846 = "[";
var G__102847 = (function (){var G__102924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102925 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102924,G__102925) : tailrecursion.hoplon.span.call(null,G__102924,G__102925));
})();
var G__102848 = " ";
var G__102849 = (function (){var G__102926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102927 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102926,G__102927) : tailrecursion.hoplon.span.call(null,G__102926,G__102927));
})();
var G__102850 = "\n         ";
var G__102851 = (function (){var G__102928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102929 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102928,G__102929) : tailrecursion.hoplon.span.call(null,G__102928,G__102929));
})();
var G__102852 = "   (";
var G__102853 = (function (){var G__102930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102931 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102930,G__102931) : tailrecursion.hoplon.span.call(null,G__102930,G__102931));
})();
var G__102854 = ")]\n    (";
var G__102855 = (function (){var G__102932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102933 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102932,G__102933) : tailrecursion.hoplon.span.call(null,G__102932,G__102933));
})();
var G__102856 = "(";
var G__102857 = (function (){var G__102934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102935 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102934,G__102935) : tailrecursion.hoplon.span.call(null,G__102934,G__102935));
})();
var G__102858 = "(";
var G__102859 = (function (){var G__102936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102937 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102936,G__102937) : tailrecursion.hoplon.span.call(null,G__102936,G__102937));
})();
var G__102860 = " ";
var G__102861 = (function (){var G__102938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102939 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102938,G__102939) : tailrecursion.hoplon.span.call(null,G__102938,G__102939));
})();
var G__102862 = "))\n          (";
var G__102863 = (function (){var G__102940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102941 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102940,G__102941) : tailrecursion.hoplon.span.call(null,G__102940,G__102941));
})();
var G__102864 = " (";
var G__102865 = (function (){var G__102942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102943 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102942,G__102943) : tailrecursion.hoplon.span.call(null,G__102942,G__102943));
})();
var G__102866 = " ";
var G__102867 = (function (){var G__102944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__102945 = "\"Oops. That's not a list.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102944,G__102945) : tailrecursion.hoplon.span.call(null,G__102944,G__102945));
})();
var G__102868 = "))\n          (";
var G__102869 = (function (){var G__102946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102947 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102946,G__102947) : tailrecursion.hoplon.span.call(null,G__102946,G__102947));
})();
var G__102870 = " ";
var G__102871 = (function (){var G__102948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102949 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102948,G__102949) : tailrecursion.hoplon.span.call(null,G__102948,G__102949));
})();
var G__102872 = ")\n          ";
var G__102873 = (function (){var G__102950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102951 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102950,G__102951) : tailrecursion.hoplon.span.call(null,G__102950,G__102951));
})();
var G__102874 = "\n          (";
var G__102875 = (function (){var G__102952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102953 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102952,G__102953) : tailrecursion.hoplon.span.call(null,G__102952,G__102953));
})();
var G__102876 = " (";
var G__102877 = (function (){var G__102954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102955 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102954,G__102955) : tailrecursion.hoplon.span.call(null,G__102954,G__102955));
})();
var G__102878 = (function (){var G__102956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102957 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102956,G__102957) : tailrecursion.hoplon.span.call(null,G__102956,G__102957));
})();
var G__102879 = "))\n          (";
var G__102880 = (function (){var G__102958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102959 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102958,G__102959) : tailrecursion.hoplon.span.call(null,G__102958,G__102959));
})();
var G__102881 = " (";
var G__102882 = (function (){var G__102960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102961 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102960,G__102961) : tailrecursion.hoplon.span.call(null,G__102960,G__102961));
})();
var G__102883 = "(";
var G__102884 = (function (){var G__102962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102963 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102962,G__102963) : tailrecursion.hoplon.span.call(null,G__102962,G__102963));
})();
var G__102885 = (function (){var G__102964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102965 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102964,G__102965) : tailrecursion.hoplon.span.call(null,G__102964,G__102965));
})();
var G__102886 = ")\n                         (";
var G__102887 = (function (){var G__102966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102967 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102966,G__102967) : tailrecursion.hoplon.span.call(null,G__102966,G__102967));
})();
var G__102888 = (function (){var G__102968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102969 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102968,G__102969) : tailrecursion.hoplon.span.call(null,G__102968,G__102969));
})();
var G__102889 = "))\n                 ";
var G__102890 = (function (){var G__102970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102971 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102970,G__102971) : tailrecursion.hoplon.span.call(null,G__102970,G__102971));
})();
var G__102891 = ")\n          ";
var G__102892 = (function (){var G__102972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102973 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102972,G__102973) : tailrecursion.hoplon.span.call(null,G__102972,G__102973));
})();
var G__102893 = "\n          (";
var G__102894 = (function (){var G__102974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102975 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102974,G__102975) : tailrecursion.hoplon.span.call(null,G__102974,G__102975));
})();
var G__102895 = " (";
var G__102896 = (function (){var G__102976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102977 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102976,G__102977) : tailrecursion.hoplon.span.call(null,G__102976,G__102977));
})();
var G__102897 = (function (){var G__102978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102979 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102978,G__102979) : tailrecursion.hoplon.span.call(null,G__102978,G__102979));
})();
var G__102898 = ")\n                 (";
var G__102899 = (function (){var G__102980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102981 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102980,G__102981) : tailrecursion.hoplon.span.call(null,G__102980,G__102981));
})();
var G__102900 = (function (){var G__102982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102983 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102982,G__102983) : tailrecursion.hoplon.span.call(null,G__102982,G__102983));
})();
var G__102901 = "\n                       (";
var G__102902 = (function (){var G__102984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102985 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102984,G__102985) : tailrecursion.hoplon.span.call(null,G__102984,G__102985));
})();
var G__102903 = (function (){var G__102986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102987 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102986,G__102987) : tailrecursion.hoplon.span.call(null,G__102986,G__102987));
})();
var G__102904 = "))))))\n(";
var G__102905 = (function (){var G__102988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__102989 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102988,G__102989) : tailrecursion.hoplon.span.call(null,G__102988,G__102989));
})();
var G__102906 = (function (){var G__102990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102991 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102990,G__102991) : tailrecursion.hoplon.span.call(null,G__102990,G__102991));
})();
var G__102907 = " [";
var G__102908 = (function (){var G__102992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102993 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102992,G__102993) : tailrecursion.hoplon.span.call(null,G__102992,G__102993));
})();
var G__102909 = "]\n  (";
var G__102910 = (function (){var G__102994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__102995 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102994,G__102995) : tailrecursion.hoplon.span.call(null,G__102994,G__102995));
})();
var G__102911 = "(";
var G__102912 = (function (){var G__102996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__102997 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102996,G__102997) : tailrecursion.hoplon.span.call(null,G__102996,G__102997));
})();
var G__102913 = " ";
var G__102914 = (function (){var G__102998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__102999 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__102998,G__102999) : tailrecursion.hoplon.span.call(null,G__102998,G__102999));
})();
var G__102915 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78(G__102838,G__102839,G__102840,G__102841,G__102842,G__102843,G__102844,G__102845,G__102846,G__102847,G__102848,G__102849,G__102850,G__102851,G__102852,G__102853,G__102854,G__102855,G__102856,G__102857,G__102858,G__102859,G__102860,G__102861,G__102862,G__102863,G__102864,G__102865,G__102866,G__102867,G__102868,G__102869,G__102870,G__102871,G__102872,G__102873,G__102874,G__102875,G__102876,G__102877,G__102878,G__102879,G__102880,G__102881,G__102882,G__102883,G__102884,G__102885,G__102886,G__102887,G__102888,G__102889,G__102890,G__102891,G__102892,G__102893,G__102894,G__102895,G__102896,G__102897,G__102898,G__102899,G__102900,G__102901,G__102902,G__102903,G__102904,G__102905,G__102906,G__102907,G__102908,G__102909,G__102910,G__102911,G__102912,G__102913,G__102914,G__102915) : tailrecursion.hoplon.pre.call(null,G__102838,G__102839,G__102840,G__102841,G__102842,G__102843,G__102844,G__102845,G__102846,G__102847,G__102848,G__102849,G__102850,G__102851,G__102852,G__102853,G__102854,G__102855,G__102856,G__102857,G__102858,G__102859,G__102860,G__102861,G__102862,G__102863,G__102864,G__102865,G__102866,G__102867,G__102868,G__102869,G__102870,G__102871,G__102872,G__102873,G__102874,G__102875,G__102876,G__102877,G__102878,G__102879,G__102880,G__102881,G__102882,G__102883,G__102884,G__102885,G__102886,G__102887,G__102888,G__102889,G__102890,G__102891,G__102892,G__102893,G__102894,G__102895,G__102896,G__102897,G__102898,G__102899,G__102900,G__102901,G__102902,G__102903,G__102904,G__102905,G__102906,G__102907,G__102908,G__102909,G__102910,G__102911,G__102912,G__102913,G__102914,G__102915));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__102836,G__102837) : tailrecursion.hoplon.div.call(null,G__102836,G__102837));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__102835) : tailrecursion.hoplon.div.call(null,G__102835));
})(),(function (){var G__103000 = cljs.core.PersistentArrayMap.EMPTY;
var G__103001 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you execute this, it should return an error. The reason being that ",(function (){var G__103002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__103003 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103002,G__103003) : tailrecursion.hoplon.markdown.code_node.call(null,G__103002,G__103003));
})()," doesn",(function (){var G__103004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103004,G__103005) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103004,G__103005));
})(),"t return a ",(function (){var G__103006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__103007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103006,G__103007) : tailrecursion.hoplon.markdown.code_node.call(null,G__103006,G__103007));
})(),", but rather a lazy sequence. To account for this, we could write:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103000,G__103001) : tailrecursion.hoplon.markdown.para_node.call(null,G__103000,G__103001));
})(),(function (){var G__103008 = (function (){var G__103009 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103010 = (function (){var G__103011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103012 = "(";
var G__103013 = (function (){var G__103088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103089 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103088,G__103089) : tailrecursion.hoplon.span.call(null,G__103088,G__103089));
})();
var G__103014 = (function (){var G__103090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103091 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103090,G__103091) : tailrecursion.hoplon.span.call(null,G__103090,G__103091));
})();
var G__103015 = " [";
var G__103016 = (function (){var G__103092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103093 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103092,G__103093) : tailrecursion.hoplon.span.call(null,G__103092,G__103093));
})();
var G__103017 = "]\n  (";
var G__103018 = (function (){var G__103094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103095 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103094,G__103095) : tailrecursion.hoplon.span.call(null,G__103094,G__103095));
})();
var G__103019 = "[";
var G__103020 = (function (){var G__103096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103097 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103096,G__103097) : tailrecursion.hoplon.span.call(null,G__103096,G__103097));
})();
var G__103021 = " ";
var G__103022 = (function (){var G__103098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103099 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103098,G__103099) : tailrecursion.hoplon.span.call(null,G__103098,G__103099));
})();
var G__103023 = "\n         ";
var G__103024 = (function (){var G__103100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103101 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103100,G__103101) : tailrecursion.hoplon.span.call(null,G__103100,G__103101));
})();
var G__103025 = "   (";
var G__103026 = (function (){var G__103102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103103 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103102,G__103103) : tailrecursion.hoplon.span.call(null,G__103102,G__103103));
})();
var G__103027 = ")]\n    (";
var G__103028 = (function (){var G__103104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103105 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103104,G__103105) : tailrecursion.hoplon.span.call(null,G__103104,G__103105));
})();
var G__103029 = "(";
var G__103030 = (function (){var G__103106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103107 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103106,G__103107) : tailrecursion.hoplon.span.call(null,G__103106,G__103107));
})();
var G__103031 = "(";
var G__103032 = (function (){var G__103108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103109 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103108,G__103109) : tailrecursion.hoplon.span.call(null,G__103108,G__103109));
})();
var G__103033 = (function (){var G__103110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103111 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103110,G__103111) : tailrecursion.hoplon.span.call(null,G__103110,G__103111));
})();
var G__103034 = "))\n          (";
var G__103035 = (function (){var G__103112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103113 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103112,G__103113) : tailrecursion.hoplon.span.call(null,G__103112,G__103113));
})();
var G__103036 = " (";
var G__103037 = (function (){var G__103114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103115 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103114,G__103115) : tailrecursion.hoplon.span.call(null,G__103114,G__103115));
})();
var G__103038 = " ";
var G__103039 = (function (){var G__103116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #BA2121"], null);
var G__103117 = "\"Oops. That's not a sequential object!.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103116,G__103117) : tailrecursion.hoplon.span.call(null,G__103116,G__103117));
})();
var G__103040 = "))\n          (";
var G__103041 = (function (){var G__103118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103119 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103118,G__103119) : tailrecursion.hoplon.span.call(null,G__103118,G__103119));
})();
var G__103042 = " ";
var G__103043 = (function (){var G__103120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103121 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103120,G__103121) : tailrecursion.hoplon.span.call(null,G__103120,G__103121));
})();
var G__103044 = ")\n          ";
var G__103045 = (function (){var G__103122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103123 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103122,G__103123) : tailrecursion.hoplon.span.call(null,G__103122,G__103123));
})();
var G__103046 = "\n          (";
var G__103047 = (function (){var G__103124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103125 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103124,G__103125) : tailrecursion.hoplon.span.call(null,G__103124,G__103125));
})();
var G__103048 = "(";
var G__103049 = (function (){var G__103126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103127 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103126,G__103127) : tailrecursion.hoplon.span.call(null,G__103126,G__103127));
})();
var G__103050 = (function (){var G__103128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103129 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103128,G__103129) : tailrecursion.hoplon.span.call(null,G__103128,G__103129));
})();
var G__103051 = "))\n          (";
var G__103052 = (function (){var G__103130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103131 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103130,G__103131) : tailrecursion.hoplon.span.call(null,G__103130,G__103131));
})();
var G__103053 = " (";
var G__103054 = (function (){var G__103132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103133 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103132,G__103133) : tailrecursion.hoplon.span.call(null,G__103132,G__103133));
})();
var G__103055 = "(";
var G__103056 = (function (){var G__103134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103135 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103134,G__103135) : tailrecursion.hoplon.span.call(null,G__103134,G__103135));
})();
var G__103057 = (function (){var G__103136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103137 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103136,G__103137) : tailrecursion.hoplon.span.call(null,G__103136,G__103137));
})();
var G__103058 = ")\n                         (";
var G__103059 = (function (){var G__103138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103139 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103138,G__103139) : tailrecursion.hoplon.span.call(null,G__103138,G__103139));
})();
var G__103060 = (function (){var G__103140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103141 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103140,G__103141) : tailrecursion.hoplon.span.call(null,G__103140,G__103141));
})();
var G__103061 = "))\n                 ";
var G__103062 = (function (){var G__103142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103143 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103142,G__103143) : tailrecursion.hoplon.span.call(null,G__103142,G__103143));
})();
var G__103063 = ")\n          ";
var G__103064 = (function (){var G__103144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103145 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103144,G__103145) : tailrecursion.hoplon.span.call(null,G__103144,G__103145));
})();
var G__103065 = "\n          (";
var G__103066 = (function (){var G__103146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103147 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103146,G__103147) : tailrecursion.hoplon.span.call(null,G__103146,G__103147));
})();
var G__103067 = " (";
var G__103068 = (function (){var G__103148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103149 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103148,G__103149) : tailrecursion.hoplon.span.call(null,G__103148,G__103149));
})();
var G__103069 = (function (){var G__103150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103151 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103150,G__103151) : tailrecursion.hoplon.span.call(null,G__103150,G__103151));
})();
var G__103070 = ")\n                 (";
var G__103071 = (function (){var G__103152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103153 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103152,G__103153) : tailrecursion.hoplon.span.call(null,G__103152,G__103153));
})();
var G__103072 = (function (){var G__103154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103155 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103154,G__103155) : tailrecursion.hoplon.span.call(null,G__103154,G__103155));
})();
var G__103073 = "\n                       (";
var G__103074 = (function (){var G__103156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103157 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103156,G__103157) : tailrecursion.hoplon.span.call(null,G__103156,G__103157));
})();
var G__103075 = (function (){var G__103158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103159 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103158,G__103159) : tailrecursion.hoplon.span.call(null,G__103158,G__103159));
})();
var G__103076 = "))))))\n(";
var G__103077 = (function (){var G__103160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103161 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103160,G__103161) : tailrecursion.hoplon.span.call(null,G__103160,G__103161));
})();
var G__103078 = (function (){var G__103162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103163 = "fringe";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103162,G__103163) : tailrecursion.hoplon.span.call(null,G__103162,G__103163));
})();
var G__103079 = " [";
var G__103080 = (function (){var G__103164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103165 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103164,G__103165) : tailrecursion.hoplon.span.call(null,G__103164,G__103165));
})();
var G__103081 = "]\n  (";
var G__103082 = (function (){var G__103166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103167 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103166,G__103167) : tailrecursion.hoplon.span.call(null,G__103166,G__103167));
})();
var G__103083 = "(";
var G__103084 = (function (){var G__103168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103169 = "fringe*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103168,G__103169) : tailrecursion.hoplon.span.call(null,G__103168,G__103169));
})();
var G__103085 = " ";
var G__103086 = (function (){var G__103170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103171 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103170,G__103171) : tailrecursion.hoplon.span.call(null,G__103170,G__103171));
})();
var G__103087 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$77 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$77(G__103011,G__103012,G__103013,G__103014,G__103015,G__103016,G__103017,G__103018,G__103019,G__103020,G__103021,G__103022,G__103023,G__103024,G__103025,G__103026,G__103027,G__103028,G__103029,G__103030,G__103031,G__103032,G__103033,G__103034,G__103035,G__103036,G__103037,G__103038,G__103039,G__103040,G__103041,G__103042,G__103043,G__103044,G__103045,G__103046,G__103047,G__103048,G__103049,G__103050,G__103051,G__103052,G__103053,G__103054,G__103055,G__103056,G__103057,G__103058,G__103059,G__103060,G__103061,G__103062,G__103063,G__103064,G__103065,G__103066,G__103067,G__103068,G__103069,G__103070,G__103071,G__103072,G__103073,G__103074,G__103075,G__103076,G__103077,G__103078,G__103079,G__103080,G__103081,G__103082,G__103083,G__103084,G__103085,G__103086,G__103087) : tailrecursion.hoplon.pre.call(null,G__103011,G__103012,G__103013,G__103014,G__103015,G__103016,G__103017,G__103018,G__103019,G__103020,G__103021,G__103022,G__103023,G__103024,G__103025,G__103026,G__103027,G__103028,G__103029,G__103030,G__103031,G__103032,G__103033,G__103034,G__103035,G__103036,G__103037,G__103038,G__103039,G__103040,G__103041,G__103042,G__103043,G__103044,G__103045,G__103046,G__103047,G__103048,G__103049,G__103050,G__103051,G__103052,G__103053,G__103054,G__103055,G__103056,G__103057,G__103058,G__103059,G__103060,G__103061,G__103062,G__103063,G__103064,G__103065,G__103066,G__103067,G__103068,G__103069,G__103070,G__103071,G__103072,G__103073,G__103074,G__103075,G__103076,G__103077,G__103078,G__103079,G__103080,G__103081,G__103082,G__103083,G__103084,G__103085,G__103086,G__103087));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103009,G__103010) : tailrecursion.hoplon.div.call(null,G__103009,G__103010));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103008) : tailrecursion.hoplon.div.call(null,G__103008));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102834;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102833;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_102832;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_102831;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103172 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103173 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103174 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103175 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103176 = cljs.core.PersistentArrayMap.EMPTY;
var G__103177 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A binary mobile consists of two branches, a left branch and a right branch. Each branch is a rod of a certain length, from which hangs either a weight or another binary mobile. We can represent a binary mobile using compund data by constructing it from two branches (for example, using ",(function (){var G__103178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__103179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103178,G__103179) : tailrecursion.hoplon.markdown.code_node.call(null,G__103178,G__103179));
})(),"):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103176,G__103177) : tailrecursion.hoplon.markdown.para_node.call(null,G__103176,G__103177));
})(),(function (){var G__103180 = (function (){var G__103181 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103182 = (function (){var G__103183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103184 = "(";
var G__103185 = (function (){var G__103194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103195 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103194,G__103195) : tailrecursion.hoplon.span.call(null,G__103194,G__103195));
})();
var G__103186 = (function (){var G__103196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103197 = "make-mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103196,G__103197) : tailrecursion.hoplon.span.call(null,G__103196,G__103197));
})();
var G__103187 = " [";
var G__103188 = (function (){var G__103198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103199 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103198,G__103199) : tailrecursion.hoplon.span.call(null,G__103198,G__103199));
})();
var G__103189 = (function (){var G__103200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103201 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103200,G__103201) : tailrecursion.hoplon.span.call(null,G__103200,G__103201));
})();
var G__103190 = "]\n  (";
var G__103191 = (function (){var G__103202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103203 = "list left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103202,G__103203) : tailrecursion.hoplon.span.call(null,G__103202,G__103203));
})();
var G__103192 = (function (){var G__103204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103205 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103204,G__103205) : tailrecursion.hoplon.span.call(null,G__103204,G__103205));
})();
var G__103193 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__103183,G__103184,G__103185,G__103186,G__103187,G__103188,G__103189,G__103190,G__103191,G__103192,G__103193) : tailrecursion.hoplon.pre.call(null,G__103183,G__103184,G__103185,G__103186,G__103187,G__103188,G__103189,G__103190,G__103191,G__103192,G__103193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103181,G__103182) : tailrecursion.hoplon.div.call(null,G__103181,G__103182));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103180) : tailrecursion.hoplon.div.call(null,G__103180));
})(),(function (){var G__103206 = cljs.core.PersistentArrayMap.EMPTY;
var G__103207 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A branch is constructed from a ",(function (){var G__103208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"length"], null);
var G__103209 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103208,G__103209) : tailrecursion.hoplon.markdown.code_node.call(null,G__103208,G__103209));
})()," (which must be a number) together with a ",(function (){var G__103210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"structure"], null);
var G__103211 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103210,G__103211) : tailrecursion.hoplon.markdown.code_node.call(null,G__103210,G__103211));
})(),", which may be either a number (representing a simple weight) or another mobile:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103206,G__103207) : tailrecursion.hoplon.markdown.para_node.call(null,G__103206,G__103207));
})(),(function (){var G__103212 = (function (){var G__103213 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103214 = (function (){var G__103215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103216 = "(";
var G__103217 = (function (){var G__103229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103230 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103229,G__103230) : tailrecursion.hoplon.span.call(null,G__103229,G__103230));
})();
var G__103218 = (function (){var G__103231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103232 = "make-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103231,G__103232) : tailrecursion.hoplon.span.call(null,G__103231,G__103232));
})();
var G__103219 = " [";
var G__103220 = (function (){var G__103233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103234 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103233,G__103234) : tailrecursion.hoplon.span.call(null,G__103233,G__103234));
})();
var G__103221 = " ";
var G__103222 = (function (){var G__103235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103236 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103235,G__103236) : tailrecursion.hoplon.span.call(null,G__103235,G__103236));
})();
var G__103223 = "]\n  (";
var G__103224 = (function (){var G__103237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103238 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103237,G__103238) : tailrecursion.hoplon.span.call(null,G__103237,G__103238));
})();
var G__103225 = (function (){var G__103239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103240 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103239,G__103240) : tailrecursion.hoplon.span.call(null,G__103239,G__103240));
})();
var G__103226 = " ";
var G__103227 = (function (){var G__103241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103242 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103241,G__103242) : tailrecursion.hoplon.span.call(null,G__103241,G__103242));
})();
var G__103228 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__103215,G__103216,G__103217,G__103218,G__103219,G__103220,G__103221,G__103222,G__103223,G__103224,G__103225,G__103226,G__103227,G__103228) : tailrecursion.hoplon.pre.call(null,G__103215,G__103216,G__103217,G__103218,G__103219,G__103220,G__103221,G__103222,G__103223,G__103224,G__103225,G__103226,G__103227,G__103228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103213,G__103214) : tailrecursion.hoplon.div.call(null,G__103213,G__103214));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103212) : tailrecursion.hoplon.div.call(null,G__103212));
})(),(function (){var G__103243 = cljs.core.PersistentArrayMap.EMPTY;
var G__103244 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Write the corresponding selectors ",(function (){var G__103245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"left-branch"], null);
var G__103246 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103245,G__103246) : tailrecursion.hoplon.markdown.code_node.call(null,G__103245,G__103246));
})()," and ",(function (){var G__103247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"right-branch"], null);
var G__103248 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103247,G__103248) : tailrecursion.hoplon.markdown.code_node.call(null,G__103247,G__103248));
})(),", which return the branches of a mobile, and ",(function (){var G__103249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"branch-length"], null);
var G__103250 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103249,G__103250) : tailrecursion.hoplon.markdown.code_node.call(null,G__103249,G__103250));
})()," and ",(function (){var G__103251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"branch-structure"], null);
var G__103252 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103251,G__103252) : tailrecursion.hoplon.markdown.code_node.call(null,G__103251,G__103252));
})(),", which return the components of a branch."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103243,G__103244) : tailrecursion.hoplon.markdown.para_node.call(null,G__103243,G__103244));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103175;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103174;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103173;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103172;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103253 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103254 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103255 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103256 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103257 = (function (){var G__103258 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103259 = (function (){var G__103260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103261 = "(";
var G__103262 = (function (){var G__103294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103295 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103294,G__103295) : tailrecursion.hoplon.span.call(null,G__103294,G__103295));
})();
var G__103263 = (function (){var G__103296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103297 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103296,G__103297) : tailrecursion.hoplon.span.call(null,G__103296,G__103297));
})();
var G__103264 = " [";
var G__103265 = (function (){var G__103298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103299 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103298,G__103299) : tailrecursion.hoplon.span.call(null,G__103298,G__103299));
})();
var G__103266 = "]\n  (";
var G__103267 = (function (){var G__103300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103301 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103300,G__103301) : tailrecursion.hoplon.span.call(null,G__103300,G__103301));
})();
var G__103268 = (function (){var G__103302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103303 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103302,G__103303) : tailrecursion.hoplon.span.call(null,G__103302,G__103303));
})();
var G__103269 = "))\n(";
var G__103270 = (function (){var G__103304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103305 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103304,G__103305) : tailrecursion.hoplon.span.call(null,G__103304,G__103305));
})();
var G__103271 = (function (){var G__103306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103307 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103306,G__103307) : tailrecursion.hoplon.span.call(null,G__103306,G__103307));
})();
var G__103272 = " [";
var G__103273 = (function (){var G__103308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103309 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103308,G__103309) : tailrecursion.hoplon.span.call(null,G__103308,G__103309));
})();
var G__103274 = "]\n  (";
var G__103275 = (function (){var G__103310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103311 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103310,G__103311) : tailrecursion.hoplon.span.call(null,G__103310,G__103311));
})();
var G__103276 = (function (){var G__103312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103313 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103312,G__103313) : tailrecursion.hoplon.span.call(null,G__103312,G__103313));
})();
var G__103277 = "))\n(";
var G__103278 = (function (){var G__103314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103315 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103314,G__103315) : tailrecursion.hoplon.span.call(null,G__103314,G__103315));
})();
var G__103279 = (function (){var G__103316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103317 = "branch-length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103316,G__103317) : tailrecursion.hoplon.span.call(null,G__103316,G__103317));
})();
var G__103280 = " [";
var G__103281 = (function (){var G__103318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103319 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103318,G__103319) : tailrecursion.hoplon.span.call(null,G__103318,G__103319));
})();
var G__103282 = "]\n  (";
var G__103283 = (function (){var G__103320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103321 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103320,G__103321) : tailrecursion.hoplon.span.call(null,G__103320,G__103321));
})();
var G__103284 = (function (){var G__103322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103323 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103322,G__103323) : tailrecursion.hoplon.span.call(null,G__103322,G__103323));
})();
var G__103285 = "))\n(";
var G__103286 = (function (){var G__103324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103325 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103324,G__103325) : tailrecursion.hoplon.span.call(null,G__103324,G__103325));
})();
var G__103287 = (function (){var G__103326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103327 = "branch-structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103326,G__103327) : tailrecursion.hoplon.span.call(null,G__103326,G__103327));
})();
var G__103288 = " [";
var G__103289 = (function (){var G__103328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103329 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103328,G__103329) : tailrecursion.hoplon.span.call(null,G__103328,G__103329));
})();
var G__103290 = "]\n  (";
var G__103291 = (function (){var G__103330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103331 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103330,G__103331) : tailrecursion.hoplon.span.call(null,G__103330,G__103331));
})();
var G__103292 = (function (){var G__103332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103333 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103332,G__103333) : tailrecursion.hoplon.span.call(null,G__103332,G__103333));
})();
var G__103293 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__103260,G__103261,G__103262,G__103263,G__103264,G__103265,G__103266,G__103267,G__103268,G__103269,G__103270,G__103271,G__103272,G__103273,G__103274,G__103275,G__103276,G__103277,G__103278,G__103279,G__103280,G__103281,G__103282,G__103283,G__103284,G__103285,G__103286,G__103287,G__103288,G__103289,G__103290,G__103291,G__103292,G__103293) : tailrecursion.hoplon.pre.call(null,G__103260,G__103261,G__103262,G__103263,G__103264,G__103265,G__103266,G__103267,G__103268,G__103269,G__103270,G__103271,G__103272,G__103273,G__103274,G__103275,G__103276,G__103277,G__103278,G__103279,G__103280,G__103281,G__103282,G__103283,G__103284,G__103285,G__103286,G__103287,G__103288,G__103289,G__103290,G__103291,G__103292,G__103293));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103258,G__103259) : tailrecursion.hoplon.div.call(null,G__103258,G__103259));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103257) : tailrecursion.hoplon.div.call(null,G__103257));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103256;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103255;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103254;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103253;
}})()], 0)),"",(function (){var _STAR_references_STAR_103334 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103335 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103336 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103337 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103338 = cljs.core.PersistentArrayMap.EMPTY;
var G__103339 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. Using your selectors, define a procedure ",(function (){var G__103340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"total-weight"], null);
var G__103341 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103340,G__103341) : tailrecursion.hoplon.markdown.code_node.call(null,G__103340,G__103341));
})()," that returns the total weight of a mobile."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103338,G__103339) : tailrecursion.hoplon.markdown.para_node.call(null,G__103338,G__103339));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103337;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103336;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103335;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103334;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103342 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103343 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103344 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103345 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103346 = (function (){var G__103347 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103348 = (function (){var G__103349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103350 = "(";
var G__103351 = (function (){var G__103377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103378 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103377,G__103378) : tailrecursion.hoplon.span.call(null,G__103377,G__103378));
})();
var G__103352 = (function (){var G__103379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103380 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103379,G__103380) : tailrecursion.hoplon.span.call(null,G__103379,G__103380));
})();
var G__103353 = " [";
var G__103354 = (function (){var G__103381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103382 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103381,G__103382) : tailrecursion.hoplon.span.call(null,G__103381,G__103382));
})();
var G__103355 = "]\n  (";
var G__103356 = (function (){var G__103383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103384 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103383,G__103384) : tailrecursion.hoplon.span.call(null,G__103383,G__103384));
})();
var G__103357 = "(";
var G__103358 = (function (){var G__103385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103386 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103385,G__103386) : tailrecursion.hoplon.span.call(null,G__103385,G__103386));
})();
var G__103359 = (function (){var G__103387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103388 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103387,G__103388) : tailrecursion.hoplon.span.call(null,G__103387,G__103388));
})();
var G__103360 = ")\n      (";
var G__103361 = (function (){var G__103389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103390 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103389,G__103390) : tailrecursion.hoplon.span.call(null,G__103389,G__103390));
})();
var G__103362 = "(";
var G__103363 = (function (){var G__103391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103392 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103391,G__103392) : tailrecursion.hoplon.span.call(null,G__103391,G__103392));
})();
var G__103364 = " (";
var G__103365 = (function (){var G__103393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103394 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103393,G__103394) : tailrecursion.hoplon.span.call(null,G__103393,G__103394));
})();
var G__103366 = " ";
var G__103367 = (function (){var G__103395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103396 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103395,G__103396) : tailrecursion.hoplon.span.call(null,G__103395,G__103396));
})();
var G__103368 = "))\n         (";
var G__103369 = (function (){var G__103397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103398 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103397,G__103398) : tailrecursion.hoplon.span.call(null,G__103397,G__103398));
})();
var G__103370 = " (";
var G__103371 = (function (){var G__103399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103400 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103399,G__103400) : tailrecursion.hoplon.span.call(null,G__103399,G__103400));
})();
var G__103372 = " ";
var G__103373 = (function (){var G__103401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103402 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103401,G__103402) : tailrecursion.hoplon.span.call(null,G__103401,G__103402));
})();
var G__103374 = ")))\n      ";
var G__103375 = (function (){var G__103403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103404 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103403,G__103404) : tailrecursion.hoplon.span.call(null,G__103403,G__103404));
})();
var G__103376 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__103349,G__103350,G__103351,G__103352,G__103353,G__103354,G__103355,G__103356,G__103357,G__103358,G__103359,G__103360,G__103361,G__103362,G__103363,G__103364,G__103365,G__103366,G__103367,G__103368,G__103369,G__103370,G__103371,G__103372,G__103373,G__103374,G__103375,G__103376) : tailrecursion.hoplon.pre.call(null,G__103349,G__103350,G__103351,G__103352,G__103353,G__103354,G__103355,G__103356,G__103357,G__103358,G__103359,G__103360,G__103361,G__103362,G__103363,G__103364,G__103365,G__103366,G__103367,G__103368,G__103369,G__103370,G__103371,G__103372,G__103373,G__103374,G__103375,G__103376));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103347,G__103348) : tailrecursion.hoplon.div.call(null,G__103347,G__103348));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103346) : tailrecursion.hoplon.div.call(null,G__103346));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103345;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103344;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103343;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103342;
}})()], 0)),"",(function (){var _STAR_references_STAR_103405 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103406 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103407 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103408 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103409 = cljs.core.PersistentArrayMap.EMPTY;
var G__103410 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["c. A mobile is said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced"], null)], 0))," if the torque applied by its top-left branch is equal to that applied by its top-right branch (that is, if the length of the left rod multiplied by the weight hanging from that rod is equal to the corresponding product for the right side) and if each of the submobiles hanging off its branches is balanced. Design a predicate that tests whether a binary mobile is balanced."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103409,G__103410) : tailrecursion.hoplon.markdown.para_node.call(null,G__103409,G__103410));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103408;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103407;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103406;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103405;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103411 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103412 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103413 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103414 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103415 = (function (){var G__103416 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103417 = (function (){var G__103418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103419 = "(";
var G__103420 = (function (){var G__103492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103493 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103492,G__103493) : tailrecursion.hoplon.span.call(null,G__103492,G__103493));
})();
var G__103421 = (function (){var G__103494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103495 = "branch-torque";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103494,G__103495) : tailrecursion.hoplon.span.call(null,G__103494,G__103495));
})();
var G__103422 = " [";
var G__103423 = (function (){var G__103496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103497 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103496,G__103497) : tailrecursion.hoplon.span.call(null,G__103496,G__103497));
})();
var G__103424 = "]\n  (";
var G__103425 = (function (){var G__103498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103499 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103498,G__103499) : tailrecursion.hoplon.span.call(null,G__103498,G__103499));
})();
var G__103426 = "(";
var G__103427 = (function (){var G__103500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103501 = "length";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103500,G__103501) : tailrecursion.hoplon.span.call(null,G__103500,G__103501));
})();
var G__103428 = " ";
var G__103429 = (function (){var G__103502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103503 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103502,G__103503) : tailrecursion.hoplon.span.call(null,G__103502,G__103503));
})();
var G__103430 = ")\n     (";
var G__103431 = (function (){var G__103504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103505 = "total-weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103504,G__103505) : tailrecursion.hoplon.span.call(null,G__103504,G__103505));
})();
var G__103432 = " (";
var G__103433 = (function (){var G__103506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103507 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103506,G__103507) : tailrecursion.hoplon.span.call(null,G__103506,G__103507));
})();
var G__103434 = " ";
var G__103435 = (function (){var G__103508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103509 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103508,G__103509) : tailrecursion.hoplon.span.call(null,G__103508,G__103509));
})();
var G__103436 = "))))\n(";
var G__103437 = (function (){var G__103510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103511 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103510,G__103511) : tailrecursion.hoplon.span.call(null,G__103510,G__103511));
})();
var G__103438 = (function (){var G__103512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103513 = "top-level-balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103512,G__103513) : tailrecursion.hoplon.span.call(null,G__103512,G__103513));
})();
var G__103439 = " [";
var G__103440 = (function (){var G__103514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103515 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103514,G__103515) : tailrecursion.hoplon.span.call(null,G__103514,G__103515));
})();
var G__103441 = "]\n  (";
var G__103442 = (function (){var G__103516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103517 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103516,G__103517) : tailrecursion.hoplon.span.call(null,G__103516,G__103517));
})();
var G__103443 = "(";
var G__103444 = (function (){var G__103518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103519 = "branch-torque";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103518,G__103519) : tailrecursion.hoplon.span.call(null,G__103518,G__103519));
})();
var G__103445 = " (";
var G__103446 = (function (){var G__103520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103521 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103520,G__103521) : tailrecursion.hoplon.span.call(null,G__103520,G__103521));
})();
var G__103447 = " ";
var G__103448 = (function (){var G__103522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103523 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103522,G__103523) : tailrecursion.hoplon.span.call(null,G__103522,G__103523));
})();
var G__103449 = "))\n     (";
var G__103450 = (function (){var G__103524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103525 = "branch-torque";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103524,G__103525) : tailrecursion.hoplon.span.call(null,G__103524,G__103525));
})();
var G__103451 = " (";
var G__103452 = (function (){var G__103526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103527 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103526,G__103527) : tailrecursion.hoplon.span.call(null,G__103526,G__103527));
})();
var G__103453 = " ";
var G__103454 = (function (){var G__103528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103529 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103528,G__103529) : tailrecursion.hoplon.span.call(null,G__103528,G__103529));
})();
var G__103455 = "))))\n(";
var G__103456 = (function (){var G__103530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103531 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103530,G__103531) : tailrecursion.hoplon.span.call(null,G__103530,G__103531));
})();
var G__103457 = (function (){var G__103532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103533 = "balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103532,G__103533) : tailrecursion.hoplon.span.call(null,G__103532,G__103533));
})();
var G__103458 = " [";
var G__103459 = (function (){var G__103534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103535 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103534,G__103535) : tailrecursion.hoplon.span.call(null,G__103534,G__103535));
})();
var G__103460 = "]\n  (";
var G__103461 = (function (){var G__103536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103537 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103536,G__103537) : tailrecursion.hoplon.span.call(null,G__103536,G__103537));
})();
var G__103462 = "(";
var G__103463 = (function (){var G__103538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103539 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103538,G__103539) : tailrecursion.hoplon.span.call(null,G__103538,G__103539));
})();
var G__103464 = "(";
var G__103465 = (function (){var G__103540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103541 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103540,G__103541) : tailrecursion.hoplon.span.call(null,G__103540,G__103541));
})();
var G__103466 = (function (){var G__103542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103543 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103542,G__103543) : tailrecursion.hoplon.span.call(null,G__103542,G__103543));
})();
var G__103467 = "))\n      ";
var G__103468 = (function (){var G__103544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103545 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103544,G__103545) : tailrecursion.hoplon.span.call(null,G__103544,G__103545));
})();
var G__103469 = "\n      (";
var G__103470 = (function (){var G__103546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103547 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103546,G__103547) : tailrecursion.hoplon.span.call(null,G__103546,G__103547));
})();
var G__103471 = "(";
var G__103472 = (function (){var G__103548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103549 = "top-level-balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103548,G__103549) : tailrecursion.hoplon.span.call(null,G__103548,G__103549));
})();
var G__103473 = " ";
var G__103474 = (function (){var G__103550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103551 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103550,G__103551) : tailrecursion.hoplon.span.call(null,G__103550,G__103551));
})();
var G__103475 = ")\n           (";
var G__103476 = (function (){var G__103552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103553 = "balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103552,G__103553) : tailrecursion.hoplon.span.call(null,G__103552,G__103553));
})();
var G__103477 = " (";
var G__103478 = (function (){var G__103554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103555 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103554,G__103555) : tailrecursion.hoplon.span.call(null,G__103554,G__103555));
})();
var G__103479 = " (";
var G__103480 = (function (){var G__103556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103557 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103556,G__103557) : tailrecursion.hoplon.span.call(null,G__103556,G__103557));
})();
var G__103481 = " ";
var G__103482 = (function (){var G__103558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103559 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103558,G__103559) : tailrecursion.hoplon.span.call(null,G__103558,G__103559));
})();
var G__103483 = ")))\n           (";
var G__103484 = (function (){var G__103560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103561 = "balanced?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103560,G__103561) : tailrecursion.hoplon.span.call(null,G__103560,G__103561));
})();
var G__103485 = " (";
var G__103486 = (function (){var G__103562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103563 = "structure";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103562,G__103563) : tailrecursion.hoplon.span.call(null,G__103562,G__103563));
})();
var G__103487 = " (";
var G__103488 = (function (){var G__103564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103565 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103564,G__103565) : tailrecursion.hoplon.span.call(null,G__103564,G__103565));
})();
var G__103489 = " ";
var G__103490 = (function (){var G__103566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103567 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103566,G__103567) : tailrecursion.hoplon.span.call(null,G__103566,G__103567));
})();
var G__103491 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74(G__103418,G__103419,G__103420,G__103421,G__103422,G__103423,G__103424,G__103425,G__103426,G__103427,G__103428,G__103429,G__103430,G__103431,G__103432,G__103433,G__103434,G__103435,G__103436,G__103437,G__103438,G__103439,G__103440,G__103441,G__103442,G__103443,G__103444,G__103445,G__103446,G__103447,G__103448,G__103449,G__103450,G__103451,G__103452,G__103453,G__103454,G__103455,G__103456,G__103457,G__103458,G__103459,G__103460,G__103461,G__103462,G__103463,G__103464,G__103465,G__103466,G__103467,G__103468,G__103469,G__103470,G__103471,G__103472,G__103473,G__103474,G__103475,G__103476,G__103477,G__103478,G__103479,G__103480,G__103481,G__103482,G__103483,G__103484,G__103485,G__103486,G__103487,G__103488,G__103489,G__103490,G__103491) : tailrecursion.hoplon.pre.call(null,G__103418,G__103419,G__103420,G__103421,G__103422,G__103423,G__103424,G__103425,G__103426,G__103427,G__103428,G__103429,G__103430,G__103431,G__103432,G__103433,G__103434,G__103435,G__103436,G__103437,G__103438,G__103439,G__103440,G__103441,G__103442,G__103443,G__103444,G__103445,G__103446,G__103447,G__103448,G__103449,G__103450,G__103451,G__103452,G__103453,G__103454,G__103455,G__103456,G__103457,G__103458,G__103459,G__103460,G__103461,G__103462,G__103463,G__103464,G__103465,G__103466,G__103467,G__103468,G__103469,G__103470,G__103471,G__103472,G__103473,G__103474,G__103475,G__103476,G__103477,G__103478,G__103479,G__103480,G__103481,G__103482,G__103483,G__103484,G__103485,G__103486,G__103487,G__103488,G__103489,G__103490,G__103491));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103416,G__103417) : tailrecursion.hoplon.div.call(null,G__103416,G__103417));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103415) : tailrecursion.hoplon.div.call(null,G__103415));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103414;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103413;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103412;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103411;
}})()], 0)),"",(function (){var _STAR_references_STAR_103568 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103569 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103570 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103571 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103572 = cljs.core.PersistentArrayMap.EMPTY;
var G__103573 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["d. Now suppose we change the constructor"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103572,G__103573) : tailrecursion.hoplon.markdown.para_node.call(null,G__103572,G__103573));
})(),(function (){var G__103574 = (function (){var G__103575 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103576 = (function (){var G__103577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103578 = "(";
var G__103579 = (function (){var G__103588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103589 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103588,G__103589) : tailrecursion.hoplon.span.call(null,G__103588,G__103589));
})();
var G__103580 = (function (){var G__103590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103591 = "make-mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103590,G__103591) : tailrecursion.hoplon.span.call(null,G__103590,G__103591));
})();
var G__103581 = " [";
var G__103582 = (function (){var G__103592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103593 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103592,G__103593) : tailrecursion.hoplon.span.call(null,G__103592,G__103593));
})();
var G__103583 = (function (){var G__103594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103595 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103594,G__103595) : tailrecursion.hoplon.span.call(null,G__103594,G__103595));
})();
var G__103584 = "]\n  (";
var G__103585 = (function (){var G__103596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103597 = "conj right ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103596,G__103597) : tailrecursion.hoplon.span.call(null,G__103596,G__103597));
})();
var G__103586 = (function (){var G__103598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103599 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103598,G__103599) : tailrecursion.hoplon.span.call(null,G__103598,G__103599));
})();
var G__103587 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__103577,G__103578,G__103579,G__103580,G__103581,G__103582,G__103583,G__103584,G__103585,G__103586,G__103587) : tailrecursion.hoplon.pre.call(null,G__103577,G__103578,G__103579,G__103580,G__103581,G__103582,G__103583,G__103584,G__103585,G__103586,G__103587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103575,G__103576) : tailrecursion.hoplon.div.call(null,G__103575,G__103576));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103574) : tailrecursion.hoplon.div.call(null,G__103574));
})(),(function (){var G__103600 = cljs.core.PersistentArrayMap.EMPTY;
var G__103601 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How much do you need to change to your programs to convert them to the new representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103600,G__103601) : tailrecursion.hoplon.markdown.para_node.call(null,G__103600,G__103601));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103571;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103570;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103569;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103568;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103602 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103603 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103604 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103605 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103606 = (function (){var G__103607 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103608 = (function (){var G__103609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103610 = "(";
var G__103611 = (function (){var G__103627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103628 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103627,G__103628) : tailrecursion.hoplon.span.call(null,G__103627,G__103628));
})();
var G__103612 = (function (){var G__103629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103630 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103629,G__103630) : tailrecursion.hoplon.span.call(null,G__103629,G__103630));
})();
var G__103613 = " [";
var G__103614 = (function (){var G__103631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103632 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103631,G__103632) : tailrecursion.hoplon.span.call(null,G__103631,G__103632));
})();
var G__103615 = "]\n  (";
var G__103616 = (function (){var G__103633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103634 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103633,G__103634) : tailrecursion.hoplon.span.call(null,G__103633,G__103634));
})();
var G__103617 = (function (){var G__103635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103636 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103635,G__103636) : tailrecursion.hoplon.span.call(null,G__103635,G__103636));
})();
var G__103618 = "))\n(";
var G__103619 = (function (){var G__103637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103638 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103637,G__103638) : tailrecursion.hoplon.span.call(null,G__103637,G__103638));
})();
var G__103620 = (function (){var G__103639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103640 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103639,G__103640) : tailrecursion.hoplon.span.call(null,G__103639,G__103640));
})();
var G__103621 = " [";
var G__103622 = (function (){var G__103641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103642 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103641,G__103642) : tailrecursion.hoplon.span.call(null,G__103641,G__103642));
})();
var G__103623 = "]\n  (";
var G__103624 = (function (){var G__103643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103644 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103643,G__103644) : tailrecursion.hoplon.span.call(null,G__103643,G__103644));
})();
var G__103625 = (function (){var G__103645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103646 = "mobile";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103645,G__103646) : tailrecursion.hoplon.span.call(null,G__103645,G__103646));
})();
var G__103626 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__103609,G__103610,G__103611,G__103612,G__103613,G__103614,G__103615,G__103616,G__103617,G__103618,G__103619,G__103620,G__103621,G__103622,G__103623,G__103624,G__103625,G__103626) : tailrecursion.hoplon.pre.call(null,G__103609,G__103610,G__103611,G__103612,G__103613,G__103614,G__103615,G__103616,G__103617,G__103618,G__103619,G__103620,G__103621,G__103622,G__103623,G__103624,G__103625,G__103626));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103607,G__103608) : tailrecursion.hoplon.div.call(null,G__103607,G__103608));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103606) : tailrecursion.hoplon.div.call(null,G__103606));
})(),(function (){var G__103647 = cljs.core.PersistentArrayMap.EMPTY;
var G__103648 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And we",(function (){var G__103649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__103650 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__103649,G__103650) : tailrecursion.hoplon.markdown.simple_node.call(null,G__103649,G__103650));
})(),"re good to go."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103647,G__103648) : tailrecursion.hoplon.markdown.para_node.call(null,G__103647,G__103648));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103605;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103604;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103603;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103602;
}})()], 0))], 0))], 0));
var G__97792 = "";
var G__97793 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Mapping Over Trees"], null),(function (){var _STAR_references_STAR_103651 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103652 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103653 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103654 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103655 = cljs.core.PersistentArrayMap.EMPTY;
var G__103656 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Just as ",(function (){var G__103657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__103658 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103657,G__103658) : tailrecursion.hoplon.markdown.code_node.call(null,G__103657,G__103658));
})()," is a powerful abstraction for dealing with sequences, ",(function (){var G__103659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__103660 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103659,G__103660) : tailrecursion.hoplon.markdown.code_node.call(null,G__103659,G__103660));
})()," together with recursion is a powerful abstraction for dealing with trees. For instance, the ",(function (){var G__103661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-tree"], null);
var G__103662 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103661,G__103662) : tailrecursion.hoplon.markdown.code_node.call(null,G__103661,G__103662));
})()," procedure, analogous to ",(function (){var G__103663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-list"], null);
var G__103664 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103663,G__103664) : tailrecursion.hoplon.markdown.code_node.call(null,G__103663,G__103664));
})()," of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.1"], null)], 0)),", takes as arguments a numeric factor and a tree whose leaves are numbers. It returns a tree of the same shape, where each number is multiplied by the factor. The recursive plan for ",(function (){var G__103665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-tree"], null);
var G__103666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103665,G__103666) : tailrecursion.hoplon.markdown.code_node.call(null,G__103665,G__103666));
})()," is similar to the one for ",(function (){var G__103667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__103668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103667,G__103668) : tailrecursion.hoplon.markdown.code_node.call(null,G__103667,G__103668));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103655,G__103656) : tailrecursion.hoplon.markdown.para_node.call(null,G__103655,G__103656));
})(),(function (){var G__103669 = (function (){var G__103670 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103671 = (function (){var G__103672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103673 = "(";
var G__103674 = (function (){var G__103753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103754 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103753,G__103754) : tailrecursion.hoplon.span.call(null,G__103753,G__103754));
})();
var G__103675 = (function (){var G__103755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103756 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103755,G__103756) : tailrecursion.hoplon.span.call(null,G__103755,G__103756));
})();
var G__103676 = " [";
var G__103677 = (function (){var G__103757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103758 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103757,G__103758) : tailrecursion.hoplon.span.call(null,G__103757,G__103758));
})();
var G__103678 = " ";
var G__103679 = (function (){var G__103759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103760 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103759,G__103760) : tailrecursion.hoplon.span.call(null,G__103759,G__103760));
})();
var G__103680 = "]\n  (";
var G__103681 = (function (){var G__103761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103762 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103761,G__103762) : tailrecursion.hoplon.span.call(null,G__103761,G__103762));
})();
var G__103682 = "(";
var G__103683 = (function (){var G__103763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103764 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103763,G__103764) : tailrecursion.hoplon.span.call(null,G__103763,G__103764));
})();
var G__103684 = "(";
var G__103685 = (function (){var G__103765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103766 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103765,G__103766) : tailrecursion.hoplon.span.call(null,G__103765,G__103766));
})();
var G__103686 = (function (){var G__103767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103768 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103767,G__103768) : tailrecursion.hoplon.span.call(null,G__103767,G__103768));
})();
var G__103687 = ")) (";
var G__103688 = (function (){var G__103769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103770 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103769,G__103770) : tailrecursion.hoplon.span.call(null,G__103769,G__103770));
})();
var G__103689 = (function (){var G__103771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103772 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103771,G__103772) : tailrecursion.hoplon.span.call(null,G__103771,G__103772));
})();
var G__103690 = " ";
var G__103691 = (function (){var G__103773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103774 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103773,G__103774) : tailrecursion.hoplon.span.call(null,G__103773,G__103774));
})();
var G__103692 = ")\n        (";
var G__103693 = (function (){var G__103775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103776 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103775,G__103776) : tailrecursion.hoplon.span.call(null,G__103775,G__103776));
})();
var G__103694 = " ";
var G__103695 = (function (){var G__103777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103778 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103777,G__103778) : tailrecursion.hoplon.span.call(null,G__103777,G__103778));
})();
var G__103696 = ") ";
var G__103697 = (function (){var G__103779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103780 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103779,G__103780) : tailrecursion.hoplon.span.call(null,G__103779,G__103780));
})();
var G__103698 = "\n        ";
var G__103699 = (function (){var G__103781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103782 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103781,G__103782) : tailrecursion.hoplon.span.call(null,G__103781,G__103782));
})();
var G__103700 = " (";
var G__103701 = (function (){var G__103783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103784 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103783,G__103784) : tailrecursion.hoplon.span.call(null,G__103783,G__103784));
})();
var G__103702 = "(";
var G__103703 = (function (){var G__103785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103786 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103785,G__103786) : tailrecursion.hoplon.span.call(null,G__103785,G__103786));
})();
var G__103704 = " (";
var G__103705 = (function (){var G__103787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103788 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103787,G__103788) : tailrecursion.hoplon.span.call(null,G__103787,G__103788));
})();
var G__103706 = (function (){var G__103789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103790 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103789,G__103790) : tailrecursion.hoplon.span.call(null,G__103789,G__103790));
})();
var G__103707 = ") ";
var G__103708 = (function (){var G__103791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103792 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103791,G__103792) : tailrecursion.hoplon.span.call(null,G__103791,G__103792));
})();
var G__103709 = ")\n                    (";
var G__103710 = (function (){var G__103793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103794 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103793,G__103794) : tailrecursion.hoplon.span.call(null,G__103793,G__103794));
})();
var G__103711 = " (";
var G__103712 = (function (){var G__103795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103796 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103795,G__103796) : tailrecursion.hoplon.span.call(null,G__103795,G__103796));
})();
var G__103713 = (function (){var G__103797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103798 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103797,G__103798) : tailrecursion.hoplon.span.call(null,G__103797,G__103798));
})();
var G__103714 = ") ";
var G__103715 = (function (){var G__103799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103800 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103799,G__103800) : tailrecursion.hoplon.span.call(null,G__103799,G__103800));
})();
var G__103716 = "))))\n\n(";
var G__103717 = (function (){var G__103801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103802 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103801,G__103802) : tailrecursion.hoplon.span.call(null,G__103801,G__103802));
})();
var G__103718 = " (";
var G__103719 = (function (){var G__103803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103804 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103803,G__103804) : tailrecursion.hoplon.span.call(null,G__103803,G__103804));
})();
var G__103720 = (function (){var G__103805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103806 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103805,G__103806) : tailrecursion.hoplon.span.call(null,G__103805,G__103806));
})();
var G__103721 = " (";
var G__103722 = (function (){var G__103807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103808 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103807,G__103808) : tailrecursion.hoplon.span.call(null,G__103807,G__103808));
})();
var G__103723 = (function (){var G__103809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103810 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103809,G__103810) : tailrecursion.hoplon.span.call(null,G__103809,G__103810));
})();
var G__103724 = " (";
var G__103725 = (function (){var G__103811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103812 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103811,G__103812) : tailrecursion.hoplon.span.call(null,G__103811,G__103812));
})();
var G__103726 = (function (){var G__103813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103814 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103813,G__103814) : tailrecursion.hoplon.span.call(null,G__103813,G__103814));
})();
var G__103727 = " ";
var G__103728 = (function (){var G__103815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103816 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103815,G__103816) : tailrecursion.hoplon.span.call(null,G__103815,G__103816));
})();
var G__103729 = ") ";
var G__103730 = (function (){var G__103817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103818 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103817,G__103818) : tailrecursion.hoplon.span.call(null,G__103817,G__103818));
})();
var G__103731 = ") (";
var G__103732 = (function (){var G__103819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103820 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103819,G__103820) : tailrecursion.hoplon.span.call(null,G__103819,G__103820));
})();
var G__103733 = (function (){var G__103821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103822 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103821,G__103822) : tailrecursion.hoplon.span.call(null,G__103821,G__103822));
})();
var G__103734 = " ";
var G__103735 = (function (){var G__103823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103824 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103823,G__103824) : tailrecursion.hoplon.span.call(null,G__103823,G__103824));
})();
var G__103736 = "))\n            ";
var G__103737 = (function (){var G__103825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103826 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103825,G__103826) : tailrecursion.hoplon.span.call(null,G__103825,G__103826));
})();
var G__103738 = ")\n(";
var G__103739 = (function (){var G__103827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103828 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103827,G__103828) : tailrecursion.hoplon.span.call(null,G__103827,G__103828));
})();
var G__103740 = " (";
var G__103741 = (function (){var G__103829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103830 = "20";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103829,G__103830) : tailrecursion.hoplon.span.call(null,G__103829,G__103830));
})();
var G__103742 = " (";
var G__103743 = (function (){var G__103831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103832 = "30";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103831,G__103832) : tailrecursion.hoplon.span.call(null,G__103831,G__103832));
})();
var G__103744 = " ";
var G__103745 = (function (){var G__103833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103834 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103833,G__103834) : tailrecursion.hoplon.span.call(null,G__103833,G__103834));
})();
var G__103746 = ") ";
var G__103747 = (function (){var G__103835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103836 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103835,G__103836) : tailrecursion.hoplon.span.call(null,G__103835,G__103836));
})();
var G__103748 = ") (";
var G__103749 = (function (){var G__103837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103838 = "60";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103837,G__103838) : tailrecursion.hoplon.span.call(null,G__103837,G__103838));
})();
var G__103750 = " ";
var G__103751 = (function (){var G__103839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103840 = "70";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103839,G__103840) : tailrecursion.hoplon.span.call(null,G__103839,G__103840));
})();
var G__103752 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81(G__103672,G__103673,G__103674,G__103675,G__103676,G__103677,G__103678,G__103679,G__103680,G__103681,G__103682,G__103683,G__103684,G__103685,G__103686,G__103687,G__103688,G__103689,G__103690,G__103691,G__103692,G__103693,G__103694,G__103695,G__103696,G__103697,G__103698,G__103699,G__103700,G__103701,G__103702,G__103703,G__103704,G__103705,G__103706,G__103707,G__103708,G__103709,G__103710,G__103711,G__103712,G__103713,G__103714,G__103715,G__103716,G__103717,G__103718,G__103719,G__103720,G__103721,G__103722,G__103723,G__103724,G__103725,G__103726,G__103727,G__103728,G__103729,G__103730,G__103731,G__103732,G__103733,G__103734,G__103735,G__103736,G__103737,G__103738,G__103739,G__103740,G__103741,G__103742,G__103743,G__103744,G__103745,G__103746,G__103747,G__103748,G__103749,G__103750,G__103751,G__103752) : tailrecursion.hoplon.pre.call(null,G__103672,G__103673,G__103674,G__103675,G__103676,G__103677,G__103678,G__103679,G__103680,G__103681,G__103682,G__103683,G__103684,G__103685,G__103686,G__103687,G__103688,G__103689,G__103690,G__103691,G__103692,G__103693,G__103694,G__103695,G__103696,G__103697,G__103698,G__103699,G__103700,G__103701,G__103702,G__103703,G__103704,G__103705,G__103706,G__103707,G__103708,G__103709,G__103710,G__103711,G__103712,G__103713,G__103714,G__103715,G__103716,G__103717,G__103718,G__103719,G__103720,G__103721,G__103722,G__103723,G__103724,G__103725,G__103726,G__103727,G__103728,G__103729,G__103730,G__103731,G__103732,G__103733,G__103734,G__103735,G__103736,G__103737,G__103738,G__103739,G__103740,G__103741,G__103742,G__103743,G__103744,G__103745,G__103746,G__103747,G__103748,G__103749,G__103750,G__103751,G__103752));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103670,G__103671) : tailrecursion.hoplon.div.call(null,G__103670,G__103671));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103669) : tailrecursion.hoplon.div.call(null,G__103669));
})(),(function (){var G__103841 = cljs.core.PersistentArrayMap.EMPTY;
var G__103842 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another way to implement ",(function (){var G__103843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"scale-tree"], null);
var G__103844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103843,G__103844) : tailrecursion.hoplon.markdown.code_node.call(null,G__103843,G__103844));
})()," is to regard the tree as a sequence of sub-trees and use ",(function (){var G__103845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__103846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103845,G__103846) : tailrecursion.hoplon.markdown.code_node.call(null,G__103845,G__103846));
})(),". We mape over the sequence, scaling each sub-tree in turn, and return the list of results. In the base case, where the tree is a leaf, we simply multiply by the factor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103841,G__103842) : tailrecursion.hoplon.markdown.para_node.call(null,G__103841,G__103842));
})(),(function (){var G__103847 = (function (){var G__103848 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103849 = (function (){var G__103850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103851 = "(";
var G__103852 = (function (){var G__103883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103884 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103883,G__103884) : tailrecursion.hoplon.span.call(null,G__103883,G__103884));
})();
var G__103853 = (function (){var G__103885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103886 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103885,G__103886) : tailrecursion.hoplon.span.call(null,G__103885,G__103886));
})();
var G__103854 = " [";
var G__103855 = (function (){var G__103887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103888 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103887,G__103888) : tailrecursion.hoplon.span.call(null,G__103887,G__103888));
})();
var G__103856 = " ";
var G__103857 = (function (){var G__103889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103890 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103889,G__103890) : tailrecursion.hoplon.span.call(null,G__103889,G__103890));
})();
var G__103858 = "]\n  (";
var G__103859 = (function (){var G__103891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103892 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103891,G__103892) : tailrecursion.hoplon.span.call(null,G__103891,G__103892));
})();
var G__103860 = "(";
var G__103861 = (function (){var G__103893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103894 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103893,G__103894) : tailrecursion.hoplon.span.call(null,G__103893,G__103894));
})();
var G__103862 = "[";
var G__103863 = (function (){var G__103895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103896 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103895,G__103896) : tailrecursion.hoplon.span.call(null,G__103895,G__103896));
})();
var G__103864 = "]\n         (";
var G__103865 = (function (){var G__103897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__103898 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103897,G__103898) : tailrecursion.hoplon.span.call(null,G__103897,G__103898));
})();
var G__103866 = "(";
var G__103867 = (function (){var G__103899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103900 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103899,G__103900) : tailrecursion.hoplon.span.call(null,G__103899,G__103900));
})();
var G__103868 = (function (){var G__103901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103902 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103901,G__103902) : tailrecursion.hoplon.span.call(null,G__103901,G__103902));
})();
var G__103869 = ")\n           (";
var G__103870 = (function (){var G__103903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103904 = "scale-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103903,G__103904) : tailrecursion.hoplon.span.call(null,G__103903,G__103904));
})();
var G__103871 = " ";
var G__103872 = (function (){var G__103905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103906 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103905,G__103906) : tailrecursion.hoplon.span.call(null,G__103905,G__103906));
})();
var G__103873 = " ";
var G__103874 = (function (){var G__103907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103908 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103907,G__103908) : tailrecursion.hoplon.span.call(null,G__103907,G__103908));
})();
var G__103875 = ")\n           (";
var G__103876 = (function (){var G__103909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103910 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103909,G__103910) : tailrecursion.hoplon.span.call(null,G__103909,G__103910));
})();
var G__103877 = (function (){var G__103911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103912 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103911,G__103912) : tailrecursion.hoplon.span.call(null,G__103911,G__103912));
})();
var G__103878 = " ";
var G__103879 = (function (){var G__103913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103914 = "factor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103913,G__103914) : tailrecursion.hoplon.span.call(null,G__103913,G__103914));
})();
var G__103880 = ")))\n       ";
var G__103881 = (function (){var G__103915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__103916 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103915,G__103916) : tailrecursion.hoplon.span.call(null,G__103915,G__103916));
})();
var G__103882 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__103850,G__103851,G__103852,G__103853,G__103854,G__103855,G__103856,G__103857,G__103858,G__103859,G__103860,G__103861,G__103862,G__103863,G__103864,G__103865,G__103866,G__103867,G__103868,G__103869,G__103870,G__103871,G__103872,G__103873,G__103874,G__103875,G__103876,G__103877,G__103878,G__103879,G__103880,G__103881,G__103882) : tailrecursion.hoplon.pre.call(null,G__103850,G__103851,G__103852,G__103853,G__103854,G__103855,G__103856,G__103857,G__103858,G__103859,G__103860,G__103861,G__103862,G__103863,G__103864,G__103865,G__103866,G__103867,G__103868,G__103869,G__103870,G__103871,G__103872,G__103873,G__103874,G__103875,G__103876,G__103877,G__103878,G__103879,G__103880,G__103881,G__103882));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103848,G__103849) : tailrecursion.hoplon.div.call(null,G__103848,G__103849));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103847) : tailrecursion.hoplon.div.call(null,G__103847));
})(),(function (){var G__103917 = cljs.core.PersistentArrayMap.EMPTY;
var G__103918 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Many tree operations can be implemented by similar combinations of sequence operations and recursion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103917,G__103918) : tailrecursion.hoplon.markdown.para_node.call(null,G__103917,G__103918));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103654;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103653;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103652;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103651;
}})()], 0));
var G__97794 = "";
var G__97795 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_103919 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103920 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_103921 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_103922 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__103923 = cljs.core.PersistentArrayMap.EMPTY;
var G__103924 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__103925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__103926 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103925,G__103926) : tailrecursion.hoplon.markdown.code_node.call(null,G__103925,G__103926));
})()," analogous to the ",(function (){var G__103927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-list"], null);
var G__103928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103927,G__103928) : tailrecursion.hoplon.markdown.code_node.call(null,G__103927,G__103928));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/21/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.21"], null)], 0)),". That is, ",(function (){var G__103929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__103930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__103929,G__103930) : tailrecursion.hoplon.markdown.code_node.call(null,G__103929,G__103930));
})()," should behave as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__103923,G__103924) : tailrecursion.hoplon.markdown.para_node.call(null,G__103923,G__103924));
})(),(function (){var G__103931 = (function (){var G__103932 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__103933 = (function (){var G__103934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__103935 = "(";
var G__103936 = (function (){var G__103970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__103971 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103970,G__103971) : tailrecursion.hoplon.span.call(null,G__103970,G__103971));
})();
var G__103937 = "\n  (";
var G__103938 = (function (){var G__103972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103973 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103972,G__103973) : tailrecursion.hoplon.span.call(null,G__103972,G__103973));
})();
var G__103939 = (function (){var G__103974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103975 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103974,G__103975) : tailrecursion.hoplon.span.call(null,G__103974,G__103975));
})();
var G__103940 = "\n        (";
var G__103941 = (function (){var G__103976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103977 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103976,G__103977) : tailrecursion.hoplon.span.call(null,G__103976,G__103977));
})();
var G__103942 = (function (){var G__103978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103979 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103978,G__103979) : tailrecursion.hoplon.span.call(null,G__103978,G__103979));
})();
var G__103943 = " (";
var G__103944 = (function (){var G__103980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103981 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103980,G__103981) : tailrecursion.hoplon.span.call(null,G__103980,G__103981));
})();
var G__103945 = (function (){var G__103982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103983 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103982,G__103983) : tailrecursion.hoplon.span.call(null,G__103982,G__103983));
})();
var G__103946 = " ";
var G__103947 = (function (){var G__103984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103985 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103984,G__103985) : tailrecursion.hoplon.span.call(null,G__103984,G__103985));
})();
var G__103948 = ") ";
var G__103949 = (function (){var G__103986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103987 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103986,G__103987) : tailrecursion.hoplon.span.call(null,G__103986,G__103987));
})();
var G__103950 = ")\n        (";
var G__103951 = (function (){var G__103988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__103989 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103988,G__103989) : tailrecursion.hoplon.span.call(null,G__103988,G__103989));
})();
var G__103952 = (function (){var G__103990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103991 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103990,G__103991) : tailrecursion.hoplon.span.call(null,G__103990,G__103991));
})();
var G__103953 = " ";
var G__103954 = (function (){var G__103992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103993 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103992,G__103993) : tailrecursion.hoplon.span.call(null,G__103992,G__103993));
})();
var G__103955 = ")))\n(";
var G__103956 = (function (){var G__103994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103995 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103994,G__103995) : tailrecursion.hoplon.span.call(null,G__103994,G__103995));
})();
var G__103957 = " (";
var G__103958 = (function (){var G__103996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103997 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103996,G__103997) : tailrecursion.hoplon.span.call(null,G__103996,G__103997));
})();
var G__103959 = " (";
var G__103960 = (function (){var G__103998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__103999 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__103998,G__103999) : tailrecursion.hoplon.span.call(null,G__103998,G__103999));
})();
var G__103961 = " ";
var G__103962 = (function (){var G__104000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104001 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104000,G__104001) : tailrecursion.hoplon.span.call(null,G__104000,G__104001));
})();
var G__103963 = ") ";
var G__103964 = (function (){var G__104002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104003 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104002,G__104003) : tailrecursion.hoplon.span.call(null,G__104002,G__104003));
})();
var G__103965 = ") (";
var G__103966 = (function (){var G__104004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104005 = "36";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104004,G__104005) : tailrecursion.hoplon.span.call(null,G__104004,G__104005));
})();
var G__103967 = " ";
var G__103968 = (function (){var G__104006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104007 = "49";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104006,G__104007) : tailrecursion.hoplon.span.call(null,G__104006,G__104007));
})();
var G__103969 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__103934,G__103935,G__103936,G__103937,G__103938,G__103939,G__103940,G__103941,G__103942,G__103943,G__103944,G__103945,G__103946,G__103947,G__103948,G__103949,G__103950,G__103951,G__103952,G__103953,G__103954,G__103955,G__103956,G__103957,G__103958,G__103959,G__103960,G__103961,G__103962,G__103963,G__103964,G__103965,G__103966,G__103967,G__103968,G__103969) : tailrecursion.hoplon.pre.call(null,G__103934,G__103935,G__103936,G__103937,G__103938,G__103939,G__103940,G__103941,G__103942,G__103943,G__103944,G__103945,G__103946,G__103947,G__103948,G__103949,G__103950,G__103951,G__103952,G__103953,G__103954,G__103955,G__103956,G__103957,G__103958,G__103959,G__103960,G__103961,G__103962,G__103963,G__103964,G__103965,G__103966,G__103967,G__103968,G__103969));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__103932,G__103933) : tailrecursion.hoplon.div.call(null,G__103932,G__103933));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__103931) : tailrecursion.hoplon.div.call(null,G__103931));
})(),(function (){var G__104008 = cljs.core.PersistentArrayMap.EMPTY;
var G__104009 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__104010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__104011 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104010,G__104011) : tailrecursion.hoplon.markdown.code_node.call(null,G__104010,G__104011));
})()," both directly (i.e., without using any higher-order procedures) and also by using ",(function (){var G__104012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104012,G__104013) : tailrecursion.hoplon.markdown.code_node.call(null,G__104012,G__104013));
})()," and recursion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104008,G__104009) : tailrecursion.hoplon.markdown.para_node.call(null,G__104008,G__104009));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103922;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103921;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_103920;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_103919;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104014 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104015 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104018 = (function (){var G__104019 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104020 = (function (){var G__104021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104022 = "(";
var G__104023 = (function (){var G__104049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104050 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104049,G__104050) : tailrecursion.hoplon.span.call(null,G__104049,G__104050));
})();
var G__104024 = (function (){var G__104051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104052 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104051,G__104052) : tailrecursion.hoplon.span.call(null,G__104051,G__104052));
})();
var G__104025 = " [";
var G__104026 = (function (){var G__104053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104054 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104053,G__104054) : tailrecursion.hoplon.span.call(null,G__104053,G__104054));
})();
var G__104027 = "]\n  (";
var G__104028 = (function (){var G__104055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104056 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104055,G__104056) : tailrecursion.hoplon.span.call(null,G__104055,G__104056));
})();
var G__104029 = "(";
var G__104030 = (function (){var G__104057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104058 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104057,G__104058) : tailrecursion.hoplon.span.call(null,G__104057,G__104058));
})();
var G__104031 = "[";
var G__104032 = (function (){var G__104059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104060 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104059,G__104060) : tailrecursion.hoplon.span.call(null,G__104059,G__104060));
})();
var G__104033 = "]\n         (";
var G__104034 = (function (){var G__104061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104062 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104061,G__104062) : tailrecursion.hoplon.span.call(null,G__104061,G__104062));
})();
var G__104035 = "(";
var G__104036 = (function (){var G__104063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104064 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104063,G__104064) : tailrecursion.hoplon.span.call(null,G__104063,G__104064));
})();
var G__104037 = (function (){var G__104065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104066 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104065,G__104066) : tailrecursion.hoplon.span.call(null,G__104065,G__104066));
})();
var G__104038 = ")\n             (";
var G__104039 = (function (){var G__104067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104068 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104067,G__104068) : tailrecursion.hoplon.span.call(null,G__104067,G__104068));
})();
var G__104040 = " ";
var G__104041 = (function (){var G__104069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104070 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104069,G__104070) : tailrecursion.hoplon.span.call(null,G__104069,G__104070));
})();
var G__104042 = ")\n             (";
var G__104043 = (function (){var G__104071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104072 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104071,G__104072) : tailrecursion.hoplon.span.call(null,G__104071,G__104072));
})();
var G__104044 = " ";
var G__104045 = (function (){var G__104073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104074 = "sub-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104073,G__104074) : tailrecursion.hoplon.span.call(null,G__104073,G__104074));
})();
var G__104046 = ")))\n       ";
var G__104047 = (function (){var G__104075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104076 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104075,G__104076) : tailrecursion.hoplon.span.call(null,G__104075,G__104076));
})();
var G__104048 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__104021,G__104022,G__104023,G__104024,G__104025,G__104026,G__104027,G__104028,G__104029,G__104030,G__104031,G__104032,G__104033,G__104034,G__104035,G__104036,G__104037,G__104038,G__104039,G__104040,G__104041,G__104042,G__104043,G__104044,G__104045,G__104046,G__104047,G__104048) : tailrecursion.hoplon.pre.call(null,G__104021,G__104022,G__104023,G__104024,G__104025,G__104026,G__104027,G__104028,G__104029,G__104030,G__104031,G__104032,G__104033,G__104034,G__104035,G__104036,G__104037,G__104038,G__104039,G__104040,G__104041,G__104042,G__104043,G__104044,G__104045,G__104046,G__104047,G__104048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104019,G__104020) : tailrecursion.hoplon.div.call(null,G__104019,G__104020));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104018) : tailrecursion.hoplon.div.call(null,G__104018));
})(),(function (){var G__104077 = cljs.core.PersistentArrayMap.EMPTY;
var G__104078 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104077,G__104078) : tailrecursion.hoplon.markdown.para_node.call(null,G__104077,G__104078));
})(),(function (){var G__104079 = (function (){var G__104080 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104081 = (function (){var G__104082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104083 = "(";
var G__104084 = (function (){var G__104120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104121 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104120,G__104121) : tailrecursion.hoplon.span.call(null,G__104120,G__104121));
})();
var G__104085 = (function (){var G__104122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104123 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104122,G__104123) : tailrecursion.hoplon.span.call(null,G__104122,G__104123));
})();
var G__104086 = " [";
var G__104087 = (function (){var G__104124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104125 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104124,G__104125) : tailrecursion.hoplon.span.call(null,G__104124,G__104125));
})();
var G__104088 = "]\n  (";
var G__104089 = (function (){var G__104126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104127 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104126,G__104127) : tailrecursion.hoplon.span.call(null,G__104126,G__104127));
})();
var G__104090 = "(";
var G__104091 = (function (){var G__104128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104129 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104128,G__104129) : tailrecursion.hoplon.span.call(null,G__104128,G__104129));
})();
var G__104092 = "(";
var G__104093 = (function (){var G__104130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104131 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104130,G__104131) : tailrecursion.hoplon.span.call(null,G__104130,G__104131));
})();
var G__104094 = (function (){var G__104132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104133 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104132,G__104133) : tailrecursion.hoplon.span.call(null,G__104132,G__104133));
})();
var G__104095 = ")) (";
var G__104096 = (function (){var G__104134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104135 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104134,G__104135) : tailrecursion.hoplon.span.call(null,G__104134,G__104135));
})();
var G__104097 = " ";
var G__104098 = (function (){var G__104136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104137 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104136,G__104137) : tailrecursion.hoplon.span.call(null,G__104136,G__104137));
})();
var G__104099 = ")\n        (";
var G__104100 = (function (){var G__104138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104139 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104138,G__104139) : tailrecursion.hoplon.span.call(null,G__104138,G__104139));
})();
var G__104101 = " ";
var G__104102 = (function (){var G__104140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104141 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104140,G__104141) : tailrecursion.hoplon.span.call(null,G__104140,G__104141));
})();
var G__104103 = ") ";
var G__104104 = (function (){var G__104142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104143 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104142,G__104143) : tailrecursion.hoplon.span.call(null,G__104142,G__104143));
})();
var G__104105 = "\n        ";
var G__104106 = (function (){var G__104144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104145 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104144,G__104145) : tailrecursion.hoplon.span.call(null,G__104144,G__104145));
})();
var G__104107 = "\n        (";
var G__104108 = (function (){var G__104146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104147 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104146,G__104147) : tailrecursion.hoplon.span.call(null,G__104146,G__104147));
})();
var G__104109 = "(";
var G__104110 = (function (){var G__104148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104149 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104148,G__104149) : tailrecursion.hoplon.span.call(null,G__104148,G__104149));
})();
var G__104111 = " (";
var G__104112 = (function (){var G__104150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104151 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104150,G__104151) : tailrecursion.hoplon.span.call(null,G__104150,G__104151));
})();
var G__104113 = (function (){var G__104152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104153 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104152,G__104153) : tailrecursion.hoplon.span.call(null,G__104152,G__104153));
})();
var G__104114 = "))\n              (";
var G__104115 = (function (){var G__104154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104155 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104154,G__104155) : tailrecursion.hoplon.span.call(null,G__104154,G__104155));
})();
var G__104116 = " (";
var G__104117 = (function (){var G__104156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104157 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104156,G__104157) : tailrecursion.hoplon.span.call(null,G__104156,G__104157));
})();
var G__104118 = (function (){var G__104158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104159 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104158,G__104159) : tailrecursion.hoplon.span.call(null,G__104158,G__104159));
})();
var G__104119 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__104082,G__104083,G__104084,G__104085,G__104086,G__104087,G__104088,G__104089,G__104090,G__104091,G__104092,G__104093,G__104094,G__104095,G__104096,G__104097,G__104098,G__104099,G__104100,G__104101,G__104102,G__104103,G__104104,G__104105,G__104106,G__104107,G__104108,G__104109,G__104110,G__104111,G__104112,G__104113,G__104114,G__104115,G__104116,G__104117,G__104118,G__104119) : tailrecursion.hoplon.pre.call(null,G__104082,G__104083,G__104084,G__104085,G__104086,G__104087,G__104088,G__104089,G__104090,G__104091,G__104092,G__104093,G__104094,G__104095,G__104096,G__104097,G__104098,G__104099,G__104100,G__104101,G__104102,G__104103,G__104104,G__104105,G__104106,G__104107,G__104108,G__104109,G__104110,G__104111,G__104112,G__104113,G__104114,G__104115,G__104116,G__104117,G__104118,G__104119));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104080,G__104081) : tailrecursion.hoplon.div.call(null,G__104080,G__104081));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104079) : tailrecursion.hoplon.div.call(null,G__104079));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104016;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104015;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104014;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104160 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104161 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104162 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104163 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104164 = cljs.core.PersistentArrayMap.EMPTY;
var G__104165 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Abstract your answer to ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/30/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.30"], null)], 0))," to produce a procedure ",(function (){var G__104166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"tree-map"], null);
var G__104167 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104166,G__104167) : tailrecursion.hoplon.markdown.code_node.call(null,G__104166,G__104167));
})()," with the property that ",(function (){var G__104168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square-tree"], null);
var G__104169 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104168,G__104169) : tailrecursion.hoplon.markdown.code_node.call(null,G__104168,G__104169));
})()," could be defined as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104164,G__104165) : tailrecursion.hoplon.markdown.para_node.call(null,G__104164,G__104165));
})(),(function (){var G__104170 = (function (){var G__104171 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104172 = (function (){var G__104173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104174 = "(";
var G__104175 = (function (){var G__104186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104187 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104186,G__104187) : tailrecursion.hoplon.span.call(null,G__104186,G__104187));
})();
var G__104176 = (function (){var G__104188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104189 = "square-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104188,G__104189) : tailrecursion.hoplon.span.call(null,G__104188,G__104189));
})();
var G__104177 = " [";
var G__104178 = (function (){var G__104190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104191 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104190,G__104191) : tailrecursion.hoplon.span.call(null,G__104190,G__104191));
})();
var G__104179 = "]\n  (";
var G__104180 = (function (){var G__104192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104193 = "tree-map";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104192,G__104193) : tailrecursion.hoplon.span.call(null,G__104192,G__104193));
})();
var G__104181 = " ";
var G__104182 = (function (){var G__104194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104195 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104194,G__104195) : tailrecursion.hoplon.span.call(null,G__104194,G__104195));
})();
var G__104183 = " ";
var G__104184 = (function (){var G__104196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104197 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104196,G__104197) : tailrecursion.hoplon.span.call(null,G__104196,G__104197));
})();
var G__104185 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__104173,G__104174,G__104175,G__104176,G__104177,G__104178,G__104179,G__104180,G__104181,G__104182,G__104183,G__104184,G__104185) : tailrecursion.hoplon.pre.call(null,G__104173,G__104174,G__104175,G__104176,G__104177,G__104178,G__104179,G__104180,G__104181,G__104182,G__104183,G__104184,G__104185));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104171,G__104172) : tailrecursion.hoplon.div.call(null,G__104171,G__104172));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104170) : tailrecursion.hoplon.div.call(null,G__104170));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104163;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104162;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104161;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104160;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(defn tree-map [proc tree]\n  (map #(if (seq? %)\n            (tree-map proc %)\n            (proc %))\n       tree))\n```\n\nOr, if you prefer the non-abstraction-beholding version (which I\ndon't see why you would):\n\n```clj\n(defn tree-map [proc tree]\n  (cond (not (seq? tree)) (proc tree)\n        (empty? tree) nil\n        :else\n        (conj (tree-map proc (rest tree))\n              (tree-map proc (first tree)))))\n```"], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_104198 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104199 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104200 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104201 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104202 = cljs.core.PersistentArrayMap.EMPTY;
var G__104203 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can represent a set as a list of distinct elements, and we can represent the set of all subsets of the set as a list of lists. For example, if the set is ",(function (){var G__104204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3)"], null);
var G__104205 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104204,G__104205) : tailrecursion.hoplon.markdown.code_node.call(null,G__104204,G__104205));
})(),", then the set of all subsets is, ",(function (){var G__104206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(() (3) (2) (2 3) (1) (1 3) (1 2) (1 2 3))"], null);
var G__104207 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104206,G__104207) : tailrecursion.hoplon.markdown.code_node.call(null,G__104206,G__104207));
})(),". Complete the following definition of a procedure that generates the set of subsets of a set and give a clear explanation of why it works:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104202,G__104203) : tailrecursion.hoplon.markdown.para_node.call(null,G__104202,G__104203));
})(),(function (){var G__104208 = (function (){var G__104209 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104210 = (function (){var G__104211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104212 = "(";
var G__104213 = (function (){var G__104244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104245 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104244,G__104245) : tailrecursion.hoplon.span.call(null,G__104244,G__104245));
})();
var G__104214 = (function (){var G__104246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104247 = "subsets";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104246,G__104247) : tailrecursion.hoplon.span.call(null,G__104246,G__104247));
})();
var G__104215 = " [";
var G__104216 = (function (){var G__104248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104249 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104248,G__104249) : tailrecursion.hoplon.span.call(null,G__104248,G__104249));
})();
var G__104217 = "]\n  (";
var G__104218 = (function (){var G__104250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104251 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104250,G__104251) : tailrecursion.hoplon.span.call(null,G__104250,G__104251));
})();
var G__104219 = "(";
var G__104220 = (function (){var G__104252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104253 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104252,G__104253) : tailrecursion.hoplon.span.call(null,G__104252,G__104253));
})();
var G__104221 = " ";
var G__104222 = (function (){var G__104254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104255 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104254,G__104255) : tailrecursion.hoplon.span.call(null,G__104254,G__104255));
})();
var G__104223 = ")\n      (";
var G__104224 = (function (){var G__104256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104257 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104256,G__104257) : tailrecursion.hoplon.span.call(null,G__104256,G__104257));
})();
var G__104225 = "(";
var G__104226 = (function (){var G__104258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104259 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104258,G__104259) : tailrecursion.hoplon.span.call(null,G__104258,G__104259));
})();
var G__104227 = "))\n      (";
var G__104228 = (function (){var G__104260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104261 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104260,G__104261) : tailrecursion.hoplon.span.call(null,G__104260,G__104261));
})();
var G__104229 = "[";
var G__104230 = (function (){var G__104262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104263 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104262,G__104263) : tailrecursion.hoplon.span.call(null,G__104262,G__104263));
})();
var G__104231 = "(";
var G__104232 = (function (){var G__104264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104265 = "subsets";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104264,G__104265) : tailrecursion.hoplon.span.call(null,G__104264,G__104265));
})();
var G__104233 = " (";
var G__104234 = (function (){var G__104266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104267 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104266,G__104267) : tailrecursion.hoplon.span.call(null,G__104266,G__104267));
})();
var G__104235 = (function (){var G__104268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104269 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104268,G__104269) : tailrecursion.hoplon.span.call(null,G__104268,G__104269));
})();
var G__104236 = "))]\n        (";
var G__104237 = (function (){var G__104270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104271 = "concat left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104270,G__104271) : tailrecursion.hoplon.span.call(null,G__104270,G__104271));
})();
var G__104238 = "(";
var G__104239 = (function (){var G__104272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104273 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104272,G__104273) : tailrecursion.hoplon.span.call(null,G__104272,G__104273));
})();
var G__104240 = (function (){var G__104274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104275 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104274,G__104275) : tailrecursion.hoplon.span.call(null,G__104274,G__104275));
})();
var G__104241 = " ";
var G__104242 = (function (){var G__104276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104277 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104276,G__104277) : tailrecursion.hoplon.span.call(null,G__104276,G__104277));
})();
var G__104243 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__104211,G__104212,G__104213,G__104214,G__104215,G__104216,G__104217,G__104218,G__104219,G__104220,G__104221,G__104222,G__104223,G__104224,G__104225,G__104226,G__104227,G__104228,G__104229,G__104230,G__104231,G__104232,G__104233,G__104234,G__104235,G__104236,G__104237,G__104238,G__104239,G__104240,G__104241,G__104242,G__104243) : tailrecursion.hoplon.pre.call(null,G__104211,G__104212,G__104213,G__104214,G__104215,G__104216,G__104217,G__104218,G__104219,G__104220,G__104221,G__104222,G__104223,G__104224,G__104225,G__104226,G__104227,G__104228,G__104229,G__104230,G__104231,G__104232,G__104233,G__104234,G__104235,G__104236,G__104237,G__104238,G__104239,G__104240,G__104241,G__104242,G__104243));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104209,G__104210) : tailrecursion.hoplon.div.call(null,G__104209,G__104210));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104208) : tailrecursion.hoplon.div.call(null,G__104208));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104201;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104200;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104199;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104198;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(defn subsets [s]\n  (if (empty? s)\n      (list (list ))\n      (let [left (subsets (rest s))]\n        (concat left \n                (map #(conj % \n                            (first s))\n                     left)))))\n```\n\nSo, the procedure in question is, `#(conj % (first s))`. As for why\nthis works, let's build it up inductively -- by that I mean that we\nshould look at this step by step. Let's assume we've already computed\n`(subsets (rest s))`, and see what we have to do to get `(subsets\ns)`.\n\nFirstly, if the list is `(list )` (in which case we can't use our\nassumption), then our procedure returns `(())`, which we know to be\ncorrect.\n\nNext, let's assume that our list `s` is not empty, and that we've\ncomputed `(subsets (rest s))`. If we take any subset `d` of `s` and\ndisregard `(first s)` if it's an element of `d`, then this (possibly)\nnew version of `d` is in `(subsets (rest s))`. Hence, we can generate\nany element of `(subsets s)` by either taking it directly from\n`(subsets (rest s))`, or by \"conjing\" `(first s)` onto something from\n`(subsets (rest s))`. Therefore, `(subsets s)`= `(subsets (rest s))`\n\\\\(\\cup\\\\) `(map #(conj % (first s)) (subsets (rest s)))`.\n\nIf this is at all unclear, please let me know. It's kinda hard to\nexplain things without any feedback."], 0))], 0))], 0));
var G__97796 = "";
var G__97797 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Sequences as Conventional Interfaces"], null),(function (){var _STAR_references_STAR_104278 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104279 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104280 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104281 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104282 = cljs.core.PersistentArrayMap.EMPTY;
var G__104283 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In working with compound data, we",(function (){var G__104284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__104285 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104284,G__104285) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104284,G__104285));
})(),"ve stressed how data abstraction permits us to design programs without becoming enmeshed in the details of data representations, and how abstraction preserves for us the flexibility to experiment with alternative representations. In this section, we introduce another powerful design principle for working with data structures ",(function (){var G__104286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__104287 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__104286,G__104287) : tailrecursion.hoplon.markdown.simple_node.call(null,G__104286,G__104287));
})()," the use of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conventional interfaces"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104282,G__104283) : tailrecursion.hoplon.markdown.para_node.call(null,G__104282,G__104283));
})(),(function (){var G__104288 = cljs.core.PersistentArrayMap.EMPTY;
var G__104289 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3"], null)], 0))," we saw how program abstractions, implemented as higher-order procedures, can capture common patterns in programs that deal with numerical data. Our ability to formulate analogous operations for working with compound data depends crucially on the style in which we manipulate our data structures. Consider, for example, the following procedure, analogous to the ",(function (){var G__104290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__104291 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104290,G__104291) : tailrecursion.hoplon.markdown.code_node.call(null,G__104290,G__104291));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.2"], null)], 0)),", which takes a tree as argument and computes the sum of the squares of the leaves that are odd:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104288,G__104289) : tailrecursion.hoplon.markdown.para_node.call(null,G__104288,G__104289));
})(),(function (){var G__104292 = (function (){var G__104293 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104294 = (function (){var G__104295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104296 = "(";
var G__104297 = (function (){var G__104341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104342 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104341,G__104342) : tailrecursion.hoplon.span.call(null,G__104341,G__104342));
})();
var G__104298 = (function (){var G__104343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104344 = "sum-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104343,G__104344) : tailrecursion.hoplon.span.call(null,G__104343,G__104344));
})();
var G__104299 = " [";
var G__104300 = (function (){var G__104345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104346 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104345,G__104346) : tailrecursion.hoplon.span.call(null,G__104345,G__104346));
})();
var G__104301 = "]\n  (";
var G__104302 = (function (){var G__104347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104348 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104347,G__104348) : tailrecursion.hoplon.span.call(null,G__104347,G__104348));
})();
var G__104303 = "(";
var G__104304 = (function (){var G__104349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104350 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104349,G__104350) : tailrecursion.hoplon.span.call(null,G__104349,G__104350));
})();
var G__104305 = " ";
var G__104306 = (function (){var G__104351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104352 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104351,G__104352) : tailrecursion.hoplon.span.call(null,G__104351,G__104352));
})();
var G__104307 = ") ";
var G__104308 = (function (){var G__104353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104354 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104353,G__104354) : tailrecursion.hoplon.span.call(null,G__104353,G__104354));
})();
var G__104309 = "\n        (";
var G__104310 = (function (){var G__104355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104356 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104355,G__104356) : tailrecursion.hoplon.span.call(null,G__104355,G__104356));
})();
var G__104311 = "(";
var G__104312 = (function (){var G__104357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104358 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104357,G__104358) : tailrecursion.hoplon.span.call(null,G__104357,G__104358));
})();
var G__104313 = (function (){var G__104359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104360 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104359,G__104360) : tailrecursion.hoplon.span.call(null,G__104359,G__104360));
})();
var G__104314 = ")) (";
var G__104315 = (function (){var G__104361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104362 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104361,G__104362) : tailrecursion.hoplon.span.call(null,G__104361,G__104362));
})();
var G__104316 = "(";
var G__104317 = (function (){var G__104363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104364 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104363,G__104364) : tailrecursion.hoplon.span.call(null,G__104363,G__104364));
})();
var G__104318 = " ";
var G__104319 = (function (){var G__104365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104366 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104365,G__104366) : tailrecursion.hoplon.span.call(null,G__104365,G__104366));
})();
var G__104320 = ")\n                              (";
var G__104321 = (function (){var G__104367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104368 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104367,G__104368) : tailrecursion.hoplon.span.call(null,G__104367,G__104368));
})();
var G__104322 = " ";
var G__104323 = (function (){var G__104369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104370 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104369,G__104370) : tailrecursion.hoplon.span.call(null,G__104369,G__104370));
})();
var G__104324 = ")\n                              ";
var G__104325 = (function (){var G__104371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104372 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104371,G__104372) : tailrecursion.hoplon.span.call(null,G__104371,G__104372));
})();
var G__104326 = ")\n        ";
var G__104327 = (function (){var G__104373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104374 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104373,G__104374) : tailrecursion.hoplon.span.call(null,G__104373,G__104374));
})();
var G__104328 = " (";
var G__104329 = (function (){var G__104375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104376 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104375,G__104376) : tailrecursion.hoplon.span.call(null,G__104375,G__104376));
})();
var G__104330 = "(";
var G__104331 = (function (){var G__104377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104378 = "sum-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104377,G__104378) : tailrecursion.hoplon.span.call(null,G__104377,G__104378));
})();
var G__104332 = " (";
var G__104333 = (function (){var G__104379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104380 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104379,G__104380) : tailrecursion.hoplon.span.call(null,G__104379,G__104380));
})();
var G__104334 = (function (){var G__104381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104382 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104381,G__104382) : tailrecursion.hoplon.span.call(null,G__104381,G__104382));
})();
var G__104335 = "))\n                 (";
var G__104336 = (function (){var G__104383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104384 = "sum-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104383,G__104384) : tailrecursion.hoplon.span.call(null,G__104383,G__104384));
})();
var G__104337 = " (";
var G__104338 = (function (){var G__104385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104386 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104385,G__104386) : tailrecursion.hoplon.span.call(null,G__104385,G__104386));
})();
var G__104339 = (function (){var G__104387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104388 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104387,G__104388) : tailrecursion.hoplon.span.call(null,G__104387,G__104388));
})();
var G__104340 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__104295,G__104296,G__104297,G__104298,G__104299,G__104300,G__104301,G__104302,G__104303,G__104304,G__104305,G__104306,G__104307,G__104308,G__104309,G__104310,G__104311,G__104312,G__104313,G__104314,G__104315,G__104316,G__104317,G__104318,G__104319,G__104320,G__104321,G__104322,G__104323,G__104324,G__104325,G__104326,G__104327,G__104328,G__104329,G__104330,G__104331,G__104332,G__104333,G__104334,G__104335,G__104336,G__104337,G__104338,G__104339,G__104340) : tailrecursion.hoplon.pre.call(null,G__104295,G__104296,G__104297,G__104298,G__104299,G__104300,G__104301,G__104302,G__104303,G__104304,G__104305,G__104306,G__104307,G__104308,G__104309,G__104310,G__104311,G__104312,G__104313,G__104314,G__104315,G__104316,G__104317,G__104318,G__104319,G__104320,G__104321,G__104322,G__104323,G__104324,G__104325,G__104326,G__104327,G__104328,G__104329,G__104330,G__104331,G__104332,G__104333,G__104334,G__104335,G__104336,G__104337,G__104338,G__104339,G__104340));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104293,G__104294) : tailrecursion.hoplon.div.call(null,G__104293,G__104294));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104292) : tailrecursion.hoplon.div.call(null,G__104292));
})(),(function (){var G__104389 = cljs.core.PersistentArrayMap.EMPTY;
var G__104390 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["On the surface, this procedure is very different from the following one, which constructs a list of all the even Fibonacci numbers \\(Fib(k)\\), where \\(k\\) is less than or equal to a given integer \\(n\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104389,G__104390) : tailrecursion.hoplon.markdown.para_node.call(null,G__104389,G__104390));
})(),(function (){var G__104391 = (function (){var G__104392 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104393 = (function (){var G__104394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104395 = "(";
var G__104396 = (function (){var G__104453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104454 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104453,G__104454) : tailrecursion.hoplon.span.call(null,G__104453,G__104454));
})();
var G__104397 = (function (){var G__104455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104456 = "even-fibs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104455,G__104456) : tailrecursion.hoplon.span.call(null,G__104455,G__104456));
})();
var G__104398 = " [";
var G__104399 = (function (){var G__104457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104458 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104457,G__104458) : tailrecursion.hoplon.span.call(null,G__104457,G__104458));
})();
var G__104400 = "]\n  (";
var G__104401 = (function (){var G__104459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104460 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104459,G__104460) : tailrecursion.hoplon.span.call(null,G__104459,G__104460));
})();
var G__104402 = "[";
var G__104403 = (function (){var G__104461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104462 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104461,G__104462) : tailrecursion.hoplon.span.call(null,G__104461,G__104462));
})();
var G__104404 = "(";
var G__104405 = (function (){var G__104463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104464 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104463,G__104464) : tailrecursion.hoplon.span.call(null,G__104463,G__104464));
})();
var G__104406 = "[";
var G__104407 = (function (){var G__104465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104466 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104465,G__104466) : tailrecursion.hoplon.span.call(null,G__104465,G__104466));
})();
var G__104408 = "] (";
var G__104409 = (function (){var G__104467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104468 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104467,G__104468) : tailrecursion.hoplon.span.call(null,G__104467,G__104468));
})();
var G__104410 = "(";
var G__104411 = (function (){var G__104469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104470 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104469,G__104470) : tailrecursion.hoplon.span.call(null,G__104469,G__104470));
})();
var G__104412 = (function (){var G__104471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104472 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104471,G__104472) : tailrecursion.hoplon.span.call(null,G__104471,G__104472));
})();
var G__104413 = " ";
var G__104414 = (function (){var G__104473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104474 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104473,G__104474) : tailrecursion.hoplon.span.call(null,G__104473,G__104474));
})();
var G__104415 = ")\n                         (";
var G__104416 = (function (){var G__104475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104476 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104475,G__104476) : tailrecursion.hoplon.span.call(null,G__104475,G__104476));
})();
var G__104417 = ")\n                         (";
var G__104418 = (function (){var G__104477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104478 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104477,G__104478) : tailrecursion.hoplon.span.call(null,G__104477,G__104478));
})();
var G__104419 = "[";
var G__104420 = (function (){var G__104479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104480 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104479,G__104480) : tailrecursion.hoplon.span.call(null,G__104479,G__104480));
})();
var G__104421 = " (";
var G__104422 = (function (){var G__104481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104482 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104481,G__104482) : tailrecursion.hoplon.span.call(null,G__104481,G__104482));
})();
var G__104423 = " ";
var G__104424 = (function (){var G__104483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104484 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104483,G__104484) : tailrecursion.hoplon.span.call(null,G__104483,G__104484));
})();
var G__104425 = ")]\n                           (";
var G__104426 = (function (){var G__104485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104486 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104485,G__104486) : tailrecursion.hoplon.span.call(null,G__104485,G__104486));
})();
var G__104427 = "(";
var G__104428 = (function (){var G__104487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104488 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104487,G__104488) : tailrecursion.hoplon.span.call(null,G__104487,G__104488));
})();
var G__104429 = " ";
var G__104430 = (function (){var G__104489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104490 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104489,G__104490) : tailrecursion.hoplon.span.call(null,G__104489,G__104490));
})();
var G__104431 = ")\n                               (";
var G__104432 = (function (){var G__104491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104492 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104491,G__104492) : tailrecursion.hoplon.span.call(null,G__104491,G__104492));
})();
var G__104433 = "(";
var G__104434 = (function (){var G__104493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104494 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104493,G__104494) : tailrecursion.hoplon.span.call(null,G__104493,G__104494));
})();
var G__104435 = "(";
var G__104436 = (function (){var G__104495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104496 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104495,G__104496) : tailrecursion.hoplon.span.call(null,G__104495,G__104496));
})();
var G__104437 = (function (){var G__104497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104498 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104497,G__104498) : tailrecursion.hoplon.span.call(null,G__104497,G__104498));
})();
var G__104438 = " ";
var G__104439 = (function (){var G__104499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104500 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104499,G__104500) : tailrecursion.hoplon.span.call(null,G__104499,G__104500));
})();
var G__104440 = ")) ";
var G__104441 = (function (){var G__104501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104502 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104501,G__104502) : tailrecursion.hoplon.span.call(null,G__104501,G__104502));
})();
var G__104442 = ")\n                               (";
var G__104443 = (function (){var G__104503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104504 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104503,G__104504) : tailrecursion.hoplon.span.call(null,G__104503,G__104504));
})();
var G__104444 = "(";
var G__104445 = (function (){var G__104505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104506 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104505,G__104506) : tailrecursion.hoplon.span.call(null,G__104505,G__104506));
})();
var G__104446 = (function (){var G__104507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104508 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104507,G__104508) : tailrecursion.hoplon.span.call(null,G__104507,G__104508));
})();
var G__104447 = " ";
var G__104448 = (function (){var G__104509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104510 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104509,G__104510) : tailrecursion.hoplon.span.call(null,G__104509,G__104510));
})();
var G__104449 = ")))))))\n  (";
var G__104450 = (function (){var G__104511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104512 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104511,G__104512) : tailrecursion.hoplon.span.call(null,G__104511,G__104512));
})();
var G__104451 = (function (){var G__104513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104514 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104513,G__104514) : tailrecursion.hoplon.span.call(null,G__104513,G__104514));
})();
var G__104452 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__104394,G__104395,G__104396,G__104397,G__104398,G__104399,G__104400,G__104401,G__104402,G__104403,G__104404,G__104405,G__104406,G__104407,G__104408,G__104409,G__104410,G__104411,G__104412,G__104413,G__104414,G__104415,G__104416,G__104417,G__104418,G__104419,G__104420,G__104421,G__104422,G__104423,G__104424,G__104425,G__104426,G__104427,G__104428,G__104429,G__104430,G__104431,G__104432,G__104433,G__104434,G__104435,G__104436,G__104437,G__104438,G__104439,G__104440,G__104441,G__104442,G__104443,G__104444,G__104445,G__104446,G__104447,G__104448,G__104449,G__104450,G__104451,G__104452) : tailrecursion.hoplon.pre.call(null,G__104394,G__104395,G__104396,G__104397,G__104398,G__104399,G__104400,G__104401,G__104402,G__104403,G__104404,G__104405,G__104406,G__104407,G__104408,G__104409,G__104410,G__104411,G__104412,G__104413,G__104414,G__104415,G__104416,G__104417,G__104418,G__104419,G__104420,G__104421,G__104422,G__104423,G__104424,G__104425,G__104426,G__104427,G__104428,G__104429,G__104430,G__104431,G__104432,G__104433,G__104434,G__104435,G__104436,G__104437,G__104438,G__104439,G__104440,G__104441,G__104442,G__104443,G__104444,G__104445,G__104446,G__104447,G__104448,G__104449,G__104450,G__104451,G__104452));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104392,G__104393) : tailrecursion.hoplon.div.call(null,G__104392,G__104393));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104391) : tailrecursion.hoplon.div.call(null,G__104391));
})(),(function (){var G__104515 = cljs.core.PersistentArrayMap.EMPTY;
var G__104516 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Despite the fact that these two procedures are structurally very different, a more abstract description of the two computations reveals a great deal of similarity. The first program"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104515,G__104516) : tailrecursion.hoplon.markdown.para_node.call(null,G__104515,G__104516));
})(),(function (){var G__104517 = cljs.core.PersistentArrayMap.EMPTY;
var G__104518 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104519 = cljs.core.PersistentArrayMap.EMPTY;
var G__104520 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104521 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104522 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["enumerates the leaves of a tree;"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104522;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104521;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104519,G__104520) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104519,G__104520));
})(),(function (){var G__104523 = cljs.core.PersistentArrayMap.EMPTY;
var G__104524 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104525 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104526 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filters them, selecting the odd ones;"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104526;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104525;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104523,G__104524) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104523,G__104524));
})(),(function (){var G__104527 = cljs.core.PersistentArrayMap.EMPTY;
var G__104528 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104529 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104530 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["squares each of the selected one; and"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104530;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104529;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104527,G__104528) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104527,G__104528));
})(),(function (){var G__104531 = cljs.core.PersistentArrayMap.EMPTY;
var G__104532 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104533 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104534 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accumulates the results unsing +, starting with 0."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104534;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104533;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104531,G__104532) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104531,G__104532));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__104517,G__104518) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__104517,G__104518));
})(),(function (){var G__104535 = cljs.core.PersistentArrayMap.EMPTY;
var G__104536 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second program"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104535,G__104536) : tailrecursion.hoplon.markdown.para_node.call(null,G__104535,G__104536));
})(),(function (){var G__104537 = cljs.core.PersistentArrayMap.EMPTY;
var G__104538 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104539 = cljs.core.PersistentArrayMap.EMPTY;
var G__104540 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104541 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104542 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["enumerates the integers from 0 to \\(n\\);"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104542;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104541;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104539,G__104540) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104539,G__104540));
})(),(function (){var G__104543 = cljs.core.PersistentArrayMap.EMPTY;
var G__104544 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104545 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104546 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["computes the fibonacci number for each integer;"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104546;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104545;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104543,G__104544) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104543,G__104544));
})(),(function (){var G__104547 = cljs.core.PersistentArrayMap.EMPTY;
var G__104548 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104549 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104550 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filters them, selecting the even ones; and"], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104550;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104549;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104547,G__104548) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104547,G__104548));
})(),(function (){var G__104551 = cljs.core.PersistentArrayMap.EMPTY;
var G__104552 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_104553 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104554 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accumulates the results using ",(function (){var G__104555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__104556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104555,G__104556) : tailrecursion.hoplon.markdown.code_node.call(null,G__104555,G__104556));
})(),", starting with the empty list."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104554;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104553;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__104551,G__104552) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__104551,G__104552));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__104537,G__104538) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__104537,G__104538));
})(),(function (){var G__104557 = cljs.core.PersistentArrayMap.EMPTY;
var G__104558 = new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A signal-processing engineer would find it natural to conceptualize these processes in terms of signals flowing through a cascade of stages, each of which implements part of the program plan, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/fig/7/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.7"], null)], 0)),". In ",(function (){var G__104559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__104560 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104559,G__104560) : tailrecursion.hoplon.markdown.code_node.call(null,G__104559,G__104560));
})(),", we begin with an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["enumerator"], null)], 0)),", which generates a ",(function (){var G__104561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__104562 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["signal"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__104561,G__104562) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__104561,G__104562));
})()," consisting of the leaves of a given tree. This signal is passed through a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filter"], null)], 0)),", which eliminates all but the odd elements. The resulting signal is in turn passed through a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["map"], null)], 0)),", which is a ",(function (){var G__104563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__104564 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["transducer"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__104563,G__104564) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__104563,G__104564));
})()," that applies the ",(function (){var G__104565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square"], null);
var G__104566 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104565,G__104566) : tailrecursion.hoplon.markdown.code_node.call(null,G__104565,G__104566));
})()," procedure to each element. The output of the map is then fed to an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accumulator"], null)], 0)),", which combines the elements using +, starting from an initial 0. The plan for ",(function (){var G__104567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__104568 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104567,G__104568) : tailrecursion.hoplon.markdown.code_node.call(null,G__104567,G__104568));
})()," is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104557,G__104558) : tailrecursion.hoplon.markdown.para_node.call(null,G__104557,G__104558));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104281;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104280;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104279;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104278;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The signal-flow plans for the procedures sum-odd-squares (top) and even-fibs (bottom) reveal the commonality between the two programs."], null)], 0)),"",(function (){var _STAR_references_STAR_104569 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104570 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104571 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104572 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104573 = cljs.core.PersistentArrayMap.EMPTY;
var G__104574 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, the two procedure definitions above fail to exibit this signal-flow structure. For instance, if we examine the ",(function (){var G__104575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__104576 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104575,G__104576) : tailrecursion.hoplon.markdown.code_node.call(null,G__104575,G__104576));
})()," procedure, we find that the enumeration is implemented partly by the ",(function (){var G__104577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"empty?"], null);
var G__104578 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104577,G__104578) : tailrecursion.hoplon.markdown.code_node.call(null,G__104577,G__104578));
})()," and ",(function (){var G__104579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"seq?"], null);
var G__104580 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104579,G__104580) : tailrecursion.hoplon.markdown.code_node.call(null,G__104579,G__104580));
})()," tests and partly by the tree-recursive structure of the procedure. Similarly, the accumulation is found partly in the tests and partly in the addition used in the recursion. In general, there are no distinct parts of either procedure that correspond to the elements in the signal-flow description. Our two procedures decompose the computations in a different way, spreading the enumeration of the program and mingling it with the map, the filter, and the accumulation. If we could reorganize our programs to make the signal-flow structure manifest in the procedures we write, this would increase the conceptual clarity of the resulting code."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104573,G__104574) : tailrecursion.hoplon.markdown.para_node.call(null,G__104573,G__104574));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104572;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104571;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104570;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104569;
}})()], 0));
var G__97798 = "";
var G__97799 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Sequence Operations"], null),(function (){var _STAR_references_STAR_104581 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104582 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_104583 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_104584 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__104585 = cljs.core.PersistentArrayMap.EMPTY;
var G__104586 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The key to organizing programs so as to more clearly reflect the signal-flow structure is to concentrate on the ",(function (){var G__104587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__104588 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["signals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__104587,G__104588) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__104587,G__104588));
})()," that flow from one stage in the process to the next. If we represent these signals as lists, then we can use list operations to implement the processing at each of the stages. For instance, we can implement the mapping stages of the signal-flow diagrams using the ",(function (){var G__104589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__104590 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104589,G__104590) : tailrecursion.hoplon.markdown.code_node.call(null,G__104589,G__104590));
})()," procedure from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"@!/sicp/ch/2/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.1"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104585,G__104586) : tailrecursion.hoplon.markdown.para_node.call(null,G__104585,G__104586));
})(),(function (){var G__104591 = (function (){var G__104592 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104593 = (function (){var G__104594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104595 = "(";
var G__104596 = (function (){var G__104620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104621 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104620,G__104621) : tailrecursion.hoplon.span.call(null,G__104620,G__104621));
})();
var G__104597 = (function (){var G__104622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104623 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104622,G__104623) : tailrecursion.hoplon.span.call(null,G__104622,G__104623));
})();
var G__104598 = " (";
var G__104599 = (function (){var G__104624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104625 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104624,G__104625) : tailrecursion.hoplon.span.call(null,G__104624,G__104625));
})();
var G__104600 = (function (){var G__104626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104627 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104626,G__104627) : tailrecursion.hoplon.span.call(null,G__104626,G__104627));
})();
var G__104601 = " ";
var G__104602 = (function (){var G__104628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104629 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104628,G__104629) : tailrecursion.hoplon.span.call(null,G__104628,G__104629));
})();
var G__104603 = " ";
var G__104604 = (function (){var G__104630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104631 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104630,G__104631) : tailrecursion.hoplon.span.call(null,G__104630,G__104631));
})();
var G__104605 = " ";
var G__104606 = (function (){var G__104632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104633 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104632,G__104633) : tailrecursion.hoplon.span.call(null,G__104632,G__104633));
})();
var G__104607 = " ";
var G__104608 = (function (){var G__104634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104635 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104634,G__104635) : tailrecursion.hoplon.span.call(null,G__104634,G__104635));
})();
var G__104609 = "))\n(";
var G__104610 = (function (){var G__104636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104637 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104636,G__104637) : tailrecursion.hoplon.span.call(null,G__104636,G__104637));
})();
var G__104611 = " ";
var G__104612 = (function (){var G__104638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104639 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104638,G__104639) : tailrecursion.hoplon.span.call(null,G__104638,G__104639));
})();
var G__104613 = " ";
var G__104614 = (function (){var G__104640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104641 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104640,G__104641) : tailrecursion.hoplon.span.call(null,G__104640,G__104641));
})();
var G__104615 = " ";
var G__104616 = (function (){var G__104642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104643 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104642,G__104643) : tailrecursion.hoplon.span.call(null,G__104642,G__104643));
})();
var G__104617 = " ";
var G__104618 = (function (){var G__104644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104645 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104644,G__104645) : tailrecursion.hoplon.span.call(null,G__104644,G__104645));
})();
var G__104619 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__104594,G__104595,G__104596,G__104597,G__104598,G__104599,G__104600,G__104601,G__104602,G__104603,G__104604,G__104605,G__104606,G__104607,G__104608,G__104609,G__104610,G__104611,G__104612,G__104613,G__104614,G__104615,G__104616,G__104617,G__104618,G__104619) : tailrecursion.hoplon.pre.call(null,G__104594,G__104595,G__104596,G__104597,G__104598,G__104599,G__104600,G__104601,G__104602,G__104603,G__104604,G__104605,G__104606,G__104607,G__104608,G__104609,G__104610,G__104611,G__104612,G__104613,G__104614,G__104615,G__104616,G__104617,G__104618,G__104619));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104592,G__104593) : tailrecursion.hoplon.div.call(null,G__104592,G__104593));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104591) : tailrecursion.hoplon.div.call(null,G__104591));
})(),(function (){var G__104646 = cljs.core.PersistentArrayMap.EMPTY;
var G__104647 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Filtering a sequence to select only those elements that satisfy a given predicate is accomplished by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104646,G__104647) : tailrecursion.hoplon.markdown.para_node.call(null,G__104646,G__104647));
})(),(function (){var G__104648 = (function (){var G__104649 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104650 = (function (){var G__104651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104652 = "(";
var G__104653 = (function (){var G__104692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104693 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104692,G__104693) : tailrecursion.hoplon.span.call(null,G__104692,G__104693));
})();
var G__104654 = (function (){var G__104694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104695 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104694,G__104695) : tailrecursion.hoplon.span.call(null,G__104694,G__104695));
})();
var G__104655 = "[";
var G__104656 = (function (){var G__104696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104697 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104696,G__104697) : tailrecursion.hoplon.span.call(null,G__104696,G__104697));
})();
var G__104657 = " ";
var G__104658 = (function (){var G__104698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104699 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104698,G__104699) : tailrecursion.hoplon.span.call(null,G__104698,G__104699));
})();
var G__104659 = "]\n  (";
var G__104660 = (function (){var G__104700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104701 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104700,G__104701) : tailrecursion.hoplon.span.call(null,G__104700,G__104701));
})();
var G__104661 = "(";
var G__104662 = (function (){var G__104702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104703 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104702,G__104703) : tailrecursion.hoplon.span.call(null,G__104702,G__104703));
})();
var G__104663 = " ";
var G__104664 = (function (){var G__104704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104705 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104704,G__104705) : tailrecursion.hoplon.span.call(null,G__104704,G__104705));
})();
var G__104665 = ") (";
var G__104666 = (function (){var G__104706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104707 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104706,G__104707) : tailrecursion.hoplon.span.call(null,G__104706,G__104707));
})();
var G__104667 = ")\n        (";
var G__104668 = (function (){var G__104708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104709 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104708,G__104709) : tailrecursion.hoplon.span.call(null,G__104708,G__104709));
})();
var G__104669 = " (";
var G__104670 = (function (){var G__104710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104711 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104710,G__104711) : tailrecursion.hoplon.span.call(null,G__104710,G__104711));
})();
var G__104671 = (function (){var G__104712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104713 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104712,G__104713) : tailrecursion.hoplon.span.call(null,G__104712,G__104713));
})();
var G__104672 = ")) (";
var G__104673 = (function (){var G__104714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104715 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104714,G__104715) : tailrecursion.hoplon.span.call(null,G__104714,G__104715));
})();
var G__104674 = "(";
var G__104675 = (function (){var G__104716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104717 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104716,G__104717) : tailrecursion.hoplon.span.call(null,G__104716,G__104717));
})();
var G__104676 = (function (){var G__104718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104719 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104718,G__104719) : tailrecursion.hoplon.span.call(null,G__104718,G__104719));
})();
var G__104677 = " \n                                                   (";
var G__104678 = (function (){var G__104720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104721 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104720,G__104721) : tailrecursion.hoplon.span.call(null,G__104720,G__104721));
})();
var G__104679 = (function (){var G__104722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104723 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104722,G__104723) : tailrecursion.hoplon.span.call(null,G__104722,G__104723));
})();
var G__104680 = "))\n                                           (";
var G__104681 = (function (){var G__104724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104725 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104724,G__104725) : tailrecursion.hoplon.span.call(null,G__104724,G__104725));
})();
var G__104682 = (function (){var G__104726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104727 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104726,G__104727) : tailrecursion.hoplon.span.call(null,G__104726,G__104727));
})();
var G__104683 = "))\n        ";
var G__104684 = (function (){var G__104728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104729 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104728,G__104729) : tailrecursion.hoplon.span.call(null,G__104728,G__104729));
})();
var G__104685 = " (";
var G__104686 = (function (){var G__104730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104731 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104730,G__104731) : tailrecursion.hoplon.span.call(null,G__104730,G__104731));
})();
var G__104687 = (function (){var G__104732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104733 = "predicate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104732,G__104733) : tailrecursion.hoplon.span.call(null,G__104732,G__104733));
})();
var G__104688 = " (";
var G__104689 = (function (){var G__104734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104735 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104734,G__104735) : tailrecursion.hoplon.span.call(null,G__104734,G__104735));
})();
var G__104690 = (function (){var G__104736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104737 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104736,G__104737) : tailrecursion.hoplon.span.call(null,G__104736,G__104737));
})();
var G__104691 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__104651,G__104652,G__104653,G__104654,G__104655,G__104656,G__104657,G__104658,G__104659,G__104660,G__104661,G__104662,G__104663,G__104664,G__104665,G__104666,G__104667,G__104668,G__104669,G__104670,G__104671,G__104672,G__104673,G__104674,G__104675,G__104676,G__104677,G__104678,G__104679,G__104680,G__104681,G__104682,G__104683,G__104684,G__104685,G__104686,G__104687,G__104688,G__104689,G__104690,G__104691) : tailrecursion.hoplon.pre.call(null,G__104651,G__104652,G__104653,G__104654,G__104655,G__104656,G__104657,G__104658,G__104659,G__104660,G__104661,G__104662,G__104663,G__104664,G__104665,G__104666,G__104667,G__104668,G__104669,G__104670,G__104671,G__104672,G__104673,G__104674,G__104675,G__104676,G__104677,G__104678,G__104679,G__104680,G__104681,G__104682,G__104683,G__104684,G__104685,G__104686,G__104687,G__104688,G__104689,G__104690,G__104691));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104649,G__104650) : tailrecursion.hoplon.div.call(null,G__104649,G__104650));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104648) : tailrecursion.hoplon.div.call(null,G__104648));
})(),(function (){var G__104738 = cljs.core.PersistentArrayMap.EMPTY;
var G__104739 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104738,G__104739) : tailrecursion.hoplon.markdown.para_node.call(null,G__104738,G__104739));
})(),(function (){var G__104740 = (function (){var G__104741 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104742 = (function (){var G__104743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104744 = "(";
var G__104745 = (function (){var G__104765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104766 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104765,G__104766) : tailrecursion.hoplon.span.call(null,G__104765,G__104766));
})();
var G__104746 = (function (){var G__104767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104768 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104767,G__104768) : tailrecursion.hoplon.span.call(null,G__104767,G__104768));
})();
var G__104747 = " (";
var G__104748 = (function (){var G__104769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104770 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104769,G__104770) : tailrecursion.hoplon.span.call(null,G__104769,G__104770));
})();
var G__104749 = (function (){var G__104771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104772 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104771,G__104772) : tailrecursion.hoplon.span.call(null,G__104771,G__104772));
})();
var G__104750 = " ";
var G__104751 = (function (){var G__104773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104774 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104773,G__104774) : tailrecursion.hoplon.span.call(null,G__104773,G__104774));
})();
var G__104752 = " ";
var G__104753 = (function (){var G__104775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104776 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104775,G__104776) : tailrecursion.hoplon.span.call(null,G__104775,G__104776));
})();
var G__104754 = " ";
var G__104755 = (function (){var G__104777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104778 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104777,G__104778) : tailrecursion.hoplon.span.call(null,G__104777,G__104778));
})();
var G__104756 = " ";
var G__104757 = (function (){var G__104779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104780 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104779,G__104780) : tailrecursion.hoplon.span.call(null,G__104779,G__104780));
})();
var G__104758 = "))\n(";
var G__104759 = (function (){var G__104781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104782 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104781,G__104782) : tailrecursion.hoplon.span.call(null,G__104781,G__104782));
})();
var G__104760 = " ";
var G__104761 = (function (){var G__104783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104784 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104783,G__104784) : tailrecursion.hoplon.span.call(null,G__104783,G__104784));
})();
var G__104762 = " ";
var G__104763 = (function (){var G__104785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104786 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104785,G__104786) : tailrecursion.hoplon.span.call(null,G__104785,G__104786));
})();
var G__104764 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__104743,G__104744,G__104745,G__104746,G__104747,G__104748,G__104749,G__104750,G__104751,G__104752,G__104753,G__104754,G__104755,G__104756,G__104757,G__104758,G__104759,G__104760,G__104761,G__104762,G__104763,G__104764) : tailrecursion.hoplon.pre.call(null,G__104743,G__104744,G__104745,G__104746,G__104747,G__104748,G__104749,G__104750,G__104751,G__104752,G__104753,G__104754,G__104755,G__104756,G__104757,G__104758,G__104759,G__104760,G__104761,G__104762,G__104763,G__104764));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104741,G__104742) : tailrecursion.hoplon.div.call(null,G__104741,G__104742));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104740) : tailrecursion.hoplon.div.call(null,G__104740));
})(),(function (){var G__104787 = cljs.core.PersistentArrayMap.EMPTY;
var G__104788 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Accumulations can be implemented by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104787,G__104788) : tailrecursion.hoplon.markdown.para_node.call(null,G__104787,G__104788));
})(),(function (){var G__104789 = (function (){var G__104790 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104791 = (function (){var G__104792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104793 = "(";
var G__104794 = (function (){var G__104887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104888 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104887,G__104888) : tailrecursion.hoplon.span.call(null,G__104887,G__104888));
})();
var G__104795 = (function (){var G__104889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104890 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104889,G__104890) : tailrecursion.hoplon.span.call(null,G__104889,G__104890));
})();
var G__104796 = " [";
var G__104797 = (function (){var G__104891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104892 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104891,G__104892) : tailrecursion.hoplon.span.call(null,G__104891,G__104892));
})();
var G__104798 = " ";
var G__104799 = (function (){var G__104893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104894 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104893,G__104894) : tailrecursion.hoplon.span.call(null,G__104893,G__104894));
})();
var G__104800 = " ";
var G__104801 = (function (){var G__104895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104896 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104895,G__104896) : tailrecursion.hoplon.span.call(null,G__104895,G__104896));
})();
var G__104802 = "]\n  (";
var G__104803 = (function (){var G__104897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__104898 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104897,G__104898) : tailrecursion.hoplon.span.call(null,G__104897,G__104898));
})();
var G__104804 = "(";
var G__104805 = (function (){var G__104899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104900 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104899,G__104900) : tailrecursion.hoplon.span.call(null,G__104899,G__104900));
})();
var G__104806 = " ";
var G__104807 = (function (){var G__104901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104902 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104901,G__104902) : tailrecursion.hoplon.span.call(null,G__104901,G__104902));
})();
var G__104808 = ")\n      ";
var G__104809 = (function (){var G__104903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104904 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104903,G__104904) : tailrecursion.hoplon.span.call(null,G__104903,G__104904));
})();
var G__104810 = "\n      (";
var G__104811 = (function (){var G__104905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104906 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104905,G__104906) : tailrecursion.hoplon.span.call(null,G__104905,G__104906));
})();
var G__104812 = " (";
var G__104813 = (function (){var G__104907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104908 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104907,G__104908) : tailrecursion.hoplon.span.call(null,G__104907,G__104908));
})();
var G__104814 = (function (){var G__104909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104910 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104909,G__104910) : tailrecursion.hoplon.span.call(null,G__104909,G__104910));
})();
var G__104815 = ")\n          (";
var G__104816 = (function (){var G__104911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104912 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104911,G__104912) : tailrecursion.hoplon.span.call(null,G__104911,G__104912));
})();
var G__104817 = " ";
var G__104818 = (function (){var G__104913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104914 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104913,G__104914) : tailrecursion.hoplon.span.call(null,G__104913,G__104914));
})();
var G__104819 = " ";
var G__104820 = (function (){var G__104915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104916 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104915,G__104916) : tailrecursion.hoplon.span.call(null,G__104915,G__104916));
})();
var G__104821 = " (";
var G__104822 = (function (){var G__104917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104918 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104917,G__104918) : tailrecursion.hoplon.span.call(null,G__104917,G__104918));
})();
var G__104823 = (function (){var G__104919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104920 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104919,G__104920) : tailrecursion.hoplon.span.call(null,G__104919,G__104920));
})();
var G__104824 = ")))))\n\n(";
var G__104825 = (function (){var G__104921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104922 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104921,G__104922) : tailrecursion.hoplon.span.call(null,G__104921,G__104922));
})();
var G__104826 = " ";
var G__104827 = (function (){var G__104923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104924 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104923,G__104924) : tailrecursion.hoplon.span.call(null,G__104923,G__104924));
})();
var G__104828 = (function (){var G__104925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104926 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104925,G__104926) : tailrecursion.hoplon.span.call(null,G__104925,G__104926));
})();
var G__104829 = " (";
var G__104830 = (function (){var G__104927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104928 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104927,G__104928) : tailrecursion.hoplon.span.call(null,G__104927,G__104928));
})();
var G__104831 = (function (){var G__104929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104930 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104929,G__104930) : tailrecursion.hoplon.span.call(null,G__104929,G__104930));
})();
var G__104832 = " ";
var G__104833 = (function (){var G__104931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104932 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104931,G__104932) : tailrecursion.hoplon.span.call(null,G__104931,G__104932));
})();
var G__104834 = " ";
var G__104835 = (function (){var G__104933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104934 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104933,G__104934) : tailrecursion.hoplon.span.call(null,G__104933,G__104934));
})();
var G__104836 = " ";
var G__104837 = (function (){var G__104935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104936 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104935,G__104936) : tailrecursion.hoplon.span.call(null,G__104935,G__104936));
})();
var G__104838 = " ";
var G__104839 = (function (){var G__104937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104938 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104937,G__104938) : tailrecursion.hoplon.span.call(null,G__104937,G__104938));
})();
var G__104840 = "))\n";
var G__104841 = (function (){var G__104939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104940 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104939,G__104940) : tailrecursion.hoplon.span.call(null,G__104939,G__104940));
})();
var G__104842 = "\n\n(";
var G__104843 = (function (){var G__104941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104942 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104941,G__104942) : tailrecursion.hoplon.span.call(null,G__104941,G__104942));
})();
var G__104844 = " ";
var G__104845 = (function (){var G__104943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104944 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104943,G__104944) : tailrecursion.hoplon.span.call(null,G__104943,G__104944));
})();
var G__104846 = (function (){var G__104945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104946 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104945,G__104946) : tailrecursion.hoplon.span.call(null,G__104945,G__104946));
})();
var G__104847 = " (";
var G__104848 = (function (){var G__104947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104948 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104947,G__104948) : tailrecursion.hoplon.span.call(null,G__104947,G__104948));
})();
var G__104849 = (function (){var G__104949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104950 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104949,G__104950) : tailrecursion.hoplon.span.call(null,G__104949,G__104950));
})();
var G__104850 = " ";
var G__104851 = (function (){var G__104951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104952 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104951,G__104952) : tailrecursion.hoplon.span.call(null,G__104951,G__104952));
})();
var G__104852 = " ";
var G__104853 = (function (){var G__104953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104954 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104953,G__104954) : tailrecursion.hoplon.span.call(null,G__104953,G__104954));
})();
var G__104854 = " ";
var G__104855 = (function (){var G__104955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104956 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104955,G__104956) : tailrecursion.hoplon.span.call(null,G__104955,G__104956));
})();
var G__104856 = " ";
var G__104857 = (function (){var G__104957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104958 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104957,G__104958) : tailrecursion.hoplon.span.call(null,G__104957,G__104958));
})();
var G__104858 = "))\n";
var G__104859 = (function (){var G__104959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104960 = "120";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104959,G__104960) : tailrecursion.hoplon.span.call(null,G__104959,G__104960));
})();
var G__104860 = "\n\n(";
var G__104861 = (function (){var G__104961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__104962 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104961,G__104962) : tailrecursion.hoplon.span.call(null,G__104961,G__104962));
})();
var G__104862 = " ";
var G__104863 = (function (){var G__104963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104964 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104963,G__104964) : tailrecursion.hoplon.span.call(null,G__104963,G__104964));
})();
var G__104864 = (function (){var G__104965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__104966 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104965,G__104966) : tailrecursion.hoplon.span.call(null,G__104965,G__104966));
})();
var G__104865 = " (";
var G__104866 = (function (){var G__104967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__104968 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104967,G__104968) : tailrecursion.hoplon.span.call(null,G__104967,G__104968));
})();
var G__104867 = (function (){var G__104969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104970 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104969,G__104970) : tailrecursion.hoplon.span.call(null,G__104969,G__104970));
})();
var G__104868 = " ";
var G__104869 = (function (){var G__104971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104972 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104971,G__104972) : tailrecursion.hoplon.span.call(null,G__104971,G__104972));
})();
var G__104870 = " ";
var G__104871 = (function (){var G__104973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104974 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104973,G__104974) : tailrecursion.hoplon.span.call(null,G__104973,G__104974));
})();
var G__104872 = " ";
var G__104873 = (function (){var G__104975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104976 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104975,G__104976) : tailrecursion.hoplon.span.call(null,G__104975,G__104976));
})();
var G__104874 = " ";
var G__104875 = (function (){var G__104977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104978 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104977,G__104978) : tailrecursion.hoplon.span.call(null,G__104977,G__104978));
})();
var G__104876 = "))\n(";
var G__104877 = (function (){var G__104979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104980 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104979,G__104980) : tailrecursion.hoplon.span.call(null,G__104979,G__104980));
})();
var G__104878 = " ";
var G__104879 = (function (){var G__104981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104982 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104981,G__104982) : tailrecursion.hoplon.span.call(null,G__104981,G__104982));
})();
var G__104880 = " ";
var G__104881 = (function (){var G__104983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104984 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104983,G__104984) : tailrecursion.hoplon.span.call(null,G__104983,G__104984));
})();
var G__104882 = " ";
var G__104883 = (function (){var G__104985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104986 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104985,G__104986) : tailrecursion.hoplon.span.call(null,G__104985,G__104986));
})();
var G__104884 = " ";
var G__104885 = (function (){var G__104987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__104988 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__104987,G__104988) : tailrecursion.hoplon.span.call(null,G__104987,G__104988));
})();
var G__104886 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95(G__104792,G__104793,G__104794,G__104795,G__104796,G__104797,G__104798,G__104799,G__104800,G__104801,G__104802,G__104803,G__104804,G__104805,G__104806,G__104807,G__104808,G__104809,G__104810,G__104811,G__104812,G__104813,G__104814,G__104815,G__104816,G__104817,G__104818,G__104819,G__104820,G__104821,G__104822,G__104823,G__104824,G__104825,G__104826,G__104827,G__104828,G__104829,G__104830,G__104831,G__104832,G__104833,G__104834,G__104835,G__104836,G__104837,G__104838,G__104839,G__104840,G__104841,G__104842,G__104843,G__104844,G__104845,G__104846,G__104847,G__104848,G__104849,G__104850,G__104851,G__104852,G__104853,G__104854,G__104855,G__104856,G__104857,G__104858,G__104859,G__104860,G__104861,G__104862,G__104863,G__104864,G__104865,G__104866,G__104867,G__104868,G__104869,G__104870,G__104871,G__104872,G__104873,G__104874,G__104875,G__104876,G__104877,G__104878,G__104879,G__104880,G__104881,G__104882,G__104883,G__104884,G__104885,G__104886) : tailrecursion.hoplon.pre.call(null,G__104792,G__104793,G__104794,G__104795,G__104796,G__104797,G__104798,G__104799,G__104800,G__104801,G__104802,G__104803,G__104804,G__104805,G__104806,G__104807,G__104808,G__104809,G__104810,G__104811,G__104812,G__104813,G__104814,G__104815,G__104816,G__104817,G__104818,G__104819,G__104820,G__104821,G__104822,G__104823,G__104824,G__104825,G__104826,G__104827,G__104828,G__104829,G__104830,G__104831,G__104832,G__104833,G__104834,G__104835,G__104836,G__104837,G__104838,G__104839,G__104840,G__104841,G__104842,G__104843,G__104844,G__104845,G__104846,G__104847,G__104848,G__104849,G__104850,G__104851,G__104852,G__104853,G__104854,G__104855,G__104856,G__104857,G__104858,G__104859,G__104860,G__104861,G__104862,G__104863,G__104864,G__104865,G__104866,G__104867,G__104868,G__104869,G__104870,G__104871,G__104872,G__104873,G__104874,G__104875,G__104876,G__104877,G__104878,G__104879,G__104880,G__104881,G__104882,G__104883,G__104884,G__104885,G__104886));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104790,G__104791) : tailrecursion.hoplon.div.call(null,G__104790,G__104791));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104789) : tailrecursion.hoplon.div.call(null,G__104789));
})(),(function (){var G__104989 = cljs.core.PersistentArrayMap.EMPTY;
var G__104990 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: in the original SICP, ",(function (){var G__104991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate"], null);
var G__104992 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__104991,G__104992) : tailrecursion.hoplon.markdown.code_node.call(null,G__104991,G__104992));
})()," is defined as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__104989,G__104990) : tailrecursion.hoplon.markdown.para_node.call(null,G__104989,G__104990));
})(),(function (){var G__104993 = (function (){var G__104994 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__104995 = (function (){var G__104996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__104997 = "(";
var G__104998 = (function (){var G__105029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105030 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105029,G__105030) : tailrecursion.hoplon.span.call(null,G__105029,G__105030));
})();
var G__104999 = "(";
var G__105000 = (function (){var G__105031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105032 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105031,G__105032) : tailrecursion.hoplon.span.call(null,G__105031,G__105032));
})();
var G__105001 = " ";
var G__105002 = (function (){var G__105033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105034 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105033,G__105034) : tailrecursion.hoplon.span.call(null,G__105033,G__105034));
})();
var G__105003 = " ";
var G__105004 = (function (){var G__105035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105036 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105035,G__105036) : tailrecursion.hoplon.span.call(null,G__105035,G__105036));
})();
var G__105005 = " ";
var G__105006 = (function (){var G__105037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105038 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105037,G__105038) : tailrecursion.hoplon.span.call(null,G__105037,G__105038));
})();
var G__105007 = ")\n  (";
var G__105008 = (function (){var G__105039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105040 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105039,G__105040) : tailrecursion.hoplon.span.call(null,G__105039,G__105040));
})();
var G__105009 = "(";
var G__105010 = (function (){var G__105041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105042 = "null? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105041,G__105042) : tailrecursion.hoplon.span.call(null,G__105041,G__105042));
})();
var G__105011 = (function (){var G__105043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105044 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105043,G__105044) : tailrecursion.hoplon.span.call(null,G__105043,G__105044));
})();
var G__105012 = ")\n      ";
var G__105013 = (function (){var G__105045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105046 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105045,G__105046) : tailrecursion.hoplon.span.call(null,G__105045,G__105046));
})();
var G__105014 = "\n      (";
var G__105015 = (function (){var G__105047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105048 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105047,G__105048) : tailrecursion.hoplon.span.call(null,G__105047,G__105048));
})();
var G__105016 = " (";
var G__105017 = (function (){var G__105049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105050 = "car ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105049,G__105050) : tailrecursion.hoplon.span.call(null,G__105049,G__105050));
})();
var G__105018 = (function (){var G__105051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105052 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105051,G__105052) : tailrecursion.hoplon.span.call(null,G__105051,G__105052));
})();
var G__105019 = ")\n          (";
var G__105020 = (function (){var G__105053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105054 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105053,G__105054) : tailrecursion.hoplon.span.call(null,G__105053,G__105054));
})();
var G__105021 = " ";
var G__105022 = (function (){var G__105055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105056 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105055,G__105056) : tailrecursion.hoplon.span.call(null,G__105055,G__105056));
})();
var G__105023 = " ";
var G__105024 = (function (){var G__105057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105058 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105057,G__105058) : tailrecursion.hoplon.span.call(null,G__105057,G__105058));
})();
var G__105025 = " (";
var G__105026 = (function (){var G__105059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105060 = "cdr ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105059,G__105060) : tailrecursion.hoplon.span.call(null,G__105059,G__105060));
})();
var G__105027 = (function (){var G__105061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105062 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105061,G__105062) : tailrecursion.hoplon.span.call(null,G__105061,G__105062));
})();
var G__105028 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__104996,G__104997,G__104998,G__104999,G__105000,G__105001,G__105002,G__105003,G__105004,G__105005,G__105006,G__105007,G__105008,G__105009,G__105010,G__105011,G__105012,G__105013,G__105014,G__105015,G__105016,G__105017,G__105018,G__105019,G__105020,G__105021,G__105022,G__105023,G__105024,G__105025,G__105026,G__105027,G__105028) : tailrecursion.hoplon.pre.call(null,G__104996,G__104997,G__104998,G__104999,G__105000,G__105001,G__105002,G__105003,G__105004,G__105005,G__105006,G__105007,G__105008,G__105009,G__105010,G__105011,G__105012,G__105013,G__105014,G__105015,G__105016,G__105017,G__105018,G__105019,G__105020,G__105021,G__105022,G__105023,G__105024,G__105025,G__105026,G__105027,G__105028));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__104994,G__104995) : tailrecursion.hoplon.div.call(null,G__104994,G__104995));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__104993) : tailrecursion.hoplon.div.call(null,G__104993));
})(),(function (){var G__105063 = cljs.core.PersistentArrayMap.EMPTY;
var G__105064 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we wanted to define this so as to be able to use ",(function (){var G__105065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__105066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105065,G__105066) : tailrecursion.hoplon.markdown.code_node.call(null,G__105065,G__105066));
})()," instead of ",(function (){var G__105067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__105068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105067,G__105068) : tailrecursion.hoplon.markdown.code_node.call(null,G__105067,G__105068));
})(),", what would we have to change?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105063,G__105064) : tailrecursion.hoplon.markdown.para_node.call(null,G__105063,G__105064));
})(),(function (){var G__105069 = cljs.core.PersistentArrayMap.EMPTY;
var G__105070 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["All that remains to implement signal-flow diagrams is to enumerate the sequence of elements to be processed. For ",(function (){var G__105071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__105072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105071,G__105072) : tailrecursion.hoplon.markdown.code_node.call(null,G__105071,G__105072));
})(),", we need to generate the sequence of integers in a given range, which we can do as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105069,G__105070) : tailrecursion.hoplon.markdown.para_node.call(null,G__105069,G__105070));
})(),(function (){var G__105073 = (function (){var G__105074 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105075 = (function (){var G__105076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105077 = "(";
var G__105078 = (function (){var G__105124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105125 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105124,G__105125) : tailrecursion.hoplon.span.call(null,G__105124,G__105125));
})();
var G__105079 = (function (){var G__105126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105127 = "enumerate-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105126,G__105127) : tailrecursion.hoplon.span.call(null,G__105126,G__105127));
})();
var G__105080 = " [";
var G__105081 = (function (){var G__105128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105129 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105128,G__105129) : tailrecursion.hoplon.span.call(null,G__105128,G__105129));
})();
var G__105082 = " ";
var G__105083 = (function (){var G__105130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105131 = "high";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105130,G__105131) : tailrecursion.hoplon.span.call(null,G__105130,G__105131));
})();
var G__105084 = "]\n  (";
var G__105085 = (function (){var G__105132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105133 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105132,G__105133) : tailrecursion.hoplon.span.call(null,G__105132,G__105133));
})();
var G__105086 = "(";
var G__105087 = (function (){var G__105134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105135 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105134,G__105135) : tailrecursion.hoplon.span.call(null,G__105134,G__105135));
})();
var G__105088 = (function (){var G__105136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105137 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105136,G__105137) : tailrecursion.hoplon.span.call(null,G__105136,G__105137));
})();
var G__105089 = " ";
var G__105090 = (function (){var G__105138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105139 = "high";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105138,G__105139) : tailrecursion.hoplon.span.call(null,G__105138,G__105139));
})();
var G__105091 = ")\n      ";
var G__105092 = (function (){var G__105140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105141 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105140,G__105141) : tailrecursion.hoplon.span.call(null,G__105140,G__105141));
})();
var G__105093 = "\n      (";
var G__105094 = (function (){var G__105142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105143 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105142,G__105143) : tailrecursion.hoplon.span.call(null,G__105142,G__105143));
})();
var G__105095 = (function (){var G__105144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105145 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105144,G__105145) : tailrecursion.hoplon.span.call(null,G__105144,G__105145));
})();
var G__105096 = " (";
var G__105097 = (function (){var G__105146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105147 = "enumerate-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105146,G__105147) : tailrecursion.hoplon.span.call(null,G__105146,G__105147));
})();
var G__105098 = " (";
var G__105099 = (function (){var G__105148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105149 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105148,G__105149) : tailrecursion.hoplon.span.call(null,G__105148,G__105149));
})();
var G__105100 = (function (){var G__105150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105151 = "low";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105150,G__105151) : tailrecursion.hoplon.span.call(null,G__105150,G__105151));
})();
var G__105101 = " ";
var G__105102 = (function (){var G__105152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105153 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105152,G__105153) : tailrecursion.hoplon.span.call(null,G__105152,G__105153));
})();
var G__105103 = ") ";
var G__105104 = (function (){var G__105154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105155 = "high";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105154,G__105155) : tailrecursion.hoplon.span.call(null,G__105154,G__105155));
})();
var G__105105 = "))))\n(";
var G__105106 = (function (){var G__105156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105157 = "enumerate-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105156,G__105157) : tailrecursion.hoplon.span.call(null,G__105156,G__105157));
})();
var G__105107 = " ";
var G__105108 = (function (){var G__105158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105159 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105158,G__105159) : tailrecursion.hoplon.span.call(null,G__105158,G__105159));
})();
var G__105109 = " ";
var G__105110 = (function (){var G__105160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105161 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105160,G__105161) : tailrecursion.hoplon.span.call(null,G__105160,G__105161));
})();
var G__105111 = ")\n(";
var G__105112 = (function (){var G__105162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105163 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105162,G__105163) : tailrecursion.hoplon.span.call(null,G__105162,G__105163));
})();
var G__105113 = " ";
var G__105114 = (function (){var G__105164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105165 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105164,G__105165) : tailrecursion.hoplon.span.call(null,G__105164,G__105165));
})();
var G__105115 = " ";
var G__105116 = (function (){var G__105166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105167 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105166,G__105167) : tailrecursion.hoplon.span.call(null,G__105166,G__105167));
})();
var G__105117 = " ";
var G__105118 = (function (){var G__105168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105169 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105168,G__105169) : tailrecursion.hoplon.span.call(null,G__105168,G__105169));
})();
var G__105119 = " ";
var G__105120 = (function (){var G__105170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105171 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105170,G__105171) : tailrecursion.hoplon.span.call(null,G__105170,G__105171));
})();
var G__105121 = " ";
var G__105122 = (function (){var G__105172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105173 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105172,G__105173) : tailrecursion.hoplon.span.call(null,G__105172,G__105173));
})();
var G__105123 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__105076,G__105077,G__105078,G__105079,G__105080,G__105081,G__105082,G__105083,G__105084,G__105085,G__105086,G__105087,G__105088,G__105089,G__105090,G__105091,G__105092,G__105093,G__105094,G__105095,G__105096,G__105097,G__105098,G__105099,G__105100,G__105101,G__105102,G__105103,G__105104,G__105105,G__105106,G__105107,G__105108,G__105109,G__105110,G__105111,G__105112,G__105113,G__105114,G__105115,G__105116,G__105117,G__105118,G__105119,G__105120,G__105121,G__105122,G__105123) : tailrecursion.hoplon.pre.call(null,G__105076,G__105077,G__105078,G__105079,G__105080,G__105081,G__105082,G__105083,G__105084,G__105085,G__105086,G__105087,G__105088,G__105089,G__105090,G__105091,G__105092,G__105093,G__105094,G__105095,G__105096,G__105097,G__105098,G__105099,G__105100,G__105101,G__105102,G__105103,G__105104,G__105105,G__105106,G__105107,G__105108,G__105109,G__105110,G__105111,G__105112,G__105113,G__105114,G__105115,G__105116,G__105117,G__105118,G__105119,G__105120,G__105121,G__105122,G__105123));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105074,G__105075) : tailrecursion.hoplon.div.call(null,G__105074,G__105075));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105073) : tailrecursion.hoplon.div.call(null,G__105073));
})(),(function (){var G__105174 = cljs.core.PersistentArrayMap.EMPTY;
var G__105175 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure has such a function, and it is called ",(function (){var G__105176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__105177 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105176,G__105177) : tailrecursion.hoplon.markdown.code_node.call(null,G__105176,G__105177));
})(),". ",(function (){var G__105178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__105179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105178,G__105179) : tailrecursion.hoplon.markdown.code_node.call(null,G__105178,G__105179));
})()," is a function that takes, 1, 2 or 3 arguments. For more information on ",(function (){var G__105180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__105181 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105180,G__105181) : tailrecursion.hoplon.markdown.code_node.call(null,G__105180,G__105181));
})(),", see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/range",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clojure.org"], null)], 0)),". Try to define this using ",(function (){var G__105182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__105183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105182,G__105183) : tailrecursion.hoplon.markdown.code_node.call(null,G__105182,G__105183));
})()," instead. Does it make a difference? Why or why not?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105174,G__105175) : tailrecursion.hoplon.markdown.para_node.call(null,G__105174,G__105175));
})(),(function (){var G__105184 = cljs.core.PersistentArrayMap.EMPTY;
var G__105185 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To enumerate the leaves of a tree, we can use",(function (){var G__105186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__105187 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is, in fact, precisely the fringe procedure from exercise 2.28. Here we've renamed it to emphasize that it is part of a family of general sequence-manipulation procedures."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__105186,G__105187) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__105186,G__105187));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105184,G__105185) : tailrecursion.hoplon.markdown.para_node.call(null,G__105184,G__105185));
})(),(function (){var G__105188 = (function (){var G__105189 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105190 = (function (){var G__105191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105192 = "(";
var G__105193 = (function (){var G__105253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105254 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105253,G__105254) : tailrecursion.hoplon.span.call(null,G__105253,G__105254));
})();
var G__105194 = (function (){var G__105255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105256 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105255,G__105256) : tailrecursion.hoplon.span.call(null,G__105255,G__105256));
})();
var G__105195 = " [";
var G__105196 = (function (){var G__105257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105258 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105257,G__105258) : tailrecursion.hoplon.span.call(null,G__105257,G__105258));
})();
var G__105197 = "]\n  (";
var G__105198 = (function (){var G__105259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105260 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105259,G__105260) : tailrecursion.hoplon.span.call(null,G__105259,G__105260));
})();
var G__105199 = "(";
var G__105200 = (function (){var G__105261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105262 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105261,G__105262) : tailrecursion.hoplon.span.call(null,G__105261,G__105262));
})();
var G__105201 = " ";
var G__105202 = (function (){var G__105263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105264 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105263,G__105264) : tailrecursion.hoplon.span.call(null,G__105263,G__105264));
})();
var G__105203 = ") ";
var G__105204 = (function (){var G__105265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105266 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105265,G__105266) : tailrecursion.hoplon.span.call(null,G__105265,G__105266));
})();
var G__105205 = "\n        (";
var G__105206 = (function (){var G__105267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105268 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105267,G__105268) : tailrecursion.hoplon.span.call(null,G__105267,G__105268));
})();
var G__105207 = "(";
var G__105208 = (function (){var G__105269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105270 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105269,G__105270) : tailrecursion.hoplon.span.call(null,G__105269,G__105270));
})();
var G__105209 = (function (){var G__105271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105272 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105271,G__105272) : tailrecursion.hoplon.span.call(null,G__105271,G__105272));
})();
var G__105210 = ")) (";
var G__105211 = (function (){var G__105273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105274 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105273,G__105274) : tailrecursion.hoplon.span.call(null,G__105273,G__105274));
})();
var G__105212 = (function (){var G__105275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105276 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105275,G__105276) : tailrecursion.hoplon.span.call(null,G__105275,G__105276));
})();
var G__105213 = ")\n        ";
var G__105214 = (function (){var G__105277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105278 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105277,G__105278) : tailrecursion.hoplon.span.call(null,G__105277,G__105278));
})();
var G__105215 = " (";
var G__105216 = (function (){var G__105279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105280 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105279,G__105280) : tailrecursion.hoplon.span.call(null,G__105279,G__105280));
})();
var G__105217 = "(";
var G__105218 = (function (){var G__105281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105282 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105281,G__105282) : tailrecursion.hoplon.span.call(null,G__105281,G__105282));
})();
var G__105219 = " (";
var G__105220 = (function (){var G__105283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105284 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105283,G__105284) : tailrecursion.hoplon.span.call(null,G__105283,G__105284));
})();
var G__105221 = (function (){var G__105285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105286 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105285,G__105286) : tailrecursion.hoplon.span.call(null,G__105285,G__105286));
})();
var G__105222 = "))\n                      (";
var G__105223 = (function (){var G__105287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105288 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105287,G__105288) : tailrecursion.hoplon.span.call(null,G__105287,G__105288));
})();
var G__105224 = " (";
var G__105225 = (function (){var G__105289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105290 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105289,G__105290) : tailrecursion.hoplon.span.call(null,G__105289,G__105290));
})();
var G__105226 = (function (){var G__105291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105292 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105291,G__105292) : tailrecursion.hoplon.span.call(null,G__105291,G__105292));
})();
var G__105227 = ")))))\n(";
var G__105228 = (function (){var G__105293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105294 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105293,G__105294) : tailrecursion.hoplon.span.call(null,G__105293,G__105294));
})();
var G__105229 = " (";
var G__105230 = (function (){var G__105295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105296 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105295,G__105296) : tailrecursion.hoplon.span.call(null,G__105295,G__105296));
})();
var G__105231 = (function (){var G__105297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105298 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105297,G__105298) : tailrecursion.hoplon.span.call(null,G__105297,G__105298));
})();
var G__105232 = " (";
var G__105233 = (function (){var G__105299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105300 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105299,G__105300) : tailrecursion.hoplon.span.call(null,G__105299,G__105300));
})();
var G__105234 = (function (){var G__105301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105302 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105301,G__105302) : tailrecursion.hoplon.span.call(null,G__105301,G__105302));
})();
var G__105235 = " (";
var G__105236 = (function (){var G__105303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105304 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105303,G__105304) : tailrecursion.hoplon.span.call(null,G__105303,G__105304));
})();
var G__105237 = (function (){var G__105305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105306 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105305,G__105306) : tailrecursion.hoplon.span.call(null,G__105305,G__105306));
})();
var G__105238 = " ";
var G__105239 = (function (){var G__105307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105308 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105307,G__105308) : tailrecursion.hoplon.span.call(null,G__105307,G__105308));
})();
var G__105240 = ")) ";
var G__105241 = (function (){var G__105309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105310 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105309,G__105310) : tailrecursion.hoplon.span.call(null,G__105309,G__105310));
})();
var G__105242 = "))\n(";
var G__105243 = (function (){var G__105311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105312 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105311,G__105312) : tailrecursion.hoplon.span.call(null,G__105311,G__105312));
})();
var G__105244 = " ";
var G__105245 = (function (){var G__105313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105314 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105313,G__105314) : tailrecursion.hoplon.span.call(null,G__105313,G__105314));
})();
var G__105246 = " ";
var G__105247 = (function (){var G__105315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105316 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105315,G__105316) : tailrecursion.hoplon.span.call(null,G__105315,G__105316));
})();
var G__105248 = " ";
var G__105249 = (function (){var G__105317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105318 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105317,G__105318) : tailrecursion.hoplon.span.call(null,G__105317,G__105318));
})();
var G__105250 = " ";
var G__105251 = (function (){var G__105319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105320 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105319,G__105320) : tailrecursion.hoplon.span.call(null,G__105319,G__105320));
})();
var G__105252 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__105191,G__105192,G__105193,G__105194,G__105195,G__105196,G__105197,G__105198,G__105199,G__105200,G__105201,G__105202,G__105203,G__105204,G__105205,G__105206,G__105207,G__105208,G__105209,G__105210,G__105211,G__105212,G__105213,G__105214,G__105215,G__105216,G__105217,G__105218,G__105219,G__105220,G__105221,G__105222,G__105223,G__105224,G__105225,G__105226,G__105227,G__105228,G__105229,G__105230,G__105231,G__105232,G__105233,G__105234,G__105235,G__105236,G__105237,G__105238,G__105239,G__105240,G__105241,G__105242,G__105243,G__105244,G__105245,G__105246,G__105247,G__105248,G__105249,G__105250,G__105251,G__105252) : tailrecursion.hoplon.pre.call(null,G__105191,G__105192,G__105193,G__105194,G__105195,G__105196,G__105197,G__105198,G__105199,G__105200,G__105201,G__105202,G__105203,G__105204,G__105205,G__105206,G__105207,G__105208,G__105209,G__105210,G__105211,G__105212,G__105213,G__105214,G__105215,G__105216,G__105217,G__105218,G__105219,G__105220,G__105221,G__105222,G__105223,G__105224,G__105225,G__105226,G__105227,G__105228,G__105229,G__105230,G__105231,G__105232,G__105233,G__105234,G__105235,G__105236,G__105237,G__105238,G__105239,G__105240,G__105241,G__105242,G__105243,G__105244,G__105245,G__105246,G__105247,G__105248,G__105249,G__105250,G__105251,G__105252));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105189,G__105190) : tailrecursion.hoplon.div.call(null,G__105189,G__105190));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105188) : tailrecursion.hoplon.div.call(null,G__105188));
})(),(function (){var G__105321 = cljs.core.PersistentArrayMap.EMPTY;
var G__105322 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can refomulate ",(function (){var G__105323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__105324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105323,G__105324) : tailrecursion.hoplon.markdown.code_node.call(null,G__105323,G__105324));
})()," and ",(function (){var G__105325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__105326 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105325,G__105326) : tailrecursion.hoplon.markdown.code_node.call(null,G__105325,G__105326));
})()," as in the signal-flow diagrams. For ",(function (){var G__105327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__105328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105327,G__105328) : tailrecursion.hoplon.markdown.code_node.call(null,G__105327,G__105328));
})(),", we enumerate teh sequence of leaves of the tree, filter this to keep only the odd numbers in the sequence, square each element, and sum the results:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105321,G__105322) : tailrecursion.hoplon.markdown.para_node.call(null,G__105321,G__105322));
})(),(function (){var G__105329 = (function (){var G__105330 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105331 = (function (){var G__105332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105333 = "(";
var G__105334 = (function (){var G__105355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105356 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105355,G__105356) : tailrecursion.hoplon.span.call(null,G__105355,G__105356));
})();
var G__105335 = (function (){var G__105357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105358 = "summ-odd-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105357,G__105358) : tailrecursion.hoplon.span.call(null,G__105357,G__105358));
})();
var G__105336 = " [";
var G__105337 = (function (){var G__105359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105360 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105359,G__105360) : tailrecursion.hoplon.span.call(null,G__105359,G__105360));
})();
var G__105338 = "]\n  (";
var G__105339 = (function (){var G__105361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105362 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105361,G__105362) : tailrecursion.hoplon.span.call(null,G__105361,G__105362));
})();
var G__105340 = " ";
var G__105341 = (function (){var G__105363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105364 = "+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105363,G__105364) : tailrecursion.hoplon.span.call(null,G__105363,G__105364));
})();
var G__105342 = "\n              ";
var G__105343 = (function (){var G__105365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105366 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105365,G__105366) : tailrecursion.hoplon.span.call(null,G__105365,G__105366));
})();
var G__105344 = "\n              (";
var G__105345 = (function (){var G__105367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105368 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105367,G__105368) : tailrecursion.hoplon.span.call(null,G__105367,G__105368));
})();
var G__105346 = (function (){var G__105369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105370 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105369,G__105370) : tailrecursion.hoplon.span.call(null,G__105369,G__105370));
})();
var G__105347 = "\n                   (";
var G__105348 = (function (){var G__105371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105372 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105371,G__105372) : tailrecursion.hoplon.span.call(null,G__105371,G__105372));
})();
var G__105349 = (function (){var G__105373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105374 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105373,G__105374) : tailrecursion.hoplon.span.call(null,G__105373,G__105374));
})();
var G__105350 = "\n                           (";
var G__105351 = (function (){var G__105375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105376 = "enumerate-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105375,G__105376) : tailrecursion.hoplon.span.call(null,G__105375,G__105376));
})();
var G__105352 = " ";
var G__105353 = (function (){var G__105377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105378 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105377,G__105378) : tailrecursion.hoplon.span.call(null,G__105377,G__105378));
})();
var G__105354 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__105332,G__105333,G__105334,G__105335,G__105336,G__105337,G__105338,G__105339,G__105340,G__105341,G__105342,G__105343,G__105344,G__105345,G__105346,G__105347,G__105348,G__105349,G__105350,G__105351,G__105352,G__105353,G__105354) : tailrecursion.hoplon.pre.call(null,G__105332,G__105333,G__105334,G__105335,G__105336,G__105337,G__105338,G__105339,G__105340,G__105341,G__105342,G__105343,G__105344,G__105345,G__105346,G__105347,G__105348,G__105349,G__105350,G__105351,G__105352,G__105353,G__105354));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105330,G__105331) : tailrecursion.hoplon.div.call(null,G__105330,G__105331));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105329) : tailrecursion.hoplon.div.call(null,G__105329));
})(),(function (){var G__105379 = cljs.core.PersistentArrayMap.EMPTY;
var G__105380 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For ",(function (){var G__105381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__105382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105381,G__105382) : tailrecursion.hoplon.markdown.code_node.call(null,G__105381,G__105382));
})(),", we enumerate the integers from 0 to \\(n\\), generate the Fibonacci number for each of these integers, filter the resulting sequence to keep only the even elements, and accumulate the results into a list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105379,G__105380) : tailrecursion.hoplon.markdown.para_node.call(null,G__105379,G__105380));
})(),(function (){var G__105383 = (function (){var G__105384 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105385 = (function (){var G__105386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105387 = "(";
var G__105388 = (function (){var G__105408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105409 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105408,G__105409) : tailrecursion.hoplon.span.call(null,G__105408,G__105409));
})();
var G__105389 = (function (){var G__105410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105411 = "even-fibs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105410,G__105411) : tailrecursion.hoplon.span.call(null,G__105410,G__105411));
})();
var G__105390 = " [";
var G__105391 = (function (){var G__105412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105413 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105412,G__105413) : tailrecursion.hoplon.span.call(null,G__105412,G__105413));
})();
var G__105392 = "]\n  (";
var G__105393 = (function (){var G__105414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105415 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105414,G__105415) : tailrecursion.hoplon.span.call(null,G__105414,G__105415));
})();
var G__105394 = " ";
var G__105395 = (function (){var G__105416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105417 = "cons";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105416,G__105417) : tailrecursion.hoplon.span.call(null,G__105416,G__105417));
})();
var G__105396 = "\n              ";
var G__105397 = (function (){var G__105418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105419 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105418,G__105419) : tailrecursion.hoplon.span.call(null,G__105418,G__105419));
})();
var G__105398 = "\n              (";
var G__105399 = (function (){var G__105420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105421 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105420,G__105421) : tailrecursion.hoplon.span.call(null,G__105420,G__105421));
})();
var G__105400 = (function (){var G__105422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105423 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105422,G__105423) : tailrecursion.hoplon.span.call(null,G__105422,G__105423));
})();
var G__105401 = "\n                      (";
var G__105402 = (function (){var G__105424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105425 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105424,G__105425) : tailrecursion.hoplon.span.call(null,G__105424,G__105425));
})();
var G__105403 = (function (){var G__105426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105427 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105426,G__105427) : tailrecursion.hoplon.span.call(null,G__105426,G__105427));
})();
var G__105404 = "\n                           (";
var G__105405 = (function (){var G__105428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105429 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105428,G__105429) : tailrecursion.hoplon.span.call(null,G__105428,G__105429));
})();
var G__105406 = (function (){var G__105430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105431 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105430,G__105431) : tailrecursion.hoplon.span.call(null,G__105430,G__105431));
})();
var G__105407 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__105386,G__105387,G__105388,G__105389,G__105390,G__105391,G__105392,G__105393,G__105394,G__105395,G__105396,G__105397,G__105398,G__105399,G__105400,G__105401,G__105402,G__105403,G__105404,G__105405,G__105406,G__105407) : tailrecursion.hoplon.pre.call(null,G__105386,G__105387,G__105388,G__105389,G__105390,G__105391,G__105392,G__105393,G__105394,G__105395,G__105396,G__105397,G__105398,G__105399,G__105400,G__105401,G__105402,G__105403,G__105404,G__105405,G__105406,G__105407));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105384,G__105385) : tailrecursion.hoplon.div.call(null,G__105384,G__105385));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105383) : tailrecursion.hoplon.div.call(null,G__105383));
})(),(function (){var G__105432 = cljs.core.PersistentArrayMap.EMPTY;
var G__105433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The value of expressing programs as sequence operations is that this helps us make program designs that are modular, that is, designs that are constructed by combining relatively independent pieces. We can encourage modular design by providing a library of standard components together with a conventional interface for connecting the components in flexible ways."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105432,G__105433) : tailrecursion.hoplon.markdown.para_node.call(null,G__105432,G__105433));
})(),(function (){var G__105434 = cljs.core.PersistentArrayMap.EMPTY;
var G__105435 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modular construction is a powerful strategy for controlling complexity in engineering design. In real signal-processing applications, for example, designers regularly build systems by cascading elements selected from standard program elements that we can mix and match. For instance, we can reuse pieces from the ",(function (){var G__105436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sum-odd-squares"], null);
var G__105437 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105436,G__105437) : tailrecursion.hoplon.markdown.code_node.call(null,G__105436,G__105437));
})()," and ",(function (){var G__105438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"even-fibs"], null);
var G__105439 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__105438,G__105439) : tailrecursion.hoplon.markdown.code_node.call(null,G__105438,G__105439));
})()," procedures in a program that constructs a list of the squares of the first \\(n+1\\) Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105434,G__105435) : tailrecursion.hoplon.markdown.para_node.call(null,G__105434,G__105435));
})(),(function (){var G__105440 = (function (){var G__105441 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105442 = (function (){var G__105443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105444 = "(";
var G__105445 = (function (){var G__105491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105492 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105491,G__105492) : tailrecursion.hoplon.span.call(null,G__105491,G__105492));
})();
var G__105446 = (function (){var G__105493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105494 = "list-fib-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105493,G__105494) : tailrecursion.hoplon.span.call(null,G__105493,G__105494));
})();
var G__105447 = " [";
var G__105448 = (function (){var G__105495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105496 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105495,G__105496) : tailrecursion.hoplon.span.call(null,G__105495,G__105496));
})();
var G__105449 = "]\n  (";
var G__105450 = (function (){var G__105497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105498 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105497,G__105498) : tailrecursion.hoplon.span.call(null,G__105497,G__105498));
})();
var G__105451 = " ";
var G__105452 = (function (){var G__105499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105500 = "cons";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105499,G__105500) : tailrecursion.hoplon.span.call(null,G__105499,G__105500));
})();
var G__105453 = "\n              ";
var G__105454 = (function (){var G__105501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105502 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105501,G__105502) : tailrecursion.hoplon.span.call(null,G__105501,G__105502));
})();
var G__105455 = "\n              (";
var G__105456 = (function (){var G__105503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105504 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105503,G__105504) : tailrecursion.hoplon.span.call(null,G__105503,G__105504));
})();
var G__105457 = (function (){var G__105505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105506 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105505,G__105506) : tailrecursion.hoplon.span.call(null,G__105505,G__105506));
})();
var G__105458 = "\n                   (";
var G__105459 = (function (){var G__105507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105508 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105507,G__105508) : tailrecursion.hoplon.span.call(null,G__105507,G__105508));
})();
var G__105460 = (function (){var G__105509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105510 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105509,G__105510) : tailrecursion.hoplon.span.call(null,G__105509,G__105510));
})();
var G__105461 = "\n                        (";
var G__105462 = (function (){var G__105511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105512 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105511,G__105512) : tailrecursion.hoplon.span.call(null,G__105511,G__105512));
})();
var G__105463 = (function (){var G__105513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105514 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105513,G__105514) : tailrecursion.hoplon.span.call(null,G__105513,G__105514));
})();
var G__105464 = ")))))\n(";
var G__105465 = (function (){var G__105515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105516 = "list-fib-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105515,G__105516) : tailrecursion.hoplon.span.call(null,G__105515,G__105516));
})();
var G__105466 = " ";
var G__105467 = (function (){var G__105517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105518 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105517,G__105518) : tailrecursion.hoplon.span.call(null,G__105517,G__105518));
})();
var G__105468 = ")\n(";
var G__105469 = (function (){var G__105519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105520 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105519,G__105520) : tailrecursion.hoplon.span.call(null,G__105519,G__105520));
})();
var G__105470 = " ";
var G__105471 = (function (){var G__105521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105522 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105521,G__105522) : tailrecursion.hoplon.span.call(null,G__105521,G__105522));
})();
var G__105472 = " ";
var G__105473 = (function (){var G__105523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105524 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105523,G__105524) : tailrecursion.hoplon.span.call(null,G__105523,G__105524));
})();
var G__105474 = " ";
var G__105475 = (function (){var G__105525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105526 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105525,G__105526) : tailrecursion.hoplon.span.call(null,G__105525,G__105526));
})();
var G__105476 = " ";
var G__105477 = (function (){var G__105527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105528 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105527,G__105528) : tailrecursion.hoplon.span.call(null,G__105527,G__105528));
})();
var G__105478 = " ";
var G__105479 = (function (){var G__105529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105530 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105529,G__105530) : tailrecursion.hoplon.span.call(null,G__105529,G__105530));
})();
var G__105480 = " ";
var G__105481 = (function (){var G__105531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105532 = "64";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105531,G__105532) : tailrecursion.hoplon.span.call(null,G__105531,G__105532));
})();
var G__105482 = " ";
var G__105483 = (function (){var G__105533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105534 = "169";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105533,G__105534) : tailrecursion.hoplon.span.call(null,G__105533,G__105534));
})();
var G__105484 = " ";
var G__105485 = (function (){var G__105535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105536 = "441";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105535,G__105536) : tailrecursion.hoplon.span.call(null,G__105535,G__105536));
})();
var G__105486 = " ";
var G__105487 = (function (){var G__105537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105538 = "1156";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105537,G__105538) : tailrecursion.hoplon.span.call(null,G__105537,G__105538));
})();
var G__105488 = " ";
var G__105489 = (function (){var G__105539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105540 = "3025";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105539,G__105540) : tailrecursion.hoplon.span.call(null,G__105539,G__105540));
})();
var G__105490 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__105443,G__105444,G__105445,G__105446,G__105447,G__105448,G__105449,G__105450,G__105451,G__105452,G__105453,G__105454,G__105455,G__105456,G__105457,G__105458,G__105459,G__105460,G__105461,G__105462,G__105463,G__105464,G__105465,G__105466,G__105467,G__105468,G__105469,G__105470,G__105471,G__105472,G__105473,G__105474,G__105475,G__105476,G__105477,G__105478,G__105479,G__105480,G__105481,G__105482,G__105483,G__105484,G__105485,G__105486,G__105487,G__105488,G__105489,G__105490) : tailrecursion.hoplon.pre.call(null,G__105443,G__105444,G__105445,G__105446,G__105447,G__105448,G__105449,G__105450,G__105451,G__105452,G__105453,G__105454,G__105455,G__105456,G__105457,G__105458,G__105459,G__105460,G__105461,G__105462,G__105463,G__105464,G__105465,G__105466,G__105467,G__105468,G__105469,G__105470,G__105471,G__105472,G__105473,G__105474,G__105475,G__105476,G__105477,G__105478,G__105479,G__105480,G__105481,G__105482,G__105483,G__105484,G__105485,G__105486,G__105487,G__105488,G__105489,G__105490));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105441,G__105442) : tailrecursion.hoplon.div.call(null,G__105441,G__105442));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105440) : tailrecursion.hoplon.div.call(null,G__105440));
})(),(function (){var G__105541 = cljs.core.PersistentArrayMap.EMPTY;
var G__105542 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can rearrange the pieces and use them in computing the product of the odd integers in a sequence:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105541,G__105542) : tailrecursion.hoplon.markdown.para_node.call(null,G__105541,G__105542));
})(),(function (){var G__105543 = (function (){var G__105544 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105545 = (function (){var G__105546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105547 = "(";
var G__105548 = (function (){var G__105582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105583 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105582,G__105583) : tailrecursion.hoplon.span.call(null,G__105582,G__105583));
})();
var G__105549 = (function (){var G__105584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105585 = "product-of-squares-of-odd-elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105584,G__105585) : tailrecursion.hoplon.span.call(null,G__105584,G__105585));
})();
var G__105550 = " [";
var G__105551 = (function (){var G__105586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105587 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105586,G__105587) : tailrecursion.hoplon.span.call(null,G__105586,G__105587));
})();
var G__105552 = "]\n  (";
var G__105553 = (function (){var G__105588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105589 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105588,G__105589) : tailrecursion.hoplon.span.call(null,G__105588,G__105589));
})();
var G__105554 = " ";
var G__105555 = (function (){var G__105590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105591 = "*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105590,G__105591) : tailrecursion.hoplon.span.call(null,G__105590,G__105591));
})();
var G__105556 = "\n              ";
var G__105557 = (function (){var G__105592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105593 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105592,G__105593) : tailrecursion.hoplon.span.call(null,G__105592,G__105593));
})();
var G__105558 = "\n              (";
var G__105559 = (function (){var G__105594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105595 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105594,G__105595) : tailrecursion.hoplon.span.call(null,G__105594,G__105595));
})();
var G__105560 = (function (){var G__105596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105597 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105596,G__105597) : tailrecursion.hoplon.span.call(null,G__105596,G__105597));
})();
var G__105561 = "\n                (";
var G__105562 = (function (){var G__105598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105599 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105598,G__105599) : tailrecursion.hoplon.span.call(null,G__105598,G__105599));
})();
var G__105563 = (function (){var G__105600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105601 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105600,G__105601) : tailrecursion.hoplon.span.call(null,G__105600,G__105601));
})();
var G__105564 = " ";
var G__105565 = (function (){var G__105602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105603 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105602,G__105603) : tailrecursion.hoplon.span.call(null,G__105602,G__105603));
})();
var G__105566 = "))))\n(";
var G__105567 = (function (){var G__105604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105605 = "product-of-squares-of-odd-elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105604,G__105605) : tailrecursion.hoplon.span.call(null,G__105604,G__105605));
})();
var G__105568 = " (";
var G__105569 = (function (){var G__105606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105607 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105606,G__105607) : tailrecursion.hoplon.span.call(null,G__105606,G__105607));
})();
var G__105570 = (function (){var G__105608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105609 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105608,G__105609) : tailrecursion.hoplon.span.call(null,G__105608,G__105609));
})();
var G__105571 = " ";
var G__105572 = (function (){var G__105610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105611 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105610,G__105611) : tailrecursion.hoplon.span.call(null,G__105610,G__105611));
})();
var G__105573 = " ";
var G__105574 = (function (){var G__105612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105613 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105612,G__105613) : tailrecursion.hoplon.span.call(null,G__105612,G__105613));
})();
var G__105575 = " ";
var G__105576 = (function (){var G__105614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105615 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105614,G__105615) : tailrecursion.hoplon.span.call(null,G__105614,G__105615));
})();
var G__105577 = " ";
var G__105578 = (function (){var G__105616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105617 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105616,G__105617) : tailrecursion.hoplon.span.call(null,G__105616,G__105617));
})();
var G__105579 = "))\n";
var G__105580 = (function (){var G__105618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105619 = "225";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105618,G__105619) : tailrecursion.hoplon.span.call(null,G__105618,G__105619));
})();
var G__105581 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__105546,G__105547,G__105548,G__105549,G__105550,G__105551,G__105552,G__105553,G__105554,G__105555,G__105556,G__105557,G__105558,G__105559,G__105560,G__105561,G__105562,G__105563,G__105564,G__105565,G__105566,G__105567,G__105568,G__105569,G__105570,G__105571,G__105572,G__105573,G__105574,G__105575,G__105576,G__105577,G__105578,G__105579,G__105580,G__105581) : tailrecursion.hoplon.pre.call(null,G__105546,G__105547,G__105548,G__105549,G__105550,G__105551,G__105552,G__105553,G__105554,G__105555,G__105556,G__105557,G__105558,G__105559,G__105560,G__105561,G__105562,G__105563,G__105564,G__105565,G__105566,G__105567,G__105568,G__105569,G__105570,G__105571,G__105572,G__105573,G__105574,G__105575,G__105576,G__105577,G__105578,G__105579,G__105580,G__105581));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105544,G__105545) : tailrecursion.hoplon.div.call(null,G__105544,G__105545));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105543) : tailrecursion.hoplon.div.call(null,G__105543));
})(),(function (){var G__105620 = cljs.core.PersistentArrayMap.EMPTY;
var G__105621 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These examples give just a hint of the vast range of operations that can be expressed as sequence operations.",(function (){var G__105622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__105623 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Richard Waters (1979) developed a program that automatically analyzes traditional Fortran programs, viewing them in terms of maps, filters, and accumulations. He found that fully 90 percent of the code in the Fortran Scientific Subroutine Package fits neatly into this paradigm. One of the reasons for the success of Lisp as a programming language is that lists provide a standard medium for expressing ordered collections so that they can be manipulated using higher-order operations. The programming language APL owes much of its power and appeal to a similar choice. In APL all data are represented as arrays, and there is a universal and convenient set of generic operators for all sorts of array operations."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__105622,G__105623) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__105622,G__105623));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105620,G__105621) : tailrecursion.hoplon.markdown.para_node.call(null,G__105620,G__105621));
})(),(function (){var G__105624 = cljs.core.PersistentArrayMap.EMPTY;
var G__105625 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sequences, implemented here as lists, serve as a conventional interface that permits us to combine processing modules. Additionally, when we uniformly represent structures as sequences, we have localized the data-structure dependencies in our programs to a small number of sequences, while leaving the overall design of our programs intact. We will exploit this capability in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/3/sect/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 3.5"], null)], 0)),", when we generalize the sequence-processing paradigm to admit infinite sequences."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105624,G__105625) : tailrecursion.hoplon.markdown.para_node.call(null,G__105624,G__105625));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104584;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104583;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_104582;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_104581;
}})()], 0));
var G__97800 = "";
var G__97801 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105626 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105627 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105628 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105629 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105630 = cljs.core.PersistentArrayMap.EMPTY;
var G__105631 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fill in the missing expressions to complete the following definitions of some basic list-manipulation operations as accumulations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105630,G__105631) : tailrecursion.hoplon.markdown.para_node.call(null,G__105630,G__105631));
})(),(function (){var G__105632 = (function (){var G__105633 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105634 = (function (){var G__105635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105636 = "(";
var G__105637 = (function (){var G__105685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105686 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105685,G__105686) : tailrecursion.hoplon.span.call(null,G__105685,G__105686));
})();
var G__105638 = (function (){var G__105687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105688 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105687,G__105688) : tailrecursion.hoplon.span.call(null,G__105687,G__105688));
})();
var G__105639 = "[";
var G__105640 = (function (){var G__105689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105690 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105689,G__105690) : tailrecursion.hoplon.span.call(null,G__105689,G__105690));
})();
var G__105641 = " ";
var G__105642 = (function (){var G__105691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105692 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105691,G__105692) : tailrecursion.hoplon.span.call(null,G__105691,G__105692));
})();
var G__105643 = "]\n  (";
var G__105644 = (function (){var G__105693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105694 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105693,G__105694) : tailrecursion.hoplon.span.call(null,G__105693,G__105694));
})();
var G__105645 = " (";
var G__105646 = (function (){var G__105695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105696 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105695,G__105696) : tailrecursion.hoplon.span.call(null,G__105695,G__105696));
})();
var G__105647 = "[";
var G__105648 = (function (){var G__105697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105698 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105697,G__105698) : tailrecursion.hoplon.span.call(null,G__105697,G__105698));
})();
var G__105649 = " ";
var G__105650 = (function (){var G__105699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105700 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105699,G__105700) : tailrecursion.hoplon.span.call(null,G__105699,G__105700));
})();
var G__105651 = "] ";
var G__105652 = (function (){var G__105701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105702 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105701,G__105702) : tailrecursion.hoplon.span.call(null,G__105701,G__105702));
})();
var G__105653 = ") ";
var G__105654 = (function (){var G__105703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105704 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105703,G__105704) : tailrecursion.hoplon.span.call(null,G__105703,G__105704));
})();
var G__105655 = " ";
var G__105656 = (function (){var G__105705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105706 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105705,G__105706) : tailrecursion.hoplon.span.call(null,G__105705,G__105706));
})();
var G__105657 = "))\n\n(";
var G__105658 = (function (){var G__105707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105708 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105707,G__105708) : tailrecursion.hoplon.span.call(null,G__105707,G__105708));
})();
var G__105659 = (function (){var G__105709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105710 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105709,G__105710) : tailrecursion.hoplon.span.call(null,G__105709,G__105710));
})();
var G__105660 = "[";
var G__105661 = (function (){var G__105711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105712 = "items1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105711,G__105712) : tailrecursion.hoplon.span.call(null,G__105711,G__105712));
})();
var G__105662 = " ";
var G__105663 = (function (){var G__105713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105714 = "items2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105713,G__105714) : tailrecursion.hoplon.span.call(null,G__105713,G__105714));
})();
var G__105664 = "]\n  (";
var G__105665 = (function (){var G__105715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105716 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105715,G__105716) : tailrecursion.hoplon.span.call(null,G__105715,G__105716));
})();
var G__105666 = " ";
var G__105667 = (function (){var G__105717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105718 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105717,G__105718) : tailrecursion.hoplon.span.call(null,G__105717,G__105718));
})();
var G__105668 = (function (){var G__105719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105720 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105719,G__105720) : tailrecursion.hoplon.span.call(null,G__105719,G__105720));
})();
var G__105669 = " ";
var G__105670 = (function (){var G__105721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105722 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105721,G__105722) : tailrecursion.hoplon.span.call(null,G__105721,G__105722));
})();
var G__105671 = "))\n\n(";
var G__105672 = (function (){var G__105723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105724 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105723,G__105724) : tailrecursion.hoplon.span.call(null,G__105723,G__105724));
})();
var G__105673 = (function (){var G__105725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105726 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105725,G__105726) : tailrecursion.hoplon.span.call(null,G__105725,G__105726));
})();
var G__105674 = "[";
var G__105675 = (function (){var G__105727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105728 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105727,G__105728) : tailrecursion.hoplon.span.call(null,G__105727,G__105728));
})();
var G__105676 = "]\n  (";
var G__105677 = (function (){var G__105729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105730 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105729,G__105730) : tailrecursion.hoplon.span.call(null,G__105729,G__105730));
})();
var G__105678 = " ";
var G__105679 = (function (){var G__105731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105732 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105731,G__105732) : tailrecursion.hoplon.span.call(null,G__105731,G__105732));
})();
var G__105680 = " ";
var G__105681 = (function (){var G__105733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105734 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105733,G__105734) : tailrecursion.hoplon.span.call(null,G__105733,G__105734));
})();
var G__105682 = " ";
var G__105683 = (function (){var G__105735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105736 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105735,G__105736) : tailrecursion.hoplon.span.call(null,G__105735,G__105736));
})();
var G__105684 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50(G__105635,G__105636,G__105637,G__105638,G__105639,G__105640,G__105641,G__105642,G__105643,G__105644,G__105645,G__105646,G__105647,G__105648,G__105649,G__105650,G__105651,G__105652,G__105653,G__105654,G__105655,G__105656,G__105657,G__105658,G__105659,G__105660,G__105661,G__105662,G__105663,G__105664,G__105665,G__105666,G__105667,G__105668,G__105669,G__105670,G__105671,G__105672,G__105673,G__105674,G__105675,G__105676,G__105677,G__105678,G__105679,G__105680,G__105681,G__105682,G__105683,G__105684) : tailrecursion.hoplon.pre.call(null,G__105635,G__105636,G__105637,G__105638,G__105639,G__105640,G__105641,G__105642,G__105643,G__105644,G__105645,G__105646,G__105647,G__105648,G__105649,G__105650,G__105651,G__105652,G__105653,G__105654,G__105655,G__105656,G__105657,G__105658,G__105659,G__105660,G__105661,G__105662,G__105663,G__105664,G__105665,G__105666,G__105667,G__105668,G__105669,G__105670,G__105671,G__105672,G__105673,G__105674,G__105675,G__105676,G__105677,G__105678,G__105679,G__105680,G__105681,G__105682,G__105683,G__105684));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105633,G__105634) : tailrecursion.hoplon.div.call(null,G__105633,G__105634));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105632) : tailrecursion.hoplon.div.call(null,G__105632));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105629;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105628;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105627;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105626;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105741 = (function (){var G__105742 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105743 = (function (){var G__105744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105745 = "(";
var G__105746 = (function (){var G__105807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105808 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105807,G__105808) : tailrecursion.hoplon.span.call(null,G__105807,G__105808));
})();
var G__105747 = (function (){var G__105809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105810 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105809,G__105810) : tailrecursion.hoplon.span.call(null,G__105809,G__105810));
})();
var G__105748 = "[";
var G__105749 = (function (){var G__105811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105812 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105811,G__105812) : tailrecursion.hoplon.span.call(null,G__105811,G__105812));
})();
var G__105750 = " ";
var G__105751 = (function (){var G__105813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105814 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105813,G__105814) : tailrecursion.hoplon.span.call(null,G__105813,G__105814));
})();
var G__105752 = "]\n  (";
var G__105753 = (function (){var G__105815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105816 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105815,G__105816) : tailrecursion.hoplon.span.call(null,G__105815,G__105816));
})();
var G__105754 = " (";
var G__105755 = (function (){var G__105817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105818 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105817,G__105818) : tailrecursion.hoplon.span.call(null,G__105817,G__105818));
})();
var G__105756 = "[";
var G__105757 = (function (){var G__105819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105820 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105819,G__105820) : tailrecursion.hoplon.span.call(null,G__105819,G__105820));
})();
var G__105758 = " ";
var G__105759 = (function (){var G__105821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105822 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105821,G__105822) : tailrecursion.hoplon.span.call(null,G__105821,G__105822));
})();
var G__105760 = "] (";
var G__105761 = (function (){var G__105823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105824 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105823,G__105824) : tailrecursion.hoplon.span.call(null,G__105823,G__105824));
})();
var G__105762 = " ";
var G__105763 = (function (){var G__105825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105826 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105825,G__105826) : tailrecursion.hoplon.span.call(null,G__105825,G__105826));
})();
var G__105764 = ")) ";
var G__105765 = (function (){var G__105827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105828 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105827,G__105828) : tailrecursion.hoplon.span.call(null,G__105827,G__105828));
})();
var G__105766 = " ";
var G__105767 = (function (){var G__105829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105830 = "sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105829,G__105830) : tailrecursion.hoplon.span.call(null,G__105829,G__105830));
})();
var G__105768 = "))\n\n(";
var G__105769 = (function (){var G__105831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105832 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105831,G__105832) : tailrecursion.hoplon.span.call(null,G__105831,G__105832));
})();
var G__105770 = (function (){var G__105833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105834 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105833,G__105834) : tailrecursion.hoplon.span.call(null,G__105833,G__105834));
})();
var G__105771 = "[";
var G__105772 = (function (){var G__105835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105836 = "items1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105835,G__105836) : tailrecursion.hoplon.span.call(null,G__105835,G__105836));
})();
var G__105773 = " ";
var G__105774 = (function (){var G__105837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105838 = "items2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105837,G__105838) : tailrecursion.hoplon.span.call(null,G__105837,G__105838));
})();
var G__105775 = "]\n  (";
var G__105776 = (function (){var G__105839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105840 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105839,G__105840) : tailrecursion.hoplon.span.call(null,G__105839,G__105840));
})();
var G__105777 = " ";
var G__105778 = (function (){var G__105841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105842 = "cons";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105841,G__105842) : tailrecursion.hoplon.span.call(null,G__105841,G__105842));
})();
var G__105779 = "\n              ";
var G__105780 = (function (){var G__105843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105844 = "items2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105843,G__105844) : tailrecursion.hoplon.span.call(null,G__105843,G__105844));
})();
var G__105781 = "\n              (";
var G__105782 = (function (){var G__105845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105846 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105845,G__105846) : tailrecursion.hoplon.span.call(null,G__105845,G__105846));
})();
var G__105783 = (function (){var G__105847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105848 = "items1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105847,G__105848) : tailrecursion.hoplon.span.call(null,G__105847,G__105848));
})();
var G__105784 = ")))\n\n(";
var G__105785 = (function (){var G__105849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105850 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105849,G__105850) : tailrecursion.hoplon.span.call(null,G__105849,G__105850));
})();
var G__105786 = (function (){var G__105851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105852 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105851,G__105852) : tailrecursion.hoplon.span.call(null,G__105851,G__105852));
})();
var G__105787 = "[";
var G__105788 = (function (){var G__105853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105854 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105853,G__105854) : tailrecursion.hoplon.span.call(null,G__105853,G__105854));
})();
var G__105789 = "]\n  (";
var G__105790 = (function (){var G__105855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105856 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105855,G__105856) : tailrecursion.hoplon.span.call(null,G__105855,G__105856));
})();
var G__105791 = " (";
var G__105792 = (function (){var G__105857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105858 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105857,G__105858) : tailrecursion.hoplon.span.call(null,G__105857,G__105858));
})();
var G__105793 = "[";
var G__105794 = (function (){var G__105859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105860 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105859,G__105860) : tailrecursion.hoplon.span.call(null,G__105859,G__105860));
})();
var G__105795 = " ";
var G__105796 = (function (){var G__105861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105862 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105861,G__105862) : tailrecursion.hoplon.span.call(null,G__105861,G__105862));
})();
var G__105797 = "] (";
var G__105798 = (function (){var G__105863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105864 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105863,G__105864) : tailrecursion.hoplon.span.call(null,G__105863,G__105864));
})();
var G__105799 = (function (){var G__105865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105866 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105865,G__105866) : tailrecursion.hoplon.span.call(null,G__105865,G__105866));
})();
var G__105800 = " ";
var G__105801 = (function (){var G__105867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105868 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105867,G__105868) : tailrecursion.hoplon.span.call(null,G__105867,G__105868));
})();
var G__105802 = ") ";
var G__105803 = (function (){var G__105869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105870 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105869,G__105870) : tailrecursion.hoplon.span.call(null,G__105869,G__105870));
})();
var G__105804 = " ";
var G__105805 = (function (){var G__105871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105872 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105871,G__105872) : tailrecursion.hoplon.span.call(null,G__105871,G__105872));
})();
var G__105806 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__105744,G__105745,G__105746,G__105747,G__105748,G__105749,G__105750,G__105751,G__105752,G__105753,G__105754,G__105755,G__105756,G__105757,G__105758,G__105759,G__105760,G__105761,G__105762,G__105763,G__105764,G__105765,G__105766,G__105767,G__105768,G__105769,G__105770,G__105771,G__105772,G__105773,G__105774,G__105775,G__105776,G__105777,G__105778,G__105779,G__105780,G__105781,G__105782,G__105783,G__105784,G__105785,G__105786,G__105787,G__105788,G__105789,G__105790,G__105791,G__105792,G__105793,G__105794,G__105795,G__105796,G__105797,G__105798,G__105799,G__105800,G__105801,G__105802,G__105803,G__105804,G__105805,G__105806) : tailrecursion.hoplon.pre.call(null,G__105744,G__105745,G__105746,G__105747,G__105748,G__105749,G__105750,G__105751,G__105752,G__105753,G__105754,G__105755,G__105756,G__105757,G__105758,G__105759,G__105760,G__105761,G__105762,G__105763,G__105764,G__105765,G__105766,G__105767,G__105768,G__105769,G__105770,G__105771,G__105772,G__105773,G__105774,G__105775,G__105776,G__105777,G__105778,G__105779,G__105780,G__105781,G__105782,G__105783,G__105784,G__105785,G__105786,G__105787,G__105788,G__105789,G__105790,G__105791,G__105792,G__105793,G__105794,G__105795,G__105796,G__105797,G__105798,G__105799,G__105800,G__105801,G__105802,G__105803,G__105804,G__105805,G__105806));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105742,G__105743) : tailrecursion.hoplon.div.call(null,G__105742,G__105743));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105741) : tailrecursion.hoplon.div.call(null,G__105741));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105739;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105737;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105873 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105874 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105875 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105876 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105877 = cljs.core.PersistentArrayMap.EMPTY;
var G__105878 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Evaluating a polynomial in \\(x\\) at a given value of \\(x\\) can be formulated as an accumulation. We evaluate the polynomial"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105877,G__105878) : tailrecursion.hoplon.markdown.para_node.call(null,G__105877,G__105878));
})(),(function (){var G__105879 = cljs.core.PersistentArrayMap.EMPTY;
var G__105880 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a_nx^n+a_{n-1}x^{n-1}+",(function (){var G__105881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__105882 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105881,G__105882) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105881,G__105882));
})(),"+a_1x+a_0$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105879,G__105880) : tailrecursion.hoplon.markdown.para_node.call(null,G__105879,G__105880));
})(),(function (){var G__105883 = cljs.core.PersistentArrayMap.EMPTY;
var G__105884 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["using a well-known algorithm called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Horner",(function (){var G__105885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105886 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105885,G__105886) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105885,G__105886));
})(),"s rule"], null)], 0)),", which structures the computation as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105883,G__105884) : tailrecursion.hoplon.markdown.para_node.call(null,G__105883,G__105884));
})(),(function (){var G__105887 = cljs.core.PersistentArrayMap.EMPTY;
var G__105888 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(",(function (){var G__105889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__105890 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105889,G__105890) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105889,G__105890));
})(),"(a_n x+a_{n-1}) x+",(function (){var G__105891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__105892 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105891,G__105892) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105891,G__105892));
})(),"+a_1)x+a_0 $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105887,G__105888) : tailrecursion.hoplon.markdown.para_node.call(null,G__105887,G__105888));
})(),(function (){var G__105893 = cljs.core.PersistentArrayMap.EMPTY;
var G__105894 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In other words, we start with \\(a_n\\), multiply by \\(x\\), add \\(a_{n-1}\\), multiply by \\(x\\), and so on, until we reach \\(a_0\\).",(function (){var G__105895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__105896 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["According to Knuth (1981), this rule was formulated by W. G. Horner early in the nineteenth century, but the method was actually used by Newton over a hundred years earlier. Horner's rule evaluates the polynomial using fewer additions and multiplications than does the straightforward method of first computing an \\(x_n\\), then adding \\(a_{n-1}x_{n-1}\\), and so on. In fact, it is possible to prove that any algorithm for evaluating arbitrary polynomials must use at least as many additions and multiplications as does Horner",(function (){var G__105897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105898 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105897,G__105898) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105897,G__105898));
})(),"s rule, and thus Horner",(function (){var G__105899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105900 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105899,G__105900) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105899,G__105900));
})(),"s rule is an optimal algorithm for polynomial evaluation. This was proved (for the number of additions) by A. M. Ostrowski in a 1954 paper that essentially founded the modern study of optimal algorithms. The analogous statement for multiplications was proved by V. Y. Pan in 1966. The book by Borodin and Munro (1975) provides an overview of these and other results about optimal algorithms."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__105895,G__105896) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__105895,G__105896));
})()," Fill in the following template to produce a procedure that evaluates a polynomial using Horner",(function (){var G__105901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__105902 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__105901,G__105902) : tailrecursion.hoplon.markdown.simple_node.call(null,G__105901,G__105902));
})(),"s rule. Assume that the coefficients of the polynomial are arranged in a sequence, from \\(a_0\\) through \\(a_n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105893,G__105894) : tailrecursion.hoplon.markdown.para_node.call(null,G__105893,G__105894));
})(),(function (){var G__105903 = (function (){var G__105904 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105905 = (function (){var G__105906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105907 = "(";
var G__105908 = (function (){var G__105929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105930 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105929,G__105930) : tailrecursion.hoplon.span.call(null,G__105929,G__105930));
})();
var G__105909 = (function (){var G__105931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105932 = "horner-eval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105931,G__105932) : tailrecursion.hoplon.span.call(null,G__105931,G__105932));
})();
var G__105910 = " [";
var G__105911 = (function (){var G__105933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105934 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105933,G__105934) : tailrecursion.hoplon.span.call(null,G__105933,G__105934));
})();
var G__105912 = " ";
var G__105913 = (function (){var G__105935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105936 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105935,G__105936) : tailrecursion.hoplon.span.call(null,G__105935,G__105936));
})();
var G__105914 = "]\n  (";
var G__105915 = (function (){var G__105937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105938 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105937,G__105938) : tailrecursion.hoplon.span.call(null,G__105937,G__105938));
})();
var G__105916 = " (";
var G__105917 = (function (){var G__105939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__105940 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105939,G__105940) : tailrecursion.hoplon.span.call(null,G__105939,G__105940));
})();
var G__105918 = "[";
var G__105919 = (function (){var G__105941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105942 = "this-coeff";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105941,G__105942) : tailrecursion.hoplon.span.call(null,G__105941,G__105942));
})();
var G__105920 = " ";
var G__105921 = (function (){var G__105943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105944 = "higher-terms";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105943,G__105944) : tailrecursion.hoplon.span.call(null,G__105943,G__105944));
})();
var G__105922 = "] ";
var G__105923 = (function (){var G__105945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105946 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105945,G__105946) : tailrecursion.hoplon.span.call(null,G__105945,G__105946));
})();
var G__105924 = ")\n              ";
var G__105925 = (function (){var G__105947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105948 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105947,G__105948) : tailrecursion.hoplon.span.call(null,G__105947,G__105948));
})();
var G__105926 = "\n              ";
var G__105927 = (function (){var G__105949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__105950 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105949,G__105950) : tailrecursion.hoplon.span.call(null,G__105949,G__105950));
})();
var G__105928 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__105906,G__105907,G__105908,G__105909,G__105910,G__105911,G__105912,G__105913,G__105914,G__105915,G__105916,G__105917,G__105918,G__105919,G__105920,G__105921,G__105922,G__105923,G__105924,G__105925,G__105926,G__105927,G__105928) : tailrecursion.hoplon.pre.call(null,G__105906,G__105907,G__105908,G__105909,G__105910,G__105911,G__105912,G__105913,G__105914,G__105915,G__105916,G__105917,G__105918,G__105919,G__105920,G__105921,G__105922,G__105923,G__105924,G__105925,G__105926,G__105927,G__105928));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105904,G__105905) : tailrecursion.hoplon.div.call(null,G__105904,G__105905));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105903) : tailrecursion.hoplon.div.call(null,G__105903));
})(),(function (){var G__105951 = cljs.core.PersistentArrayMap.EMPTY;
var G__105952 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, to compute \\(1+3x+5x^3+s^5\\) at \\(x=2\\) you would evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__105951,G__105952) : tailrecursion.hoplon.markdown.para_node.call(null,G__105951,G__105952));
})(),(function (){var G__105953 = (function (){var G__105954 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105955 = (function (){var G__105956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__105957 = "(";
var G__105958 = (function (){var G__105975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__105976 = "horner-eval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105975,G__105976) : tailrecursion.hoplon.span.call(null,G__105975,G__105976));
})();
var G__105959 = " ";
var G__105960 = (function (){var G__105977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105978 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105977,G__105978) : tailrecursion.hoplon.span.call(null,G__105977,G__105978));
})();
var G__105961 = " (";
var G__105962 = (function (){var G__105979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__105980 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105979,G__105980) : tailrecursion.hoplon.span.call(null,G__105979,G__105980));
})();
var G__105963 = (function (){var G__105981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105982 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105981,G__105982) : tailrecursion.hoplon.span.call(null,G__105981,G__105982));
})();
var G__105964 = " ";
var G__105965 = (function (){var G__105983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105984 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105983,G__105984) : tailrecursion.hoplon.span.call(null,G__105983,G__105984));
})();
var G__105966 = " ";
var G__105967 = (function (){var G__105985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105986 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105985,G__105986) : tailrecursion.hoplon.span.call(null,G__105985,G__105986));
})();
var G__105968 = " ";
var G__105969 = (function (){var G__105987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105988 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105987,G__105988) : tailrecursion.hoplon.span.call(null,G__105987,G__105988));
})();
var G__105970 = " ";
var G__105971 = (function (){var G__105989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105990 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105989,G__105990) : tailrecursion.hoplon.span.call(null,G__105989,G__105990));
})();
var G__105972 = " ";
var G__105973 = (function (){var G__105991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__105992 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__105991,G__105992) : tailrecursion.hoplon.span.call(null,G__105991,G__105992));
})();
var G__105974 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__105956,G__105957,G__105958,G__105959,G__105960,G__105961,G__105962,G__105963,G__105964,G__105965,G__105966,G__105967,G__105968,G__105969,G__105970,G__105971,G__105972,G__105973,G__105974) : tailrecursion.hoplon.pre.call(null,G__105956,G__105957,G__105958,G__105959,G__105960,G__105961,G__105962,G__105963,G__105964,G__105965,G__105966,G__105967,G__105968,G__105969,G__105970,G__105971,G__105972,G__105973,G__105974));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105954,G__105955) : tailrecursion.hoplon.div.call(null,G__105954,G__105955));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105953) : tailrecursion.hoplon.div.call(null,G__105953));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105876;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105875;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105874;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105873;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_105993 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105994 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_105995 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_105996 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__105997 = (function (){var G__105998 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__105999 = (function (){var G__106000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106001 = "(";
var G__106002 = (function (){var G__106029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106030 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106029,G__106030) : tailrecursion.hoplon.span.call(null,G__106029,G__106030));
})();
var G__106003 = (function (){var G__106031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106032 = "horner-eval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106031,G__106032) : tailrecursion.hoplon.span.call(null,G__106031,G__106032));
})();
var G__106004 = " [";
var G__106005 = (function (){var G__106033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106034 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106033,G__106034) : tailrecursion.hoplon.span.call(null,G__106033,G__106034));
})();
var G__106006 = " ";
var G__106007 = (function (){var G__106035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106036 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106035,G__106036) : tailrecursion.hoplon.span.call(null,G__106035,G__106036));
})();
var G__106008 = "]\n  (";
var G__106009 = (function (){var G__106037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106038 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106037,G__106038) : tailrecursion.hoplon.span.call(null,G__106037,G__106038));
})();
var G__106010 = " (";
var G__106011 = (function (){var G__106039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106040 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106039,G__106040) : tailrecursion.hoplon.span.call(null,G__106039,G__106040));
})();
var G__106012 = "[";
var G__106013 = (function (){var G__106041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106042 = "this-coeff";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106041,G__106042) : tailrecursion.hoplon.span.call(null,G__106041,G__106042));
})();
var G__106014 = " ";
var G__106015 = (function (){var G__106043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106044 = "higher-terms";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106043,G__106044) : tailrecursion.hoplon.span.call(null,G__106043,G__106044));
})();
var G__106016 = "]\n                  (";
var G__106017 = (function (){var G__106045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106046 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106045,G__106046) : tailrecursion.hoplon.span.call(null,G__106045,G__106046));
})();
var G__106018 = (function (){var G__106047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106048 = "this-coeff";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106047,G__106048) : tailrecursion.hoplon.span.call(null,G__106047,G__106048));
})();
var G__106019 = " (";
var G__106020 = (function (){var G__106049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106050 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106049,G__106050) : tailrecursion.hoplon.span.call(null,G__106049,G__106050));
})();
var G__106021 = (function (){var G__106051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106052 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106051,G__106052) : tailrecursion.hoplon.span.call(null,G__106051,G__106052));
})();
var G__106022 = " ";
var G__106023 = (function (){var G__106053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106054 = "higher-tems";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106053,G__106054) : tailrecursion.hoplon.span.call(null,G__106053,G__106054));
})();
var G__106024 = ")))\n              ";
var G__106025 = (function (){var G__106055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106056 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106055,G__106056) : tailrecursion.hoplon.span.call(null,G__106055,G__106056));
})();
var G__106026 = "\n              ";
var G__106027 = (function (){var G__106057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106058 = "coefficient-sequence";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106057,G__106058) : tailrecursion.hoplon.span.call(null,G__106057,G__106058));
})();
var G__106028 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__106000,G__106001,G__106002,G__106003,G__106004,G__106005,G__106006,G__106007,G__106008,G__106009,G__106010,G__106011,G__106012,G__106013,G__106014,G__106015,G__106016,G__106017,G__106018,G__106019,G__106020,G__106021,G__106022,G__106023,G__106024,G__106025,G__106026,G__106027,G__106028) : tailrecursion.hoplon.pre.call(null,G__106000,G__106001,G__106002,G__106003,G__106004,G__106005,G__106006,G__106007,G__106008,G__106009,G__106010,G__106011,G__106012,G__106013,G__106014,G__106015,G__106016,G__106017,G__106018,G__106019,G__106020,G__106021,G__106022,G__106023,G__106024,G__106025,G__106026,G__106027,G__106028));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__105998,G__105999) : tailrecursion.hoplon.div.call(null,G__105998,G__105999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__105997) : tailrecursion.hoplon.div.call(null,G__105997));
})(),(function (){var G__106059 = cljs.core.PersistentArrayMap.EMPTY;
var G__106060 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Can you write a procedure that will compute Horner",(function (){var G__106061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__106062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__106061,G__106062) : tailrecursion.hoplon.markdown.simple_node.call(null,G__106061,G__106062));
})(),"s rule iteratively?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106059,G__106060) : tailrecursion.hoplon.markdown.para_node.call(null,G__106059,G__106060));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105996;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105995;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_105994;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_105993;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106063 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106064 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106065 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106066 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106067 = cljs.core.PersistentArrayMap.EMPTY;
var G__106068 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Redefine ",(function (){var G__106069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-leaves"], null);
var G__106070 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106069,G__106070) : tailrecursion.hoplon.markdown.code_node.call(null,G__106069,G__106070));
})()," from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2.2"], null)], 0))," as an accumulation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106067,G__106068) : tailrecursion.hoplon.markdown.para_node.call(null,G__106067,G__106068));
})(),(function (){var G__106071 = (function (){var G__106072 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106073 = (function (){var G__106074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106075 = "(";
var G__106076 = (function (){var G__106092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106093 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106092,G__106093) : tailrecursion.hoplon.span.call(null,G__106092,G__106093));
})();
var G__106077 = (function (){var G__106094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106095 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106094,G__106095) : tailrecursion.hoplon.span.call(null,G__106094,G__106095));
})();
var G__106078 = " [";
var G__106079 = (function (){var G__106096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106097 = "t";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106096,G__106097) : tailrecursion.hoplon.span.call(null,G__106096,G__106097));
})();
var G__106080 = "]\n  (";
var G__106081 = (function (){var G__106098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106099 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106098,G__106099) : tailrecursion.hoplon.span.call(null,G__106098,G__106099));
})();
var G__106082 = " ";
var G__106083 = (function (){var G__106100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106101 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106100,G__106101) : tailrecursion.hoplon.span.call(null,G__106100,G__106101));
})();
var G__106084 = " ";
var G__106085 = (function (){var G__106102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106103 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106102,G__106103) : tailrecursion.hoplon.span.call(null,G__106102,G__106103));
})();
var G__106086 = " (";
var G__106087 = (function (){var G__106104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106105 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106104,G__106105) : tailrecursion.hoplon.span.call(null,G__106104,G__106105));
})();
var G__106088 = (function (){var G__106106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106107 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106106,G__106107) : tailrecursion.hoplon.span.call(null,G__106106,G__106107));
})();
var G__106089 = " ";
var G__106090 = (function (){var G__106108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106109 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106108,G__106109) : tailrecursion.hoplon.span.call(null,G__106108,G__106109));
})();
var G__106091 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__106074,G__106075,G__106076,G__106077,G__106078,G__106079,G__106080,G__106081,G__106082,G__106083,G__106084,G__106085,G__106086,G__106087,G__106088,G__106089,G__106090,G__106091) : tailrecursion.hoplon.pre.call(null,G__106074,G__106075,G__106076,G__106077,G__106078,G__106079,G__106080,G__106081,G__106082,G__106083,G__106084,G__106085,G__106086,G__106087,G__106088,G__106089,G__106090,G__106091));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106072,G__106073) : tailrecursion.hoplon.div.call(null,G__106072,G__106073));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106071) : tailrecursion.hoplon.div.call(null,G__106071));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106066;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106065;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106064;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106063;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106110 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106111 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106112 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106113 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106114 = (function (){var G__106115 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106116 = (function (){var G__106117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106118 = "(";
var G__106119 = (function (){var G__106149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106150 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106149,G__106150) : tailrecursion.hoplon.span.call(null,G__106149,G__106150));
})();
var G__106120 = (function (){var G__106151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106152 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106151,G__106152) : tailrecursion.hoplon.span.call(null,G__106151,G__106152));
})();
var G__106121 = " [";
var G__106122 = (function (){var G__106153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106154 = "t";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106153,G__106154) : tailrecursion.hoplon.span.call(null,G__106153,G__106154));
})();
var G__106123 = "]\n  (";
var G__106124 = (function (){var G__106155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106156 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106155,G__106156) : tailrecursion.hoplon.span.call(null,G__106155,G__106156));
})();
var G__106125 = " ";
var G__106126 = (function (){var G__106157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106158 = "+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106157,G__106158) : tailrecursion.hoplon.span.call(null,G__106157,G__106158));
})();
var G__106127 = "\n              ";
var G__106128 = (function (){var G__106159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106160 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106159,G__106160) : tailrecursion.hoplon.span.call(null,G__106159,G__106160));
})();
var G__106129 = "\n              (";
var G__106130 = (function (){var G__106161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106162 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106161,G__106162) : tailrecursion.hoplon.span.call(null,G__106161,G__106162));
})();
var G__106131 = "(";
var G__106132 = (function (){var G__106163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106164 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106163,G__106164) : tailrecursion.hoplon.span.call(null,G__106163,G__106164));
})();
var G__106133 = "[";
var G__106134 = (function (){var G__106165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106166 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106165,G__106166) : tailrecursion.hoplon.span.call(null,G__106165,G__106166));
})();
var G__106135 = "]\n                     (";
var G__106136 = (function (){var G__106167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106168 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106167,G__106168) : tailrecursion.hoplon.span.call(null,G__106167,G__106168));
})();
var G__106137 = "(";
var G__106138 = (function (){var G__106169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106170 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106169,G__106170) : tailrecursion.hoplon.span.call(null,G__106169,G__106170));
})();
var G__106139 = (function (){var G__106171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106172 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106171,G__106172) : tailrecursion.hoplon.span.call(null,G__106171,G__106172));
})();
var G__106140 = ")\n                         (";
var G__106141 = (function (){var G__106173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106174 = "count-leaves";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106173,G__106174) : tailrecursion.hoplon.span.call(null,G__106173,G__106174));
})();
var G__106142 = " ";
var G__106143 = (function (){var G__106175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106176 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106175,G__106176) : tailrecursion.hoplon.span.call(null,G__106175,G__106176));
})();
var G__106144 = ")\n                         ";
var G__106145 = (function (){var G__106177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106178 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106177,G__106178) : tailrecursion.hoplon.span.call(null,G__106177,G__106178));
})();
var G__106146 = "))\n                   ";
var G__106147 = (function (){var G__106179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106180 = "t";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106179,G__106180) : tailrecursion.hoplon.span.call(null,G__106179,G__106180));
})();
var G__106148 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$32 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$32(G__106117,G__106118,G__106119,G__106120,G__106121,G__106122,G__106123,G__106124,G__106125,G__106126,G__106127,G__106128,G__106129,G__106130,G__106131,G__106132,G__106133,G__106134,G__106135,G__106136,G__106137,G__106138,G__106139,G__106140,G__106141,G__106142,G__106143,G__106144,G__106145,G__106146,G__106147,G__106148) : tailrecursion.hoplon.pre.call(null,G__106117,G__106118,G__106119,G__106120,G__106121,G__106122,G__106123,G__106124,G__106125,G__106126,G__106127,G__106128,G__106129,G__106130,G__106131,G__106132,G__106133,G__106134,G__106135,G__106136,G__106137,G__106138,G__106139,G__106140,G__106141,G__106142,G__106143,G__106144,G__106145,G__106146,G__106147,G__106148));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106115,G__106116) : tailrecursion.hoplon.div.call(null,G__106115,G__106116));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106114) : tailrecursion.hoplon.div.call(null,G__106114));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106113;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106112;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106111;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106110;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106181 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106182 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106183 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106184 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106185 = cljs.core.PersistentArrayMap.EMPTY;
var G__106186 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedure ",(function (){var G__106187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate-n"], null);
var G__106188 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106187,G__106188) : tailrecursion.hoplon.markdown.code_node.call(null,G__106187,G__106188));
})()," is similar to ",(function (){var G__106189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate"], null);
var G__106190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106189,G__106190) : tailrecursion.hoplon.markdown.code_node.call(null,G__106189,G__106190));
})()," except that it takes as its third argument a sequence of sequences, which are all assumed to have the same number of elements. It applies the designated accumulation procedure to combine all the first elements of the sequences, all the second elements of the sequences, and so on, and returns a sequence of the results. For instance, if ",(function (){var G__106191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"s"], null);
var G__106192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106191,G__106192) : tailrecursion.hoplon.markdown.code_node.call(null,G__106191,G__106192));
})()," is a sequence containing four sequences, ",(function (){var G__106193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"((1 2 3) (4 5 6) (7 8 9) (10 11\n12))"], null);
var G__106194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106193,G__106194) : tailrecursion.hoplon.markdown.code_node.call(null,G__106193,G__106194));
})(),", then the value of ",(function (){var G__106195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(accumulate-n + 0 s)"], null);
var G__106196 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106195,G__106196) : tailrecursion.hoplon.markdown.code_node.call(null,G__106195,G__106196));
})()," should be the sequence ",(function (){var G__106197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(22 26 30)"], null);
var G__106198 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106197,G__106198) : tailrecursion.hoplon.markdown.code_node.call(null,G__106197,G__106198));
})(),". Fill in the missing expressions in the following definition of ",(function (){var G__106199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate-n"], null);
var G__106200 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106199,G__106200) : tailrecursion.hoplon.markdown.code_node.call(null,G__106199,G__106200));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106185,G__106186) : tailrecursion.hoplon.markdown.para_node.call(null,G__106185,G__106186));
})(),(function (){var G__106201 = (function (){var G__106202 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106203 = (function (){var G__106204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106205 = "(";
var G__106206 = (function (){var G__106242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106243 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106242,G__106243) : tailrecursion.hoplon.span.call(null,G__106242,G__106243));
})();
var G__106207 = (function (){var G__106244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106245 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106244,G__106245) : tailrecursion.hoplon.span.call(null,G__106244,G__106245));
})();
var G__106208 = " [";
var G__106209 = (function (){var G__106246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106247 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106246,G__106247) : tailrecursion.hoplon.span.call(null,G__106246,G__106247));
})();
var G__106210 = " ";
var G__106211 = (function (){var G__106248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106249 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106248,G__106249) : tailrecursion.hoplon.span.call(null,G__106248,G__106249));
})();
var G__106212 = " ";
var G__106213 = (function (){var G__106250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106251 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106250,G__106251) : tailrecursion.hoplon.span.call(null,G__106250,G__106251));
})();
var G__106214 = "]\n  (";
var G__106215 = (function (){var G__106252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106253 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106252,G__106253) : tailrecursion.hoplon.span.call(null,G__106252,G__106253));
})();
var G__106216 = "(";
var G__106217 = (function (){var G__106254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106255 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106254,G__106255) : tailrecursion.hoplon.span.call(null,G__106254,G__106255));
})();
var G__106218 = " (";
var G__106219 = (function (){var G__106256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106257 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106256,G__106257) : tailrecursion.hoplon.span.call(null,G__106256,G__106257));
})();
var G__106220 = (function (){var G__106258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106259 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106258,G__106259) : tailrecursion.hoplon.span.call(null,G__106258,G__106259));
})();
var G__106221 = "))\n      ";
var G__106222 = (function (){var G__106260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106261 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106260,G__106261) : tailrecursion.hoplon.span.call(null,G__106260,G__106261));
})();
var G__106223 = "\n      (";
var G__106224 = (function (){var G__106262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106263 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106262,G__106263) : tailrecursion.hoplon.span.call(null,G__106262,G__106263));
})();
var G__106225 = "(";
var G__106226 = (function (){var G__106264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106265 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106264,G__106265) : tailrecursion.hoplon.span.call(null,G__106264,G__106265));
})();
var G__106227 = "   ";
var G__106228 = (function (){var G__106266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106267 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106266,G__106267) : tailrecursion.hoplon.span.call(null,G__106266,G__106267));
})();
var G__106229 = " ";
var G__106230 = (function (){var G__106268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106269 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106268,G__106269) : tailrecursion.hoplon.span.call(null,G__106268,G__106269));
})();
var G__106231 = " ";
var G__106232 = (function (){var G__106270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106271 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106270,G__106271) : tailrecursion.hoplon.span.call(null,G__106270,G__106271));
})();
var G__106233 = ")\n            (";
var G__106234 = (function (){var G__106272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106273 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106272,G__106273) : tailrecursion.hoplon.span.call(null,G__106272,G__106273));
})();
var G__106235 = " ";
var G__106236 = (function (){var G__106274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106275 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106274,G__106275) : tailrecursion.hoplon.span.call(null,G__106274,G__106275));
})();
var G__106237 = " ";
var G__106238 = (function (){var G__106276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106277 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106276,G__106277) : tailrecursion.hoplon.span.call(null,G__106276,G__106277));
})();
var G__106239 = " ";
var G__106240 = (function (){var G__106278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106279 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106278,G__106279) : tailrecursion.hoplon.span.call(null,G__106278,G__106279));
})();
var G__106241 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__106204,G__106205,G__106206,G__106207,G__106208,G__106209,G__106210,G__106211,G__106212,G__106213,G__106214,G__106215,G__106216,G__106217,G__106218,G__106219,G__106220,G__106221,G__106222,G__106223,G__106224,G__106225,G__106226,G__106227,G__106228,G__106229,G__106230,G__106231,G__106232,G__106233,G__106234,G__106235,G__106236,G__106237,G__106238,G__106239,G__106240,G__106241) : tailrecursion.hoplon.pre.call(null,G__106204,G__106205,G__106206,G__106207,G__106208,G__106209,G__106210,G__106211,G__106212,G__106213,G__106214,G__106215,G__106216,G__106217,G__106218,G__106219,G__106220,G__106221,G__106222,G__106223,G__106224,G__106225,G__106226,G__106227,G__106228,G__106229,G__106230,G__106231,G__106232,G__106233,G__106234,G__106235,G__106236,G__106237,G__106238,G__106239,G__106240,G__106241));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106202,G__106203) : tailrecursion.hoplon.div.call(null,G__106202,G__106203));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106201) : tailrecursion.hoplon.div.call(null,G__106201));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106184;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106183;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106182;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106181;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106280 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106281 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106282 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106283 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106284 = (function (){var G__106285 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106286 = (function (){var G__106287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106288 = "(";
var G__106289 = (function (){var G__106327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106328 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106327,G__106328) : tailrecursion.hoplon.span.call(null,G__106327,G__106328));
})();
var G__106290 = (function (){var G__106329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106330 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106329,G__106330) : tailrecursion.hoplon.span.call(null,G__106329,G__106330));
})();
var G__106291 = " [";
var G__106292 = (function (){var G__106331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106332 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106331,G__106332) : tailrecursion.hoplon.span.call(null,G__106331,G__106332));
})();
var G__106293 = " ";
var G__106294 = (function (){var G__106333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106334 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106333,G__106334) : tailrecursion.hoplon.span.call(null,G__106333,G__106334));
})();
var G__106295 = " ";
var G__106296 = (function (){var G__106335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106336 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106335,G__106336) : tailrecursion.hoplon.span.call(null,G__106335,G__106336));
})();
var G__106297 = "]\n  (";
var G__106298 = (function (){var G__106337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106338 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106337,G__106338) : tailrecursion.hoplon.span.call(null,G__106337,G__106338));
})();
var G__106299 = "(";
var G__106300 = (function (){var G__106339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106340 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106339,G__106340) : tailrecursion.hoplon.span.call(null,G__106339,G__106340));
})();
var G__106301 = " (";
var G__106302 = (function (){var G__106341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106342 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106341,G__106342) : tailrecursion.hoplon.span.call(null,G__106341,G__106342));
})();
var G__106303 = (function (){var G__106343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106344 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106343,G__106344) : tailrecursion.hoplon.span.call(null,G__106343,G__106344));
})();
var G__106304 = "))\n      ";
var G__106305 = (function (){var G__106345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106346 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106345,G__106346) : tailrecursion.hoplon.span.call(null,G__106345,G__106346));
})();
var G__106306 = "\n      (";
var G__106307 = (function (){var G__106347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106348 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106347,G__106348) : tailrecursion.hoplon.span.call(null,G__106347,G__106348));
})();
var G__106308 = "(";
var G__106309 = (function (){var G__106349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106350 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106349,G__106350) : tailrecursion.hoplon.span.call(null,G__106349,G__106350));
})();
var G__106310 = "   ";
var G__106311 = (function (){var G__106351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106352 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106351,G__106352) : tailrecursion.hoplon.span.call(null,G__106351,G__106352));
})();
var G__106312 = " ";
var G__106313 = (function (){var G__106353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106354 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106353,G__106354) : tailrecursion.hoplon.span.call(null,G__106353,G__106354));
})();
var G__106314 = " (";
var G__106315 = (function (){var G__106355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106356 = "map first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106355,G__106356) : tailrecursion.hoplon.span.call(null,G__106355,G__106356));
})();
var G__106316 = (function (){var G__106357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106358 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106357,G__106358) : tailrecursion.hoplon.span.call(null,G__106357,G__106358));
})();
var G__106317 = "))\n            (";
var G__106318 = (function (){var G__106359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106360 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106359,G__106360) : tailrecursion.hoplon.span.call(null,G__106359,G__106360));
})();
var G__106319 = " ";
var G__106320 = (function (){var G__106361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106362 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106361,G__106362) : tailrecursion.hoplon.span.call(null,G__106361,G__106362));
})();
var G__106321 = " ";
var G__106322 = (function (){var G__106363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106364 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106363,G__106364) : tailrecursion.hoplon.span.call(null,G__106363,G__106364));
})();
var G__106323 = " (";
var G__106324 = (function (){var G__106365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106366 = "map rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106365,G__106366) : tailrecursion.hoplon.span.call(null,G__106365,G__106366));
})();
var G__106325 = (function (){var G__106367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106368 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106367,G__106368) : tailrecursion.hoplon.span.call(null,G__106367,G__106368));
})();
var G__106326 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__106287,G__106288,G__106289,G__106290,G__106291,G__106292,G__106293,G__106294,G__106295,G__106296,G__106297,G__106298,G__106299,G__106300,G__106301,G__106302,G__106303,G__106304,G__106305,G__106306,G__106307,G__106308,G__106309,G__106310,G__106311,G__106312,G__106313,G__106314,G__106315,G__106316,G__106317,G__106318,G__106319,G__106320,G__106321,G__106322,G__106323,G__106324,G__106325,G__106326) : tailrecursion.hoplon.pre.call(null,G__106287,G__106288,G__106289,G__106290,G__106291,G__106292,G__106293,G__106294,G__106295,G__106296,G__106297,G__106298,G__106299,G__106300,G__106301,G__106302,G__106303,G__106304,G__106305,G__106306,G__106307,G__106308,G__106309,G__106310,G__106311,G__106312,G__106313,G__106314,G__106315,G__106316,G__106317,G__106318,G__106319,G__106320,G__106321,G__106322,G__106323,G__106324,G__106325,G__106326));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106285,G__106286) : tailrecursion.hoplon.div.call(null,G__106285,G__106286));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106284) : tailrecursion.hoplon.div.call(null,G__106284));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106283;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106282;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106281;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106280;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106369 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106370 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106371 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106372 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106373 = cljs.core.PersistentArrayMap.EMPTY;
var G__106374 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we represent vectors \\(v=(v_i)\\) as sequences of numbers, and matrices \\(m=(m_{ij})\\) as sequences of vectors (the rows of the matrix). For example, the matrix"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106373,G__106374) : tailrecursion.hoplon.markdown.para_node.call(null,G__106373,G__106374));
})(),(function (){var G__106375 = cljs.core.PersistentArrayMap.EMPTY;
var G__106376 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\\begin{array}{cccc} 1 & 2 & 3 & 4 \\\\ 4 & 5 & 6 & 6 \\\\ 6 & 7 & 8 & 9 \\end{array}\\right"], null)], 0)),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106375,G__106376) : tailrecursion.hoplon.markdown.para_node.call(null,G__106375,G__106376));
})(),(function (){var G__106377 = cljs.core.PersistentArrayMap.EMPTY;
var G__106378 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is represented as the sequence ",(function (){var G__106379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"((1 2 3 4) (4 5 6 6) (6 7 8 9))"], null);
var G__106380 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106379,G__106380) : tailrecursion.hoplon.markdown.code_node.call(null,G__106379,G__106380));
})(),". With this representation, we can use sequence operations to concisely express the basic matrix and vector operations. These operations (which are described in any book on matrix algebra) are the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106377,G__106378) : tailrecursion.hoplon.markdown.para_node.call(null,G__106377,G__106378));
})(),(function (){var G__106381 = cljs.core.PersistentArrayMap.EMPTY;
var G__106382 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} (\\text{dot-product }v \\cdot w) & \\text{ returns the sum } \\sum_i v_iw_i \\\\ (\\text{matrix times vector }m \\cdot v) & \\text{ returns the vector } t \\text{, where }t_i=\\sum_j m_{ij}v_j \\\\ (\\text{matrix times matrix }m \\times n) & \\text{ returns the matrix }p\\text{ where }p_{ij}=\\sum_k m_{ik}n_{kj} \\\\ (\\text{transpose }m) & \\text{ returns the matrix }n \\text{ where}n_{ij}=m_{ji} \\\\ \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106381,G__106382) : tailrecursion.hoplon.markdown.para_node.call(null,G__106381,G__106382));
})(),(function (){var G__106383 = cljs.core.PersistentArrayMap.EMPTY;
var G__106384 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can define the product as",(function (){var G__106385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__106386 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This definition uses the extended version of map described in footnote 12. Luckily, our ",(function (){var G__106387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"map"], null);
var G__106388 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106387,G__106388) : tailrecursion.hoplon.markdown.code_node.call(null,G__106387,G__106388));
})()," function can already take multiple list arguments. Play around with it and see how it works."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__106385,G__106386) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__106385,G__106386));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106383,G__106384) : tailrecursion.hoplon.markdown.para_node.call(null,G__106383,G__106384));
})(),(function (){var G__106389 = (function (){var G__106390 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106391 = (function (){var G__106392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106393 = "(";
var G__106394 = (function (){var G__106411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106412 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106411,G__106412) : tailrecursion.hoplon.span.call(null,G__106411,G__106412));
})();
var G__106395 = (function (){var G__106413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106414 = "dot-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106413,G__106414) : tailrecursion.hoplon.span.call(null,G__106413,G__106414));
})();
var G__106396 = " [";
var G__106397 = (function (){var G__106415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106416 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106415,G__106416) : tailrecursion.hoplon.span.call(null,G__106415,G__106416));
})();
var G__106398 = " ";
var G__106399 = (function (){var G__106417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106418 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106417,G__106418) : tailrecursion.hoplon.span.call(null,G__106417,G__106418));
})();
var G__106400 = "]\n  (";
var G__106401 = (function (){var G__106419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106420 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106419,G__106420) : tailrecursion.hoplon.span.call(null,G__106419,G__106420));
})();
var G__106402 = " ";
var G__106403 = (function (){var G__106421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106422 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106421,G__106422) : tailrecursion.hoplon.span.call(null,G__106421,G__106422));
})();
var G__106404 = (function (){var G__106423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106424 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106423,G__106424) : tailrecursion.hoplon.span.call(null,G__106423,G__106424));
})();
var G__106405 = " (";
var G__106406 = (function (){var G__106425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106426 = "map * ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106425,G__106426) : tailrecursion.hoplon.span.call(null,G__106425,G__106426));
})();
var G__106407 = (function (){var G__106427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106428 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106427,G__106428) : tailrecursion.hoplon.span.call(null,G__106427,G__106428));
})();
var G__106408 = " ";
var G__106409 = (function (){var G__106429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106430 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106429,G__106430) : tailrecursion.hoplon.span.call(null,G__106429,G__106430));
})();
var G__106410 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__106392,G__106393,G__106394,G__106395,G__106396,G__106397,G__106398,G__106399,G__106400,G__106401,G__106402,G__106403,G__106404,G__106405,G__106406,G__106407,G__106408,G__106409,G__106410) : tailrecursion.hoplon.pre.call(null,G__106392,G__106393,G__106394,G__106395,G__106396,G__106397,G__106398,G__106399,G__106400,G__106401,G__106402,G__106403,G__106404,G__106405,G__106406,G__106407,G__106408,G__106409,G__106410));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106390,G__106391) : tailrecursion.hoplon.div.call(null,G__106390,G__106391));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106389) : tailrecursion.hoplon.div.call(null,G__106389));
})(),(function (){var G__106431 = cljs.core.PersistentArrayMap.EMPTY;
var G__106432 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fill in the missing expressions in the following procedures for computing the other matrix operations. (The procedure ",(function (){var G__106433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate-n"], null);
var G__106434 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106433,G__106434) : tailrecursion.hoplon.markdown.code_node.call(null,G__106433,G__106434));
})()," is defined in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/36/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.36"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106431,G__106432) : tailrecursion.hoplon.markdown.para_node.call(null,G__106431,G__106432));
})(),(function (){var G__106435 = (function (){var G__106436 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106437 = (function (){var G__106438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106439 = "(";
var G__106440 = (function (){var G__106485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106486 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106485,G__106486) : tailrecursion.hoplon.span.call(null,G__106485,G__106486));
})();
var G__106441 = (function (){var G__106487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106488 = "matrix-*-vector";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106487,G__106488) : tailrecursion.hoplon.span.call(null,G__106487,G__106488));
})();
var G__106442 = " [";
var G__106443 = (function (){var G__106489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106490 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106489,G__106490) : tailrecursion.hoplon.span.call(null,G__106489,G__106490));
})();
var G__106444 = " ";
var G__106445 = (function (){var G__106491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106492 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106491,G__106492) : tailrecursion.hoplon.span.call(null,G__106491,G__106492));
})();
var G__106446 = "]\n  (";
var G__106447 = (function (){var G__106493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106494 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106493,G__106494) : tailrecursion.hoplon.span.call(null,G__106493,G__106494));
})();
var G__106448 = (function (){var G__106495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106496 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106495,G__106496) : tailrecursion.hoplon.span.call(null,G__106495,G__106496));
})();
var G__106449 = " ";
var G__106450 = (function (){var G__106497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106498 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106497,G__106498) : tailrecursion.hoplon.span.call(null,G__106497,G__106498));
})();
var G__106451 = "))\n\n(";
var G__106452 = (function (){var G__106499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106500 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106499,G__106500) : tailrecursion.hoplon.span.call(null,G__106499,G__106500));
})();
var G__106453 = (function (){var G__106501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106502 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106501,G__106502) : tailrecursion.hoplon.span.call(null,G__106501,G__106502));
})();
var G__106454 = " [";
var G__106455 = (function (){var G__106503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106504 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106503,G__106504) : tailrecursion.hoplon.span.call(null,G__106503,G__106504));
})();
var G__106456 = "]\n  (";
var G__106457 = (function (){var G__106505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106506 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106505,G__106506) : tailrecursion.hoplon.span.call(null,G__106505,G__106506));
})();
var G__106458 = " ";
var G__106459 = (function (){var G__106507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106508 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106507,G__106508) : tailrecursion.hoplon.span.call(null,G__106507,G__106508));
})();
var G__106460 = " ";
var G__106461 = (function (){var G__106509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106510 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106509,G__106510) : tailrecursion.hoplon.span.call(null,G__106509,G__106510));
})();
var G__106462 = " ";
var G__106463 = (function (){var G__106511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106512 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106511,G__106512) : tailrecursion.hoplon.span.call(null,G__106511,G__106512));
})();
var G__106464 = "))\n\n(";
var G__106465 = (function (){var G__106513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106514 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106513,G__106514) : tailrecursion.hoplon.span.call(null,G__106513,G__106514));
})();
var G__106466 = (function (){var G__106515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106516 = "matrix-*-matrix";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106515,G__106516) : tailrecursion.hoplon.span.call(null,G__106515,G__106516));
})();
var G__106467 = " [";
var G__106468 = (function (){var G__106517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106518 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106517,G__106518) : tailrecursion.hoplon.span.call(null,G__106517,G__106518));
})();
var G__106469 = " ";
var G__106470 = (function (){var G__106519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106520 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106519,G__106520) : tailrecursion.hoplon.span.call(null,G__106519,G__106520));
})();
var G__106471 = "]\n  (";
var G__106472 = (function (){var G__106521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106522 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106521,G__106522) : tailrecursion.hoplon.span.call(null,G__106521,G__106522));
})();
var G__106473 = "[";
var G__106474 = (function (){var G__106523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106524 = "cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106523,G__106524) : tailrecursion.hoplon.span.call(null,G__106523,G__106524));
})();
var G__106475 = " (";
var G__106476 = (function (){var G__106525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106526 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106525,G__106526) : tailrecursion.hoplon.span.call(null,G__106525,G__106526));
})();
var G__106477 = " ";
var G__106478 = (function (){var G__106527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106528 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106527,G__106528) : tailrecursion.hoplon.span.call(null,G__106527,G__106528));
})();
var G__106479 = ")]\n    (";
var G__106480 = (function (){var G__106529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106530 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106529,G__106530) : tailrecursion.hoplon.span.call(null,G__106529,G__106530));
})();
var G__106481 = (function (){var G__106531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106532 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106531,G__106532) : tailrecursion.hoplon.span.call(null,G__106531,G__106532));
})();
var G__106482 = " ";
var G__106483 = (function (){var G__106533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106534 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106533,G__106534) : tailrecursion.hoplon.span.call(null,G__106533,G__106534));
})();
var G__106484 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__106438,G__106439,G__106440,G__106441,G__106442,G__106443,G__106444,G__106445,G__106446,G__106447,G__106448,G__106449,G__106450,G__106451,G__106452,G__106453,G__106454,G__106455,G__106456,G__106457,G__106458,G__106459,G__106460,G__106461,G__106462,G__106463,G__106464,G__106465,G__106466,G__106467,G__106468,G__106469,G__106470,G__106471,G__106472,G__106473,G__106474,G__106475,G__106476,G__106477,G__106478,G__106479,G__106480,G__106481,G__106482,G__106483,G__106484) : tailrecursion.hoplon.pre.call(null,G__106438,G__106439,G__106440,G__106441,G__106442,G__106443,G__106444,G__106445,G__106446,G__106447,G__106448,G__106449,G__106450,G__106451,G__106452,G__106453,G__106454,G__106455,G__106456,G__106457,G__106458,G__106459,G__106460,G__106461,G__106462,G__106463,G__106464,G__106465,G__106466,G__106467,G__106468,G__106469,G__106470,G__106471,G__106472,G__106473,G__106474,G__106475,G__106476,G__106477,G__106478,G__106479,G__106480,G__106481,G__106482,G__106483,G__106484));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106436,G__106437) : tailrecursion.hoplon.div.call(null,G__106436,G__106437));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106435) : tailrecursion.hoplon.div.call(null,G__106435));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106372;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106371;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106370;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106369;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106535 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106536 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106537 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106538 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106539 = (function (){var G__106540 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106541 = (function (){var G__106542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106543 = "(";
var G__106544 = (function (){var G__106600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106601 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106600,G__106601) : tailrecursion.hoplon.span.call(null,G__106600,G__106601));
})();
var G__106545 = (function (){var G__106602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106603 = "matrix-*-vector";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106602,G__106603) : tailrecursion.hoplon.span.call(null,G__106602,G__106603));
})();
var G__106546 = " [";
var G__106547 = (function (){var G__106604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106605 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106604,G__106605) : tailrecursion.hoplon.span.call(null,G__106604,G__106605));
})();
var G__106548 = " ";
var G__106549 = (function (){var G__106606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106607 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106606,G__106607) : tailrecursion.hoplon.span.call(null,G__106606,G__106607));
})();
var G__106550 = "]\n  (";
var G__106551 = (function (){var G__106608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106609 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106608,G__106609) : tailrecursion.hoplon.span.call(null,G__106608,G__106609));
})();
var G__106552 = (function (){var G__106610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106611 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106610,G__106611) : tailrecursion.hoplon.span.call(null,G__106610,G__106611));
})();
var G__106553 = "(";
var G__106554 = (function (){var G__106612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106613 = "dot-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106612,G__106613) : tailrecursion.hoplon.span.call(null,G__106612,G__106613));
})();
var G__106555 = " ";
var G__106556 = (function (){var G__106614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106615 = "v";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106614,G__106615) : tailrecursion.hoplon.span.call(null,G__106614,G__106615));
})();
var G__106557 = " ";
var G__106558 = (function (){var G__106616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106617 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106616,G__106617) : tailrecursion.hoplon.span.call(null,G__106616,G__106617));
})();
var G__106559 = ") ";
var G__106560 = (function (){var G__106618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106619 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106618,G__106619) : tailrecursion.hoplon.span.call(null,G__106618,G__106619));
})();
var G__106561 = "))\n\n(";
var G__106562 = (function (){var G__106620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106621 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106620,G__106621) : tailrecursion.hoplon.span.call(null,G__106620,G__106621));
})();
var G__106563 = (function (){var G__106622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106623 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106622,G__106623) : tailrecursion.hoplon.span.call(null,G__106622,G__106623));
})();
var G__106564 = " [";
var G__106565 = (function (){var G__106624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106625 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106624,G__106625) : tailrecursion.hoplon.span.call(null,G__106624,G__106625));
})();
var G__106566 = "]\n  (";
var G__106567 = (function (){var G__106626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106627 = "accumulate-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106626,G__106627) : tailrecursion.hoplon.span.call(null,G__106626,G__106627));
})();
var G__106568 = " ";
var G__106569 = (function (){var G__106628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106629 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106628,G__106629) : tailrecursion.hoplon.span.call(null,G__106628,G__106629));
})();
var G__106570 = (function (){var G__106630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106631 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106630,G__106631) : tailrecursion.hoplon.span.call(null,G__106630,G__106631));
})();
var G__106571 = " ";
var G__106572 = (function (){var G__106632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106633 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106632,G__106633) : tailrecursion.hoplon.span.call(null,G__106632,G__106633));
})();
var G__106573 = "))\n\n(";
var G__106574 = (function (){var G__106634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106635 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106634,G__106635) : tailrecursion.hoplon.span.call(null,G__106634,G__106635));
})();
var G__106575 = (function (){var G__106636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106637 = "matrix-*-matrix";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106636,G__106637) : tailrecursion.hoplon.span.call(null,G__106636,G__106637));
})();
var G__106576 = " [";
var G__106577 = (function (){var G__106638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106639 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106638,G__106639) : tailrecursion.hoplon.span.call(null,G__106638,G__106639));
})();
var G__106578 = " ";
var G__106579 = (function (){var G__106640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106641 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106640,G__106641) : tailrecursion.hoplon.span.call(null,G__106640,G__106641));
})();
var G__106580 = "]\n  (";
var G__106581 = (function (){var G__106642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106643 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106642,G__106643) : tailrecursion.hoplon.span.call(null,G__106642,G__106643));
})();
var G__106582 = "[";
var G__106583 = (function (){var G__106644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106645 = "cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106644,G__106645) : tailrecursion.hoplon.span.call(null,G__106644,G__106645));
})();
var G__106584 = " (";
var G__106585 = (function (){var G__106646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106647 = "transpose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106646,G__106647) : tailrecursion.hoplon.span.call(null,G__106646,G__106647));
})();
var G__106586 = " ";
var G__106587 = (function (){var G__106648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106649 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106648,G__106649) : tailrecursion.hoplon.span.call(null,G__106648,G__106649));
})();
var G__106588 = ")]\n    (";
var G__106589 = (function (){var G__106650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106651 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106650,G__106651) : tailrecursion.hoplon.span.call(null,G__106650,G__106651));
})();
var G__106590 = (function (){var G__106652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106653 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106652,G__106653) : tailrecursion.hoplon.span.call(null,G__106652,G__106653));
})();
var G__106591 = "(";
var G__106592 = (function (){var G__106654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106655 = "matrix-*-vector";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106654,G__106655) : tailrecursion.hoplon.span.call(null,G__106654,G__106655));
})();
var G__106593 = " ";
var G__106594 = (function (){var G__106656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106657 = "cols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106656,G__106657) : tailrecursion.hoplon.span.call(null,G__106656,G__106657));
})();
var G__106595 = " ";
var G__106596 = (function (){var G__106658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106659 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106658,G__106659) : tailrecursion.hoplon.span.call(null,G__106658,G__106659));
})();
var G__106597 = ") ";
var G__106598 = (function (){var G__106660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106661 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106660,G__106661) : tailrecursion.hoplon.span.call(null,G__106660,G__106661));
})();
var G__106599 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__106542,G__106543,G__106544,G__106545,G__106546,G__106547,G__106548,G__106549,G__106550,G__106551,G__106552,G__106553,G__106554,G__106555,G__106556,G__106557,G__106558,G__106559,G__106560,G__106561,G__106562,G__106563,G__106564,G__106565,G__106566,G__106567,G__106568,G__106569,G__106570,G__106571,G__106572,G__106573,G__106574,G__106575,G__106576,G__106577,G__106578,G__106579,G__106580,G__106581,G__106582,G__106583,G__106584,G__106585,G__106586,G__106587,G__106588,G__106589,G__106590,G__106591,G__106592,G__106593,G__106594,G__106595,G__106596,G__106597,G__106598,G__106599) : tailrecursion.hoplon.pre.call(null,G__106542,G__106543,G__106544,G__106545,G__106546,G__106547,G__106548,G__106549,G__106550,G__106551,G__106552,G__106553,G__106554,G__106555,G__106556,G__106557,G__106558,G__106559,G__106560,G__106561,G__106562,G__106563,G__106564,G__106565,G__106566,G__106567,G__106568,G__106569,G__106570,G__106571,G__106572,G__106573,G__106574,G__106575,G__106576,G__106577,G__106578,G__106579,G__106580,G__106581,G__106582,G__106583,G__106584,G__106585,G__106586,G__106587,G__106588,G__106589,G__106590,G__106591,G__106592,G__106593,G__106594,G__106595,G__106596,G__106597,G__106598,G__106599));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106540,G__106541) : tailrecursion.hoplon.div.call(null,G__106540,G__106541));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106539) : tailrecursion.hoplon.div.call(null,G__106539));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106538;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106537;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106536;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106535;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106662 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106663 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106664 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106665 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106666 = cljs.core.PersistentArrayMap.EMPTY;
var G__106667 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__106668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"accumulate"], null);
var G__106669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106668,G__106669) : tailrecursion.hoplon.markdown.code_node.call(null,G__106668,G__106669));
})()," procedure is also known as ",(function (){var G__106670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__106671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106670,G__106671) : tailrecursion.hoplon.markdown.code_node.call(null,G__106670,G__106671));
})(),", because it combines the first element of the sequence with the result of combining all the elements to the right. There is also a ",(function (){var G__106672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__106673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106672,G__106673) : tailrecursion.hoplon.markdown.code_node.call(null,G__106672,G__106673));
})(),", which is similar to ",(function (){var G__106674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__106675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__106674,G__106675) : tailrecursion.hoplon.markdown.code_node.call(null,G__106674,G__106675));
})(),", except that it combines elements working in the opposite direction:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106666,G__106667) : tailrecursion.hoplon.markdown.para_node.call(null,G__106666,G__106667));
})(),(function (){var G__106676 = (function (){var G__106677 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106678 = (function (){var G__106679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106680 = "(";
var G__106681 = (function (){var G__106720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106721 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106720,G__106721) : tailrecursion.hoplon.span.call(null,G__106720,G__106721));
})();
var G__106682 = (function (){var G__106722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106723 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106722,G__106723) : tailrecursion.hoplon.span.call(null,G__106722,G__106723));
})();
var G__106683 = " [";
var G__106684 = (function (){var G__106724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106725 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106724,G__106725) : tailrecursion.hoplon.span.call(null,G__106724,G__106725));
})();
var G__106685 = " ";
var G__106686 = (function (){var G__106726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106727 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106726,G__106727) : tailrecursion.hoplon.span.call(null,G__106726,G__106727));
})();
var G__106687 = " ";
var G__106688 = (function (){var G__106728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106729 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106728,G__106729) : tailrecursion.hoplon.span.call(null,G__106728,G__106729));
})();
var G__106689 = "]\n  (";
var G__106690 = (function (){var G__106730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106731 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106730,G__106731) : tailrecursion.hoplon.span.call(null,G__106730,G__106731));
})();
var G__106691 = "[";
var G__106692 = (function (){var G__106732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106733 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106732,G__106733) : tailrecursion.hoplon.span.call(null,G__106732,G__106733));
})();
var G__106693 = " ";
var G__106694 = (function (){var G__106734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106735 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106734,G__106735) : tailrecursion.hoplon.span.call(null,G__106734,G__106735));
})();
var G__106695 = "\n         ";
var G__106696 = (function (){var G__106736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106737 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106736,G__106737) : tailrecursion.hoplon.span.call(null,G__106736,G__106737));
})();
var G__106697 = " ";
var G__106698 = (function (){var G__106738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106739 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106738,G__106739) : tailrecursion.hoplon.span.call(null,G__106738,G__106739));
})();
var G__106699 = "]\n    (";
var G__106700 = (function (){var G__106740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__106741 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106740,G__106741) : tailrecursion.hoplon.span.call(null,G__106740,G__106741));
})();
var G__106701 = "(";
var G__106702 = (function (){var G__106742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106743 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106742,G__106743) : tailrecursion.hoplon.span.call(null,G__106742,G__106743));
})();
var G__106703 = " ";
var G__106704 = (function (){var G__106744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106745 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106744,G__106745) : tailrecursion.hoplon.span.call(null,G__106744,G__106745));
})();
var G__106705 = ")\n        ";
var G__106706 = (function (){var G__106746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106747 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106746,G__106747) : tailrecursion.hoplon.span.call(null,G__106746,G__106747));
})();
var G__106707 = "\n        (";
var G__106708 = (function (){var G__106748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106749 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106748,G__106749) : tailrecursion.hoplon.span.call(null,G__106748,G__106749));
})();
var G__106709 = " (";
var G__106710 = (function (){var G__106750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106751 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106750,G__106751) : tailrecursion.hoplon.span.call(null,G__106750,G__106751));
})();
var G__106711 = " ";
var G__106712 = (function (){var G__106752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106753 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106752,G__106753) : tailrecursion.hoplon.span.call(null,G__106752,G__106753));
})();
var G__106713 = " (";
var G__106714 = (function (){var G__106754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106755 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106754,G__106755) : tailrecursion.hoplon.span.call(null,G__106754,G__106755));
})();
var G__106715 = (function (){var G__106756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106757 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106756,G__106757) : tailrecursion.hoplon.span.call(null,G__106756,G__106757));
})();
var G__106716 = "))\n               (";
var G__106717 = (function (){var G__106758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106759 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106758,G__106759) : tailrecursion.hoplon.span.call(null,G__106758,G__106759));
})();
var G__106718 = (function (){var G__106760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106761 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106760,G__106761) : tailrecursion.hoplon.span.call(null,G__106760,G__106761));
})();
var G__106719 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__106679,G__106680,G__106681,G__106682,G__106683,G__106684,G__106685,G__106686,G__106687,G__106688,G__106689,G__106690,G__106691,G__106692,G__106693,G__106694,G__106695,G__106696,G__106697,G__106698,G__106699,G__106700,G__106701,G__106702,G__106703,G__106704,G__106705,G__106706,G__106707,G__106708,G__106709,G__106710,G__106711,G__106712,G__106713,G__106714,G__106715,G__106716,G__106717,G__106718,G__106719) : tailrecursion.hoplon.pre.call(null,G__106679,G__106680,G__106681,G__106682,G__106683,G__106684,G__106685,G__106686,G__106687,G__106688,G__106689,G__106690,G__106691,G__106692,G__106693,G__106694,G__106695,G__106696,G__106697,G__106698,G__106699,G__106700,G__106701,G__106702,G__106703,G__106704,G__106705,G__106706,G__106707,G__106708,G__106709,G__106710,G__106711,G__106712,G__106713,G__106714,G__106715,G__106716,G__106717,G__106718,G__106719));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106677,G__106678) : tailrecursion.hoplon.div.call(null,G__106677,G__106678));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106676) : tailrecursion.hoplon.div.call(null,G__106676));
})(),(function (){var G__106762 = cljs.core.PersistentArrayMap.EMPTY;
var G__106763 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__106762,G__106763) : tailrecursion.hoplon.markdown.para_node.call(null,G__106762,G__106763));
})(),(function (){var G__106764 = (function (){var G__106765 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106766 = (function (){var G__106767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106768 = "(";
var G__106769 = (function (){var G__106781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106782 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106781,G__106782) : tailrecursion.hoplon.span.call(null,G__106781,G__106782));
})();
var G__106770 = " ";
var G__106771 = (function (){var G__106783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106784 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106783,G__106784) : tailrecursion.hoplon.span.call(null,G__106783,G__106784));
})();
var G__106772 = (function (){var G__106785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106786 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106785,G__106786) : tailrecursion.hoplon.span.call(null,G__106785,G__106786));
})();
var G__106773 = " (";
var G__106774 = (function (){var G__106787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106788 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106787,G__106788) : tailrecursion.hoplon.span.call(null,G__106787,G__106788));
})();
var G__106775 = (function (){var G__106789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106790 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106789,G__106790) : tailrecursion.hoplon.span.call(null,G__106789,G__106790));
})();
var G__106776 = " ";
var G__106777 = (function (){var G__106791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106792 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106791,G__106792) : tailrecursion.hoplon.span.call(null,G__106791,G__106792));
})();
var G__106778 = " ";
var G__106779 = (function (){var G__106793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106794 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106793,G__106794) : tailrecursion.hoplon.span.call(null,G__106793,G__106794));
})();
var G__106780 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__106767,G__106768,G__106769,G__106770,G__106771,G__106772,G__106773,G__106774,G__106775,G__106776,G__106777,G__106778,G__106779,G__106780) : tailrecursion.hoplon.pre.call(null,G__106767,G__106768,G__106769,G__106770,G__106771,G__106772,G__106773,G__106774,G__106775,G__106776,G__106777,G__106778,G__106779,G__106780));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106765,G__106766) : tailrecursion.hoplon.div.call(null,G__106765,G__106766));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106764) : tailrecursion.hoplon.div.call(null,G__106764));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106665;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106664;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106663;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106662;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106795 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106796 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106797 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106798 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106799 = (function (){var G__106800 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106801 = (function (){var G__106802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106803 = "(";
var G__106804 = (function (){var G__106865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106866 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106865,G__106866) : tailrecursion.hoplon.span.call(null,G__106865,G__106866));
})();
var G__106805 = " ";
var G__106806 = (function (){var G__106867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106868 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106867,G__106868) : tailrecursion.hoplon.span.call(null,G__106867,G__106868));
})();
var G__106807 = (function (){var G__106869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106870 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106869,G__106870) : tailrecursion.hoplon.span.call(null,G__106869,G__106870));
})();
var G__106808 = " (";
var G__106809 = (function (){var G__106871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106872 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106871,G__106872) : tailrecursion.hoplon.span.call(null,G__106871,G__106872));
})();
var G__106810 = (function (){var G__106873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106874 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106873,G__106874) : tailrecursion.hoplon.span.call(null,G__106873,G__106874));
})();
var G__106811 = " ";
var G__106812 = (function (){var G__106875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106876 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106875,G__106876) : tailrecursion.hoplon.span.call(null,G__106875,G__106876));
})();
var G__106813 = " ";
var G__106814 = (function (){var G__106877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106878 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106877,G__106878) : tailrecursion.hoplon.span.call(null,G__106877,G__106878));
})();
var G__106815 = "))\n(";
var G__106816 = (function (){var G__106879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106880 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106879,G__106880) : tailrecursion.hoplon.span.call(null,G__106879,G__106880));
})();
var G__106817 = (function (){var G__106881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106882 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106881,G__106882) : tailrecursion.hoplon.span.call(null,G__106881,G__106882));
})();
var G__106818 = " (";
var G__106819 = (function (){var G__106883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106884 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106883,G__106884) : tailrecursion.hoplon.span.call(null,G__106883,G__106884));
})();
var G__106820 = " ";
var G__106821 = (function (){var G__106885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106886 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106885,G__106886) : tailrecursion.hoplon.span.call(null,G__106885,G__106886));
})();
var G__106822 = (function (){var G__106887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106888 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106887,G__106888) : tailrecursion.hoplon.span.call(null,G__106887,G__106888));
})();
var G__106823 = " (";
var G__106824 = (function (){var G__106889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106890 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106889,G__106890) : tailrecursion.hoplon.span.call(null,G__106889,G__106890));
})();
var G__106825 = (function (){var G__106891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106892 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106891,G__106892) : tailrecursion.hoplon.span.call(null,G__106891,G__106892));
})();
var G__106826 = " ";
var G__106827 = (function (){var G__106893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106894 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106893,G__106894) : tailrecursion.hoplon.span.call(null,G__106893,G__106894));
})();
var G__106828 = ")))\n(";
var G__106829 = (function (){var G__106895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106896 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106895,G__106896) : tailrecursion.hoplon.span.call(null,G__106895,G__106896));
})();
var G__106830 = (function (){var G__106897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106898 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106897,G__106898) : tailrecursion.hoplon.span.call(null,G__106897,G__106898));
})();
var G__106831 = " (";
var G__106832 = (function (){var G__106899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106900 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106899,G__106900) : tailrecursion.hoplon.span.call(null,G__106899,G__106900));
})();
var G__106833 = (function (){var G__106901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106902 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106901,G__106902) : tailrecursion.hoplon.span.call(null,G__106901,G__106902));
})();
var G__106834 = " (";
var G__106835 = (function (){var G__106903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106904 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106903,G__106904) : tailrecursion.hoplon.span.call(null,G__106903,G__106904));
})();
var G__106836 = " ";
var G__106837 = (function (){var G__106905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106906 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106905,G__106906) : tailrecursion.hoplon.span.call(null,G__106905,G__106906));
})();
var G__106838 = (function (){var G__106907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106908 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106907,G__106908) : tailrecursion.hoplon.span.call(null,G__106907,G__106908));
})();
var G__106839 = " (";
var G__106840 = (function (){var G__106909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106910 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106909,G__106910) : tailrecursion.hoplon.span.call(null,G__106909,G__106910));
})();
var G__106841 = (function (){var G__106911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106912 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106911,G__106912) : tailrecursion.hoplon.span.call(null,G__106911,G__106912));
})();
var G__106842 = "))))\n(";
var G__106843 = (function (){var G__106913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106914 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106913,G__106914) : tailrecursion.hoplon.span.call(null,G__106913,G__106914));
})();
var G__106844 = (function (){var G__106915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106916 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106915,G__106916) : tailrecursion.hoplon.span.call(null,G__106915,G__106916));
})();
var G__106845 = " (";
var G__106846 = (function (){var G__106917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106918 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106917,G__106918) : tailrecursion.hoplon.span.call(null,G__106917,G__106918));
})();
var G__106847 = (function (){var G__106919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106920 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106919,G__106920) : tailrecursion.hoplon.span.call(null,G__106919,G__106920));
})();
var G__106848 = " (";
var G__106849 = (function (){var G__106921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106922 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106921,G__106922) : tailrecursion.hoplon.span.call(null,G__106921,G__106922));
})();
var G__106850 = (function (){var G__106923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106924 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106923,G__106924) : tailrecursion.hoplon.span.call(null,G__106923,G__106924));
})();
var G__106851 = " ";
var G__106852 = (function (){var G__106925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106926 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106925,G__106926) : tailrecursion.hoplon.span.call(null,G__106925,G__106926));
})();
var G__106853 = ")))\n(";
var G__106854 = (function (){var G__106927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106928 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106927,G__106928) : tailrecursion.hoplon.span.call(null,G__106927,G__106928));
})();
var G__106855 = (function (){var G__106929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106930 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106929,G__106930) : tailrecursion.hoplon.span.call(null,G__106929,G__106930));
})();
var G__106856 = " (";
var G__106857 = (function (){var G__106931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106932 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106931,G__106932) : tailrecursion.hoplon.span.call(null,G__106931,G__106932));
})();
var G__106858 = (function (){var G__106933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106934 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106933,G__106934) : tailrecursion.hoplon.span.call(null,G__106933,G__106934));
})();
var G__106859 = " ";
var G__106860 = (function (){var G__106935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106936 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106935,G__106936) : tailrecursion.hoplon.span.call(null,G__106935,G__106936));
})();
var G__106861 = "))\n";
var G__106862 = (function (){var G__106937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106938 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106937,G__106938) : tailrecursion.hoplon.span.call(null,G__106937,G__106938));
})();
var G__106863 = (function (){var G__106939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__106940 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106939,G__106940) : tailrecursion.hoplon.span.call(null,G__106939,G__106940));
})();
var G__106864 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__106802,G__106803,G__106804,G__106805,G__106806,G__106807,G__106808,G__106809,G__106810,G__106811,G__106812,G__106813,G__106814,G__106815,G__106816,G__106817,G__106818,G__106819,G__106820,G__106821,G__106822,G__106823,G__106824,G__106825,G__106826,G__106827,G__106828,G__106829,G__106830,G__106831,G__106832,G__106833,G__106834,G__106835,G__106836,G__106837,G__106838,G__106839,G__106840,G__106841,G__106842,G__106843,G__106844,G__106845,G__106846,G__106847,G__106848,G__106849,G__106850,G__106851,G__106852,G__106853,G__106854,G__106855,G__106856,G__106857,G__106858,G__106859,G__106860,G__106861,G__106862,G__106863,G__106864) : tailrecursion.hoplon.pre.call(null,G__106802,G__106803,G__106804,G__106805,G__106806,G__106807,G__106808,G__106809,G__106810,G__106811,G__106812,G__106813,G__106814,G__106815,G__106816,G__106817,G__106818,G__106819,G__106820,G__106821,G__106822,G__106823,G__106824,G__106825,G__106826,G__106827,G__106828,G__106829,G__106830,G__106831,G__106832,G__106833,G__106834,G__106835,G__106836,G__106837,G__106838,G__106839,G__106840,G__106841,G__106842,G__106843,G__106844,G__106845,G__106846,G__106847,G__106848,G__106849,G__106850,G__106851,G__106852,G__106853,G__106854,G__106855,G__106856,G__106857,G__106858,G__106859,G__106860,G__106861,G__106862,G__106863,G__106864));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106800,G__106801) : tailrecursion.hoplon.div.call(null,G__106800,G__106801));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106799) : tailrecursion.hoplon.div.call(null,G__106799));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106798;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106797;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106796;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106795;
}})()], 0)),"",(function (){var _STAR_references_STAR_106941 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106942 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106943 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106944 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106945 = (function (){var G__106946 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106947 = (function (){var G__106948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106949 = "(";
var G__106950 = (function (){var G__106962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__106963 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106962,G__106963) : tailrecursion.hoplon.span.call(null,G__106962,G__106963));
})();
var G__106951 = " ";
var G__106952 = (function (){var G__106964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106965 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106964,G__106965) : tailrecursion.hoplon.span.call(null,G__106964,G__106965));
})();
var G__106953 = (function (){var G__106966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106967 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106966,G__106967) : tailrecursion.hoplon.span.call(null,G__106966,G__106967));
})();
var G__106954 = " (";
var G__106955 = (function (){var G__106968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__106969 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106968,G__106969) : tailrecursion.hoplon.span.call(null,G__106968,G__106969));
})();
var G__106956 = (function (){var G__106970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106971 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106970,G__106971) : tailrecursion.hoplon.span.call(null,G__106970,G__106971));
})();
var G__106957 = " ";
var G__106958 = (function (){var G__106972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106973 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106972,G__106973) : tailrecursion.hoplon.span.call(null,G__106972,G__106973));
})();
var G__106959 = " ";
var G__106960 = (function (){var G__106974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__106975 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__106974,G__106975) : tailrecursion.hoplon.span.call(null,G__106974,G__106975));
})();
var G__106961 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__106948,G__106949,G__106950,G__106951,G__106952,G__106953,G__106954,G__106955,G__106956,G__106957,G__106958,G__106959,G__106960,G__106961) : tailrecursion.hoplon.pre.call(null,G__106948,G__106949,G__106950,G__106951,G__106952,G__106953,G__106954,G__106955,G__106956,G__106957,G__106958,G__106959,G__106960,G__106961));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106946,G__106947) : tailrecursion.hoplon.div.call(null,G__106946,G__106947));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106945) : tailrecursion.hoplon.div.call(null,G__106945));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106944;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106943;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106942;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106941;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_106976 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106977 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_106978 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_106979 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__106980 = (function (){var G__106981 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__106982 = (function (){var G__106983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__106984 = "(";
var G__106985 = (function (){var G__107040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107041 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107040,G__107041) : tailrecursion.hoplon.span.call(null,G__107040,G__107041));
})();
var G__106986 = " ";
var G__106987 = (function (){var G__107042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107043 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107042,G__107043) : tailrecursion.hoplon.span.call(null,G__107042,G__107043));
})();
var G__106988 = (function (){var G__107044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107045 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107044,G__107045) : tailrecursion.hoplon.span.call(null,G__107044,G__107045));
})();
var G__106989 = " (";
var G__106990 = (function (){var G__107046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107047 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107046,G__107047) : tailrecursion.hoplon.span.call(null,G__107046,G__107047));
})();
var G__106991 = (function (){var G__107048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107049 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107048,G__107049) : tailrecursion.hoplon.span.call(null,G__107048,G__107049));
})();
var G__106992 = " ";
var G__106993 = (function (){var G__107050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107051 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107050,G__107051) : tailrecursion.hoplon.span.call(null,G__107050,G__107051));
})();
var G__106994 = " ";
var G__106995 = (function (){var G__107052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107053 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107052,G__107053) : tailrecursion.hoplon.span.call(null,G__107052,G__107053));
})();
var G__106996 = "))\n(";
var G__106997 = (function (){var G__107054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107055 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107054,G__107055) : tailrecursion.hoplon.span.call(null,G__107054,G__107055));
})();
var G__106998 = (function (){var G__107056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107057 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107056,G__107057) : tailrecursion.hoplon.span.call(null,G__107056,G__107057));
})();
var G__106999 = " (";
var G__107000 = (function (){var G__107058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107059 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107058,G__107059) : tailrecursion.hoplon.span.call(null,G__107058,G__107059));
})();
var G__107001 = (function (){var G__107060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107061 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107060,G__107061) : tailrecursion.hoplon.span.call(null,G__107060,G__107061));
})();
var G__107002 = " ";
var G__107003 = (function (){var G__107062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107063 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107062,G__107063) : tailrecursion.hoplon.span.call(null,G__107062,G__107063));
})();
var G__107004 = " ";
var G__107005 = (function (){var G__107064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107065 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107064,G__107065) : tailrecursion.hoplon.span.call(null,G__107064,G__107065));
})();
var G__107006 = "))\n(";
var G__107007 = (function (){var G__107066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107067 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107066,G__107067) : tailrecursion.hoplon.span.call(null,G__107066,G__107067));
})();
var G__107008 = (function (){var G__107068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107069 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107068,G__107069) : tailrecursion.hoplon.span.call(null,G__107068,G__107069));
})();
var G__107009 = (function (){var G__107070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107071 = "/1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107070,G__107071) : tailrecursion.hoplon.span.call(null,G__107070,G__107071));
})();
var G__107010 = " (";
var G__107011 = (function (){var G__107072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107073 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107072,G__107073) : tailrecursion.hoplon.span.call(null,G__107072,G__107073));
})();
var G__107012 = (function (){var G__107074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107075 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107074,G__107075) : tailrecursion.hoplon.span.call(null,G__107074,G__107075));
})();
var G__107013 = " ";
var G__107014 = (function (){var G__107076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107077 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107076,G__107077) : tailrecursion.hoplon.span.call(null,G__107076,G__107077));
})();
var G__107015 = "))\n(";
var G__107016 = (function (){var G__107078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107079 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107078,G__107079) : tailrecursion.hoplon.span.call(null,G__107078,G__107079));
})();
var G__107017 = (function (){var G__107080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107081 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107080,G__107081) : tailrecursion.hoplon.span.call(null,G__107080,G__107081));
})();
var G__107018 = " (";
var G__107019 = (function (){var G__107082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107083 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107082,G__107083) : tailrecursion.hoplon.span.call(null,G__107082,G__107083));
})();
var G__107020 = (function (){var G__107084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107085 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107084,G__107085) : tailrecursion.hoplon.span.call(null,G__107084,G__107085));
})();
var G__107021 = " ";
var G__107022 = (function (){var G__107086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107087 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107086,G__107087) : tailrecursion.hoplon.span.call(null,G__107086,G__107087));
})();
var G__107023 = "))\n(";
var G__107024 = (function (){var G__107088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107089 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107088,G__107089) : tailrecursion.hoplon.span.call(null,G__107088,G__107089));
})();
var G__107025 = (function (){var G__107090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107091 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107090,G__107091) : tailrecursion.hoplon.span.call(null,G__107090,G__107091));
})();
var G__107026 = (function (){var G__107092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107093 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107092,G__107093) : tailrecursion.hoplon.span.call(null,G__107092,G__107093));
})();
var G__107027 = " (";
var G__107028 = (function (){var G__107094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107095 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107094,G__107095) : tailrecursion.hoplon.span.call(null,G__107094,G__107095));
})();
var G__107029 = (function (){var G__107096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107097 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107096,G__107097) : tailrecursion.hoplon.span.call(null,G__107096,G__107097));
})();
var G__107030 = "))\n(";
var G__107031 = (function (){var G__107098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107099 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107098,G__107099) : tailrecursion.hoplon.span.call(null,G__107098,G__107099));
})();
var G__107032 = (function (){var G__107100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107101 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107100,G__107101) : tailrecursion.hoplon.span.call(null,G__107100,G__107101));
})();
var G__107033 = (function (){var G__107102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107103 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107102,G__107103) : tailrecursion.hoplon.span.call(null,G__107102,G__107103));
})();
var G__107034 = " (";
var G__107035 = (function (){var G__107104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107105 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107104,G__107105) : tailrecursion.hoplon.span.call(null,G__107104,G__107105));
})();
var G__107036 = "))\n";
var G__107037 = (function (){var G__107106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107107 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107106,G__107107) : tailrecursion.hoplon.span.call(null,G__107106,G__107107));
})();
var G__107038 = (function (){var G__107108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107109 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107108,G__107109) : tailrecursion.hoplon.span.call(null,G__107108,G__107109));
})();
var G__107039 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__106983,G__106984,G__106985,G__106986,G__106987,G__106988,G__106989,G__106990,G__106991,G__106992,G__106993,G__106994,G__106995,G__106996,G__106997,G__106998,G__106999,G__107000,G__107001,G__107002,G__107003,G__107004,G__107005,G__107006,G__107007,G__107008,G__107009,G__107010,G__107011,G__107012,G__107013,G__107014,G__107015,G__107016,G__107017,G__107018,G__107019,G__107020,G__107021,G__107022,G__107023,G__107024,G__107025,G__107026,G__107027,G__107028,G__107029,G__107030,G__107031,G__107032,G__107033,G__107034,G__107035,G__107036,G__107037,G__107038,G__107039) : tailrecursion.hoplon.pre.call(null,G__106983,G__106984,G__106985,G__106986,G__106987,G__106988,G__106989,G__106990,G__106991,G__106992,G__106993,G__106994,G__106995,G__106996,G__106997,G__106998,G__106999,G__107000,G__107001,G__107002,G__107003,G__107004,G__107005,G__107006,G__107007,G__107008,G__107009,G__107010,G__107011,G__107012,G__107013,G__107014,G__107015,G__107016,G__107017,G__107018,G__107019,G__107020,G__107021,G__107022,G__107023,G__107024,G__107025,G__107026,G__107027,G__107028,G__107029,G__107030,G__107031,G__107032,G__107033,G__107034,G__107035,G__107036,G__107037,G__107038,G__107039));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__106981,G__106982) : tailrecursion.hoplon.div.call(null,G__106981,G__106982));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__106980) : tailrecursion.hoplon.div.call(null,G__106980));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106979;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106978;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_106977;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_106976;
}})()], 0)),"",(function (){var _STAR_references_STAR_107110 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107111 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107112 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107113 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107114 = (function (){var G__107115 = "(fold-right list nil (list 1 2 3))\n";
return (tailrecursion.hoplon.code.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.code.cljs$core$IFn$_invoke$arity$1(G__107115) : tailrecursion.hoplon.code.call(null,G__107115));
})();
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$1(G__107114) : tailrecursion.hoplon.pre.call(null,G__107114));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107113;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107112;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107111;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107110;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107116 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107117 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107118 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107119 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107120 = (function (){var G__107121 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107122 = (function (){var G__107123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107124 = "(";
var G__107125 = (function (){var G__107199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107200 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107199,G__107200) : tailrecursion.hoplon.span.call(null,G__107199,G__107200));
})();
var G__107126 = " ";
var G__107127 = (function (){var G__107201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107202 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107201,G__107202) : tailrecursion.hoplon.span.call(null,G__107201,G__107202));
})();
var G__107128 = (function (){var G__107203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107204 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107203,G__107204) : tailrecursion.hoplon.span.call(null,G__107203,G__107204));
})();
var G__107129 = " (";
var G__107130 = (function (){var G__107205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107206 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107205,G__107206) : tailrecursion.hoplon.span.call(null,G__107205,G__107206));
})();
var G__107131 = (function (){var G__107207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107208 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107207,G__107208) : tailrecursion.hoplon.span.call(null,G__107207,G__107208));
})();
var G__107132 = " ";
var G__107133 = (function (){var G__107209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107210 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107209,G__107210) : tailrecursion.hoplon.span.call(null,G__107209,G__107210));
})();
var G__107134 = " ";
var G__107135 = (function (){var G__107211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107212 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107211,G__107212) : tailrecursion.hoplon.span.call(null,G__107211,G__107212));
})();
var G__107136 = "))\n(";
var G__107137 = (function (){var G__107213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107214 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107213,G__107214) : tailrecursion.hoplon.span.call(null,G__107213,G__107214));
})();
var G__107138 = (function (){var G__107215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107216 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107215,G__107216) : tailrecursion.hoplon.span.call(null,G__107215,G__107216));
})();
var G__107139 = " (";
var G__107140 = (function (){var G__107217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107218 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107217,G__107218) : tailrecursion.hoplon.span.call(null,G__107217,G__107218));
})();
var G__107141 = " ";
var G__107142 = (function (){var G__107219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107220 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107219,G__107220) : tailrecursion.hoplon.span.call(null,G__107219,G__107220));
})();
var G__107143 = (function (){var G__107221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107222 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107221,G__107222) : tailrecursion.hoplon.span.call(null,G__107221,G__107222));
})();
var G__107144 = " (";
var G__107145 = (function (){var G__107223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107224 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107223,G__107224) : tailrecursion.hoplon.span.call(null,G__107223,G__107224));
})();
var G__107146 = (function (){var G__107225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107226 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107225,G__107226) : tailrecursion.hoplon.span.call(null,G__107225,G__107226));
})();
var G__107147 = " ";
var G__107148 = (function (){var G__107227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107228 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107227,G__107228) : tailrecursion.hoplon.span.call(null,G__107227,G__107228));
})();
var G__107149 = ")))\n(";
var G__107150 = (function (){var G__107229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107230 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107229,G__107230) : tailrecursion.hoplon.span.call(null,G__107229,G__107230));
})();
var G__107151 = (function (){var G__107231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107232 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107231,G__107232) : tailrecursion.hoplon.span.call(null,G__107231,G__107232));
})();
var G__107152 = " (";
var G__107153 = (function (){var G__107233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107234 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107233,G__107234) : tailrecursion.hoplon.span.call(null,G__107233,G__107234));
})();
var G__107154 = (function (){var G__107235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107236 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107235,G__107236) : tailrecursion.hoplon.span.call(null,G__107235,G__107236));
})();
var G__107155 = " (";
var G__107156 = (function (){var G__107237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107238 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107237,G__107238) : tailrecursion.hoplon.span.call(null,G__107237,G__107238));
})();
var G__107157 = " ";
var G__107158 = (function (){var G__107239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107240 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107239,G__107240) : tailrecursion.hoplon.span.call(null,G__107239,G__107240));
})();
var G__107159 = (function (){var G__107241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107242 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107241,G__107242) : tailrecursion.hoplon.span.call(null,G__107241,G__107242));
})();
var G__107160 = " (";
var G__107161 = (function (){var G__107243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107244 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107243,G__107244) : tailrecursion.hoplon.span.call(null,G__107243,G__107244));
})();
var G__107162 = (function (){var G__107245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107246 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107245,G__107246) : tailrecursion.hoplon.span.call(null,G__107245,G__107246));
})();
var G__107163 = "))))\n(";
var G__107164 = (function (){var G__107247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107248 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107247,G__107248) : tailrecursion.hoplon.span.call(null,G__107247,G__107248));
})();
var G__107165 = (function (){var G__107249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107250 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107249,G__107250) : tailrecursion.hoplon.span.call(null,G__107249,G__107250));
})();
var G__107166 = " (";
var G__107167 = (function (){var G__107251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107252 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107251,G__107252) : tailrecursion.hoplon.span.call(null,G__107251,G__107252));
})();
var G__107168 = (function (){var G__107253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107254 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107253,G__107254) : tailrecursion.hoplon.span.call(null,G__107253,G__107254));
})();
var G__107169 = " (";
var G__107170 = (function (){var G__107255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107256 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107255,G__107256) : tailrecursion.hoplon.span.call(null,G__107255,G__107256));
})();
var G__107171 = (function (){var G__107257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107258 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107257,G__107258) : tailrecursion.hoplon.span.call(null,G__107257,G__107258));
})();
var G__107172 = " (";
var G__107173 = (function (){var G__107259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107260 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107259,G__107260) : tailrecursion.hoplon.span.call(null,G__107259,G__107260));
})();
var G__107174 = " ";
var G__107175 = (function (){var G__107261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107262 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107261,G__107262) : tailrecursion.hoplon.span.call(null,G__107261,G__107262));
})();
var G__107176 = (function (){var G__107263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107264 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107263,G__107264) : tailrecursion.hoplon.span.call(null,G__107263,G__107264));
})();
var G__107177 = " (";
var G__107178 = (function (){var G__107265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107266 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107265,G__107266) : tailrecursion.hoplon.span.call(null,G__107265,G__107266));
})();
var G__107179 = ")))))\n(";
var G__107180 = (function (){var G__107267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107268 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107267,G__107268) : tailrecursion.hoplon.span.call(null,G__107267,G__107268));
})();
var G__107181 = (function (){var G__107269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107270 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107269,G__107270) : tailrecursion.hoplon.span.call(null,G__107269,G__107270));
})();
var G__107182 = " (";
var G__107183 = (function (){var G__107271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107272 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107271,G__107272) : tailrecursion.hoplon.span.call(null,G__107271,G__107272));
})();
var G__107184 = (function (){var G__107273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107274 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107273,G__107274) : tailrecursion.hoplon.span.call(null,G__107273,G__107274));
})();
var G__107185 = " (";
var G__107186 = (function (){var G__107275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107276 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107275,G__107276) : tailrecursion.hoplon.span.call(null,G__107275,G__107276));
})();
var G__107187 = (function (){var G__107277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107278 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107277,G__107278) : tailrecursion.hoplon.span.call(null,G__107277,G__107278));
})();
var G__107188 = " ";
var G__107189 = (function (){var G__107279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107280 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107279,G__107280) : tailrecursion.hoplon.span.call(null,G__107279,G__107280));
})();
var G__107190 = ")))\n(";
var G__107191 = (function (){var G__107281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107282 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107281,G__107282) : tailrecursion.hoplon.span.call(null,G__107281,G__107282));
})();
var G__107192 = " (";
var G__107193 = (function (){var G__107283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107284 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107283,G__107284) : tailrecursion.hoplon.span.call(null,G__107283,G__107284));
})();
var G__107194 = " (";
var G__107195 = (function (){var G__107285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107286 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107285,G__107286) : tailrecursion.hoplon.span.call(null,G__107285,G__107286));
})();
var G__107196 = " ";
var G__107197 = (function (){var G__107287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107288 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107287,G__107288) : tailrecursion.hoplon.span.call(null,G__107287,G__107288));
})();
var G__107198 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__107123,G__107124,G__107125,G__107126,G__107127,G__107128,G__107129,G__107130,G__107131,G__107132,G__107133,G__107134,G__107135,G__107136,G__107137,G__107138,G__107139,G__107140,G__107141,G__107142,G__107143,G__107144,G__107145,G__107146,G__107147,G__107148,G__107149,G__107150,G__107151,G__107152,G__107153,G__107154,G__107155,G__107156,G__107157,G__107158,G__107159,G__107160,G__107161,G__107162,G__107163,G__107164,G__107165,G__107166,G__107167,G__107168,G__107169,G__107170,G__107171,G__107172,G__107173,G__107174,G__107175,G__107176,G__107177,G__107178,G__107179,G__107180,G__107181,G__107182,G__107183,G__107184,G__107185,G__107186,G__107187,G__107188,G__107189,G__107190,G__107191,G__107192,G__107193,G__107194,G__107195,G__107196,G__107197,G__107198) : tailrecursion.hoplon.pre.call(null,G__107123,G__107124,G__107125,G__107126,G__107127,G__107128,G__107129,G__107130,G__107131,G__107132,G__107133,G__107134,G__107135,G__107136,G__107137,G__107138,G__107139,G__107140,G__107141,G__107142,G__107143,G__107144,G__107145,G__107146,G__107147,G__107148,G__107149,G__107150,G__107151,G__107152,G__107153,G__107154,G__107155,G__107156,G__107157,G__107158,G__107159,G__107160,G__107161,G__107162,G__107163,G__107164,G__107165,G__107166,G__107167,G__107168,G__107169,G__107170,G__107171,G__107172,G__107173,G__107174,G__107175,G__107176,G__107177,G__107178,G__107179,G__107180,G__107181,G__107182,G__107183,G__107184,G__107185,G__107186,G__107187,G__107188,G__107189,G__107190,G__107191,G__107192,G__107193,G__107194,G__107195,G__107196,G__107197,G__107198));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107121,G__107122) : tailrecursion.hoplon.div.call(null,G__107121,G__107122));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107120) : tailrecursion.hoplon.div.call(null,G__107120));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107119;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107118;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107117;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107116;
}})()], 0)),"",(function (){var _STAR_references_STAR_107289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107291 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107292 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107293 = (function (){var G__107294 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107295 = (function (){var G__107296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107297 = "(";
var G__107298 = (function (){var G__107310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107311 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107310,G__107311) : tailrecursion.hoplon.span.call(null,G__107310,G__107311));
})();
var G__107299 = " ";
var G__107300 = (function (){var G__107312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107313 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107312,G__107313) : tailrecursion.hoplon.span.call(null,G__107312,G__107313));
})();
var G__107301 = (function (){var G__107314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107315 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107314,G__107315) : tailrecursion.hoplon.span.call(null,G__107314,G__107315));
})();
var G__107302 = " (";
var G__107303 = (function (){var G__107316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107317 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107316,G__107317) : tailrecursion.hoplon.span.call(null,G__107316,G__107317));
})();
var G__107304 = (function (){var G__107318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107319 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107318,G__107319) : tailrecursion.hoplon.span.call(null,G__107318,G__107319));
})();
var G__107305 = " ";
var G__107306 = (function (){var G__107320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107321 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107320,G__107321) : tailrecursion.hoplon.span.call(null,G__107320,G__107321));
})();
var G__107307 = " ";
var G__107308 = (function (){var G__107322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107323 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107322,G__107323) : tailrecursion.hoplon.span.call(null,G__107322,G__107323));
})();
var G__107309 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__107296,G__107297,G__107298,G__107299,G__107300,G__107301,G__107302,G__107303,G__107304,G__107305,G__107306,G__107307,G__107308,G__107309) : tailrecursion.hoplon.pre.call(null,G__107296,G__107297,G__107298,G__107299,G__107300,G__107301,G__107302,G__107303,G__107304,G__107305,G__107306,G__107307,G__107308,G__107309));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107294,G__107295) : tailrecursion.hoplon.div.call(null,G__107294,G__107295));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107293) : tailrecursion.hoplon.div.call(null,G__107293));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107292;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107291;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107289;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107324 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107325 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107326 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107327 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107328 = (function (){var G__107329 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107330 = (function (){var G__107331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107332 = "(";
var G__107333 = (function (){var G__107406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107407 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107406,G__107407) : tailrecursion.hoplon.span.call(null,G__107406,G__107407));
})();
var G__107334 = " ";
var G__107335 = (function (){var G__107408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107409 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107408,G__107409) : tailrecursion.hoplon.span.call(null,G__107408,G__107409));
})();
var G__107336 = (function (){var G__107410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107411 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107410,G__107411) : tailrecursion.hoplon.span.call(null,G__107410,G__107411));
})();
var G__107337 = " (";
var G__107338 = (function (){var G__107412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107413 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107412,G__107413) : tailrecursion.hoplon.span.call(null,G__107412,G__107413));
})();
var G__107339 = (function (){var G__107414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107415 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107414,G__107415) : tailrecursion.hoplon.span.call(null,G__107414,G__107415));
})();
var G__107340 = " ";
var G__107341 = (function (){var G__107416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107417 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107416,G__107417) : tailrecursion.hoplon.span.call(null,G__107416,G__107417));
})();
var G__107342 = " ";
var G__107343 = (function (){var G__107418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107419 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107418,G__107419) : tailrecursion.hoplon.span.call(null,G__107418,G__107419));
})();
var G__107344 = "))\n(";
var G__107345 = (function (){var G__107420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107421 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107420,G__107421) : tailrecursion.hoplon.span.call(null,G__107420,G__107421));
})();
var G__107346 = (function (){var G__107422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107423 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107422,G__107423) : tailrecursion.hoplon.span.call(null,G__107422,G__107423));
})();
var G__107347 = " (";
var G__107348 = (function (){var G__107424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107425 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107424,G__107425) : tailrecursion.hoplon.span.call(null,G__107424,G__107425));
})();
var G__107349 = (function (){var G__107426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107427 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107426,G__107427) : tailrecursion.hoplon.span.call(null,G__107426,G__107427));
})();
var G__107350 = " ";
var G__107351 = (function (){var G__107428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107429 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107428,G__107429) : tailrecursion.hoplon.span.call(null,G__107428,G__107429));
})();
var G__107352 = " ";
var G__107353 = (function (){var G__107430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107431 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107430,G__107431) : tailrecursion.hoplon.span.call(null,G__107430,G__107431));
})();
var G__107354 = "))\n(";
var G__107355 = (function (){var G__107432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107433 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107432,G__107433) : tailrecursion.hoplon.span.call(null,G__107432,G__107433));
})();
var G__107356 = "(";
var G__107357 = (function (){var G__107434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107435 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107434,G__107435) : tailrecursion.hoplon.span.call(null,G__107434,G__107435));
})();
var G__107358 = (function (){var G__107436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107437 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107436,G__107437) : tailrecursion.hoplon.span.call(null,G__107436,G__107437));
})();
var G__107359 = " ";
var G__107360 = (function (){var G__107438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107439 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107438,G__107439) : tailrecursion.hoplon.span.call(null,G__107438,G__107439));
})();
var G__107361 = ") (";
var G__107362 = (function (){var G__107440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107441 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107440,G__107441) : tailrecursion.hoplon.span.call(null,G__107440,G__107441));
})();
var G__107363 = (function (){var G__107442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107443 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107442,G__107443) : tailrecursion.hoplon.span.call(null,G__107442,G__107443));
})();
var G__107364 = " ";
var G__107365 = (function (){var G__107444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107445 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107444,G__107445) : tailrecursion.hoplon.span.call(null,G__107444,G__107445));
})();
var G__107366 = "))\n(";
var G__107367 = (function (){var G__107446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107447 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107446,G__107447) : tailrecursion.hoplon.span.call(null,G__107446,G__107447));
})();
var G__107368 = "(";
var G__107369 = (function (){var G__107448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107449 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107448,G__107449) : tailrecursion.hoplon.span.call(null,G__107448,G__107449));
})();
var G__107370 = "(";
var G__107371 = (function (){var G__107450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107451 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107450,G__107451) : tailrecursion.hoplon.span.call(null,G__107450,G__107451));
})();
var G__107372 = (function (){var G__107452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107453 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107452,G__107453) : tailrecursion.hoplon.span.call(null,G__107452,G__107453));
})();
var G__107373 = " ";
var G__107374 = (function (){var G__107454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107455 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107454,G__107455) : tailrecursion.hoplon.span.call(null,G__107454,G__107455));
})();
var G__107375 = ") ";
var G__107376 = (function (){var G__107456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107457 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107456,G__107457) : tailrecursion.hoplon.span.call(null,G__107456,G__107457));
})();
var G__107377 = ") (";
var G__107378 = (function (){var G__107458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107459 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107458,G__107459) : tailrecursion.hoplon.span.call(null,G__107458,G__107459));
})();
var G__107379 = (function (){var G__107460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107461 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107460,G__107461) : tailrecursion.hoplon.span.call(null,G__107460,G__107461));
})();
var G__107380 = "))\n(";
var G__107381 = (function (){var G__107462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107463 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107462,G__107463) : tailrecursion.hoplon.span.call(null,G__107462,G__107463));
})();
var G__107382 = "(";
var G__107383 = (function (){var G__107464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107465 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107464,G__107465) : tailrecursion.hoplon.span.call(null,G__107464,G__107465));
})();
var G__107384 = "(";
var G__107385 = (function (){var G__107466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107467 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107466,G__107467) : tailrecursion.hoplon.span.call(null,G__107466,G__107467));
})();
var G__107386 = "(";
var G__107387 = (function (){var G__107468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107469 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107468,G__107469) : tailrecursion.hoplon.span.call(null,G__107468,G__107469));
})();
var G__107388 = (function (){var G__107470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107471 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107470,G__107471) : tailrecursion.hoplon.span.call(null,G__107470,G__107471));
})();
var G__107389 = " ";
var G__107390 = (function (){var G__107472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107473 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107472,G__107473) : tailrecursion.hoplon.span.call(null,G__107472,G__107473));
})();
var G__107391 = ") ";
var G__107392 = (function (){var G__107474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107475 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107474,G__107475) : tailrecursion.hoplon.span.call(null,G__107474,G__107475));
})();
var G__107393 = ") ";
var G__107394 = (function (){var G__107476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107477 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107476,G__107477) : tailrecursion.hoplon.span.call(null,G__107476,G__107477));
})();
var G__107395 = ") (";
var G__107396 = (function (){var G__107478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107479 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107478,G__107479) : tailrecursion.hoplon.span.call(null,G__107478,G__107479));
})();
var G__107397 = "))\n(((";
var G__107398 = (function (){var G__107480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107481 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107480,G__107481) : tailrecursion.hoplon.span.call(null,G__107480,G__107481));
})();
var G__107399 = " ";
var G__107400 = (function (){var G__107482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107483 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107482,G__107483) : tailrecursion.hoplon.span.call(null,G__107482,G__107483));
})();
var G__107401 = ") ";
var G__107402 = (function (){var G__107484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107485 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107484,G__107485) : tailrecursion.hoplon.span.call(null,G__107484,G__107485));
})();
var G__107403 = ") ";
var G__107404 = (function (){var G__107486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107487 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107486,G__107487) : tailrecursion.hoplon.span.call(null,G__107486,G__107487));
})();
var G__107405 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$75 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$75(G__107331,G__107332,G__107333,G__107334,G__107335,G__107336,G__107337,G__107338,G__107339,G__107340,G__107341,G__107342,G__107343,G__107344,G__107345,G__107346,G__107347,G__107348,G__107349,G__107350,G__107351,G__107352,G__107353,G__107354,G__107355,G__107356,G__107357,G__107358,G__107359,G__107360,G__107361,G__107362,G__107363,G__107364,G__107365,G__107366,G__107367,G__107368,G__107369,G__107370,G__107371,G__107372,G__107373,G__107374,G__107375,G__107376,G__107377,G__107378,G__107379,G__107380,G__107381,G__107382,G__107383,G__107384,G__107385,G__107386,G__107387,G__107388,G__107389,G__107390,G__107391,G__107392,G__107393,G__107394,G__107395,G__107396,G__107397,G__107398,G__107399,G__107400,G__107401,G__107402,G__107403,G__107404,G__107405) : tailrecursion.hoplon.pre.call(null,G__107331,G__107332,G__107333,G__107334,G__107335,G__107336,G__107337,G__107338,G__107339,G__107340,G__107341,G__107342,G__107343,G__107344,G__107345,G__107346,G__107347,G__107348,G__107349,G__107350,G__107351,G__107352,G__107353,G__107354,G__107355,G__107356,G__107357,G__107358,G__107359,G__107360,G__107361,G__107362,G__107363,G__107364,G__107365,G__107366,G__107367,G__107368,G__107369,G__107370,G__107371,G__107372,G__107373,G__107374,G__107375,G__107376,G__107377,G__107378,G__107379,G__107380,G__107381,G__107382,G__107383,G__107384,G__107385,G__107386,G__107387,G__107388,G__107389,G__107390,G__107391,G__107392,G__107393,G__107394,G__107395,G__107396,G__107397,G__107398,G__107399,G__107400,G__107401,G__107402,G__107403,G__107404,G__107405));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107329,G__107330) : tailrecursion.hoplon.div.call(null,G__107329,G__107330));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107328) : tailrecursion.hoplon.div.call(null,G__107328));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107327;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107326;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107325;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107324;
}})()], 0)),"",(function (){var _STAR_references_STAR_107488 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107489 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107490 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107491 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107492 = (function (){var G__107493 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107494 = (function (){var G__107495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107496 = "(";
var G__107497 = (function (){var G__107509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107510 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107509,G__107510) : tailrecursion.hoplon.span.call(null,G__107509,G__107510));
})();
var G__107498 = " ";
var G__107499 = (function (){var G__107511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107512 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107511,G__107512) : tailrecursion.hoplon.span.call(null,G__107511,G__107512));
})();
var G__107500 = (function (){var G__107513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107514 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107513,G__107514) : tailrecursion.hoplon.span.call(null,G__107513,G__107514));
})();
var G__107501 = " (";
var G__107502 = (function (){var G__107515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107516 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107515,G__107516) : tailrecursion.hoplon.span.call(null,G__107515,G__107516));
})();
var G__107503 = (function (){var G__107517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107518 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107517,G__107518) : tailrecursion.hoplon.span.call(null,G__107517,G__107518));
})();
var G__107504 = " ";
var G__107505 = (function (){var G__107519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107520 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107519,G__107520) : tailrecursion.hoplon.span.call(null,G__107519,G__107520));
})();
var G__107506 = " ";
var G__107507 = (function (){var G__107521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107522 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107521,G__107522) : tailrecursion.hoplon.span.call(null,G__107521,G__107522));
})();
var G__107508 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__107495,G__107496,G__107497,G__107498,G__107499,G__107500,G__107501,G__107502,G__107503,G__107504,G__107505,G__107506,G__107507,G__107508) : tailrecursion.hoplon.pre.call(null,G__107495,G__107496,G__107497,G__107498,G__107499,G__107500,G__107501,G__107502,G__107503,G__107504,G__107505,G__107506,G__107507,G__107508));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107493,G__107494) : tailrecursion.hoplon.div.call(null,G__107493,G__107494));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107492) : tailrecursion.hoplon.div.call(null,G__107492));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107491;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107490;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107489;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107488;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107523 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107524 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107525 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107526 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107527 = (function (){var G__107528 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107529 = (function (){var G__107530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107531 = "(";
var G__107532 = (function (){var G__107604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107605 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107604,G__107605) : tailrecursion.hoplon.span.call(null,G__107604,G__107605));
})();
var G__107533 = " ";
var G__107534 = (function (){var G__107606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107607 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107606,G__107607) : tailrecursion.hoplon.span.call(null,G__107606,G__107607));
})();
var G__107535 = (function (){var G__107608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107609 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107608,G__107609) : tailrecursion.hoplon.span.call(null,G__107608,G__107609));
})();
var G__107536 = " (";
var G__107537 = (function (){var G__107610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107611 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107610,G__107611) : tailrecursion.hoplon.span.call(null,G__107610,G__107611));
})();
var G__107538 = (function (){var G__107612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107613 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107612,G__107613) : tailrecursion.hoplon.span.call(null,G__107612,G__107613));
})();
var G__107539 = " ";
var G__107540 = (function (){var G__107614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107615 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107614,G__107615) : tailrecursion.hoplon.span.call(null,G__107614,G__107615));
})();
var G__107541 = " ";
var G__107542 = (function (){var G__107616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107617 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107616,G__107617) : tailrecursion.hoplon.span.call(null,G__107616,G__107617));
})();
var G__107543 = "))\n(";
var G__107544 = (function (){var G__107618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107619 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107618,G__107619) : tailrecursion.hoplon.span.call(null,G__107618,G__107619));
})();
var G__107545 = (function (){var G__107620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107621 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107620,G__107621) : tailrecursion.hoplon.span.call(null,G__107620,G__107621));
})();
var G__107546 = " (";
var G__107547 = (function (){var G__107622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107623 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107622,G__107623) : tailrecursion.hoplon.span.call(null,G__107622,G__107623));
})();
var G__107548 = " ";
var G__107549 = (function (){var G__107624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107625 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107624,G__107625) : tailrecursion.hoplon.span.call(null,G__107624,G__107625));
})();
var G__107550 = (function (){var G__107626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107627 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107626,G__107627) : tailrecursion.hoplon.span.call(null,G__107626,G__107627));
})();
var G__107551 = " (";
var G__107552 = (function (){var G__107628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107629 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107628,G__107629) : tailrecursion.hoplon.span.call(null,G__107628,G__107629));
})();
var G__107553 = (function (){var G__107630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107631 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107630,G__107631) : tailrecursion.hoplon.span.call(null,G__107630,G__107631));
})();
var G__107554 = " ";
var G__107555 = (function (){var G__107632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107633 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107632,G__107633) : tailrecursion.hoplon.span.call(null,G__107632,G__107633));
})();
var G__107556 = ")))\n(";
var G__107557 = (function (){var G__107634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107635 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107634,G__107635) : tailrecursion.hoplon.span.call(null,G__107634,G__107635));
})();
var G__107558 = (function (){var G__107636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107637 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107636,G__107637) : tailrecursion.hoplon.span.call(null,G__107636,G__107637));
})();
var G__107559 = " (";
var G__107560 = (function (){var G__107638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107639 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107638,G__107639) : tailrecursion.hoplon.span.call(null,G__107638,G__107639));
})();
var G__107561 = (function (){var G__107640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107641 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107640,G__107641) : tailrecursion.hoplon.span.call(null,G__107640,G__107641));
})();
var G__107562 = " (";
var G__107563 = (function (){var G__107642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107643 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107642,G__107643) : tailrecursion.hoplon.span.call(null,G__107642,G__107643));
})();
var G__107564 = " ";
var G__107565 = (function (){var G__107644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107645 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107644,G__107645) : tailrecursion.hoplon.span.call(null,G__107644,G__107645));
})();
var G__107566 = (function (){var G__107646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107647 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107646,G__107647) : tailrecursion.hoplon.span.call(null,G__107646,G__107647));
})();
var G__107567 = " (";
var G__107568 = (function (){var G__107648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107649 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107648,G__107649) : tailrecursion.hoplon.span.call(null,G__107648,G__107649));
})();
var G__107569 = (function (){var G__107650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107651 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107650,G__107651) : tailrecursion.hoplon.span.call(null,G__107650,G__107651));
})();
var G__107570 = "))))\n(";
var G__107571 = (function (){var G__107652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107653 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107652,G__107653) : tailrecursion.hoplon.span.call(null,G__107652,G__107653));
})();
var G__107572 = (function (){var G__107654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107655 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107654,G__107655) : tailrecursion.hoplon.span.call(null,G__107654,G__107655));
})();
var G__107573 = " (";
var G__107574 = (function (){var G__107656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107657 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107656,G__107657) : tailrecursion.hoplon.span.call(null,G__107656,G__107657));
})();
var G__107575 = (function (){var G__107658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107659 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107658,G__107659) : tailrecursion.hoplon.span.call(null,G__107658,G__107659));
})();
var G__107576 = " (";
var G__107577 = (function (){var G__107660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107661 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107660,G__107661) : tailrecursion.hoplon.span.call(null,G__107660,G__107661));
})();
var G__107578 = (function (){var G__107662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107663 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107662,G__107663) : tailrecursion.hoplon.span.call(null,G__107662,G__107663));
})();
var G__107579 = " (";
var G__107580 = (function (){var G__107664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107665 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107664,G__107665) : tailrecursion.hoplon.span.call(null,G__107664,G__107665));
})();
var G__107581 = " ";
var G__107582 = (function (){var G__107666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107667 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107666,G__107667) : tailrecursion.hoplon.span.call(null,G__107666,G__107667));
})();
var G__107583 = (function (){var G__107668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107669 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107668,G__107669) : tailrecursion.hoplon.span.call(null,G__107668,G__107669));
})();
var G__107584 = " (";
var G__107585 = (function (){var G__107670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107671 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107670,G__107671) : tailrecursion.hoplon.span.call(null,G__107670,G__107671));
})();
var G__107586 = ")))))\n(";
var G__107587 = (function (){var G__107672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107673 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107672,G__107673) : tailrecursion.hoplon.span.call(null,G__107672,G__107673));
})();
var G__107588 = (function (){var G__107674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107675 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107674,G__107675) : tailrecursion.hoplon.span.call(null,G__107674,G__107675));
})();
var G__107589 = " (";
var G__107590 = (function (){var G__107676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107677 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107676,G__107677) : tailrecursion.hoplon.span.call(null,G__107676,G__107677));
})();
var G__107591 = (function (){var G__107678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107679 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107678,G__107679) : tailrecursion.hoplon.span.call(null,G__107678,G__107679));
})();
var G__107592 = " (";
var G__107593 = (function (){var G__107680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107681 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107680,G__107681) : tailrecursion.hoplon.span.call(null,G__107680,G__107681));
})();
var G__107594 = (function (){var G__107682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107683 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107682,G__107683) : tailrecursion.hoplon.span.call(null,G__107682,G__107683));
})();
var G__107595 = " ";
var G__107596 = (function (){var G__107684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107685 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107684,G__107685) : tailrecursion.hoplon.span.call(null,G__107684,G__107685));
})();
var G__107597 = ")))\n(";
var G__107598 = (function (){var G__107686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107687 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107686,G__107687) : tailrecursion.hoplon.span.call(null,G__107686,G__107687));
})();
var G__107599 = " ";
var G__107600 = (function (){var G__107688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107689 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107688,G__107689) : tailrecursion.hoplon.span.call(null,G__107688,G__107689));
})();
var G__107601 = " ";
var G__107602 = (function (){var G__107690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107691 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107690,G__107691) : tailrecursion.hoplon.span.call(null,G__107690,G__107691));
})();
var G__107603 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74(G__107530,G__107531,G__107532,G__107533,G__107534,G__107535,G__107536,G__107537,G__107538,G__107539,G__107540,G__107541,G__107542,G__107543,G__107544,G__107545,G__107546,G__107547,G__107548,G__107549,G__107550,G__107551,G__107552,G__107553,G__107554,G__107555,G__107556,G__107557,G__107558,G__107559,G__107560,G__107561,G__107562,G__107563,G__107564,G__107565,G__107566,G__107567,G__107568,G__107569,G__107570,G__107571,G__107572,G__107573,G__107574,G__107575,G__107576,G__107577,G__107578,G__107579,G__107580,G__107581,G__107582,G__107583,G__107584,G__107585,G__107586,G__107587,G__107588,G__107589,G__107590,G__107591,G__107592,G__107593,G__107594,G__107595,G__107596,G__107597,G__107598,G__107599,G__107600,G__107601,G__107602,G__107603) : tailrecursion.hoplon.pre.call(null,G__107530,G__107531,G__107532,G__107533,G__107534,G__107535,G__107536,G__107537,G__107538,G__107539,G__107540,G__107541,G__107542,G__107543,G__107544,G__107545,G__107546,G__107547,G__107548,G__107549,G__107550,G__107551,G__107552,G__107553,G__107554,G__107555,G__107556,G__107557,G__107558,G__107559,G__107560,G__107561,G__107562,G__107563,G__107564,G__107565,G__107566,G__107567,G__107568,G__107569,G__107570,G__107571,G__107572,G__107573,G__107574,G__107575,G__107576,G__107577,G__107578,G__107579,G__107580,G__107581,G__107582,G__107583,G__107584,G__107585,G__107586,G__107587,G__107588,G__107589,G__107590,G__107591,G__107592,G__107593,G__107594,G__107595,G__107596,G__107597,G__107598,G__107599,G__107600,G__107601,G__107602,G__107603));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107528,G__107529) : tailrecursion.hoplon.div.call(null,G__107528,G__107529));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107527) : tailrecursion.hoplon.div.call(null,G__107527));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107526;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107525;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107524;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107523;
}})()], 0)),"",(function (){var _STAR_references_STAR_107692 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107693 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107694 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107695 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107696 = (function (){var G__107697 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107698 = (function (){var G__107699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107700 = "(";
var G__107701 = (function (){var G__107713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107714 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107713,G__107714) : tailrecursion.hoplon.span.call(null,G__107713,G__107714));
})();
var G__107702 = " ";
var G__107703 = (function (){var G__107715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107716 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107715,G__107716) : tailrecursion.hoplon.span.call(null,G__107715,G__107716));
})();
var G__107704 = (function (){var G__107717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107718 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107717,G__107718) : tailrecursion.hoplon.span.call(null,G__107717,G__107718));
})();
var G__107705 = " (";
var G__107706 = (function (){var G__107719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107720 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107719,G__107720) : tailrecursion.hoplon.span.call(null,G__107719,G__107720));
})();
var G__107707 = (function (){var G__107721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107722 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107721,G__107722) : tailrecursion.hoplon.span.call(null,G__107721,G__107722));
})();
var G__107708 = " ";
var G__107709 = (function (){var G__107723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107724 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107723,G__107724) : tailrecursion.hoplon.span.call(null,G__107723,G__107724));
})();
var G__107710 = " ";
var G__107711 = (function (){var G__107725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107726 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107725,G__107726) : tailrecursion.hoplon.span.call(null,G__107725,G__107726));
})();
var G__107712 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__107699,G__107700,G__107701,G__107702,G__107703,G__107704,G__107705,G__107706,G__107707,G__107708,G__107709,G__107710,G__107711,G__107712) : tailrecursion.hoplon.pre.call(null,G__107699,G__107700,G__107701,G__107702,G__107703,G__107704,G__107705,G__107706,G__107707,G__107708,G__107709,G__107710,G__107711,G__107712));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107697,G__107698) : tailrecursion.hoplon.div.call(null,G__107697,G__107698));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107696) : tailrecursion.hoplon.div.call(null,G__107696));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107695;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107694;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107693;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107692;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107727 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107728 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107729 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107730 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107731 = (function (){var G__107732 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107733 = (function (){var G__107734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107735 = "(";
var G__107736 = (function (){var G__107790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107791 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107790,G__107791) : tailrecursion.hoplon.span.call(null,G__107790,G__107791));
})();
var G__107737 = " ";
var G__107738 = (function (){var G__107792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107793 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107792,G__107793) : tailrecursion.hoplon.span.call(null,G__107792,G__107793));
})();
var G__107739 = (function (){var G__107794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107795 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107794,G__107795) : tailrecursion.hoplon.span.call(null,G__107794,G__107795));
})();
var G__107740 = " (";
var G__107741 = (function (){var G__107796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107797 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107796,G__107797) : tailrecursion.hoplon.span.call(null,G__107796,G__107797));
})();
var G__107742 = (function (){var G__107798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107799 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107798,G__107799) : tailrecursion.hoplon.span.call(null,G__107798,G__107799));
})();
var G__107743 = " ";
var G__107744 = (function (){var G__107800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107801 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107800,G__107801) : tailrecursion.hoplon.span.call(null,G__107800,G__107801));
})();
var G__107745 = " ";
var G__107746 = (function (){var G__107802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107803 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107802,G__107803) : tailrecursion.hoplon.span.call(null,G__107802,G__107803));
})();
var G__107747 = "))\n(";
var G__107748 = (function (){var G__107804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107805 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107804,G__107805) : tailrecursion.hoplon.span.call(null,G__107804,G__107805));
})();
var G__107749 = (function (){var G__107806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107807 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107806,G__107807) : tailrecursion.hoplon.span.call(null,G__107806,G__107807));
})();
var G__107750 = " (";
var G__107751 = (function (){var G__107808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107809 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107808,G__107809) : tailrecursion.hoplon.span.call(null,G__107808,G__107809));
})();
var G__107752 = (function (){var G__107810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107811 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107810,G__107811) : tailrecursion.hoplon.span.call(null,G__107810,G__107811));
})();
var G__107753 = " ";
var G__107754 = (function (){var G__107812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107813 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107812,G__107813) : tailrecursion.hoplon.span.call(null,G__107812,G__107813));
})();
var G__107755 = " ";
var G__107756 = (function (){var G__107814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107815 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107814,G__107815) : tailrecursion.hoplon.span.call(null,G__107814,G__107815));
})();
var G__107757 = "))\n(";
var G__107758 = (function (){var G__107816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__107817 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107816,G__107817) : tailrecursion.hoplon.span.call(null,G__107816,G__107817));
})();
var G__107759 = "(";
var G__107760 = (function (){var G__107818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107819 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107818,G__107819) : tailrecursion.hoplon.span.call(null,G__107818,G__107819));
})();
var G__107761 = (function (){var G__107820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107821 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107820,G__107821) : tailrecursion.hoplon.span.call(null,G__107820,G__107821));
})();
var G__107762 = " ";
var G__107763 = (function (){var G__107822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107823 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107822,G__107823) : tailrecursion.hoplon.span.call(null,G__107822,G__107823));
})();
var G__107764 = ") (";
var G__107765 = (function (){var G__107824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107825 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107824,G__107825) : tailrecursion.hoplon.span.call(null,G__107824,G__107825));
})();
var G__107766 = (function (){var G__107826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107827 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107826,G__107827) : tailrecursion.hoplon.span.call(null,G__107826,G__107827));
})();
var G__107767 = " ";
var G__107768 = (function (){var G__107828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__107829 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107828,G__107829) : tailrecursion.hoplon.span.call(null,G__107828,G__107829));
})();
var G__107769 = "))\n";
var G__107770 = (function (){var G__107830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107831 = "java.lang.IllegalArgumentException";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107830,G__107831) : tailrecursion.hoplon.span.call(null,G__107830,G__107831));
})();
var G__107771 = (function (){var G__107832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"border: 1px solid #FF0000"], null);
var G__107833 = ":";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107832,G__107833) : tailrecursion.hoplon.span.call(null,G__107832,G__107833));
})();
var G__107772 = " ";
var G__107773 = (function (){var G__107834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107835 = "Don't";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107834,G__107835) : tailrecursion.hoplon.span.call(null,G__107834,G__107835));
})();
var G__107774 = " ";
var G__107775 = (function (){var G__107836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107837 = "know";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107836,G__107837) : tailrecursion.hoplon.span.call(null,G__107836,G__107837));
})();
var G__107776 = " ";
var G__107777 = (function (){var G__107838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107839 = "how";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107838,G__107839) : tailrecursion.hoplon.span.call(null,G__107838,G__107839));
})();
var G__107778 = " ";
var G__107779 = (function (){var G__107840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107841 = "to";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107840,G__107841) : tailrecursion.hoplon.span.call(null,G__107840,G__107841));
})();
var G__107780 = " ";
var G__107781 = (function (){var G__107842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107843 = "create";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107842,G__107843) : tailrecursion.hoplon.span.call(null,G__107842,G__107843));
})();
var G__107782 = " ";
var G__107783 = (function (){var G__107844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107845 = "ISeq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107844,G__107845) : tailrecursion.hoplon.span.call(null,G__107844,G__107845));
})();
var G__107784 = " ";
var G__107785 = (function (){var G__107846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107847 = "from";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107846,G__107847) : tailrecursion.hoplon.span.call(null,G__107846,G__107847));
})();
var G__107786 = (function (){var G__107848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"border: 1px solid #FF0000"], null);
var G__107849 = ":";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107848,G__107849) : tailrecursion.hoplon.span.call(null,G__107848,G__107849));
})();
var G__107787 = " ";
var G__107788 = (function (){var G__107850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107851 = "java.lang.Long";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107850,G__107851) : tailrecursion.hoplon.span.call(null,G__107850,G__107851));
})();
var G__107789 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__107734,G__107735,G__107736,G__107737,G__107738,G__107739,G__107740,G__107741,G__107742,G__107743,G__107744,G__107745,G__107746,G__107747,G__107748,G__107749,G__107750,G__107751,G__107752,G__107753,G__107754,G__107755,G__107756,G__107757,G__107758,G__107759,G__107760,G__107761,G__107762,G__107763,G__107764,G__107765,G__107766,G__107767,G__107768,G__107769,G__107770,G__107771,G__107772,G__107773,G__107774,G__107775,G__107776,G__107777,G__107778,G__107779,G__107780,G__107781,G__107782,G__107783,G__107784,G__107785,G__107786,G__107787,G__107788,G__107789) : tailrecursion.hoplon.pre.call(null,G__107734,G__107735,G__107736,G__107737,G__107738,G__107739,G__107740,G__107741,G__107742,G__107743,G__107744,G__107745,G__107746,G__107747,G__107748,G__107749,G__107750,G__107751,G__107752,G__107753,G__107754,G__107755,G__107756,G__107757,G__107758,G__107759,G__107760,G__107761,G__107762,G__107763,G__107764,G__107765,G__107766,G__107767,G__107768,G__107769,G__107770,G__107771,G__107772,G__107773,G__107774,G__107775,G__107776,G__107777,G__107778,G__107779,G__107780,G__107781,G__107782,G__107783,G__107784,G__107785,G__107786,G__107787,G__107788,G__107789));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107732,G__107733) : tailrecursion.hoplon.div.call(null,G__107732,G__107733));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107731) : tailrecursion.hoplon.div.call(null,G__107731));
})(),(function (){var G__107852 = cljs.core.PersistentArrayMap.EMPTY;
var G__107853 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Why did that happen?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107852,G__107853) : tailrecursion.hoplon.markdown.para_node.call(null,G__107852,G__107853));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107730;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107729;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107728;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107727;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107854 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107855 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107856 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107857 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107858 = cljs.core.PersistentArrayMap.EMPTY;
var G__107859 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Because the second argument to ",(function (){var G__107860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__107861 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107860,G__107861) : tailrecursion.hoplon.markdown.code_node.call(null,G__107860,G__107861));
})()," must be a sequential object! Remember the box and pointer drawing? The purpose of ",(function (){var G__107862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__107863 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107862,G__107863) : tailrecursion.hoplon.markdown.code_node.call(null,G__107862,G__107863));
})()," is to create linked lists (like the ones depicted in those figures)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107858,G__107859) : tailrecursion.hoplon.markdown.para_node.call(null,G__107858,G__107859));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107857;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107856;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107855;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107854;
}})()], 0))], 0)),"",(function (){var _STAR_references_STAR_107864 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107865 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107866 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107867 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107868 = cljs.core.PersistentArrayMap.EMPTY;
var G__107869 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give a property that ",(function (){var G__107870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__107871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107870,G__107871) : tailrecursion.hoplon.markdown.code_node.call(null,G__107870,G__107871));
})()," should satisfy to guarantee that ",(function (){var G__107872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__107873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107872,G__107873) : tailrecursion.hoplon.markdown.code_node.call(null,G__107872,G__107873));
})()," and ",(function (){var G__107874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__107875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107874,G__107875) : tailrecursion.hoplon.markdown.code_node.call(null,G__107874,G__107875));
})()," will produce the same values for any sequence."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107868,G__107869) : tailrecursion.hoplon.markdown.para_node.call(null,G__107868,G__107869));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107867;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107866;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107865;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107864;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_107876 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107877 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_107878 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_107879 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__107880 = cljs.core.PersistentArrayMap.EMPTY;
var G__107881 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__107882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__107883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__107882,G__107883) : tailrecursion.hoplon.markdown.simple_node.call(null,G__107882,G__107883));
})(),"s take a simple example: ",(function (){var G__107884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a))"], null);
var G__107885 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107884,G__107885) : tailrecursion.hoplon.markdown.code_node.call(null,G__107884,G__107885));
})()," unfolds as,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107880,G__107881) : tailrecursion.hoplon.markdown.para_node.call(null,G__107880,G__107881));
})(),(function (){var G__107886 = (function (){var G__107887 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107888 = (function (){var G__107889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107890 = "(";
var G__107891 = (function (){var G__107897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107898 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107897,G__107898) : tailrecursion.hoplon.span.call(null,G__107897,G__107898));
})();
var G__107892 = " ";
var G__107893 = (function (){var G__107899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107900 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107899,G__107900) : tailrecursion.hoplon.span.call(null,G__107899,G__107900));
})();
var G__107894 = " ";
var G__107895 = (function (){var G__107901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107902 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107901,G__107902) : tailrecursion.hoplon.span.call(null,G__107901,G__107902));
})();
var G__107896 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__107889,G__107890,G__107891,G__107892,G__107893,G__107894,G__107895,G__107896) : tailrecursion.hoplon.pre.call(null,G__107889,G__107890,G__107891,G__107892,G__107893,G__107894,G__107895,G__107896));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107887,G__107888) : tailrecursion.hoplon.div.call(null,G__107887,G__107888));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107886) : tailrecursion.hoplon.div.call(null,G__107886));
})(),(function (){var G__107903 = cljs.core.PersistentArrayMap.EMPTY;
var G__107904 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And ",(function (){var G__107905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-right op init (list a))"], null);
var G__107906 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107905,G__107906) : tailrecursion.hoplon.markdown.code_node.call(null,G__107905,G__107906));
})()," unfolds to:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107903,G__107904) : tailrecursion.hoplon.markdown.para_node.call(null,G__107903,G__107904));
})(),(function (){var G__107907 = (function (){var G__107908 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107909 = (function (){var G__107910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107911 = "(";
var G__107912 = (function (){var G__107918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107919 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107918,G__107919) : tailrecursion.hoplon.span.call(null,G__107918,G__107919));
})();
var G__107913 = " ";
var G__107914 = (function (){var G__107920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107921 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107920,G__107921) : tailrecursion.hoplon.span.call(null,G__107920,G__107921));
})();
var G__107915 = " ";
var G__107916 = (function (){var G__107922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107923 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107922,G__107923) : tailrecursion.hoplon.span.call(null,G__107922,G__107923));
})();
var G__107917 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__107910,G__107911,G__107912,G__107913,G__107914,G__107915,G__107916,G__107917) : tailrecursion.hoplon.pre.call(null,G__107910,G__107911,G__107912,G__107913,G__107914,G__107915,G__107916,G__107917));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107908,G__107909) : tailrecursion.hoplon.div.call(null,G__107908,G__107909));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107907) : tailrecursion.hoplon.div.call(null,G__107907));
})(),(function (){var G__107924 = cljs.core.PersistentArrayMap.EMPTY;
var G__107925 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that we need ",(function (){var G__107926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__107927 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107926,G__107927) : tailrecursion.hoplon.markdown.code_node.call(null,G__107926,G__107927));
})()," to be commutative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107924,G__107925) : tailrecursion.hoplon.markdown.para_node.call(null,G__107924,G__107925));
})(),(function (){var G__107928 = cljs.core.PersistentArrayMap.EMPTY;
var G__107929 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__107930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__107931 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__107930,G__107931) : tailrecursion.hoplon.markdown.simple_node.call(null,G__107930,G__107931));
})(),"s consider a slightly more convoluted example where ",(function (){var G__107932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__107933 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107932,G__107933) : tailrecursion.hoplon.markdown.code_node.call(null,G__107932,G__107933));
})()," is commutative (to see whether there are any further requirements on ",(function (){var G__107934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__107935 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107934,G__107935) : tailrecursion.hoplon.markdown.code_node.call(null,G__107934,G__107935));
})(),"). Let",(function (){var G__107936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__107937 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__107936,G__107937) : tailrecursion.hoplon.markdown.simple_node.call(null,G__107936,G__107937));
})(),"s consider ",(function (){var G__107938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-right op init (list a b))"], null);
var G__107939 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107938,G__107939) : tailrecursion.hoplon.markdown.code_node.call(null,G__107938,G__107939));
})()," and see if we can get it in the same form as ",(function (){var G__107940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a b))"], null);
var G__107941 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__107940,G__107941) : tailrecursion.hoplon.markdown.code_node.call(null,G__107940,G__107941));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__107928,G__107929) : tailrecursion.hoplon.markdown.para_node.call(null,G__107928,G__107929));
})(),(function (){var G__107942 = (function (){var G__107943 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__107944 = (function (){var G__107945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__107946 = "(";
var G__107947 = (function (){var G__107978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107979 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107978,G__107979) : tailrecursion.hoplon.span.call(null,G__107978,G__107979));
})();
var G__107948 = " ";
var G__107949 = (function (){var G__107980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107981 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107980,G__107981) : tailrecursion.hoplon.span.call(null,G__107980,G__107981));
})();
var G__107950 = " ";
var G__107951 = (function (){var G__107982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107983 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107982,G__107983) : tailrecursion.hoplon.span.call(null,G__107982,G__107983));
})();
var G__107952 = " (";
var G__107953 = (function (){var G__107984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__107985 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107984,G__107985) : tailrecursion.hoplon.span.call(null,G__107984,G__107985));
})();
var G__107954 = (function (){var G__107986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107987 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107986,G__107987) : tailrecursion.hoplon.span.call(null,G__107986,G__107987));
})();
var G__107955 = " ";
var G__107956 = (function (){var G__107988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107989 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107988,G__107989) : tailrecursion.hoplon.span.call(null,G__107988,G__107989));
})();
var G__107957 = "))\n(";
var G__107958 = (function (){var G__107990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107991 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107990,G__107991) : tailrecursion.hoplon.span.call(null,G__107990,G__107991));
})();
var G__107959 = " ";
var G__107960 = (function (){var G__107992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107993 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107992,G__107993) : tailrecursion.hoplon.span.call(null,G__107992,G__107993));
})();
var G__107961 = " (";
var G__107962 = (function (){var G__107994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__107995 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107994,G__107995) : tailrecursion.hoplon.span.call(null,G__107994,G__107995));
})();
var G__107963 = " ";
var G__107964 = (function (){var G__107996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107997 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107996,G__107997) : tailrecursion.hoplon.span.call(null,G__107996,G__107997));
})();
var G__107965 = " ";
var G__107966 = (function (){var G__107998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__107999 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__107998,G__107999) : tailrecursion.hoplon.span.call(null,G__107998,G__107999));
})();
var G__107967 = "))\n(";
var G__107968 = (function (){var G__108000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108001 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108000,G__108001) : tailrecursion.hoplon.span.call(null,G__108000,G__108001));
})();
var G__107969 = " (";
var G__107970 = (function (){var G__108002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108003 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108002,G__108003) : tailrecursion.hoplon.span.call(null,G__108002,G__108003));
})();
var G__107971 = " ";
var G__107972 = (function (){var G__108004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108005 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108004,G__108005) : tailrecursion.hoplon.span.call(null,G__108004,G__108005));
})();
var G__107973 = " ";
var G__107974 = (function (){var G__108006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108007 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108006,G__108007) : tailrecursion.hoplon.span.call(null,G__108006,G__108007));
})();
var G__107975 = ") ";
var G__107976 = (function (){var G__108008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108009 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108008,G__108009) : tailrecursion.hoplon.span.call(null,G__108008,G__108009));
})();
var G__107977 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__107945,G__107946,G__107947,G__107948,G__107949,G__107950,G__107951,G__107952,G__107953,G__107954,G__107955,G__107956,G__107957,G__107958,G__107959,G__107960,G__107961,G__107962,G__107963,G__107964,G__107965,G__107966,G__107967,G__107968,G__107969,G__107970,G__107971,G__107972,G__107973,G__107974,G__107975,G__107976,G__107977) : tailrecursion.hoplon.pre.call(null,G__107945,G__107946,G__107947,G__107948,G__107949,G__107950,G__107951,G__107952,G__107953,G__107954,G__107955,G__107956,G__107957,G__107958,G__107959,G__107960,G__107961,G__107962,G__107963,G__107964,G__107965,G__107966,G__107967,G__107968,G__107969,G__107970,G__107971,G__107972,G__107973,G__107974,G__107975,G__107976,G__107977));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__107943,G__107944) : tailrecursion.hoplon.div.call(null,G__107943,G__107944));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__107942) : tailrecursion.hoplon.div.call(null,G__107942));
})(),(function (){var G__108010 = cljs.core.PersistentArrayMap.EMPTY;
var G__108011 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And ",(function (){var G__108012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a b))"], null);
var G__108013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108012,G__108013) : tailrecursion.hoplon.markdown.code_node.call(null,G__108012,G__108013));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108010,G__108011) : tailrecursion.hoplon.markdown.para_node.call(null,G__108010,G__108011));
})(),(function (){var G__108014 = (function (){var G__108015 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108016 = (function (){var G__108017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108018 = "(";
var G__108019 = (function (){var G__108039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108040 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108039,G__108040) : tailrecursion.hoplon.span.call(null,G__108039,G__108040));
})();
var G__108020 = " (";
var G__108021 = (function (){var G__108041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108042 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108041,G__108042) : tailrecursion.hoplon.span.call(null,G__108041,G__108042));
})();
var G__108022 = " ";
var G__108023 = (function (){var G__108043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108044 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108043,G__108044) : tailrecursion.hoplon.span.call(null,G__108043,G__108044));
})();
var G__108024 = " ";
var G__108025 = (function (){var G__108045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108046 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108045,G__108046) : tailrecursion.hoplon.span.call(null,G__108045,G__108046));
})();
var G__108026 = ") ";
var G__108027 = (function (){var G__108047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108048 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108047,G__108048) : tailrecursion.hoplon.span.call(null,G__108047,G__108048));
})();
var G__108028 = ")\n(";
var G__108029 = (function (){var G__108049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108050 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108049,G__108050) : tailrecursion.hoplon.span.call(null,G__108049,G__108050));
})();
var G__108030 = " ";
var G__108031 = (function (){var G__108051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108052 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108051,G__108052) : tailrecursion.hoplon.span.call(null,G__108051,G__108052));
})();
var G__108032 = " (";
var G__108033 = (function (){var G__108053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108054 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108053,G__108054) : tailrecursion.hoplon.span.call(null,G__108053,G__108054));
})();
var G__108034 = " ";
var G__108035 = (function (){var G__108055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108056 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108055,G__108056) : tailrecursion.hoplon.span.call(null,G__108055,G__108056));
})();
var G__108036 = " ";
var G__108037 = (function (){var G__108057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108058 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108057,G__108058) : tailrecursion.hoplon.span.call(null,G__108057,G__108058));
})();
var G__108038 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__108017,G__108018,G__108019,G__108020,G__108021,G__108022,G__108023,G__108024,G__108025,G__108026,G__108027,G__108028,G__108029,G__108030,G__108031,G__108032,G__108033,G__108034,G__108035,G__108036,G__108037,G__108038) : tailrecursion.hoplon.pre.call(null,G__108017,G__108018,G__108019,G__108020,G__108021,G__108022,G__108023,G__108024,G__108025,G__108026,G__108027,G__108028,G__108029,G__108030,G__108031,G__108032,G__108033,G__108034,G__108035,G__108036,G__108037,G__108038));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108015,G__108016) : tailrecursion.hoplon.div.call(null,G__108015,G__108016));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108014) : tailrecursion.hoplon.div.call(null,G__108014));
})(),(function (){var G__108059 = cljs.core.PersistentArrayMap.EMPTY;
var G__108060 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in order for ",(function (){var G__108061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-right op init (list a b))"], null);
var G__108062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108061,G__108062) : tailrecursion.hoplon.markdown.code_node.call(null,G__108061,G__108062));
})()," to equal ",(function (){var G__108063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fold-left op init (list a b))"], null);
var G__108064 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108063,G__108064) : tailrecursion.hoplon.markdown.code_node.call(null,G__108063,G__108064));
})(),", we require ",(function (){var G__108065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(op (op b init)\na)"], null);
var G__108066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108065,G__108066) : tailrecursion.hoplon.markdown.code_node.call(null,G__108065,G__108066));
})(),"=",(function (){var G__108067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(op b (op init a))"], null);
var G__108068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108067,G__108068) : tailrecursion.hoplon.markdown.code_node.call(null,G__108067,G__108068));
})(),". That property is called associativity."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108059,G__108060) : tailrecursion.hoplon.markdown.para_node.call(null,G__108059,G__108060));
})(),(function (){var G__108069 = cljs.core.PersistentArrayMap.EMPTY;
var G__108070 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__108071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__108072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__108071,G__108072) : tailrecursion.hoplon.markdown.simple_node.call(null,G__108071,G__108072));
})(),"s assume that our operation ",(function (){var G__108073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"op"], null);
var G__108074 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108073,G__108074) : tailrecursion.hoplon.markdown.code_node.call(null,G__108073,G__108074));
})()," is both commutative and associative. Let",(function (){var G__108075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__108076 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__108075,G__108076) : tailrecursion.hoplon.markdown.simple_node.call(null,G__108075,G__108076));
})(),"s prove that no matter the size of the list, nor the initial value (as long as it is an acceptable one ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["eg not 0 for division"], null)], 0)),") we will get the same value. This proof might be a little tricky to comprehend if you are not mathematically inclined; so if feel free to move on if this doesn",(function (){var G__108077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__108078 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__108077,G__108078) : tailrecursion.hoplon.markdown.simple_node.call(null,G__108077,G__108078));
})(),"t interest you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108069,G__108070) : tailrecursion.hoplon.markdown.para_node.call(null,G__108069,G__108070));
})(),(function (){var G__108079 = cljs.core.PersistentArrayMap.EMPTY;
var G__108080 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__108081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__108082 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__108081,G__108082) : tailrecursion.hoplon.markdown.simple_node.call(null,G__108081,G__108082));
})(),"s prove this by induction on ",(function (){var G__108083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(count items)"], null);
var G__108084 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108083,G__108084) : tailrecursion.hoplon.markdown.code_node.call(null,G__108083,G__108084));
})(),", where ",(function (){var G__108085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"items"], null);
var G__108086 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108085,G__108086) : tailrecursion.hoplon.markdown.code_node.call(null,G__108085,G__108086));
})()," is the list argument to the ",(function (){var G__108087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__108088 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108087,G__108088) : tailrecursion.hoplon.markdown.code_node.call(null,G__108087,G__108088));
})()," and ",(function (){var G__108089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-right"], null);
var G__108090 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108089,G__108090) : tailrecursion.hoplon.markdown.code_node.call(null,G__108089,G__108090));
})()," procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108079,G__108080) : tailrecursion.hoplon.markdown.para_node.call(null,G__108079,G__108080));
})(),(function (){var G__108091 = cljs.core.PersistentArrayMap.EMPTY;
var G__108092 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The base case is already taken care of above (cases ",(function (){var G__108093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count"], null);
var G__108094 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108093,G__108094) : tailrecursion.hoplon.markdown.code_node.call(null,G__108093,G__108094));
})(),"=1 and 2 were both done above). Now let",(function (){var G__108095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__108096 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__108095,G__108096) : tailrecursion.hoplon.markdown.simple_node.call(null,G__108095,G__108096));
})(),"s pick an \\(n>1\\) and assume that for all \\(k\\lt n\\), if the list has \\(k\\) items, fold left and fold right are the same with this list and our specified operation and initial value."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108091,G__108092) : tailrecursion.hoplon.markdown.para_node.call(null,G__108091,G__108092));
})(),(function (){var G__108097 = cljs.core.PersistentArrayMap.EMPTY;
var G__108098 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we take ",(function (){var G__108099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"items"], null);
var G__108100 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108099,G__108100) : tailrecursion.hoplon.markdown.code_node.call(null,G__108099,G__108100));
})()," to be a list with \\(n\\) items in it. For ease of notation, I will consider the list to be ",(function (){var G__108101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2 3 4 ... n)"], null);
var G__108102 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108101,G__108102) : tailrecursion.hoplon.markdown.code_node.call(null,G__108101,G__108102));
})(),", but I will not actually consider the elements of the list to be numbers necessarily. I make no assumption as to the content of the list or the nature of the operator (other than it being commutative and associative). To reaffirm the fact that we are not dealing with a concrete list here, I will denote the list as ",(function (){var G__108103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(1 2... n)"], null);
var G__108104 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108103,G__108104) : tailrecursion.hoplon.markdown.code_node.call(null,G__108103,G__108104));
})()," without the ",(function (){var G__108105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"list"], null);
var G__108106 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108105,G__108106) : tailrecursion.hoplon.markdown.code_node.call(null,G__108105,G__108106));
})()," operator in front."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108097,G__108098) : tailrecursion.hoplon.markdown.para_node.call(null,G__108097,G__108098));
})(),(function (){var G__108107 = (function (){var G__108108 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108109 = (function (){var G__108110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108111 = "(";
var G__108112 = (function (){var G__108256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108257 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108256,G__108257) : tailrecursion.hoplon.span.call(null,G__108256,G__108257));
})();
var G__108113 = " ";
var G__108114 = (function (){var G__108258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108259 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108258,G__108259) : tailrecursion.hoplon.span.call(null,G__108258,G__108259));
})();
var G__108115 = " ";
var G__108116 = (function (){var G__108260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108261 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108260,G__108261) : tailrecursion.hoplon.span.call(null,G__108260,G__108261));
})();
var G__108117 = " ";
var G__108118 = (function (){var G__108262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108263 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108262,G__108263) : tailrecursion.hoplon.span.call(null,G__108262,G__108263));
})();
var G__108119 = ")\n";
var G__108120 = (function (){var G__108264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108265 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108264,G__108265) : tailrecursion.hoplon.span.call(null,G__108264,G__108265));
})();
var G__108121 = "(";
var G__108122 = (function (){var G__108266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108267 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108266,G__108267) : tailrecursion.hoplon.span.call(null,G__108266,G__108267));
})();
var G__108123 = " ";
var G__108124 = (function (){var G__108268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108269 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108268,G__108269) : tailrecursion.hoplon.span.call(null,G__108268,G__108269));
})();
var G__108125 = " ";
var G__108126 = (function (){var G__108270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108271 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108270,G__108271) : tailrecursion.hoplon.span.call(null,G__108270,G__108271));
})();
var G__108127 = " (";
var G__108128 = (function (){var G__108272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108273 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108272,G__108273) : tailrecursion.hoplon.span.call(null,G__108272,G__108273));
})();
var G__108129 = " ";
var G__108130 = (function (){var G__108274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108275 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108274,G__108275) : tailrecursion.hoplon.span.call(null,G__108274,G__108275));
})();
var G__108131 = " ";
var G__108132 = (function (){var G__108276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108277 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108276,G__108277) : tailrecursion.hoplon.span.call(null,G__108276,G__108277));
})();
var G__108133 = " ";
var G__108134 = (function (){var G__108278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108279 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108278,G__108279) : tailrecursion.hoplon.span.call(null,G__108278,G__108279));
})();
var G__108135 = "))\n";
var G__108136 = (function (){var G__108280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108281 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108280,G__108281) : tailrecursion.hoplon.span.call(null,G__108280,G__108281));
})();
var G__108137 = "(";
var G__108138 = (function (){var G__108282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108283 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108282,G__108283) : tailrecursion.hoplon.span.call(null,G__108282,G__108283));
})();
var G__108139 = " ";
var G__108140 = (function (){var G__108284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108285 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108284,G__108285) : tailrecursion.hoplon.span.call(null,G__108284,G__108285));
})();
var G__108141 = " (";
var G__108142 = (function (){var G__108286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108287 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108286,G__108287) : tailrecursion.hoplon.span.call(null,G__108286,G__108287));
})();
var G__108143 = " ";
var G__108144 = (function (){var G__108288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108289 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108288,G__108289) : tailrecursion.hoplon.span.call(null,G__108288,G__108289));
})();
var G__108145 = " (";
var G__108146 = (function (){var G__108290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108291 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108290,G__108291) : tailrecursion.hoplon.span.call(null,G__108290,G__108291));
})();
var G__108147 = " ";
var G__108148 = (function (){var G__108292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108293 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108292,G__108293) : tailrecursion.hoplon.span.call(null,G__108292,G__108293));
})();
var G__108149 = " (";
var G__108150 = (function (){var G__108294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108295 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108294,G__108295) : tailrecursion.hoplon.span.call(null,G__108294,G__108295));
})();
var G__108151 = " ";
var G__108152 = (function (){var G__108296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108297 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108296,G__108297) : tailrecursion.hoplon.span.call(null,G__108296,G__108297));
})();
var G__108153 = " ";
var G__108154 = (function (){var G__108298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108299 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108298,G__108299) : tailrecursion.hoplon.span.call(null,G__108298,G__108299));
})();
var G__108155 = "))))\n";
var G__108156 = (function (){var G__108300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108301 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108300,G__108301) : tailrecursion.hoplon.span.call(null,G__108300,G__108301));
})();
var G__108157 = "(";
var G__108158 = (function (){var G__108302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108303 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108302,G__108303) : tailrecursion.hoplon.span.call(null,G__108302,G__108303));
})();
var G__108159 = " ";
var G__108160 = (function (){var G__108304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108305 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108304,G__108305) : tailrecursion.hoplon.span.call(null,G__108304,G__108305));
})();
var G__108161 = " (";
var G__108162 = (function (){var G__108306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108307 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108306,G__108307) : tailrecursion.hoplon.span.call(null,G__108306,G__108307));
})();
var G__108163 = " ";
var G__108164 = (function (){var G__108308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108309 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108308,G__108309) : tailrecursion.hoplon.span.call(null,G__108308,G__108309));
})();
var G__108165 = " (";
var G__108166 = (function (){var G__108310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108311 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108310,G__108311) : tailrecursion.hoplon.span.call(null,G__108310,G__108311));
})();
var G__108167 = " ";
var G__108168 = (function (){var G__108312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108313 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108312,G__108313) : tailrecursion.hoplon.span.call(null,G__108312,G__108313));
})();
var G__108169 = " (";
var G__108170 = (function (){var G__108314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108315 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108314,G__108315) : tailrecursion.hoplon.span.call(null,G__108314,G__108315));
})();
var G__108171 = " ";
var G__108172 = (function (){var G__108316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108317 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108316,G__108317) : tailrecursion.hoplon.span.call(null,G__108316,G__108317));
})();
var G__108173 = " ";
var G__108174 = (function (){var G__108318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108319 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108318,G__108319) : tailrecursion.hoplon.span.call(null,G__108318,G__108319));
})();
var G__108175 = "))))\n";
var G__108176 = (function (){var G__108320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108321 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108320,G__108321) : tailrecursion.hoplon.span.call(null,G__108320,G__108321));
})();
var G__108177 = "(";
var G__108178 = (function (){var G__108322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108323 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108322,G__108323) : tailrecursion.hoplon.span.call(null,G__108322,G__108323));
})();
var G__108179 = " ";
var G__108180 = (function (){var G__108324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108325 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108324,G__108325) : tailrecursion.hoplon.span.call(null,G__108324,G__108325));
})();
var G__108181 = " (";
var G__108182 = (function (){var G__108326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108327 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108326,G__108327) : tailrecursion.hoplon.span.call(null,G__108326,G__108327));
})();
var G__108183 = " ";
var G__108184 = (function (){var G__108328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108329 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108328,G__108329) : tailrecursion.hoplon.span.call(null,G__108328,G__108329));
})();
var G__108185 = " (";
var G__108186 = (function (){var G__108330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108331 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108330,G__108331) : tailrecursion.hoplon.span.call(null,G__108330,G__108331));
})();
var G__108187 = " ";
var G__108188 = (function (){var G__108332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108333 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108332,G__108333) : tailrecursion.hoplon.span.call(null,G__108332,G__108333));
})();
var G__108189 = " (";
var G__108190 = (function (){var G__108334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108335 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108334,G__108335) : tailrecursion.hoplon.span.call(null,G__108334,G__108335));
})();
var G__108191 = " (";
var G__108192 = (function (){var G__108336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108337 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108336,G__108337) : tailrecursion.hoplon.span.call(null,G__108336,G__108337));
})();
var G__108193 = " ";
var G__108194 = (function (){var G__108338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108339 = "<n-1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108338,G__108339) : tailrecursion.hoplon.span.call(null,G__108338,G__108339));
})();
var G__108195 = " ";
var G__108196 = (function (){var G__108340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108341 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108340,G__108341) : tailrecursion.hoplon.span.call(null,G__108340,G__108341));
})();
var G__108197 = ") ";
var G__108198 = (function (){var G__108342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108343 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108342,G__108343) : tailrecursion.hoplon.span.call(null,G__108342,G__108343));
})();
var G__108199 = "))))\n";
var G__108200 = (function (){var G__108344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108345 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108344,G__108345) : tailrecursion.hoplon.span.call(null,G__108344,G__108345));
})();
var G__108201 = "(";
var G__108202 = (function (){var G__108346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108347 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108346,G__108347) : tailrecursion.hoplon.span.call(null,G__108346,G__108347));
})();
var G__108203 = " ";
var G__108204 = (function (){var G__108348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108349 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108348,G__108349) : tailrecursion.hoplon.span.call(null,G__108348,G__108349));
})();
var G__108205 = " (";
var G__108206 = (function (){var G__108350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108351 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108350,G__108351) : tailrecursion.hoplon.span.call(null,G__108350,G__108351));
})();
var G__108207 = " ";
var G__108208 = (function (){var G__108352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108353 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108352,G__108353) : tailrecursion.hoplon.span.call(null,G__108352,G__108353));
})();
var G__108209 = " (";
var G__108210 = (function (){var G__108354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108355 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108354,G__108355) : tailrecursion.hoplon.span.call(null,G__108354,G__108355));
})();
var G__108211 = " ";
var G__108212 = (function (){var G__108356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108357 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108356,G__108357) : tailrecursion.hoplon.span.call(null,G__108356,G__108357));
})();
var G__108213 = " (";
var G__108214 = (function (){var G__108358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108359 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108358,G__108359) : tailrecursion.hoplon.span.call(null,G__108358,G__108359));
})();
var G__108215 = " (";
var G__108216 = (function (){var G__108360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108361 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108360,G__108361) : tailrecursion.hoplon.span.call(null,G__108360,G__108361));
})();
var G__108217 = " ";
var G__108218 = (function (){var G__108362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108363 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108362,G__108363) : tailrecursion.hoplon.span.call(null,G__108362,G__108363));
})();
var G__108219 = " ";
var G__108220 = (function (){var G__108364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108365 = "<n-1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108364,G__108365) : tailrecursion.hoplon.span.call(null,G__108364,G__108365));
})();
var G__108221 = ") ";
var G__108222 = (function (){var G__108366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108367 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108366,G__108367) : tailrecursion.hoplon.span.call(null,G__108366,G__108367));
})();
var G__108223 = "))))\n";
var G__108224 = (function (){var G__108368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108369 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108368,G__108369) : tailrecursion.hoplon.span.call(null,G__108368,G__108369));
})();
var G__108225 = "\n";
var G__108226 = (function (){var G__108370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108371 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108370,G__108371) : tailrecursion.hoplon.span.call(null,G__108370,G__108371));
})();
var G__108227 = "(";
var G__108228 = (function (){var G__108372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108373 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108372,G__108373) : tailrecursion.hoplon.span.call(null,G__108372,G__108373));
})();
var G__108229 = " (";
var G__108230 = (function (){var G__108374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108375 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108374,G__108375) : tailrecursion.hoplon.span.call(null,G__108374,G__108375));
})();
var G__108231 = " ";
var G__108232 = (function (){var G__108376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108377 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108376,G__108377) : tailrecursion.hoplon.span.call(null,G__108376,G__108377));
})();
var G__108233 = " (";
var G__108234 = (function (){var G__108378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108379 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108378,G__108379) : tailrecursion.hoplon.span.call(null,G__108378,G__108379));
})();
var G__108235 = " ";
var G__108236 = (function (){var G__108380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108381 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108380,G__108381) : tailrecursion.hoplon.span.call(null,G__108380,G__108381));
})();
var G__108237 = " ";
var G__108238 = (function (){var G__108382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108383 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108382,G__108383) : tailrecursion.hoplon.span.call(null,G__108382,G__108383));
})();
var G__108239 = ") ";
var G__108240 = (function (){var G__108384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108385 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108384,G__108385) : tailrecursion.hoplon.span.call(null,G__108384,G__108385));
})();
var G__108241 = ") ";
var G__108242 = (function (){var G__108386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108387 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108386,G__108387) : tailrecursion.hoplon.span.call(null,G__108386,G__108387));
})();
var G__108243 = " ";
var G__108244 = (function (){var G__108388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108389 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108388,G__108389) : tailrecursion.hoplon.span.call(null,G__108388,G__108389));
})();
var G__108245 = ")\n";
var G__108246 = (function (){var G__108390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108391 = "=";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108390,G__108391) : tailrecursion.hoplon.span.call(null,G__108390,G__108391));
})();
var G__108247 = "(";
var G__108248 = (function (){var G__108392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108393 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108392,G__108393) : tailrecursion.hoplon.span.call(null,G__108392,G__108393));
})();
var G__108249 = " ";
var G__108250 = (function (){var G__108394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108395 = "op";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108394,G__108395) : tailrecursion.hoplon.span.call(null,G__108394,G__108395));
})();
var G__108251 = " ";
var G__108252 = (function (){var G__108396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108397 = "init";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108396,G__108397) : tailrecursion.hoplon.span.call(null,G__108396,G__108397));
})();
var G__108253 = " ";
var G__108254 = (function (){var G__108398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108399 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108398,G__108399) : tailrecursion.hoplon.span.call(null,G__108398,G__108399));
})();
var G__108255 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$146 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$146(G__108110,G__108111,G__108112,G__108113,G__108114,G__108115,G__108116,G__108117,G__108118,G__108119,G__108120,G__108121,G__108122,G__108123,G__108124,G__108125,G__108126,G__108127,G__108128,G__108129,G__108130,G__108131,G__108132,G__108133,G__108134,G__108135,G__108136,G__108137,G__108138,G__108139,G__108140,G__108141,G__108142,G__108143,G__108144,G__108145,G__108146,G__108147,G__108148,G__108149,G__108150,G__108151,G__108152,G__108153,G__108154,G__108155,G__108156,G__108157,G__108158,G__108159,G__108160,G__108161,G__108162,G__108163,G__108164,G__108165,G__108166,G__108167,G__108168,G__108169,G__108170,G__108171,G__108172,G__108173,G__108174,G__108175,G__108176,G__108177,G__108178,G__108179,G__108180,G__108181,G__108182,G__108183,G__108184,G__108185,G__108186,G__108187,G__108188,G__108189,G__108190,G__108191,G__108192,G__108193,G__108194,G__108195,G__108196,G__108197,G__108198,G__108199,G__108200,G__108201,G__108202,G__108203,G__108204,G__108205,G__108206,G__108207,G__108208,G__108209,G__108210,G__108211,G__108212,G__108213,G__108214,G__108215,G__108216,G__108217,G__108218,G__108219,G__108220,G__108221,G__108222,G__108223,G__108224,G__108225,G__108226,G__108227,G__108228,G__108229,G__108230,G__108231,G__108232,G__108233,G__108234,G__108235,G__108236,G__108237,G__108238,G__108239,G__108240,G__108241,G__108242,G__108243,G__108244,G__108245,G__108246,G__108247,G__108248,G__108249,G__108250,G__108251,G__108252,G__108253,G__108254,G__108255) : tailrecursion.hoplon.pre.call(null,G__108110,G__108111,G__108112,G__108113,G__108114,G__108115,G__108116,G__108117,G__108118,G__108119,G__108120,G__108121,G__108122,G__108123,G__108124,G__108125,G__108126,G__108127,G__108128,G__108129,G__108130,G__108131,G__108132,G__108133,G__108134,G__108135,G__108136,G__108137,G__108138,G__108139,G__108140,G__108141,G__108142,G__108143,G__108144,G__108145,G__108146,G__108147,G__108148,G__108149,G__108150,G__108151,G__108152,G__108153,G__108154,G__108155,G__108156,G__108157,G__108158,G__108159,G__108160,G__108161,G__108162,G__108163,G__108164,G__108165,G__108166,G__108167,G__108168,G__108169,G__108170,G__108171,G__108172,G__108173,G__108174,G__108175,G__108176,G__108177,G__108178,G__108179,G__108180,G__108181,G__108182,G__108183,G__108184,G__108185,G__108186,G__108187,G__108188,G__108189,G__108190,G__108191,G__108192,G__108193,G__108194,G__108195,G__108196,G__108197,G__108198,G__108199,G__108200,G__108201,G__108202,G__108203,G__108204,G__108205,G__108206,G__108207,G__108208,G__108209,G__108210,G__108211,G__108212,G__108213,G__108214,G__108215,G__108216,G__108217,G__108218,G__108219,G__108220,G__108221,G__108222,G__108223,G__108224,G__108225,G__108226,G__108227,G__108228,G__108229,G__108230,G__108231,G__108232,G__108233,G__108234,G__108235,G__108236,G__108237,G__108238,G__108239,G__108240,G__108241,G__108242,G__108243,G__108244,G__108245,G__108246,G__108247,G__108248,G__108249,G__108250,G__108251,G__108252,G__108253,G__108254,G__108255));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108108,G__108109) : tailrecursion.hoplon.div.call(null,G__108108,G__108109));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108107) : tailrecursion.hoplon.div.call(null,G__108107));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107879;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107878;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_107877;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_107876;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_108400 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108401 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_108402 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108403 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108404 = cljs.core.PersistentArrayMap.EMPTY;
var G__108405 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Complete the following definitions of ",(function (){var G__108406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"reverse"], null);
var G__108407 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108406,G__108407) : tailrecursion.hoplon.markdown.code_node.call(null,G__108406,G__108407));
})()," ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/18/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.18"], null)], 0))," in terms of ",(function (){var G__108408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-righ"], null);
var G__108409 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108408,G__108409) : tailrecursion.hoplon.markdown.code_node.call(null,G__108408,G__108409));
})()," and ",(function (){var G__108410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fold-left"], null);
var G__108411 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108410,G__108411) : tailrecursion.hoplon.markdown.code_node.call(null,G__108410,G__108411));
})()," from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/38/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.38"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108404,G__108405) : tailrecursion.hoplon.markdown.para_node.call(null,G__108404,G__108405));
})(),(function (){var G__108412 = (function (){var G__108413 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108414 = (function (){var G__108415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108416 = "(";
var G__108417 = (function (){var G__108455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108456 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108455,G__108456) : tailrecursion.hoplon.span.call(null,G__108455,G__108456));
})();
var G__108418 = (function (){var G__108457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108458 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108457,G__108458) : tailrecursion.hoplon.span.call(null,G__108457,G__108458));
})();
var G__108419 = "[";
var G__108420 = (function (){var G__108459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108460 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108459,G__108460) : tailrecursion.hoplon.span.call(null,G__108459,G__108460));
})();
var G__108421 = "]\n  (";
var G__108422 = (function (){var G__108461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108462 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108461,G__108462) : tailrecursion.hoplon.span.call(null,G__108461,G__108462));
})();
var G__108423 = " (";
var G__108424 = (function (){var G__108463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108464 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108463,G__108464) : tailrecursion.hoplon.span.call(null,G__108463,G__108464));
})();
var G__108425 = "[";
var G__108426 = (function (){var G__108465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108466 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108465,G__108466) : tailrecursion.hoplon.span.call(null,G__108465,G__108466));
})();
var G__108427 = " ";
var G__108428 = (function (){var G__108467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108468 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108467,G__108468) : tailrecursion.hoplon.span.call(null,G__108467,G__108468));
})();
var G__108429 = "] ";
var G__108430 = (function (){var G__108469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108470 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108469,G__108470) : tailrecursion.hoplon.span.call(null,G__108469,G__108470));
})();
var G__108431 = ") ";
var G__108432 = (function (){var G__108471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108472 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108471,G__108472) : tailrecursion.hoplon.span.call(null,G__108471,G__108472));
})();
var G__108433 = " ";
var G__108434 = (function (){var G__108473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108474 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108473,G__108474) : tailrecursion.hoplon.span.call(null,G__108473,G__108474));
})();
var G__108435 = "))\n\n(";
var G__108436 = (function (){var G__108475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108476 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108475,G__108476) : tailrecursion.hoplon.span.call(null,G__108475,G__108476));
})();
var G__108437 = (function (){var G__108477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108478 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108477,G__108478) : tailrecursion.hoplon.span.call(null,G__108477,G__108478));
})();
var G__108438 = "[";
var G__108439 = (function (){var G__108479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108480 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108479,G__108480) : tailrecursion.hoplon.span.call(null,G__108479,G__108480));
})();
var G__108440 = "]\n  (";
var G__108441 = (function (){var G__108481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108482 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108481,G__108482) : tailrecursion.hoplon.span.call(null,G__108481,G__108482));
})();
var G__108442 = " (";
var G__108443 = (function (){var G__108483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108484 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108483,G__108484) : tailrecursion.hoplon.span.call(null,G__108483,G__108484));
})();
var G__108444 = "[";
var G__108445 = (function (){var G__108485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108486 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108485,G__108486) : tailrecursion.hoplon.span.call(null,G__108485,G__108486));
})();
var G__108446 = " ";
var G__108447 = (function (){var G__108487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108488 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108487,G__108488) : tailrecursion.hoplon.span.call(null,G__108487,G__108488));
})();
var G__108448 = "] ";
var G__108449 = (function (){var G__108489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108490 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108489,G__108490) : tailrecursion.hoplon.span.call(null,G__108489,G__108490));
})();
var G__108450 = ") ";
var G__108451 = (function (){var G__108491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108492 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108491,G__108492) : tailrecursion.hoplon.span.call(null,G__108491,G__108492));
})();
var G__108452 = " ";
var G__108453 = (function (){var G__108493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108494 = "itmes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108493,G__108494) : tailrecursion.hoplon.span.call(null,G__108493,G__108494));
})();
var G__108454 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__108415,G__108416,G__108417,G__108418,G__108419,G__108420,G__108421,G__108422,G__108423,G__108424,G__108425,G__108426,G__108427,G__108428,G__108429,G__108430,G__108431,G__108432,G__108433,G__108434,G__108435,G__108436,G__108437,G__108438,G__108439,G__108440,G__108441,G__108442,G__108443,G__108444,G__108445,G__108446,G__108447,G__108448,G__108449,G__108450,G__108451,G__108452,G__108453,G__108454) : tailrecursion.hoplon.pre.call(null,G__108415,G__108416,G__108417,G__108418,G__108419,G__108420,G__108421,G__108422,G__108423,G__108424,G__108425,G__108426,G__108427,G__108428,G__108429,G__108430,G__108431,G__108432,G__108433,G__108434,G__108435,G__108436,G__108437,G__108438,G__108439,G__108440,G__108441,G__108442,G__108443,G__108444,G__108445,G__108446,G__108447,G__108448,G__108449,G__108450,G__108451,G__108452,G__108453,G__108454));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108413,G__108414) : tailrecursion.hoplon.div.call(null,G__108413,G__108414));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108412) : tailrecursion.hoplon.div.call(null,G__108412));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108403;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108402;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108401;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108400;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_108495 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108496 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_108497 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108498 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108499 = (function (){var G__108500 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108501 = (function (){var G__108502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108503 = "(";
var G__108504 = (function (){var G__108549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108550 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108549,G__108550) : tailrecursion.hoplon.span.call(null,G__108549,G__108550));
})();
var G__108505 = (function (){var G__108551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108552 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108551,G__108552) : tailrecursion.hoplon.span.call(null,G__108551,G__108552));
})();
var G__108506 = "[";
var G__108507 = (function (){var G__108553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108554 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108553,G__108554) : tailrecursion.hoplon.span.call(null,G__108553,G__108554));
})();
var G__108508 = "]\n  (";
var G__108509 = (function (){var G__108555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108556 = "fold-right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108555,G__108556) : tailrecursion.hoplon.span.call(null,G__108555,G__108556));
})();
var G__108510 = " (";
var G__108511 = (function (){var G__108557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108558 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108557,G__108558) : tailrecursion.hoplon.span.call(null,G__108557,G__108558));
})();
var G__108512 = "[";
var G__108513 = (function (){var G__108559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108560 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108559,G__108560) : tailrecursion.hoplon.span.call(null,G__108559,G__108560));
})();
var G__108514 = " ";
var G__108515 = (function (){var G__108561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108562 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108561,G__108562) : tailrecursion.hoplon.span.call(null,G__108561,G__108562));
})();
var G__108516 = "] (";
var G__108517 = (function (){var G__108563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108564 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108563,G__108564) : tailrecursion.hoplon.span.call(null,G__108563,G__108564));
})();
var G__108518 = (function (){var G__108565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108566 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108565,G__108566) : tailrecursion.hoplon.span.call(null,G__108565,G__108566));
})();
var G__108519 = " (";
var G__108520 = (function (){var G__108567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108568 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108567,G__108568) : tailrecursion.hoplon.span.call(null,G__108567,G__108568));
})();
var G__108521 = (function (){var G__108569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108570 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108569,G__108570) : tailrecursion.hoplon.span.call(null,G__108569,G__108570));
})();
var G__108522 = "))) ";
var G__108523 = (function (){var G__108571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108572 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108571,G__108572) : tailrecursion.hoplon.span.call(null,G__108571,G__108572));
})();
var G__108524 = " ";
var G__108525 = (function (){var G__108573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108574 = "itms";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108573,G__108574) : tailrecursion.hoplon.span.call(null,G__108573,G__108574));
})();
var G__108526 = "))\n\n(";
var G__108527 = (function (){var G__108575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108576 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108575,G__108576) : tailrecursion.hoplon.span.call(null,G__108575,G__108576));
})();
var G__108528 = (function (){var G__108577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108578 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108577,G__108578) : tailrecursion.hoplon.span.call(null,G__108577,G__108578));
})();
var G__108529 = "[";
var G__108530 = (function (){var G__108579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108580 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108579,G__108580) : tailrecursion.hoplon.span.call(null,G__108579,G__108580));
})();
var G__108531 = "]\n  (";
var G__108532 = (function (){var G__108581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108582 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108581,G__108582) : tailrecursion.hoplon.span.call(null,G__108581,G__108582));
})();
var G__108533 = " (";
var G__108534 = (function (){var G__108583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108584 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108583,G__108584) : tailrecursion.hoplon.span.call(null,G__108583,G__108584));
})();
var G__108535 = "[";
var G__108536 = (function (){var G__108585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108586 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108585,G__108586) : tailrecursion.hoplon.span.call(null,G__108585,G__108586));
})();
var G__108537 = " ";
var G__108538 = (function (){var G__108587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108588 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108587,G__108588) : tailrecursion.hoplon.span.call(null,G__108587,G__108588));
})();
var G__108539 = "] (";
var G__108540 = (function (){var G__108589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108590 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108589,G__108590) : tailrecursion.hoplon.span.call(null,G__108589,G__108590));
})();
var G__108541 = (function (){var G__108591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108592 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108591,G__108592) : tailrecursion.hoplon.span.call(null,G__108591,G__108592));
})();
var G__108542 = " ";
var G__108543 = (function (){var G__108593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108594 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108593,G__108594) : tailrecursion.hoplon.span.call(null,G__108593,G__108594));
})();
var G__108544 = ")) ";
var G__108545 = (function (){var G__108595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108596 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108595,G__108596) : tailrecursion.hoplon.span.call(null,G__108595,G__108596));
})();
var G__108546 = " ";
var G__108547 = (function (){var G__108597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108598 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108597,G__108598) : tailrecursion.hoplon.span.call(null,G__108597,G__108598));
})();
var G__108548 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__108502,G__108503,G__108504,G__108505,G__108506,G__108507,G__108508,G__108509,G__108510,G__108511,G__108512,G__108513,G__108514,G__108515,G__108516,G__108517,G__108518,G__108519,G__108520,G__108521,G__108522,G__108523,G__108524,G__108525,G__108526,G__108527,G__108528,G__108529,G__108530,G__108531,G__108532,G__108533,G__108534,G__108535,G__108536,G__108537,G__108538,G__108539,G__108540,G__108541,G__108542,G__108543,G__108544,G__108545,G__108546,G__108547,G__108548) : tailrecursion.hoplon.pre.call(null,G__108502,G__108503,G__108504,G__108505,G__108506,G__108507,G__108508,G__108509,G__108510,G__108511,G__108512,G__108513,G__108514,G__108515,G__108516,G__108517,G__108518,G__108519,G__108520,G__108521,G__108522,G__108523,G__108524,G__108525,G__108526,G__108527,G__108528,G__108529,G__108530,G__108531,G__108532,G__108533,G__108534,G__108535,G__108536,G__108537,G__108538,G__108539,G__108540,G__108541,G__108542,G__108543,G__108544,G__108545,G__108546,G__108547,G__108548));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108500,G__108501) : tailrecursion.hoplon.div.call(null,G__108500,G__108501));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108499) : tailrecursion.hoplon.div.call(null,G__108499));
})(),(function (){var G__108599 = cljs.core.PersistentArrayMap.EMPTY;
var G__108600 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, if we want to use ",(function (){var G__108601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"cons"], null);
var G__108602 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108601,G__108602) : tailrecursion.hoplon.markdown.code_node.call(null,G__108601,G__108602));
})()," instead of ",(function (){var G__108603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"conj"], null);
var G__108604 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108603,G__108604) : tailrecursion.hoplon.markdown.code_node.call(null,G__108603,G__108604));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108599,G__108600) : tailrecursion.hoplon.markdown.para_node.call(null,G__108599,G__108600));
})(),(function (){var G__108605 = (function (){var G__108606 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108607 = (function (){var G__108608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108609 = "(";
var G__108610 = (function (){var G__108632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108633 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108632,G__108633) : tailrecursion.hoplon.span.call(null,G__108632,G__108633));
})();
var G__108611 = (function (){var G__108634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108635 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108634,G__108635) : tailrecursion.hoplon.span.call(null,G__108634,G__108635));
})();
var G__108612 = "[";
var G__108613 = (function (){var G__108636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108637 = "items";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108636,G__108637) : tailrecursion.hoplon.span.call(null,G__108636,G__108637));
})();
var G__108614 = "]\n  (";
var G__108615 = (function (){var G__108638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108639 = "fold-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108638,G__108639) : tailrecursion.hoplon.span.call(null,G__108638,G__108639));
})();
var G__108616 = " (";
var G__108617 = (function (){var G__108640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108641 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108640,G__108641) : tailrecursion.hoplon.span.call(null,G__108640,G__108641));
})();
var G__108618 = "[";
var G__108619 = (function (){var G__108642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108643 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108642,G__108643) : tailrecursion.hoplon.span.call(null,G__108642,G__108643));
})();
var G__108620 = " ";
var G__108621 = (function (){var G__108644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108645 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108644,G__108645) : tailrecursion.hoplon.span.call(null,G__108644,G__108645));
})();
var G__108622 = "] (";
var G__108623 = (function (){var G__108646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108647 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108646,G__108647) : tailrecursion.hoplon.span.call(null,G__108646,G__108647));
})();
var G__108624 = (function (){var G__108648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108649 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108648,G__108649) : tailrecursion.hoplon.span.call(null,G__108648,G__108649));
})();
var G__108625 = " ";
var G__108626 = (function (){var G__108650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108651 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108650,G__108651) : tailrecursion.hoplon.span.call(null,G__108650,G__108651));
})();
var G__108627 = ")) ";
var G__108628 = (function (){var G__108652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108653 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108652,G__108653) : tailrecursion.hoplon.span.call(null,G__108652,G__108653));
})();
var G__108629 = " ";
var G__108630 = (function (){var G__108654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108655 = "itmes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108654,G__108655) : tailrecursion.hoplon.span.call(null,G__108654,G__108655));
})();
var G__108631 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__108608,G__108609,G__108610,G__108611,G__108612,G__108613,G__108614,G__108615,G__108616,G__108617,G__108618,G__108619,G__108620,G__108621,G__108622,G__108623,G__108624,G__108625,G__108626,G__108627,G__108628,G__108629,G__108630,G__108631) : tailrecursion.hoplon.pre.call(null,G__108608,G__108609,G__108610,G__108611,G__108612,G__108613,G__108614,G__108615,G__108616,G__108617,G__108618,G__108619,G__108620,G__108621,G__108622,G__108623,G__108624,G__108625,G__108626,G__108627,G__108628,G__108629,G__108630,G__108631));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108606,G__108607) : tailrecursion.hoplon.div.call(null,G__108606,G__108607));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108605) : tailrecursion.hoplon.div.call(null,G__108605));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108498;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108497;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108496;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108495;
}})()], 0))], 0))], 0));
var G__97802 = "";
var G__97803 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Nested Mappings"], null),(function (){var _STAR_references_STAR_108656 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108657 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_108658 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_108659 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__108660 = cljs.core.PersistentArrayMap.EMPTY;
var G__108661 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can extend the sequence paradigm to include many computations that are commonly expressed using nested loops.",(function (){var G__108662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__108663 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This approach to nested mappings was shown to us by David Turner, whose languages KRC and Miranda provide elegant formalisms for dealing with these constructs. The examples in this section (see also ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/2/ex/42/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.42"], null)], 0))," are adapted from Turner 1981. In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/3/sect/5/sub/3/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 3.5.3"], null)], 0)),", we'll see how this approach generalizes to infinite sequences."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108662,G__108663) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108662,G__108663));
})()," Consider this problem: Given a positive integer \\(n\\), find all ordered pairs of distinct positive integers \\(i\\) and \\(j\\), where \\(1\\lt j\\lt i\\lt n\\), such that \\(i + j\\) is prime. For example, if \\(n\\) is 6, then the pairs are the following:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108660,G__108661) : tailrecursion.hoplon.markdown.para_node.call(null,G__108660,G__108661));
})(),(function (){var G__108664 = cljs.core.PersistentArrayMap.EMPTY;
var G__108665 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{array}{l | r r r r r r r} i & 2 & 3 & 4 & 4 & 5 & 6 & 6 \\\\ j & 1 & 2 & 1 & 3 & 2 & 1 & 5 \\\\ \\hline i+j & 3 & 5 & 5 & 7 & 7 & 7 & 11 \\end{array}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108664,G__108665) : tailrecursion.hoplon.markdown.para_node.call(null,G__108664,G__108665));
})(),(function (){var G__108666 = cljs.core.PersistentArrayMap.EMPTY;
var G__108667 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A natural way to organize this computation is to generalize the sequence of all ordered pairs of positive integers less than or equal to \\(n\\), filter to select those paris whose sum is prime, and then, for each pair \\((i,j)\\) that passes the filter, produce the triple \\((i, j, i+j)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108666,G__108667) : tailrecursion.hoplon.markdown.para_node.call(null,G__108666,G__108667));
})(),(function (){var G__108668 = cljs.core.PersistentArrayMap.EMPTY;
var G__108669 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is a way to generate the sequence of pairs: For each integer \\(i\\leq n\\), enumerate the integers \\(j\\lt i\\), and for each such \\(i\\) and \\(j\\) generate the pair \\((i,j)\\). In terms of sequence operations, we map along the sequence ",(function (){var G__108670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(range 1 (inc n))"], null);
var G__108671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108670,G__108671) : tailrecursion.hoplon.markdown.code_node.call(null,G__108670,G__108671));
})(),". For each \\(i\\) in this sequence, we map along the sequence ",(function (){var G__108672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(range 1 i 1)"], null);
var G__108673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108672,G__108673) : tailrecursion.hoplon.markdown.code_node.call(null,G__108672,G__108673));
})(),". For each \\(j\\) in this latter sequence, we generate the pair ",(function (){var G__108674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list i\nj)"], null);
var G__108675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108674,G__108675) : tailrecursion.hoplon.markdown.code_node.call(null,G__108674,G__108675));
})(),". This gives us a sequence of pairs for each \\(i\\). Combining all the sequences for all the \\(i\\) (by accumulating with ",(function (){var G__108676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__108677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108676,G__108677) : tailrecursion.hoplon.markdown.code_node.call(null,G__108676,G__108677));
})(),") produces the required sequence of pairs:",(function (){var G__108678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__108679 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note the behavior of ",(function (){var G__108680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"range"], null);
var G__108681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108680,G__108681) : tailrecursion.hoplon.markdown.code_node.call(null,G__108680,G__108681));
})(),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108678,G__108679) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108678,G__108679));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108668,G__108669) : tailrecursion.hoplon.markdown.para_node.call(null,G__108668,G__108669));
})(),(function (){var G__108682 = (function (){var G__108683 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108684 = (function (){var G__108685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108686 = "(";
var G__108687 = (function (){var G__108721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108722 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108721,G__108722) : tailrecursion.hoplon.span.call(null,G__108721,G__108722));
})();
var G__108688 = " ";
var G__108689 = (function (){var G__108723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108724 = "concat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108723,G__108724) : tailrecursion.hoplon.span.call(null,G__108723,G__108724));
})();
var G__108690 = "\n            ";
var G__108691 = (function (){var G__108725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108726 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108725,G__108726) : tailrecursion.hoplon.span.call(null,G__108725,G__108726));
})();
var G__108692 = "\n            (";
var G__108693 = (function (){var G__108727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108728 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108727,G__108728) : tailrecursion.hoplon.span.call(null,G__108727,G__108728));
})();
var G__108694 = "(";
var G__108695 = (function (){var G__108729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108730 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108729,G__108730) : tailrecursion.hoplon.span.call(null,G__108729,G__108730));
})();
var G__108696 = "[";
var G__108697 = (function (){var G__108731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108732 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108731,G__108732) : tailrecursion.hoplon.span.call(null,G__108731,G__108732));
})();
var G__108698 = "]\n                   (";
var G__108699 = (function (){var G__108733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108734 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108733,G__108734) : tailrecursion.hoplon.span.call(null,G__108733,G__108734));
})();
var G__108700 = "(";
var G__108701 = (function (){var G__108735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108736 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108735,G__108736) : tailrecursion.hoplon.span.call(null,G__108735,G__108736));
})();
var G__108702 = "[";
var G__108703 = (function (){var G__108737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108738 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108737,G__108738) : tailrecursion.hoplon.span.call(null,G__108737,G__108738));
})();
var G__108704 = "] (";
var G__108705 = (function (){var G__108739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108740 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108739,G__108740) : tailrecursion.hoplon.span.call(null,G__108739,G__108740));
})();
var G__108706 = (function (){var G__108741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108742 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108741,G__108742) : tailrecursion.hoplon.span.call(null,G__108741,G__108742));
})();
var G__108707 = " ";
var G__108708 = (function (){var G__108743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108744 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108743,G__108744) : tailrecursion.hoplon.span.call(null,G__108743,G__108744));
})();
var G__108709 = "))\n                        (";
var G__108710 = (function (){var G__108745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108746 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108745,G__108746) : tailrecursion.hoplon.span.call(null,G__108745,G__108746));
})();
var G__108711 = (function (){var G__108747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108748 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108747,G__108748) : tailrecursion.hoplon.span.call(null,G__108747,G__108748));
})();
var G__108712 = " ";
var G__108713 = (function (){var G__108749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108750 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108749,G__108750) : tailrecursion.hoplon.span.call(null,G__108749,G__108750));
})();
var G__108714 = ")))\n                 (";
var G__108715 = (function (){var G__108751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108752 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108751,G__108752) : tailrecursion.hoplon.span.call(null,G__108751,G__108752));
})();
var G__108716 = (function (){var G__108753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108754 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108753,G__108754) : tailrecursion.hoplon.span.call(null,G__108753,G__108754));
})();
var G__108717 = " (";
var G__108718 = (function (){var G__108755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108756 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108755,G__108756) : tailrecursion.hoplon.span.call(null,G__108755,G__108756));
})();
var G__108719 = (function (){var G__108757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108758 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108757,G__108758) : tailrecursion.hoplon.span.call(null,G__108757,G__108758));
})();
var G__108720 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__108685,G__108686,G__108687,G__108688,G__108689,G__108690,G__108691,G__108692,G__108693,G__108694,G__108695,G__108696,G__108697,G__108698,G__108699,G__108700,G__108701,G__108702,G__108703,G__108704,G__108705,G__108706,G__108707,G__108708,G__108709,G__108710,G__108711,G__108712,G__108713,G__108714,G__108715,G__108716,G__108717,G__108718,G__108719,G__108720) : tailrecursion.hoplon.pre.call(null,G__108685,G__108686,G__108687,G__108688,G__108689,G__108690,G__108691,G__108692,G__108693,G__108694,G__108695,G__108696,G__108697,G__108698,G__108699,G__108700,G__108701,G__108702,G__108703,G__108704,G__108705,G__108706,G__108707,G__108708,G__108709,G__108710,G__108711,G__108712,G__108713,G__108714,G__108715,G__108716,G__108717,G__108718,G__108719,G__108720));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108683,G__108684) : tailrecursion.hoplon.div.call(null,G__108683,G__108684));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108682) : tailrecursion.hoplon.div.call(null,G__108682));
})(),(function (){var G__108759 = cljs.core.PersistentArrayMap.EMPTY;
var G__108760 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The combination of mapping and accumulating with ",(function (){var G__108761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"concat"], null);
var G__108762 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__108761,G__108762) : tailrecursion.hoplon.markdown.code_node.call(null,G__108761,G__108762));
})()," is so common in this sort of program that we will isolate it as a separate procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108759,G__108760) : tailrecursion.hoplon.markdown.para_node.call(null,G__108759,G__108760));
})(),(function (){var G__108763 = (function (){var G__108764 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108765 = (function (){var G__108766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108767 = "(";
var G__108768 = (function (){var G__108786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108787 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108786,G__108787) : tailrecursion.hoplon.span.call(null,G__108786,G__108787));
})();
var G__108769 = (function (){var G__108788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108789 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108788,G__108789) : tailrecursion.hoplon.span.call(null,G__108788,G__108789));
})();
var G__108770 = " [";
var G__108771 = (function (){var G__108790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108791 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108790,G__108791) : tailrecursion.hoplon.span.call(null,G__108790,G__108791));
})();
var G__108772 = " ";
var G__108773 = (function (){var G__108792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108793 = "seq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108792,G__108793) : tailrecursion.hoplon.span.call(null,G__108792,G__108793));
})();
var G__108774 = "]\n  (";
var G__108775 = (function (){var G__108794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108795 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108794,G__108795) : tailrecursion.hoplon.span.call(null,G__108794,G__108795));
})();
var G__108776 = " ";
var G__108777 = (function (){var G__108796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108797 = "append";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108796,G__108797) : tailrecursion.hoplon.span.call(null,G__108796,G__108797));
})();
var G__108778 = " ";
var G__108779 = (function (){var G__108798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108799 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108798,G__108799) : tailrecursion.hoplon.span.call(null,G__108798,G__108799));
})();
var G__108780 = " (";
var G__108781 = (function (){var G__108800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108801 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108800,G__108801) : tailrecursion.hoplon.span.call(null,G__108800,G__108801));
})();
var G__108782 = (function (){var G__108802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108803 = "proc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108802,G__108803) : tailrecursion.hoplon.span.call(null,G__108802,G__108803));
})();
var G__108783 = " ";
var G__108784 = (function (){var G__108804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108805 = "seq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108804,G__108805) : tailrecursion.hoplon.span.call(null,G__108804,G__108805));
})();
var G__108785 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__108766,G__108767,G__108768,G__108769,G__108770,G__108771,G__108772,G__108773,G__108774,G__108775,G__108776,G__108777,G__108778,G__108779,G__108780,G__108781,G__108782,G__108783,G__108784,G__108785) : tailrecursion.hoplon.pre.call(null,G__108766,G__108767,G__108768,G__108769,G__108770,G__108771,G__108772,G__108773,G__108774,G__108775,G__108776,G__108777,G__108778,G__108779,G__108780,G__108781,G__108782,G__108783,G__108784,G__108785));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108764,G__108765) : tailrecursion.hoplon.div.call(null,G__108764,G__108765));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108763) : tailrecursion.hoplon.div.call(null,G__108763));
})(),(function (){var G__108806 = cljs.core.PersistentArrayMap.EMPTY;
var G__108807 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now filter this sequence of pairs to find those whose sum is prime. The filter predicate is called for each element of the sequence; its argument is a pair and it must extract the integers from the pair. Thus, the predicate to apply to each element in the sequence is"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108806,G__108807) : tailrecursion.hoplon.markdown.para_node.call(null,G__108806,G__108807));
})(),(function (){var G__108808 = (function (){var G__108809 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108810 = (function (){var G__108811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108812 = "(";
var G__108813 = (function (){var G__108828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108829 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108828,G__108829) : tailrecursion.hoplon.span.call(null,G__108828,G__108829));
})();
var G__108814 = (function (){var G__108830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108831 = "prime-sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108830,G__108831) : tailrecursion.hoplon.span.call(null,G__108830,G__108831));
})();
var G__108815 = " [";
var G__108816 = (function (){var G__108832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108833 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108832,G__108833) : tailrecursion.hoplon.span.call(null,G__108832,G__108833));
})();
var G__108817 = "]\n  (";
var G__108818 = (function (){var G__108834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108835 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108834,G__108835) : tailrecursion.hoplon.span.call(null,G__108834,G__108835));
})();
var G__108819 = " (";
var G__108820 = (function (){var G__108836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108837 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108836,G__108837) : tailrecursion.hoplon.span.call(null,G__108836,G__108837));
})();
var G__108821 = "(";
var G__108822 = (function (){var G__108838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108839 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108838,G__108839) : tailrecursion.hoplon.span.call(null,G__108838,G__108839));
})();
var G__108823 = (function (){var G__108840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108841 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108840,G__108841) : tailrecursion.hoplon.span.call(null,G__108840,G__108841));
})();
var G__108824 = ") (";
var G__108825 = (function (){var G__108842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108843 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108842,G__108843) : tailrecursion.hoplon.span.call(null,G__108842,G__108843));
})();
var G__108826 = (function (){var G__108844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108845 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108844,G__108845) : tailrecursion.hoplon.span.call(null,G__108844,G__108845));
})();
var G__108827 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__108811,G__108812,G__108813,G__108814,G__108815,G__108816,G__108817,G__108818,G__108819,G__108820,G__108821,G__108822,G__108823,G__108824,G__108825,G__108826,G__108827) : tailrecursion.hoplon.pre.call(null,G__108811,G__108812,G__108813,G__108814,G__108815,G__108816,G__108817,G__108818,G__108819,G__108820,G__108821,G__108822,G__108823,G__108824,G__108825,G__108826,G__108827));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108809,G__108810) : tailrecursion.hoplon.div.call(null,G__108809,G__108810));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108808) : tailrecursion.hoplon.div.call(null,G__108808));
})(),(function (){var G__108846 = cljs.core.PersistentArrayMap.EMPTY;
var G__108847 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Finally, generate the sequence of results by mapping over the filtered pairs using the following procedure, which constructs a triple consisting of the two elements of the pair along with their sum:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108846,G__108847) : tailrecursion.hoplon.markdown.para_node.call(null,G__108846,G__108847));
})(),(function (){var G__108848 = (function (){var G__108849 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108850 = (function (){var G__108851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108852 = "(";
var G__108853 = (function (){var G__108874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108875 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108874,G__108875) : tailrecursion.hoplon.span.call(null,G__108874,G__108875));
})();
var G__108854 = (function (){var G__108876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108877 = "make-pair-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108876,G__108877) : tailrecursion.hoplon.span.call(null,G__108876,G__108877));
})();
var G__108855 = " [";
var G__108856 = (function (){var G__108878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108879 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108878,G__108879) : tailrecursion.hoplon.span.call(null,G__108878,G__108879));
})();
var G__108857 = "]\n  (";
var G__108858 = (function (){var G__108880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108881 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108880,G__108881) : tailrecursion.hoplon.span.call(null,G__108880,G__108881));
})();
var G__108859 = "(";
var G__108860 = (function (){var G__108882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108883 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108882,G__108883) : tailrecursion.hoplon.span.call(null,G__108882,G__108883));
})();
var G__108861 = (function (){var G__108884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108885 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108884,G__108885) : tailrecursion.hoplon.span.call(null,G__108884,G__108885));
})();
var G__108862 = ") (";
var G__108863 = (function (){var G__108886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108887 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108886,G__108887) : tailrecursion.hoplon.span.call(null,G__108886,G__108887));
})();
var G__108864 = (function (){var G__108888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108889 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108888,G__108889) : tailrecursion.hoplon.span.call(null,G__108888,G__108889));
})();
var G__108865 = ") (";
var G__108866 = (function (){var G__108890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108891 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108890,G__108891) : tailrecursion.hoplon.span.call(null,G__108890,G__108891));
})();
var G__108867 = "(";
var G__108868 = (function (){var G__108892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108893 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108892,G__108893) : tailrecursion.hoplon.span.call(null,G__108892,G__108893));
})();
var G__108869 = (function (){var G__108894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108895 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108894,G__108895) : tailrecursion.hoplon.span.call(null,G__108894,G__108895));
})();
var G__108870 = ") (";
var G__108871 = (function (){var G__108896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108897 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108896,G__108897) : tailrecursion.hoplon.span.call(null,G__108896,G__108897));
})();
var G__108872 = (function (){var G__108898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108899 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108898,G__108899) : tailrecursion.hoplon.span.call(null,G__108898,G__108899));
})();
var G__108873 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__108851,G__108852,G__108853,G__108854,G__108855,G__108856,G__108857,G__108858,G__108859,G__108860,G__108861,G__108862,G__108863,G__108864,G__108865,G__108866,G__108867,G__108868,G__108869,G__108870,G__108871,G__108872,G__108873) : tailrecursion.hoplon.pre.call(null,G__108851,G__108852,G__108853,G__108854,G__108855,G__108856,G__108857,G__108858,G__108859,G__108860,G__108861,G__108862,G__108863,G__108864,G__108865,G__108866,G__108867,G__108868,G__108869,G__108870,G__108871,G__108872,G__108873));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108849,G__108850) : tailrecursion.hoplon.div.call(null,G__108849,G__108850));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108848) : tailrecursion.hoplon.div.call(null,G__108848));
})(),(function (){var G__108900 = cljs.core.PersistentArrayMap.EMPTY;
var G__108901 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Combining all these steps yields the complete procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108900,G__108901) : tailrecursion.hoplon.markdown.para_node.call(null,G__108900,G__108901));
})(),(function (){var G__108902 = (function (){var G__108903 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108904 = (function (){var G__108905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108906 = "(";
var G__108907 = (function (){var G__108945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108946 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108945,G__108946) : tailrecursion.hoplon.span.call(null,G__108945,G__108946));
})();
var G__108908 = (function (){var G__108947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108948 = "prime-sum-pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108947,G__108948) : tailrecursion.hoplon.span.call(null,G__108947,G__108948));
})();
var G__108909 = " [";
var G__108910 = (function (){var G__108949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108950 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108949,G__108950) : tailrecursion.hoplon.span.call(null,G__108949,G__108950));
})();
var G__108911 = "]\n  (";
var G__108912 = (function (){var G__108951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108952 = "make-pair-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108951,G__108952) : tailrecursion.hoplon.span.call(null,G__108951,G__108952));
})();
var G__108913 = "\n    (";
var G__108914 = (function (){var G__108953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108954 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108953,G__108954) : tailrecursion.hoplon.span.call(null,G__108953,G__108954));
})();
var G__108915 = (function (){var G__108955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108956 = "prime-sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108955,G__108956) : tailrecursion.hoplon.span.call(null,G__108955,G__108956));
})();
var G__108916 = "\n      (";
var G__108917 = (function (){var G__108957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__108958 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108957,G__108958) : tailrecursion.hoplon.span.call(null,G__108957,G__108958));
})();
var G__108918 = "\n        (";
var G__108919 = (function (){var G__108959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108960 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108959,G__108960) : tailrecursion.hoplon.span.call(null,G__108959,G__108960));
})();
var G__108920 = "[";
var G__108921 = (function (){var G__108961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108962 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108961,G__108962) : tailrecursion.hoplon.span.call(null,G__108961,G__108962));
})();
var G__108922 = "]\n          (";
var G__108923 = (function (){var G__108963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108964 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108963,G__108964) : tailrecursion.hoplon.span.call(null,G__108963,G__108964));
})();
var G__108924 = "(";
var G__108925 = (function (){var G__108965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__108966 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108965,G__108966) : tailrecursion.hoplon.span.call(null,G__108965,G__108966));
})();
var G__108926 = "[";
var G__108927 = (function (){var G__108967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108968 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108967,G__108968) : tailrecursion.hoplon.span.call(null,G__108967,G__108968));
})();
var G__108928 = "] (";
var G__108929 = (function (){var G__108969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108970 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108969,G__108970) : tailrecursion.hoplon.span.call(null,G__108969,G__108970));
})();
var G__108930 = (function (){var G__108971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108972 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108971,G__108972) : tailrecursion.hoplon.span.call(null,G__108971,G__108972));
})();
var G__108931 = " ";
var G__108932 = (function (){var G__108973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108974 = "j";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108973,G__108974) : tailrecursion.hoplon.span.call(null,G__108973,G__108974));
})();
var G__108933 = "))\n               (";
var G__108934 = (function (){var G__108975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108976 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108975,G__108976) : tailrecursion.hoplon.span.call(null,G__108975,G__108976));
})();
var G__108935 = (function (){var G__108977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108978 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108977,G__108978) : tailrecursion.hoplon.span.call(null,G__108977,G__108978));
})();
var G__108936 = " ";
var G__108937 = (function (){var G__108979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108980 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108979,G__108980) : tailrecursion.hoplon.span.call(null,G__108979,G__108980));
})();
var G__108938 = ")))\n        (";
var G__108939 = (function (){var G__108981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108982 = "range ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108981,G__108982) : tailrecursion.hoplon.span.call(null,G__108981,G__108982));
})();
var G__108940 = (function (){var G__108983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__108984 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108983,G__108984) : tailrecursion.hoplon.span.call(null,G__108983,G__108984));
})();
var G__108941 = " (";
var G__108942 = (function (){var G__108985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__108986 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108985,G__108986) : tailrecursion.hoplon.span.call(null,G__108985,G__108986));
})();
var G__108943 = (function (){var G__108987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__108988 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__108987,G__108988) : tailrecursion.hoplon.span.call(null,G__108987,G__108988));
})();
var G__108944 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__108905,G__108906,G__108907,G__108908,G__108909,G__108910,G__108911,G__108912,G__108913,G__108914,G__108915,G__108916,G__108917,G__108918,G__108919,G__108920,G__108921,G__108922,G__108923,G__108924,G__108925,G__108926,G__108927,G__108928,G__108929,G__108930,G__108931,G__108932,G__108933,G__108934,G__108935,G__108936,G__108937,G__108938,G__108939,G__108940,G__108941,G__108942,G__108943,G__108944) : tailrecursion.hoplon.pre.call(null,G__108905,G__108906,G__108907,G__108908,G__108909,G__108910,G__108911,G__108912,G__108913,G__108914,G__108915,G__108916,G__108917,G__108918,G__108919,G__108920,G__108921,G__108922,G__108923,G__108924,G__108925,G__108926,G__108927,G__108928,G__108929,G__108930,G__108931,G__108932,G__108933,G__108934,G__108935,G__108936,G__108937,G__108938,G__108939,G__108940,G__108941,G__108942,G__108943,G__108944));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108903,G__108904) : tailrecursion.hoplon.div.call(null,G__108903,G__108904));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108902) : tailrecursion.hoplon.div.call(null,G__108902));
})(),(function (){var G__108989 = cljs.core.PersistentArrayMap.EMPTY;
var G__108990 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Nested mappings are also useful for sequences other than those that enumerate intervals. Suppose we wish to generate all the permutations of a set \\(S\\); that is, all the ways of ordering the items in the set. For instance, the permutations of {1,2,3} are {1,2,3}, {1,3,2}, {2,1,3}, {2,3,1}, {3,1,2}, and {3,2,1}. Here is a plan for generating the permutations of \\(S\\): For each item \\(x\\) in \\(S\\), recursively generate the sequence of permutations of \\(S-x\\),",(function (){var G__108991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__108992 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The set \\(S-x\\) is the set of all elements of \\(S\\), excluding \\(x\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108991,G__108992) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108991,G__108992));
})()," and adjoin \\(x\\) to the front of each one. This yields, for each \\(x\\) in \\(S\\), the sequence of permutations of \\(S\\) that begin with \\(x\\). Combining these sequences for all \\(x\\) gives all the permutations of \\(S\\):",(function (){var G__108993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__108994 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Semicolons in Scheme code are used to introduce comments. Everything from the semicolon to the end of the line is ignored by the interpreter. In this book we don't use many comments; we try to make our programs self-documenting by using descriptive names."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__108993,G__108994) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__108993,G__108994));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__108989,G__108990) : tailrecursion.hoplon.markdown.para_node.call(null,G__108989,G__108990));
})(),(function (){var G__108995 = (function (){var G__108996 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__108997 = (function (){var G__108998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__108999 = "(";
var G__109000 = (function (){var G__109045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109046 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109045,G__109046) : tailrecursion.hoplon.span.call(null,G__109045,G__109046));
})();
var G__109001 = (function (){var G__109047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109048 = "permutations";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109047,G__109048) : tailrecursion.hoplon.span.call(null,G__109047,G__109048));
})();
var G__109002 = " [";
var G__109003 = (function (){var G__109049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109050 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109049,G__109050) : tailrecursion.hoplon.span.call(null,G__109049,G__109050));
})();
var G__109004 = "]\n  (";
var G__109005 = (function (){var G__109051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109052 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109051,G__109052) : tailrecursion.hoplon.span.call(null,G__109051,G__109052));
})();
var G__109006 = "(";
var G__109007 = (function (){var G__109053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109054 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109053,G__109054) : tailrecursion.hoplon.span.call(null,G__109053,G__109054));
})();
var G__109008 = " ";
var G__109009 = (function (){var G__109055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109056 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109055,G__109056) : tailrecursion.hoplon.span.call(null,G__109055,G__109056));
})();
var G__109010 = ")      ";
var G__109011 = (function (){var G__109057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__109058 = "; empty set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109057,G__109058) : tailrecursion.hoplon.span.call(null,G__109057,G__109058));
})();
var G__109012 = "\n      (";
var G__109013 = (function (){var G__109059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109060 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109059,G__109060) : tailrecursion.hoplon.span.call(null,G__109059,G__109060));
})();
var G__109014 = "(";
var G__109015 = (function (){var G__109061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109062 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109061,G__109062) : tailrecursion.hoplon.span.call(null,G__109061,G__109062));
})();
var G__109016 = "))  ";
var G__109017 = (function (){var G__109063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__109064 = "; sequence containing only the empty list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109063,G__109064) : tailrecursion.hoplon.span.call(null,G__109063,G__109064));
})();
var G__109018 = "\n      (";
var G__109019 = (function (){var G__109065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109066 = "flatmap";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109065,G__109066) : tailrecursion.hoplon.span.call(null,G__109065,G__109066));
})();
var G__109020 = " (";
var G__109021 = (function (){var G__109067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109068 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109067,G__109068) : tailrecursion.hoplon.span.call(null,G__109067,G__109068));
})();
var G__109022 = "[";
var G__109023 = (function (){var G__109069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109070 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109069,G__109070) : tailrecursion.hoplon.span.call(null,G__109069,G__109070));
})();
var G__109024 = "]\n                 (";
var G__109025 = (function (){var G__109071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109072 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109071,G__109072) : tailrecursion.hoplon.span.call(null,G__109071,G__109072));
})();
var G__109026 = "(";
var G__109027 = (function (){var G__109073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109074 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109073,G__109074) : tailrecursion.hoplon.span.call(null,G__109073,G__109074));
})();
var G__109028 = "[";
var G__109029 = (function (){var G__109075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109076 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109075,G__109076) : tailrecursion.hoplon.span.call(null,G__109075,G__109076));
})();
var G__109030 = "] (";
var G__109031 = (function (){var G__109077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109078 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109077,G__109078) : tailrecursion.hoplon.span.call(null,G__109077,G__109078));
})();
var G__109032 = (function (){var G__109079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109080 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109079,G__109080) : tailrecursion.hoplon.span.call(null,G__109079,G__109080));
})();
var G__109033 = " ";
var G__109034 = (function (){var G__109081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109082 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109081,G__109082) : tailrecursion.hoplon.span.call(null,G__109081,G__109082));
})();
var G__109035 = "))\n                      (";
var G__109036 = (function (){var G__109083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__109084 = "permutations";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109083,G__109084) : tailrecursion.hoplon.span.call(null,G__109083,G__109084));
})();
var G__109037 = " (";
var G__109038 = (function (){var G__109085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109086 = "remove ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109085,G__109086) : tailrecursion.hoplon.span.call(null,G__109085,G__109086));
})();
var G__109039 = (function (){var G__109087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109088 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109087,G__109088) : tailrecursion.hoplon.span.call(null,G__109087,G__109088));
})();
var G__109040 = " ";
var G__109041 = (function (){var G__109089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109090 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109089,G__109090) : tailrecursion.hoplon.span.call(null,G__109089,G__109090));
})();
var G__109042 = "))))\n               ";
var G__109043 = (function (){var G__109091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109092 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109091,G__109092) : tailrecursion.hoplon.span.call(null,G__109091,G__109092));
})();
var G__109044 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__108998,G__108999,G__109000,G__109001,G__109002,G__109003,G__109004,G__109005,G__109006,G__109007,G__109008,G__109009,G__109010,G__109011,G__109012,G__109013,G__109014,G__109015,G__109016,G__109017,G__109018,G__109019,G__109020,G__109021,G__109022,G__109023,G__109024,G__109025,G__109026,G__109027,G__109028,G__109029,G__109030,G__109031,G__109032,G__109033,G__109034,G__109035,G__109036,G__109037,G__109038,G__109039,G__109040,G__109041,G__109042,G__109043,G__109044) : tailrecursion.hoplon.pre.call(null,G__108998,G__108999,G__109000,G__109001,G__109002,G__109003,G__109004,G__109005,G__109006,G__109007,G__109008,G__109009,G__109010,G__109011,G__109012,G__109013,G__109014,G__109015,G__109016,G__109017,G__109018,G__109019,G__109020,G__109021,G__109022,G__109023,G__109024,G__109025,G__109026,G__109027,G__109028,G__109029,G__109030,G__109031,G__109032,G__109033,G__109034,G__109035,G__109036,G__109037,G__109038,G__109039,G__109040,G__109041,G__109042,G__109043,G__109044));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__108996,G__108997) : tailrecursion.hoplon.div.call(null,G__108996,G__108997));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__108995) : tailrecursion.hoplon.div.call(null,G__108995));
})(),(function (){var G__109093 = cljs.core.PersistentArrayMap.EMPTY;
var G__109094 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice how this strategy reduces the problem of generating permutations of \\(S\\) to the problem of generating the permutations of sets with fewer elements than \\(S\\). In the terminal case, we work our way down to the empty list, which represents a set of no elements. For this, we generate ",(function (){var G__109095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(list (list ))"], null);
var G__109096 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__109095,G__109096) : tailrecursion.hoplon.markdown.code_node.call(null,G__109095,G__109096));
})(),", which is a sequence with one item, namely the set with no elements. The remove procedure used in permutations returns all the items in a given sequence except for a given item. This can be expressed as a simple filter:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__109093,G__109094) : tailrecursion.hoplon.markdown.para_node.call(null,G__109093,G__109094));
})(),(function (){var G__109097 = (function (){var G__109098 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__109099 = (function (){var G__109100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__109101 = "(";
var G__109102 = (function (){var G__109119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__109120 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109119,G__109120) : tailrecursion.hoplon.span.call(null,G__109119,G__109120));
})();
var G__109103 = (function (){var G__109121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109122 = "remove ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109121,G__109122) : tailrecursion.hoplon.span.call(null,G__109121,G__109122));
})();
var G__109104 = "[";
var G__109105 = (function (){var G__109123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109124 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109123,G__109124) : tailrecursion.hoplon.span.call(null,G__109123,G__109124));
})();
var G__109106 = " ";
var G__109107 = (function (){var G__109125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109126 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109125,G__109126) : tailrecursion.hoplon.span.call(null,G__109125,G__109126));
})();
var G__109108 = "]\n  (";
var G__109109 = (function (){var G__109127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109128 = "filter ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109127,G__109128) : tailrecursion.hoplon.span.call(null,G__109127,G__109128));
})();
var G__109110 = (function (){var G__109129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__109130 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109129,G__109130) : tailrecursion.hoplon.span.call(null,G__109129,G__109130));
})();
var G__109111 = "(";
var G__109112 = (function (){var G__109131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__109132 = "not= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109131,G__109132) : tailrecursion.hoplon.span.call(null,G__109131,G__109132));
})();
var G__109113 = (function (){var G__109133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109134 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109133,G__109134) : tailrecursion.hoplon.span.call(null,G__109133,G__109134));
})();
var G__109114 = " ";
var G__109115 = (function (){var G__109135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109136 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109135,G__109136) : tailrecursion.hoplon.span.call(null,G__109135,G__109136));
})();
var G__109116 = ") \n          ";
var G__109117 = (function (){var G__109137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__109138 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__109137,G__109138) : tailrecursion.hoplon.span.call(null,G__109137,G__109138));
})();
var G__109118 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__109100,G__109101,G__109102,G__109103,G__109104,G__109105,G__109106,G__109107,G__109108,G__109109,G__109110,G__109111,G__109112,G__109113,G__109114,G__109115,G__109116,G__109117,G__109118) : tailrecursion.hoplon.pre.call(null,G__109100,G__109101,G__109102,G__109103,G__109104,G__109105,G__109106,G__109107,G__109108,G__109109,G__109110,G__109111,G__109112,G__109113,G__109114,G__109115,G__109116,G__109117,G__109118));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__109098,G__109099) : tailrecursion.hoplon.div.call(null,G__109098,G__109099));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__109097) : tailrecursion.hoplon.div.call(null,G__109097));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108659;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108658;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_108657;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_108656;
}})()], 0));
var G__97804 = "";
var G__97805 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$30(G__97776,G__97777,G__97778,G__97779,G__97780,G__97781,G__97782,G__97783,G__97784,G__97785,G__97786,G__97787,G__97788,G__97789,G__97790,G__97791,G__97792,G__97793,G__97794,G__97795,G__97796,G__97797,G__97798,G__97799,G__97800,G__97801,G__97802,G__97803,G__97804,G__97805) : tailrecursion.hoplon.div.call(null,G__97776,G__97777,G__97778,G__97779,G__97780,G__97781,G__97782,G__97783,G__97784,G__97785,G__97786,G__97787,G__97788,G__97789,G__97790,G__97791,G__97792,G__97793,G__97794,G__97795,G__97796,G__97797,G__97798,G__97799,G__97800,G__97801,G__97802,G__97803,G__97804,G__97805));
};
var content$sicp$texts$ch2sect2$content = function (var_args){
var args__10403__auto__ = null;
if (arguments.length > 0) {
var G__109139__i = 0, G__109139__a = new Array(arguments.length -  0);
while (G__109139__i < G__109139__a.length) {G__109139__a[G__109139__i] = arguments[G__109139__i + 0]; ++G__109139__i;}
  args__10403__auto__ = new cljs.core.IndexedSeq(G__109139__a,0);
} 
return content$sicp$texts$ch2sect2$content__delegate.call(this,args__10403__auto__);};
content$sicp$texts$ch2sect2$content.cljs$lang$maxFixedArity = 0;
content$sicp$texts$ch2sect2$content.cljs$lang$applyTo = (function (arglist__109140){
var args__10403__auto__ = cljs.core.seq(arglist__109140);
return content$sicp$texts$ch2sect2$content__delegate(args__10403__auto__);
});
content$sicp$texts$ch2sect2$content.cljs$core$IFn$_invoke$arity$variadic = content$sicp$texts$ch2sect2$content__delegate;
return content$sicp$texts$ch2sect2$content;
})()
;

// Compiled by ClojureScript 0.0-3308 {:static-fns true, :optimize-constants true}
goog.provide('content.sicp.texts.ch1sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('content.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
content.sicp.texts.ch1sect2.content = (function() { 
var content$sicp$texts$ch1sect2$content__delegate = function (args__10403__auto__){
var vec__153275 = tailrecursion.hoplon.parse_args(args__10403__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__153275,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__153275,(1),null);
var G__153276 = cljs.core.PersistentArrayMap.EMPTY;
var G__153277 = content.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Procedures and the Processes They Generate"], null),(function (){var _STAR_references_STAR_153307 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153308 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_153309 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153310 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__153311 = cljs.core.PersistentArrayMap.EMPTY;
var G__153312 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have now considered the elements of programming: We have used primitive arithmetic operations, we have combined these operations, and we have abstracted these composite operations by defining them as compound procedures. But that is not enough to enable us to say that we know how to program. Our situation is analogous to that of someone who has learned the rules for how the pieces move in chess but knows nothing of typical openings, tactics, or strategy. Like the novice chess player, we don",(function (){var G__153313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__153314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__153313,G__153314) : tailrecursion.hoplon.markdown.simple_node.call(null,G__153313,G__153314));
})(),"t yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). We lack the experience to predict the consequences of making a move (executing a procedure)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153311,G__153312) : tailrecursion.hoplon.markdown.para_node.call(null,G__153311,G__153312));
})(),(function (){var G__153315 = cljs.core.PersistentArrayMap.EMPTY;
var G__153316 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity. In becoming an expert photographer, for example, one must learn how to look at a scene and know how dark each region will appear on a print for each possible choice of exposure and development conditions. Only then can one reason backward, planning framing, lighting, exposure, and development to obtain the desired effects. So it is with programming, where we are planning the course of action to be taken by a process and where we control the process by means of a program. To become experts, we must learn to visualize the processes generated by various types of procedures. Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153315,G__153316) : tailrecursion.hoplon.markdown.para_node.call(null,G__153315,G__153316));
})(),(function (){var G__153317 = cljs.core.PersistentArrayMap.EMPTY;
var G__153318 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A procedure is a pattern for the local evolution of a computational process. It specifies how each stage of the process is built upon the previous stage. We would like to be able to make statements about the overall, or global, behavior of a process whose local evolution has been specified by a procedure. This is very difficult to do in general, but we can at least try to describe some typical patterns of process evolution."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153317,G__153318) : tailrecursion.hoplon.markdown.para_node.call(null,G__153317,G__153318));
})(),(function (){var G__153319 = cljs.core.PersistentArrayMap.EMPTY;
var G__153320 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section we will examine some common ",(function (){var G__153321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153322 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153321,G__153322) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153321,G__153322));
})()," for processes generated by simple procedures. We will also investigate the rates at which these processes consume the important computational resources of time and space. The procedures we will consider are very simple. Their role is like that played by test patterns in photography: as oversimplified prototypical patterns, rather than practical examples in their own right."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153319,G__153320) : tailrecursion.hoplon.markdown.para_node.call(null,G__153319,G__153320));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153310;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153309;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153308;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153307;
}})()], 0));
var G__153278 = "";
var G__153279 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Linear Recursion and Iteration"], null),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"A linear recursive process for computing 6!."], null)], 0)),(function (){var _STAR_references_STAR_153323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_153325 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153326 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__153327 = cljs.core.PersistentArrayMap.EMPTY;
var G__153328 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin by considering the factorial function, defined by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153327,G__153328) : tailrecursion.hoplon.markdown.para_node.call(null,G__153327,G__153328));
})(),(function (){var G__153329 = cljs.core.PersistentArrayMap.EMPTY;
var G__153330 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153329,G__153330) : tailrecursion.hoplon.markdown.para_node.call(null,G__153329,G__153330));
})(),(function (){var G__153331 = cljs.core.PersistentArrayMap.EMPTY;
var G__153332 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are many ways to compute factorials. One way is to make use of the observation that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n!"], null)], 0))," is equal to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," times ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)!"], null)], 0))," for any positive integer ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153331,G__153332) : tailrecursion.hoplon.markdown.para_node.call(null,G__153331,G__153332));
})(),(function (){var G__153333 = cljs.core.PersistentArrayMap.EMPTY;
var G__153334 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1\\right"], null)], 0)),"=n\\cdot(n-1)!$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153333,G__153334) : tailrecursion.hoplon.markdown.para_node.call(null,G__153333,G__153334));
})(),(function (){var G__153335 = cljs.core.PersistentArrayMap.EMPTY;
var G__153336 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus we can compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)"], null)], 0)),"! and multiplying the result by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". If we add the stipulation that 1! is equal to 1, this observation translates directly into a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153335,G__153336) : tailrecursion.hoplon.markdown.para_node.call(null,G__153335,G__153336));
})(),(function (){var G__153337 = (function (){var G__153338 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__153339 = (function (){var G__153340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__153341 = "(";
var G__153342 = (function (){var G__153366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153367 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153366,G__153367) : tailrecursion.hoplon.span.call(null,G__153366,G__153367));
})();
var G__153343 = (function (){var G__153368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153369 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153368,G__153369) : tailrecursion.hoplon.span.call(null,G__153368,G__153369));
})();
var G__153344 = " [";
var G__153345 = (function (){var G__153370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153371 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153370,G__153371) : tailrecursion.hoplon.span.call(null,G__153370,G__153371));
})();
var G__153346 = "]\n  (";
var G__153347 = (function (){var G__153372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153373 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153372,G__153373) : tailrecursion.hoplon.span.call(null,G__153372,G__153373));
})();
var G__153348 = "(";
var G__153349 = (function (){var G__153374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153375 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153374,G__153375) : tailrecursion.hoplon.span.call(null,G__153374,G__153375));
})();
var G__153350 = (function (){var G__153376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153377 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153376,G__153377) : tailrecursion.hoplon.span.call(null,G__153376,G__153377));
})();
var G__153351 = " ";
var G__153352 = (function (){var G__153378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153379 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153378,G__153379) : tailrecursion.hoplon.span.call(null,G__153378,G__153379));
})();
var G__153353 = ")\n      ";
var G__153354 = (function (){var G__153380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153381 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153380,G__153381) : tailrecursion.hoplon.span.call(null,G__153380,G__153381));
})();
var G__153355 = "\n      (";
var G__153356 = (function (){var G__153382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153383 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153382,G__153383) : tailrecursion.hoplon.span.call(null,G__153382,G__153383));
})();
var G__153357 = (function (){var G__153384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153385 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153384,G__153385) : tailrecursion.hoplon.span.call(null,G__153384,G__153385));
})();
var G__153358 = " (";
var G__153359 = (function (){var G__153386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__153387 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153386,G__153387) : tailrecursion.hoplon.span.call(null,G__153386,G__153387));
})();
var G__153360 = " (";
var G__153361 = (function (){var G__153388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153389 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153388,G__153389) : tailrecursion.hoplon.span.call(null,G__153388,G__153389));
})();
var G__153362 = (function (){var G__153390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153391 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153390,G__153391) : tailrecursion.hoplon.span.call(null,G__153390,G__153391));
})();
var G__153363 = " ";
var G__153364 = (function (){var G__153392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153393 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153392,G__153393) : tailrecursion.hoplon.span.call(null,G__153392,G__153393));
})();
var G__153365 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__153340,G__153341,G__153342,G__153343,G__153344,G__153345,G__153346,G__153347,G__153348,G__153349,G__153350,G__153351,G__153352,G__153353,G__153354,G__153355,G__153356,G__153357,G__153358,G__153359,G__153360,G__153361,G__153362,G__153363,G__153364,G__153365) : tailrecursion.hoplon.pre.call(null,G__153340,G__153341,G__153342,G__153343,G__153344,G__153345,G__153346,G__153347,G__153348,G__153349,G__153350,G__153351,G__153352,G__153353,G__153354,G__153355,G__153356,G__153357,G__153358,G__153359,G__153360,G__153361,G__153362,G__153363,G__153364,G__153365));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__153338,G__153339) : tailrecursion.hoplon.div.call(null,G__153338,G__153339));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__153337) : tailrecursion.hoplon.div.call(null,G__153337));
})(),(function (){var G__153394 = cljs.core.PersistentArrayMap.EMPTY;
var G__153395 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the substitution model of section ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/1/sub/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1.1.5"], null)], 0))," to watch this procedure in action computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure1-3",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153394,G__153395) : tailrecursion.hoplon.markdown.para_node.call(null,G__153394,G__153395));
})(),(function (){var G__153396 = cljs.core.PersistentArrayMap.EMPTY;
var G__153397 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__153398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__153399 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__153398,G__153399) : tailrecursion.hoplon.markdown.simple_node.call(null,G__153398,G__153399));
})(),"s take a different perspective on computing factorials. We could describe a rule for computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by specifying that we first multiply 1 by 2, then multiply the result by 3, then by 4, and so on until we reach ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More formally, we maintain a running product, together with a counter that counts from 1 up to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". We can describe the computation by saying that the counter and the product simultaneously change from one step to the next according to the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153396,G__153397) : tailrecursion.hoplon.markdown.para_node.call(null,G__153396,G__153397));
})(),(function (){var G__153400 = cljs.core.PersistentArrayMap.EMPTY;
var G__153401 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{product }\\rightarrow\\text{counter }\\cdot\\text{product}$$ $$\\text{counter }\\rightarrow\\text{ counter }+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153400,G__153401) : tailrecursion.hoplon.markdown.para_node.call(null,G__153400,G__153401));
})(),(function (){var G__153402 = cljs.core.PersistentArrayMap.EMPTY;
var G__153403 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and stipulating that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! is the value of the product when the counter exceeds ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153402,G__153403) : tailrecursion.hoplon.markdown.para_node.call(null,G__153402,G__153403));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153326;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153325;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153323;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"A linear iterative process for computing 6!"], null)], 0)),"",(function (){var _STAR_references_STAR_153404 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153405 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_153406 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153407 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__153408 = cljs.core.PersistentArrayMap.EMPTY;
var G__153409 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once again, we can recast our description as a procedure for computing factorials:",(function (){var G__153410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__153411 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In a real program we would hide the definition of ",(function (){var G__153412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fact-iter"], null);
var G__153413 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153412,G__153413) : tailrecursion.hoplon.markdown.code_node.call(null,G__153412,G__153413));
})()," using what",(function (){var G__153414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__153415 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__153414,G__153415) : tailrecursion.hoplon.markdown.simple_node.call(null,G__153414,G__153415));
})(),"s called a ",(function (){var G__153416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"let"], null);
var G__153417 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153416,G__153417) : tailrecursion.hoplon.markdown.code_node.call(null,G__153416,G__153417));
})()," binding, but we",(function (){var G__153418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__153419 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__153418,G__153419) : tailrecursion.hoplon.markdown.simple_node.call(null,G__153418,G__153419));
})(),"ll learn more about that later on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153410,G__153411) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153410,G__153411));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153408,G__153409) : tailrecursion.hoplon.markdown.para_node.call(null,G__153408,G__153409));
})(),(function (){var G__153420 = (function (){var G__153421 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__153422 = (function (){var G__153423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__153424 = "(";
var G__153425 = (function (){var G__153470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153471 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153470,G__153471) : tailrecursion.hoplon.span.call(null,G__153470,G__153471));
})();
var G__153426 = (function (){var G__153472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153473 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153472,G__153473) : tailrecursion.hoplon.span.call(null,G__153472,G__153473));
})();
var G__153427 = " [";
var G__153428 = (function (){var G__153474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153475 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153474,G__153475) : tailrecursion.hoplon.span.call(null,G__153474,G__153475));
})();
var G__153429 = "]\n  (";
var G__153430 = (function (){var G__153476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__153477 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153476,G__153477) : tailrecursion.hoplon.span.call(null,G__153476,G__153477));
})();
var G__153431 = " ";
var G__153432 = (function (){var G__153478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153479 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153478,G__153479) : tailrecursion.hoplon.span.call(null,G__153478,G__153479));
})();
var G__153433 = " ";
var G__153434 = (function (){var G__153480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153481 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153480,G__153481) : tailrecursion.hoplon.span.call(null,G__153480,G__153481));
})();
var G__153435 = " ";
var G__153436 = (function (){var G__153482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153483 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153482,G__153483) : tailrecursion.hoplon.span.call(null,G__153482,G__153483));
})();
var G__153437 = "))\n(";
var G__153438 = (function (){var G__153484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153485 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153484,G__153485) : tailrecursion.hoplon.span.call(null,G__153484,G__153485));
})();
var G__153439 = (function (){var G__153486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153487 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153486,G__153487) : tailrecursion.hoplon.span.call(null,G__153486,G__153487));
})();
var G__153440 = " [";
var G__153441 = (function (){var G__153488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153489 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153488,G__153489) : tailrecursion.hoplon.span.call(null,G__153488,G__153489));
})();
var G__153442 = " ";
var G__153443 = (function (){var G__153490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153491 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153490,G__153491) : tailrecursion.hoplon.span.call(null,G__153490,G__153491));
})();
var G__153444 = " ";
var G__153445 = (function (){var G__153492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153493 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153492,G__153493) : tailrecursion.hoplon.span.call(null,G__153492,G__153493));
})();
var G__153446 = "]\n  (";
var G__153447 = (function (){var G__153494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153495 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153494,G__153495) : tailrecursion.hoplon.span.call(null,G__153494,G__153495));
})();
var G__153448 = "(";
var G__153449 = (function (){var G__153496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153497 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153496,G__153497) : tailrecursion.hoplon.span.call(null,G__153496,G__153497));
})();
var G__153450 = (function (){var G__153498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153499 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153498,G__153499) : tailrecursion.hoplon.span.call(null,G__153498,G__153499));
})();
var G__153451 = " ";
var G__153452 = (function (){var G__153500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153501 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153500,G__153501) : tailrecursion.hoplon.span.call(null,G__153500,G__153501));
})();
var G__153453 = ")\n      ";
var G__153454 = (function (){var G__153502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153503 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153502,G__153503) : tailrecursion.hoplon.span.call(null,G__153502,G__153503));
})();
var G__153455 = "\n      (";
var G__153456 = (function (){var G__153504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__153505 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153504,G__153505) : tailrecursion.hoplon.span.call(null,G__153504,G__153505));
})();
var G__153457 = " (";
var G__153458 = (function (){var G__153506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153507 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153506,G__153507) : tailrecursion.hoplon.span.call(null,G__153506,G__153507));
})();
var G__153459 = (function (){var G__153508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153509 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153508,G__153509) : tailrecursion.hoplon.span.call(null,G__153508,G__153509));
})();
var G__153460 = " ";
var G__153461 = (function (){var G__153510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153511 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153510,G__153511) : tailrecursion.hoplon.span.call(null,G__153510,G__153511));
})();
var G__153462 = ")\n                 (";
var G__153463 = (function (){var G__153512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153513 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153512,G__153513) : tailrecursion.hoplon.span.call(null,G__153512,G__153513));
})();
var G__153464 = (function (){var G__153514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153515 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153514,G__153515) : tailrecursion.hoplon.span.call(null,G__153514,G__153515));
})();
var G__153465 = " ";
var G__153466 = (function (){var G__153516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153517 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153516,G__153517) : tailrecursion.hoplon.span.call(null,G__153516,G__153517));
})();
var G__153467 = ")\n                 ";
var G__153468 = (function (){var G__153518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153519 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153518,G__153519) : tailrecursion.hoplon.span.call(null,G__153518,G__153519));
})();
var G__153469 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__153423,G__153424,G__153425,G__153426,G__153427,G__153428,G__153429,G__153430,G__153431,G__153432,G__153433,G__153434,G__153435,G__153436,G__153437,G__153438,G__153439,G__153440,G__153441,G__153442,G__153443,G__153444,G__153445,G__153446,G__153447,G__153448,G__153449,G__153450,G__153451,G__153452,G__153453,G__153454,G__153455,G__153456,G__153457,G__153458,G__153459,G__153460,G__153461,G__153462,G__153463,G__153464,G__153465,G__153466,G__153467,G__153468,G__153469) : tailrecursion.hoplon.pre.call(null,G__153423,G__153424,G__153425,G__153426,G__153427,G__153428,G__153429,G__153430,G__153431,G__153432,G__153433,G__153434,G__153435,G__153436,G__153437,G__153438,G__153439,G__153440,G__153441,G__153442,G__153443,G__153444,G__153445,G__153446,G__153447,G__153448,G__153449,G__153450,G__153451,G__153452,G__153453,G__153454,G__153455,G__153456,G__153457,G__153458,G__153459,G__153460,G__153461,G__153462,G__153463,G__153464,G__153465,G__153466,G__153467,G__153468,G__153469));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__153421,G__153422) : tailrecursion.hoplon.div.call(null,G__153421,G__153422));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__153420) : tailrecursion.hoplon.div.call(null,G__153420));
})(),(function (){var G__153520 = cljs.core.PersistentArrayMap.EMPTY;
var G__153521 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As before, we can use the substitution model to visualize the process of computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-4",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.4"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153520,G__153521) : tailrecursion.hoplon.markdown.para_node.call(null,G__153520,G__153521));
})(),(function (){var G__153522 = cljs.core.PersistentArrayMap.EMPTY;
var G__153523 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compare the two processes. From one point of view, they seem hardly different at all. Both compute the sam emathematical function on the same domain, and each reauires a number of steps proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," to compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!. Indeed, both processes even carry out the same sequence of multiplications, obtaining the same sequence of partial products. On the other hand, when we consider the ",(function (){var G__153524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153525 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153524,G__153525) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153524,G__153525));
})()," of the two processes, we find that they evolve quite differently."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153522,G__153523) : tailrecursion.hoplon.markdown.para_node.call(null,G__153522,G__153523));
})(),(function (){var G__153526 = cljs.core.PersistentArrayMap.EMPTY;
var G__153527 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the first process. The substitution model reveals a shape of expansion followed by contraction, indicated by the arrow in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-3",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),". The expansion occurs as the process builds up a chain of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["deferred operations"], null)], 0))," (in this case, a chain of multiplications). The contraction occurs as the operations are actually performed. This type of process, characterized by a chain of deferred operations, is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["recursive process"], null)], 0)),". Carrying out this process requires that the interpreter keep track of the operations to be performed later on. In the computation of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the length of the chain of deffered multiplications, and hence the amount of information needed to keep track of it, grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," (is proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"), just like the number of steps. Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear recursive process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153526,G__153527) : tailrecursion.hoplon.markdown.para_node.call(null,G__153526,G__153527));
})(),(function (){var G__153528 = cljs.core.PersistentArrayMap.EMPTY;
var G__153529 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By contrast, the second process does not grow and shrink. At each step, all we need to keep track of, for any ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),", are the current values of the variables ",(function (){var G__153530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"product"], null);
var G__153531 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153530,G__153531) : tailrecursion.hoplon.markdown.code_node.call(null,G__153530,G__153531));
})(),", ",(function (){var G__153532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"counter"], null);
var G__153533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153532,G__153533) : tailrecursion.hoplon.markdown.code_node.call(null,G__153532,G__153533));
})(),", and ",(function (){var G__153534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"max-count"], null);
var G__153535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153534,G__153535) : tailrecursion.hoplon.markdown.code_node.call(null,G__153534,G__153535));
})(),". We call this an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["iterative process"], null)], 0)),". In general, an iterative process is one whose state can be summarized by a fixed number of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["state variables"], null)], 0)),", together with a fixed rule that describes how the state variables should be updated as the process moves from state to state and an (optional) end test that specifies conditions under which the process should terminate. In computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the number of steps required grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear iterative process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153528,G__153529) : tailrecursion.hoplon.markdown.para_node.call(null,G__153528,G__153529));
})(),(function (){var G__153536 = cljs.core.PersistentArrayMap.EMPTY;
var G__153537 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The contrast between the two processes can be seen in another way. In the iterative case, the program variables provide a complete description of the state of the process at any point. If we stopped the computation between steps, all we would need to do to resume the computation is to supply the interpreter with the values of the three program variables. Not so with the recursive process. In this case there is some additional ",(function (){var G__153538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153539 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hidden"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153538,G__153539) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153538,G__153539));
})()," information, maintained by the interpreter and not contained in the program variables, which indicates ",(function (){var G__153540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153541 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where the process is"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153540,G__153541) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153540,G__153541));
})()," in negotiating the chain of deferred operations. The longer the chain, the more information must be maintained.",(function (){var G__153542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__153543 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we discuss the implementation of procedures on register machines in chapter 5, we will see that any iterative process can be realized ",(function (){var G__153544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153545 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["in hardware"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153544,G__153545) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153544,G__153545));
})()," as a machine that has a fixed set of registers and no auxiliary memory. In contrast, realizing a recursive process requires a machine that uses an auxiliary data structure known as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["stack"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153542,G__153543) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153542,G__153543));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153536,G__153537) : tailrecursion.hoplon.markdown.para_node.call(null,G__153536,G__153537));
})(),(function (){var G__153546 = cljs.core.PersistentArrayMap.EMPTY;
var G__153547 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In contrasting iteration and recursion, we must be careful not to confuse the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["process"], null)], 0))," and the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedure"], null)], 0)),". When we describe a procedure as recursive, we are referring to the syntactic fact that the procedure definition refers (either directly or indirectly) to the procedure itself. But when we describe a process as following a pattern that is, say, linearly recursive, we are speaking about how the process evolves, not about the syntax of how a procedure is written. It may seem disturbing that we refer to a recursive procedure such as ",(function (){var G__153548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fact-iter"], null);
var G__153549 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153548,G__153549) : tailrecursion.hoplon.markdown.code_node.call(null,G__153548,G__153549));
})()," as generating an iterative process. However, the process really is iterative: Its state is captured completely by its three state variables, and an interpreter need keep track of only three variables in order to execute the process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153546,G__153547) : tailrecursion.hoplon.markdown.para_node.call(null,G__153546,G__153547));
})(),(function (){var G__153550 = cljs.core.PersistentArrayMap.EMPTY;
var G__153551 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One reason that the distinction between process and procedure may be confusing is that most implementations of common languages (including Ada, Pascal, and C) are designed in such a way that the interpretation of any recursive procedure consumes an amount of memory that grows with the number of procedure calls, even when the process described is, in principle, iterative. As a consequence, these languages can describe iterative processes only by resorting to special-purpose ",(function (){var G__153552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153553 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["looping constructs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153552,G__153553) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153552,G__153553));
})()," such as ",(function (){var G__153554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"do"], null);
var G__153555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153554,G__153555) : tailrecursion.hoplon.markdown.code_node.call(null,G__153554,G__153555));
})(),", ",(function (){var G__153556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"repeat"], null);
var G__153557 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153556,G__153557) : tailrecursion.hoplon.markdown.code_node.call(null,G__153556,G__153557));
})(),", ",(function (){var G__153558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"until"], null);
var G__153559 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153558,G__153559) : tailrecursion.hoplon.markdown.code_node.call(null,G__153558,G__153559));
})(),", ",(function (){var G__153560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for"], null);
var G__153561 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153560,G__153561) : tailrecursion.hoplon.markdown.code_node.call(null,G__153560,G__153561));
})(),", and ",(function (){var G__153562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"while"], null);
var G__153563 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153562,G__153563) : tailrecursion.hoplon.markdown.code_node.call(null,G__153562,G__153563));
})(),". The implemenation of Scheme we shall consider in chapter 5 does not share this defect. It will execute an iterative process in constant space, even if the iterative process is described by a recursive procedure. An implementation with this property is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tail-recursive"], null)], 0)),". With a tail-recursive implementation, iteration can be expressed using the ordinary procedure call mechanism, so that special iteration constructs are useful only as syntactic sugar.",(function (){var G__153564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__153565 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Tail recursion has long been known as a compiler optimization trick. A coherent semantic basis for tail recursion was provided by Carl Hewitt (1977), who explained it in terms of the ",(function (){var G__153566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__153567 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["message-passing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153566,G__153567) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153566,G__153567));
})()," model of computation that we shall discuss in chapter 3. Inspired by this, Gerald Jay Sussman and Guy Lewis Steele Jr. (see Steele 1975) constructed a tail-recursive interpreter for Scheme. Steele later showed how tail recursion is a consequence of the natural way to compile procedure calls (Steele 1977). The IEEE standard for Scheme requires that Scheme implementations be tail-recursive."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__153564,G__153565) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__153564,G__153565));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153550,G__153551) : tailrecursion.hoplon.markdown.para_node.call(null,G__153550,G__153551));
})(),(function (){var G__153568 = cljs.core.PersistentArrayMap.EMPTY;
var G__153569 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__153570 = cljs.core.PersistentArrayMap.EMPTY;
var G__153571 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is worthwhile to note at this point that Clojure is not tail-recursive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153570,G__153571) : tailrecursion.hoplon.markdown.para_node.call(null,G__153570,G__153571));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__153568,G__153569) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__153568,G__153569));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153407;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153406;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153405;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153404;
}})()], 0));
var G__153280 = "";
var G__153281 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"9-10"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(9)], null),(function (){var _STAR_references_STAR_153572 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153573 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_153574 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153575 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__153576 = cljs.core.PersistentArrayMap.EMPTY;
var G__153577 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures defines a method for adding two positive integers in terms of the procedures ",(function (){var G__153578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"inc"], null);
var G__153579 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153578,G__153579) : tailrecursion.hoplon.markdown.code_node.call(null,G__153578,G__153579));
})(),", which increments its arguments by 1, and ",(function (){var G__153580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"dec"], null);
var G__153581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153580,G__153581) : tailrecursion.hoplon.markdown.code_node.call(null,G__153580,G__153581));
})(),", which decrements its arguments by 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153576,G__153577) : tailrecursion.hoplon.markdown.para_node.call(null,G__153576,G__153577));
})(),(function (){var G__153582 = (function (){var G__153583 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__153584 = (function (){var G__153585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__153586 = "(";
var G__153587 = (function (){var G__153612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153613 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153612,G__153613) : tailrecursion.hoplon.span.call(null,G__153612,G__153613));
})();
var G__153588 = (function (){var G__153614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153615 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153614,G__153615) : tailrecursion.hoplon.span.call(null,G__153614,G__153615));
})();
var G__153589 = "[";
var G__153590 = (function (){var G__153616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153617 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153616,G__153617) : tailrecursion.hoplon.span.call(null,G__153616,G__153617));
})();
var G__153591 = " ";
var G__153592 = (function (){var G__153618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153619 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153618,G__153619) : tailrecursion.hoplon.span.call(null,G__153618,G__153619));
})();
var G__153593 = "]\n  (";
var G__153594 = (function (){var G__153620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153621 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153620,G__153621) : tailrecursion.hoplon.span.call(null,G__153620,G__153621));
})();
var G__153595 = "(";
var G__153596 = (function (){var G__153622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153623 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153622,G__153623) : tailrecursion.hoplon.span.call(null,G__153622,G__153623));
})();
var G__153597 = (function (){var G__153624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153625 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153624,G__153625) : tailrecursion.hoplon.span.call(null,G__153624,G__153625));
})();
var G__153598 = " ";
var G__153599 = (function (){var G__153626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153627 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153626,G__153627) : tailrecursion.hoplon.span.call(null,G__153626,G__153627));
})();
var G__153600 = ")\n      ";
var G__153601 = (function (){var G__153628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153629 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153628,G__153629) : tailrecursion.hoplon.span.call(null,G__153628,G__153629));
})();
var G__153602 = "\n      (";
var G__153603 = (function (){var G__153630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153631 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153630,G__153631) : tailrecursion.hoplon.span.call(null,G__153630,G__153631));
})();
var G__153604 = "(";
var G__153605 = (function (){var G__153632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153633 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153632,G__153633) : tailrecursion.hoplon.span.call(null,G__153632,G__153633));
})();
var G__153606 = "(";
var G__153607 = (function (){var G__153634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153635 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153634,G__153635) : tailrecursion.hoplon.span.call(null,G__153634,G__153635));
})();
var G__153608 = (function (){var G__153636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153637 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153636,G__153637) : tailrecursion.hoplon.span.call(null,G__153636,G__153637));
})();
var G__153609 = ") ";
var G__153610 = (function (){var G__153638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153639 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153638,G__153639) : tailrecursion.hoplon.span.call(null,G__153638,G__153639));
})();
var G__153611 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__153585,G__153586,G__153587,G__153588,G__153589,G__153590,G__153591,G__153592,G__153593,G__153594,G__153595,G__153596,G__153597,G__153598,G__153599,G__153600,G__153601,G__153602,G__153603,G__153604,G__153605,G__153606,G__153607,G__153608,G__153609,G__153610,G__153611) : tailrecursion.hoplon.pre.call(null,G__153585,G__153586,G__153587,G__153588,G__153589,G__153590,G__153591,G__153592,G__153593,G__153594,G__153595,G__153596,G__153597,G__153598,G__153599,G__153600,G__153601,G__153602,G__153603,G__153604,G__153605,G__153606,G__153607,G__153608,G__153609,G__153610,G__153611));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__153583,G__153584) : tailrecursion.hoplon.div.call(null,G__153583,G__153584));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__153582) : tailrecursion.hoplon.div.call(null,G__153582));
})(),(function (){var G__153640 = (function (){var G__153641 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__153642 = (function (){var G__153643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__153644 = "(";
var G__153645 = (function (){var G__153669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153670 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153669,G__153670) : tailrecursion.hoplon.span.call(null,G__153669,G__153670));
})();
var G__153646 = (function (){var G__153671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153672 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153671,G__153672) : tailrecursion.hoplon.span.call(null,G__153671,G__153672));
})();
var G__153647 = "[";
var G__153648 = (function (){var G__153673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153674 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153673,G__153674) : tailrecursion.hoplon.span.call(null,G__153673,G__153674));
})();
var G__153649 = " ";
var G__153650 = (function (){var G__153675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153676 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153675,G__153676) : tailrecursion.hoplon.span.call(null,G__153675,G__153676));
})();
var G__153651 = "]\n  (";
var G__153652 = (function (){var G__153677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__153678 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153677,G__153678) : tailrecursion.hoplon.span.call(null,G__153677,G__153678));
})();
var G__153653 = "(";
var G__153654 = (function (){var G__153679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153680 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153679,G__153680) : tailrecursion.hoplon.span.call(null,G__153679,G__153680));
})();
var G__153655 = (function (){var G__153681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153682 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153681,G__153682) : tailrecursion.hoplon.span.call(null,G__153681,G__153682));
})();
var G__153656 = " ";
var G__153657 = (function (){var G__153683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153684 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153683,G__153684) : tailrecursion.hoplon.span.call(null,G__153683,G__153684));
})();
var G__153658 = ")\n      ";
var G__153659 = (function (){var G__153685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153686 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153685,G__153686) : tailrecursion.hoplon.span.call(null,G__153685,G__153686));
})();
var G__153660 = "\n      (";
var G__153661 = (function (){var G__153687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153688 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153687,G__153688) : tailrecursion.hoplon.span.call(null,G__153687,G__153688));
})();
var G__153662 = "(";
var G__153663 = (function (){var G__153689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153690 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153689,G__153690) : tailrecursion.hoplon.span.call(null,G__153689,G__153690));
})();
var G__153664 = (function (){var G__153691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153692 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153691,G__153692) : tailrecursion.hoplon.span.call(null,G__153691,G__153692));
})();
var G__153665 = ") (";
var G__153666 = (function (){var G__153693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153694 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153693,G__153694) : tailrecursion.hoplon.span.call(null,G__153693,G__153694));
})();
var G__153667 = (function (){var G__153695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__153696 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153695,G__153696) : tailrecursion.hoplon.span.call(null,G__153695,G__153696));
})();
var G__153668 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__153643,G__153644,G__153645,G__153646,G__153647,G__153648,G__153649,G__153650,G__153651,G__153652,G__153653,G__153654,G__153655,G__153656,G__153657,G__153658,G__153659,G__153660,G__153661,G__153662,G__153663,G__153664,G__153665,G__153666,G__153667,G__153668) : tailrecursion.hoplon.pre.call(null,G__153643,G__153644,G__153645,G__153646,G__153647,G__153648,G__153649,G__153650,G__153651,G__153652,G__153653,G__153654,G__153655,G__153656,G__153657,G__153658,G__153659,G__153660,G__153661,G__153662,G__153663,G__153664,G__153665,G__153666,G__153667,G__153668));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__153641,G__153642) : tailrecursion.hoplon.div.call(null,G__153641,G__153642));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__153640) : tailrecursion.hoplon.div.call(null,G__153640));
})(),(function (){var G__153697 = cljs.core.PersistentArrayMap.EMPTY;
var G__153698 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the substitution model, illustrate the process generated by each procedure in evaluating ",(function (){var G__153699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ 4 5)"], null);
var G__153700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__153699,G__153700) : tailrecursion.hoplon.markdown.code_node.call(null,G__153699,G__153700));
})(),". Are these processes iterative or recursive?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153697,G__153698) : tailrecursion.hoplon.markdown.para_node.call(null,G__153697,G__153698));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153575;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153574;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153573;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153572;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_153701 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153702 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_153703 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_153704 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__153705 = cljs.core.PersistentArrayMap.EMPTY;
var G__153706 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The first is recursive, and the second is iterative. Let",(function (){var G__153707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__153708 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__153707,G__153708) : tailrecursion.hoplon.markdown.simple_node.call(null,G__153707,G__153708));
})(),"s see why",(function (){var G__153709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__153710 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__153709,G__153710) : tailrecursion.hoplon.markdown.simple_node.call(null,G__153709,G__153710));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153705,G__153706) : tailrecursion.hoplon.markdown.para_node.call(null,G__153705,G__153706));
})(),(function (){var G__153711 = cljs.core.PersistentArrayMap.EMPTY;
var G__153712 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the first definition,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153711,G__153712) : tailrecursion.hoplon.markdown.para_node.call(null,G__153711,G__153712));
})(),(function (){var G__153713 = (function (){var G__153714 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__153715 = (function (){var G__153716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__153717 = "(";
var G__153718 = (function (){var G__153837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153838 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153837,G__153838) : tailrecursion.hoplon.span.call(null,G__153837,G__153838));
})();
var G__153719 = (function (){var G__153839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153840 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153839,G__153840) : tailrecursion.hoplon.span.call(null,G__153839,G__153840));
})();
var G__153720 = " ";
var G__153721 = (function (){var G__153841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153842 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153841,G__153842) : tailrecursion.hoplon.span.call(null,G__153841,G__153842));
})();
var G__153722 = ")\n(";
var G__153723 = (function (){var G__153843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153844 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153843,G__153844) : tailrecursion.hoplon.span.call(null,G__153843,G__153844));
})();
var G__153724 = "(";
var G__153725 = (function (){var G__153845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153846 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153845,G__153846) : tailrecursion.hoplon.span.call(null,G__153845,G__153846));
})();
var G__153726 = "(";
var G__153727 = (function (){var G__153847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153848 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153847,G__153848) : tailrecursion.hoplon.span.call(null,G__153847,G__153848));
})();
var G__153728 = (function (){var G__153849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153850 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153849,G__153850) : tailrecursion.hoplon.span.call(null,G__153849,G__153850));
})();
var G__153729 = ") ";
var G__153730 = (function (){var G__153851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153852 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153851,G__153852) : tailrecursion.hoplon.span.call(null,G__153851,G__153852));
})();
var G__153731 = "))\n(";
var G__153732 = (function (){var G__153853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153854 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153853,G__153854) : tailrecursion.hoplon.span.call(null,G__153853,G__153854));
})();
var G__153733 = "(";
var G__153734 = (function (){var G__153855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153856 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153855,G__153856) : tailrecursion.hoplon.span.call(null,G__153855,G__153856));
})();
var G__153735 = (function (){var G__153857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153858 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153857,G__153858) : tailrecursion.hoplon.span.call(null,G__153857,G__153858));
})();
var G__153736 = " ";
var G__153737 = (function (){var G__153859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153860 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153859,G__153860) : tailrecursion.hoplon.span.call(null,G__153859,G__153860));
})();
var G__153738 = "))\n(";
var G__153739 = (function (){var G__153861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153862 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153861,G__153862) : tailrecursion.hoplon.span.call(null,G__153861,G__153862));
})();
var G__153740 = "(";
var G__153741 = (function (){var G__153863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153864 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153863,G__153864) : tailrecursion.hoplon.span.call(null,G__153863,G__153864));
})();
var G__153742 = "(";
var G__153743 = (function (){var G__153865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153866 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153865,G__153866) : tailrecursion.hoplon.span.call(null,G__153865,G__153866));
})();
var G__153744 = "(";
var G__153745 = (function (){var G__153867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153868 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153867,G__153868) : tailrecursion.hoplon.span.call(null,G__153867,G__153868));
})();
var G__153746 = (function (){var G__153869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153870 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153869,G__153870) : tailrecursion.hoplon.span.call(null,G__153869,G__153870));
})();
var G__153747 = ") ";
var G__153748 = (function (){var G__153871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153872 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153871,G__153872) : tailrecursion.hoplon.span.call(null,G__153871,G__153872));
})();
var G__153749 = ")))\n(";
var G__153750 = (function (){var G__153873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153874 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153873,G__153874) : tailrecursion.hoplon.span.call(null,G__153873,G__153874));
})();
var G__153751 = "(";
var G__153752 = (function (){var G__153875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153876 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153875,G__153876) : tailrecursion.hoplon.span.call(null,G__153875,G__153876));
})();
var G__153753 = "(";
var G__153754 = (function (){var G__153877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153878 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153877,G__153878) : tailrecursion.hoplon.span.call(null,G__153877,G__153878));
})();
var G__153755 = (function (){var G__153879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153880 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153879,G__153880) : tailrecursion.hoplon.span.call(null,G__153879,G__153880));
})();
var G__153756 = " ";
var G__153757 = (function (){var G__153881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153882 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153881,G__153882) : tailrecursion.hoplon.span.call(null,G__153881,G__153882));
})();
var G__153758 = ")))\n(";
var G__153759 = (function (){var G__153883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153884 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153883,G__153884) : tailrecursion.hoplon.span.call(null,G__153883,G__153884));
})();
var G__153760 = "(";
var G__153761 = (function (){var G__153885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153886 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153885,G__153886) : tailrecursion.hoplon.span.call(null,G__153885,G__153886));
})();
var G__153762 = "(";
var G__153763 = (function (){var G__153887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153888 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153887,G__153888) : tailrecursion.hoplon.span.call(null,G__153887,G__153888));
})();
var G__153764 = "(";
var G__153765 = (function (){var G__153889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153890 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153889,G__153890) : tailrecursion.hoplon.span.call(null,G__153889,G__153890));
})();
var G__153766 = "(";
var G__153767 = (function (){var G__153891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153892 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153891,G__153892) : tailrecursion.hoplon.span.call(null,G__153891,G__153892));
})();
var G__153768 = (function (){var G__153893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153894 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153893,G__153894) : tailrecursion.hoplon.span.call(null,G__153893,G__153894));
})();
var G__153769 = ") ";
var G__153770 = (function (){var G__153895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153896 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153895,G__153896) : tailrecursion.hoplon.span.call(null,G__153895,G__153896));
})();
var G__153771 = "))))\n(";
var G__153772 = (function (){var G__153897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153898 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153897,G__153898) : tailrecursion.hoplon.span.call(null,G__153897,G__153898));
})();
var G__153773 = "(";
var G__153774 = (function (){var G__153899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153900 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153899,G__153900) : tailrecursion.hoplon.span.call(null,G__153899,G__153900));
})();
var G__153775 = "(";
var G__153776 = (function (){var G__153901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153902 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153901,G__153902) : tailrecursion.hoplon.span.call(null,G__153901,G__153902));
})();
var G__153777 = "(";
var G__153778 = (function (){var G__153903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153904 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153903,G__153904) : tailrecursion.hoplon.span.call(null,G__153903,G__153904));
})();
var G__153779 = (function (){var G__153905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153906 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153905,G__153906) : tailrecursion.hoplon.span.call(null,G__153905,G__153906));
})();
var G__153780 = " ";
var G__153781 = (function (){var G__153907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153908 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153907,G__153908) : tailrecursion.hoplon.span.call(null,G__153907,G__153908));
})();
var G__153782 = "))))\n(";
var G__153783 = (function (){var G__153909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153910 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153909,G__153910) : tailrecursion.hoplon.span.call(null,G__153909,G__153910));
})();
var G__153784 = "(";
var G__153785 = (function (){var G__153911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153912 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153911,G__153912) : tailrecursion.hoplon.span.call(null,G__153911,G__153912));
})();
var G__153786 = "(";
var G__153787 = (function (){var G__153913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153914 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153913,G__153914) : tailrecursion.hoplon.span.call(null,G__153913,G__153914));
})();
var G__153788 = "(";
var G__153789 = (function (){var G__153915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153916 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153915,G__153916) : tailrecursion.hoplon.span.call(null,G__153915,G__153916));
})();
var G__153790 = "(";
var G__153791 = (function (){var G__153917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153918 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153917,G__153918) : tailrecursion.hoplon.span.call(null,G__153917,G__153918));
})();
var G__153792 = "(";
var G__153793 = (function (){var G__153919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153920 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153919,G__153920) : tailrecursion.hoplon.span.call(null,G__153919,G__153920));
})();
var G__153794 = (function (){var G__153921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153922 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153921,G__153922) : tailrecursion.hoplon.span.call(null,G__153921,G__153922));
})();
var G__153795 = ") ";
var G__153796 = (function (){var G__153923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153924 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153923,G__153924) : tailrecursion.hoplon.span.call(null,G__153923,G__153924));
})();
var G__153797 = ")))))\n(";
var G__153798 = (function (){var G__153925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153926 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153925,G__153926) : tailrecursion.hoplon.span.call(null,G__153925,G__153926));
})();
var G__153799 = "(";
var G__153800 = (function (){var G__153927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153928 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153927,G__153928) : tailrecursion.hoplon.span.call(null,G__153927,G__153928));
})();
var G__153801 = "(";
var G__153802 = (function (){var G__153929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153930 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153929,G__153930) : tailrecursion.hoplon.span.call(null,G__153929,G__153930));
})();
var G__153803 = "(";
var G__153804 = (function (){var G__153931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153932 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153931,G__153932) : tailrecursion.hoplon.span.call(null,G__153931,G__153932));
})();
var G__153805 = "(";
var G__153806 = (function (){var G__153933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153934 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153933,G__153934) : tailrecursion.hoplon.span.call(null,G__153933,G__153934));
})();
var G__153807 = (function (){var G__153935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153936 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153935,G__153936) : tailrecursion.hoplon.span.call(null,G__153935,G__153936));
})();
var G__153808 = " ";
var G__153809 = (function (){var G__153937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153938 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153937,G__153938) : tailrecursion.hoplon.span.call(null,G__153937,G__153938));
})();
var G__153810 = ")))))\n(";
var G__153811 = (function (){var G__153939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153940 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153939,G__153940) : tailrecursion.hoplon.span.call(null,G__153939,G__153940));
})();
var G__153812 = "(";
var G__153813 = (function (){var G__153941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153942 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153941,G__153942) : tailrecursion.hoplon.span.call(null,G__153941,G__153942));
})();
var G__153814 = "(";
var G__153815 = (function (){var G__153943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153944 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153943,G__153944) : tailrecursion.hoplon.span.call(null,G__153943,G__153944));
})();
var G__153816 = "(";
var G__153817 = (function (){var G__153945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153946 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153945,G__153946) : tailrecursion.hoplon.span.call(null,G__153945,G__153946));
})();
var G__153818 = (function (){var G__153947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153948 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153947,G__153948) : tailrecursion.hoplon.span.call(null,G__153947,G__153948));
})();
var G__153819 = "))))\n(";
var G__153820 = (function (){var G__153949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153950 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153949,G__153950) : tailrecursion.hoplon.span.call(null,G__153949,G__153950));
})();
var G__153821 = "(";
var G__153822 = (function (){var G__153951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153952 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153951,G__153952) : tailrecursion.hoplon.span.call(null,G__153951,G__153952));
})();
var G__153823 = "(";
var G__153824 = (function (){var G__153953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153954 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153953,G__153954) : tailrecursion.hoplon.span.call(null,G__153953,G__153954));
})();
var G__153825 = (function (){var G__153955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153956 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153955,G__153956) : tailrecursion.hoplon.span.call(null,G__153955,G__153956));
})();
var G__153826 = ")))\n(";
var G__153827 = (function (){var G__153957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153958 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153957,G__153958) : tailrecursion.hoplon.span.call(null,G__153957,G__153958));
})();
var G__153828 = "(";
var G__153829 = (function (){var G__153959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153960 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153959,G__153960) : tailrecursion.hoplon.span.call(null,G__153959,G__153960));
})();
var G__153830 = (function (){var G__153961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153962 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153961,G__153962) : tailrecursion.hoplon.span.call(null,G__153961,G__153962));
})();
var G__153831 = "))\n(";
var G__153832 = (function (){var G__153963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__153964 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153963,G__153964) : tailrecursion.hoplon.span.call(null,G__153963,G__153964));
})();
var G__153833 = (function (){var G__153965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153966 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153965,G__153966) : tailrecursion.hoplon.span.call(null,G__153965,G__153966));
})();
var G__153834 = ")\n";
var G__153835 = (function (){var G__153967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__153968 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__153967,G__153968) : tailrecursion.hoplon.span.call(null,G__153967,G__153968));
})();
var G__153836 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121(G__153716,G__153717,G__153718,G__153719,G__153720,G__153721,G__153722,G__153723,G__153724,G__153725,G__153726,G__153727,G__153728,G__153729,G__153730,G__153731,G__153732,G__153733,G__153734,G__153735,G__153736,G__153737,G__153738,G__153739,G__153740,G__153741,G__153742,G__153743,G__153744,G__153745,G__153746,G__153747,G__153748,G__153749,G__153750,G__153751,G__153752,G__153753,G__153754,G__153755,G__153756,G__153757,G__153758,G__153759,G__153760,G__153761,G__153762,G__153763,G__153764,G__153765,G__153766,G__153767,G__153768,G__153769,G__153770,G__153771,G__153772,G__153773,G__153774,G__153775,G__153776,G__153777,G__153778,G__153779,G__153780,G__153781,G__153782,G__153783,G__153784,G__153785,G__153786,G__153787,G__153788,G__153789,G__153790,G__153791,G__153792,G__153793,G__153794,G__153795,G__153796,G__153797,G__153798,G__153799,G__153800,G__153801,G__153802,G__153803,G__153804,G__153805,G__153806,G__153807,G__153808,G__153809,G__153810,G__153811,G__153812,G__153813,G__153814,G__153815,G__153816,G__153817,G__153818,G__153819,G__153820,G__153821,G__153822,G__153823,G__153824,G__153825,G__153826,G__153827,G__153828,G__153829,G__153830,G__153831,G__153832,G__153833,G__153834,G__153835,G__153836) : tailrecursion.hoplon.pre.call(null,G__153716,G__153717,G__153718,G__153719,G__153720,G__153721,G__153722,G__153723,G__153724,G__153725,G__153726,G__153727,G__153728,G__153729,G__153730,G__153731,G__153732,G__153733,G__153734,G__153735,G__153736,G__153737,G__153738,G__153739,G__153740,G__153741,G__153742,G__153743,G__153744,G__153745,G__153746,G__153747,G__153748,G__153749,G__153750,G__153751,G__153752,G__153753,G__153754,G__153755,G__153756,G__153757,G__153758,G__153759,G__153760,G__153761,G__153762,G__153763,G__153764,G__153765,G__153766,G__153767,G__153768,G__153769,G__153770,G__153771,G__153772,G__153773,G__153774,G__153775,G__153776,G__153777,G__153778,G__153779,G__153780,G__153781,G__153782,G__153783,G__153784,G__153785,G__153786,G__153787,G__153788,G__153789,G__153790,G__153791,G__153792,G__153793,G__153794,G__153795,G__153796,G__153797,G__153798,G__153799,G__153800,G__153801,G__153802,G__153803,G__153804,G__153805,G__153806,G__153807,G__153808,G__153809,G__153810,G__153811,G__153812,G__153813,G__153814,G__153815,G__153816,G__153817,G__153818,G__153819,G__153820,G__153821,G__153822,G__153823,G__153824,G__153825,G__153826,G__153827,G__153828,G__153829,G__153830,G__153831,G__153832,G__153833,G__153834,G__153835,G__153836));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__153714,G__153715) : tailrecursion.hoplon.div.call(null,G__153714,G__153715));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__153713) : tailrecursion.hoplon.div.call(null,G__153713));
})(),(function (){var G__153969 = cljs.core.PersistentArrayMap.EMPTY;
var G__153970 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clearly recursive in the way it grows."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153969,G__153970) : tailrecursion.hoplon.markdown.para_node.call(null,G__153969,G__153970));
})(),(function (){var G__153971 = cljs.core.PersistentArrayMap.EMPTY;
var G__153972 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the second, however,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__153971,G__153972) : tailrecursion.hoplon.markdown.para_node.call(null,G__153971,G__153972));
})(),(function (){var G__153973 = (function (){var G__153974 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__153975 = (function (){var G__153976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__153977 = "(";
var G__153978 = (function (){var G__154037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154038 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154037,G__154038) : tailrecursion.hoplon.span.call(null,G__154037,G__154038));
})();
var G__153979 = (function (){var G__154039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154040 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154039,G__154040) : tailrecursion.hoplon.span.call(null,G__154039,G__154040));
})();
var G__153980 = " ";
var G__153981 = (function (){var G__154041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154042 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154041,G__154042) : tailrecursion.hoplon.span.call(null,G__154041,G__154042));
})();
var G__153982 = ")\n(";
var G__153983 = (function (){var G__154043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154044 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154043,G__154044) : tailrecursion.hoplon.span.call(null,G__154043,G__154044));
})();
var G__153984 = "(";
var G__153985 = (function (){var G__154045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154046 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154045,G__154046) : tailrecursion.hoplon.span.call(null,G__154045,G__154046));
})();
var G__153986 = (function (){var G__154047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154048 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154047,G__154048) : tailrecursion.hoplon.span.call(null,G__154047,G__154048));
})();
var G__153987 = ") (";
var G__153988 = (function (){var G__154049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154050 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154049,G__154050) : tailrecursion.hoplon.span.call(null,G__154049,G__154050));
})();
var G__153989 = (function (){var G__154051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154052 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154051,G__154052) : tailrecursion.hoplon.span.call(null,G__154051,G__154052));
})();
var G__153990 = "))\n(";
var G__153991 = (function (){var G__154053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154054 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154053,G__154054) : tailrecursion.hoplon.span.call(null,G__154053,G__154054));
})();
var G__153992 = (function (){var G__154055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154056 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154055,G__154056) : tailrecursion.hoplon.span.call(null,G__154055,G__154056));
})();
var G__153993 = " ";
var G__153994 = (function (){var G__154057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154058 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154057,G__154058) : tailrecursion.hoplon.span.call(null,G__154057,G__154058));
})();
var G__153995 = ")\n(";
var G__153996 = (function (){var G__154059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154060 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154059,G__154060) : tailrecursion.hoplon.span.call(null,G__154059,G__154060));
})();
var G__153997 = "(";
var G__153998 = (function (){var G__154061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154062 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154061,G__154062) : tailrecursion.hoplon.span.call(null,G__154061,G__154062));
})();
var G__153999 = (function (){var G__154063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154064 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154063,G__154064) : tailrecursion.hoplon.span.call(null,G__154063,G__154064));
})();
var G__154000 = ") (";
var G__154001 = (function (){var G__154065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154066 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154065,G__154066) : tailrecursion.hoplon.span.call(null,G__154065,G__154066));
})();
var G__154002 = (function (){var G__154067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154068 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154067,G__154068) : tailrecursion.hoplon.span.call(null,G__154067,G__154068));
})();
var G__154003 = "))\n(";
var G__154004 = (function (){var G__154069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154070 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154069,G__154070) : tailrecursion.hoplon.span.call(null,G__154069,G__154070));
})();
var G__154005 = (function (){var G__154071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154072 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154071,G__154072) : tailrecursion.hoplon.span.call(null,G__154071,G__154072));
})();
var G__154006 = " ";
var G__154007 = (function (){var G__154073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154074 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154073,G__154074) : tailrecursion.hoplon.span.call(null,G__154073,G__154074));
})();
var G__154008 = ")\n(";
var G__154009 = (function (){var G__154075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154076 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154075,G__154076) : tailrecursion.hoplon.span.call(null,G__154075,G__154076));
})();
var G__154010 = "(";
var G__154011 = (function (){var G__154077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154078 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154077,G__154078) : tailrecursion.hoplon.span.call(null,G__154077,G__154078));
})();
var G__154012 = (function (){var G__154079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154080 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154079,G__154080) : tailrecursion.hoplon.span.call(null,G__154079,G__154080));
})();
var G__154013 = ") (";
var G__154014 = (function (){var G__154081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154082 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154081,G__154082) : tailrecursion.hoplon.span.call(null,G__154081,G__154082));
})();
var G__154015 = (function (){var G__154083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154084 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154083,G__154084) : tailrecursion.hoplon.span.call(null,G__154083,G__154084));
})();
var G__154016 = "))\n(";
var G__154017 = (function (){var G__154085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154086 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154085,G__154086) : tailrecursion.hoplon.span.call(null,G__154085,G__154086));
})();
var G__154018 = (function (){var G__154087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154088 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154087,G__154088) : tailrecursion.hoplon.span.call(null,G__154087,G__154088));
})();
var G__154019 = " ";
var G__154020 = (function (){var G__154089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154090 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154089,G__154090) : tailrecursion.hoplon.span.call(null,G__154089,G__154090));
})();
var G__154021 = ")\n(";
var G__154022 = (function (){var G__154091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154092 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154091,G__154092) : tailrecursion.hoplon.span.call(null,G__154091,G__154092));
})();
var G__154023 = "(";
var G__154024 = (function (){var G__154093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154094 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154093,G__154094) : tailrecursion.hoplon.span.call(null,G__154093,G__154094));
})();
var G__154025 = (function (){var G__154095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154096 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154095,G__154096) : tailrecursion.hoplon.span.call(null,G__154095,G__154096));
})();
var G__154026 = ") (";
var G__154027 = (function (){var G__154097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154098 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154097,G__154098) : tailrecursion.hoplon.span.call(null,G__154097,G__154098));
})();
var G__154028 = (function (){var G__154099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154100 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154099,G__154100) : tailrecursion.hoplon.span.call(null,G__154099,G__154100));
})();
var G__154029 = "))\n(";
var G__154030 = (function (){var G__154101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154102 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154101,G__154102) : tailrecursion.hoplon.span.call(null,G__154101,G__154102));
})();
var G__154031 = (function (){var G__154103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154104 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154103,G__154104) : tailrecursion.hoplon.span.call(null,G__154103,G__154104));
})();
var G__154032 = " ";
var G__154033 = (function (){var G__154105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154106 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154105,G__154106) : tailrecursion.hoplon.span.call(null,G__154105,G__154106));
})();
var G__154034 = ")\n";
var G__154035 = (function (){var G__154107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154108 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154107,G__154108) : tailrecursion.hoplon.span.call(null,G__154107,G__154108));
})();
var G__154036 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__153976,G__153977,G__153978,G__153979,G__153980,G__153981,G__153982,G__153983,G__153984,G__153985,G__153986,G__153987,G__153988,G__153989,G__153990,G__153991,G__153992,G__153993,G__153994,G__153995,G__153996,G__153997,G__153998,G__153999,G__154000,G__154001,G__154002,G__154003,G__154004,G__154005,G__154006,G__154007,G__154008,G__154009,G__154010,G__154011,G__154012,G__154013,G__154014,G__154015,G__154016,G__154017,G__154018,G__154019,G__154020,G__154021,G__154022,G__154023,G__154024,G__154025,G__154026,G__154027,G__154028,G__154029,G__154030,G__154031,G__154032,G__154033,G__154034,G__154035,G__154036) : tailrecursion.hoplon.pre.call(null,G__153976,G__153977,G__153978,G__153979,G__153980,G__153981,G__153982,G__153983,G__153984,G__153985,G__153986,G__153987,G__153988,G__153989,G__153990,G__153991,G__153992,G__153993,G__153994,G__153995,G__153996,G__153997,G__153998,G__153999,G__154000,G__154001,G__154002,G__154003,G__154004,G__154005,G__154006,G__154007,G__154008,G__154009,G__154010,G__154011,G__154012,G__154013,G__154014,G__154015,G__154016,G__154017,G__154018,G__154019,G__154020,G__154021,G__154022,G__154023,G__154024,G__154025,G__154026,G__154027,G__154028,G__154029,G__154030,G__154031,G__154032,G__154033,G__154034,G__154035,G__154036));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__153974,G__153975) : tailrecursion.hoplon.div.call(null,G__153974,G__153975));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__153973) : tailrecursion.hoplon.div.call(null,G__153973));
})(),(function (){var G__154109 = cljs.core.PersistentArrayMap.EMPTY;
var G__154110 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You see the space needed to compute the second was significantly less than that of the first."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__154109,G__154110) : tailrecursion.hoplon.markdown.para_node.call(null,G__154109,G__154110));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153704;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153703;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_153702;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_153701;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(10)], null),(function (){var _STAR_references_STAR_154111 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_154112 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_154113 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_154114 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__154115 = cljs.core.PersistentArrayMap.EMPTY;
var G__154116 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure computes a mathematical function called Ackermann",(function (){var G__154117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__154118 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__154117,G__154118) : tailrecursion.hoplon.markdown.simple_node.call(null,G__154117,G__154118));
})(),"s function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__154115,G__154116) : tailrecursion.hoplon.markdown.para_node.call(null,G__154115,G__154116));
})(),(function (){var G__154119 = (function (){var G__154120 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__154121 = (function (){var G__154122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__154123 = "(";
var G__154124 = (function (){var G__154175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__154176 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154175,G__154176) : tailrecursion.hoplon.span.call(null,G__154175,G__154176));
})();
var G__154125 = (function (){var G__154177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154178 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154177,G__154178) : tailrecursion.hoplon.span.call(null,G__154177,G__154178));
})();
var G__154126 = " [";
var G__154127 = (function (){var G__154179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154180 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154179,G__154180) : tailrecursion.hoplon.span.call(null,G__154179,G__154180));
})();
var G__154128 = " ";
var G__154129 = (function (){var G__154181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154182 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154181,G__154182) : tailrecursion.hoplon.span.call(null,G__154181,G__154182));
})();
var G__154130 = "]\n  (";
var G__154131 = (function (){var G__154183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154184 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154183,G__154184) : tailrecursion.hoplon.span.call(null,G__154183,G__154184));
})();
var G__154132 = "(";
var G__154133 = (function (){var G__154185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154186 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154185,G__154186) : tailrecursion.hoplon.span.call(null,G__154185,G__154186));
})();
var G__154134 = (function (){var G__154187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154188 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154187,G__154188) : tailrecursion.hoplon.span.call(null,G__154187,G__154188));
})();
var G__154135 = " ";
var G__154136 = (function (){var G__154189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154190 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154189,G__154190) : tailrecursion.hoplon.span.call(null,G__154189,G__154190));
})();
var G__154137 = ") ";
var G__154138 = (function (){var G__154191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154192 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154191,G__154192) : tailrecursion.hoplon.span.call(null,G__154191,G__154192));
})();
var G__154139 = "\n        (";
var G__154140 = (function (){var G__154193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154194 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154193,G__154194) : tailrecursion.hoplon.span.call(null,G__154193,G__154194));
})();
var G__154141 = (function (){var G__154195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154196 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154195,G__154196) : tailrecursion.hoplon.span.call(null,G__154195,G__154196));
})();
var G__154142 = " ";
var G__154143 = (function (){var G__154197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154198 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154197,G__154198) : tailrecursion.hoplon.span.call(null,G__154197,G__154198));
})();
var G__154144 = ") (";
var G__154145 = (function (){var G__154199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154200 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154199,G__154200) : tailrecursion.hoplon.span.call(null,G__154199,G__154200));
})();
var G__154146 = (function (){var G__154201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154202 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154201,G__154202) : tailrecursion.hoplon.span.call(null,G__154201,G__154202));
})();
var G__154147 = " ";
var G__154148 = (function (){var G__154203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154204 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154203,G__154204) : tailrecursion.hoplon.span.call(null,G__154203,G__154204));
})();
var G__154149 = ")\n        (";
var G__154150 = (function (){var G__154205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154206 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154205,G__154206) : tailrecursion.hoplon.span.call(null,G__154205,G__154206));
})();
var G__154151 = (function (){var G__154207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154208 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154207,G__154208) : tailrecursion.hoplon.span.call(null,G__154207,G__154208));
})();
var G__154152 = " ";
var G__154153 = (function (){var G__154209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154210 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154209,G__154210) : tailrecursion.hoplon.span.call(null,G__154209,G__154210));
})();
var G__154154 = ") ";
var G__154155 = (function (){var G__154211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154212 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154211,G__154212) : tailrecursion.hoplon.span.call(null,G__154211,G__154212));
})();
var G__154156 = "\n        ";
var G__154157 = (function (){var G__154213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154214 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154213,G__154214) : tailrecursion.hoplon.span.call(null,G__154213,G__154214));
})();
var G__154158 = " (";
var G__154159 = (function (){var G__154215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154215,G__154216) : tailrecursion.hoplon.span.call(null,G__154215,G__154216));
})();
var G__154160 = " (";
var G__154161 = (function (){var G__154217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154218 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154217,G__154218) : tailrecursion.hoplon.span.call(null,G__154217,G__154218));
})();
var G__154162 = (function (){var G__154219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154220 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154219,G__154220) : tailrecursion.hoplon.span.call(null,G__154219,G__154220));
})();
var G__154163 = " ";
var G__154164 = (function (){var G__154221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154222 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154221,G__154222) : tailrecursion.hoplon.span.call(null,G__154221,G__154222));
})();
var G__154165 = ")\n                 (";
var G__154166 = (function (){var G__154223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154224 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154223,G__154224) : tailrecursion.hoplon.span.call(null,G__154223,G__154224));
})();
var G__154167 = " ";
var G__154168 = (function (){var G__154225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154226 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154225,G__154226) : tailrecursion.hoplon.span.call(null,G__154225,G__154226));
})();
var G__154169 = " (";
var G__154170 = (function (){var G__154227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154228 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154227,G__154228) : tailrecursion.hoplon.span.call(null,G__154227,G__154228));
})();
var G__154171 = (function (){var G__154229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__154230 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154229,G__154230) : tailrecursion.hoplon.span.call(null,G__154229,G__154230));
})();
var G__154172 = " ";
var G__154173 = (function (){var G__154231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154232 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154231,G__154232) : tailrecursion.hoplon.span.call(null,G__154231,G__154232));
})();
var G__154174 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__154122,G__154123,G__154124,G__154125,G__154126,G__154127,G__154128,G__154129,G__154130,G__154131,G__154132,G__154133,G__154134,G__154135,G__154136,G__154137,G__154138,G__154139,G__154140,G__154141,G__154142,G__154143,G__154144,G__154145,G__154146,G__154147,G__154148,G__154149,G__154150,G__154151,G__154152,G__154153,G__154154,G__154155,G__154156,G__154157,G__154158,G__154159,G__154160,G__154161,G__154162,G__154163,G__154164,G__154165,G__154166,G__154167,G__154168,G__154169,G__154170,G__154171,G__154172,G__154173,G__154174) : tailrecursion.hoplon.pre.call(null,G__154122,G__154123,G__154124,G__154125,G__154126,G__154127,G__154128,G__154129,G__154130,G__154131,G__154132,G__154133,G__154134,G__154135,G__154136,G__154137,G__154138,G__154139,G__154140,G__154141,G__154142,G__154143,G__154144,G__154145,G__154146,G__154147,G__154148,G__154149,G__154150,G__154151,G__154152,G__154153,G__154154,G__154155,G__154156,G__154157,G__154158,G__154159,G__154160,G__154161,G__154162,G__154163,G__154164,G__154165,G__154166,G__154167,G__154168,G__154169,G__154170,G__154171,G__154172,G__154173,G__154174));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__154120,G__154121) : tailrecursion.hoplon.div.call(null,G__154120,G__154121));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__154119) : tailrecursion.hoplon.div.call(null,G__154119));
})(),(function (){var G__154233 = cljs.core.PersistentArrayMap.EMPTY;
var G__154234 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__154233,G__154234) : tailrecursion.hoplon.markdown.para_node.call(null,G__154233,G__154234));
})(),(function (){var G__154235 = (function (){var G__154236 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__154237 = (function (){var G__154238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__154239 = "(";
var G__154240 = (function (){var G__154246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154247 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154246,G__154247) : tailrecursion.hoplon.span.call(null,G__154246,G__154247));
})();
var G__154241 = " ";
var G__154242 = (function (){var G__154248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154249 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154248,G__154249) : tailrecursion.hoplon.span.call(null,G__154248,G__154249));
})();
var G__154243 = " ";
var G__154244 = (function (){var G__154250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154251 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154250,G__154251) : tailrecursion.hoplon.span.call(null,G__154250,G__154251));
})();
var G__154245 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__154238,G__154239,G__154240,G__154241,G__154242,G__154243,G__154244,G__154245) : tailrecursion.hoplon.pre.call(null,G__154238,G__154239,G__154240,G__154241,G__154242,G__154243,G__154244,G__154245));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__154236,G__154237) : tailrecursion.hoplon.div.call(null,G__154236,G__154237));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__154235) : tailrecursion.hoplon.div.call(null,G__154235));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_154114;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_154113;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_154112;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_154111;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_154252 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_154253 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_154254 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_154255 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__154256 = (function (){var G__154257 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__154258 = (function (){var G__154259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__154260 = "(";
var G__154261 = (function (){var G__154773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154774 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154773,G__154774) : tailrecursion.hoplon.span.call(null,G__154773,G__154774));
})();
var G__154262 = " ";
var G__154263 = (function (){var G__154775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154776 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154775,G__154776) : tailrecursion.hoplon.span.call(null,G__154775,G__154776));
})();
var G__154264 = " ";
var G__154265 = (function (){var G__154777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154778 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154777,G__154778) : tailrecursion.hoplon.span.call(null,G__154777,G__154778));
})();
var G__154266 = ")\n(";
var G__154267 = (function (){var G__154779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154780 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154779,G__154780) : tailrecursion.hoplon.span.call(null,G__154779,G__154780));
})();
var G__154268 = " (";
var G__154269 = (function (){var G__154781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154782 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154781,G__154782) : tailrecursion.hoplon.span.call(null,G__154781,G__154782));
})();
var G__154270 = (function (){var G__154783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154784 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154783,G__154784) : tailrecursion.hoplon.span.call(null,G__154783,G__154784));
})();
var G__154271 = " ";
var G__154272 = (function (){var G__154785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154786 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154785,G__154786) : tailrecursion.hoplon.span.call(null,G__154785,G__154786));
})();
var G__154273 = ") (";
var G__154274 = (function (){var G__154787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154788 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154787,G__154788) : tailrecursion.hoplon.span.call(null,G__154787,G__154788));
})();
var G__154275 = " ";
var G__154276 = (function (){var G__154789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154790 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154789,G__154790) : tailrecursion.hoplon.span.call(null,G__154789,G__154790));
})();
var G__154277 = " (";
var G__154278 = (function (){var G__154791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154792 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154791,G__154792) : tailrecursion.hoplon.span.call(null,G__154791,G__154792));
})();
var G__154279 = (function (){var G__154793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154794 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154793,G__154794) : tailrecursion.hoplon.span.call(null,G__154793,G__154794));
})();
var G__154280 = " ";
var G__154281 = (function (){var G__154795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154796 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154795,G__154796) : tailrecursion.hoplon.span.call(null,G__154795,G__154796));
})();
var G__154282 = ")))\n(";
var G__154283 = (function (){var G__154797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154798 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154797,G__154798) : tailrecursion.hoplon.span.call(null,G__154797,G__154798));
})();
var G__154284 = " ";
var G__154285 = (function (){var G__154799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154800 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154799,G__154800) : tailrecursion.hoplon.span.call(null,G__154799,G__154800));
})();
var G__154286 = " (";
var G__154287 = (function (){var G__154801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154802 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154801,G__154802) : tailrecursion.hoplon.span.call(null,G__154801,G__154802));
})();
var G__154288 = " ";
var G__154289 = (function (){var G__154803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154804 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154803,G__154804) : tailrecursion.hoplon.span.call(null,G__154803,G__154804));
})();
var G__154290 = " ";
var G__154291 = (function (){var G__154805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154806 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154805,G__154806) : tailrecursion.hoplon.span.call(null,G__154805,G__154806));
})();
var G__154292 = "))\n(";
var G__154293 = (function (){var G__154807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154808 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154807,G__154808) : tailrecursion.hoplon.span.call(null,G__154807,G__154808));
})();
var G__154294 = " ";
var G__154295 = (function (){var G__154809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154810 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154809,G__154810) : tailrecursion.hoplon.span.call(null,G__154809,G__154810));
})();
var G__154296 = " (";
var G__154297 = (function (){var G__154811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154812 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154811,G__154812) : tailrecursion.hoplon.span.call(null,G__154811,G__154812));
})();
var G__154298 = " ";
var G__154299 = (function (){var G__154813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154814 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154813,G__154814) : tailrecursion.hoplon.span.call(null,G__154813,G__154814));
})();
var G__154300 = " (";
var G__154301 = (function (){var G__154815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154816 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154815,G__154816) : tailrecursion.hoplon.span.call(null,G__154815,G__154816));
})();
var G__154302 = " ";
var G__154303 = (function (){var G__154817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154818 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154817,G__154818) : tailrecursion.hoplon.span.call(null,G__154817,G__154818));
})();
var G__154304 = " (";
var G__154305 = (function (){var G__154819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154820 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154819,G__154820) : tailrecursion.hoplon.span.call(null,G__154819,G__154820));
})();
var G__154306 = (function (){var G__154821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154822 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154821,G__154822) : tailrecursion.hoplon.span.call(null,G__154821,G__154822));
})();
var G__154307 = " ";
var G__154308 = (function (){var G__154823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154824 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154823,G__154824) : tailrecursion.hoplon.span.call(null,G__154823,G__154824));
})();
var G__154309 = "))))\n(";
var G__154310 = (function (){var G__154825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154826 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154825,G__154826) : tailrecursion.hoplon.span.call(null,G__154825,G__154826));
})();
var G__154311 = " ";
var G__154312 = (function (){var G__154827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154828 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154827,G__154828) : tailrecursion.hoplon.span.call(null,G__154827,G__154828));
})();
var G__154313 = " (";
var G__154314 = (function (){var G__154829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154830 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154829,G__154830) : tailrecursion.hoplon.span.call(null,G__154829,G__154830));
})();
var G__154315 = " ";
var G__154316 = (function (){var G__154831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154832 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154831,G__154832) : tailrecursion.hoplon.span.call(null,G__154831,G__154832));
})();
var G__154317 = " (";
var G__154318 = (function (){var G__154833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154834 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154833,G__154834) : tailrecursion.hoplon.span.call(null,G__154833,G__154834));
})();
var G__154319 = " ";
var G__154320 = (function (){var G__154835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154836 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154835,G__154836) : tailrecursion.hoplon.span.call(null,G__154835,G__154836));
})();
var G__154321 = " ";
var G__154322 = (function (){var G__154837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154838 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154837,G__154838) : tailrecursion.hoplon.span.call(null,G__154837,G__154838));
})();
var G__154323 = ")))\n(";
var G__154324 = (function (){var G__154839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154840 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154839,G__154840) : tailrecursion.hoplon.span.call(null,G__154839,G__154840));
})();
var G__154325 = " ";
var G__154326 = (function (){var G__154841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154842 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154841,G__154842) : tailrecursion.hoplon.span.call(null,G__154841,G__154842));
})();
var G__154327 = " (";
var G__154328 = (function (){var G__154843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154844 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154843,G__154844) : tailrecursion.hoplon.span.call(null,G__154843,G__154844));
})();
var G__154329 = " ";
var G__154330 = (function (){var G__154845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154846 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154845,G__154846) : tailrecursion.hoplon.span.call(null,G__154845,G__154846));
})();
var G__154331 = " (";
var G__154332 = (function (){var G__154847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154848 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154847,G__154848) : tailrecursion.hoplon.span.call(null,G__154847,G__154848));
})();
var G__154333 = " ";
var G__154334 = (function (){var G__154849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154850 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154849,G__154850) : tailrecursion.hoplon.span.call(null,G__154849,G__154850));
})();
var G__154335 = " (";
var G__154336 = (function (){var G__154851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154852 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154851,G__154852) : tailrecursion.hoplon.span.call(null,G__154851,G__154852));
})();
var G__154337 = " ";
var G__154338 = (function (){var G__154853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154854 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154853,G__154854) : tailrecursion.hoplon.span.call(null,G__154853,G__154854));
})();
var G__154339 = " (";
var G__154340 = (function (){var G__154855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154856 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154855,G__154856) : tailrecursion.hoplon.span.call(null,G__154855,G__154856));
})();
var G__154341 = (function (){var G__154857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154858 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154857,G__154858) : tailrecursion.hoplon.span.call(null,G__154857,G__154858));
})();
var G__154342 = " ";
var G__154343 = (function (){var G__154859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154860 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154859,G__154860) : tailrecursion.hoplon.span.call(null,G__154859,G__154860));
})();
var G__154344 = ")))))\n(";
var G__154345 = (function (){var G__154861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154862 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154861,G__154862) : tailrecursion.hoplon.span.call(null,G__154861,G__154862));
})();
var G__154346 = " ";
var G__154347 = (function (){var G__154863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154864 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154863,G__154864) : tailrecursion.hoplon.span.call(null,G__154863,G__154864));
})();
var G__154348 = " (";
var G__154349 = (function (){var G__154865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154866 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154865,G__154866) : tailrecursion.hoplon.span.call(null,G__154865,G__154866));
})();
var G__154350 = " ";
var G__154351 = (function (){var G__154867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154868 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154867,G__154868) : tailrecursion.hoplon.span.call(null,G__154867,G__154868));
})();
var G__154352 = " (";
var G__154353 = (function (){var G__154869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154870 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154869,G__154870) : tailrecursion.hoplon.span.call(null,G__154869,G__154870));
})();
var G__154354 = " ";
var G__154355 = (function (){var G__154871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154872 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154871,G__154872) : tailrecursion.hoplon.span.call(null,G__154871,G__154872));
})();
var G__154356 = " (";
var G__154357 = (function (){var G__154873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154874 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154873,G__154874) : tailrecursion.hoplon.span.call(null,G__154873,G__154874));
})();
var G__154358 = " ";
var G__154359 = (function (){var G__154875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154876 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154875,G__154876) : tailrecursion.hoplon.span.call(null,G__154875,G__154876));
})();
var G__154360 = " (";
var G__154361 = (function (){var G__154877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154878 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154877,G__154878) : tailrecursion.hoplon.span.call(null,G__154877,G__154878));
})();
var G__154362 = " ";
var G__154363 = (function (){var G__154879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154880 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154879,G__154880) : tailrecursion.hoplon.span.call(null,G__154879,G__154880));
})();
var G__154364 = " (";
var G__154365 = (function (){var G__154881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154882 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154881,G__154882) : tailrecursion.hoplon.span.call(null,G__154881,G__154882));
})();
var G__154366 = (function (){var G__154883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154884 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154883,G__154884) : tailrecursion.hoplon.span.call(null,G__154883,G__154884));
})();
var G__154367 = " ";
var G__154368 = (function (){var G__154885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154886 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154885,G__154886) : tailrecursion.hoplon.span.call(null,G__154885,G__154886));
})();
var G__154369 = "))))))\n(";
var G__154370 = (function (){var G__154887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154888 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154887,G__154888) : tailrecursion.hoplon.span.call(null,G__154887,G__154888));
})();
var G__154371 = " ";
var G__154372 = (function (){var G__154889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154890 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154889,G__154890) : tailrecursion.hoplon.span.call(null,G__154889,G__154890));
})();
var G__154373 = " (";
var G__154374 = (function (){var G__154891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154892 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154891,G__154892) : tailrecursion.hoplon.span.call(null,G__154891,G__154892));
})();
var G__154375 = " ";
var G__154376 = (function (){var G__154893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154894 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154893,G__154894) : tailrecursion.hoplon.span.call(null,G__154893,G__154894));
})();
var G__154377 = " (";
var G__154378 = (function (){var G__154895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154896 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154895,G__154896) : tailrecursion.hoplon.span.call(null,G__154895,G__154896));
})();
var G__154379 = " ";
var G__154380 = (function (){var G__154897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154898 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154897,G__154898) : tailrecursion.hoplon.span.call(null,G__154897,G__154898));
})();
var G__154381 = " (";
var G__154382 = (function (){var G__154899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154900 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154899,G__154900) : tailrecursion.hoplon.span.call(null,G__154899,G__154900));
})();
var G__154383 = " ";
var G__154384 = (function (){var G__154901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154902 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154901,G__154902) : tailrecursion.hoplon.span.call(null,G__154901,G__154902));
})();
var G__154385 = " (";
var G__154386 = (function (){var G__154903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154904 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154903,G__154904) : tailrecursion.hoplon.span.call(null,G__154903,G__154904));
})();
var G__154387 = " ";
var G__154388 = (function (){var G__154905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154906 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154905,G__154906) : tailrecursion.hoplon.span.call(null,G__154905,G__154906));
})();
var G__154389 = " (";
var G__154390 = (function (){var G__154907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154908 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154907,G__154908) : tailrecursion.hoplon.span.call(null,G__154907,G__154908));
})();
var G__154391 = " ";
var G__154392 = (function (){var G__154909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154910 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154909,G__154910) : tailrecursion.hoplon.span.call(null,G__154909,G__154910));
})();
var G__154393 = " (";
var G__154394 = (function (){var G__154911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154912 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154911,G__154912) : tailrecursion.hoplon.span.call(null,G__154911,G__154912));
})();
var G__154395 = (function (){var G__154913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154914 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154913,G__154914) : tailrecursion.hoplon.span.call(null,G__154913,G__154914));
})();
var G__154396 = " ";
var G__154397 = (function (){var G__154915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154916 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154915,G__154916) : tailrecursion.hoplon.span.call(null,G__154915,G__154916));
})();
var G__154398 = ")))))))\n(";
var G__154399 = (function (){var G__154917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154918 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154917,G__154918) : tailrecursion.hoplon.span.call(null,G__154917,G__154918));
})();
var G__154400 = " ";
var G__154401 = (function (){var G__154919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154920 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154919,G__154920) : tailrecursion.hoplon.span.call(null,G__154919,G__154920));
})();
var G__154402 = " (";
var G__154403 = (function (){var G__154921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154922 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154921,G__154922) : tailrecursion.hoplon.span.call(null,G__154921,G__154922));
})();
var G__154404 = " ";
var G__154405 = (function (){var G__154923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154924 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154923,G__154924) : tailrecursion.hoplon.span.call(null,G__154923,G__154924));
})();
var G__154406 = " (";
var G__154407 = (function (){var G__154925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154926 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154925,G__154926) : tailrecursion.hoplon.span.call(null,G__154925,G__154926));
})();
var G__154408 = " ";
var G__154409 = (function (){var G__154927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154928 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154927,G__154928) : tailrecursion.hoplon.span.call(null,G__154927,G__154928));
})();
var G__154410 = " (";
var G__154411 = (function (){var G__154929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154930 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154929,G__154930) : tailrecursion.hoplon.span.call(null,G__154929,G__154930));
})();
var G__154412 = " ";
var G__154413 = (function (){var G__154931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154932 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154931,G__154932) : tailrecursion.hoplon.span.call(null,G__154931,G__154932));
})();
var G__154414 = " (";
var G__154415 = (function (){var G__154933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154934 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154933,G__154934) : tailrecursion.hoplon.span.call(null,G__154933,G__154934));
})();
var G__154416 = " ";
var G__154417 = (function (){var G__154935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154936 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154935,G__154936) : tailrecursion.hoplon.span.call(null,G__154935,G__154936));
})();
var G__154418 = " (";
var G__154419 = (function (){var G__154937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154938 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154937,G__154938) : tailrecursion.hoplon.span.call(null,G__154937,G__154938));
})();
var G__154420 = " ";
var G__154421 = (function (){var G__154939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154940 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154939,G__154940) : tailrecursion.hoplon.span.call(null,G__154939,G__154940));
})();
var G__154422 = " (";
var G__154423 = (function (){var G__154941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154942 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154941,G__154942) : tailrecursion.hoplon.span.call(null,G__154941,G__154942));
})();
var G__154424 = " ";
var G__154425 = (function (){var G__154943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154944 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154943,G__154944) : tailrecursion.hoplon.span.call(null,G__154943,G__154944));
})();
var G__154426 = " (";
var G__154427 = (function (){var G__154945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154946 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154945,G__154946) : tailrecursion.hoplon.span.call(null,G__154945,G__154946));
})();
var G__154428 = (function (){var G__154947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154948 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154947,G__154948) : tailrecursion.hoplon.span.call(null,G__154947,G__154948));
})();
var G__154429 = " ";
var G__154430 = (function (){var G__154949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154950 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154949,G__154950) : tailrecursion.hoplon.span.call(null,G__154949,G__154950));
})();
var G__154431 = "))))))))\n(";
var G__154432 = (function (){var G__154951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154952 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154951,G__154952) : tailrecursion.hoplon.span.call(null,G__154951,G__154952));
})();
var G__154433 = " ";
var G__154434 = (function (){var G__154953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154954 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154953,G__154954) : tailrecursion.hoplon.span.call(null,G__154953,G__154954));
})();
var G__154435 = " (";
var G__154436 = (function (){var G__154955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154956 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154955,G__154956) : tailrecursion.hoplon.span.call(null,G__154955,G__154956));
})();
var G__154437 = " ";
var G__154438 = (function (){var G__154957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154958 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154957,G__154958) : tailrecursion.hoplon.span.call(null,G__154957,G__154958));
})();
var G__154439 = " (";
var G__154440 = (function (){var G__154959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154960 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154959,G__154960) : tailrecursion.hoplon.span.call(null,G__154959,G__154960));
})();
var G__154441 = " ";
var G__154442 = (function (){var G__154961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154962 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154961,G__154962) : tailrecursion.hoplon.span.call(null,G__154961,G__154962));
})();
var G__154443 = " (";
var G__154444 = (function (){var G__154963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154964 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154963,G__154964) : tailrecursion.hoplon.span.call(null,G__154963,G__154964));
})();
var G__154445 = " ";
var G__154446 = (function (){var G__154965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154966 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154965,G__154966) : tailrecursion.hoplon.span.call(null,G__154965,G__154966));
})();
var G__154447 = " (";
var G__154448 = (function (){var G__154967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154968 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154967,G__154968) : tailrecursion.hoplon.span.call(null,G__154967,G__154968));
})();
var G__154449 = " ";
var G__154450 = (function (){var G__154969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154970 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154969,G__154970) : tailrecursion.hoplon.span.call(null,G__154969,G__154970));
})();
var G__154451 = " (";
var G__154452 = (function (){var G__154971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154972 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154971,G__154972) : tailrecursion.hoplon.span.call(null,G__154971,G__154972));
})();
var G__154453 = " ";
var G__154454 = (function (){var G__154973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154974 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154973,G__154974) : tailrecursion.hoplon.span.call(null,G__154973,G__154974));
})();
var G__154455 = " (";
var G__154456 = (function (){var G__154975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154976 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154975,G__154976) : tailrecursion.hoplon.span.call(null,G__154975,G__154976));
})();
var G__154457 = " ";
var G__154458 = (function (){var G__154977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154978 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154977,G__154978) : tailrecursion.hoplon.span.call(null,G__154977,G__154978));
})();
var G__154459 = " (";
var G__154460 = (function (){var G__154979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154980 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154979,G__154980) : tailrecursion.hoplon.span.call(null,G__154979,G__154980));
})();
var G__154461 = " ";
var G__154462 = (function (){var G__154981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154982 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154981,G__154982) : tailrecursion.hoplon.span.call(null,G__154981,G__154982));
})();
var G__154463 = " (";
var G__154464 = (function (){var G__154983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__154984 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154983,G__154984) : tailrecursion.hoplon.span.call(null,G__154983,G__154984));
})();
var G__154465 = (function (){var G__154985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154986 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154985,G__154986) : tailrecursion.hoplon.span.call(null,G__154985,G__154986));
})();
var G__154466 = " ";
var G__154467 = (function (){var G__154987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154988 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154987,G__154988) : tailrecursion.hoplon.span.call(null,G__154987,G__154988));
})();
var G__154468 = ")))))))))\n(";
var G__154469 = (function (){var G__154989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154990 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154989,G__154990) : tailrecursion.hoplon.span.call(null,G__154989,G__154990));
})();
var G__154470 = " ";
var G__154471 = (function (){var G__154991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154992 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154991,G__154992) : tailrecursion.hoplon.span.call(null,G__154991,G__154992));
})();
var G__154472 = " (";
var G__154473 = (function (){var G__154993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154994 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154993,G__154994) : tailrecursion.hoplon.span.call(null,G__154993,G__154994));
})();
var G__154474 = " ";
var G__154475 = (function (){var G__154995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__154996 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154995,G__154996) : tailrecursion.hoplon.span.call(null,G__154995,G__154996));
})();
var G__154476 = " (";
var G__154477 = (function (){var G__154997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__154998 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154997,G__154998) : tailrecursion.hoplon.span.call(null,G__154997,G__154998));
})();
var G__154478 = " ";
var G__154479 = (function (){var G__154999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155000 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__154999,G__155000) : tailrecursion.hoplon.span.call(null,G__154999,G__155000));
})();
var G__154480 = " (";
var G__154481 = (function (){var G__155001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155002 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155001,G__155002) : tailrecursion.hoplon.span.call(null,G__155001,G__155002));
})();
var G__154482 = " ";
var G__154483 = (function (){var G__155003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155004 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155003,G__155004) : tailrecursion.hoplon.span.call(null,G__155003,G__155004));
})();
var G__154484 = " (";
var G__154485 = (function (){var G__155005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155006 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155005,G__155006) : tailrecursion.hoplon.span.call(null,G__155005,G__155006));
})();
var G__154486 = " ";
var G__154487 = (function (){var G__155007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155008 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155007,G__155008) : tailrecursion.hoplon.span.call(null,G__155007,G__155008));
})();
var G__154488 = " (";
var G__154489 = (function (){var G__155009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155010 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155009,G__155010) : tailrecursion.hoplon.span.call(null,G__155009,G__155010));
})();
var G__154490 = " ";
var G__154491 = (function (){var G__155011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155012 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155011,G__155012) : tailrecursion.hoplon.span.call(null,G__155011,G__155012));
})();
var G__154492 = " (";
var G__154493 = (function (){var G__155013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155014 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155013,G__155014) : tailrecursion.hoplon.span.call(null,G__155013,G__155014));
})();
var G__154494 = " ";
var G__154495 = (function (){var G__155015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155016 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155015,G__155016) : tailrecursion.hoplon.span.call(null,G__155015,G__155016));
})();
var G__154496 = " (";
var G__154497 = (function (){var G__155017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155018 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155017,G__155018) : tailrecursion.hoplon.span.call(null,G__155017,G__155018));
})();
var G__154498 = " ";
var G__154499 = (function (){var G__155019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155020 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155019,G__155020) : tailrecursion.hoplon.span.call(null,G__155019,G__155020));
})();
var G__154500 = " (";
var G__154501 = (function (){var G__155021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155022 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155021,G__155022) : tailrecursion.hoplon.span.call(null,G__155021,G__155022));
})();
var G__154502 = " ";
var G__154503 = (function (){var G__155023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155024 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155023,G__155024) : tailrecursion.hoplon.span.call(null,G__155023,G__155024));
})();
var G__154504 = " (";
var G__154505 = (function (){var G__155025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155026 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155025,G__155026) : tailrecursion.hoplon.span.call(null,G__155025,G__155026));
})();
var G__154506 = (function (){var G__155027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155028 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155027,G__155028) : tailrecursion.hoplon.span.call(null,G__155027,G__155028));
})();
var G__154507 = " ";
var G__154508 = (function (){var G__155029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155030 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155029,G__155030) : tailrecursion.hoplon.span.call(null,G__155029,G__155030));
})();
var G__154509 = "))))))))))\n(";
var G__154510 = (function (){var G__155031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155032 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155031,G__155032) : tailrecursion.hoplon.span.call(null,G__155031,G__155032));
})();
var G__154511 = " ";
var G__154512 = (function (){var G__155033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155034 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155033,G__155034) : tailrecursion.hoplon.span.call(null,G__155033,G__155034));
})();
var G__154513 = " (";
var G__154514 = (function (){var G__155035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155036 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155035,G__155036) : tailrecursion.hoplon.span.call(null,G__155035,G__155036));
})();
var G__154515 = " ";
var G__154516 = (function (){var G__155037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155038 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155037,G__155038) : tailrecursion.hoplon.span.call(null,G__155037,G__155038));
})();
var G__154517 = " (";
var G__154518 = (function (){var G__155039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155040 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155039,G__155040) : tailrecursion.hoplon.span.call(null,G__155039,G__155040));
})();
var G__154519 = " ";
var G__154520 = (function (){var G__155041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155042 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155041,G__155042) : tailrecursion.hoplon.span.call(null,G__155041,G__155042));
})();
var G__154521 = " (";
var G__154522 = (function (){var G__155043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155044 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155043,G__155044) : tailrecursion.hoplon.span.call(null,G__155043,G__155044));
})();
var G__154523 = " ";
var G__154524 = (function (){var G__155045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155046 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155045,G__155046) : tailrecursion.hoplon.span.call(null,G__155045,G__155046));
})();
var G__154525 = " (";
var G__154526 = (function (){var G__155047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155048 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155047,G__155048) : tailrecursion.hoplon.span.call(null,G__155047,G__155048));
})();
var G__154527 = " ";
var G__154528 = (function (){var G__155049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155050 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155049,G__155050) : tailrecursion.hoplon.span.call(null,G__155049,G__155050));
})();
var G__154529 = " (";
var G__154530 = (function (){var G__155051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155052 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155051,G__155052) : tailrecursion.hoplon.span.call(null,G__155051,G__155052));
})();
var G__154531 = " ";
var G__154532 = (function (){var G__155053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155054 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155053,G__155054) : tailrecursion.hoplon.span.call(null,G__155053,G__155054));
})();
var G__154533 = " (";
var G__154534 = (function (){var G__155055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155056 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155055,G__155056) : tailrecursion.hoplon.span.call(null,G__155055,G__155056));
})();
var G__154535 = " ";
var G__154536 = (function (){var G__155057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155058 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155057,G__155058) : tailrecursion.hoplon.span.call(null,G__155057,G__155058));
})();
var G__154537 = " (";
var G__154538 = (function (){var G__155059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155060 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155059,G__155060) : tailrecursion.hoplon.span.call(null,G__155059,G__155060));
})();
var G__154539 = " ";
var G__154540 = (function (){var G__155061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155062 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155061,G__155062) : tailrecursion.hoplon.span.call(null,G__155061,G__155062));
})();
var G__154541 = " (";
var G__154542 = (function (){var G__155063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155064 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155063,G__155064) : tailrecursion.hoplon.span.call(null,G__155063,G__155064));
})();
var G__154543 = " ";
var G__154544 = (function (){var G__155065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155066 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155065,G__155066) : tailrecursion.hoplon.span.call(null,G__155065,G__155066));
})();
var G__154545 = " (";
var G__154546 = (function (){var G__155067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155068 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155067,G__155068) : tailrecursion.hoplon.span.call(null,G__155067,G__155068));
})();
var G__154547 = " ";
var G__154548 = (function (){var G__155069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155070 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155069,G__155070) : tailrecursion.hoplon.span.call(null,G__155069,G__155070));
})();
var G__154549 = " (";
var G__154550 = (function (){var G__155071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155072 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155071,G__155072) : tailrecursion.hoplon.span.call(null,G__155071,G__155072));
})();
var G__154551 = (function (){var G__155073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155074 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155073,G__155074) : tailrecursion.hoplon.span.call(null,G__155073,G__155074));
})();
var G__154552 = " ";
var G__154553 = (function (){var G__155075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155076 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155075,G__155076) : tailrecursion.hoplon.span.call(null,G__155075,G__155076));
})();
var G__154554 = ")))))))))))\n(";
var G__154555 = (function (){var G__155077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155078 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155077,G__155078) : tailrecursion.hoplon.span.call(null,G__155077,G__155078));
})();
var G__154556 = " ";
var G__154557 = (function (){var G__155079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155080 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155079,G__155080) : tailrecursion.hoplon.span.call(null,G__155079,G__155080));
})();
var G__154558 = " (";
var G__154559 = (function (){var G__155081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155082 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155081,G__155082) : tailrecursion.hoplon.span.call(null,G__155081,G__155082));
})();
var G__154560 = " ";
var G__154561 = (function (){var G__155083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155084 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155083,G__155084) : tailrecursion.hoplon.span.call(null,G__155083,G__155084));
})();
var G__154562 = " (";
var G__154563 = (function (){var G__155085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155086 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155085,G__155086) : tailrecursion.hoplon.span.call(null,G__155085,G__155086));
})();
var G__154564 = " ";
var G__154565 = (function (){var G__155087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155088 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155087,G__155088) : tailrecursion.hoplon.span.call(null,G__155087,G__155088));
})();
var G__154566 = " (";
var G__154567 = (function (){var G__155089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155090 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155089,G__155090) : tailrecursion.hoplon.span.call(null,G__155089,G__155090));
})();
var G__154568 = " ";
var G__154569 = (function (){var G__155091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155092 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155091,G__155092) : tailrecursion.hoplon.span.call(null,G__155091,G__155092));
})();
var G__154570 = " (";
var G__154571 = (function (){var G__155093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155094 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155093,G__155094) : tailrecursion.hoplon.span.call(null,G__155093,G__155094));
})();
var G__154572 = " ";
var G__154573 = (function (){var G__155095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155096 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155095,G__155096) : tailrecursion.hoplon.span.call(null,G__155095,G__155096));
})();
var G__154574 = " (";
var G__154575 = (function (){var G__155097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155098 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155097,G__155098) : tailrecursion.hoplon.span.call(null,G__155097,G__155098));
})();
var G__154576 = " ";
var G__154577 = (function (){var G__155099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155100 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155099,G__155100) : tailrecursion.hoplon.span.call(null,G__155099,G__155100));
})();
var G__154578 = " (";
var G__154579 = (function (){var G__155101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155102 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155101,G__155102) : tailrecursion.hoplon.span.call(null,G__155101,G__155102));
})();
var G__154580 = " ";
var G__154581 = (function (){var G__155103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155104 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155103,G__155104) : tailrecursion.hoplon.span.call(null,G__155103,G__155104));
})();
var G__154582 = " (";
var G__154583 = (function (){var G__155105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155106 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155105,G__155106) : tailrecursion.hoplon.span.call(null,G__155105,G__155106));
})();
var G__154584 = " ";
var G__154585 = (function (){var G__155107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155108 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155107,G__155108) : tailrecursion.hoplon.span.call(null,G__155107,G__155108));
})();
var G__154586 = " (";
var G__154587 = (function (){var G__155109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155110 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155109,G__155110) : tailrecursion.hoplon.span.call(null,G__155109,G__155110));
})();
var G__154588 = " ";
var G__154589 = (function (){var G__155111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155112 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155111,G__155112) : tailrecursion.hoplon.span.call(null,G__155111,G__155112));
})();
var G__154590 = " (";
var G__154591 = (function (){var G__155113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155114 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155113,G__155114) : tailrecursion.hoplon.span.call(null,G__155113,G__155114));
})();
var G__154592 = " ";
var G__154593 = (function (){var G__155115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155116 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155115,G__155116) : tailrecursion.hoplon.span.call(null,G__155115,G__155116));
})();
var G__154594 = " ";
var G__154595 = (function (){var G__155117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155118 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155117,G__155118) : tailrecursion.hoplon.span.call(null,G__155117,G__155118));
})();
var G__154596 = "))))))))))\n(";
var G__154597 = (function (){var G__155119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155120 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155119,G__155120) : tailrecursion.hoplon.span.call(null,G__155119,G__155120));
})();
var G__154598 = " ";
var G__154599 = (function (){var G__155121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155122 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155121,G__155122) : tailrecursion.hoplon.span.call(null,G__155121,G__155122));
})();
var G__154600 = " (";
var G__154601 = (function (){var G__155123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155124 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155123,G__155124) : tailrecursion.hoplon.span.call(null,G__155123,G__155124));
})();
var G__154602 = " ";
var G__154603 = (function (){var G__155125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155126 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155125,G__155126) : tailrecursion.hoplon.span.call(null,G__155125,G__155126));
})();
var G__154604 = " (";
var G__154605 = (function (){var G__155127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155128 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155127,G__155128) : tailrecursion.hoplon.span.call(null,G__155127,G__155128));
})();
var G__154606 = " ";
var G__154607 = (function (){var G__155129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155130 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155129,G__155130) : tailrecursion.hoplon.span.call(null,G__155129,G__155130));
})();
var G__154608 = " (";
var G__154609 = (function (){var G__155131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155132 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155131,G__155132) : tailrecursion.hoplon.span.call(null,G__155131,G__155132));
})();
var G__154610 = " ";
var G__154611 = (function (){var G__155133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155134 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155133,G__155134) : tailrecursion.hoplon.span.call(null,G__155133,G__155134));
})();
var G__154612 = " (";
var G__154613 = (function (){var G__155135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155136 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155135,G__155136) : tailrecursion.hoplon.span.call(null,G__155135,G__155136));
})();
var G__154614 = " ";
var G__154615 = (function (){var G__155137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155138 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155137,G__155138) : tailrecursion.hoplon.span.call(null,G__155137,G__155138));
})();
var G__154616 = " (";
var G__154617 = (function (){var G__155139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155140 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155139,G__155140) : tailrecursion.hoplon.span.call(null,G__155139,G__155140));
})();
var G__154618 = " ";
var G__154619 = (function (){var G__155141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155142 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155141,G__155142) : tailrecursion.hoplon.span.call(null,G__155141,G__155142));
})();
var G__154620 = " (";
var G__154621 = (function (){var G__155143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155144 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155143,G__155144) : tailrecursion.hoplon.span.call(null,G__155143,G__155144));
})();
var G__154622 = " ";
var G__154623 = (function (){var G__155145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155146 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155145,G__155146) : tailrecursion.hoplon.span.call(null,G__155145,G__155146));
})();
var G__154624 = " (";
var G__154625 = (function (){var G__155147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155148 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155147,G__155148) : tailrecursion.hoplon.span.call(null,G__155147,G__155148));
})();
var G__154626 = " ";
var G__154627 = (function (){var G__155149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155150 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155149,G__155150) : tailrecursion.hoplon.span.call(null,G__155149,G__155150));
})();
var G__154628 = " (";
var G__154629 = (function (){var G__155151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155152 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155151,G__155152) : tailrecursion.hoplon.span.call(null,G__155151,G__155152));
})();
var G__154630 = " ";
var G__154631 = (function (){var G__155153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155154 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155153,G__155154) : tailrecursion.hoplon.span.call(null,G__155153,G__155154));
})();
var G__154632 = " ";
var G__154633 = (function (){var G__155155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155156 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155155,G__155156) : tailrecursion.hoplon.span.call(null,G__155155,G__155156));
})();
var G__154634 = ")))))))))\n(";
var G__154635 = (function (){var G__155157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155158 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155157,G__155158) : tailrecursion.hoplon.span.call(null,G__155157,G__155158));
})();
var G__154636 = " ";
var G__154637 = (function (){var G__155159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155160 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155159,G__155160) : tailrecursion.hoplon.span.call(null,G__155159,G__155160));
})();
var G__154638 = " (";
var G__154639 = (function (){var G__155161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155162 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155161,G__155162) : tailrecursion.hoplon.span.call(null,G__155161,G__155162));
})();
var G__154640 = " ";
var G__154641 = (function (){var G__155163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155164 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155163,G__155164) : tailrecursion.hoplon.span.call(null,G__155163,G__155164));
})();
var G__154642 = " (";
var G__154643 = (function (){var G__155165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155166 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155165,G__155166) : tailrecursion.hoplon.span.call(null,G__155165,G__155166));
})();
var G__154644 = " ";
var G__154645 = (function (){var G__155167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155168 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155167,G__155168) : tailrecursion.hoplon.span.call(null,G__155167,G__155168));
})();
var G__154646 = " (";
var G__154647 = (function (){var G__155169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155170 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155169,G__155170) : tailrecursion.hoplon.span.call(null,G__155169,G__155170));
})();
var G__154648 = " ";
var G__154649 = (function (){var G__155171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155172 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155171,G__155172) : tailrecursion.hoplon.span.call(null,G__155171,G__155172));
})();
var G__154650 = " (";
var G__154651 = (function (){var G__155173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155174 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155173,G__155174) : tailrecursion.hoplon.span.call(null,G__155173,G__155174));
})();
var G__154652 = " ";
var G__154653 = (function (){var G__155175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155176 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155175,G__155176) : tailrecursion.hoplon.span.call(null,G__155175,G__155176));
})();
var G__154654 = " (";
var G__154655 = (function (){var G__155177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155178 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155177,G__155178) : tailrecursion.hoplon.span.call(null,G__155177,G__155178));
})();
var G__154656 = " ";
var G__154657 = (function (){var G__155179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155180 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155179,G__155180) : tailrecursion.hoplon.span.call(null,G__155179,G__155180));
})();
var G__154658 = " (";
var G__154659 = (function (){var G__155181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155182 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155181,G__155182) : tailrecursion.hoplon.span.call(null,G__155181,G__155182));
})();
var G__154660 = " ";
var G__154661 = (function (){var G__155183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155184 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155183,G__155184) : tailrecursion.hoplon.span.call(null,G__155183,G__155184));
})();
var G__154662 = " (";
var G__154663 = (function (){var G__155185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155186 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155185,G__155186) : tailrecursion.hoplon.span.call(null,G__155185,G__155186));
})();
var G__154664 = " ";
var G__154665 = (function (){var G__155187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155188 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155187,G__155188) : tailrecursion.hoplon.span.call(null,G__155187,G__155188));
})();
var G__154666 = " (";
var G__154667 = (function (){var G__155189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155190 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155189,G__155190) : tailrecursion.hoplon.span.call(null,G__155189,G__155190));
})();
var G__154668 = (function (){var G__155191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155192 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155191,G__155192) : tailrecursion.hoplon.span.call(null,G__155191,G__155192));
})();
var G__154669 = " ";
var G__154670 = (function (){var G__155193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155194 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155193,G__155194) : tailrecursion.hoplon.span.call(null,G__155193,G__155194));
})();
var G__154671 = ")))))))))\n(";
var G__154672 = (function (){var G__155195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155196 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155195,G__155196) : tailrecursion.hoplon.span.call(null,G__155195,G__155196));
})();
var G__154673 = " ";
var G__154674 = (function (){var G__155197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155198 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155197,G__155198) : tailrecursion.hoplon.span.call(null,G__155197,G__155198));
})();
var G__154675 = " (";
var G__154676 = (function (){var G__155199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155200 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155199,G__155200) : tailrecursion.hoplon.span.call(null,G__155199,G__155200));
})();
var G__154677 = " ";
var G__154678 = (function (){var G__155201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155202 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155201,G__155202) : tailrecursion.hoplon.span.call(null,G__155201,G__155202));
})();
var G__154679 = " (";
var G__154680 = (function (){var G__155203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155204 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155203,G__155204) : tailrecursion.hoplon.span.call(null,G__155203,G__155204));
})();
var G__154681 = " ";
var G__154682 = (function (){var G__155205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155206 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155205,G__155206) : tailrecursion.hoplon.span.call(null,G__155205,G__155206));
})();
var G__154683 = " (";
var G__154684 = (function (){var G__155207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155208 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155207,G__155208) : tailrecursion.hoplon.span.call(null,G__155207,G__155208));
})();
var G__154685 = " ";
var G__154686 = (function (){var G__155209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155210 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155209,G__155210) : tailrecursion.hoplon.span.call(null,G__155209,G__155210));
})();
var G__154687 = " (";
var G__154688 = (function (){var G__155211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155212 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155211,G__155212) : tailrecursion.hoplon.span.call(null,G__155211,G__155212));
})();
var G__154689 = " ";
var G__154690 = (function (){var G__155213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155214 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155213,G__155214) : tailrecursion.hoplon.span.call(null,G__155213,G__155214));
})();
var G__154691 = " (";
var G__154692 = (function (){var G__155215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155215,G__155216) : tailrecursion.hoplon.span.call(null,G__155215,G__155216));
})();
var G__154693 = " ";
var G__154694 = (function (){var G__155217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155218 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155217,G__155218) : tailrecursion.hoplon.span.call(null,G__155217,G__155218));
})();
var G__154695 = " (";
var G__154696 = (function (){var G__155219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155220 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155219,G__155220) : tailrecursion.hoplon.span.call(null,G__155219,G__155220));
})();
var G__154697 = " ";
var G__154698 = (function (){var G__155221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155222 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155221,G__155222) : tailrecursion.hoplon.span.call(null,G__155221,G__155222));
})();
var G__154699 = " (";
var G__154700 = (function (){var G__155223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155224 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155223,G__155224) : tailrecursion.hoplon.span.call(null,G__155223,G__155224));
})();
var G__154701 = " ";
var G__154702 = (function (){var G__155225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155226 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155225,G__155226) : tailrecursion.hoplon.span.call(null,G__155225,G__155226));
})();
var G__154703 = " ";
var G__154704 = (function (){var G__155227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155228 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155227,G__155228) : tailrecursion.hoplon.span.call(null,G__155227,G__155228));
})();
var G__154705 = "))))))))\n(";
var G__154706 = (function (){var G__155229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155230 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155229,G__155230) : tailrecursion.hoplon.span.call(null,G__155229,G__155230));
})();
var G__154707 = " ";
var G__154708 = (function (){var G__155231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155232 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155231,G__155232) : tailrecursion.hoplon.span.call(null,G__155231,G__155232));
})();
var G__154709 = " (";
var G__154710 = (function (){var G__155233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155234 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155233,G__155234) : tailrecursion.hoplon.span.call(null,G__155233,G__155234));
})();
var G__154711 = " ";
var G__154712 = (function (){var G__155235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155236 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155235,G__155236) : tailrecursion.hoplon.span.call(null,G__155235,G__155236));
})();
var G__154713 = " (";
var G__154714 = (function (){var G__155237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155238 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155237,G__155238) : tailrecursion.hoplon.span.call(null,G__155237,G__155238));
})();
var G__154715 = " ";
var G__154716 = (function (){var G__155239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155240 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155239,G__155240) : tailrecursion.hoplon.span.call(null,G__155239,G__155240));
})();
var G__154717 = " (";
var G__154718 = (function (){var G__155241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155242 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155241,G__155242) : tailrecursion.hoplon.span.call(null,G__155241,G__155242));
})();
var G__154719 = " ";
var G__154720 = (function (){var G__155243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155244 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155243,G__155244) : tailrecursion.hoplon.span.call(null,G__155243,G__155244));
})();
var G__154721 = " (";
var G__154722 = (function (){var G__155245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155246 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155245,G__155246) : tailrecursion.hoplon.span.call(null,G__155245,G__155246));
})();
var G__154723 = " ";
var G__154724 = (function (){var G__155247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155248 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155247,G__155248) : tailrecursion.hoplon.span.call(null,G__155247,G__155248));
})();
var G__154725 = " (";
var G__154726 = (function (){var G__155249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155250 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155249,G__155250) : tailrecursion.hoplon.span.call(null,G__155249,G__155250));
})();
var G__154727 = " ";
var G__154728 = (function (){var G__155251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155252 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155251,G__155252) : tailrecursion.hoplon.span.call(null,G__155251,G__155252));
})();
var G__154729 = " (";
var G__154730 = (function (){var G__155253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155254 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155253,G__155254) : tailrecursion.hoplon.span.call(null,G__155253,G__155254));
})();
var G__154731 = " ";
var G__154732 = (function (){var G__155255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155256 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155255,G__155256) : tailrecursion.hoplon.span.call(null,G__155255,G__155256));
})();
var G__154733 = " (";
var G__154734 = (function (){var G__155257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155258 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155257,G__155258) : tailrecursion.hoplon.span.call(null,G__155257,G__155258));
})();
var G__154735 = (function (){var G__155259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155260 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155259,G__155260) : tailrecursion.hoplon.span.call(null,G__155259,G__155260));
})();
var G__154736 = " ";
var G__154737 = (function (){var G__155261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155262 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155261,G__155262) : tailrecursion.hoplon.span.call(null,G__155261,G__155262));
})();
var G__154738 = "))))))))\n(";
var G__154739 = (function (){var G__155263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155264 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155263,G__155264) : tailrecursion.hoplon.span.call(null,G__155263,G__155264));
})();
var G__154740 = " ";
var G__154741 = (function (){var G__155265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155266 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155265,G__155266) : tailrecursion.hoplon.span.call(null,G__155265,G__155266));
})();
var G__154742 = " (";
var G__154743 = (function (){var G__155267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155268 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155267,G__155268) : tailrecursion.hoplon.span.call(null,G__155267,G__155268));
})();
var G__154744 = " ";
var G__154745 = (function (){var G__155269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155270 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155269,G__155270) : tailrecursion.hoplon.span.call(null,G__155269,G__155270));
})();
var G__154746 = " (";
var G__154747 = (function (){var G__155271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155272 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155271,G__155272) : tailrecursion.hoplon.span.call(null,G__155271,G__155272));
})();
var G__154748 = " ";
var G__154749 = (function (){var G__155273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155274 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155273,G__155274) : tailrecursion.hoplon.span.call(null,G__155273,G__155274));
})();
var G__154750 = " (";
var G__154751 = (function (){var G__155275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155276 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155275,G__155276) : tailrecursion.hoplon.span.call(null,G__155275,G__155276));
})();
var G__154752 = " ";
var G__154753 = (function (){var G__155277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155278 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155277,G__155278) : tailrecursion.hoplon.span.call(null,G__155277,G__155278));
})();
var G__154754 = " (";
var G__154755 = (function (){var G__155279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155280 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155279,G__155280) : tailrecursion.hoplon.span.call(null,G__155279,G__155280));
})();
var G__154756 = " ";
var G__154757 = (function (){var G__155281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155282 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155281,G__155282) : tailrecursion.hoplon.span.call(null,G__155281,G__155282));
})();
var G__154758 = " (";
var G__154759 = (function (){var G__155283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155284 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155283,G__155284) : tailrecursion.hoplon.span.call(null,G__155283,G__155284));
})();
var G__154760 = " ";
var G__154761 = (function (){var G__155285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155286 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155285,G__155286) : tailrecursion.hoplon.span.call(null,G__155285,G__155286));
})();
var G__154762 = " (";
var G__154763 = (function (){var G__155287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155288 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155287,G__155288) : tailrecursion.hoplon.span.call(null,G__155287,G__155288));
})();
var G__154764 = " ";
var G__154765 = (function (){var G__155289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155290 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155289,G__155290) : tailrecursion.hoplon.span.call(null,G__155289,G__155290));
})();
var G__154766 = " ";
var G__154767 = (function (){var G__155291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155292 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155291,G__155292) : tailrecursion.hoplon.span.call(null,G__155291,G__155292));
})();
var G__154768 = ")))))))\n";
var G__154769 = (function (){var G__155293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__155294 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155293,G__155294) : tailrecursion.hoplon.span.call(null,G__155293,G__155294));
})();
var G__154770 = "\n";
var G__154771 = (function (){var G__155295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155296 = "1024";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155295,G__155296) : tailrecursion.hoplon.span.call(null,G__155295,G__155296));
})();
var G__154772 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514(G__154259,G__154260,G__154261,G__154262,G__154263,G__154264,G__154265,G__154266,G__154267,G__154268,G__154269,G__154270,G__154271,G__154272,G__154273,G__154274,G__154275,G__154276,G__154277,G__154278,G__154279,G__154280,G__154281,G__154282,G__154283,G__154284,G__154285,G__154286,G__154287,G__154288,G__154289,G__154290,G__154291,G__154292,G__154293,G__154294,G__154295,G__154296,G__154297,G__154298,G__154299,G__154300,G__154301,G__154302,G__154303,G__154304,G__154305,G__154306,G__154307,G__154308,G__154309,G__154310,G__154311,G__154312,G__154313,G__154314,G__154315,G__154316,G__154317,G__154318,G__154319,G__154320,G__154321,G__154322,G__154323,G__154324,G__154325,G__154326,G__154327,G__154328,G__154329,G__154330,G__154331,G__154332,G__154333,G__154334,G__154335,G__154336,G__154337,G__154338,G__154339,G__154340,G__154341,G__154342,G__154343,G__154344,G__154345,G__154346,G__154347,G__154348,G__154349,G__154350,G__154351,G__154352,G__154353,G__154354,G__154355,G__154356,G__154357,G__154358,G__154359,G__154360,G__154361,G__154362,G__154363,G__154364,G__154365,G__154366,G__154367,G__154368,G__154369,G__154370,G__154371,G__154372,G__154373,G__154374,G__154375,G__154376,G__154377,G__154378,G__154379,G__154380,G__154381,G__154382,G__154383,G__154384,G__154385,G__154386,G__154387,G__154388,G__154389,G__154390,G__154391,G__154392,G__154393,G__154394,G__154395,G__154396,G__154397,G__154398,G__154399,G__154400,G__154401,G__154402,G__154403,G__154404,G__154405,G__154406,G__154407,G__154408,G__154409,G__154410,G__154411,G__154412,G__154413,G__154414,G__154415,G__154416,G__154417,G__154418,G__154419,G__154420,G__154421,G__154422,G__154423,G__154424,G__154425,G__154426,G__154427,G__154428,G__154429,G__154430,G__154431,G__154432,G__154433,G__154434,G__154435,G__154436,G__154437,G__154438,G__154439,G__154440,G__154441,G__154442,G__154443,G__154444,G__154445,G__154446,G__154447,G__154448,G__154449,G__154450,G__154451,G__154452,G__154453,G__154454,G__154455,G__154456,G__154457,G__154458,G__154459,G__154460,G__154461,G__154462,G__154463,G__154464,G__154465,G__154466,G__154467,G__154468,G__154469,G__154470,G__154471,G__154472,G__154473,G__154474,G__154475,G__154476,G__154477,G__154478,G__154479,G__154480,G__154481,G__154482,G__154483,G__154484,G__154485,G__154486,G__154487,G__154488,G__154489,G__154490,G__154491,G__154492,G__154493,G__154494,G__154495,G__154496,G__154497,G__154498,G__154499,G__154500,G__154501,G__154502,G__154503,G__154504,G__154505,G__154506,G__154507,G__154508,G__154509,G__154510,G__154511,G__154512,G__154513,G__154514,G__154515,G__154516,G__154517,G__154518,G__154519,G__154520,G__154521,G__154522,G__154523,G__154524,G__154525,G__154526,G__154527,G__154528,G__154529,G__154530,G__154531,G__154532,G__154533,G__154534,G__154535,G__154536,G__154537,G__154538,G__154539,G__154540,G__154541,G__154542,G__154543,G__154544,G__154545,G__154546,G__154547,G__154548,G__154549,G__154550,G__154551,G__154552,G__154553,G__154554,G__154555,G__154556,G__154557,G__154558,G__154559,G__154560,G__154561,G__154562,G__154563,G__154564,G__154565,G__154566,G__154567,G__154568,G__154569,G__154570,G__154571,G__154572,G__154573,G__154574,G__154575,G__154576,G__154577,G__154578,G__154579,G__154580,G__154581,G__154582,G__154583,G__154584,G__154585,G__154586,G__154587,G__154588,G__154589,G__154590,G__154591,G__154592,G__154593,G__154594,G__154595,G__154596,G__154597,G__154598,G__154599,G__154600,G__154601,G__154602,G__154603,G__154604,G__154605,G__154606,G__154607,G__154608,G__154609,G__154610,G__154611,G__154612,G__154613,G__154614,G__154615,G__154616,G__154617,G__154618,G__154619,G__154620,G__154621,G__154622,G__154623,G__154624,G__154625,G__154626,G__154627,G__154628,G__154629,G__154630,G__154631,G__154632,G__154633,G__154634,G__154635,G__154636,G__154637,G__154638,G__154639,G__154640,G__154641,G__154642,G__154643,G__154644,G__154645,G__154646,G__154647,G__154648,G__154649,G__154650,G__154651,G__154652,G__154653,G__154654,G__154655,G__154656,G__154657,G__154658,G__154659,G__154660,G__154661,G__154662,G__154663,G__154664,G__154665,G__154666,G__154667,G__154668,G__154669,G__154670,G__154671,G__154672,G__154673,G__154674,G__154675,G__154676,G__154677,G__154678,G__154679,G__154680,G__154681,G__154682,G__154683,G__154684,G__154685,G__154686,G__154687,G__154688,G__154689,G__154690,G__154691,G__154692,G__154693,G__154694,G__154695,G__154696,G__154697,G__154698,G__154699,G__154700,G__154701,G__154702,G__154703,G__154704,G__154705,G__154706,G__154707,G__154708,G__154709,G__154710,G__154711,G__154712,G__154713,G__154714,G__154715,G__154716,G__154717,G__154718,G__154719,G__154720,G__154721,G__154722,G__154723,G__154724,G__154725,G__154726,G__154727,G__154728,G__154729,G__154730,G__154731,G__154732,G__154733,G__154734,G__154735,G__154736,G__154737,G__154738,G__154739,G__154740,G__154741,G__154742,G__154743,G__154744,G__154745,G__154746,G__154747,G__154748,G__154749,G__154750,G__154751,G__154752,G__154753,G__154754,G__154755,G__154756,G__154757,G__154758,G__154759,G__154760,G__154761,G__154762,G__154763,G__154764,G__154765,G__154766,G__154767,G__154768,G__154769,G__154770,G__154771,G__154772) : tailrecursion.hoplon.pre.call(null,G__154259,G__154260,G__154261,G__154262,G__154263,G__154264,G__154265,G__154266,G__154267,G__154268,G__154269,G__154270,G__154271,G__154272,G__154273,G__154274,G__154275,G__154276,G__154277,G__154278,G__154279,G__154280,G__154281,G__154282,G__154283,G__154284,G__154285,G__154286,G__154287,G__154288,G__154289,G__154290,G__154291,G__154292,G__154293,G__154294,G__154295,G__154296,G__154297,G__154298,G__154299,G__154300,G__154301,G__154302,G__154303,G__154304,G__154305,G__154306,G__154307,G__154308,G__154309,G__154310,G__154311,G__154312,G__154313,G__154314,G__154315,G__154316,G__154317,G__154318,G__154319,G__154320,G__154321,G__154322,G__154323,G__154324,G__154325,G__154326,G__154327,G__154328,G__154329,G__154330,G__154331,G__154332,G__154333,G__154334,G__154335,G__154336,G__154337,G__154338,G__154339,G__154340,G__154341,G__154342,G__154343,G__154344,G__154345,G__154346,G__154347,G__154348,G__154349,G__154350,G__154351,G__154352,G__154353,G__154354,G__154355,G__154356,G__154357,G__154358,G__154359,G__154360,G__154361,G__154362,G__154363,G__154364,G__154365,G__154366,G__154367,G__154368,G__154369,G__154370,G__154371,G__154372,G__154373,G__154374,G__154375,G__154376,G__154377,G__154378,G__154379,G__154380,G__154381,G__154382,G__154383,G__154384,G__154385,G__154386,G__154387,G__154388,G__154389,G__154390,G__154391,G__154392,G__154393,G__154394,G__154395,G__154396,G__154397,G__154398,G__154399,G__154400,G__154401,G__154402,G__154403,G__154404,G__154405,G__154406,G__154407,G__154408,G__154409,G__154410,G__154411,G__154412,G__154413,G__154414,G__154415,G__154416,G__154417,G__154418,G__154419,G__154420,G__154421,G__154422,G__154423,G__154424,G__154425,G__154426,G__154427,G__154428,G__154429,G__154430,G__154431,G__154432,G__154433,G__154434,G__154435,G__154436,G__154437,G__154438,G__154439,G__154440,G__154441,G__154442,G__154443,G__154444,G__154445,G__154446,G__154447,G__154448,G__154449,G__154450,G__154451,G__154452,G__154453,G__154454,G__154455,G__154456,G__154457,G__154458,G__154459,G__154460,G__154461,G__154462,G__154463,G__154464,G__154465,G__154466,G__154467,G__154468,G__154469,G__154470,G__154471,G__154472,G__154473,G__154474,G__154475,G__154476,G__154477,G__154478,G__154479,G__154480,G__154481,G__154482,G__154483,G__154484,G__154485,G__154486,G__154487,G__154488,G__154489,G__154490,G__154491,G__154492,G__154493,G__154494,G__154495,G__154496,G__154497,G__154498,G__154499,G__154500,G__154501,G__154502,G__154503,G__154504,G__154505,G__154506,G__154507,G__154508,G__154509,G__154510,G__154511,G__154512,G__154513,G__154514,G__154515,G__154516,G__154517,G__154518,G__154519,G__154520,G__154521,G__154522,G__154523,G__154524,G__154525,G__154526,G__154527,G__154528,G__154529,G__154530,G__154531,G__154532,G__154533,G__154534,G__154535,G__154536,G__154537,G__154538,G__154539,G__154540,G__154541,G__154542,G__154543,G__154544,G__154545,G__154546,G__154547,G__154548,G__154549,G__154550,G__154551,G__154552,G__154553,G__154554,G__154555,G__154556,G__154557,G__154558,G__154559,G__154560,G__154561,G__154562,G__154563,G__154564,G__154565,G__154566,G__154567,G__154568,G__154569,G__154570,G__154571,G__154572,G__154573,G__154574,G__154575,G__154576,G__154577,G__154578,G__154579,G__154580,G__154581,G__154582,G__154583,G__154584,G__154585,G__154586,G__154587,G__154588,G__154589,G__154590,G__154591,G__154592,G__154593,G__154594,G__154595,G__154596,G__154597,G__154598,G__154599,G__154600,G__154601,G__154602,G__154603,G__154604,G__154605,G__154606,G__154607,G__154608,G__154609,G__154610,G__154611,G__154612,G__154613,G__154614,G__154615,G__154616,G__154617,G__154618,G__154619,G__154620,G__154621,G__154622,G__154623,G__154624,G__154625,G__154626,G__154627,G__154628,G__154629,G__154630,G__154631,G__154632,G__154633,G__154634,G__154635,G__154636,G__154637,G__154638,G__154639,G__154640,G__154641,G__154642,G__154643,G__154644,G__154645,G__154646,G__154647,G__154648,G__154649,G__154650,G__154651,G__154652,G__154653,G__154654,G__154655,G__154656,G__154657,G__154658,G__154659,G__154660,G__154661,G__154662,G__154663,G__154664,G__154665,G__154666,G__154667,G__154668,G__154669,G__154670,G__154671,G__154672,G__154673,G__154674,G__154675,G__154676,G__154677,G__154678,G__154679,G__154680,G__154681,G__154682,G__154683,G__154684,G__154685,G__154686,G__154687,G__154688,G__154689,G__154690,G__154691,G__154692,G__154693,G__154694,G__154695,G__154696,G__154697,G__154698,G__154699,G__154700,G__154701,G__154702,G__154703,G__154704,G__154705,G__154706,G__154707,G__154708,G__154709,G__154710,G__154711,G__154712,G__154713,G__154714,G__154715,G__154716,G__154717,G__154718,G__154719,G__154720,G__154721,G__154722,G__154723,G__154724,G__154725,G__154726,G__154727,G__154728,G__154729,G__154730,G__154731,G__154732,G__154733,G__154734,G__154735,G__154736,G__154737,G__154738,G__154739,G__154740,G__154741,G__154742,G__154743,G__154744,G__154745,G__154746,G__154747,G__154748,G__154749,G__154750,G__154751,G__154752,G__154753,G__154754,G__154755,G__154756,G__154757,G__154758,G__154759,G__154760,G__154761,G__154762,G__154763,G__154764,G__154765,G__154766,G__154767,G__154768,G__154769,G__154770,G__154771,G__154772));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__154257,G__154258) : tailrecursion.hoplon.div.call(null,G__154257,G__154258));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__154256) : tailrecursion.hoplon.div.call(null,G__154256));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_154255;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_154254;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_154253;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_154252;
}})()], 0)),"",(function (){var _STAR_references_STAR_155297 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155298 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_155299 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155300 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__155301 = (function (){var G__155302 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__155303 = (function (){var G__155304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__155305 = "(";
var G__155306 = (function (){var G__155312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155313 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155312,G__155313) : tailrecursion.hoplon.span.call(null,G__155312,G__155313));
})();
var G__155307 = " ";
var G__155308 = (function (){var G__155314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155315 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155314,G__155315) : tailrecursion.hoplon.span.call(null,G__155314,G__155315));
})();
var G__155309 = " ";
var G__155310 = (function (){var G__155316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155317 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155316,G__155317) : tailrecursion.hoplon.span.call(null,G__155316,G__155317));
})();
var G__155311 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__155304,G__155305,G__155306,G__155307,G__155308,G__155309,G__155310,G__155311) : tailrecursion.hoplon.pre.call(null,G__155304,G__155305,G__155306,G__155307,G__155308,G__155309,G__155310,G__155311));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__155302,G__155303) : tailrecursion.hoplon.div.call(null,G__155302,G__155303));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__155301) : tailrecursion.hoplon.div.call(null,G__155301));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155300;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155299;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155298;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155297;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_155318 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155319 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_155320 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155321 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__155322 = (function (){var G__155323 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__155324 = (function (){var G__155325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__155326 = "(";
var G__155327 = (function (){var G__155647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155648 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155647,G__155648) : tailrecursion.hoplon.span.call(null,G__155647,G__155648));
})();
var G__155328 = " ";
var G__155329 = (function (){var G__155649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155650 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155649,G__155650) : tailrecursion.hoplon.span.call(null,G__155649,G__155650));
})();
var G__155330 = " ";
var G__155331 = (function (){var G__155651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155652 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155651,G__155652) : tailrecursion.hoplon.span.call(null,G__155651,G__155652));
})();
var G__155332 = ")\n(";
var G__155333 = (function (){var G__155653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155654 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155653,G__155654) : tailrecursion.hoplon.span.call(null,G__155653,G__155654));
})();
var G__155334 = " (";
var G__155335 = (function (){var G__155655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155656 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155655,G__155656) : tailrecursion.hoplon.span.call(null,G__155655,G__155656));
})();
var G__155336 = (function (){var G__155657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155658 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155657,G__155658) : tailrecursion.hoplon.span.call(null,G__155657,G__155658));
})();
var G__155337 = " ";
var G__155338 = (function (){var G__155659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155660 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155659,G__155660) : tailrecursion.hoplon.span.call(null,G__155659,G__155660));
})();
var G__155339 = ") (";
var G__155340 = (function (){var G__155661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155662 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155661,G__155662) : tailrecursion.hoplon.span.call(null,G__155661,G__155662));
})();
var G__155341 = " ";
var G__155342 = (function (){var G__155663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155664 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155663,G__155664) : tailrecursion.hoplon.span.call(null,G__155663,G__155664));
})();
var G__155343 = " (";
var G__155344 = (function (){var G__155665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155666 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155665,G__155666) : tailrecursion.hoplon.span.call(null,G__155665,G__155666));
})();
var G__155345 = (function (){var G__155667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155668 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155667,G__155668) : tailrecursion.hoplon.span.call(null,G__155667,G__155668));
})();
var G__155346 = " ";
var G__155347 = (function (){var G__155669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155670 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155669,G__155670) : tailrecursion.hoplon.span.call(null,G__155669,G__155670));
})();
var G__155348 = ")))\n(";
var G__155349 = (function (){var G__155671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155672 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155671,G__155672) : tailrecursion.hoplon.span.call(null,G__155671,G__155672));
})();
var G__155350 = " ";
var G__155351 = (function (){var G__155673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155674 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155673,G__155674) : tailrecursion.hoplon.span.call(null,G__155673,G__155674));
})();
var G__155352 = " (";
var G__155353 = (function (){var G__155675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155676 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155675,G__155676) : tailrecursion.hoplon.span.call(null,G__155675,G__155676));
})();
var G__155354 = " ";
var G__155355 = (function (){var G__155677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155678 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155677,G__155678) : tailrecursion.hoplon.span.call(null,G__155677,G__155678));
})();
var G__155356 = " ";
var G__155357 = (function (){var G__155679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155680 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155679,G__155680) : tailrecursion.hoplon.span.call(null,G__155679,G__155680));
})();
var G__155358 = "))\n(";
var G__155359 = (function (){var G__155681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155682 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155681,G__155682) : tailrecursion.hoplon.span.call(null,G__155681,G__155682));
})();
var G__155360 = " ";
var G__155361 = (function (){var G__155683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155684 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155683,G__155684) : tailrecursion.hoplon.span.call(null,G__155683,G__155684));
})();
var G__155362 = " (";
var G__155363 = (function (){var G__155685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155686 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155685,G__155686) : tailrecursion.hoplon.span.call(null,G__155685,G__155686));
})();
var G__155364 = " (";
var G__155365 = (function (){var G__155687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155688 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155687,G__155688) : tailrecursion.hoplon.span.call(null,G__155687,G__155688));
})();
var G__155366 = (function (){var G__155689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155690 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155689,G__155690) : tailrecursion.hoplon.span.call(null,G__155689,G__155690));
})();
var G__155367 = " ";
var G__155368 = (function (){var G__155691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155692 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155691,G__155692) : tailrecursion.hoplon.span.call(null,G__155691,G__155692));
})();
var G__155369 = ") (";
var G__155370 = (function (){var G__155693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155694 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155693,G__155694) : tailrecursion.hoplon.span.call(null,G__155693,G__155694));
})();
var G__155371 = " ";
var G__155372 = (function (){var G__155695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155696 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155695,G__155696) : tailrecursion.hoplon.span.call(null,G__155695,G__155696));
})();
var G__155373 = " (";
var G__155374 = (function (){var G__155697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155698 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155697,G__155698) : tailrecursion.hoplon.span.call(null,G__155697,G__155698));
})();
var G__155375 = (function (){var G__155699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155700 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155699,G__155700) : tailrecursion.hoplon.span.call(null,G__155699,G__155700));
})();
var G__155376 = " ";
var G__155377 = (function (){var G__155701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155702 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155701,G__155702) : tailrecursion.hoplon.span.call(null,G__155701,G__155702));
})();
var G__155378 = "))))\n(";
var G__155379 = (function (){var G__155703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155704 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155703,G__155704) : tailrecursion.hoplon.span.call(null,G__155703,G__155704));
})();
var G__155380 = " ";
var G__155381 = (function (){var G__155705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155706 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155705,G__155706) : tailrecursion.hoplon.span.call(null,G__155705,G__155706));
})();
var G__155382 = " (";
var G__155383 = (function (){var G__155707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155708 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155707,G__155708) : tailrecursion.hoplon.span.call(null,G__155707,G__155708));
})();
var G__155384 = " ";
var G__155385 = (function (){var G__155709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155710 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155709,G__155710) : tailrecursion.hoplon.span.call(null,G__155709,G__155710));
})();
var G__155386 = " (";
var G__155387 = (function (){var G__155711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155712 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155711,G__155712) : tailrecursion.hoplon.span.call(null,G__155711,G__155712));
})();
var G__155388 = " ";
var G__155389 = (function (){var G__155713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155714 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155713,G__155714) : tailrecursion.hoplon.span.call(null,G__155713,G__155714));
})();
var G__155390 = " ";
var G__155391 = (function (){var G__155715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155716 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155715,G__155716) : tailrecursion.hoplon.span.call(null,G__155715,G__155716));
})();
var G__155392 = ")))\n(";
var G__155393 = (function (){var G__155717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155718 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155717,G__155718) : tailrecursion.hoplon.span.call(null,G__155717,G__155718));
})();
var G__155394 = " ";
var G__155395 = (function (){var G__155719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155720 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155719,G__155720) : tailrecursion.hoplon.span.call(null,G__155719,G__155720));
})();
var G__155396 = " (";
var G__155397 = (function (){var G__155721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155722 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155721,G__155722) : tailrecursion.hoplon.span.call(null,G__155721,G__155722));
})();
var G__155398 = " ";
var G__155399 = (function (){var G__155723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155724 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155723,G__155724) : tailrecursion.hoplon.span.call(null,G__155723,G__155724));
})();
var G__155400 = " (";
var G__155401 = (function (){var G__155725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155726 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155725,G__155726) : tailrecursion.hoplon.span.call(null,G__155725,G__155726));
})();
var G__155402 = " (";
var G__155403 = (function (){var G__155727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155728 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155727,G__155728) : tailrecursion.hoplon.span.call(null,G__155727,G__155728));
})();
var G__155404 = (function (){var G__155729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155730 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155729,G__155730) : tailrecursion.hoplon.span.call(null,G__155729,G__155730));
})();
var G__155405 = " ";
var G__155406 = (function (){var G__155731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155732 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155731,G__155732) : tailrecursion.hoplon.span.call(null,G__155731,G__155732));
})();
var G__155407 = ") (";
var G__155408 = (function (){var G__155733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155734 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155733,G__155734) : tailrecursion.hoplon.span.call(null,G__155733,G__155734));
})();
var G__155409 = " ";
var G__155410 = (function (){var G__155735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155736 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155735,G__155736) : tailrecursion.hoplon.span.call(null,G__155735,G__155736));
})();
var G__155411 = " (";
var G__155412 = (function (){var G__155737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155738 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155737,G__155738) : tailrecursion.hoplon.span.call(null,G__155737,G__155738));
})();
var G__155413 = (function (){var G__155739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155740 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155739,G__155740) : tailrecursion.hoplon.span.call(null,G__155739,G__155740));
})();
var G__155414 = " ";
var G__155415 = (function (){var G__155741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155742 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155741,G__155742) : tailrecursion.hoplon.span.call(null,G__155741,G__155742));
})();
var G__155416 = ")))))\n(";
var G__155417 = (function (){var G__155743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155744 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155743,G__155744) : tailrecursion.hoplon.span.call(null,G__155743,G__155744));
})();
var G__155418 = " ";
var G__155419 = (function (){var G__155745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155746 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155745,G__155746) : tailrecursion.hoplon.span.call(null,G__155745,G__155746));
})();
var G__155420 = " (";
var G__155421 = (function (){var G__155747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155748 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155747,G__155748) : tailrecursion.hoplon.span.call(null,G__155747,G__155748));
})();
var G__155422 = " ";
var G__155423 = (function (){var G__155749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155750 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155749,G__155750) : tailrecursion.hoplon.span.call(null,G__155749,G__155750));
})();
var G__155424 = " (";
var G__155425 = (function (){var G__155751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155752 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155751,G__155752) : tailrecursion.hoplon.span.call(null,G__155751,G__155752));
})();
var G__155426 = " ";
var G__155427 = (function (){var G__155753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155754 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155753,G__155754) : tailrecursion.hoplon.span.call(null,G__155753,G__155754));
})();
var G__155428 = " (";
var G__155429 = (function (){var G__155755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155756 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155755,G__155756) : tailrecursion.hoplon.span.call(null,G__155755,G__155756));
})();
var G__155430 = " ";
var G__155431 = (function (){var G__155757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155758 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155757,G__155758) : tailrecursion.hoplon.span.call(null,G__155757,G__155758));
})();
var G__155432 = " ";
var G__155433 = (function (){var G__155759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155760 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155759,G__155760) : tailrecursion.hoplon.span.call(null,G__155759,G__155760));
})();
var G__155434 = "))))\n(";
var G__155435 = (function (){var G__155761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155762 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155761,G__155762) : tailrecursion.hoplon.span.call(null,G__155761,G__155762));
})();
var G__155436 = " ";
var G__155437 = (function (){var G__155763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155764 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155763,G__155764) : tailrecursion.hoplon.span.call(null,G__155763,G__155764));
})();
var G__155438 = " (";
var G__155439 = (function (){var G__155765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155766 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155765,G__155766) : tailrecursion.hoplon.span.call(null,G__155765,G__155766));
})();
var G__155440 = " ";
var G__155441 = (function (){var G__155767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155768 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155767,G__155768) : tailrecursion.hoplon.span.call(null,G__155767,G__155768));
})();
var G__155442 = " (";
var G__155443 = (function (){var G__155769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155770 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155769,G__155770) : tailrecursion.hoplon.span.call(null,G__155769,G__155770));
})();
var G__155444 = " ";
var G__155445 = (function (){var G__155771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155772 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155771,G__155772) : tailrecursion.hoplon.span.call(null,G__155771,G__155772));
})();
var G__155446 = " ";
var G__155447 = (function (){var G__155773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155774 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155773,G__155774) : tailrecursion.hoplon.span.call(null,G__155773,G__155774));
})();
var G__155448 = ")))\n(";
var G__155449 = (function (){var G__155775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155776 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155775,G__155776) : tailrecursion.hoplon.span.call(null,G__155775,G__155776));
})();
var G__155450 = " ";
var G__155451 = (function (){var G__155777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155778 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155777,G__155778) : tailrecursion.hoplon.span.call(null,G__155777,G__155778));
})();
var G__155452 = " (";
var G__155453 = (function (){var G__155779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155780 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155779,G__155780) : tailrecursion.hoplon.span.call(null,G__155779,G__155780));
})();
var G__155454 = " ";
var G__155455 = (function (){var G__155781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155782 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155781,G__155782) : tailrecursion.hoplon.span.call(null,G__155781,G__155782));
})();
var G__155456 = " (";
var G__155457 = (function (){var G__155783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155784 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155783,G__155784) : tailrecursion.hoplon.span.call(null,G__155783,G__155784));
})();
var G__155458 = " (";
var G__155459 = (function (){var G__155785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155786 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155785,G__155786) : tailrecursion.hoplon.span.call(null,G__155785,G__155786));
})();
var G__155460 = (function (){var G__155787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155788 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155787,G__155788) : tailrecursion.hoplon.span.call(null,G__155787,G__155788));
})();
var G__155461 = " ";
var G__155462 = (function (){var G__155789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155790 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155789,G__155790) : tailrecursion.hoplon.span.call(null,G__155789,G__155790));
})();
var G__155463 = ") (";
var G__155464 = (function (){var G__155791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155792 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155791,G__155792) : tailrecursion.hoplon.span.call(null,G__155791,G__155792));
})();
var G__155465 = " ";
var G__155466 = (function (){var G__155793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155794 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155793,G__155794) : tailrecursion.hoplon.span.call(null,G__155793,G__155794));
})();
var G__155467 = " (";
var G__155468 = (function (){var G__155795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__155796 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155795,G__155796) : tailrecursion.hoplon.span.call(null,G__155795,G__155796));
})();
var G__155469 = (function (){var G__155797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155798 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155797,G__155798) : tailrecursion.hoplon.span.call(null,G__155797,G__155798));
})();
var G__155470 = " ";
var G__155471 = (function (){var G__155799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155800 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155799,G__155800) : tailrecursion.hoplon.span.call(null,G__155799,G__155800));
})();
var G__155472 = ")))))\n(";
var G__155473 = (function (){var G__155801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155802 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155801,G__155802) : tailrecursion.hoplon.span.call(null,G__155801,G__155802));
})();
var G__155474 = " ";
var G__155475 = (function (){var G__155803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155804 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155803,G__155804) : tailrecursion.hoplon.span.call(null,G__155803,G__155804));
})();
var G__155476 = " (";
var G__155477 = (function (){var G__155805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155806 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155805,G__155806) : tailrecursion.hoplon.span.call(null,G__155805,G__155806));
})();
var G__155478 = " ";
var G__155479 = (function (){var G__155807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155808 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155807,G__155808) : tailrecursion.hoplon.span.call(null,G__155807,G__155808));
})();
var G__155480 = " (";
var G__155481 = (function (){var G__155809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155810 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155809,G__155810) : tailrecursion.hoplon.span.call(null,G__155809,G__155810));
})();
var G__155482 = " ";
var G__155483 = (function (){var G__155811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155812 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155811,G__155812) : tailrecursion.hoplon.span.call(null,G__155811,G__155812));
})();
var G__155484 = " (";
var G__155485 = (function (){var G__155813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155814 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155813,G__155814) : tailrecursion.hoplon.span.call(null,G__155813,G__155814));
})();
var G__155486 = " ";
var G__155487 = (function (){var G__155815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155816 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155815,G__155816) : tailrecursion.hoplon.span.call(null,G__155815,G__155816));
})();
var G__155488 = " ";
var G__155489 = (function (){var G__155817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155818 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155817,G__155818) : tailrecursion.hoplon.span.call(null,G__155817,G__155818));
})();
var G__155490 = "))))\n(";
var G__155491 = (function (){var G__155819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155820 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155819,G__155820) : tailrecursion.hoplon.span.call(null,G__155819,G__155820));
})();
var G__155492 = " ";
var G__155493 = (function (){var G__155821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155822 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155821,G__155822) : tailrecursion.hoplon.span.call(null,G__155821,G__155822));
})();
var G__155494 = " (";
var G__155495 = (function (){var G__155823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155824 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155823,G__155824) : tailrecursion.hoplon.span.call(null,G__155823,G__155824));
})();
var G__155496 = " ";
var G__155497 = (function (){var G__155825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155826 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155825,G__155826) : tailrecursion.hoplon.span.call(null,G__155825,G__155826));
})();
var G__155498 = " (";
var G__155499 = (function (){var G__155827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155828 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155827,G__155828) : tailrecursion.hoplon.span.call(null,G__155827,G__155828));
})();
var G__155500 = " ";
var G__155501 = (function (){var G__155829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155830 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155829,G__155830) : tailrecursion.hoplon.span.call(null,G__155829,G__155830));
})();
var G__155502 = " ";
var G__155503 = (function (){var G__155831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155832 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155831,G__155832) : tailrecursion.hoplon.span.call(null,G__155831,G__155832));
})();
var G__155504 = ")))\n(";
var G__155505 = (function (){var G__155833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155834 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155833,G__155834) : tailrecursion.hoplon.span.call(null,G__155833,G__155834));
})();
var G__155506 = " ";
var G__155507 = (function (){var G__155835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155836 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155835,G__155836) : tailrecursion.hoplon.span.call(null,G__155835,G__155836));
})();
var G__155508 = " (";
var G__155509 = (function (){var G__155837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155838 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155837,G__155838) : tailrecursion.hoplon.span.call(null,G__155837,G__155838));
})();
var G__155510 = " ";
var G__155511 = (function (){var G__155839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155840 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155839,G__155840) : tailrecursion.hoplon.span.call(null,G__155839,G__155840));
})();
var G__155512 = " ";
var G__155513 = (function (){var G__155841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155842 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155841,G__155842) : tailrecursion.hoplon.span.call(null,G__155841,G__155842));
})();
var G__155514 = "))\n(";
var G__155515 = (function (){var G__155843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155844 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155843,G__155844) : tailrecursion.hoplon.span.call(null,G__155843,G__155844));
})();
var G__155516 = " ";
var G__155517 = (function (){var G__155845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155846 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155845,G__155846) : tailrecursion.hoplon.span.call(null,G__155845,G__155846));
})();
var G__155518 = " (";
var G__155519 = (function (){var G__155847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155848 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155847,G__155848) : tailrecursion.hoplon.span.call(null,G__155847,G__155848));
})();
var G__155520 = " ";
var G__155521 = (function (){var G__155849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155850 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155849,G__155850) : tailrecursion.hoplon.span.call(null,G__155849,G__155850));
})();
var G__155522 = " (";
var G__155523 = (function (){var G__155851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155852 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155851,G__155852) : tailrecursion.hoplon.span.call(null,G__155851,G__155852));
})();
var G__155524 = " ";
var G__155525 = (function (){var G__155853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155854 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155853,G__155854) : tailrecursion.hoplon.span.call(null,G__155853,G__155854));
})();
var G__155526 = " ";
var G__155527 = (function (){var G__155855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155856 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155855,G__155856) : tailrecursion.hoplon.span.call(null,G__155855,G__155856));
})();
var G__155528 = ")))\n(";
var G__155529 = (function (){var G__155857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155858 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155857,G__155858) : tailrecursion.hoplon.span.call(null,G__155857,G__155858));
})();
var G__155530 = " ";
var G__155531 = (function (){var G__155859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155860 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155859,G__155860) : tailrecursion.hoplon.span.call(null,G__155859,G__155860));
})();
var G__155532 = " (";
var G__155533 = (function (){var G__155861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155862 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155861,G__155862) : tailrecursion.hoplon.span.call(null,G__155861,G__155862));
})();
var G__155534 = " ";
var G__155535 = (function (){var G__155863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155864 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155863,G__155864) : tailrecursion.hoplon.span.call(null,G__155863,G__155864));
})();
var G__155536 = " (";
var G__155537 = (function (){var G__155865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155866 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155865,G__155866) : tailrecursion.hoplon.span.call(null,G__155865,G__155866));
})();
var G__155538 = " ";
var G__155539 = (function (){var G__155867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155868 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155867,G__155868) : tailrecursion.hoplon.span.call(null,G__155867,G__155868));
})();
var G__155540 = " (";
var G__155541 = (function (){var G__155869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155870 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155869,G__155870) : tailrecursion.hoplon.span.call(null,G__155869,G__155870));
})();
var G__155542 = " ";
var G__155543 = (function (){var G__155871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155872 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155871,G__155872) : tailrecursion.hoplon.span.call(null,G__155871,G__155872));
})();
var G__155544 = " ";
var G__155545 = (function (){var G__155873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155874 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155873,G__155874) : tailrecursion.hoplon.span.call(null,G__155873,G__155874));
})();
var G__155546 = "))))\n(";
var G__155547 = (function (){var G__155875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155876 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155875,G__155876) : tailrecursion.hoplon.span.call(null,G__155875,G__155876));
})();
var G__155548 = " ";
var G__155549 = (function (){var G__155877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155878 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155877,G__155878) : tailrecursion.hoplon.span.call(null,G__155877,G__155878));
})();
var G__155550 = " (";
var G__155551 = (function (){var G__155879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155880 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155879,G__155880) : tailrecursion.hoplon.span.call(null,G__155879,G__155880));
})();
var G__155552 = " ";
var G__155553 = (function (){var G__155881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155882 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155881,G__155882) : tailrecursion.hoplon.span.call(null,G__155881,G__155882));
})();
var G__155554 = " (";
var G__155555 = (function (){var G__155883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155884 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155883,G__155884) : tailrecursion.hoplon.span.call(null,G__155883,G__155884));
})();
var G__155556 = " ";
var G__155557 = (function (){var G__155885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155886 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155885,G__155886) : tailrecursion.hoplon.span.call(null,G__155885,G__155886));
})();
var G__155558 = " (";
var G__155559 = (function (){var G__155887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155888 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155887,G__155888) : tailrecursion.hoplon.span.call(null,G__155887,G__155888));
})();
var G__155560 = " ";
var G__155561 = (function (){var G__155889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155890 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155889,G__155890) : tailrecursion.hoplon.span.call(null,G__155889,G__155890));
})();
var G__155562 = " (";
var G__155563 = (function (){var G__155891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155892 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155891,G__155892) : tailrecursion.hoplon.span.call(null,G__155891,G__155892));
})();
var G__155564 = " ";
var G__155565 = (function (){var G__155893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155894 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155893,G__155894) : tailrecursion.hoplon.span.call(null,G__155893,G__155894));
})();
var G__155566 = " ";
var G__155567 = (function (){var G__155895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155896 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155895,G__155896) : tailrecursion.hoplon.span.call(null,G__155895,G__155896));
})();
var G__155568 = ")))))\n(";
var G__155569 = (function (){var G__155897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155898 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155897,G__155898) : tailrecursion.hoplon.span.call(null,G__155897,G__155898));
})();
var G__155570 = " ";
var G__155571 = (function (){var G__155899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155900 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155899,G__155900) : tailrecursion.hoplon.span.call(null,G__155899,G__155900));
})();
var G__155572 = " (";
var G__155573 = (function (){var G__155901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155902 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155901,G__155902) : tailrecursion.hoplon.span.call(null,G__155901,G__155902));
})();
var G__155574 = " ";
var G__155575 = (function (){var G__155903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155904 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155903,G__155904) : tailrecursion.hoplon.span.call(null,G__155903,G__155904));
})();
var G__155576 = " (";
var G__155577 = (function (){var G__155905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155906 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155905,G__155906) : tailrecursion.hoplon.span.call(null,G__155905,G__155906));
})();
var G__155578 = " ";
var G__155579 = (function (){var G__155907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155908 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155907,G__155908) : tailrecursion.hoplon.span.call(null,G__155907,G__155908));
})();
var G__155580 = " (";
var G__155581 = (function (){var G__155909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155910 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155909,G__155910) : tailrecursion.hoplon.span.call(null,G__155909,G__155910));
})();
var G__155582 = " ";
var G__155583 = (function (){var G__155911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155912 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155911,G__155912) : tailrecursion.hoplon.span.call(null,G__155911,G__155912));
})();
var G__155584 = " ";
var G__155585 = (function (){var G__155913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155914 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155913,G__155914) : tailrecursion.hoplon.span.call(null,G__155913,G__155914));
})();
var G__155586 = "))))\n(";
var G__155587 = (function (){var G__155915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155916 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155915,G__155916) : tailrecursion.hoplon.span.call(null,G__155915,G__155916));
})();
var G__155588 = " ";
var G__155589 = (function (){var G__155917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155918 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155917,G__155918) : tailrecursion.hoplon.span.call(null,G__155917,G__155918));
})();
var G__155590 = " (";
var G__155591 = (function (){var G__155919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155920 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155919,G__155920) : tailrecursion.hoplon.span.call(null,G__155919,G__155920));
})();
var G__155592 = " ";
var G__155593 = (function (){var G__155921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155922 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155921,G__155922) : tailrecursion.hoplon.span.call(null,G__155921,G__155922));
})();
var G__155594 = " (";
var G__155595 = (function (){var G__155923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155924 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155923,G__155924) : tailrecursion.hoplon.span.call(null,G__155923,G__155924));
})();
var G__155596 = " ";
var G__155597 = (function (){var G__155925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155926 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155925,G__155926) : tailrecursion.hoplon.span.call(null,G__155925,G__155926));
})();
var G__155598 = " ";
var G__155599 = (function (){var G__155927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155928 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155927,G__155928) : tailrecursion.hoplon.span.call(null,G__155927,G__155928));
})();
var G__155600 = ")))\n(";
var G__155601 = (function (){var G__155929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155930 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155929,G__155930) : tailrecursion.hoplon.span.call(null,G__155929,G__155930));
})();
var G__155602 = " ";
var G__155603 = (function (){var G__155931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155932 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155931,G__155932) : tailrecursion.hoplon.span.call(null,G__155931,G__155932));
})();
var G__155604 = " (";
var G__155605 = (function (){var G__155933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155934 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155933,G__155934) : tailrecursion.hoplon.span.call(null,G__155933,G__155934));
})();
var G__155606 = " ";
var G__155607 = (function (){var G__155935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155936 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155935,G__155936) : tailrecursion.hoplon.span.call(null,G__155935,G__155936));
})();
var G__155608 = " ";
var G__155609 = (function (){var G__155937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155938 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155937,G__155938) : tailrecursion.hoplon.span.call(null,G__155937,G__155938));
})();
var G__155610 = "))\n(";
var G__155611 = (function (){var G__155939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155940 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155939,G__155940) : tailrecursion.hoplon.span.call(null,G__155939,G__155940));
})();
var G__155612 = " ";
var G__155613 = (function (){var G__155941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155942 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155941,G__155942) : tailrecursion.hoplon.span.call(null,G__155941,G__155942));
})();
var G__155614 = " ";
var G__155615 = (function (){var G__155943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155944 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155943,G__155944) : tailrecursion.hoplon.span.call(null,G__155943,G__155944));
})();
var G__155616 = ")\n(";
var G__155617 = (function (){var G__155945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155946 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155945,G__155946) : tailrecursion.hoplon.span.call(null,G__155945,G__155946));
})();
var G__155618 = " ";
var G__155619 = (function (){var G__155947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155948 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155947,G__155948) : tailrecursion.hoplon.span.call(null,G__155947,G__155948));
})();
var G__155620 = " (";
var G__155621 = (function (){var G__155949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155950 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155949,G__155950) : tailrecursion.hoplon.span.call(null,G__155949,G__155950));
})();
var G__155622 = " ";
var G__155623 = (function (){var G__155951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155952 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155951,G__155952) : tailrecursion.hoplon.span.call(null,G__155951,G__155952));
})();
var G__155624 = " ";
var G__155625 = (function (){var G__155953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155954 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155953,G__155954) : tailrecursion.hoplon.span.call(null,G__155953,G__155954));
})();
var G__155626 = "))\n(";
var G__155627 = (function (){var G__155955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155956 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155955,G__155956) : tailrecursion.hoplon.span.call(null,G__155955,G__155956));
})();
var G__155628 = " ";
var G__155629 = (function (){var G__155957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155958 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155957,G__155958) : tailrecursion.hoplon.span.call(null,G__155957,G__155958));
})();
var G__155630 = " (";
var G__155631 = (function (){var G__155959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155960 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155959,G__155960) : tailrecursion.hoplon.span.call(null,G__155959,G__155960));
})();
var G__155632 = " ";
var G__155633 = (function (){var G__155961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155962 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155961,G__155962) : tailrecursion.hoplon.span.call(null,G__155961,G__155962));
})();
var G__155634 = " (";
var G__155635 = (function (){var G__155963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155964 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155963,G__155964) : tailrecursion.hoplon.span.call(null,G__155963,G__155964));
})();
var G__155636 = " ";
var G__155637 = (function (){var G__155965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155966 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155965,G__155966) : tailrecursion.hoplon.span.call(null,G__155965,G__155966));
})();
var G__155638 = " ";
var G__155639 = (function (){var G__155967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155968 = "14";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155967,G__155968) : tailrecursion.hoplon.span.call(null,G__155967,G__155968));
})();
var G__155640 = ")))\n";
var G__155641 = (function (){var G__155969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__155970 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155969,G__155970) : tailrecursion.hoplon.span.call(null,G__155969,G__155970));
})();
var G__155642 = "\n";
var G__155643 = (function (){var G__155971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155972 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155971,G__155972) : tailrecursion.hoplon.span.call(null,G__155971,G__155972));
})();
var G__155644 = ",";
var G__155645 = (function (){var G__155973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155974 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155973,G__155974) : tailrecursion.hoplon.span.call(null,G__155973,G__155974));
})();
var G__155646 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322(G__155325,G__155326,G__155327,G__155328,G__155329,G__155330,G__155331,G__155332,G__155333,G__155334,G__155335,G__155336,G__155337,G__155338,G__155339,G__155340,G__155341,G__155342,G__155343,G__155344,G__155345,G__155346,G__155347,G__155348,G__155349,G__155350,G__155351,G__155352,G__155353,G__155354,G__155355,G__155356,G__155357,G__155358,G__155359,G__155360,G__155361,G__155362,G__155363,G__155364,G__155365,G__155366,G__155367,G__155368,G__155369,G__155370,G__155371,G__155372,G__155373,G__155374,G__155375,G__155376,G__155377,G__155378,G__155379,G__155380,G__155381,G__155382,G__155383,G__155384,G__155385,G__155386,G__155387,G__155388,G__155389,G__155390,G__155391,G__155392,G__155393,G__155394,G__155395,G__155396,G__155397,G__155398,G__155399,G__155400,G__155401,G__155402,G__155403,G__155404,G__155405,G__155406,G__155407,G__155408,G__155409,G__155410,G__155411,G__155412,G__155413,G__155414,G__155415,G__155416,G__155417,G__155418,G__155419,G__155420,G__155421,G__155422,G__155423,G__155424,G__155425,G__155426,G__155427,G__155428,G__155429,G__155430,G__155431,G__155432,G__155433,G__155434,G__155435,G__155436,G__155437,G__155438,G__155439,G__155440,G__155441,G__155442,G__155443,G__155444,G__155445,G__155446,G__155447,G__155448,G__155449,G__155450,G__155451,G__155452,G__155453,G__155454,G__155455,G__155456,G__155457,G__155458,G__155459,G__155460,G__155461,G__155462,G__155463,G__155464,G__155465,G__155466,G__155467,G__155468,G__155469,G__155470,G__155471,G__155472,G__155473,G__155474,G__155475,G__155476,G__155477,G__155478,G__155479,G__155480,G__155481,G__155482,G__155483,G__155484,G__155485,G__155486,G__155487,G__155488,G__155489,G__155490,G__155491,G__155492,G__155493,G__155494,G__155495,G__155496,G__155497,G__155498,G__155499,G__155500,G__155501,G__155502,G__155503,G__155504,G__155505,G__155506,G__155507,G__155508,G__155509,G__155510,G__155511,G__155512,G__155513,G__155514,G__155515,G__155516,G__155517,G__155518,G__155519,G__155520,G__155521,G__155522,G__155523,G__155524,G__155525,G__155526,G__155527,G__155528,G__155529,G__155530,G__155531,G__155532,G__155533,G__155534,G__155535,G__155536,G__155537,G__155538,G__155539,G__155540,G__155541,G__155542,G__155543,G__155544,G__155545,G__155546,G__155547,G__155548,G__155549,G__155550,G__155551,G__155552,G__155553,G__155554,G__155555,G__155556,G__155557,G__155558,G__155559,G__155560,G__155561,G__155562,G__155563,G__155564,G__155565,G__155566,G__155567,G__155568,G__155569,G__155570,G__155571,G__155572,G__155573,G__155574,G__155575,G__155576,G__155577,G__155578,G__155579,G__155580,G__155581,G__155582,G__155583,G__155584,G__155585,G__155586,G__155587,G__155588,G__155589,G__155590,G__155591,G__155592,G__155593,G__155594,G__155595,G__155596,G__155597,G__155598,G__155599,G__155600,G__155601,G__155602,G__155603,G__155604,G__155605,G__155606,G__155607,G__155608,G__155609,G__155610,G__155611,G__155612,G__155613,G__155614,G__155615,G__155616,G__155617,G__155618,G__155619,G__155620,G__155621,G__155622,G__155623,G__155624,G__155625,G__155626,G__155627,G__155628,G__155629,G__155630,G__155631,G__155632,G__155633,G__155634,G__155635,G__155636,G__155637,G__155638,G__155639,G__155640,G__155641,G__155642,G__155643,G__155644,G__155645,G__155646) : tailrecursion.hoplon.pre.call(null,G__155325,G__155326,G__155327,G__155328,G__155329,G__155330,G__155331,G__155332,G__155333,G__155334,G__155335,G__155336,G__155337,G__155338,G__155339,G__155340,G__155341,G__155342,G__155343,G__155344,G__155345,G__155346,G__155347,G__155348,G__155349,G__155350,G__155351,G__155352,G__155353,G__155354,G__155355,G__155356,G__155357,G__155358,G__155359,G__155360,G__155361,G__155362,G__155363,G__155364,G__155365,G__155366,G__155367,G__155368,G__155369,G__155370,G__155371,G__155372,G__155373,G__155374,G__155375,G__155376,G__155377,G__155378,G__155379,G__155380,G__155381,G__155382,G__155383,G__155384,G__155385,G__155386,G__155387,G__155388,G__155389,G__155390,G__155391,G__155392,G__155393,G__155394,G__155395,G__155396,G__155397,G__155398,G__155399,G__155400,G__155401,G__155402,G__155403,G__155404,G__155405,G__155406,G__155407,G__155408,G__155409,G__155410,G__155411,G__155412,G__155413,G__155414,G__155415,G__155416,G__155417,G__155418,G__155419,G__155420,G__155421,G__155422,G__155423,G__155424,G__155425,G__155426,G__155427,G__155428,G__155429,G__155430,G__155431,G__155432,G__155433,G__155434,G__155435,G__155436,G__155437,G__155438,G__155439,G__155440,G__155441,G__155442,G__155443,G__155444,G__155445,G__155446,G__155447,G__155448,G__155449,G__155450,G__155451,G__155452,G__155453,G__155454,G__155455,G__155456,G__155457,G__155458,G__155459,G__155460,G__155461,G__155462,G__155463,G__155464,G__155465,G__155466,G__155467,G__155468,G__155469,G__155470,G__155471,G__155472,G__155473,G__155474,G__155475,G__155476,G__155477,G__155478,G__155479,G__155480,G__155481,G__155482,G__155483,G__155484,G__155485,G__155486,G__155487,G__155488,G__155489,G__155490,G__155491,G__155492,G__155493,G__155494,G__155495,G__155496,G__155497,G__155498,G__155499,G__155500,G__155501,G__155502,G__155503,G__155504,G__155505,G__155506,G__155507,G__155508,G__155509,G__155510,G__155511,G__155512,G__155513,G__155514,G__155515,G__155516,G__155517,G__155518,G__155519,G__155520,G__155521,G__155522,G__155523,G__155524,G__155525,G__155526,G__155527,G__155528,G__155529,G__155530,G__155531,G__155532,G__155533,G__155534,G__155535,G__155536,G__155537,G__155538,G__155539,G__155540,G__155541,G__155542,G__155543,G__155544,G__155545,G__155546,G__155547,G__155548,G__155549,G__155550,G__155551,G__155552,G__155553,G__155554,G__155555,G__155556,G__155557,G__155558,G__155559,G__155560,G__155561,G__155562,G__155563,G__155564,G__155565,G__155566,G__155567,G__155568,G__155569,G__155570,G__155571,G__155572,G__155573,G__155574,G__155575,G__155576,G__155577,G__155578,G__155579,G__155580,G__155581,G__155582,G__155583,G__155584,G__155585,G__155586,G__155587,G__155588,G__155589,G__155590,G__155591,G__155592,G__155593,G__155594,G__155595,G__155596,G__155597,G__155598,G__155599,G__155600,G__155601,G__155602,G__155603,G__155604,G__155605,G__155606,G__155607,G__155608,G__155609,G__155610,G__155611,G__155612,G__155613,G__155614,G__155615,G__155616,G__155617,G__155618,G__155619,G__155620,G__155621,G__155622,G__155623,G__155624,G__155625,G__155626,G__155627,G__155628,G__155629,G__155630,G__155631,G__155632,G__155633,G__155634,G__155635,G__155636,G__155637,G__155638,G__155639,G__155640,G__155641,G__155642,G__155643,G__155644,G__155645,G__155646));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__155323,G__155324) : tailrecursion.hoplon.div.call(null,G__155323,G__155324));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__155322) : tailrecursion.hoplon.div.call(null,G__155322));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155321;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155320;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155319;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155318;
}})()], 0)),(function (){var _STAR_references_STAR_155975 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155976 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_155977 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155978 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__155979 = (function (){var G__155980 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__155981 = (function (){var G__155982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__155983 = "(";
var G__155984 = (function (){var G__155990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__155991 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155990,G__155991) : tailrecursion.hoplon.span.call(null,G__155990,G__155991));
})();
var G__155985 = " ";
var G__155986 = (function (){var G__155992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155993 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155992,G__155993) : tailrecursion.hoplon.span.call(null,G__155992,G__155993));
})();
var G__155987 = " ";
var G__155988 = (function (){var G__155994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__155995 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__155994,G__155995) : tailrecursion.hoplon.span.call(null,G__155994,G__155995));
})();
var G__155989 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__155982,G__155983,G__155984,G__155985,G__155986,G__155987,G__155988,G__155989) : tailrecursion.hoplon.pre.call(null,G__155982,G__155983,G__155984,G__155985,G__155986,G__155987,G__155988,G__155989));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__155980,G__155981) : tailrecursion.hoplon.div.call(null,G__155980,G__155981));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__155979) : tailrecursion.hoplon.div.call(null,G__155979));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155978;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155977;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155976;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155975;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_155996 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155997 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_155998 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_155999 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156000 = (function (){var G__156001 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156002 = (function (){var G__156003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156004 = "(";
var G__156005 = (function (){var G__156305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156306 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156305,G__156306) : tailrecursion.hoplon.span.call(null,G__156305,G__156306));
})();
var G__156006 = " ";
var G__156007 = (function (){var G__156307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156308 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156307,G__156308) : tailrecursion.hoplon.span.call(null,G__156307,G__156308));
})();
var G__156008 = " ";
var G__156009 = (function (){var G__156309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156310 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156309,G__156310) : tailrecursion.hoplon.span.call(null,G__156309,G__156310));
})();
var G__156010 = ")\n(";
var G__156011 = (function (){var G__156311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156312 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156311,G__156312) : tailrecursion.hoplon.span.call(null,G__156311,G__156312));
})();
var G__156012 = " ";
var G__156013 = (function (){var G__156313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156314 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156313,G__156314) : tailrecursion.hoplon.span.call(null,G__156313,G__156314));
})();
var G__156014 = " (";
var G__156015 = (function (){var G__156315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156316 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156315,G__156316) : tailrecursion.hoplon.span.call(null,G__156315,G__156316));
})();
var G__156016 = " ";
var G__156017 = (function (){var G__156317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156318 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156317,G__156318) : tailrecursion.hoplon.span.call(null,G__156317,G__156318));
})();
var G__156018 = " ";
var G__156019 = (function (){var G__156319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156320 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156319,G__156320) : tailrecursion.hoplon.span.call(null,G__156319,G__156320));
})();
var G__156020 = "))\n(";
var G__156021 = (function (){var G__156321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156322 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156321,G__156322) : tailrecursion.hoplon.span.call(null,G__156321,G__156322));
})();
var G__156022 = " ";
var G__156023 = (function (){var G__156323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156324 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156323,G__156324) : tailrecursion.hoplon.span.call(null,G__156323,G__156324));
})();
var G__156024 = " (";
var G__156025 = (function (){var G__156325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156326 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156325,G__156326) : tailrecursion.hoplon.span.call(null,G__156325,G__156326));
})();
var G__156026 = " ";
var G__156027 = (function (){var G__156327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156328 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156327,G__156328) : tailrecursion.hoplon.span.call(null,G__156327,G__156328));
})();
var G__156028 = " (";
var G__156029 = (function (){var G__156329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156330 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156329,G__156330) : tailrecursion.hoplon.span.call(null,G__156329,G__156330));
})();
var G__156030 = " ";
var G__156031 = (function (){var G__156331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156332 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156331,G__156332) : tailrecursion.hoplon.span.call(null,G__156331,G__156332));
})();
var G__156032 = " ";
var G__156033 = (function (){var G__156333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156334 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156333,G__156334) : tailrecursion.hoplon.span.call(null,G__156333,G__156334));
})();
var G__156034 = ")))\n(";
var G__156035 = (function (){var G__156335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156336 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156335,G__156336) : tailrecursion.hoplon.span.call(null,G__156335,G__156336));
})();
var G__156036 = " ";
var G__156037 = (function (){var G__156337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156338 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156337,G__156338) : tailrecursion.hoplon.span.call(null,G__156337,G__156338));
})();
var G__156038 = " (";
var G__156039 = (function (){var G__156339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156340 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156339,G__156340) : tailrecursion.hoplon.span.call(null,G__156339,G__156340));
})();
var G__156040 = " ";
var G__156041 = (function (){var G__156341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156342 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156341,G__156342) : tailrecursion.hoplon.span.call(null,G__156341,G__156342));
})();
var G__156042 = " ";
var G__156043 = (function (){var G__156343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156344 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156343,G__156344) : tailrecursion.hoplon.span.call(null,G__156343,G__156344));
})();
var G__156044 = "))\n(";
var G__156045 = (function (){var G__156345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156346 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156345,G__156346) : tailrecursion.hoplon.span.call(null,G__156345,G__156346));
})();
var G__156046 = " ";
var G__156047 = (function (){var G__156347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156348 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156347,G__156348) : tailrecursion.hoplon.span.call(null,G__156347,G__156348));
})();
var G__156048 = " (";
var G__156049 = (function (){var G__156349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156350 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156349,G__156350) : tailrecursion.hoplon.span.call(null,G__156349,G__156350));
})();
var G__156050 = " ";
var G__156051 = (function (){var G__156351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156352 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156351,G__156352) : tailrecursion.hoplon.span.call(null,G__156351,G__156352));
})();
var G__156052 = " (";
var G__156053 = (function (){var G__156353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156354 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156353,G__156354) : tailrecursion.hoplon.span.call(null,G__156353,G__156354));
})();
var G__156054 = " ";
var G__156055 = (function (){var G__156355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156356 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156355,G__156356) : tailrecursion.hoplon.span.call(null,G__156355,G__156356));
})();
var G__156056 = " ";
var G__156057 = (function (){var G__156357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156358 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156357,G__156358) : tailrecursion.hoplon.span.call(null,G__156357,G__156358));
})();
var G__156058 = ")))\n(";
var G__156059 = (function (){var G__156359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156360 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156359,G__156360) : tailrecursion.hoplon.span.call(null,G__156359,G__156360));
})();
var G__156060 = " ";
var G__156061 = (function (){var G__156361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156362 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156361,G__156362) : tailrecursion.hoplon.span.call(null,G__156361,G__156362));
})();
var G__156062 = " (";
var G__156063 = (function (){var G__156363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156364 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156363,G__156364) : tailrecursion.hoplon.span.call(null,G__156363,G__156364));
})();
var G__156064 = " ";
var G__156065 = (function (){var G__156365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156366 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156365,G__156366) : tailrecursion.hoplon.span.call(null,G__156365,G__156366));
})();
var G__156066 = " ";
var G__156067 = (function (){var G__156367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156368 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156367,G__156368) : tailrecursion.hoplon.span.call(null,G__156367,G__156368));
})();
var G__156068 = "))\n(";
var G__156069 = (function (){var G__156369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156370 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156369,G__156370) : tailrecursion.hoplon.span.call(null,G__156369,G__156370));
})();
var G__156070 = " ";
var G__156071 = (function (){var G__156371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156372 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156371,G__156372) : tailrecursion.hoplon.span.call(null,G__156371,G__156372));
})();
var G__156072 = " (";
var G__156073 = (function (){var G__156373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156374 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156373,G__156374) : tailrecursion.hoplon.span.call(null,G__156373,G__156374));
})();
var G__156074 = " ";
var G__156075 = (function (){var G__156375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156376 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156375,G__156376) : tailrecursion.hoplon.span.call(null,G__156375,G__156376));
})();
var G__156076 = " (";
var G__156077 = (function (){var G__156377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156378 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156377,G__156378) : tailrecursion.hoplon.span.call(null,G__156377,G__156378));
})();
var G__156078 = " ";
var G__156079 = (function (){var G__156379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156380 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156379,G__156380) : tailrecursion.hoplon.span.call(null,G__156379,G__156380));
})();
var G__156080 = " ";
var G__156081 = (function (){var G__156381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156382 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156381,G__156382) : tailrecursion.hoplon.span.call(null,G__156381,G__156382));
})();
var G__156082 = ")))\n(";
var G__156083 = (function (){var G__156383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156384 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156383,G__156384) : tailrecursion.hoplon.span.call(null,G__156383,G__156384));
})();
var G__156084 = " ";
var G__156085 = (function (){var G__156385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156386 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156385,G__156386) : tailrecursion.hoplon.span.call(null,G__156385,G__156386));
})();
var G__156086 = " (";
var G__156087 = (function (){var G__156387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156388 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156387,G__156388) : tailrecursion.hoplon.span.call(null,G__156387,G__156388));
})();
var G__156088 = " ";
var G__156089 = (function (){var G__156389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156390 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156389,G__156390) : tailrecursion.hoplon.span.call(null,G__156389,G__156390));
})();
var G__156090 = " ";
var G__156091 = (function (){var G__156391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156392 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156391,G__156392) : tailrecursion.hoplon.span.call(null,G__156391,G__156392));
})();
var G__156092 = "))\n(";
var G__156093 = (function (){var G__156393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156394 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156393,G__156394) : tailrecursion.hoplon.span.call(null,G__156393,G__156394));
})();
var G__156094 = " ";
var G__156095 = (function (){var G__156395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156396 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156395,G__156396) : tailrecursion.hoplon.span.call(null,G__156395,G__156396));
})();
var G__156096 = " ";
var G__156097 = (function (){var G__156397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156398 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156397,G__156398) : tailrecursion.hoplon.span.call(null,G__156397,G__156398));
})();
var G__156098 = ")\n(";
var G__156099 = (function (){var G__156399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156400 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156399,G__156400) : tailrecursion.hoplon.span.call(null,G__156399,G__156400));
})();
var G__156100 = " ";
var G__156101 = (function (){var G__156401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156402 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156401,G__156402) : tailrecursion.hoplon.span.call(null,G__156401,G__156402));
})();
var G__156102 = " (";
var G__156103 = (function (){var G__156403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156404 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156403,G__156404) : tailrecursion.hoplon.span.call(null,G__156403,G__156404));
})();
var G__156104 = " ";
var G__156105 = (function (){var G__156405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156406 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156405,G__156406) : tailrecursion.hoplon.span.call(null,G__156405,G__156406));
})();
var G__156106 = " ";
var G__156107 = (function (){var G__156407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156408 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156407,G__156408) : tailrecursion.hoplon.span.call(null,G__156407,G__156408));
})();
var G__156108 = "))\n(";
var G__156109 = (function (){var G__156409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156410 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156409,G__156410) : tailrecursion.hoplon.span.call(null,G__156409,G__156410));
})();
var G__156110 = " ";
var G__156111 = (function (){var G__156411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156412 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156411,G__156412) : tailrecursion.hoplon.span.call(null,G__156411,G__156412));
})();
var G__156112 = " (";
var G__156113 = (function (){var G__156413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156414 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156413,G__156414) : tailrecursion.hoplon.span.call(null,G__156413,G__156414));
})();
var G__156114 = " ";
var G__156115 = (function (){var G__156415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156416 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156415,G__156416) : tailrecursion.hoplon.span.call(null,G__156415,G__156416));
})();
var G__156116 = " (";
var G__156117 = (function (){var G__156417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156418 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156417,G__156418) : tailrecursion.hoplon.span.call(null,G__156417,G__156418));
})();
var G__156118 = " ";
var G__156119 = (function (){var G__156419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156420 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156419,G__156420) : tailrecursion.hoplon.span.call(null,G__156419,G__156420));
})();
var G__156120 = " ";
var G__156121 = (function (){var G__156421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156422 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156421,G__156422) : tailrecursion.hoplon.span.call(null,G__156421,G__156422));
})();
var G__156122 = ")))\n(";
var G__156123 = (function (){var G__156423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156424 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156423,G__156424) : tailrecursion.hoplon.span.call(null,G__156423,G__156424));
})();
var G__156124 = " ";
var G__156125 = (function (){var G__156425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156426 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156425,G__156426) : tailrecursion.hoplon.span.call(null,G__156425,G__156426));
})();
var G__156126 = " (";
var G__156127 = (function (){var G__156427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156428 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156427,G__156428) : tailrecursion.hoplon.span.call(null,G__156427,G__156428));
})();
var G__156128 = " ";
var G__156129 = (function (){var G__156429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156430 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156429,G__156430) : tailrecursion.hoplon.span.call(null,G__156429,G__156430));
})();
var G__156130 = " (";
var G__156131 = (function (){var G__156431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156432 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156431,G__156432) : tailrecursion.hoplon.span.call(null,G__156431,G__156432));
})();
var G__156132 = " ";
var G__156133 = (function (){var G__156433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156434 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156433,G__156434) : tailrecursion.hoplon.span.call(null,G__156433,G__156434));
})();
var G__156134 = " (";
var G__156135 = (function (){var G__156435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156436 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156435,G__156436) : tailrecursion.hoplon.span.call(null,G__156435,G__156436));
})();
var G__156136 = " ";
var G__156137 = (function (){var G__156437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156438 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156437,G__156438) : tailrecursion.hoplon.span.call(null,G__156437,G__156438));
})();
var G__156138 = " ";
var G__156139 = (function (){var G__156439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156440 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156439,G__156440) : tailrecursion.hoplon.span.call(null,G__156439,G__156440));
})();
var G__156140 = "))))\n(";
var G__156141 = (function (){var G__156441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156442 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156441,G__156442) : tailrecursion.hoplon.span.call(null,G__156441,G__156442));
})();
var G__156142 = " ";
var G__156143 = (function (){var G__156443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156444 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156443,G__156444) : tailrecursion.hoplon.span.call(null,G__156443,G__156444));
})();
var G__156144 = " (";
var G__156145 = (function (){var G__156445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156446 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156445,G__156446) : tailrecursion.hoplon.span.call(null,G__156445,G__156446));
})();
var G__156146 = " ";
var G__156147 = (function (){var G__156447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156448 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156447,G__156448) : tailrecursion.hoplon.span.call(null,G__156447,G__156448));
})();
var G__156148 = " (";
var G__156149 = (function (){var G__156449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156450 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156449,G__156450) : tailrecursion.hoplon.span.call(null,G__156449,G__156450));
})();
var G__156150 = " ";
var G__156151 = (function (){var G__156451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156452 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156451,G__156452) : tailrecursion.hoplon.span.call(null,G__156451,G__156452));
})();
var G__156152 = " ";
var G__156153 = (function (){var G__156453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156454 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156453,G__156454) : tailrecursion.hoplon.span.call(null,G__156453,G__156454));
})();
var G__156154 = ")))\n(";
var G__156155 = (function (){var G__156455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156456 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156455,G__156456) : tailrecursion.hoplon.span.call(null,G__156455,G__156456));
})();
var G__156156 = " ";
var G__156157 = (function (){var G__156457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156458 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156457,G__156458) : tailrecursion.hoplon.span.call(null,G__156457,G__156458));
})();
var G__156158 = " (";
var G__156159 = (function (){var G__156459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156460 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156459,G__156460) : tailrecursion.hoplon.span.call(null,G__156459,G__156460));
})();
var G__156160 = " ";
var G__156161 = (function (){var G__156461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156462 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156461,G__156462) : tailrecursion.hoplon.span.call(null,G__156461,G__156462));
})();
var G__156162 = " (";
var G__156163 = (function (){var G__156463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156464 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156463,G__156464) : tailrecursion.hoplon.span.call(null,G__156463,G__156464));
})();
var G__156164 = " ";
var G__156165 = (function (){var G__156465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156466 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156465,G__156466) : tailrecursion.hoplon.span.call(null,G__156465,G__156466));
})();
var G__156166 = " (";
var G__156167 = (function (){var G__156467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156468 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156467,G__156468) : tailrecursion.hoplon.span.call(null,G__156467,G__156468));
})();
var G__156168 = " ";
var G__156169 = (function (){var G__156469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156470 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156469,G__156470) : tailrecursion.hoplon.span.call(null,G__156469,G__156470));
})();
var G__156170 = " ";
var G__156171 = (function (){var G__156471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156472 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156471,G__156472) : tailrecursion.hoplon.span.call(null,G__156471,G__156472));
})();
var G__156172 = "))))\n(";
var G__156173 = (function (){var G__156473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156474 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156473,G__156474) : tailrecursion.hoplon.span.call(null,G__156473,G__156474));
})();
var G__156174 = " ";
var G__156175 = (function (){var G__156475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156476 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156475,G__156476) : tailrecursion.hoplon.span.call(null,G__156475,G__156476));
})();
var G__156176 = " (";
var G__156177 = (function (){var G__156477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156478 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156477,G__156478) : tailrecursion.hoplon.span.call(null,G__156477,G__156478));
})();
var G__156178 = " ";
var G__156179 = (function (){var G__156479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156480 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156479,G__156480) : tailrecursion.hoplon.span.call(null,G__156479,G__156480));
})();
var G__156180 = " (";
var G__156181 = (function (){var G__156481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156482 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156481,G__156482) : tailrecursion.hoplon.span.call(null,G__156481,G__156482));
})();
var G__156182 = " ";
var G__156183 = (function (){var G__156483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156484 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156483,G__156484) : tailrecursion.hoplon.span.call(null,G__156483,G__156484));
})();
var G__156184 = " ";
var G__156185 = (function (){var G__156485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156486 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156485,G__156486) : tailrecursion.hoplon.span.call(null,G__156485,G__156486));
})();
var G__156186 = ")))\n(";
var G__156187 = (function (){var G__156487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156488 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156487,G__156488) : tailrecursion.hoplon.span.call(null,G__156487,G__156488));
})();
var G__156188 = " ";
var G__156189 = (function (){var G__156489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156490 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156489,G__156490) : tailrecursion.hoplon.span.call(null,G__156489,G__156490));
})();
var G__156190 = " (";
var G__156191 = (function (){var G__156491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156492 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156491,G__156492) : tailrecursion.hoplon.span.call(null,G__156491,G__156492));
})();
var G__156192 = " ";
var G__156193 = (function (){var G__156493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156494 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156493,G__156494) : tailrecursion.hoplon.span.call(null,G__156493,G__156494));
})();
var G__156194 = " ";
var G__156195 = (function (){var G__156495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156496 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156495,G__156496) : tailrecursion.hoplon.span.call(null,G__156495,G__156496));
})();
var G__156196 = "))\n(";
var G__156197 = (function (){var G__156497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156498 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156497,G__156498) : tailrecursion.hoplon.span.call(null,G__156497,G__156498));
})();
var G__156198 = " ";
var G__156199 = (function (){var G__156499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156500 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156499,G__156500) : tailrecursion.hoplon.span.call(null,G__156499,G__156500));
})();
var G__156200 = " (";
var G__156201 = (function (){var G__156501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156502 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156501,G__156502) : tailrecursion.hoplon.span.call(null,G__156501,G__156502));
})();
var G__156202 = " ";
var G__156203 = (function (){var G__156503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156504 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156503,G__156504) : tailrecursion.hoplon.span.call(null,G__156503,G__156504));
})();
var G__156204 = " (";
var G__156205 = (function (){var G__156505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156506 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156505,G__156506) : tailrecursion.hoplon.span.call(null,G__156505,G__156506));
})();
var G__156206 = " ";
var G__156207 = (function (){var G__156507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156508 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156507,G__156508) : tailrecursion.hoplon.span.call(null,G__156507,G__156508));
})();
var G__156208 = " ";
var G__156209 = (function (){var G__156509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156510 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156509,G__156510) : tailrecursion.hoplon.span.call(null,G__156509,G__156510));
})();
var G__156210 = ")))\n(";
var G__156211 = (function (){var G__156511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156512 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156511,G__156512) : tailrecursion.hoplon.span.call(null,G__156511,G__156512));
})();
var G__156212 = " ";
var G__156213 = (function (){var G__156513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156514 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156513,G__156514) : tailrecursion.hoplon.span.call(null,G__156513,G__156514));
})();
var G__156214 = " (";
var G__156215 = (function (){var G__156515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156516 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156515,G__156516) : tailrecursion.hoplon.span.call(null,G__156515,G__156516));
})();
var G__156216 = " ";
var G__156217 = (function (){var G__156517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156518 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156517,G__156518) : tailrecursion.hoplon.span.call(null,G__156517,G__156518));
})();
var G__156218 = " (";
var G__156219 = (function (){var G__156519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156520 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156519,G__156520) : tailrecursion.hoplon.span.call(null,G__156519,G__156520));
})();
var G__156220 = " ";
var G__156221 = (function (){var G__156521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156522 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156521,G__156522) : tailrecursion.hoplon.span.call(null,G__156521,G__156522));
})();
var G__156222 = " (";
var G__156223 = (function (){var G__156523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156524 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156523,G__156524) : tailrecursion.hoplon.span.call(null,G__156523,G__156524));
})();
var G__156224 = " ";
var G__156225 = (function (){var G__156525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156526 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156525,G__156526) : tailrecursion.hoplon.span.call(null,G__156525,G__156526));
})();
var G__156226 = " ";
var G__156227 = (function (){var G__156527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156528 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156527,G__156528) : tailrecursion.hoplon.span.call(null,G__156527,G__156528));
})();
var G__156228 = "))))\n(";
var G__156229 = (function (){var G__156529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156530 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156529,G__156530) : tailrecursion.hoplon.span.call(null,G__156529,G__156530));
})();
var G__156230 = " ";
var G__156231 = (function (){var G__156531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156532 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156531,G__156532) : tailrecursion.hoplon.span.call(null,G__156531,G__156532));
})();
var G__156232 = " (";
var G__156233 = (function (){var G__156533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156534 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156533,G__156534) : tailrecursion.hoplon.span.call(null,G__156533,G__156534));
})();
var G__156234 = " ";
var G__156235 = (function (){var G__156535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156536 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156535,G__156536) : tailrecursion.hoplon.span.call(null,G__156535,G__156536));
})();
var G__156236 = " (";
var G__156237 = (function (){var G__156537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156538 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156537,G__156538) : tailrecursion.hoplon.span.call(null,G__156537,G__156538));
})();
var G__156238 = " ";
var G__156239 = (function (){var G__156539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156540 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156539,G__156540) : tailrecursion.hoplon.span.call(null,G__156539,G__156540));
})();
var G__156240 = " (";
var G__156241 = (function (){var G__156541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156542 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156541,G__156542) : tailrecursion.hoplon.span.call(null,G__156541,G__156542));
})();
var G__156242 = " ";
var G__156243 = (function (){var G__156543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156544 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156543,G__156544) : tailrecursion.hoplon.span.call(null,G__156543,G__156544));
})();
var G__156244 = " (";
var G__156245 = (function (){var G__156545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156546 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156545,G__156546) : tailrecursion.hoplon.span.call(null,G__156545,G__156546));
})();
var G__156246 = " ";
var G__156247 = (function (){var G__156547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156548 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156547,G__156548) : tailrecursion.hoplon.span.call(null,G__156547,G__156548));
})();
var G__156248 = " ";
var G__156249 = (function (){var G__156549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156550 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156549,G__156550) : tailrecursion.hoplon.span.call(null,G__156549,G__156550));
})();
var G__156250 = ")))))\n(";
var G__156251 = (function (){var G__156551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156552 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156551,G__156552) : tailrecursion.hoplon.span.call(null,G__156551,G__156552));
})();
var G__156252 = " ";
var G__156253 = (function (){var G__156553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156554 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156553,G__156554) : tailrecursion.hoplon.span.call(null,G__156553,G__156554));
})();
var G__156254 = " (";
var G__156255 = (function (){var G__156555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156556 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156555,G__156556) : tailrecursion.hoplon.span.call(null,G__156555,G__156556));
})();
var G__156256 = " ";
var G__156257 = (function (){var G__156557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156558 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156557,G__156558) : tailrecursion.hoplon.span.call(null,G__156557,G__156558));
})();
var G__156258 = " (";
var G__156259 = (function (){var G__156559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156560 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156559,G__156560) : tailrecursion.hoplon.span.call(null,G__156559,G__156560));
})();
var G__156260 = " ";
var G__156261 = (function (){var G__156561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156562 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156561,G__156562) : tailrecursion.hoplon.span.call(null,G__156561,G__156562));
})();
var G__156262 = " (";
var G__156263 = (function (){var G__156563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156564 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156563,G__156564) : tailrecursion.hoplon.span.call(null,G__156563,G__156564));
})();
var G__156264 = " ";
var G__156265 = (function (){var G__156565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156566 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156565,G__156566) : tailrecursion.hoplon.span.call(null,G__156565,G__156566));
})();
var G__156266 = " ";
var G__156267 = (function (){var G__156567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156568 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156567,G__156568) : tailrecursion.hoplon.span.call(null,G__156567,G__156568));
})();
var G__156268 = "))))\n(";
var G__156269 = (function (){var G__156569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156570 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156569,G__156570) : tailrecursion.hoplon.span.call(null,G__156569,G__156570));
})();
var G__156270 = " ";
var G__156271 = (function (){var G__156571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156572 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156571,G__156572) : tailrecursion.hoplon.span.call(null,G__156571,G__156572));
})();
var G__156272 = " (";
var G__156273 = (function (){var G__156573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156574 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156573,G__156574) : tailrecursion.hoplon.span.call(null,G__156573,G__156574));
})();
var G__156274 = " ";
var G__156275 = (function (){var G__156575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156576 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156575,G__156576) : tailrecursion.hoplon.span.call(null,G__156575,G__156576));
})();
var G__156276 = " (";
var G__156277 = (function (){var G__156577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156578 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156577,G__156578) : tailrecursion.hoplon.span.call(null,G__156577,G__156578));
})();
var G__156278 = " ";
var G__156279 = (function (){var G__156579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156580 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156579,G__156580) : tailrecursion.hoplon.span.call(null,G__156579,G__156580));
})();
var G__156280 = " ";
var G__156281 = (function (){var G__156581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156582 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156581,G__156582) : tailrecursion.hoplon.span.call(null,G__156581,G__156582));
})();
var G__156282 = ")))\n(";
var G__156283 = (function (){var G__156583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156584 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156583,G__156584) : tailrecursion.hoplon.span.call(null,G__156583,G__156584));
})();
var G__156284 = " ";
var G__156285 = (function (){var G__156585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156586 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156585,G__156586) : tailrecursion.hoplon.span.call(null,G__156585,G__156586));
})();
var G__156286 = " (";
var G__156287 = (function (){var G__156587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156588 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156587,G__156588) : tailrecursion.hoplon.span.call(null,G__156587,G__156588));
})();
var G__156288 = " ";
var G__156289 = (function (){var G__156589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156590 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156589,G__156590) : tailrecursion.hoplon.span.call(null,G__156589,G__156590));
})();
var G__156290 = " ";
var G__156291 = (function (){var G__156591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156592 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156591,G__156592) : tailrecursion.hoplon.span.call(null,G__156591,G__156592));
})();
var G__156292 = "))\n(";
var G__156293 = (function (){var G__156593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156594 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156593,G__156594) : tailrecursion.hoplon.span.call(null,G__156593,G__156594));
})();
var G__156294 = " ";
var G__156295 = (function (){var G__156595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156596 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156595,G__156596) : tailrecursion.hoplon.span.call(null,G__156595,G__156596));
})();
var G__156296 = " ";
var G__156297 = (function (){var G__156597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156598 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156597,G__156598) : tailrecursion.hoplon.span.call(null,G__156597,G__156598));
})();
var G__156298 = ")\n";
var G__156299 = (function (){var G__156599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156600 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156599,G__156600) : tailrecursion.hoplon.span.call(null,G__156599,G__156600));
})();
var G__156300 = "\n";
var G__156301 = (function (){var G__156601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156602 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156601,G__156602) : tailrecursion.hoplon.span.call(null,G__156601,G__156602));
})();
var G__156302 = ",";
var G__156303 = (function (){var G__156603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156604 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156603,G__156604) : tailrecursion.hoplon.span.call(null,G__156603,G__156604));
})();
var G__156304 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302(G__156003,G__156004,G__156005,G__156006,G__156007,G__156008,G__156009,G__156010,G__156011,G__156012,G__156013,G__156014,G__156015,G__156016,G__156017,G__156018,G__156019,G__156020,G__156021,G__156022,G__156023,G__156024,G__156025,G__156026,G__156027,G__156028,G__156029,G__156030,G__156031,G__156032,G__156033,G__156034,G__156035,G__156036,G__156037,G__156038,G__156039,G__156040,G__156041,G__156042,G__156043,G__156044,G__156045,G__156046,G__156047,G__156048,G__156049,G__156050,G__156051,G__156052,G__156053,G__156054,G__156055,G__156056,G__156057,G__156058,G__156059,G__156060,G__156061,G__156062,G__156063,G__156064,G__156065,G__156066,G__156067,G__156068,G__156069,G__156070,G__156071,G__156072,G__156073,G__156074,G__156075,G__156076,G__156077,G__156078,G__156079,G__156080,G__156081,G__156082,G__156083,G__156084,G__156085,G__156086,G__156087,G__156088,G__156089,G__156090,G__156091,G__156092,G__156093,G__156094,G__156095,G__156096,G__156097,G__156098,G__156099,G__156100,G__156101,G__156102,G__156103,G__156104,G__156105,G__156106,G__156107,G__156108,G__156109,G__156110,G__156111,G__156112,G__156113,G__156114,G__156115,G__156116,G__156117,G__156118,G__156119,G__156120,G__156121,G__156122,G__156123,G__156124,G__156125,G__156126,G__156127,G__156128,G__156129,G__156130,G__156131,G__156132,G__156133,G__156134,G__156135,G__156136,G__156137,G__156138,G__156139,G__156140,G__156141,G__156142,G__156143,G__156144,G__156145,G__156146,G__156147,G__156148,G__156149,G__156150,G__156151,G__156152,G__156153,G__156154,G__156155,G__156156,G__156157,G__156158,G__156159,G__156160,G__156161,G__156162,G__156163,G__156164,G__156165,G__156166,G__156167,G__156168,G__156169,G__156170,G__156171,G__156172,G__156173,G__156174,G__156175,G__156176,G__156177,G__156178,G__156179,G__156180,G__156181,G__156182,G__156183,G__156184,G__156185,G__156186,G__156187,G__156188,G__156189,G__156190,G__156191,G__156192,G__156193,G__156194,G__156195,G__156196,G__156197,G__156198,G__156199,G__156200,G__156201,G__156202,G__156203,G__156204,G__156205,G__156206,G__156207,G__156208,G__156209,G__156210,G__156211,G__156212,G__156213,G__156214,G__156215,G__156216,G__156217,G__156218,G__156219,G__156220,G__156221,G__156222,G__156223,G__156224,G__156225,G__156226,G__156227,G__156228,G__156229,G__156230,G__156231,G__156232,G__156233,G__156234,G__156235,G__156236,G__156237,G__156238,G__156239,G__156240,G__156241,G__156242,G__156243,G__156244,G__156245,G__156246,G__156247,G__156248,G__156249,G__156250,G__156251,G__156252,G__156253,G__156254,G__156255,G__156256,G__156257,G__156258,G__156259,G__156260,G__156261,G__156262,G__156263,G__156264,G__156265,G__156266,G__156267,G__156268,G__156269,G__156270,G__156271,G__156272,G__156273,G__156274,G__156275,G__156276,G__156277,G__156278,G__156279,G__156280,G__156281,G__156282,G__156283,G__156284,G__156285,G__156286,G__156287,G__156288,G__156289,G__156290,G__156291,G__156292,G__156293,G__156294,G__156295,G__156296,G__156297,G__156298,G__156299,G__156300,G__156301,G__156302,G__156303,G__156304) : tailrecursion.hoplon.pre.call(null,G__156003,G__156004,G__156005,G__156006,G__156007,G__156008,G__156009,G__156010,G__156011,G__156012,G__156013,G__156014,G__156015,G__156016,G__156017,G__156018,G__156019,G__156020,G__156021,G__156022,G__156023,G__156024,G__156025,G__156026,G__156027,G__156028,G__156029,G__156030,G__156031,G__156032,G__156033,G__156034,G__156035,G__156036,G__156037,G__156038,G__156039,G__156040,G__156041,G__156042,G__156043,G__156044,G__156045,G__156046,G__156047,G__156048,G__156049,G__156050,G__156051,G__156052,G__156053,G__156054,G__156055,G__156056,G__156057,G__156058,G__156059,G__156060,G__156061,G__156062,G__156063,G__156064,G__156065,G__156066,G__156067,G__156068,G__156069,G__156070,G__156071,G__156072,G__156073,G__156074,G__156075,G__156076,G__156077,G__156078,G__156079,G__156080,G__156081,G__156082,G__156083,G__156084,G__156085,G__156086,G__156087,G__156088,G__156089,G__156090,G__156091,G__156092,G__156093,G__156094,G__156095,G__156096,G__156097,G__156098,G__156099,G__156100,G__156101,G__156102,G__156103,G__156104,G__156105,G__156106,G__156107,G__156108,G__156109,G__156110,G__156111,G__156112,G__156113,G__156114,G__156115,G__156116,G__156117,G__156118,G__156119,G__156120,G__156121,G__156122,G__156123,G__156124,G__156125,G__156126,G__156127,G__156128,G__156129,G__156130,G__156131,G__156132,G__156133,G__156134,G__156135,G__156136,G__156137,G__156138,G__156139,G__156140,G__156141,G__156142,G__156143,G__156144,G__156145,G__156146,G__156147,G__156148,G__156149,G__156150,G__156151,G__156152,G__156153,G__156154,G__156155,G__156156,G__156157,G__156158,G__156159,G__156160,G__156161,G__156162,G__156163,G__156164,G__156165,G__156166,G__156167,G__156168,G__156169,G__156170,G__156171,G__156172,G__156173,G__156174,G__156175,G__156176,G__156177,G__156178,G__156179,G__156180,G__156181,G__156182,G__156183,G__156184,G__156185,G__156186,G__156187,G__156188,G__156189,G__156190,G__156191,G__156192,G__156193,G__156194,G__156195,G__156196,G__156197,G__156198,G__156199,G__156200,G__156201,G__156202,G__156203,G__156204,G__156205,G__156206,G__156207,G__156208,G__156209,G__156210,G__156211,G__156212,G__156213,G__156214,G__156215,G__156216,G__156217,G__156218,G__156219,G__156220,G__156221,G__156222,G__156223,G__156224,G__156225,G__156226,G__156227,G__156228,G__156229,G__156230,G__156231,G__156232,G__156233,G__156234,G__156235,G__156236,G__156237,G__156238,G__156239,G__156240,G__156241,G__156242,G__156243,G__156244,G__156245,G__156246,G__156247,G__156248,G__156249,G__156250,G__156251,G__156252,G__156253,G__156254,G__156255,G__156256,G__156257,G__156258,G__156259,G__156260,G__156261,G__156262,G__156263,G__156264,G__156265,G__156266,G__156267,G__156268,G__156269,G__156270,G__156271,G__156272,G__156273,G__156274,G__156275,G__156276,G__156277,G__156278,G__156279,G__156280,G__156281,G__156282,G__156283,G__156284,G__156285,G__156286,G__156287,G__156288,G__156289,G__156290,G__156291,G__156292,G__156293,G__156294,G__156295,G__156296,G__156297,G__156298,G__156299,G__156300,G__156301,G__156302,G__156303,G__156304));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156001,G__156002) : tailrecursion.hoplon.div.call(null,G__156001,G__156002));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156000) : tailrecursion.hoplon.div.call(null,G__156000));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155999;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155998;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_155997;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_155996;
}})()], 0)),(function (){var _STAR_references_STAR_156605 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156606 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_156607 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156608 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156609 = cljs.core.PersistentArrayMap.EMPTY;
var G__156610 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the following procedures, where ",(function (){var G__156611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"A"], null);
var G__156612 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156611,G__156612) : tailrecursion.hoplon.markdown.code_node.call(null,G__156611,G__156612));
})()," is the procedure defined above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156609,G__156610) : tailrecursion.hoplon.markdown.para_node.call(null,G__156609,G__156610));
})(),(function (){var G__156613 = (function (){var G__156614 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156615 = (function (){var G__156616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156617 = "(";
var G__156618 = (function (){var G__156629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156630 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156629,G__156630) : tailrecursion.hoplon.span.call(null,G__156629,G__156630));
})();
var G__156619 = (function (){var G__156631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156632 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156631,G__156632) : tailrecursion.hoplon.span.call(null,G__156631,G__156632));
})();
var G__156620 = " [";
var G__156621 = (function (){var G__156633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156634 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156633,G__156634) : tailrecursion.hoplon.span.call(null,G__156633,G__156634));
})();
var G__156622 = "] (";
var G__156623 = (function (){var G__156635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156636 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156635,G__156636) : tailrecursion.hoplon.span.call(null,G__156635,G__156636));
})();
var G__156624 = " ";
var G__156625 = (function (){var G__156637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156638 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156637,G__156638) : tailrecursion.hoplon.span.call(null,G__156637,G__156638));
})();
var G__156626 = " ";
var G__156627 = (function (){var G__156639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156640 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156639,G__156640) : tailrecursion.hoplon.span.call(null,G__156639,G__156640));
})();
var G__156628 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__156616,G__156617,G__156618,G__156619,G__156620,G__156621,G__156622,G__156623,G__156624,G__156625,G__156626,G__156627,G__156628) : tailrecursion.hoplon.pre.call(null,G__156616,G__156617,G__156618,G__156619,G__156620,G__156621,G__156622,G__156623,G__156624,G__156625,G__156626,G__156627,G__156628));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156614,G__156615) : tailrecursion.hoplon.div.call(null,G__156614,G__156615));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156613) : tailrecursion.hoplon.div.call(null,G__156613));
})(),(function (){var G__156641 = (function (){var G__156642 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156643 = (function (){var G__156644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156645 = "(";
var G__156646 = (function (){var G__156657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156658 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156657,G__156658) : tailrecursion.hoplon.span.call(null,G__156657,G__156658));
})();
var G__156647 = (function (){var G__156659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156660 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156659,G__156660) : tailrecursion.hoplon.span.call(null,G__156659,G__156660));
})();
var G__156648 = " [";
var G__156649 = (function (){var G__156661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156662 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156661,G__156662) : tailrecursion.hoplon.span.call(null,G__156661,G__156662));
})();
var G__156650 = "] (";
var G__156651 = (function (){var G__156663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156664 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156663,G__156664) : tailrecursion.hoplon.span.call(null,G__156663,G__156664));
})();
var G__156652 = " ";
var G__156653 = (function (){var G__156665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156666 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156665,G__156666) : tailrecursion.hoplon.span.call(null,G__156665,G__156666));
})();
var G__156654 = " ";
var G__156655 = (function (){var G__156667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156668 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156667,G__156668) : tailrecursion.hoplon.span.call(null,G__156667,G__156668));
})();
var G__156656 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__156644,G__156645,G__156646,G__156647,G__156648,G__156649,G__156650,G__156651,G__156652,G__156653,G__156654,G__156655,G__156656) : tailrecursion.hoplon.pre.call(null,G__156644,G__156645,G__156646,G__156647,G__156648,G__156649,G__156650,G__156651,G__156652,G__156653,G__156654,G__156655,G__156656));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156642,G__156643) : tailrecursion.hoplon.div.call(null,G__156642,G__156643));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156641) : tailrecursion.hoplon.div.call(null,G__156641));
})(),(function (){var G__156669 = (function (){var G__156670 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156671 = (function (){var G__156672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156673 = "(";
var G__156674 = (function (){var G__156685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156686 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156685,G__156686) : tailrecursion.hoplon.span.call(null,G__156685,G__156686));
})();
var G__156675 = (function (){var G__156687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156688 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156687,G__156688) : tailrecursion.hoplon.span.call(null,G__156687,G__156688));
})();
var G__156676 = " [";
var G__156677 = (function (){var G__156689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156690 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156689,G__156690) : tailrecursion.hoplon.span.call(null,G__156689,G__156690));
})();
var G__156678 = "] (";
var G__156679 = (function (){var G__156691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156692 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156691,G__156692) : tailrecursion.hoplon.span.call(null,G__156691,G__156692));
})();
var G__156680 = " ";
var G__156681 = (function (){var G__156693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156694 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156693,G__156694) : tailrecursion.hoplon.span.call(null,G__156693,G__156694));
})();
var G__156682 = " ";
var G__156683 = (function (){var G__156695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156696 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156695,G__156696) : tailrecursion.hoplon.span.call(null,G__156695,G__156696));
})();
var G__156684 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__156672,G__156673,G__156674,G__156675,G__156676,G__156677,G__156678,G__156679,G__156680,G__156681,G__156682,G__156683,G__156684) : tailrecursion.hoplon.pre.call(null,G__156672,G__156673,G__156674,G__156675,G__156676,G__156677,G__156678,G__156679,G__156680,G__156681,G__156682,G__156683,G__156684));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156670,G__156671) : tailrecursion.hoplon.div.call(null,G__156670,G__156671));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156669) : tailrecursion.hoplon.div.call(null,G__156669));
})(),(function (){var G__156697 = (function (){var G__156698 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156699 = (function (){var G__156700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156701 = "(";
var G__156702 = (function (){var G__156714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156715 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156714,G__156715) : tailrecursion.hoplon.span.call(null,G__156714,G__156715));
})();
var G__156703 = (function (){var G__156716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156717 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156716,G__156717) : tailrecursion.hoplon.span.call(null,G__156716,G__156717));
})();
var G__156704 = " [";
var G__156705 = (function (){var G__156718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156719 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156718,G__156719) : tailrecursion.hoplon.span.call(null,G__156718,G__156719));
})();
var G__156706 = "] (";
var G__156707 = (function (){var G__156720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156721 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156720,G__156721) : tailrecursion.hoplon.span.call(null,G__156720,G__156721));
})();
var G__156708 = (function (){var G__156722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156723 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156722,G__156723) : tailrecursion.hoplon.span.call(null,G__156722,G__156723));
})();
var G__156709 = " ";
var G__156710 = (function (){var G__156724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156725 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156724,G__156725) : tailrecursion.hoplon.span.call(null,G__156724,G__156725));
})();
var G__156711 = " ";
var G__156712 = (function (){var G__156726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156727 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156726,G__156727) : tailrecursion.hoplon.span.call(null,G__156726,G__156727));
})();
var G__156713 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__156700,G__156701,G__156702,G__156703,G__156704,G__156705,G__156706,G__156707,G__156708,G__156709,G__156710,G__156711,G__156712,G__156713) : tailrecursion.hoplon.pre.call(null,G__156700,G__156701,G__156702,G__156703,G__156704,G__156705,G__156706,G__156707,G__156708,G__156709,G__156710,G__156711,G__156712,G__156713));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156698,G__156699) : tailrecursion.hoplon.div.call(null,G__156698,G__156699));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156697) : tailrecursion.hoplon.div.call(null,G__156697));
})(),(function (){var G__156728 = cljs.core.PersistentArrayMap.EMPTY;
var G__156729 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give concise mathematical definitions for the functions computed by the procedures ",(function (){var G__156730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"f"], null);
var G__156731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156730,G__156731) : tailrecursion.hoplon.markdown.code_node.call(null,G__156730,G__156731));
})(),",",(function (){var G__156732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"g"], null);
var G__156733 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156732,G__156733) : tailrecursion.hoplon.markdown.code_node.call(null,G__156732,G__156733));
})(),", and ",(function (){var G__156734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"h"], null);
var G__156735 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156734,G__156735) : tailrecursion.hoplon.markdown.code_node.call(null,G__156734,G__156735));
})()," for positive integer values of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". For example, ",(function (){var G__156736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(k n)"], null);
var G__156737 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156736,G__156737) : tailrecursion.hoplon.markdown.code_node.call(null,G__156736,G__156737));
})()," computes \\(5n^2\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156728,G__156729) : tailrecursion.hoplon.markdown.para_node.call(null,G__156728,G__156729));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156608;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156607;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156606;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156605;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_156738 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156739 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_156740 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156741 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156742 = cljs.core.PersistentArrayMap.EMPTY;
var G__156743 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(f n)"], null);
var G__156745 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156744,G__156745) : tailrecursion.hoplon.markdown.code_node.call(null,G__156744,G__156745));
})(),"\\(= 2n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156742,G__156743) : tailrecursion.hoplon.markdown.para_node.call(null,G__156742,G__156743));
})(),(function (){var G__156746 = cljs.core.PersistentArrayMap.EMPTY;
var G__156747 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(g n)"], null);
var G__156749 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156748,G__156749) : tailrecursion.hoplon.markdown.code_node.call(null,G__156748,G__156749));
})(),"\\(=2^n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156746,G__156747) : tailrecursion.hoplon.markdown.para_node.call(null,G__156746,G__156747));
})(),(function (){var G__156750 = cljs.core.PersistentArrayMap.EMPTY;
var G__156751 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(h n)"], null);
var G__156753 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156752,G__156753) : tailrecursion.hoplon.markdown.code_node.call(null,G__156752,G__156753));
})(),"\\(=2^{2^{",(function (){var G__156754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__156755 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__156754,G__156755) : tailrecursion.hoplon.markdown.simple_node.call(null,G__156754,G__156755));
})(),"^{2}}}\\), or alternatively, ",(function (){var G__156756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(h n)"], null);
var G__156757 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156756,G__156757) : tailrecursion.hoplon.markdown.code_node.call(null,G__156756,G__156757));
})(),"\\(= 2^{(h (n-1))}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156750,G__156751) : tailrecursion.hoplon.markdown.para_node.call(null,G__156750,G__156751));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156741;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156740;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156739;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156738;
}})()], 0))], 0))], 0));
var G__153282 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Tree Recursion"], null),(function (){var _STAR_references_STAR_156758 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156759 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_156760 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156761 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156762 = cljs.core.PersistentArrayMap.EMPTY;
var G__156763 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another common pattern of computation is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tree recursion"], null)], 0)),". As an example, consider computing the sequence of Fibonacci numbers, in which each number is the sum of the preceeding two:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156762,G__156763) : tailrecursion.hoplon.markdown.para_node.call(null,G__156762,G__156763));
})(),(function (){var G__156764 = cljs.core.PersistentArrayMap.EMPTY;
var G__156765 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$0, 1, 1, 2, 3, 5, 8, 13, 21, ",(function (){var G__156766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__156767 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__156766,G__156767) : tailrecursion.hoplon.markdown.simple_node.call(null,G__156766,G__156767));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156764,G__156765) : tailrecursion.hoplon.markdown.para_node.call(null,G__156764,G__156765));
})(),(function (){var G__156768 = cljs.core.PersistentArrayMap.EMPTY;
var G__156769 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, the Fibonacci numbers can be defined by the rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156768,G__156769) : tailrecursion.hoplon.markdown.para_node.call(null,G__156768,G__156769));
})(),(function (){var G__156770 = cljs.core.PersistentArrayMap.EMPTY;
var G__156771 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\text{fib}(n)=\\begin{cases} 0 &\\text{ if } n=0\\cr 1 &\\text{ if } n=1 \\cr \\text{fib}(n-1)+\\text{ fib}(n-2) &\\text{ otherwise }\\end{cases}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156770,G__156771) : tailrecursion.hoplon.markdown.para_node.call(null,G__156770,G__156771));
})(),(function (){var G__156772 = cljs.core.PersistentArrayMap.EMPTY;
var G__156773 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can immediately translate this definition into a recursive procedure for computing Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156772,G__156773) : tailrecursion.hoplon.markdown.para_node.call(null,G__156772,G__156773));
})(),(function (){var G__156774 = (function (){var G__156775 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156776 = (function (){var G__156777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156778 = "(";
var G__156779 = (function (){var G__156818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156819 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156818,G__156819) : tailrecursion.hoplon.span.call(null,G__156818,G__156819));
})();
var G__156780 = (function (){var G__156820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156821 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156820,G__156821) : tailrecursion.hoplon.span.call(null,G__156820,G__156821));
})();
var G__156781 = " [";
var G__156782 = (function (){var G__156822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156823 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156822,G__156823) : tailrecursion.hoplon.span.call(null,G__156822,G__156823));
})();
var G__156783 = "]\n  (";
var G__156784 = (function (){var G__156824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156825 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156824,G__156825) : tailrecursion.hoplon.span.call(null,G__156824,G__156825));
})();
var G__156785 = "(";
var G__156786 = (function (){var G__156826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156827 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156826,G__156827) : tailrecursion.hoplon.span.call(null,G__156826,G__156827));
})();
var G__156787 = (function (){var G__156828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156829 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156828,G__156829) : tailrecursion.hoplon.span.call(null,G__156828,G__156829));
})();
var G__156788 = " ";
var G__156789 = (function (){var G__156830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156831 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156830,G__156831) : tailrecursion.hoplon.span.call(null,G__156830,G__156831));
})();
var G__156790 = ") ";
var G__156791 = (function (){var G__156832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156833 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156832,G__156833) : tailrecursion.hoplon.span.call(null,G__156832,G__156833));
})();
var G__156792 = "\n        (";
var G__156793 = (function (){var G__156834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156835 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156834,G__156835) : tailrecursion.hoplon.span.call(null,G__156834,G__156835));
})();
var G__156794 = (function (){var G__156836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156837 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156836,G__156837) : tailrecursion.hoplon.span.call(null,G__156836,G__156837));
})();
var G__156795 = " ";
var G__156796 = (function (){var G__156838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156839 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156838,G__156839) : tailrecursion.hoplon.span.call(null,G__156838,G__156839));
})();
var G__156797 = ") ";
var G__156798 = (function (){var G__156840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156841 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156840,G__156841) : tailrecursion.hoplon.span.call(null,G__156840,G__156841));
})();
var G__156799 = "\n        ";
var G__156800 = (function (){var G__156842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156843 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156842,G__156843) : tailrecursion.hoplon.span.call(null,G__156842,G__156843));
})();
var G__156801 = " (";
var G__156802 = (function (){var G__156844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156845 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156844,G__156845) : tailrecursion.hoplon.span.call(null,G__156844,G__156845));
})();
var G__156803 = "(";
var G__156804 = (function (){var G__156846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156847 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156846,G__156847) : tailrecursion.hoplon.span.call(null,G__156846,G__156847));
})();
var G__156805 = " (";
var G__156806 = (function (){var G__156848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156849 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156848,G__156849) : tailrecursion.hoplon.span.call(null,G__156848,G__156849));
})();
var G__156807 = (function (){var G__156850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156851 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156850,G__156851) : tailrecursion.hoplon.span.call(null,G__156850,G__156851));
})();
var G__156808 = " ";
var G__156809 = (function (){var G__156852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156853 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156852,G__156853) : tailrecursion.hoplon.span.call(null,G__156852,G__156853));
})();
var G__156810 = "))\n                 (";
var G__156811 = (function (){var G__156854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156855 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156854,G__156855) : tailrecursion.hoplon.span.call(null,G__156854,G__156855));
})();
var G__156812 = " (";
var G__156813 = (function (){var G__156856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156857 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156856,G__156857) : tailrecursion.hoplon.span.call(null,G__156856,G__156857));
})();
var G__156814 = (function (){var G__156858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156859 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156858,G__156859) : tailrecursion.hoplon.span.call(null,G__156858,G__156859));
})();
var G__156815 = " ";
var G__156816 = (function (){var G__156860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156861 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156860,G__156861) : tailrecursion.hoplon.span.call(null,G__156860,G__156861));
})();
var G__156817 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__156777,G__156778,G__156779,G__156780,G__156781,G__156782,G__156783,G__156784,G__156785,G__156786,G__156787,G__156788,G__156789,G__156790,G__156791,G__156792,G__156793,G__156794,G__156795,G__156796,G__156797,G__156798,G__156799,G__156800,G__156801,G__156802,G__156803,G__156804,G__156805,G__156806,G__156807,G__156808,G__156809,G__156810,G__156811,G__156812,G__156813,G__156814,G__156815,G__156816,G__156817) : tailrecursion.hoplon.pre.call(null,G__156777,G__156778,G__156779,G__156780,G__156781,G__156782,G__156783,G__156784,G__156785,G__156786,G__156787,G__156788,G__156789,G__156790,G__156791,G__156792,G__156793,G__156794,G__156795,G__156796,G__156797,G__156798,G__156799,G__156800,G__156801,G__156802,G__156803,G__156804,G__156805,G__156806,G__156807,G__156808,G__156809,G__156810,G__156811,G__156812,G__156813,G__156814,G__156815,G__156816,G__156817));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156775,G__156776) : tailrecursion.hoplon.div.call(null,G__156775,G__156776));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156774) : tailrecursion.hoplon.div.call(null,G__156774));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156761;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156760;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156759;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156758;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The tree-recursive process generated in computing (fib 5)"], null)], 0)),"",(function (){var _STAR_references_STAR_156862 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156863 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_156864 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_156865 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__156866 = cljs.core.PersistentArrayMap.EMPTY;
var G__156867 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the pattern of this computation. To compute ",(function (){var G__156868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 5)"], null);
var G__156869 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156868,G__156869) : tailrecursion.hoplon.markdown.code_node.call(null,G__156868,G__156869));
})(),", we compute ",(function (){var G__156870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 4)"], null);
var G__156871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156870,G__156871) : tailrecursion.hoplon.markdown.code_node.call(null,G__156870,G__156871));
})()," and ",(function (){var G__156872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 3)"], null);
var G__156873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156872,G__156873) : tailrecursion.hoplon.markdown.code_node.call(null,G__156872,G__156873));
})(),". To compute ",(function (){var G__156874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 4)"], null);
var G__156875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156874,G__156875) : tailrecursion.hoplon.markdown.code_node.call(null,G__156874,G__156875));
})(),", we compute ",(function (){var G__156876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib\n3)"], null);
var G__156877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156876,G__156877) : tailrecursion.hoplon.markdown.code_node.call(null,G__156876,G__156877));
})()," and ",(function (){var G__156878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 2)"], null);
var G__156879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156878,G__156879) : tailrecursion.hoplon.markdown.code_node.call(null,G__156878,G__156879));
})(),". In general, the evolved process looks like a tree, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0)),". Notice that the branches split into two at each level (except at the bottom); this reflects the fact that the ",(function (){var G__156880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib"], null);
var G__156881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156880,G__156881) : tailrecursion.hoplon.markdown.code_node.call(null,G__156880,G__156881));
})()," procedure calls itself twice each time it is invoked."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156866,G__156867) : tailrecursion.hoplon.markdown.para_node.call(null,G__156866,G__156867));
})(),(function (){var G__156882 = cljs.core.PersistentArrayMap.EMPTY;
var G__156883 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This procedure is instructive as a prototypical tree recursion, but it is a terrible way to compute Fibonacci numbers because it does so much redundant computation. Notice in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-5",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0))," that the entire computation of ",(function (){var G__156884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 3)"], null);
var G__156885 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156884,G__156885) : tailrecursion.hoplon.markdown.code_node.call(null,G__156884,G__156885));
})()," ",(function (){var G__156886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__156887 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__156886,G__156887) : tailrecursion.hoplon.markdown.simple_node.call(null,G__156886,G__156887));
})()," almost half the work ",(function (){var G__156888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__156889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__156888,G__156889) : tailrecursion.hoplon.markdown.simple_node.call(null,G__156888,G__156889));
})()," is dubplicated. In fact, it is not hard to show that the number of times the procedure will compute ",(function (){var G__156890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 1)"], null);
var G__156891 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156890,G__156891) : tailrecursion.hoplon.markdown.code_node.call(null,G__156890,G__156891));
})()," or ",(function (){var G__156892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 0)"], null);
var G__156893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__156892,G__156893) : tailrecursion.hoplon.markdown.code_node.call(null,G__156892,G__156893));
})()," (the number of leaves in the above tree, in general) is precisely ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n+1)"], null)], 0)),". To get an idea of how bad this is, one can show that the value of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fiv(n)"], null)], 0))," grows exponentially with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More precisely (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/ex/13",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.13"], null)], 0)),"), ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n)"], null)], 0))," is the closest integer to \\(\\phi^n/\\sqrt5\\), where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156882,G__156883) : tailrecursion.hoplon.markdown.para_node.call(null,G__156882,G__156883));
})(),(function (){var G__156894 = cljs.core.PersistentArrayMap.EMPTY;
var G__156895 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi=\\left(1+\\sqrt5\\right)/2\\approx1.6180",(function (){var G__156896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__156897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__156896,G__156897) : tailrecursion.hoplon.markdown.simple_node.call(null,G__156896,G__156897));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156894,G__156895) : tailrecursion.hoplon.markdown.para_node.call(null,G__156894,G__156895));
})(),(function (){var G__156898 = cljs.core.PersistentArrayMap.EMPTY;
var G__156899 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["golden ratio"], null)], 0)),", which satisfies the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156898,G__156899) : tailrecursion.hoplon.markdown.para_node.call(null,G__156898,G__156899));
})(),(function (){var G__156900 = cljs.core.PersistentArrayMap.EMPTY;
var G__156901 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi^2=\\phi+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156900,G__156901) : tailrecursion.hoplon.markdown.para_node.call(null,G__156900,G__156901));
})(),(function (){var G__156902 = cljs.core.PersistentArrayMap.EMPTY;
var G__156903 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, the process uses a number of steps that grows exponentially with the input. On the other hand, the space required gows only linearly with the input, because we need keep track only of which nodes are above us in the tree at any point in the computation. In general, the number of steps required by a tree-recursive process will be proportional to the number of nodes in the tree, while the space requrired will be proportional to the maximum depth of the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156902,G__156903) : tailrecursion.hoplon.markdown.para_node.call(null,G__156902,G__156903));
})(),(function (){var G__156904 = cljs.core.PersistentArrayMap.EMPTY;
var G__156905 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can also formulate an iterative process for computing the Fibonacci numbers. The idea is to use a pair of integers ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b"], null)], 0)),", initialized to \\(Fib(0)=0\\) and \\(Fib(1)=1\\), and to repeatedly apply the simultaneous transformations"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156904,G__156905) : tailrecursion.hoplon.markdown.para_node.call(null,G__156904,G__156905));
})(),(function (){var G__156906 = cljs.core.PersistentArrayMap.EMPTY;
var G__156907 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} a \\rightarrow & b \\cr b \\rightarrow & a + b\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156906,G__156907) : tailrecursion.hoplon.markdown.para_node.call(null,G__156906,G__156907));
})(),(function (){var G__156908 = cljs.core.PersistentArrayMap.EMPTY;
var G__156909 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is not hard to show that, after applying this transformation \\(n\\) times, \\(a\\) and \\(b\\) will be equal, respectively, to \\(Fib(n)\\) and \\(Fib(n+1)\\). Thus, we can compute Fibonacci numbers iteratively using the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__156908,G__156909) : tailrecursion.hoplon.markdown.para_node.call(null,G__156908,G__156909));
})(),(function (){var G__156910 = (function (){var G__156911 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__156912 = (function (){var G__156913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__156914 = "(";
var G__156915 = (function (){var G__156956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156957 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156956,G__156957) : tailrecursion.hoplon.span.call(null,G__156956,G__156957));
})();
var G__156916 = (function (){var G__156958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156959 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156958,G__156959) : tailrecursion.hoplon.span.call(null,G__156958,G__156959));
})();
var G__156917 = " [";
var G__156918 = (function (){var G__156960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156961 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156960,G__156961) : tailrecursion.hoplon.span.call(null,G__156960,G__156961));
})();
var G__156919 = " ";
var G__156920 = (function (){var G__156962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156963 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156962,G__156963) : tailrecursion.hoplon.span.call(null,G__156962,G__156963));
})();
var G__156921 = " ";
var G__156922 = (function (){var G__156964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156965 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156964,G__156965) : tailrecursion.hoplon.span.call(null,G__156964,G__156965));
})();
var G__156923 = "]\n  (";
var G__156924 = (function (){var G__156966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156967 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156966,G__156967) : tailrecursion.hoplon.span.call(null,G__156966,G__156967));
})();
var G__156925 = "(";
var G__156926 = (function (){var G__156968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156969 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156968,G__156969) : tailrecursion.hoplon.span.call(null,G__156968,G__156969));
})();
var G__156927 = (function (){var G__156970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156971 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156970,G__156971) : tailrecursion.hoplon.span.call(null,G__156970,G__156971));
})();
var G__156928 = ")\n      ";
var G__156929 = (function (){var G__156972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156973 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156972,G__156973) : tailrecursion.hoplon.span.call(null,G__156972,G__156973));
})();
var G__156930 = "\n      (";
var G__156931 = (function (){var G__156974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156975 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156974,G__156975) : tailrecursion.hoplon.span.call(null,G__156974,G__156975));
})();
var G__156932 = " ";
var G__156933 = (function (){var G__156976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156977 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156976,G__156977) : tailrecursion.hoplon.span.call(null,G__156976,G__156977));
})();
var G__156934 = " (";
var G__156935 = (function (){var G__156978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156979 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156978,G__156979) : tailrecursion.hoplon.span.call(null,G__156978,G__156979));
})();
var G__156936 = (function (){var G__156980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156981 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156980,G__156981) : tailrecursion.hoplon.span.call(null,G__156980,G__156981));
})();
var G__156937 = " ";
var G__156938 = (function (){var G__156982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156983 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156982,G__156983) : tailrecursion.hoplon.span.call(null,G__156982,G__156983));
})();
var G__156939 = ") (";
var G__156940 = (function (){var G__156984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__156985 = "- count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156984,G__156985) : tailrecursion.hoplon.span.call(null,G__156984,G__156985));
})();
var G__156941 = (function (){var G__156986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156987 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156986,G__156987) : tailrecursion.hoplon.span.call(null,G__156986,G__156987));
})();
var G__156942 = "))))\n(";
var G__156943 = (function (){var G__156988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__156989 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156988,G__156989) : tailrecursion.hoplon.span.call(null,G__156988,G__156989));
})();
var G__156944 = (function (){var G__156990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156991 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156990,G__156991) : tailrecursion.hoplon.span.call(null,G__156990,G__156991));
})();
var G__156945 = " [";
var G__156946 = (function (){var G__156992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__156993 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156992,G__156993) : tailrecursion.hoplon.span.call(null,G__156992,G__156993));
})();
var G__156947 = "]\n  (";
var G__156948 = (function (){var G__156994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__156995 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156994,G__156995) : tailrecursion.hoplon.span.call(null,G__156994,G__156995));
})();
var G__156949 = " ";
var G__156950 = (function (){var G__156996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156997 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156996,G__156997) : tailrecursion.hoplon.span.call(null,G__156996,G__156997));
})();
var G__156951 = " ";
var G__156952 = (function (){var G__156998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__156999 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__156998,G__156999) : tailrecursion.hoplon.span.call(null,G__156998,G__156999));
})();
var G__156953 = " ";
var G__156954 = (function (){var G__157000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157001 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157000,G__157001) : tailrecursion.hoplon.span.call(null,G__157000,G__157001));
})();
var G__156955 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__156913,G__156914,G__156915,G__156916,G__156917,G__156918,G__156919,G__156920,G__156921,G__156922,G__156923,G__156924,G__156925,G__156926,G__156927,G__156928,G__156929,G__156930,G__156931,G__156932,G__156933,G__156934,G__156935,G__156936,G__156937,G__156938,G__156939,G__156940,G__156941,G__156942,G__156943,G__156944,G__156945,G__156946,G__156947,G__156948,G__156949,G__156950,G__156951,G__156952,G__156953,G__156954,G__156955) : tailrecursion.hoplon.pre.call(null,G__156913,G__156914,G__156915,G__156916,G__156917,G__156918,G__156919,G__156920,G__156921,G__156922,G__156923,G__156924,G__156925,G__156926,G__156927,G__156928,G__156929,G__156930,G__156931,G__156932,G__156933,G__156934,G__156935,G__156936,G__156937,G__156938,G__156939,G__156940,G__156941,G__156942,G__156943,G__156944,G__156945,G__156946,G__156947,G__156948,G__156949,G__156950,G__156951,G__156952,G__156953,G__156954,G__156955));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__156911,G__156912) : tailrecursion.hoplon.div.call(null,G__156911,G__156912));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__156910) : tailrecursion.hoplon.div.call(null,G__156910));
})(),(function (){var G__157002 = cljs.core.PersistentArrayMap.EMPTY;
var G__157003 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This second method for computing \\(Fib(n)\\) is a linear iteration. The difference in number of steps required by the two methods ",(function (){var G__157004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__157005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157004,G__157005) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157004,G__157005));
})(),"one linear in \\(n\\), one growing as fast as \\(Fib(n)\\) itself ",(function (){var G__157006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__157007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157006,G__157007) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157006,G__157007));
})()," is enormous, even for small inputs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157002,G__157003) : tailrecursion.hoplon.markdown.para_node.call(null,G__157002,G__157003));
})(),(function (){var G__157008 = cljs.core.PersistentArrayMap.EMPTY;
var G__157009 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One should not conclude from this that tree-recursive processes are useless. When we consider processes that operate on hierarchially structured data rather than numbers, we will find that tree recursion is a natural and powerful tool.",(function (){var G__157010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__157011 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["An example of this was hinted at in section 1.1.3: The interpreter itself evaluates expressions using a tree-recursive process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157010,G__157011) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157010,G__157011));
})()," But even in numerical operations, tree-recursive processes can be useful in helping us to understand and design programs. For instance, although the first ",(function (){var G__157012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib"], null);
var G__157013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157012,G__157013) : tailrecursion.hoplon.markdown.code_node.call(null,G__157012,G__157013));
})()," procedure is much less efficient than the second one, it is more straightforward, being little more than a translation into Lisp of the definition of the Fibonacci sequence. To formulate the iterative algorithm required noticing that the computation could be recast as an iteration with three state variables."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157008,G__157009) : tailrecursion.hoplon.markdown.para_node.call(null,G__157008,G__157009));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156865;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156864;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_156863;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_156862;
}})()], 0));
var G__153283 = "";
var G__153284 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: Counting Change"], null),(function (){var _STAR_references_STAR_157014 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157015 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157018 = cljs.core.PersistentArrayMap.EMPTY;
var G__157019 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It takes only a bit of cleverness to come up with the iterative Fibonacci algorithm. In contrast, consider the following problem: How many different ways can we make change of $1.00, given half-dollars, quarters, dimes, nickels, and pennies? More generally, can we write a procedure to compute the number of ways to change any given amount of money?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157018,G__157019) : tailrecursion.hoplon.markdown.para_node.call(null,G__157018,G__157019));
})(),(function (){var G__157020 = cljs.core.PersistentArrayMap.EMPTY;
var G__157021 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This problem has a simple solution as a recursive procedure. Suppose we think of the types of coins available as arranged in some order. Then the following relation holds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157020,G__157021) : tailrecursion.hoplon.markdown.para_node.call(null,G__157020,G__157021));
})(),(function (){var G__157022 = cljs.core.PersistentArrayMap.EMPTY;
var G__157023 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a\\) using \\(n\\) kinds of coins equals"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157022,G__157023) : tailrecursion.hoplon.markdown.para_node.call(null,G__157022,G__157023));
})(),(function (){var G__157024 = cljs.core.PersistentArrayMap.EMPTY;
var G__157025 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157026 = cljs.core.PersistentArrayMap.EMPTY;
var G__157027 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157028 = cljs.core.PersistentArrayMap.EMPTY;
var G__157029 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [" The number of ways to change amount \\(a\\) using all but the first kind of coin, plus"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157028,G__157029) : tailrecursion.hoplon.markdown.para_node.call(null,G__157028,G__157029));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__157026,G__157027) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__157026,G__157027));
})(),(function (){var G__157030 = cljs.core.PersistentArrayMap.EMPTY;
var G__157031 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_157032 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157033 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157034 = cljs.core.PersistentArrayMap.EMPTY;
var G__157035 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a-d\\) using all \\(n\\) kinds of coins, where \\(d\\) is the denomination of the first kind of coin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157034,G__157035) : tailrecursion.hoplon.markdown.para_node.call(null,G__157034,G__157035));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157033;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157032;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__157030,G__157031) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__157030,G__157031));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__157024,G__157025) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__157024,G__157025));
})(),(function (){var G__157036 = cljs.core.PersistentArrayMap.EMPTY;
var G__157037 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To see why this is true, observe that the ways to make change can be divided into two groups: those that do not use any of the first kind, and those that do. Therefore, the total number of ways to make change for some amount is equal to the number of ways to make change for the amount without using any of the first kind of coin, plus the number of ways to make change assuming that we do use the first kind of coin. But the latter number is equal to the number of ways to make change for the amount that remains after using a coin of the first kind."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157036,G__157037) : tailrecursion.hoplon.markdown.para_node.call(null,G__157036,G__157037));
})(),(function (){var G__157038 = cljs.core.PersistentArrayMap.EMPTY;
var G__157039 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, we can recursively reduce the problem of changing a give amount to the problem of changing smaller amounts using fewer kinds of coins. Consider this reduction rule carefully, and convince yourself that we can use it to describe an algorithm if we specify the following degenerate cases:",(function (){var G__157040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__157041 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, work through in detail how the reduction rule applies to the problem of making change for 10 cents using pennies and nickels."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157040,G__157041) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157040,G__157041));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157038,G__157039) : tailrecursion.hoplon.markdown.para_node.call(null,G__157038,G__157039));
})(),(function (){var G__157042 = cljs.core.PersistentArrayMap.EMPTY;
var G__157043 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157044 = cljs.core.PersistentArrayMap.EMPTY;
var G__157045 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157046 = cljs.core.PersistentArrayMap.EMPTY;
var G__157047 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is exactly 0, we should count that as 1 way to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157046,G__157047) : tailrecursion.hoplon.markdown.para_node.call(null,G__157046,G__157047));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__157044,G__157045) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__157044,G__157045));
})(),(function (){var G__157048 = cljs.core.PersistentArrayMap.EMPTY;
var G__157049 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_157050 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157051 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157052 = cljs.core.PersistentArrayMap.EMPTY;
var G__157053 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is less than 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157052,G__157053) : tailrecursion.hoplon.markdown.para_node.call(null,G__157052,G__157053));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157051;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157050;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__157048,G__157049) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__157048,G__157049));
})(),(function (){var G__157054 = cljs.core.PersistentArrayMap.EMPTY;
var G__157055 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_157056 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157057 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157058 = cljs.core.PersistentArrayMap.EMPTY;
var G__157059 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157058,G__157059) : tailrecursion.hoplon.markdown.para_node.call(null,G__157058,G__157059));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157057;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157056;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__157054,G__157055) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__157054,G__157055));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__157042,G__157043) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__157042,G__157043));
})(),(function (){var G__157060 = cljs.core.PersistentArrayMap.EMPTY;
var G__157061 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can easily translate this description into a recursive procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157060,G__157061) : tailrecursion.hoplon.markdown.para_node.call(null,G__157060,G__157061));
})(),(function (){var G__157062 = (function (){var G__157063 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157064 = (function (){var G__157065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157066 = "(";
var G__157067 = (function (){var G__157078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157079 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157078,G__157079) : tailrecursion.hoplon.span.call(null,G__157078,G__157079));
})();
var G__157068 = (function (){var G__157080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157081 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157080,G__157081) : tailrecursion.hoplon.span.call(null,G__157080,G__157081));
})();
var G__157069 = " [";
var G__157070 = (function (){var G__157082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157083 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157082,G__157083) : tailrecursion.hoplon.span.call(null,G__157082,G__157083));
})();
var G__157071 = "]\n  (";
var G__157072 = (function (){var G__157084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157085 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157084,G__157085) : tailrecursion.hoplon.span.call(null,G__157084,G__157085));
})();
var G__157073 = " ";
var G__157074 = (function (){var G__157086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157087 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157086,G__157087) : tailrecursion.hoplon.span.call(null,G__157086,G__157087));
})();
var G__157075 = " ";
var G__157076 = (function (){var G__157088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157089 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157088,G__157089) : tailrecursion.hoplon.span.call(null,G__157088,G__157089));
})();
var G__157077 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__157065,G__157066,G__157067,G__157068,G__157069,G__157070,G__157071,G__157072,G__157073,G__157074,G__157075,G__157076,G__157077) : tailrecursion.hoplon.pre.call(null,G__157065,G__157066,G__157067,G__157068,G__157069,G__157070,G__157071,G__157072,G__157073,G__157074,G__157075,G__157076,G__157077));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157063,G__157064) : tailrecursion.hoplon.div.call(null,G__157063,G__157064));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157062) : tailrecursion.hoplon.div.call(null,G__157062));
})(),(function (){var G__157090 = cljs.core.PersistentArrayMap.EMPTY;
var G__157091 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["given that we",(function (){var G__157092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157093 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157092,G__157093) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157092,G__157093));
})(),"ve defined"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157090,G__157091) : tailrecursion.hoplon.markdown.para_node.call(null,G__157090,G__157091));
})(),(function (){var G__157094 = (function (){var G__157095 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157096 = (function (){var G__157097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157098 = "(";
var G__157099 = (function (){var G__157153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157154 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157153,G__157154) : tailrecursion.hoplon.span.call(null,G__157153,G__157154));
})();
var G__157100 = (function (){var G__157155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157156 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157155,G__157156) : tailrecursion.hoplon.span.call(null,G__157155,G__157156));
})();
var G__157101 = " [";
var G__157102 = (function (){var G__157157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157158 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157157,G__157158) : tailrecursion.hoplon.span.call(null,G__157157,G__157158));
})();
var G__157103 = " ";
var G__157104 = (function (){var G__157159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157160 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157159,G__157160) : tailrecursion.hoplon.span.call(null,G__157159,G__157160));
})();
var G__157105 = "]\n  (";
var G__157106 = (function (){var G__157161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157162 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157161,G__157162) : tailrecursion.hoplon.span.call(null,G__157161,G__157162));
})();
var G__157107 = "(";
var G__157108 = (function (){var G__157163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157164 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157163,G__157164) : tailrecursion.hoplon.span.call(null,G__157163,G__157164));
})();
var G__157109 = (function (){var G__157165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157166 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157165,G__157166) : tailrecursion.hoplon.span.call(null,G__157165,G__157166));
})();
var G__157110 = " ";
var G__157111 = (function (){var G__157167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157168 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157167,G__157168) : tailrecursion.hoplon.span.call(null,G__157167,G__157168));
})();
var G__157112 = ") ";
var G__157113 = (function (){var G__157169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157170 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157169,G__157170) : tailrecursion.hoplon.span.call(null,G__157169,G__157170));
})();
var G__157114 = "\n        (";
var G__157115 = (function (){var G__157171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157172 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157171,G__157172) : tailrecursion.hoplon.span.call(null,G__157171,G__157172));
})();
var G__157116 = "(";
var G__157117 = (function (){var G__157173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157174 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157173,G__157174) : tailrecursion.hoplon.span.call(null,G__157173,G__157174));
})();
var G__157118 = (function (){var G__157175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157176 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157175,G__157176) : tailrecursion.hoplon.span.call(null,G__157175,G__157176));
})();
var G__157119 = " ";
var G__157120 = (function (){var G__157177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157178 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157177,G__157178) : tailrecursion.hoplon.span.call(null,G__157177,G__157178));
})();
var G__157121 = ") (";
var G__157122 = (function (){var G__157179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157180 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157179,G__157180) : tailrecursion.hoplon.span.call(null,G__157179,G__157180));
})();
var G__157123 = (function (){var G__157181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157182 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157181,G__157182) : tailrecursion.hoplon.span.call(null,G__157181,G__157182));
})();
var G__157124 = " ";
var G__157125 = (function (){var G__157183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157184 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157183,G__157184) : tailrecursion.hoplon.span.call(null,G__157183,G__157184));
})();
var G__157126 = ")) ";
var G__157127 = (function (){var G__157185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157186 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157185,G__157186) : tailrecursion.hoplon.span.call(null,G__157185,G__157186));
})();
var G__157128 = "\n        ";
var G__157129 = (function (){var G__157187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157188 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157187,G__157188) : tailrecursion.hoplon.span.call(null,G__157187,G__157188));
})();
var G__157130 = " (";
var G__157131 = (function (){var G__157189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157190 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157189,G__157190) : tailrecursion.hoplon.span.call(null,G__157189,G__157190));
})();
var G__157132 = "(";
var G__157133 = (function (){var G__157191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157192 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157191,G__157192) : tailrecursion.hoplon.span.call(null,G__157191,G__157192));
})();
var G__157134 = " ";
var G__157135 = (function (){var G__157193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157194 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157193,G__157194) : tailrecursion.hoplon.span.call(null,G__157193,G__157194));
})();
var G__157136 = " (";
var G__157137 = (function (){var G__157195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157196 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157195,G__157196) : tailrecursion.hoplon.span.call(null,G__157195,G__157196));
})();
var G__157138 = (function (){var G__157197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157198 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157197,G__157198) : tailrecursion.hoplon.span.call(null,G__157197,G__157198));
})();
var G__157139 = " ";
var G__157140 = (function (){var G__157199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157200 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157199,G__157200) : tailrecursion.hoplon.span.call(null,G__157199,G__157200));
})();
var G__157141 = "))\n                 (";
var G__157142 = (function (){var G__157201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157202 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157201,G__157202) : tailrecursion.hoplon.span.call(null,G__157201,G__157202));
})();
var G__157143 = " (";
var G__157144 = (function (){var G__157203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157204 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157203,G__157204) : tailrecursion.hoplon.span.call(null,G__157203,G__157204));
})();
var G__157145 = (function (){var G__157205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157206 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157205,G__157206) : tailrecursion.hoplon.span.call(null,G__157205,G__157206));
})();
var G__157146 = " (";
var G__157147 = (function (){var G__157207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157208 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157207,G__157208) : tailrecursion.hoplon.span.call(null,G__157207,G__157208));
})();
var G__157148 = " ";
var G__157149 = (function (){var G__157209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157210 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157209,G__157210) : tailrecursion.hoplon.span.call(null,G__157209,G__157210));
})();
var G__157150 = ")) ";
var G__157151 = (function (){var G__157211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157212 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157211,G__157212) : tailrecursion.hoplon.span.call(null,G__157211,G__157212));
})();
var G__157152 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__157097,G__157098,G__157099,G__157100,G__157101,G__157102,G__157103,G__157104,G__157105,G__157106,G__157107,G__157108,G__157109,G__157110,G__157111,G__157112,G__157113,G__157114,G__157115,G__157116,G__157117,G__157118,G__157119,G__157120,G__157121,G__157122,G__157123,G__157124,G__157125,G__157126,G__157127,G__157128,G__157129,G__157130,G__157131,G__157132,G__157133,G__157134,G__157135,G__157136,G__157137,G__157138,G__157139,G__157140,G__157141,G__157142,G__157143,G__157144,G__157145,G__157146,G__157147,G__157148,G__157149,G__157150,G__157151,G__157152) : tailrecursion.hoplon.pre.call(null,G__157097,G__157098,G__157099,G__157100,G__157101,G__157102,G__157103,G__157104,G__157105,G__157106,G__157107,G__157108,G__157109,G__157110,G__157111,G__157112,G__157113,G__157114,G__157115,G__157116,G__157117,G__157118,G__157119,G__157120,G__157121,G__157122,G__157123,G__157124,G__157125,G__157126,G__157127,G__157128,G__157129,G__157130,G__157131,G__157132,G__157133,G__157134,G__157135,G__157136,G__157137,G__157138,G__157139,G__157140,G__157141,G__157142,G__157143,G__157144,G__157145,G__157146,G__157147,G__157148,G__157149,G__157150,G__157151,G__157152));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157095,G__157096) : tailrecursion.hoplon.div.call(null,G__157095,G__157096));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157094) : tailrecursion.hoplon.div.call(null,G__157094));
})(),(function (){var G__157213 = cljs.core.PersistentArrayMap.EMPTY;
var G__157214 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157213,G__157214) : tailrecursion.hoplon.markdown.para_node.call(null,G__157213,G__157214));
})(),(function (){var G__157215 = (function (){var G__157216 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157217 = (function (){var G__157218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157219 = "(";
var G__157220 = (function (){var G__157262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157263 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157262,G__157263) : tailrecursion.hoplon.span.call(null,G__157262,G__157263));
})();
var G__157221 = (function (){var G__157264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157265 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157264,G__157265) : tailrecursion.hoplon.span.call(null,G__157264,G__157265));
})();
var G__157222 = " [";
var G__157223 = (function (){var G__157266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157267 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157266,G__157267) : tailrecursion.hoplon.span.call(null,G__157266,G__157267));
})();
var G__157224 = "]\n  (";
var G__157225 = (function (){var G__157268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157269 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157268,G__157269) : tailrecursion.hoplon.span.call(null,G__157268,G__157269));
})();
var G__157226 = "(";
var G__157227 = (function (){var G__157270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157271 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157270,G__157271) : tailrecursion.hoplon.span.call(null,G__157270,G__157271));
})();
var G__157228 = (function (){var G__157272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157273 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157272,G__157273) : tailrecursion.hoplon.span.call(null,G__157272,G__157273));
})();
var G__157229 = " ";
var G__157230 = (function (){var G__157274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157275 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157274,G__157275) : tailrecursion.hoplon.span.call(null,G__157274,G__157275));
})();
var G__157231 = ") ";
var G__157232 = (function (){var G__157276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157277 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157276,G__157277) : tailrecursion.hoplon.span.call(null,G__157276,G__157277));
})();
var G__157233 = "\n        (";
var G__157234 = (function (){var G__157278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157279 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157278,G__157279) : tailrecursion.hoplon.span.call(null,G__157278,G__157279));
})();
var G__157235 = (function (){var G__157280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157281 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157280,G__157281) : tailrecursion.hoplon.span.call(null,G__157280,G__157281));
})();
var G__157236 = " ";
var G__157237 = (function (){var G__157282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157283 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157282,G__157283) : tailrecursion.hoplon.span.call(null,G__157282,G__157283));
})();
var G__157238 = ") ";
var G__157239 = (function (){var G__157284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157285 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157284,G__157285) : tailrecursion.hoplon.span.call(null,G__157284,G__157285));
})();
var G__157240 = "\n        (";
var G__157241 = (function (){var G__157286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157287 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157286,G__157287) : tailrecursion.hoplon.span.call(null,G__157286,G__157287));
})();
var G__157242 = (function (){var G__157288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157289 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157288,G__157289) : tailrecursion.hoplon.span.call(null,G__157288,G__157289));
})();
var G__157243 = " ";
var G__157244 = (function (){var G__157290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157291 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157290,G__157291) : tailrecursion.hoplon.span.call(null,G__157290,G__157291));
})();
var G__157245 = ") ";
var G__157246 = (function (){var G__157292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157293 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157292,G__157293) : tailrecursion.hoplon.span.call(null,G__157292,G__157293));
})();
var G__157247 = "\n        (";
var G__157248 = (function (){var G__157294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157295 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157294,G__157295) : tailrecursion.hoplon.span.call(null,G__157294,G__157295));
})();
var G__157249 = (function (){var G__157296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157297 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157296,G__157297) : tailrecursion.hoplon.span.call(null,G__157296,G__157297));
})();
var G__157250 = " ";
var G__157251 = (function (){var G__157298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157299 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157298,G__157299) : tailrecursion.hoplon.span.call(null,G__157298,G__157299));
})();
var G__157252 = ") ";
var G__157253 = (function (){var G__157300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157301 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157300,G__157301) : tailrecursion.hoplon.span.call(null,G__157300,G__157301));
})();
var G__157254 = "\n        (";
var G__157255 = (function (){var G__157302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157303 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157302,G__157303) : tailrecursion.hoplon.span.call(null,G__157302,G__157303));
})();
var G__157256 = (function (){var G__157304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157305 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157304,G__157305) : tailrecursion.hoplon.span.call(null,G__157304,G__157305));
})();
var G__157257 = " ";
var G__157258 = (function (){var G__157306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157307 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157306,G__157307) : tailrecursion.hoplon.span.call(null,G__157306,G__157307));
})();
var G__157259 = ") ";
var G__157260 = (function (){var G__157308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157309 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157308,G__157309) : tailrecursion.hoplon.span.call(null,G__157308,G__157309));
})();
var G__157261 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__157218,G__157219,G__157220,G__157221,G__157222,G__157223,G__157224,G__157225,G__157226,G__157227,G__157228,G__157229,G__157230,G__157231,G__157232,G__157233,G__157234,G__157235,G__157236,G__157237,G__157238,G__157239,G__157240,G__157241,G__157242,G__157243,G__157244,G__157245,G__157246,G__157247,G__157248,G__157249,G__157250,G__157251,G__157252,G__157253,G__157254,G__157255,G__157256,G__157257,G__157258,G__157259,G__157260,G__157261) : tailrecursion.hoplon.pre.call(null,G__157218,G__157219,G__157220,G__157221,G__157222,G__157223,G__157224,G__157225,G__157226,G__157227,G__157228,G__157229,G__157230,G__157231,G__157232,G__157233,G__157234,G__157235,G__157236,G__157237,G__157238,G__157239,G__157240,G__157241,G__157242,G__157243,G__157244,G__157245,G__157246,G__157247,G__157248,G__157249,G__157250,G__157251,G__157252,G__157253,G__157254,G__157255,G__157256,G__157257,G__157258,G__157259,G__157260,G__157261));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157216,G__157217) : tailrecursion.hoplon.div.call(null,G__157216,G__157217));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157215) : tailrecursion.hoplon.div.call(null,G__157215));
})(),(function (){var G__157310 = cljs.core.PersistentArrayMap.EMPTY;
var G__157311 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157312 = cljs.core.PersistentArrayMap.EMPTY;
var G__157313 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that I made the stipulation that we",(function (){var G__157314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157315 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157314,G__157315) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157314,G__157315));
})(),"ve already defined the two next things. I said this because the REPL we",(function (){var G__157316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157317 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157316,G__157317) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157316,G__157317));
})(),"re using for this book will return an error if you use somthing that has not been previously defined, so if we try to use ",(function (){var G__157318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__157319 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157318,G__157319) : tailrecursion.hoplon.markdown.code_node.call(null,G__157318,G__157319));
})()," in a function definition before we",(function (){var G__157320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157321 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157320,G__157321) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157320,G__157321));
})(),"ve defined ",(function (){var G__157322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__157323 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157322,G__157323) : tailrecursion.hoplon.markdown.code_node.call(null,G__157322,G__157323));
})(),", the program won",(function (){var G__157324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157325 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157324,G__157325) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157324,G__157325));
})(),"t compile. I introduced the functions in the order I did for two reasons: 1) it",(function (){var G__157326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157327 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157326,G__157327) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157326,G__157327));
})(),"s the same order that is used in the original SICP, and 2) it makes more sense pedagogically."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157312,G__157313) : tailrecursion.hoplon.markdown.para_node.call(null,G__157312,G__157313));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__157310,G__157311) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__157310,G__157311));
})(),(function (){var G__157328 = cljs.core.PersistentArrayMap.EMPTY;
var G__157329 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(The ",(function (){var G__157330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__157331 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157330,G__157331) : tailrecursion.hoplon.markdown.code_node.call(null,G__157330,G__157331));
})()," procedure takes as input the number of kinds of coins available and returns the denomination of the first kind. Here we are thinking of the coins as arranged in order from largest to smallest, but any order would do as well.) We can now answer our original question about changing a dollar:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157328,G__157329) : tailrecursion.hoplon.markdown.para_node.call(null,G__157328,G__157329));
})(),(function (){var G__157332 = (function (){var G__157333 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157334 = (function (){var G__157335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157336 = "(";
var G__157337 = (function (){var G__157343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157344 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157343,G__157344) : tailrecursion.hoplon.span.call(null,G__157343,G__157344));
})();
var G__157338 = " ";
var G__157339 = (function (){var G__157345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157346 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157345,G__157346) : tailrecursion.hoplon.span.call(null,G__157345,G__157346));
})();
var G__157340 = ")\n";
var G__157341 = (function (){var G__157347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157348 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157347,G__157348) : tailrecursion.hoplon.span.call(null,G__157347,G__157348));
})();
var G__157342 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__157335,G__157336,G__157337,G__157338,G__157339,G__157340,G__157341,G__157342) : tailrecursion.hoplon.pre.call(null,G__157335,G__157336,G__157337,G__157338,G__157339,G__157340,G__157341,G__157342));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157333,G__157334) : tailrecursion.hoplon.div.call(null,G__157333,G__157334));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157332) : tailrecursion.hoplon.div.call(null,G__157332));
})(),(function (){var G__157349 = cljs.core.PersistentArrayMap.EMPTY;
var G__157350 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__157352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157351,G__157352) : tailrecursion.hoplon.markdown.code_node.call(null,G__157351,G__157352));
})()," generates a tree-recursive process with redundancies similar to those in our first implementation of ",(function (){var G__157353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib"], null);
var G__157354 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157353,G__157354) : tailrecursion.hoplon.markdown.code_node.call(null,G__157353,G__157354));
})(),". (It will take quite a wile for that 292 to be computed.) On the other hand, it is not obvious hwo to design a better algorithm for computing the result, and we leave this problem as a challenge. The observation that a tree-recursive process may be highly inefficient but often easy to specify and understand has led people to propose that one could get the best of both worlds by designing a ",(function (){var G__157355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__157356 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smart compiler"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157355,G__157356) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157355,G__157356));
})()," that could transform tree-recusive procedures into more efficient procedures that compute the same result.",(function (){var G__157357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__157358 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One approach to coping with redundant computations is to arrange matters so that we automatically construct a table of values as they are computed. Each time we are asked to apply the procedure to some argument, we first look to see if the value is already stored in the table, in which case we avoid performing the redundant computation. This strategy, known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tabulation"], null)], 0))," or ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["memoization"], null)], 0)),", can be implemented in a straightforward way. Tabulation can sometimes be used to transform processes that require an exponential number of steps (such as ",(function (){var G__157359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__157360 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157359,G__157360) : tailrecursion.hoplon.markdown.code_node.call(null,G__157359,G__157360));
})(),") into processes whose space and time requirements grow linearly with the input. See exercise 3.27."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157357,G__157358) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157357,G__157358));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157349,G__157350) : tailrecursion.hoplon.markdown.para_node.call(null,G__157349,G__157350));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157016;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157015;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157014;
}})()], 0));
var G__153285 = "";
var G__153286 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"11-13"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(11)], null),(function (){var _STAR_references_STAR_157361 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157362 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157363 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157364 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157365 = cljs.core.PersistentArrayMap.EMPTY;
var G__157366 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A function \\(f\\) is defined by the rule that \\(f(n)=f(n-1)+2f(n-2)+3f(n-3)\\) if \\(n\\geq3\\). Write a procedure that computes \\(f\\) by means of a recursive process. Write a procedure that computes \\(f\\) by a means of an iterative process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157365,G__157366) : tailrecursion.hoplon.markdown.para_node.call(null,G__157365,G__157366));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157364;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157363;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157362;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157361;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_157367 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157368 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157369 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157370 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157371 = cljs.core.PersistentArrayMap.EMPTY;
var G__157372 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursive:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157371,G__157372) : tailrecursion.hoplon.markdown.para_node.call(null,G__157371,G__157372));
})(),(function (){var G__157373 = (function (){var G__157374 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157375 = (function (){var G__157376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157377 = "(";
var G__157378 = (function (){var G__157421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157422 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157421,G__157422) : tailrecursion.hoplon.span.call(null,G__157421,G__157422));
})();
var G__157379 = (function (){var G__157423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157424 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157423,G__157424) : tailrecursion.hoplon.span.call(null,G__157423,G__157424));
})();
var G__157380 = " [";
var G__157381 = (function (){var G__157425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157426 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157425,G__157426) : tailrecursion.hoplon.span.call(null,G__157425,G__157426));
})();
var G__157382 = "]\n  (";
var G__157383 = (function (){var G__157427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157428 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157427,G__157428) : tailrecursion.hoplon.span.call(null,G__157427,G__157428));
})();
var G__157384 = "(";
var G__157385 = (function (){var G__157429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157430 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157429,G__157430) : tailrecursion.hoplon.span.call(null,G__157429,G__157430));
})();
var G__157386 = (function (){var G__157431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157432 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157431,G__157432) : tailrecursion.hoplon.span.call(null,G__157431,G__157432));
})();
var G__157387 = " ";
var G__157388 = (function (){var G__157433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157434 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157433,G__157434) : tailrecursion.hoplon.span.call(null,G__157433,G__157434));
})();
var G__157389 = ")\n      ";
var G__157390 = (function (){var G__157435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157436 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157435,G__157436) : tailrecursion.hoplon.span.call(null,G__157435,G__157436));
})();
var G__157391 = "\n      (";
var G__157392 = (function (){var G__157437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157438 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157437,G__157438) : tailrecursion.hoplon.span.call(null,G__157437,G__157438));
})();
var G__157393 = "(";
var G__157394 = (function (){var G__157439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157440 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157439,G__157440) : tailrecursion.hoplon.span.call(null,G__157439,G__157440));
})();
var G__157395 = " (";
var G__157396 = (function (){var G__157441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157442 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157441,G__157442) : tailrecursion.hoplon.span.call(null,G__157441,G__157442));
})();
var G__157397 = (function (){var G__157443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157444 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157443,G__157444) : tailrecursion.hoplon.span.call(null,G__157443,G__157444));
})();
var G__157398 = " ";
var G__157399 = (function (){var G__157445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157446 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157445,G__157446) : tailrecursion.hoplon.span.call(null,G__157445,G__157446));
})();
var G__157400 = ")) \n         (";
var G__157401 = (function (){var G__157447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157448 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157447,G__157448) : tailrecursion.hoplon.span.call(null,G__157447,G__157448));
})();
var G__157402 = (function (){var G__157449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157450 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157449,G__157450) : tailrecursion.hoplon.span.call(null,G__157449,G__157450));
})();
var G__157403 = " (";
var G__157404 = (function (){var G__157451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157452 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157451,G__157452) : tailrecursion.hoplon.span.call(null,G__157451,G__157452));
})();
var G__157405 = " (";
var G__157406 = (function (){var G__157453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157454 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157453,G__157454) : tailrecursion.hoplon.span.call(null,G__157453,G__157454));
})();
var G__157407 = (function (){var G__157455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157456 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157455,G__157456) : tailrecursion.hoplon.span.call(null,G__157455,G__157456));
})();
var G__157408 = " ";
var G__157409 = (function (){var G__157457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157458 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157457,G__157458) : tailrecursion.hoplon.span.call(null,G__157457,G__157458));
})();
var G__157410 = "))) \n         (";
var G__157411 = (function (){var G__157459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157460 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157459,G__157460) : tailrecursion.hoplon.span.call(null,G__157459,G__157460));
})();
var G__157412 = (function (){var G__157461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157462 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157461,G__157462) : tailrecursion.hoplon.span.call(null,G__157461,G__157462));
})();
var G__157413 = " (";
var G__157414 = (function (){var G__157463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157464 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157463,G__157464) : tailrecursion.hoplon.span.call(null,G__157463,G__157464));
})();
var G__157415 = " (";
var G__157416 = (function (){var G__157465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157466 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157465,G__157466) : tailrecursion.hoplon.span.call(null,G__157465,G__157466));
})();
var G__157417 = (function (){var G__157467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157468 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157467,G__157468) : tailrecursion.hoplon.span.call(null,G__157467,G__157468));
})();
var G__157418 = " ";
var G__157419 = (function (){var G__157469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157470 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157469,G__157470) : tailrecursion.hoplon.span.call(null,G__157469,G__157470));
})();
var G__157420 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__157376,G__157377,G__157378,G__157379,G__157380,G__157381,G__157382,G__157383,G__157384,G__157385,G__157386,G__157387,G__157388,G__157389,G__157390,G__157391,G__157392,G__157393,G__157394,G__157395,G__157396,G__157397,G__157398,G__157399,G__157400,G__157401,G__157402,G__157403,G__157404,G__157405,G__157406,G__157407,G__157408,G__157409,G__157410,G__157411,G__157412,G__157413,G__157414,G__157415,G__157416,G__157417,G__157418,G__157419,G__157420) : tailrecursion.hoplon.pre.call(null,G__157376,G__157377,G__157378,G__157379,G__157380,G__157381,G__157382,G__157383,G__157384,G__157385,G__157386,G__157387,G__157388,G__157389,G__157390,G__157391,G__157392,G__157393,G__157394,G__157395,G__157396,G__157397,G__157398,G__157399,G__157400,G__157401,G__157402,G__157403,G__157404,G__157405,G__157406,G__157407,G__157408,G__157409,G__157410,G__157411,G__157412,G__157413,G__157414,G__157415,G__157416,G__157417,G__157418,G__157419,G__157420));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157374,G__157375) : tailrecursion.hoplon.div.call(null,G__157374,G__157375));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157373) : tailrecursion.hoplon.div.call(null,G__157373));
})(),(function (){var G__157471 = cljs.core.PersistentArrayMap.EMPTY;
var G__157472 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Iterative:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157471,G__157472) : tailrecursion.hoplon.markdown.para_node.call(null,G__157471,G__157472));
})(),(function (){var G__157473 = (function (){var G__157474 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157475 = (function (){var G__157476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157477 = "(";
var G__157478 = (function (){var G__157544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157545 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157544,G__157545) : tailrecursion.hoplon.span.call(null,G__157544,G__157545));
})();
var G__157479 = (function (){var G__157546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157547 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157546,G__157547) : tailrecursion.hoplon.span.call(null,G__157546,G__157547));
})();
var G__157480 = " [";
var G__157481 = (function (){var G__157548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157549 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157548,G__157549) : tailrecursion.hoplon.span.call(null,G__157548,G__157549));
})();
var G__157482 = " ";
var G__157483 = (function (){var G__157550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157551 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157550,G__157551) : tailrecursion.hoplon.span.call(null,G__157550,G__157551));
})();
var G__157484 = " ";
var G__157485 = (function (){var G__157552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157553 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157552,G__157553) : tailrecursion.hoplon.span.call(null,G__157552,G__157553));
})();
var G__157486 = " ";
var G__157487 = (function (){var G__157554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157555 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157554,G__157555) : tailrecursion.hoplon.span.call(null,G__157554,G__157555));
})();
var G__157488 = "]\n  (";
var G__157489 = (function (){var G__157556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157557 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157556,G__157557) : tailrecursion.hoplon.span.call(null,G__157556,G__157557));
})();
var G__157490 = "(";
var G__157491 = (function (){var G__157558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157559 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157558,G__157559) : tailrecursion.hoplon.span.call(null,G__157558,G__157559));
})();
var G__157492 = (function (){var G__157560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157561 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157560,G__157561) : tailrecursion.hoplon.span.call(null,G__157560,G__157561));
})();
var G__157493 = " ";
var G__157494 = (function (){var G__157562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157563 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157562,G__157563) : tailrecursion.hoplon.span.call(null,G__157562,G__157563));
})();
var G__157495 = ")\n      ";
var G__157496 = (function (){var G__157564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157565 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157564,G__157565) : tailrecursion.hoplon.span.call(null,G__157564,G__157565));
})();
var G__157497 = "\n      (";
var G__157498 = (function (){var G__157566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157567 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157566,G__157567) : tailrecursion.hoplon.span.call(null,G__157566,G__157567));
})();
var G__157499 = " (";
var G__157500 = (function (){var G__157568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157569 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157568,G__157569) : tailrecursion.hoplon.span.call(null,G__157568,G__157569));
})();
var G__157501 = (function (){var G__157570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157571 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157570,G__157571) : tailrecursion.hoplon.span.call(null,G__157570,G__157571));
})();
var G__157502 = ") (";
var G__157503 = (function (){var G__157572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157573 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157572,G__157573) : tailrecursion.hoplon.span.call(null,G__157572,G__157573));
})();
var G__157504 = (function (){var G__157574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157575 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157574,G__157575) : tailrecursion.hoplon.span.call(null,G__157574,G__157575));
})();
var G__157505 = " (";
var G__157506 = (function (){var G__157576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157577 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157576,G__157577) : tailrecursion.hoplon.span.call(null,G__157576,G__157577));
})();
var G__157507 = (function (){var G__157578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157579 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157578,G__157579) : tailrecursion.hoplon.span.call(null,G__157578,G__157579));
})();
var G__157508 = " ";
var G__157509 = (function (){var G__157580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157581 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157580,G__157581) : tailrecursion.hoplon.span.call(null,G__157580,G__157581));
})();
var G__157510 = ") (";
var G__157511 = (function (){var G__157582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157583 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157582,G__157583) : tailrecursion.hoplon.span.call(null,G__157582,G__157583));
})();
var G__157512 = (function (){var G__157584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157585 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157584,G__157585) : tailrecursion.hoplon.span.call(null,G__157584,G__157585));
})();
var G__157513 = " ";
var G__157514 = (function (){var G__157586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157587 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157586,G__157587) : tailrecursion.hoplon.span.call(null,G__157586,G__157587));
})();
var G__157515 = ")) ";
var G__157516 = (function (){var G__157588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157589 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157588,G__157589) : tailrecursion.hoplon.span.call(null,G__157588,G__157589));
})();
var G__157517 = " ";
var G__157518 = (function (){var G__157590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157591 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157590,G__157591) : tailrecursion.hoplon.span.call(null,G__157590,G__157591));
})();
var G__157519 = ")))\n(";
var G__157520 = (function (){var G__157592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157593 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157592,G__157593) : tailrecursion.hoplon.span.call(null,G__157592,G__157593));
})();
var G__157521 = (function (){var G__157594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157595 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157594,G__157595) : tailrecursion.hoplon.span.call(null,G__157594,G__157595));
})();
var G__157522 = " [";
var G__157523 = (function (){var G__157596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157597 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157596,G__157597) : tailrecursion.hoplon.span.call(null,G__157596,G__157597));
})();
var G__157524 = "]\n  (";
var G__157525 = (function (){var G__157598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157599 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157598,G__157599) : tailrecursion.hoplon.span.call(null,G__157598,G__157599));
})();
var G__157526 = "(";
var G__157527 = (function (){var G__157600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157601 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157600,G__157601) : tailrecursion.hoplon.span.call(null,G__157600,G__157601));
})();
var G__157528 = (function (){var G__157602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157603 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157602,G__157603) : tailrecursion.hoplon.span.call(null,G__157602,G__157603));
})();
var G__157529 = " ";
var G__157530 = (function (){var G__157604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157605 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157604,G__157605) : tailrecursion.hoplon.span.call(null,G__157604,G__157605));
})();
var G__157531 = ")\n      ";
var G__157532 = (function (){var G__157606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157607 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157606,G__157607) : tailrecursion.hoplon.span.call(null,G__157606,G__157607));
})();
var G__157533 = "\n      (";
var G__157534 = (function (){var G__157608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157609 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157608,G__157609) : tailrecursion.hoplon.span.call(null,G__157608,G__157609));
})();
var G__157535 = " ";
var G__157536 = (function (){var G__157610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157611 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157610,G__157611) : tailrecursion.hoplon.span.call(null,G__157610,G__157611));
})();
var G__157537 = " ";
var G__157538 = (function (){var G__157612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157613 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157612,G__157613) : tailrecursion.hoplon.span.call(null,G__157612,G__157613));
})();
var G__157539 = " ";
var G__157540 = (function (){var G__157614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157615 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157614,G__157615) : tailrecursion.hoplon.span.call(null,G__157614,G__157615));
})();
var G__157541 = " ";
var G__157542 = (function (){var G__157616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157617 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157616,G__157617) : tailrecursion.hoplon.span.call(null,G__157616,G__157617));
})();
var G__157543 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68(G__157476,G__157477,G__157478,G__157479,G__157480,G__157481,G__157482,G__157483,G__157484,G__157485,G__157486,G__157487,G__157488,G__157489,G__157490,G__157491,G__157492,G__157493,G__157494,G__157495,G__157496,G__157497,G__157498,G__157499,G__157500,G__157501,G__157502,G__157503,G__157504,G__157505,G__157506,G__157507,G__157508,G__157509,G__157510,G__157511,G__157512,G__157513,G__157514,G__157515,G__157516,G__157517,G__157518,G__157519,G__157520,G__157521,G__157522,G__157523,G__157524,G__157525,G__157526,G__157527,G__157528,G__157529,G__157530,G__157531,G__157532,G__157533,G__157534,G__157535,G__157536,G__157537,G__157538,G__157539,G__157540,G__157541,G__157542,G__157543) : tailrecursion.hoplon.pre.call(null,G__157476,G__157477,G__157478,G__157479,G__157480,G__157481,G__157482,G__157483,G__157484,G__157485,G__157486,G__157487,G__157488,G__157489,G__157490,G__157491,G__157492,G__157493,G__157494,G__157495,G__157496,G__157497,G__157498,G__157499,G__157500,G__157501,G__157502,G__157503,G__157504,G__157505,G__157506,G__157507,G__157508,G__157509,G__157510,G__157511,G__157512,G__157513,G__157514,G__157515,G__157516,G__157517,G__157518,G__157519,G__157520,G__157521,G__157522,G__157523,G__157524,G__157525,G__157526,G__157527,G__157528,G__157529,G__157530,G__157531,G__157532,G__157533,G__157534,G__157535,G__157536,G__157537,G__157538,G__157539,G__157540,G__157541,G__157542,G__157543));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157474,G__157475) : tailrecursion.hoplon.div.call(null,G__157474,G__157475));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157473) : tailrecursion.hoplon.div.call(null,G__157473));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157370;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157369;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157368;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157367;
}})()], 0))], 0)),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(12)], null),(function (){var _STAR_references_STAR_157618 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157619 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157620 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157621 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157622 = cljs.core.PersistentArrayMap.EMPTY;
var G__157623 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following patter is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pascal",(function (){var G__157624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157625 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157624,G__157625) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157624,G__157625));
})(),"s Triangle"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157622,G__157623) : tailrecursion.hoplon.markdown.para_node.call(null,G__157622,G__157623));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157621;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157620;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157619;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157618;
}})(),content.sicp.book_data.image.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$src,"img/sicp/exercise1_12.gif"], null)], 0)),(function (){var _STAR_references_STAR_157626 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157627 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157628 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157629 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157630 = cljs.core.PersistentArrayMap.EMPTY;
var G__157631 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The numbers at the edge of the triangle are all 1, and each number inside the triangle is the sum of the two numbers above it.",(function (){var G__157632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__157633 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The elements of Pascal",(function (){var G__157634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157634,G__157635) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157634,G__157635));
})(),"s triangle are called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binomial coefficients"], null)], 0)),", because the \\(n\\)th row consists of the coefficients of the terms in the expansion of \\((x + y)^n\\). This pattern for computing the coefficients appeared in Blaise Pascal",(function (){var G__157636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157636,G__157637) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157636,G__157637));
})(),"s 1653 seminal work on probability theory, ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Trait\u00E9 du triangle arithm\u00E9tique"], null)], 0)),". According to Knuth (1973), the same pattern appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Szu-yuen Y\u00FC-chien"], null)], 0))," (",(function (){var G__157638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__157639 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Precious Mirror of the Four Elements"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157638,G__157639) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157638,G__157639));
})(),"), published by the Chinese mathematician Chu Shih-chieh in 1303, in the works of the twelfth-century Persian poet and mathematician Omar Khayyam, and in the works of the twelfth-century Hindu mathematician Bh\u00E1scara \u00C1ch\u00E1rya."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157632,G__157633) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157632,G__157633));
})()," Write a procedure that computes elements of Pascal",(function (){var G__157640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157641 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157640,G__157641) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157640,G__157641));
})(),"s Triangle by means of a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157630,G__157631) : tailrecursion.hoplon.markdown.para_node.call(null,G__157630,G__157631));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157629;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157628;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157627;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157626;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_157642 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157643 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157644 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157645 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157646 = (function (){var G__157647 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157648 = (function (){var G__157649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157650 = "(";
var G__157651 = (function (){var G__157718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157719 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157718,G__157719) : tailrecursion.hoplon.span.call(null,G__157718,G__157719));
})();
var G__157652 = (function (){var G__157720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157721 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157720,G__157721) : tailrecursion.hoplon.span.call(null,G__157720,G__157721));
})();
var G__157653 = " [";
var G__157654 = (function (){var G__157722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157723 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157722,G__157723) : tailrecursion.hoplon.span.call(null,G__157722,G__157723));
})();
var G__157655 = " ";
var G__157656 = (function (){var G__157724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157725 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157724,G__157725) : tailrecursion.hoplon.span.call(null,G__157724,G__157725));
})();
var G__157657 = "]\n  (";
var G__157658 = (function (){var G__157726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157727 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157726,G__157727) : tailrecursion.hoplon.span.call(null,G__157726,G__157727));
})();
var G__157659 = "(";
var G__157660 = (function (){var G__157728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157729 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157728,G__157729) : tailrecursion.hoplon.span.call(null,G__157728,G__157729));
})();
var G__157661 = "(";
var G__157662 = (function (){var G__157730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157731 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157730,G__157731) : tailrecursion.hoplon.span.call(null,G__157730,G__157731));
})();
var G__157663 = (function (){var G__157732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157733 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157732,G__157733) : tailrecursion.hoplon.span.call(null,G__157732,G__157733));
})();
var G__157664 = " ";
var G__157665 = (function (){var G__157734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157735 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157734,G__157735) : tailrecursion.hoplon.span.call(null,G__157734,G__157735));
})();
var G__157666 = ") (";
var G__157667 = (function (){var G__157736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157737 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157736,G__157737) : tailrecursion.hoplon.span.call(null,G__157736,G__157737));
})();
var G__157668 = (function (){var G__157738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157739 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157738,G__157739) : tailrecursion.hoplon.span.call(null,G__157738,G__157739));
})();
var G__157669 = " ";
var G__157670 = (function (){var G__157740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157741 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157740,G__157741) : tailrecursion.hoplon.span.call(null,G__157740,G__157741));
})();
var G__157671 = ") (";
var G__157672 = (function (){var G__157742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157743 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157742,G__157743) : tailrecursion.hoplon.span.call(null,G__157742,G__157743));
})();
var G__157673 = (function (){var G__157744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157745 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157744,G__157745) : tailrecursion.hoplon.span.call(null,G__157744,G__157745));
})();
var G__157674 = " ";
var G__157675 = (function (){var G__157746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157747 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157746,G__157747) : tailrecursion.hoplon.span.call(null,G__157746,G__157747));
})();
var G__157676 = ")) ";
var G__157677 = (function (){var G__157748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157749 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157748,G__157749) : tailrecursion.hoplon.span.call(null,G__157748,G__157749));
})();
var G__157678 = "\n        (";
var G__157679 = (function (){var G__157750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157751 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157750,G__157751) : tailrecursion.hoplon.span.call(null,G__157750,G__157751));
})();
var G__157680 = "(";
var G__157681 = (function (){var G__157752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157753 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157752,G__157753) : tailrecursion.hoplon.span.call(null,G__157752,G__157753));
})();
var G__157682 = (function (){var G__157754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157755 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157754,G__157755) : tailrecursion.hoplon.span.call(null,G__157754,G__157755));
})();
var G__157683 = " ";
var G__157684 = (function (){var G__157756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157757 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157756,G__157757) : tailrecursion.hoplon.span.call(null,G__157756,G__157757));
})();
var G__157685 = ") (";
var G__157686 = (function (){var G__157758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157759 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157758,G__157759) : tailrecursion.hoplon.span.call(null,G__157758,G__157759));
})();
var G__157687 = (function (){var G__157760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157761 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157760,G__157761) : tailrecursion.hoplon.span.call(null,G__157760,G__157761));
})();
var G__157688 = " ";
var G__157689 = (function (){var G__157762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157763 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157762,G__157763) : tailrecursion.hoplon.span.call(null,G__157762,G__157763));
})();
var G__157690 = ")) ";
var G__157691 = (function (){var G__157764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157765 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157764,G__157765) : tailrecursion.hoplon.span.call(null,G__157764,G__157765));
})();
var G__157692 = "\n        ";
var G__157693 = (function (){var G__157766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157767 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157766,G__157767) : tailrecursion.hoplon.span.call(null,G__157766,G__157767));
})();
var G__157694 = " (";
var G__157695 = (function (){var G__157768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157769 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157768,G__157769) : tailrecursion.hoplon.span.call(null,G__157768,G__157769));
})();
var G__157696 = "(";
var G__157697 = (function (){var G__157770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157771 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157770,G__157771) : tailrecursion.hoplon.span.call(null,G__157770,G__157771));
})();
var G__157698 = " (";
var G__157699 = (function (){var G__157772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157773 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157772,G__157773) : tailrecursion.hoplon.span.call(null,G__157772,G__157773));
})();
var G__157700 = (function (){var G__157774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157775 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157774,G__157775) : tailrecursion.hoplon.span.call(null,G__157774,G__157775));
})();
var G__157701 = " ";
var G__157702 = (function (){var G__157776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157777 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157776,G__157777) : tailrecursion.hoplon.span.call(null,G__157776,G__157777));
})();
var G__157703 = ") (";
var G__157704 = (function (){var G__157778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157779 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157778,G__157779) : tailrecursion.hoplon.span.call(null,G__157778,G__157779));
})();
var G__157705 = (function (){var G__157780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157781 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157780,G__157781) : tailrecursion.hoplon.span.call(null,G__157780,G__157781));
})();
var G__157706 = " ";
var G__157707 = (function (){var G__157782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157783 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157782,G__157783) : tailrecursion.hoplon.span.call(null,G__157782,G__157783));
})();
var G__157708 = "))\n                 (";
var G__157709 = (function (){var G__157784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157785 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157784,G__157785) : tailrecursion.hoplon.span.call(null,G__157784,G__157785));
})();
var G__157710 = " (";
var G__157711 = (function (){var G__157786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157787 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157786,G__157787) : tailrecursion.hoplon.span.call(null,G__157786,G__157787));
})();
var G__157712 = (function (){var G__157788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157789 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157788,G__157789) : tailrecursion.hoplon.span.call(null,G__157788,G__157789));
})();
var G__157713 = " ";
var G__157714 = (function (){var G__157790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157791 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157790,G__157791) : tailrecursion.hoplon.span.call(null,G__157790,G__157791));
})();
var G__157715 = ") ";
var G__157716 = (function (){var G__157792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157793 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157792,G__157793) : tailrecursion.hoplon.span.call(null,G__157792,G__157793));
})();
var G__157717 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__157649,G__157650,G__157651,G__157652,G__157653,G__157654,G__157655,G__157656,G__157657,G__157658,G__157659,G__157660,G__157661,G__157662,G__157663,G__157664,G__157665,G__157666,G__157667,G__157668,G__157669,G__157670,G__157671,G__157672,G__157673,G__157674,G__157675,G__157676,G__157677,G__157678,G__157679,G__157680,G__157681,G__157682,G__157683,G__157684,G__157685,G__157686,G__157687,G__157688,G__157689,G__157690,G__157691,G__157692,G__157693,G__157694,G__157695,G__157696,G__157697,G__157698,G__157699,G__157700,G__157701,G__157702,G__157703,G__157704,G__157705,G__157706,G__157707,G__157708,G__157709,G__157710,G__157711,G__157712,G__157713,G__157714,G__157715,G__157716,G__157717) : tailrecursion.hoplon.pre.call(null,G__157649,G__157650,G__157651,G__157652,G__157653,G__157654,G__157655,G__157656,G__157657,G__157658,G__157659,G__157660,G__157661,G__157662,G__157663,G__157664,G__157665,G__157666,G__157667,G__157668,G__157669,G__157670,G__157671,G__157672,G__157673,G__157674,G__157675,G__157676,G__157677,G__157678,G__157679,G__157680,G__157681,G__157682,G__157683,G__157684,G__157685,G__157686,G__157687,G__157688,G__157689,G__157690,G__157691,G__157692,G__157693,G__157694,G__157695,G__157696,G__157697,G__157698,G__157699,G__157700,G__157701,G__157702,G__157703,G__157704,G__157705,G__157706,G__157707,G__157708,G__157709,G__157710,G__157711,G__157712,G__157713,G__157714,G__157715,G__157716,G__157717));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157647,G__157648) : tailrecursion.hoplon.div.call(null,G__157647,G__157648));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157646) : tailrecursion.hoplon.div.call(null,G__157646));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157645;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157644;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157643;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157642;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(13)], null),(function (){var _STAR_references_STAR_157794 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157795 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157796 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157797 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157798 = cljs.core.PersistentArrayMap.EMPTY;
var G__157799 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Prove that \\(Fib(n)\\) is the closest integer to \\(\\phi^n/\\sqrt5\\), where \\(\\phi=\\left(1+\\sqrt5\\right)/2\\). Hint: let \\(\\psi=\\left(1-\\sqrt5\\right)/2\\) Use induction and the definition of the Fibonacci numbers (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/2",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),") to prove that \\(Fib(n)=\\left(\\phi^n-\\psi^n\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157798,G__157799) : tailrecursion.hoplon.markdown.para_node.call(null,G__157798,G__157799));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157797;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157796;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157795;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157794;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_157800 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157801 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157802 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157803 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157804 = cljs.core.PersistentArrayMap.EMPTY;
var G__157805 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__157806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__157807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157806,G__157807) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157806,G__157807));
})(),"s pick a natural number \\(n\\) and state our inductive hypothesis:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157804,G__157805) : tailrecursion.hoplon.markdown.para_node.call(null,G__157804,G__157805));
})(),(function (){var G__157808 = cljs.core.PersistentArrayMap.EMPTY;
var G__157809 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assume that for any \\(k< n\\), \\(Fib(k)=\\left(\\phi^k-\\psi^k\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157808,G__157809) : tailrecursion.hoplon.markdown.para_node.call(null,G__157808,G__157809));
})(),(function (){var G__157810 = cljs.core.PersistentArrayMap.EMPTY;
var G__157811 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 1: \\(n=0\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157810,G__157811) : tailrecursion.hoplon.markdown.para_node.call(null,G__157810,G__157811));
})(),(function (){var G__157812 = cljs.core.PersistentArrayMap.EMPTY;
var G__157813 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then note: \\( Fib(0)= 0 =\\frac{1-1}{\\sqrt5}=\\frac{\\phi^0-\\psi^0}{\\sqrt5}\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157812,G__157813) : tailrecursion.hoplon.markdown.para_node.call(null,G__157812,G__157813));
})(),(function (){var G__157814 = cljs.core.PersistentArrayMap.EMPTY;
var G__157815 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 2: \\( n = 1\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157814,G__157815) : tailrecursion.hoplon.markdown.para_node.call(null,G__157814,G__157815));
})(),(function (){var G__157816 = cljs.core.PersistentArrayMap.EMPTY;
var G__157817 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then \\(\\frac{\\phi^1-\\psi^1}{\\sqrt5} =\\frac{\\left(\\frac{1+\\sqrt5}{2}\\right)^1-\\left(\\frac{1-\\sqrt5}{2}\\right)^1}{\\sqrt5} =\\frac{\\sqrt5}{\\sqrt5}= 1= Fib(1)\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157816,G__157817) : tailrecursion.hoplon.markdown.para_node.call(null,G__157816,G__157817));
})(),(function (){var G__157818 = cljs.core.PersistentArrayMap.EMPTY;
var G__157819 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Our last case is if \\(n > 1\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157818,G__157819) : tailrecursion.hoplon.markdown.para_node.call(null,G__157818,G__157819));
})(),(function (){var G__157820 = cljs.core.PersistentArrayMap.EMPTY;
var G__157821 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, $$\\frac{\\phi^n-\\psi^n}{\\sqrt5} =\\frac{\\phi^{n-2}\\phi^2-\\psi^{n-2}\\psi^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157820,G__157821) : tailrecursion.hoplon.markdown.para_node.call(null,G__157820,G__157821));
})(),(function (){var G__157822 = cljs.core.PersistentArrayMap.EMPTY;
var G__157823 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)^2-\\psi^{n-2}\\left(\\frac{1-\\sqrt5}{2}\\right)^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157822,G__157823) : tailrecursion.hoplon.markdown.para_node.call(null,G__157822,G__157823));
})(),(function (){var G__157824 = cljs.core.PersistentArrayMap.EMPTY;
var G__157825 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{6+2\\sqrt5}{4}\\right)-\\psi^{n-2}\\left(\\frac{6-2\\sqrt5}{4}\\right)}{\\sqrt5}$$ "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157824,G__157825) : tailrecursion.hoplon.markdown.para_node.call(null,G__157824,G__157825));
})(),(function (){var G__157826 = cljs.core.PersistentArrayMap.EMPTY;
var G__157827 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}-\\psi^{n-2}}{\\sqrt5}+\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)-\\psi^{n-2}\\left(\\frac{1-2\\sqrt5}{2}\\right)}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157826,G__157827) : tailrecursion.hoplon.markdown.para_node.call(null,G__157826,G__157827));
})(),(function (){var G__157828 = cljs.core.PersistentArrayMap.EMPTY;
var G__157829 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+\\frac{\\phi^{n-1}-\\psi^{n-1}}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157828,G__157829) : tailrecursion.hoplon.markdown.para_node.call(null,G__157828,G__157829));
})(),(function (){var G__157830 = cljs.core.PersistentArrayMap.EMPTY;
var G__157831 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+Fib(n-1)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157830,G__157831) : tailrecursion.hoplon.markdown.para_node.call(null,G__157830,G__157831));
})(),(function (){var G__157832 = cljs.core.PersistentArrayMap.EMPTY;
var G__157833 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157832,G__157833) : tailrecursion.hoplon.markdown.para_node.call(null,G__157832,G__157833));
})(),(function (){var G__157834 = cljs.core.PersistentArrayMap.EMPTY;
var G__157835 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in general, \\(Fib(n)=\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157834,G__157835) : tailrecursion.hoplon.markdown.para_node.call(null,G__157834,G__157835));
})(),(function (){var G__157836 = cljs.core.PersistentArrayMap.EMPTY;
var G__157837 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, to prove that \\(Fib(n)\\) is the integer closest to \\(\\phi^n/\\sqrt5\\). First we note that since \\(\\psi^2< 0.4\\), \\(\\sqrt5>1\\) and \\(\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\) is an integer, we know for any \\(n\\geq2\\), "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157836,G__157837) : tailrecursion.hoplon.markdown.para_node.call(null,G__157836,G__157837));
})(),(function (){var G__157838 = cljs.core.PersistentArrayMap.EMPTY;
var G__157839 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left|\\frac{\\phi^n}{\\sqrt5}-Fib(n)\\right| =\\left|\\frac{\\phi^n}{\\sqrt5}-\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\right| =\\left|\\frac{\\psi^n}{\\sqrt5}\\right|< 0.4$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157838,G__157839) : tailrecursion.hoplon.markdown.para_node.call(null,G__157838,G__157839));
})(),(function (){var G__157840 = cljs.core.PersistentArrayMap.EMPTY;
var G__157841 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that the closest integer to \\(\\frac{\\phi^n}{\\sqrt5}\\) must be \\(Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157840,G__157841) : tailrecursion.hoplon.markdown.para_node.call(null,G__157840,G__157841));
})(),(function (){var G__157842 = cljs.core.PersistentArrayMap.EMPTY;
var G__157843 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for when \\(n< 2\\), we can check one by one."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157842,G__157843) : tailrecursion.hoplon.markdown.para_node.call(null,G__157842,G__157843));
})(),(function (){var G__157844 = cljs.core.PersistentArrayMap.EMPTY;
var G__157845 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n = 0\\): \\(\\frac{1}{\\sqrt5}< 0.45\\), so that the closest integer is 0 (\\(Fib(0)\\))."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157844,G__157845) : tailrecursion.hoplon.markdown.para_node.call(null,G__157844,G__157845));
})(),(function (){var G__157846 = cljs.core.PersistentArrayMap.EMPTY;
var G__157847 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n=1\\): \\(\\frac{\\frac{1+\\sqrt5}{2}}{\\sqrt5}\\approx0.72\\), so that the closest integer is \\(Fib(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157846,G__157847) : tailrecursion.hoplon.markdown.para_node.call(null,G__157846,G__157847));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157803;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157802;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157801;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157800;
}})()], 0))], 0))], 0));
var G__153287 = "";
var G__153288 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Orders of Growth"], null),(function (){var _STAR_references_STAR_157848 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157849 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157850 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157851 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157852 = cljs.core.PersistentArrayMap.EMPTY;
var G__157853 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The previous examples illustrate that processes can differ considerably in the rates at which they consume computational resources. One convenient way to describe this difference is to use the notion of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["order of growth"], null)], 0))," to obtain a gross measure of the resources required by a process as the inputs become larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157852,G__157853) : tailrecursion.hoplon.markdown.para_node.call(null,G__157852,G__157853));
})(),(function (){var G__157854 = cljs.core.PersistentArrayMap.EMPTY;
var G__157855 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let \\(n\\) be a parameter that measures the size of the problem, and let \\(R(n)\\) be the amount of resources the process requires for a problem of size \\(n\\). In our previous examples we took \\(n\\) to be the number for which a given function is to be computed, but there are other possibilities. For instance, if our goal is to compute an approximation to the square root of a number, we might take \\(n\\) to be the number of digits accuracy required. For matrix multiplication we might take \\(n\\) to be the number of rows in the matrices. In general there are a number of properties of the problem with respect to which it will be desirable to analyze a given process. Similarly, \\(R(n)\\) might measure the number of internal storage registers used, the number of elementary machine operations performed, and so on. In computers that do only a fixed number of operations at a time, the time required will be proportional to the number of elementary machine operations performed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157854,G__157855) : tailrecursion.hoplon.markdown.para_node.call(null,G__157854,G__157855));
})(),(function (){var G__157856 = cljs.core.PersistentArrayMap.EMPTY;
var G__157857 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We say \\(R(n)\\) has order of growth \\(\\Theta(f(n))\\), written \\(R(n)=\\Theta(f(n))\\) (pronounced ",(function (){var G__157858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__157859 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["theta of \\(f(n)\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157858,G__157859) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157858,G__157859));
})(),"), if there are positive constants \\(k_1\\) and \\(k_2\\) independent of \\(n\\) such that"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157856,G__157857) : tailrecursion.hoplon.markdown.para_node.call(null,G__157856,G__157857));
})(),(function (){var G__157860 = cljs.core.PersistentArrayMap.EMPTY;
var G__157861 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$k_1f(n)\\leq R(n)\\leq k_2f(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157860,G__157861) : tailrecursion.hoplon.markdown.para_node.call(null,G__157860,G__157861));
})(),(function (){var G__157862 = cljs.core.PersistentArrayMap.EMPTY;
var G__157863 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for any sufficiently large value of \\(n\\). (In other words, for large \\(n\\), the value of \\(R(n)\\) is sandwiched between \\(k_1f(n)\\) and \\(k_2f(n)\\).)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157862,G__157863) : tailrecursion.hoplon.markdown.para_node.call(null,G__157862,G__157863));
})(),(function (){var G__157864 = cljs.core.PersistentArrayMap.EMPTY;
var G__157865 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For instance, with the linear recursive process for computing factorial described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.1"], null)], 0))," the number of steps grows proportionally to the input \\(n\\). Thus, the steps required for this process grows as \\(\\Theta(n)\\). We also saw that the space required grows as \\(\\Theta(n)\\). For the iterative factorial, the number of steps is still \\(\\Theta(n)\\) but the space is \\(\\Theta(1)\\) ",(function (){var G__157866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__157867 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__157866,G__157867) : tailrecursion.hoplon.markdown.simple_node.call(null,G__157866,G__157867));
})()," that is, constant.",(function (){var G__157868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__157869 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These statements mask a great deal of oversimplification. For instance, if we count process steps as ",(function (){var G__157870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__157871 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["machine operations"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157870,G__157871) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157870,G__157871));
})()," we are making the assumption that the number of machine operations needed to perform, say, a multiplication is independent of the size of the numbers to be multiplied, which is false if the numbers are sufficiently large. Similar remarks hold for the estimates of space. Like the design and description of a process, the analysis of a process can be carried out at various levels of abstraction."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157868,G__157869) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157868,G__157869));
})()," The tree-recursive Fibonacci computation requires \\(\\Theta(\\phi^n)\\) steps and space \\(\\Theta(n)\\), where \\(\\phi\\) is the golden ratio described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157864,G__157865) : tailrecursion.hoplon.markdown.para_node.call(null,G__157864,G__157865));
})(),(function (){var G__157872 = cljs.core.PersistentArrayMap.EMPTY;
var G__157873 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Orders of growth provide only a crude description of the behavior of a process. For example, a process requiring \\(n^2\\) steps and a process requiring \\(1000n^2\\) steps and a process requiring \\(3n^2+10n+17\\) steps all have \\(\\Theta(n^2)\\) order of growth. On the other hand, order of growth provides a useful indication of how we may expect the behavior of the process to change as we change the size of the problem. For a \\(\\Theta(n)\\) (linear) process, doubling the size will roughly double the amount of resources used. For an exponential process, each increment in problem size will multiply the resource utilization by a constant factor. In the remainder of section 1.2 we will examine two algorithms whose order of growth is logarithmic, so that doubling the problem size increases the resource requirment by a constant amount."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157872,G__157873) : tailrecursion.hoplon.markdown.para_node.call(null,G__157872,G__157873));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157851;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157850;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157849;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157848;
}})()], 0));
var G__153289 = "";
var G__153290 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"14-15"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(14)], null),(function (){var _STAR_references_STAR_157874 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157875 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157876 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157877 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157878 = cljs.core.PersistentArrayMap.EMPTY;
var G__157879 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Draw the tree illustrating the process generated by the ",(function (){var G__157880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__157881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__157880,G__157881) : tailrecursion.hoplon.markdown.code_node.call(null,G__157880,G__157881));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0))," in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157878,G__157879) : tailrecursion.hoplon.markdown.para_node.call(null,G__157878,G__157879));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157877;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157876;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157875;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157874;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_157882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157884 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157885 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157886 = cljs.core.PersistentArrayMap.EMPTY;
var G__157887 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Things will go here (once I get this LaTeX thing all sorted out)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157886,G__157887) : tailrecursion.hoplon.markdown.para_node.call(null,G__157886,G__157887));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157885;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157884;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157882;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(15)], null),(function (){var _STAR_references_STAR_157888 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157889 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_157890 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_157891 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__157892 = cljs.core.PersistentArrayMap.EMPTY;
var G__157893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The sine of an angle (specified in radians) can be computed by making use of the approximation \\(\\sin x\\approx x\\) if \\(x\\) is sufficiently small, and the trigonometric identity"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157892,G__157893) : tailrecursion.hoplon.markdown.para_node.call(null,G__157892,G__157893));
})(),(function (){var G__157894 = cljs.core.PersistentArrayMap.EMPTY;
var G__157895 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\sin x = 3\\sin\\frac{x}{3}-4\\sin^3\\frac{x}{3}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157894,G__157895) : tailrecursion.hoplon.markdown.para_node.call(null,G__157894,G__157895));
})(),(function (){var G__157896 = cljs.core.PersistentArrayMap.EMPTY;
var G__157897 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to reduce the size of the argument of \\(\\sin\\). (For purposes of this exerise an angle is considered ",(function (){var G__157898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__157899 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sufficiently small"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__157898,G__157899) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__157898,G__157899));
})()," if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__157896,G__157897) : tailrecursion.hoplon.markdown.para_node.call(null,G__157896,G__157897));
})(),(function (){var G__157900 = (function (){var G__157901 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__157902 = (function (){var G__157903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__157904 = "(";
var G__157905 = (function (){var G__157964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157965 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157964,G__157965) : tailrecursion.hoplon.span.call(null,G__157964,G__157965));
})();
var G__157906 = (function (){var G__157966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157967 = "cub";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157966,G__157967) : tailrecursion.hoplon.span.call(null,G__157966,G__157967));
})();
var G__157907 = " [";
var G__157908 = (function (){var G__157968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157969 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157968,G__157969) : tailrecursion.hoplon.span.call(null,G__157968,G__157969));
})();
var G__157909 = "] (";
var G__157910 = (function (){var G__157970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157971 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157970,G__157971) : tailrecursion.hoplon.span.call(null,G__157970,G__157971));
})();
var G__157911 = (function (){var G__157972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157973 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157972,G__157973) : tailrecursion.hoplon.span.call(null,G__157972,G__157973));
})();
var G__157912 = " ";
var G__157913 = (function (){var G__157974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157975 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157974,G__157975) : tailrecursion.hoplon.span.call(null,G__157974,G__157975));
})();
var G__157914 = " ";
var G__157915 = (function (){var G__157976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157977 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157976,G__157977) : tailrecursion.hoplon.span.call(null,G__157976,G__157977));
})();
var G__157916 = "))\n(";
var G__157917 = (function (){var G__157978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__157979 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157978,G__157979) : tailrecursion.hoplon.span.call(null,G__157978,G__157979));
})();
var G__157918 = (function (){var G__157980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157981 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157980,G__157981) : tailrecursion.hoplon.span.call(null,G__157980,G__157981));
})();
var G__157919 = " [";
var G__157920 = (function (){var G__157982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157983 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157982,G__157983) : tailrecursion.hoplon.span.call(null,G__157982,G__157983));
})();
var G__157921 = "] (";
var G__157922 = (function (){var G__157984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157985 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157984,G__157985) : tailrecursion.hoplon.span.call(null,G__157984,G__157985));
})();
var G__157923 = "(";
var G__157924 = (function (){var G__157986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157987 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157986,G__157987) : tailrecursion.hoplon.span.call(null,G__157986,G__157987));
})();
var G__157925 = (function (){var G__157988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157989 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157988,G__157989) : tailrecursion.hoplon.span.call(null,G__157988,G__157989));
})();
var G__157926 = " ";
var G__157927 = (function (){var G__157990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157991 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157990,G__157991) : tailrecursion.hoplon.span.call(null,G__157990,G__157991));
})();
var G__157928 = ") (";
var G__157929 = (function (){var G__157992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__157993 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157992,G__157993) : tailrecursion.hoplon.span.call(null,G__157992,G__157993));
})();
var G__157930 = (function (){var G__157994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__157995 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157994,G__157995) : tailrecursion.hoplon.span.call(null,G__157994,G__157995));
})();
var G__157931 = " (";
var G__157932 = (function (){var G__157996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__157997 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157996,G__157997) : tailrecursion.hoplon.span.call(null,G__157996,G__157997));
})();
var G__157933 = " ";
var G__157934 = (function (){var G__157998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__157999 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__157998,G__157999) : tailrecursion.hoplon.span.call(null,G__157998,G__157999));
})();
var G__157935 = "))))\n(";
var G__157936 = (function (){var G__158000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158001 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158000,G__158001) : tailrecursion.hoplon.span.call(null,G__158000,G__158001));
})();
var G__157937 = (function (){var G__158002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158003 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158002,G__158003) : tailrecursion.hoplon.span.call(null,G__158002,G__158003));
})();
var G__157938 = " [";
var G__157939 = (function (){var G__158004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158005 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158004,G__158005) : tailrecursion.hoplon.span.call(null,G__158004,G__158005));
})();
var G__157940 = "]\n  (";
var G__157941 = (function (){var G__158006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158007 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158006,G__158007) : tailrecursion.hoplon.span.call(null,G__158006,G__158007));
})();
var G__157942 = "(";
var G__157943 = (function (){var G__158008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158009 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158008,G__158009) : tailrecursion.hoplon.span.call(null,G__158008,G__158009));
})();
var G__157944 = "(";
var G__157945 = (function (){var G__158010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158011 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158010,G__158011) : tailrecursion.hoplon.span.call(null,G__158010,G__158011));
})();
var G__157946 = "(";
var G__157947 = (function (){var G__158012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158013 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158012,G__158013) : tailrecursion.hoplon.span.call(null,G__158012,G__158013));
})();
var G__157948 = " ";
var G__157949 = (function (){var G__158014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158015 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158014,G__158015) : tailrecursion.hoplon.span.call(null,G__158014,G__158015));
})();
var G__157950 = ") ";
var G__157951 = (function (){var G__158016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158017 = "0.1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158016,G__158017) : tailrecursion.hoplon.span.call(null,G__158016,G__158017));
})();
var G__157952 = "))\n      ";
var G__157953 = (function (){var G__158018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158019 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158018,G__158019) : tailrecursion.hoplon.span.call(null,G__158018,G__158019));
})();
var G__157954 = "\n      (";
var G__157955 = (function (){var G__158020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158021 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158020,G__158021) : tailrecursion.hoplon.span.call(null,G__158020,G__158021));
})();
var G__157956 = " (";
var G__157957 = (function (){var G__158022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158023 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158022,G__158023) : tailrecursion.hoplon.span.call(null,G__158022,G__158023));
})();
var G__157958 = " (";
var G__157959 = (function (){var G__158024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158025 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158024,G__158025) : tailrecursion.hoplon.span.call(null,G__158024,G__158025));
})();
var G__157960 = (function (){var G__158026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158027 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158026,G__158027) : tailrecursion.hoplon.span.call(null,G__158026,G__158027));
})();
var G__157961 = " ";
var G__157962 = (function (){var G__158028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158029 = "3.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158028,G__158029) : tailrecursion.hoplon.span.call(null,G__158028,G__158029));
})();
var G__157963 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__157903,G__157904,G__157905,G__157906,G__157907,G__157908,G__157909,G__157910,G__157911,G__157912,G__157913,G__157914,G__157915,G__157916,G__157917,G__157918,G__157919,G__157920,G__157921,G__157922,G__157923,G__157924,G__157925,G__157926,G__157927,G__157928,G__157929,G__157930,G__157931,G__157932,G__157933,G__157934,G__157935,G__157936,G__157937,G__157938,G__157939,G__157940,G__157941,G__157942,G__157943,G__157944,G__157945,G__157946,G__157947,G__157948,G__157949,G__157950,G__157951,G__157952,G__157953,G__157954,G__157955,G__157956,G__157957,G__157958,G__157959,G__157960,G__157961,G__157962,G__157963) : tailrecursion.hoplon.pre.call(null,G__157903,G__157904,G__157905,G__157906,G__157907,G__157908,G__157909,G__157910,G__157911,G__157912,G__157913,G__157914,G__157915,G__157916,G__157917,G__157918,G__157919,G__157920,G__157921,G__157922,G__157923,G__157924,G__157925,G__157926,G__157927,G__157928,G__157929,G__157930,G__157931,G__157932,G__157933,G__157934,G__157935,G__157936,G__157937,G__157938,G__157939,G__157940,G__157941,G__157942,G__157943,G__157944,G__157945,G__157946,G__157947,G__157948,G__157949,G__157950,G__157951,G__157952,G__157953,G__157954,G__157955,G__157956,G__157957,G__157958,G__157959,G__157960,G__157961,G__157962,G__157963));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__157901,G__157902) : tailrecursion.hoplon.div.call(null,G__157901,G__157902));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__157900) : tailrecursion.hoplon.div.call(null,G__157900));
})(),(function (){var G__158030 = cljs.core.PersistentArrayMap.EMPTY;
var G__158031 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. How many times is the procedure \\(p\\) applied when ",(function (){var G__158032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(sine\n12.15)"], null);
var G__158033 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158032,G__158033) : tailrecursion.hoplon.markdown.code_node.call(null,G__158032,G__158033));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158030,G__158031) : tailrecursion.hoplon.markdown.para_node.call(null,G__158030,G__158031));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157891;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157890;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_157889;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_157888;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158034 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158035 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158036 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158037 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158038 = cljs.core.PersistentArrayMap.EMPTY;
var G__158039 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this we first realize that each iteration (until the angle \\(\\theta\\) is less than or equal to 0.1) divides the angle by three. Since this is applicative order, we know that each iteration will call ",(function (){var G__158040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"p"], null);
var G__158041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158040,G__158041) : tailrecursion.hoplon.markdown.code_node.call(null,G__158040,G__158041));
})()," exactly once. So this reduces to solving the equation,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158038,G__158039) : tailrecursion.hoplon.markdown.para_node.call(null,G__158038,G__158039));
})(),(function (){var G__158042 = cljs.core.PersistentArrayMap.EMPTY;
var G__158043 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\frac{12.15}{3^n}\\leq 0.1 \\iff n\\geq 4.37",(function (){var G__158044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__158045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158044,G__158045) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158044,G__158045));
})()," $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158042,G__158043) : tailrecursion.hoplon.markdown.para_node.call(null,G__158042,G__158043));
})(),(function (){var G__158046 = cljs.core.PersistentArrayMap.EMPTY;
var G__158047 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since we",(function (){var G__158048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158048,G__158049) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158048,G__158049));
})(),"re looking for an integer, we need \\(n=5\\). Hence, ",(function (){var G__158050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"p"], null);
var G__158051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158050,G__158051) : tailrecursion.hoplon.markdown.code_node.call(null,G__158050,G__158051));
})()," will be applied 5 times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158046,G__158047) : tailrecursion.hoplon.markdown.para_node.call(null,G__158046,G__158047));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158037;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158036;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158035;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158034;
}})()], 0)),"",(function (){var _STAR_references_STAR_158052 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158053 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158054 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158055 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158056 = cljs.core.PersistentArrayMap.EMPTY;
var G__158057 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in space and number of steps (as a function of \\(a\\)) used by the process generated by the ",(function (){var G__158058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sine"], null);
var G__158059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158058,G__158059) : tailrecursion.hoplon.markdown.code_node.call(null,G__158058,G__158059));
})()," procedure when ",(function (){var G__158060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(sine a)"], null);
var G__158061 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158060,G__158061) : tailrecursion.hoplon.markdown.code_node.call(null,G__158060,G__158061));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158056,G__158057) : tailrecursion.hoplon.markdown.para_node.call(null,G__158056,G__158057));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158055;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158054;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158053;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158052;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158062 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158063 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158064 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158065 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158066 = cljs.core.PersistentArrayMap.EMPTY;
var G__158067 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One could realize, just from noting that each step divides the argument by 3, that the order of growth in the number of steps required is logarithmic (doubling the argument only adds at most one more iteration, and hence a fixed number of steps)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158066,G__158067) : tailrecursion.hoplon.markdown.para_node.call(null,G__158066,G__158067));
})(),(function (){var G__158068 = cljs.core.PersistentArrayMap.EMPTY;
var G__158069 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as in the space required, it is also logarithmic because every time you triple the argument, you only add one more iteration."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158068,G__158069) : tailrecursion.hoplon.markdown.para_node.call(null,G__158068,G__158069));
})(),(function (){var G__158070 = cljs.core.PersistentArrayMap.EMPTY;
var G__158071 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So both have \\(\\Theta(\\log x)\\) order of growth."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158070,G__158071) : tailrecursion.hoplon.markdown.para_node.call(null,G__158070,G__158071));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158065;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158064;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158063;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158062;
}})()], 0))], 0))], 0));
var G__153291 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Exponentiation"], null),(function (){var _STAR_references_STAR_158072 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158073 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158074 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158075 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158076 = cljs.core.PersistentArrayMap.EMPTY;
var G__158077 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of computing the exponential of a given number. We would like a procedure that takes as arguments a base \\(b\\) and a positive integer exponent \\(n\\) and computes \\(b^n\\). One way to do this is via the recursive definition:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158076,G__158077) : tailrecursion.hoplon.markdown.para_node.call(null,G__158076,G__158077));
})(),(function (){var G__158078 = cljs.core.PersistentArrayMap.EMPTY;
var G__158079 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}b^n =& b\\cdot b^{n-1} \\\\ b^0=&1 \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158078,G__158079) : tailrecursion.hoplon.markdown.para_node.call(null,G__158078,G__158079));
})(),(function (){var G__158080 = cljs.core.PersistentArrayMap.EMPTY;
var G__158081 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which translates readily into the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158080,G__158081) : tailrecursion.hoplon.markdown.para_node.call(null,G__158080,G__158081));
})(),(function (){var G__158082 = (function (){var G__158083 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158084 = (function (){var G__158085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158086 = "(";
var G__158087 = (function (){var G__158116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158117 = "define";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158116,G__158117) : tailrecursion.hoplon.span.call(null,G__158116,G__158117));
})();
var G__158088 = " ";
var G__158089 = (function (){var G__158118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158119 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158118,G__158119) : tailrecursion.hoplon.span.call(null,G__158118,G__158119));
})();
var G__158090 = " [";
var G__158091 = (function (){var G__158120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158121 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158120,G__158121) : tailrecursion.hoplon.span.call(null,G__158120,G__158121));
})();
var G__158092 = " ";
var G__158093 = (function (){var G__158122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158123 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158122,G__158123) : tailrecursion.hoplon.span.call(null,G__158122,G__158123));
})();
var G__158094 = "]\n  (";
var G__158095 = (function (){var G__158124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158125 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158124,G__158125) : tailrecursion.hoplon.span.call(null,G__158124,G__158125));
})();
var G__158096 = "(";
var G__158097 = (function (){var G__158126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158127 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158126,G__158127) : tailrecursion.hoplon.span.call(null,G__158126,G__158127));
})();
var G__158098 = (function (){var G__158128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158129 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158128,G__158129) : tailrecursion.hoplon.span.call(null,G__158128,G__158129));
})();
var G__158099 = " ";
var G__158100 = (function (){var G__158130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158131 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158130,G__158131) : tailrecursion.hoplon.span.call(null,G__158130,G__158131));
})();
var G__158101 = ")\n      ";
var G__158102 = (function (){var G__158132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158133 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158132,G__158133) : tailrecursion.hoplon.span.call(null,G__158132,G__158133));
})();
var G__158103 = "\n      (";
var G__158104 = (function (){var G__158134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158135 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158134,G__158135) : tailrecursion.hoplon.span.call(null,G__158134,G__158135));
})();
var G__158105 = (function (){var G__158136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158137 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158136,G__158137) : tailrecursion.hoplon.span.call(null,G__158136,G__158137));
})();
var G__158106 = " (";
var G__158107 = (function (){var G__158138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158139 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158138,G__158139) : tailrecursion.hoplon.span.call(null,G__158138,G__158139));
})();
var G__158108 = " ";
var G__158109 = (function (){var G__158140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158141 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158140,G__158141) : tailrecursion.hoplon.span.call(null,G__158140,G__158141));
})();
var G__158110 = " (";
var G__158111 = (function (){var G__158142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158143 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158142,G__158143) : tailrecursion.hoplon.span.call(null,G__158142,G__158143));
})();
var G__158112 = (function (){var G__158144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158145 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158144,G__158145) : tailrecursion.hoplon.span.call(null,G__158144,G__158145));
})();
var G__158113 = " ";
var G__158114 = (function (){var G__158146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158147 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158146,G__158147) : tailrecursion.hoplon.span.call(null,G__158146,G__158147));
})();
var G__158115 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__158085,G__158086,G__158087,G__158088,G__158089,G__158090,G__158091,G__158092,G__158093,G__158094,G__158095,G__158096,G__158097,G__158098,G__158099,G__158100,G__158101,G__158102,G__158103,G__158104,G__158105,G__158106,G__158107,G__158108,G__158109,G__158110,G__158111,G__158112,G__158113,G__158114,G__158115) : tailrecursion.hoplon.pre.call(null,G__158085,G__158086,G__158087,G__158088,G__158089,G__158090,G__158091,G__158092,G__158093,G__158094,G__158095,G__158096,G__158097,G__158098,G__158099,G__158100,G__158101,G__158102,G__158103,G__158104,G__158105,G__158106,G__158107,G__158108,G__158109,G__158110,G__158111,G__158112,G__158113,G__158114,G__158115));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158083,G__158084) : tailrecursion.hoplon.div.call(null,G__158083,G__158084));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158082) : tailrecursion.hoplon.div.call(null,G__158082));
})(),(function (){var G__158148 = cljs.core.PersistentArrayMap.EMPTY;
var G__158149 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is a linear recursive process, which requires \\(\\Theta(n)\\) steps and \\(\\Theta(n)\\) space. Just as with factorial, we can readily formulate an equivalent linear iteration:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158148,G__158149) : tailrecursion.hoplon.markdown.para_node.call(null,G__158148,G__158149));
})(),(function (){var G__158150 = (function (){var G__158151 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158152 = (function (){var G__158153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158154 = "(";
var G__158155 = (function (){var G__158170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158171 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158170,G__158171) : tailrecursion.hoplon.span.call(null,G__158170,G__158171));
})();
var G__158156 = (function (){var G__158172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158173 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158172,G__158173) : tailrecursion.hoplon.span.call(null,G__158172,G__158173));
})();
var G__158157 = " [";
var G__158158 = (function (){var G__158174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158175 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158174,G__158175) : tailrecursion.hoplon.span.call(null,G__158174,G__158175));
})();
var G__158159 = " ";
var G__158160 = (function (){var G__158176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158177 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158176,G__158177) : tailrecursion.hoplon.span.call(null,G__158176,G__158177));
})();
var G__158161 = "]\n  (";
var G__158162 = (function (){var G__158178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158179 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158178,G__158179) : tailrecursion.hoplon.span.call(null,G__158178,G__158179));
})();
var G__158163 = " ";
var G__158164 = (function (){var G__158180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158181 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158180,G__158181) : tailrecursion.hoplon.span.call(null,G__158180,G__158181));
})();
var G__158165 = " ";
var G__158166 = (function (){var G__158182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158183 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158182,G__158183) : tailrecursion.hoplon.span.call(null,G__158182,G__158183));
})();
var G__158167 = " ";
var G__158168 = (function (){var G__158184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158185 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158184,G__158185) : tailrecursion.hoplon.span.call(null,G__158184,G__158185));
})();
var G__158169 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__158153,G__158154,G__158155,G__158156,G__158157,G__158158,G__158159,G__158160,G__158161,G__158162,G__158163,G__158164,G__158165,G__158166,G__158167,G__158168,G__158169) : tailrecursion.hoplon.pre.call(null,G__158153,G__158154,G__158155,G__158156,G__158157,G__158158,G__158159,G__158160,G__158161,G__158162,G__158163,G__158164,G__158165,G__158166,G__158167,G__158168,G__158169));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158151,G__158152) : tailrecursion.hoplon.div.call(null,G__158151,G__158152));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158150) : tailrecursion.hoplon.div.call(null,G__158150));
})(),(function (){var G__158186 = cljs.core.PersistentArrayMap.EMPTY;
var G__158187 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158186,G__158187) : tailrecursion.hoplon.markdown.para_node.call(null,G__158186,G__158187));
})(),(function (){var G__158188 = (function (){var G__158189 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158190 = (function (){var G__158191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158192 = "(";
var G__158193 = (function (){var G__158225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158226 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158225,G__158226) : tailrecursion.hoplon.span.call(null,G__158225,G__158226));
})();
var G__158194 = (function (){var G__158227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158228 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158227,G__158228) : tailrecursion.hoplon.span.call(null,G__158227,G__158228));
})();
var G__158195 = " [";
var G__158196 = (function (){var G__158229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158230 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158229,G__158230) : tailrecursion.hoplon.span.call(null,G__158229,G__158230));
})();
var G__158197 = " ";
var G__158198 = (function (){var G__158231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158232 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158231,G__158232) : tailrecursion.hoplon.span.call(null,G__158231,G__158232));
})();
var G__158199 = " ";
var G__158200 = (function (){var G__158233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158234 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158233,G__158234) : tailrecursion.hoplon.span.call(null,G__158233,G__158234));
})();
var G__158201 = "]\n  (";
var G__158202 = (function (){var G__158235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158236 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158235,G__158236) : tailrecursion.hoplon.span.call(null,G__158235,G__158236));
})();
var G__158203 = "(";
var G__158204 = (function (){var G__158237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158238 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158237,G__158238) : tailrecursion.hoplon.span.call(null,G__158237,G__158238));
})();
var G__158205 = (function (){var G__158239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158240 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158239,G__158240) : tailrecursion.hoplon.span.call(null,G__158239,G__158240));
})();
var G__158206 = " ";
var G__158207 = (function (){var G__158241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158242 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158241,G__158242) : tailrecursion.hoplon.span.call(null,G__158241,G__158242));
})();
var G__158208 = ")\n      ";
var G__158209 = (function (){var G__158243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158244 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158243,G__158244) : tailrecursion.hoplon.span.call(null,G__158243,G__158244));
})();
var G__158210 = "\n      (";
var G__158211 = (function (){var G__158245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158246 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158245,G__158246) : tailrecursion.hoplon.span.call(null,G__158245,G__158246));
})();
var G__158212 = " ";
var G__158213 = (function (){var G__158247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158248 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158247,G__158248) : tailrecursion.hoplon.span.call(null,G__158247,G__158248));
})();
var G__158214 = "\n                 (";
var G__158215 = (function (){var G__158249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158250 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158249,G__158250) : tailrecursion.hoplon.span.call(null,G__158249,G__158250));
})();
var G__158216 = (function (){var G__158251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158252 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158251,G__158252) : tailrecursion.hoplon.span.call(null,G__158251,G__158252));
})();
var G__158217 = " ";
var G__158218 = (function (){var G__158253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158254 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158253,G__158254) : tailrecursion.hoplon.span.call(null,G__158253,G__158254));
})();
var G__158219 = ")\n                 (";
var G__158220 = (function (){var G__158255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158256 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158255,G__158256) : tailrecursion.hoplon.span.call(null,G__158255,G__158256));
})();
var G__158221 = (function (){var G__158257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158258 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158257,G__158258) : tailrecursion.hoplon.span.call(null,G__158257,G__158258));
})();
var G__158222 = " ";
var G__158223 = (function (){var G__158259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158260 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158259,G__158260) : tailrecursion.hoplon.span.call(null,G__158259,G__158260));
})();
var G__158224 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__158191,G__158192,G__158193,G__158194,G__158195,G__158196,G__158197,G__158198,G__158199,G__158200,G__158201,G__158202,G__158203,G__158204,G__158205,G__158206,G__158207,G__158208,G__158209,G__158210,G__158211,G__158212,G__158213,G__158214,G__158215,G__158216,G__158217,G__158218,G__158219,G__158220,G__158221,G__158222,G__158223,G__158224) : tailrecursion.hoplon.pre.call(null,G__158191,G__158192,G__158193,G__158194,G__158195,G__158196,G__158197,G__158198,G__158199,G__158200,G__158201,G__158202,G__158203,G__158204,G__158205,G__158206,G__158207,G__158208,G__158209,G__158210,G__158211,G__158212,G__158213,G__158214,G__158215,G__158216,G__158217,G__158218,G__158219,G__158220,G__158221,G__158222,G__158223,G__158224));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158189,G__158190) : tailrecursion.hoplon.div.call(null,G__158189,G__158190));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158188) : tailrecursion.hoplon.div.call(null,G__158188));
})(),(function (){var G__158261 = cljs.core.PersistentArrayMap.EMPTY;
var G__158262 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This version requires \\(\\Theta(n)\\) steps and \\(\\Theta(1)\\) space."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158261,G__158262) : tailrecursion.hoplon.markdown.para_node.call(null,G__158261,G__158262));
})(),(function (){var G__158263 = cljs.core.PersistentArrayMap.EMPTY;
var G__158264 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can compute exponentials in fewer steps by using successive squaring. For instance, rather than computing \\(b^8\\) as \\(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot b))))))\\) we can compute it using three multiplications:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158263,G__158264) : tailrecursion.hoplon.markdown.para_node.call(null,G__158263,G__158264));
})(),(function (){var G__158265 = cljs.core.PersistentArrayMap.EMPTY;
var G__158266 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} b^2=& b\\cdot b  \\\\ b^4=& b^2\\cdot b^2  \\\\ b^8=& b^4\\cdot b^4\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158265,G__158266) : tailrecursion.hoplon.markdown.para_node.call(null,G__158265,G__158266));
})(),(function (){var G__158267 = cljs.core.PersistentArrayMap.EMPTY;
var G__158268 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This method works fine for exponents that are powers of 2. We can also take advantage of successive squaring in computing exponentials in general if we use the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158267,G__158268) : tailrecursion.hoplon.markdown.para_node.call(null,G__158267,G__158268));
})(),(function (){var G__158269 = cljs.core.PersistentArrayMap.EMPTY;
var G__158270 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  b^n=&(b^{n/2})^2 & \\text{if }& n \\text{ is even} \\\\  b^n=&b\\cdot b^{n-1} & \\text{if }& n \\text{ is odd}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158269,G__158270) : tailrecursion.hoplon.markdown.para_node.call(null,G__158269,G__158270));
})(),(function (){var G__158271 = cljs.core.PersistentArrayMap.EMPTY;
var G__158272 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express this method as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158271,G__158272) : tailrecursion.hoplon.markdown.para_node.call(null,G__158271,G__158272));
})(),(function (){var G__158273 = (function (){var G__158274 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158275 = (function (){var G__158276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158277 = "(";
var G__158278 = (function (){var G__158293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158294 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158293,G__158294) : tailrecursion.hoplon.span.call(null,G__158293,G__158294));
})();
var G__158279 = (function (){var G__158295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158296 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158295,G__158296) : tailrecursion.hoplon.span.call(null,G__158295,G__158296));
})();
var G__158280 = " [";
var G__158281 = (function (){var G__158297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158298 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158297,G__158298) : tailrecursion.hoplon.span.call(null,G__158297,G__158298));
})();
var G__158282 = "]\n  (";
var G__158283 = (function (){var G__158299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158300 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158299,G__158300) : tailrecursion.hoplon.span.call(null,G__158299,G__158300));
})();
var G__158284 = "(";
var G__158285 = (function (){var G__158301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158302 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158301,G__158302) : tailrecursion.hoplon.span.call(null,G__158301,G__158302));
})();
var G__158286 = " ";
var G__158287 = (function (){var G__158303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158304 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158303,G__158304) : tailrecursion.hoplon.span.call(null,G__158303,G__158304));
})();
var G__158288 = " ";
var G__158289 = (function (){var G__158305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158306 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158305,G__158306) : tailrecursion.hoplon.span.call(null,G__158305,G__158306));
})();
var G__158290 = ") ";
var G__158291 = (function (){var G__158307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158308 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158307,G__158308) : tailrecursion.hoplon.span.call(null,G__158307,G__158308));
})();
var G__158292 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__158276,G__158277,G__158278,G__158279,G__158280,G__158281,G__158282,G__158283,G__158284,G__158285,G__158286,G__158287,G__158288,G__158289,G__158290,G__158291,G__158292) : tailrecursion.hoplon.pre.call(null,G__158276,G__158277,G__158278,G__158279,G__158280,G__158281,G__158282,G__158283,G__158284,G__158285,G__158286,G__158287,G__158288,G__158289,G__158290,G__158291,G__158292));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158274,G__158275) : tailrecursion.hoplon.div.call(null,G__158274,G__158275));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158273) : tailrecursion.hoplon.div.call(null,G__158273));
})(),(function (){var G__158309 = cljs.core.PersistentArrayMap.EMPTY;
var G__158310 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158311 = cljs.core.PersistentArrayMap.EMPTY;
var G__158312 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: In Clojure ",(function (){var G__158313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__158314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158313,G__158314) : tailrecursion.hoplon.markdown.code_node.call(null,G__158313,G__158314));
})()," takes the place of ",(function (){var G__158315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"remainder"], null);
var G__158316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158315,G__158316) : tailrecursion.hoplon.markdown.code_node.call(null,G__158315,G__158316));
})()," in Scheme."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158311,G__158312) : tailrecursion.hoplon.markdown.para_node.call(null,G__158311,G__158312));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__158309,G__158310) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__158309,G__158310));
})(),(function (){var G__158317 = cljs.core.PersistentArrayMap.EMPTY;
var G__158318 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process evolved by ",(function (){var G__158319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__158320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158319,G__158320) : tailrecursion.hoplon.markdown.code_node.call(null,G__158319,G__158320));
})()," grows logarithmically with \\(n\\) in both space and number of steps. To see this, observe that computing \\(b^{2n}\\) using ",(function (){var G__158321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__158322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158321,G__158322) : tailrecursion.hoplon.markdown.code_node.call(null,G__158321,G__158322));
})()," requires only one more multiplication than computing \\(b^n\\). The size of the exponent we can compute therefore doubles (approximately) with every new multiplication we are allowed. Thus the number of multiplications required for an exponent of \\(n\\) grows about as fast as the logarithm of \\(n\\) to the base 2. The process has \\(\\Theta(\\log n)\\) growth.",(function (){var G__158323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158324 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More precisely, the number of multiplications required is equal to 1 less than the log base 2 of \\(n\\) plus the number of ones in the binary representation of \\(n\\). This total is always less than twice \\(\\log_2(n)\\). The arbitrary constants \\(k_1\\) and \\(k_2\\) in the definition of order notation imply that, for a logarithmic process, the base to which logarithms are taken does not matter, so all such processes are described as \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158323,G__158324) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158323,G__158324));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158317,G__158318) : tailrecursion.hoplon.markdown.para_node.call(null,G__158317,G__158318));
})(),(function (){var G__158325 = cljs.core.PersistentArrayMap.EMPTY;
var G__158326 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between \\(\\Theta(\\log n) \\) growth and \\(\\Theta(n) \\) growth becomes striking as \\(n \\) becomes large. For example, ",(function (){var G__158327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__158328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158327,G__158328) : tailrecursion.hoplon.markdown.code_node.call(null,G__158327,G__158328));
})()," for \\(n=1000 \\) requires only 14 multiplications. ",(function (){var G__158329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158330 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You may wonder why anyone would care about raising numbers to the 1000th power. See section 1.26."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158329,G__158330) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158329,G__158330));
})()," It is also possible to use the idea of successive squaring to devise an iterative algorithm that computes exponentials with a logarithmic number of steps (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ex/1-16/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.16"], null)], 0)),"), although, as is often the case with iterative algorithms, this is not written down so straightforwardly as the recursive algorithm.",(function (){var G__158331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158332 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This iterative algorithm is ancient. It appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chandah-sutra"], null)], 0))," by \u00C1ch\u00E1rya Pingala, written before 200 B.C. See Knuth 1981, section 4.6.3, for a full discussion and analysis of this and other methods of exponentiation."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158331,G__158332) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158331,G__158332));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158325,G__158326) : tailrecursion.hoplon.markdown.para_node.call(null,G__158325,G__158326));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158075;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158074;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158073;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158072;
}})()], 0));
var G__153292 = "";
var G__153293 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"16-19"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(16)], null),(function (){var _STAR_references_STAR_158333 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158334 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158335 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158336 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158337 = cljs.core.PersistentArrayMap.EMPTY;
var G__158338 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Design a procedure that evolves an iterative exponentiation process that uses successive squaring and uses a logarithmic number of steps, as does ",(function (){var G__158339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__158340 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158339,G__158340) : tailrecursion.hoplon.markdown.code_node.call(null,G__158339,G__158340));
})(),". (Hint: Using the observations that \\((b^{n/2})^2=(b^2)^{n/2}\\), keep, along with the exponent \\(n\\) and the base \\(b\\), an additional state variable \\(a\\), and define the state transformation in such a way that the product \\(ab^n\\) is unchanged from state to state. At the beginning of the process \\(a\\) is taken to be 1, and the answer is given by the value of \\(a\\) at the end of the process. In general, the technique of defining an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["invariant quantity"], null)], 0))," that remains unchanged from state to state is a powerful way to think about the design of iterative algorithms.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158337,G__158338) : tailrecursion.hoplon.markdown.para_node.call(null,G__158337,G__158338));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158336;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158335;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158334;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158333;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158341 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158342 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158343 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158344 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158345 = (function (){var G__158346 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158347 = (function (){var G__158348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158349 = "(";
var G__158350 = (function (){var G__158419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158420 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158419,G__158420) : tailrecursion.hoplon.span.call(null,G__158419,G__158420));
})();
var G__158351 = (function (){var G__158421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158422 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158421,G__158422) : tailrecursion.hoplon.span.call(null,G__158421,G__158422));
})();
var G__158352 = " [";
var G__158353 = (function (){var G__158423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158424 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158423,G__158424) : tailrecursion.hoplon.span.call(null,G__158423,G__158424));
})();
var G__158354 = " ";
var G__158355 = (function (){var G__158425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158426 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158425,G__158426) : tailrecursion.hoplon.span.call(null,G__158425,G__158426));
})();
var G__158356 = "]\n  (";
var G__158357 = (function (){var G__158427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158428 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158427,G__158428) : tailrecursion.hoplon.span.call(null,G__158427,G__158428));
})();
var G__158358 = "[";
var G__158359 = (function (){var G__158429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158430 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158429,G__158430) : tailrecursion.hoplon.span.call(null,G__158429,G__158430));
})();
var G__158360 = "     ";
var G__158361 = (function (){var G__158431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158432 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158431,G__158432) : tailrecursion.hoplon.span.call(null,G__158431,G__158432));
})();
var G__158362 = "\n         ";
var G__158363 = (function (){var G__158433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158434 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158433,G__158434) : tailrecursion.hoplon.span.call(null,G__158433,G__158434));
})();
var G__158364 = " ";
var G__158365 = (function (){var G__158435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158436 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158435,G__158436) : tailrecursion.hoplon.span.call(null,G__158435,G__158436));
})();
var G__158366 = "\n         ";
var G__158367 = (function (){var G__158437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158438 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158437,G__158438) : tailrecursion.hoplon.span.call(null,G__158437,G__158438));
})();
var G__158368 = " ";
var G__158369 = (function (){var G__158439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158440 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158439,G__158440) : tailrecursion.hoplon.span.call(null,G__158439,G__158440));
})();
var G__158370 = "]\n    (";
var G__158371 = (function (){var G__158441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158442 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158441,G__158442) : tailrecursion.hoplon.span.call(null,G__158441,G__158442));
})();
var G__158372 = "(";
var G__158373 = (function (){var G__158443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158444 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158443,G__158444) : tailrecursion.hoplon.span.call(null,G__158443,G__158444));
})();
var G__158374 = (function (){var G__158445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158446 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158445,G__158446) : tailrecursion.hoplon.span.call(null,G__158445,G__158446));
})();
var G__158375 = " ";
var G__158376 = (function (){var G__158447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158448 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158447,G__158448) : tailrecursion.hoplon.span.call(null,G__158447,G__158448));
})();
var G__158377 = ") ";
var G__158378 = (function (){var G__158449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158450 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158449,G__158450) : tailrecursion.hoplon.span.call(null,G__158449,G__158450));
})();
var G__158379 = "\n          (";
var G__158380 = (function (){var G__158451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158452 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158451,G__158452) : tailrecursion.hoplon.span.call(null,G__158451,G__158452));
})();
var G__158381 = "(";
var G__158382 = (function (){var G__158453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158454 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158453,G__158454) : tailrecursion.hoplon.span.call(null,G__158453,G__158454));
})();
var G__158383 = " ";
var G__158384 = (function (){var G__158455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158456 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158455,G__158456) : tailrecursion.hoplon.span.call(null,G__158455,G__158456));
})();
var G__158385 = " ";
var G__158386 = (function (){var G__158457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158458 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158457,G__158458) : tailrecursion.hoplon.span.call(null,G__158457,G__158458));
})();
var G__158387 = ") ";
var G__158388 = (function (){var G__158459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158460 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158459,G__158460) : tailrecursion.hoplon.span.call(null,G__158459,G__158460));
})();
var G__158389 = ") (";
var G__158390 = (function (){var G__158461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158462 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158461,G__158462) : tailrecursion.hoplon.span.call(null,G__158461,G__158462));
})();
var G__158391 = " (";
var G__158392 = (function (){var G__158463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158464 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158463,G__158464) : tailrecursion.hoplon.span.call(null,G__158463,G__158464));
})();
var G__158393 = " ";
var G__158394 = (function (){var G__158465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158466 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158465,G__158466) : tailrecursion.hoplon.span.call(null,G__158465,G__158466));
})();
var G__158395 = ") (";
var G__158396 = (function (){var G__158467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158468 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158467,G__158468) : tailrecursion.hoplon.span.call(null,G__158467,G__158468));
})();
var G__158397 = (function (){var G__158469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158470 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158469,G__158470) : tailrecursion.hoplon.span.call(null,G__158469,G__158470));
})();
var G__158398 = " ";
var G__158399 = (function (){var G__158471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158472 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158471,G__158472) : tailrecursion.hoplon.span.call(null,G__158471,G__158472));
})();
var G__158400 = ") ";
var G__158401 = (function (){var G__158473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158474 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158473,G__158474) : tailrecursion.hoplon.span.call(null,G__158473,G__158474));
})();
var G__158402 = ")\n          ";
var G__158403 = (function (){var G__158475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158476 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158475,G__158476) : tailrecursion.hoplon.span.call(null,G__158475,G__158476));
})();
var G__158404 = " (";
var G__158405 = (function (){var G__158477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158478 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158477,G__158478) : tailrecursion.hoplon.span.call(null,G__158477,G__158478));
})();
var G__158406 = " ";
var G__158407 = (function (){var G__158479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158480 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158479,G__158480) : tailrecursion.hoplon.span.call(null,G__158479,G__158480));
})();
var G__158408 = " (";
var G__158409 = (function (){var G__158481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158482 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158481,G__158482) : tailrecursion.hoplon.span.call(null,G__158481,G__158482));
})();
var G__158410 = (function (){var G__158483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158484 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158483,G__158484) : tailrecursion.hoplon.span.call(null,G__158483,G__158484));
})();
var G__158411 = " ";
var G__158412 = (function (){var G__158485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158486 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158485,G__158486) : tailrecursion.hoplon.span.call(null,G__158485,G__158486));
})();
var G__158413 = ") (";
var G__158414 = (function (){var G__158487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158488 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158487,G__158488) : tailrecursion.hoplon.span.call(null,G__158487,G__158488));
})();
var G__158415 = (function (){var G__158489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158490 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158489,G__158490) : tailrecursion.hoplon.span.call(null,G__158489,G__158490));
})();
var G__158416 = " ";
var G__158417 = (function (){var G__158491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158492 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158491,G__158492) : tailrecursion.hoplon.span.call(null,G__158491,G__158492));
})();
var G__158418 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__158348,G__158349,G__158350,G__158351,G__158352,G__158353,G__158354,G__158355,G__158356,G__158357,G__158358,G__158359,G__158360,G__158361,G__158362,G__158363,G__158364,G__158365,G__158366,G__158367,G__158368,G__158369,G__158370,G__158371,G__158372,G__158373,G__158374,G__158375,G__158376,G__158377,G__158378,G__158379,G__158380,G__158381,G__158382,G__158383,G__158384,G__158385,G__158386,G__158387,G__158388,G__158389,G__158390,G__158391,G__158392,G__158393,G__158394,G__158395,G__158396,G__158397,G__158398,G__158399,G__158400,G__158401,G__158402,G__158403,G__158404,G__158405,G__158406,G__158407,G__158408,G__158409,G__158410,G__158411,G__158412,G__158413,G__158414,G__158415,G__158416,G__158417,G__158418) : tailrecursion.hoplon.pre.call(null,G__158348,G__158349,G__158350,G__158351,G__158352,G__158353,G__158354,G__158355,G__158356,G__158357,G__158358,G__158359,G__158360,G__158361,G__158362,G__158363,G__158364,G__158365,G__158366,G__158367,G__158368,G__158369,G__158370,G__158371,G__158372,G__158373,G__158374,G__158375,G__158376,G__158377,G__158378,G__158379,G__158380,G__158381,G__158382,G__158383,G__158384,G__158385,G__158386,G__158387,G__158388,G__158389,G__158390,G__158391,G__158392,G__158393,G__158394,G__158395,G__158396,G__158397,G__158398,G__158399,G__158400,G__158401,G__158402,G__158403,G__158404,G__158405,G__158406,G__158407,G__158408,G__158409,G__158410,G__158411,G__158412,G__158413,G__158414,G__158415,G__158416,G__158417,G__158418));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158346,G__158347) : tailrecursion.hoplon.div.call(null,G__158346,G__158347));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158345) : tailrecursion.hoplon.div.call(null,G__158345));
})(),(function (){var G__158493 = cljs.core.PersistentArrayMap.EMPTY;
var G__158494 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: Due to the fact that Clojure is not tail-recursive, in order to avoid a stack overflow, we want to avoid recursion whenever possible. These are the perils of working with a hosted language."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158493,G__158494) : tailrecursion.hoplon.markdown.para_node.call(null,G__158493,G__158494));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158344;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158343;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158342;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158341;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(17)], null),(function (){var _STAR_references_STAR_158495 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158496 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158497 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158498 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158499 = cljs.core.PersistentArrayMap.EMPTY;
var G__158500 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The exponentiation algorithms in this section are based on performing exponentiation by means of repeated multiplication. In a similar way, one can perform integer multiplication by means of repeated addition. The following multiplication procedure (in which it is assumed that our language can only add, not multiply) is analogous to the ",(function (){var G__158501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expt"], null);
var G__158502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158501,G__158502) : tailrecursion.hoplon.markdown.code_node.call(null,G__158501,G__158502));
})()," procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158499,G__158500) : tailrecursion.hoplon.markdown.para_node.call(null,G__158499,G__158500));
})(),(function (){var G__158503 = (function (){var G__158504 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158505 = (function (){var G__158506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158507 = "(";
var G__158508 = (function (){var G__158535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158536 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158535,G__158536) : tailrecursion.hoplon.span.call(null,G__158535,G__158536));
})();
var G__158509 = (function (){var G__158537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158538 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158537,G__158538) : tailrecursion.hoplon.span.call(null,G__158537,G__158538));
})();
var G__158510 = "[";
var G__158511 = (function (){var G__158539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158540 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158539,G__158540) : tailrecursion.hoplon.span.call(null,G__158539,G__158540));
})();
var G__158512 = " ";
var G__158513 = (function (){var G__158541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158542 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158541,G__158542) : tailrecursion.hoplon.span.call(null,G__158541,G__158542));
})();
var G__158514 = "]\n  (";
var G__158515 = (function (){var G__158543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158544 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158543,G__158544) : tailrecursion.hoplon.span.call(null,G__158543,G__158544));
})();
var G__158516 = "(";
var G__158517 = (function (){var G__158545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158546 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158545,G__158546) : tailrecursion.hoplon.span.call(null,G__158545,G__158546));
})();
var G__158518 = (function (){var G__158547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158548 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158547,G__158548) : tailrecursion.hoplon.span.call(null,G__158547,G__158548));
})();
var G__158519 = " ";
var G__158520 = (function (){var G__158549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158550 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158549,G__158550) : tailrecursion.hoplon.span.call(null,G__158549,G__158550));
})();
var G__158521 = ")\n      ";
var G__158522 = (function (){var G__158551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158552 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158551,G__158552) : tailrecursion.hoplon.span.call(null,G__158551,G__158552));
})();
var G__158523 = "\n      (";
var G__158524 = (function (){var G__158553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158554 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158553,G__158554) : tailrecursion.hoplon.span.call(null,G__158553,G__158554));
})();
var G__158525 = (function (){var G__158555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158556 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158555,G__158556) : tailrecursion.hoplon.span.call(null,G__158555,G__158556));
})();
var G__158526 = " (";
var G__158527 = (function (){var G__158557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158558 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158557,G__158558) : tailrecursion.hoplon.span.call(null,G__158557,G__158558));
})();
var G__158528 = (function (){var G__158559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158560 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158559,G__158560) : tailrecursion.hoplon.span.call(null,G__158559,G__158560));
})();
var G__158529 = " (";
var G__158530 = (function (){var G__158561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158562 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158561,G__158562) : tailrecursion.hoplon.span.call(null,G__158561,G__158562));
})();
var G__158531 = (function (){var G__158563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158564 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158563,G__158564) : tailrecursion.hoplon.span.call(null,G__158563,G__158564));
})();
var G__158532 = " ";
var G__158533 = (function (){var G__158565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158566 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158565,G__158566) : tailrecursion.hoplon.span.call(null,G__158565,G__158566));
})();
var G__158534 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__158506,G__158507,G__158508,G__158509,G__158510,G__158511,G__158512,G__158513,G__158514,G__158515,G__158516,G__158517,G__158518,G__158519,G__158520,G__158521,G__158522,G__158523,G__158524,G__158525,G__158526,G__158527,G__158528,G__158529,G__158530,G__158531,G__158532,G__158533,G__158534) : tailrecursion.hoplon.pre.call(null,G__158506,G__158507,G__158508,G__158509,G__158510,G__158511,G__158512,G__158513,G__158514,G__158515,G__158516,G__158517,G__158518,G__158519,G__158520,G__158521,G__158522,G__158523,G__158524,G__158525,G__158526,G__158527,G__158528,G__158529,G__158530,G__158531,G__158532,G__158533,G__158534));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158504,G__158505) : tailrecursion.hoplon.div.call(null,G__158504,G__158505));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158503) : tailrecursion.hoplon.div.call(null,G__158503));
})(),(function (){var G__158567 = cljs.core.PersistentArrayMap.EMPTY;
var G__158568 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm takes a number of steps that is linear in ",(function (){var G__158569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"b"], null);
var G__158570 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158569,G__158570) : tailrecursion.hoplon.markdown.code_node.call(null,G__158569,G__158570));
})(),". Now suppose we include, together with addition, operations ",(function (){var G__158571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"double"], null);
var G__158572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158571,G__158572) : tailrecursion.hoplon.markdown.code_node.call(null,G__158571,G__158572));
})(),", which doubles an integer, and ",(function (){var G__158573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"halve"], null);
var G__158574 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158573,G__158574) : tailrecursion.hoplon.markdown.code_node.call(null,G__158573,G__158574));
})(),", which divides an (even) integer by 2. Using these, design a multiplication procedure analogous to ",(function (){var G__158575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__158576 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158575,G__158576) : tailrecursion.hoplon.markdown.code_node.call(null,G__158575,G__158576));
})()," that uses a logarithmic number of steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158567,G__158568) : tailrecursion.hoplon.markdown.para_node.call(null,G__158567,G__158568));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158498;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158497;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158496;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158495;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158577 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158578 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158579 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158580 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158581 = (function (){var G__158582 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158583 = (function (){var G__158584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158585 = "(";
var G__158586 = (function (){var G__158653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158654 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158653,G__158654) : tailrecursion.hoplon.span.call(null,G__158653,G__158654));
})();
var G__158587 = (function (){var G__158655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158656 = "fast-mult";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158655,G__158656) : tailrecursion.hoplon.span.call(null,G__158655,G__158656));
})();
var G__158588 = " [";
var G__158589 = (function (){var G__158657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158658 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158657,G__158658) : tailrecursion.hoplon.span.call(null,G__158657,G__158658));
})();
var G__158590 = " ";
var G__158591 = (function (){var G__158659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158660 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158659,G__158660) : tailrecursion.hoplon.span.call(null,G__158659,G__158660));
})();
var G__158592 = "]\n  (";
var G__158593 = (function (){var G__158661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158662 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158661,G__158662) : tailrecursion.hoplon.span.call(null,G__158661,G__158662));
})();
var G__158594 = "[";
var G__158595 = (function (){var G__158663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158664 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158663,G__158664) : tailrecursion.hoplon.span.call(null,G__158663,G__158664));
})();
var G__158596 = " ";
var G__158597 = (function (){var G__158665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158666 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158665,G__158666) : tailrecursion.hoplon.span.call(null,G__158665,G__158666));
})();
var G__158598 = "\n         ";
var G__158599 = (function (){var G__158667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158668 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158667,G__158668) : tailrecursion.hoplon.span.call(null,G__158667,G__158668));
})();
var G__158600 = " ";
var G__158601 = (function (){var G__158669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158670 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158669,G__158670) : tailrecursion.hoplon.span.call(null,G__158669,G__158670));
})();
var G__158602 = "\n         ";
var G__158603 = (function (){var G__158671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158672 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158671,G__158672) : tailrecursion.hoplon.span.call(null,G__158671,G__158672));
})();
var G__158604 = "   ";
var G__158605 = (function (){var G__158673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158674 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158673,G__158674) : tailrecursion.hoplon.span.call(null,G__158673,G__158674));
})();
var G__158606 = "]\n    (";
var G__158607 = (function (){var G__158675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158676 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158675,G__158676) : tailrecursion.hoplon.span.call(null,G__158675,G__158676));
})();
var G__158608 = "(";
var G__158609 = (function (){var G__158677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158678 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158677,G__158678) : tailrecursion.hoplon.span.call(null,G__158677,G__158678));
})();
var G__158610 = (function (){var G__158679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158680 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158679,G__158680) : tailrecursion.hoplon.span.call(null,G__158679,G__158680));
})();
var G__158611 = " ";
var G__158612 = (function (){var G__158681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158682 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158681,G__158682) : tailrecursion.hoplon.span.call(null,G__158681,G__158682));
})();
var G__158613 = ") ";
var G__158614 = (function (){var G__158683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158684 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158683,G__158684) : tailrecursion.hoplon.span.call(null,G__158683,G__158684));
})();
var G__158615 = "\n          (";
var G__158616 = (function (){var G__158685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158686 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158685,G__158686) : tailrecursion.hoplon.span.call(null,G__158685,G__158686));
})();
var G__158617 = "(";
var G__158618 = (function (){var G__158687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158688 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158687,G__158688) : tailrecursion.hoplon.span.call(null,G__158687,G__158688));
})();
var G__158619 = " ";
var G__158620 = (function (){var G__158689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158690 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158689,G__158690) : tailrecursion.hoplon.span.call(null,G__158689,G__158690));
})();
var G__158621 = " ";
var G__158622 = (function (){var G__158691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158692 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158691,G__158692) : tailrecursion.hoplon.span.call(null,G__158691,G__158692));
})();
var G__158623 = ") ";
var G__158624 = (function (){var G__158693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158694 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158693,G__158694) : tailrecursion.hoplon.span.call(null,G__158693,G__158694));
})();
var G__158625 = ") (";
var G__158626 = (function (){var G__158695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158696 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158695,G__158696) : tailrecursion.hoplon.span.call(null,G__158695,G__158696));
})();
var G__158627 = " (";
var G__158628 = (function (){var G__158697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158698 = "halve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158697,G__158698) : tailrecursion.hoplon.span.call(null,G__158697,G__158698));
})();
var G__158629 = " ";
var G__158630 = (function (){var G__158699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158700 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158699,G__158700) : tailrecursion.hoplon.span.call(null,G__158699,G__158700));
})();
var G__158631 = ") (";
var G__158632 = (function (){var G__158701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158702 = "double ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158701,G__158702) : tailrecursion.hoplon.span.call(null,G__158701,G__158702));
})();
var G__158633 = (function (){var G__158703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158704 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158703,G__158704) : tailrecursion.hoplon.span.call(null,G__158703,G__158704));
})();
var G__158634 = ") ";
var G__158635 = (function (){var G__158705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158706 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158705,G__158706) : tailrecursion.hoplon.span.call(null,G__158705,G__158706));
})();
var G__158636 = ")\n          ";
var G__158637 = (function (){var G__158707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158708 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158707,G__158708) : tailrecursion.hoplon.span.call(null,G__158707,G__158708));
})();
var G__158638 = " (";
var G__158639 = (function (){var G__158709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158710 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158709,G__158710) : tailrecursion.hoplon.span.call(null,G__158709,G__158710));
})();
var G__158640 = " (";
var G__158641 = (function (){var G__158711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158712 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158711,G__158712) : tailrecursion.hoplon.span.call(null,G__158711,G__158712));
})();
var G__158642 = (function (){var G__158713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158714 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158713,G__158714) : tailrecursion.hoplon.span.call(null,G__158713,G__158714));
})();
var G__158643 = " ";
var G__158644 = (function (){var G__158715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158716 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158715,G__158716) : tailrecursion.hoplon.span.call(null,G__158715,G__158716));
})();
var G__158645 = ") ";
var G__158646 = (function (){var G__158717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158718 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158717,G__158718) : tailrecursion.hoplon.span.call(null,G__158717,G__158718));
})();
var G__158647 = " (";
var G__158648 = (function (){var G__158719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158720 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158719,G__158720) : tailrecursion.hoplon.span.call(null,G__158719,G__158720));
})();
var G__158649 = (function (){var G__158721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158722 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158721,G__158722) : tailrecursion.hoplon.span.call(null,G__158721,G__158722));
})();
var G__158650 = " ";
var G__158651 = (function (){var G__158723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158724 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158723,G__158724) : tailrecursion.hoplon.span.call(null,G__158723,G__158724));
})();
var G__158652 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__158584,G__158585,G__158586,G__158587,G__158588,G__158589,G__158590,G__158591,G__158592,G__158593,G__158594,G__158595,G__158596,G__158597,G__158598,G__158599,G__158600,G__158601,G__158602,G__158603,G__158604,G__158605,G__158606,G__158607,G__158608,G__158609,G__158610,G__158611,G__158612,G__158613,G__158614,G__158615,G__158616,G__158617,G__158618,G__158619,G__158620,G__158621,G__158622,G__158623,G__158624,G__158625,G__158626,G__158627,G__158628,G__158629,G__158630,G__158631,G__158632,G__158633,G__158634,G__158635,G__158636,G__158637,G__158638,G__158639,G__158640,G__158641,G__158642,G__158643,G__158644,G__158645,G__158646,G__158647,G__158648,G__158649,G__158650,G__158651,G__158652) : tailrecursion.hoplon.pre.call(null,G__158584,G__158585,G__158586,G__158587,G__158588,G__158589,G__158590,G__158591,G__158592,G__158593,G__158594,G__158595,G__158596,G__158597,G__158598,G__158599,G__158600,G__158601,G__158602,G__158603,G__158604,G__158605,G__158606,G__158607,G__158608,G__158609,G__158610,G__158611,G__158612,G__158613,G__158614,G__158615,G__158616,G__158617,G__158618,G__158619,G__158620,G__158621,G__158622,G__158623,G__158624,G__158625,G__158626,G__158627,G__158628,G__158629,G__158630,G__158631,G__158632,G__158633,G__158634,G__158635,G__158636,G__158637,G__158638,G__158639,G__158640,G__158641,G__158642,G__158643,G__158644,G__158645,G__158646,G__158647,G__158648,G__158649,G__158650,G__158651,G__158652));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158582,G__158583) : tailrecursion.hoplon.div.call(null,G__158582,G__158583));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158581) : tailrecursion.hoplon.div.call(null,G__158581));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158580;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158579;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158578;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158577;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(18)], null),(function (){var _STAR_references_STAR_158725 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158726 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158727 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158728 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158729 = cljs.core.PersistentArrayMap.EMPTY;
var G__158730 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the results of exercises 1.16 and 1.17, devise a procedure that generates an iterative process for multiplying two integers in terms of adding, doubling, and halving and uses a logarithmic number of steps.",(function (){var G__158731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158732 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm, which is sometimes known as the ",(function (){var G__158733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158734 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Russian peasant method"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158733,G__158734) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158733,G__158734));
})()," of multiplication, is ancient. Examples of its use are found in the Rhind Papyrus, one of the two oldest mathematical documents in existence, written about 1700 B.C. (and copied from an even older document) by an Egyptian scribe named A",(function (){var G__158735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158735,G__158736) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158735,G__158736));
})(),"h-mose."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158731,G__158732) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158731,G__158732));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158729,G__158730) : tailrecursion.hoplon.markdown.para_node.call(null,G__158729,G__158730));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158728;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158727;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158726;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158725;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158741 = cljs.core.PersistentArrayMap.EMPTY;
var G__158742 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It",(function (){var G__158743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158744 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158743,G__158744) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158743,G__158744));
})(),"s exactly the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158741,G__158742) : tailrecursion.hoplon.markdown.para_node.call(null,G__158741,G__158742));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158739;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158737;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(19)], null),(function (){var _STAR_references_STAR_158745 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158746 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158747 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158748 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158749 = cljs.core.PersistentArrayMap.EMPTY;
var G__158750 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There is a clever algorithm for computing the Fibonacci numbers in a logarithmic number of steps. Recall the transformation of the state variables \\(a\\) and \\(b\\) in the ",(function (){var G__158751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib-iter"], null);
var G__158752 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158751,G__158752) : tailrecursion.hoplon.markdown.code_node.call(null,G__158751,G__158752));
})()," process of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),": \\(a\\to a + b\\) and \\(b\\to a\\). Call this transformation \\(T\\), and observe that applying \\(T\\) over and over again \\(n\\) times, starting with 0 and 1, produces the pair \\(Fib(n)\\) and \\(Fib(n+1)\\). In other words, the Fibonacci numbers are produced by applying \\(T^n\\), the nth power of the transformation \\(T\\), starting with the pair (0,1). Now consider \\(T\\) to be the special case of \\(p = 0\\) and \\(q = 1\\) in a family of transformations \\(T_{pq}\\), where \\(T_{pq}\\) transforms the pair (a,b) according to \\(a\\to ap + bq\\) and \\(b\\to aq + bq + bp\\) (so that \\(T_{pq}(a,b)=(ap+bq,aq+bq+bp)\\)). Show that if we apply such a transformation \\(T_{pq}\\) twice, the effect is the same as using a single transformation \\(T_{p\u2019q\u2019}\\) of the same form, and compute \\(p\u2019\\) and \\(q\u2019\\) in terms of \\(p\\) and \\(q\\). This gives us an explicit way to square these transformations, and thus we can compute \\(T^n\\) using successive squaring, as in the ",(function (){var G__158753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__158754 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158753,G__158754) : tailrecursion.hoplon.markdown.code_node.call(null,G__158753,G__158754));
})()," procedure. Put this all together to complete the following procedure, which runs in a logarithmic number of steps:",(function (){var G__158755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158756 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This exercise was suggested to us by Joe Stoy, based on an example in Kaldewaij 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158755,G__158756) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158755,G__158756));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158749,G__158750) : tailrecursion.hoplon.markdown.para_node.call(null,G__158749,G__158750));
})(),(function (){var G__158757 = (function (){var G__158758 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158759 = (function (){var G__158760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158761 = "(";
var G__158762 = (function (){var G__158856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158857 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158856,G__158857) : tailrecursion.hoplon.span.call(null,G__158856,G__158857));
})();
var G__158763 = (function (){var G__158858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158859 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158858,G__158859) : tailrecursion.hoplon.span.call(null,G__158858,G__158859));
})();
var G__158764 = " [";
var G__158765 = (function (){var G__158860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158861 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158860,G__158861) : tailrecursion.hoplon.span.call(null,G__158860,G__158861));
})();
var G__158766 = "]\n  (";
var G__158767 = (function (){var G__158862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158863 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158862,G__158863) : tailrecursion.hoplon.span.call(null,G__158862,G__158863));
})();
var G__158768 = "[";
var G__158769 = (function (){var G__158864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158865 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158864,G__158865) : tailrecursion.hoplon.span.call(null,G__158864,G__158865));
})();
var G__158770 = " ";
var G__158771 = (function (){var G__158866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158867 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158866,G__158867) : tailrecursion.hoplon.span.call(null,G__158866,G__158867));
})();
var G__158772 = "\n         ";
var G__158773 = (function (){var G__158868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158869 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158868,G__158869) : tailrecursion.hoplon.span.call(null,G__158868,G__158869));
})();
var G__158774 = " ";
var G__158775 = (function (){var G__158870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158871 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158870,G__158871) : tailrecursion.hoplon.span.call(null,G__158870,G__158871));
})();
var G__158776 = "\n         ";
var G__158777 = (function (){var G__158872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158873 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158872,G__158873) : tailrecursion.hoplon.span.call(null,G__158872,G__158873));
})();
var G__158778 = " ";
var G__158779 = (function (){var G__158874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158875 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158874,G__158875) : tailrecursion.hoplon.span.call(null,G__158874,G__158875));
})();
var G__158780 = "\n         ";
var G__158781 = (function (){var G__158876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158877 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158876,G__158877) : tailrecursion.hoplon.span.call(null,G__158876,G__158877));
})();
var G__158782 = " ";
var G__158783 = (function (){var G__158878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158879 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158878,G__158879) : tailrecursion.hoplon.span.call(null,G__158878,G__158879));
})();
var G__158784 = "\n         ";
var G__158785 = (function (){var G__158880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158881 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158880,G__158881) : tailrecursion.hoplon.span.call(null,G__158880,G__158881));
})();
var G__158786 = (function (){var G__158882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158883 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158882,G__158883) : tailrecursion.hoplon.span.call(null,G__158882,G__158883));
})();
var G__158787 = "]\n    (";
var G__158788 = (function (){var G__158884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158885 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158884,G__158885) : tailrecursion.hoplon.span.call(null,G__158884,G__158885));
})();
var G__158789 = "(";
var G__158790 = (function (){var G__158886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158887 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158886,G__158887) : tailrecursion.hoplon.span.call(null,G__158886,G__158887));
})();
var G__158791 = (function (){var G__158888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158889 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158888,G__158889) : tailrecursion.hoplon.span.call(null,G__158888,G__158889));
})();
var G__158792 = ") ";
var G__158793 = (function (){var G__158890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158891 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158890,G__158891) : tailrecursion.hoplon.span.call(null,G__158890,G__158891));
})();
var G__158794 = "\n          (";
var G__158795 = (function (){var G__158892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158893 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158892,G__158893) : tailrecursion.hoplon.span.call(null,G__158892,G__158893));
})();
var G__158796 = " ";
var G__158797 = (function (){var G__158894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158895 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158894,G__158895) : tailrecursion.hoplon.span.call(null,G__158894,G__158895));
})();
var G__158798 = ") (";
var G__158799 = (function (){var G__158896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158897 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158896,G__158897) : tailrecursion.hoplon.span.call(null,G__158896,G__158897));
})();
var G__158800 = " ";
var G__158801 = (function (){var G__158898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158899 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158898,G__158899) : tailrecursion.hoplon.span.call(null,G__158898,G__158899));
})();
var G__158802 = "  ";
var G__158803 = (function (){var G__158900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__158901 = "; compute p'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158900,G__158901) : tailrecursion.hoplon.span.call(null,G__158900,G__158901));
})();
var G__158804 = "\n                               ";
var G__158805 = (function (){var G__158902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158903 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158902,G__158903) : tailrecursion.hoplon.span.call(null,G__158902,G__158903));
})();
var G__158806 = "  ";
var G__158807 = (function (){var G__158904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__158905 = "; compute q'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158904,G__158905) : tailrecursion.hoplon.span.call(null,G__158904,G__158905));
})();
var G__158808 = "\n                               ";
var G__158809 = (function (){var G__158906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158907 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158906,G__158907) : tailrecursion.hoplon.span.call(null,G__158906,G__158907));
})();
var G__158810 = "\n                               ";
var G__158811 = (function (){var G__158908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158909 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158908,G__158909) : tailrecursion.hoplon.span.call(null,G__158908,G__158909));
})();
var G__158812 = "\n                               (";
var G__158813 = (function (){var G__158910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158911 = "/ count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158910,G__158911) : tailrecursion.hoplon.span.call(null,G__158910,G__158911));
})();
var G__158814 = (function (){var G__158912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158913 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158912,G__158913) : tailrecursion.hoplon.span.call(null,G__158912,G__158913));
})();
var G__158815 = "))\n          ";
var G__158816 = (function (){var G__158914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158915 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158914,G__158915) : tailrecursion.hoplon.span.call(null,G__158914,G__158915));
})();
var G__158817 = " (";
var G__158818 = (function (){var G__158916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158917 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158916,G__158917) : tailrecursion.hoplon.span.call(null,G__158916,G__158917));
})();
var G__158819 = " ";
var G__158820 = (function (){var G__158918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158919 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158918,G__158919) : tailrecursion.hoplon.span.call(null,G__158918,G__158919));
})();
var G__158821 = "\n                       ";
var G__158822 = (function (){var G__158920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158921 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158920,G__158921) : tailrecursion.hoplon.span.call(null,G__158920,G__158921));
})();
var G__158823 = "\n                       (";
var G__158824 = (function (){var G__158922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158923 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158922,G__158923) : tailrecursion.hoplon.span.call(null,G__158922,G__158923));
})();
var G__158825 = "(";
var G__158826 = (function (){var G__158924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158925 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158924,G__158925) : tailrecursion.hoplon.span.call(null,G__158924,G__158925));
})();
var G__158827 = (function (){var G__158926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158927 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158926,G__158927) : tailrecursion.hoplon.span.call(null,G__158926,G__158927));
})();
var G__158828 = " ";
var G__158829 = (function (){var G__158928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158929 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158928,G__158929) : tailrecursion.hoplon.span.call(null,G__158928,G__158929));
})();
var G__158830 = ") (";
var G__158831 = (function (){var G__158930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158931 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158930,G__158931) : tailrecursion.hoplon.span.call(null,G__158930,G__158931));
})();
var G__158832 = (function (){var G__158932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158933 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158932,G__158933) : tailrecursion.hoplon.span.call(null,G__158932,G__158933));
})();
var G__158833 = " ";
var G__158834 = (function (){var G__158934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158935 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158934,G__158935) : tailrecursion.hoplon.span.call(null,G__158934,G__158935));
})();
var G__158835 = "))\n                       (";
var G__158836 = (function (){var G__158936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158937 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158936,G__158937) : tailrecursion.hoplon.span.call(null,G__158936,G__158937));
})();
var G__158837 = "(";
var G__158838 = (function (){var G__158938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158939 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158938,G__158939) : tailrecursion.hoplon.span.call(null,G__158938,G__158939));
})();
var G__158839 = (function (){var G__158940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158941 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158940,G__158941) : tailrecursion.hoplon.span.call(null,G__158940,G__158941));
})();
var G__158840 = " ";
var G__158841 = (function (){var G__158942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158943 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158942,G__158943) : tailrecursion.hoplon.span.call(null,G__158942,G__158943));
})();
var G__158842 = ") (";
var G__158843 = (function (){var G__158944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158945 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158944,G__158945) : tailrecursion.hoplon.span.call(null,G__158944,G__158945));
})();
var G__158844 = (function (){var G__158946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158947 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158946,G__158947) : tailrecursion.hoplon.span.call(null,G__158946,G__158947));
})();
var G__158845 = " ";
var G__158846 = (function (){var G__158948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158949 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158948,G__158949) : tailrecursion.hoplon.span.call(null,G__158948,G__158949));
})();
var G__158847 = ") (";
var G__158848 = (function (){var G__158950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158951 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158950,G__158951) : tailrecursion.hoplon.span.call(null,G__158950,G__158951));
})();
var G__158849 = (function (){var G__158952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158953 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158952,G__158953) : tailrecursion.hoplon.span.call(null,G__158952,G__158953));
})();
var G__158850 = " ";
var G__158851 = (function (){var G__158954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158955 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158954,G__158955) : tailrecursion.hoplon.span.call(null,G__158954,G__158955));
})();
var G__158852 = "))\n                       (";
var G__158853 = (function (){var G__158956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158957 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158956,G__158957) : tailrecursion.hoplon.span.call(null,G__158956,G__158957));
})();
var G__158854 = (function (){var G__158958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158959 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158958,G__158959) : tailrecursion.hoplon.span.call(null,G__158958,G__158959));
})();
var G__158855 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96(G__158760,G__158761,G__158762,G__158763,G__158764,G__158765,G__158766,G__158767,G__158768,G__158769,G__158770,G__158771,G__158772,G__158773,G__158774,G__158775,G__158776,G__158777,G__158778,G__158779,G__158780,G__158781,G__158782,G__158783,G__158784,G__158785,G__158786,G__158787,G__158788,G__158789,G__158790,G__158791,G__158792,G__158793,G__158794,G__158795,G__158796,G__158797,G__158798,G__158799,G__158800,G__158801,G__158802,G__158803,G__158804,G__158805,G__158806,G__158807,G__158808,G__158809,G__158810,G__158811,G__158812,G__158813,G__158814,G__158815,G__158816,G__158817,G__158818,G__158819,G__158820,G__158821,G__158822,G__158823,G__158824,G__158825,G__158826,G__158827,G__158828,G__158829,G__158830,G__158831,G__158832,G__158833,G__158834,G__158835,G__158836,G__158837,G__158838,G__158839,G__158840,G__158841,G__158842,G__158843,G__158844,G__158845,G__158846,G__158847,G__158848,G__158849,G__158850,G__158851,G__158852,G__158853,G__158854,G__158855) : tailrecursion.hoplon.pre.call(null,G__158760,G__158761,G__158762,G__158763,G__158764,G__158765,G__158766,G__158767,G__158768,G__158769,G__158770,G__158771,G__158772,G__158773,G__158774,G__158775,G__158776,G__158777,G__158778,G__158779,G__158780,G__158781,G__158782,G__158783,G__158784,G__158785,G__158786,G__158787,G__158788,G__158789,G__158790,G__158791,G__158792,G__158793,G__158794,G__158795,G__158796,G__158797,G__158798,G__158799,G__158800,G__158801,G__158802,G__158803,G__158804,G__158805,G__158806,G__158807,G__158808,G__158809,G__158810,G__158811,G__158812,G__158813,G__158814,G__158815,G__158816,G__158817,G__158818,G__158819,G__158820,G__158821,G__158822,G__158823,G__158824,G__158825,G__158826,G__158827,G__158828,G__158829,G__158830,G__158831,G__158832,G__158833,G__158834,G__158835,G__158836,G__158837,G__158838,G__158839,G__158840,G__158841,G__158842,G__158843,G__158844,G__158845,G__158846,G__158847,G__158848,G__158849,G__158850,G__158851,G__158852,G__158853,G__158854,G__158855));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158758,G__158759) : tailrecursion.hoplon.div.call(null,G__158758,G__158759));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158757) : tailrecursion.hoplon.div.call(null,G__158757));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158748;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158747;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158746;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158745;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158960 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158961 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158962 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158963 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158964 = cljs.core.PersistentArrayMap.EMPTY;
var G__158965 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__158966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158967 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158966,G__158967) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158966,G__158967));
})(),"s find what \\(p",(function (){var G__158968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158968,G__158969) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158968,G__158969));
})(),",q",(function (){var G__158970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158971 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158970,G__158971) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158970,G__158971));
})(),"\\) are."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158964,G__158965) : tailrecursion.hoplon.markdown.para_node.call(null,G__158964,G__158965));
})(),(function (){var G__158972 = cljs.core.PersistentArrayMap.EMPTY;
var G__158973 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}T_{pq}^2(a,b)=&T_{pq}(ap+bq,aq+bq+bp) \\\\=&((ap+bq)p+(aq+bq+bp)q,(ap+bq)q+(aq+bq+bp)(q+p)) \\\\=&(ap^2+bpq+aq^2+bq^2+bpq, apq+bq^2+aq^2+apq+b(q+p)^2) \\\\=&(a(p^2+q^2)+b(q^2+2pq),a(q^2+2pq)+b(p^2+2q^2+2pq))\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158972,G__158973) : tailrecursion.hoplon.markdown.para_node.call(null,G__158972,G__158973));
})(),(function (){var G__158974 = cljs.core.PersistentArrayMap.EMPTY;
var G__158975 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that, \\(p",(function (){var G__158976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158977 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158976,G__158977) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158976,G__158977));
})(),"=p^2+q^2\\) and \\(q",(function (){var G__158978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158979 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158978,G__158979) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158978,G__158979));
})(),"=q^2+2pq\\) and our missing pieces of code are, ",(function (){var G__158980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ (square p) (square q))"], null);
var G__158981 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158980,G__158981) : tailrecursion.hoplon.markdown.code_node.call(null,G__158980,G__158981));
})()," and ",(function (){var G__158982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ (square q)\n(* 2 p q))"], null);
var G__158983 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158982,G__158983) : tailrecursion.hoplon.markdown.code_node.call(null,G__158982,G__158983));
})()," respectively."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158974,G__158975) : tailrecursion.hoplon.markdown.para_node.call(null,G__158974,G__158975));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158963;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158962;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158961;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158960;
}})()], 0))], 0))], 0));
var G__153294 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Greatest Common Divisors"], null),(function (){var _STAR_references_STAR_158984 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158985 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158986 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158987 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158988 = cljs.core.PersistentArrayMap.EMPTY;
var G__158989 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The greatest common divisor (GCD) of two integers \\(a\\) and \\(b\\) is defined to be the largest integer that divides both \\(a\\) and \\(b\\) with no remainder. For example, the GCD of 16 and 28 is 4. In chapter 2, when we investigate how to implement rational-number arithmetic, we will need to be able to compute GCDs in order to reduce rational numbers to lowest terms. (To reduce a rational number to lowest terms, we must divide both the numerator and the denominator by their GCD. For example, 16/28 reduces to 4/7.) One way to find the GCD of two integers is to factor them and search for common factors, but there is a famous algorithm that is much more efficient."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158988,G__158989) : tailrecursion.hoplon.markdown.para_node.call(null,G__158988,G__158989));
})(),(function (){var G__158990 = cljs.core.PersistentArrayMap.EMPTY;
var G__158991 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea of the algorithm is based on the observation that, if \\(r\\) is the remainder when \\(a\\) is divided by \\(b\\), then the common divisors of \\(a\\) and \\(b\\) are precisely the same as the common divisors of \\(b\\) and \\(r\\). Thus, we can use the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158990,G__158991) : tailrecursion.hoplon.markdown.para_node.call(null,G__158990,G__158991));
})(),(function (){var G__158992 = cljs.core.PersistentArrayMap.EMPTY;
var G__158993 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$GCD(a,b)=GCD(b,r)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158992,G__158993) : tailrecursion.hoplon.markdown.para_node.call(null,G__158992,G__158993));
})(),(function (){var G__158994 = cljs.core.PersistentArrayMap.EMPTY;
var G__158995 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to successively reduce the problem of computing a GCD to the problem of computing the GCD of smaller and smaller pairs of integers. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158994,G__158995) : tailrecursion.hoplon.markdown.para_node.call(null,G__158994,G__158995));
})(),(function (){var G__158996 = cljs.core.PersistentArrayMap.EMPTY;
var G__158997 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  GCD(206,40)=&GCD(40,6)  \\\\=&GCD(6,4)  \\\\=&GCD(4,2)  \\\\=&GCD(2,0)  \\\\=&2  \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158996,G__158997) : tailrecursion.hoplon.markdown.para_node.call(null,G__158996,G__158997));
})(),(function (){var G__158998 = cljs.core.PersistentArrayMap.EMPTY;
var G__158999 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["reduces GCD(206,40) to GCD(2,0), which is 2. It is possible to show that starting with any two positive integers and performing repeated reductions will always eventually produce a pair where the second number is 0. Then the GCD is the other number in the pair. This method for computing the GCD is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__159000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159001 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159000,G__159001) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159000,G__159001));
})(),"s Algorithm"], null)], 0)),".",(function (){var G__159002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159003 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__159004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159004,G__159005) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159004,G__159005));
})(),"s Algorithm is so called because it appears in Euclid",(function (){var G__159006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159006,G__159007) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159006,G__159007));
})(),"s ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Elements"], null)], 0))," (Book 7, ca. 300 B.C.). According to Knuth (1973), it can be considered the oldest known nontrivial algorithm. The ancient Egyptian method of multiplication (exercise 1.18) is surely older, but, as Knuth explains, Euclid",(function (){var G__159008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159009 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159008,G__159009) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159008,G__159009));
})(),"s algorithm is the oldest known to have been presented as a general algorithm, rather than as a set of illustrative examples."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159002,G__159003) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159002,G__159003));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158998,G__158999) : tailrecursion.hoplon.markdown.para_node.call(null,G__158998,G__158999));
})(),(function (){var G__159010 = cljs.core.PersistentArrayMap.EMPTY;
var G__159011 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is easy to express Euclid",(function (){var G__159012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159012,G__159013) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159012,G__159013));
})(),"s Algorithm as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159010,G__159011) : tailrecursion.hoplon.markdown.para_node.call(null,G__159010,G__159011));
})(),(function (){var G__159014 = (function (){var G__159015 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159016 = (function (){var G__159017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159018 = "(";
var G__159019 = (function (){var G__159045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159046 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159045,G__159046) : tailrecursion.hoplon.span.call(null,G__159045,G__159046));
})();
var G__159020 = (function (){var G__159047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159048 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159047,G__159048) : tailrecursion.hoplon.span.call(null,G__159047,G__159048));
})();
var G__159021 = " [";
var G__159022 = (function (){var G__159049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159050 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159049,G__159050) : tailrecursion.hoplon.span.call(null,G__159049,G__159050));
})();
var G__159023 = " ";
var G__159024 = (function (){var G__159051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159052 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159051,G__159052) : tailrecursion.hoplon.span.call(null,G__159051,G__159052));
})();
var G__159025 = "]\n  (";
var G__159026 = (function (){var G__159053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159054 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159053,G__159054) : tailrecursion.hoplon.span.call(null,G__159053,G__159054));
})();
var G__159027 = "(";
var G__159028 = (function (){var G__159055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159056 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159055,G__159056) : tailrecursion.hoplon.span.call(null,G__159055,G__159056));
})();
var G__159029 = (function (){var G__159057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159058 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159057,G__159058) : tailrecursion.hoplon.span.call(null,G__159057,G__159058));
})();
var G__159030 = " ";
var G__159031 = (function (){var G__159059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159060 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159059,G__159060) : tailrecursion.hoplon.span.call(null,G__159059,G__159060));
})();
var G__159032 = ")\n      ";
var G__159033 = (function (){var G__159061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159062 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159061,G__159062) : tailrecursion.hoplon.span.call(null,G__159061,G__159062));
})();
var G__159034 = "\n      (";
var G__159035 = (function (){var G__159063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159064 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159063,G__159064) : tailrecursion.hoplon.span.call(null,G__159063,G__159064));
})();
var G__159036 = " ";
var G__159037 = (function (){var G__159065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159066 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159065,G__159066) : tailrecursion.hoplon.span.call(null,G__159065,G__159066));
})();
var G__159038 = " (";
var G__159039 = (function (){var G__159067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159068 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159067,G__159068) : tailrecursion.hoplon.span.call(null,G__159067,G__159068));
})();
var G__159040 = " ";
var G__159041 = (function (){var G__159069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159070 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159069,G__159070) : tailrecursion.hoplon.span.call(null,G__159069,G__159070));
})();
var G__159042 = " ";
var G__159043 = (function (){var G__159071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159072 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159071,G__159072) : tailrecursion.hoplon.span.call(null,G__159071,G__159072));
})();
var G__159044 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__159017,G__159018,G__159019,G__159020,G__159021,G__159022,G__159023,G__159024,G__159025,G__159026,G__159027,G__159028,G__159029,G__159030,G__159031,G__159032,G__159033,G__159034,G__159035,G__159036,G__159037,G__159038,G__159039,G__159040,G__159041,G__159042,G__159043,G__159044) : tailrecursion.hoplon.pre.call(null,G__159017,G__159018,G__159019,G__159020,G__159021,G__159022,G__159023,G__159024,G__159025,G__159026,G__159027,G__159028,G__159029,G__159030,G__159031,G__159032,G__159033,G__159034,G__159035,G__159036,G__159037,G__159038,G__159039,G__159040,G__159041,G__159042,G__159043,G__159044));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159015,G__159016) : tailrecursion.hoplon.div.call(null,G__159015,G__159016));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159014) : tailrecursion.hoplon.div.call(null,G__159014));
})(),(function (){var G__159073 = cljs.core.PersistentArrayMap.EMPTY;
var G__159074 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or using recur, "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159073,G__159074) : tailrecursion.hoplon.markdown.para_node.call(null,G__159073,G__159074));
})(),(function (){var G__159075 = (function (){var G__159076 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159077 = (function (){var G__159078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159079 = "(";
var G__159080 = (function (){var G__159106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159107 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159106,G__159107) : tailrecursion.hoplon.span.call(null,G__159106,G__159107));
})();
var G__159081 = (function (){var G__159108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159109 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159108,G__159109) : tailrecursion.hoplon.span.call(null,G__159108,G__159109));
})();
var G__159082 = " [";
var G__159083 = (function (){var G__159110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159111 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159110,G__159111) : tailrecursion.hoplon.span.call(null,G__159110,G__159111));
})();
var G__159084 = " ";
var G__159085 = (function (){var G__159112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159113 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159112,G__159113) : tailrecursion.hoplon.span.call(null,G__159112,G__159113));
})();
var G__159086 = "]\n  (";
var G__159087 = (function (){var G__159114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159115 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159114,G__159115) : tailrecursion.hoplon.span.call(null,G__159114,G__159115));
})();
var G__159088 = "(";
var G__159089 = (function (){var G__159116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159117 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159116,G__159117) : tailrecursion.hoplon.span.call(null,G__159116,G__159117));
})();
var G__159090 = (function (){var G__159118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159119 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159118,G__159119) : tailrecursion.hoplon.span.call(null,G__159118,G__159119));
})();
var G__159091 = " ";
var G__159092 = (function (){var G__159120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159121 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159120,G__159121) : tailrecursion.hoplon.span.call(null,G__159120,G__159121));
})();
var G__159093 = ")\n      ";
var G__159094 = (function (){var G__159122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159123 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159122,G__159123) : tailrecursion.hoplon.span.call(null,G__159122,G__159123));
})();
var G__159095 = "\n      (";
var G__159096 = (function (){var G__159124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159125 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159124,G__159125) : tailrecursion.hoplon.span.call(null,G__159124,G__159125));
})();
var G__159097 = " ";
var G__159098 = (function (){var G__159126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159127 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159126,G__159127) : tailrecursion.hoplon.span.call(null,G__159126,G__159127));
})();
var G__159099 = " (";
var G__159100 = (function (){var G__159128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159129 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159128,G__159129) : tailrecursion.hoplon.span.call(null,G__159128,G__159129));
})();
var G__159101 = " ";
var G__159102 = (function (){var G__159130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159131 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159130,G__159131) : tailrecursion.hoplon.span.call(null,G__159130,G__159131));
})();
var G__159103 = " ";
var G__159104 = (function (){var G__159132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159133 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159132,G__159133) : tailrecursion.hoplon.span.call(null,G__159132,G__159133));
})();
var G__159105 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__159078,G__159079,G__159080,G__159081,G__159082,G__159083,G__159084,G__159085,G__159086,G__159087,G__159088,G__159089,G__159090,G__159091,G__159092,G__159093,G__159094,G__159095,G__159096,G__159097,G__159098,G__159099,G__159100,G__159101,G__159102,G__159103,G__159104,G__159105) : tailrecursion.hoplon.pre.call(null,G__159078,G__159079,G__159080,G__159081,G__159082,G__159083,G__159084,G__159085,G__159086,G__159087,G__159088,G__159089,G__159090,G__159091,G__159092,G__159093,G__159094,G__159095,G__159096,G__159097,G__159098,G__159099,G__159100,G__159101,G__159102,G__159103,G__159104,G__159105));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159076,G__159077) : tailrecursion.hoplon.div.call(null,G__159076,G__159077));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159075) : tailrecursion.hoplon.div.call(null,G__159075));
})(),(function (){var G__159134 = cljs.core.PersistentArrayMap.EMPTY;
var G__159135 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This generates an iterative process, whose number of steps grows as the logarithm of the numbers involved."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159134,G__159135) : tailrecursion.hoplon.markdown.para_node.call(null,G__159134,G__159135));
})(),(function (){var G__159136 = cljs.core.PersistentArrayMap.EMPTY;
var G__159137 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The fact that the number of steps required by Euclid",(function (){var G__159138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159139 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159138,G__159139) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159138,G__159139));
})(),"s Algorithm has a logarithmic growth bears an interesting relation to the Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159136,G__159137) : tailrecursion.hoplon.markdown.para_node.call(null,G__159136,G__159137));
})(),(function (){var G__159140 = cljs.core.PersistentArrayMap.EMPTY;
var G__159141 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"**",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lam\u00E9",(function (){var G__159142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159143 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159142,G__159143) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159142,G__159143));
})(),"s Theorem:"], null)], 0))," If Euclid",(function (){var G__159144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159145 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159144,G__159145) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159144,G__159145));
})(),"s Algorithm requires \\(k\\) steps to compute the GCD of some pair, then the smaller number in the pair must be greater than or equal to the \\(k\\)th Fibonacci number.",(function (){var G__159146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159147 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can prove this by induction. Let",(function (){var G__159148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159149 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159148,G__159149) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159148,G__159149));
})(),"s pick an arbitrary natural number \\(n\\), and assume that for any \\(k<n\\), if a pair of natural numbers \\(a>b>0\\) requires \\(k\\) steps of Euclid",(function (){var G__159150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159150,G__159151) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159150,G__159151));
})(),"s algorithm to compute their GCD, then both \\(a\\) and \\(b\\) are greater than or equal to \\(Fib(k)\\). Now we take a pair, \\((a_n,b_n)\\) that takes \\(n\\) steps. If \\(n=0\\), then we know we started with zero and we",(function (){var G__159152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159152,G__159153) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159152,G__159153));
})(),"re done. If \\(n=1\\), then \\(b|a\\), and since neither of them are 0, we",(function (){var G__159154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159154,G__159155) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159154,G__159155));
})(),"re done. Otherwise, we note that every time we apply an iteration of the algorithm \\((a_n,b_n)\\to(a_{n-1},b_{n-1})\\), where \\(a_{n-1}=b_n\\) and \\(a_n=q\\cdot b_n+b_{n-1}\\) for some integer \\(q>0\\). Now we note, if we apply two iterations, \\((a_n,b_n)\\to (a_{n-2},b_{n-2})\\), where \\(a_{n-2}=b_{n-1}\\) and \\(a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\) and \\(s>0\\). So we",(function (){var G__159156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159157 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159156,G__159157) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159156,G__159157));
})(),"ve concluded \\(b_n=a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\geq b_{n-1}+b_{n-2}\\), which by assumption are greater than \\(Fib(n-1)\\) and \\(Fib(n-2)\\) respectively. Hence, \\(a_n>b_n\\geq Fib(n-1)+Fib(n-2)=Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159146,G__159147) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159146,G__159147));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159140,G__159141) : tailrecursion.hoplon.markdown.para_node.call(null,G__159140,G__159141));
})(),(function (){var G__159158 = cljs.core.PersistentArrayMap.EMPTY;
var G__159159 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use this theorem to get an order-of-growth estimate for Euclid",(function (){var G__159160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159161 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159160,G__159161) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159160,G__159161));
})(),"s Algorithm. Let \\(n\\) be the smaller of the two inputs to the procedure. If the process takes \\(k\\) steps, then we must have \\(n\\geq Fib(k)\\approx\\phi^k/\\sqrt5\\). Therefore the smaller of steps \\(k\\) grows as the logarithm (to the base \\(\\phi\\)) of \\(n\\). Hence, the order of growth is \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159158,G__159159) : tailrecursion.hoplon.markdown.para_node.call(null,G__159158,G__159159));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158987;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158986;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158985;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158984;
}})()], 0));
var G__153295 = "";
var G__153296 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"20"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_159162 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159163 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159164 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159165 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159166 = cljs.core.PersistentArrayMap.EMPTY;
var G__159167 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process that a procedure generates is of course dependent on the rules used by the interpreter. As an example, consider the iterative ",(function (){var G__159168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__159169 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159168,G__159169) : tailrecursion.hoplon.markdown.code_node.call(null,G__159168,G__159169));
})()," procedure given above. Suppose we were to interpret this procedure using normal-order evaluation, as discussed in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.5"], null)], 0)),". (The normal-order-evaluation rule for ",(function (){var G__159170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"if"], null);
var G__159171 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159170,G__159171) : tailrecursion.hoplon.markdown.code_node.call(null,G__159170,G__159171));
})()," is described in exercise 1.5.) Using the substitution method (for normal order), illustrate the process generated in evaluating ",(function (){var G__159172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(gcd 206\n40)"], null);
var G__159173 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159172,G__159173) : tailrecursion.hoplon.markdown.code_node.call(null,G__159172,G__159173));
})()," and indicate the ",(function (){var G__159174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__159175 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159174,G__159175) : tailrecursion.hoplon.markdown.code_node.call(null,G__159174,G__159175));
})()," operations that are actually performed. How many ",(function (){var G__159176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__159177 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159176,G__159177) : tailrecursion.hoplon.markdown.code_node.call(null,G__159176,G__159177));
})()," operations are actually performed in the normal-order evaluation of ",(function (){var G__159178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(gcd 206 40)"], null);
var G__159179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159178,G__159179) : tailrecursion.hoplon.markdown.code_node.call(null,G__159178,G__159179));
})(),"? In the applicative-order evaluation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159166,G__159167) : tailrecursion.hoplon.markdown.para_node.call(null,G__159166,G__159167));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159165;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159164;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159163;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159162;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_159180 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159181 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159182 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159183 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159184 = cljs.core.PersistentArrayMap.EMPTY;
var G__159185 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For applicative order evaluation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159184,G__159185) : tailrecursion.hoplon.markdown.para_node.call(null,G__159184,G__159185));
})(),(function (){var G__159186 = (function (){var G__159187 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159188 = (function (){var G__159189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159190 = "(";
var G__159191 = (function (){var G__159280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159281 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159280,G__159281) : tailrecursion.hoplon.span.call(null,G__159280,G__159281));
})();
var G__159192 = " ";
var G__159193 = (function (){var G__159282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159283 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159282,G__159283) : tailrecursion.hoplon.span.call(null,G__159282,G__159283));
})();
var G__159194 = " ";
var G__159195 = (function (){var G__159284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159285 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159284,G__159285) : tailrecursion.hoplon.span.call(null,G__159284,G__159285));
})();
var G__159196 = ") ";
var G__159197 = (function (){var G__159286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159287 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159286,G__159287) : tailrecursion.hoplon.span.call(null,G__159286,G__159287));
})();
var G__159198 = "(";
var G__159199 = (function (){var G__159288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159289 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159288,G__159289) : tailrecursion.hoplon.span.call(null,G__159288,G__159289));
})();
var G__159200 = " ";
var G__159201 = (function (){var G__159290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159291 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159290,G__159291) : tailrecursion.hoplon.span.call(null,G__159290,G__159291));
})();
var G__159202 = " (";
var G__159203 = (function (){var G__159292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159293 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159292,G__159293) : tailrecursion.hoplon.span.call(null,G__159292,G__159293));
})();
var G__159204 = " ";
var G__159205 = (function (){var G__159294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159295 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159294,G__159295) : tailrecursion.hoplon.span.call(null,G__159294,G__159295));
})();
var G__159206 = " ";
var G__159207 = (function (){var G__159296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159297 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159296,G__159297) : tailrecursion.hoplon.span.call(null,G__159296,G__159297));
})();
var G__159208 = "))\n             ";
var G__159209 = (function (){var G__159298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159299 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159298,G__159299) : tailrecursion.hoplon.span.call(null,G__159298,G__159299));
})();
var G__159210 = "(";
var G__159211 = (function (){var G__159300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159301 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159300,G__159301) : tailrecursion.hoplon.span.call(null,G__159300,G__159301));
})();
var G__159212 = " ";
var G__159213 = (function (){var G__159302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159303 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159302,G__159303) : tailrecursion.hoplon.span.call(null,G__159302,G__159303));
})();
var G__159214 = " ";
var G__159215 = (function (){var G__159304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159305 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159304,G__159305) : tailrecursion.hoplon.span.call(null,G__159304,G__159305));
})();
var G__159216 = ")\n             ";
var G__159217 = (function (){var G__159306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159307 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159306,G__159307) : tailrecursion.hoplon.span.call(null,G__159306,G__159307));
})();
var G__159218 = "(";
var G__159219 = (function (){var G__159308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159309 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159308,G__159309) : tailrecursion.hoplon.span.call(null,G__159308,G__159309));
})();
var G__159220 = " ";
var G__159221 = (function (){var G__159310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159311 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159310,G__159311) : tailrecursion.hoplon.span.call(null,G__159310,G__159311));
})();
var G__159222 = " (";
var G__159223 = (function (){var G__159312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159313 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159312,G__159313) : tailrecursion.hoplon.span.call(null,G__159312,G__159313));
})();
var G__159224 = " ";
var G__159225 = (function (){var G__159314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159315 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159314,G__159315) : tailrecursion.hoplon.span.call(null,G__159314,G__159315));
})();
var G__159226 = " ";
var G__159227 = (function (){var G__159316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159317 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159316,G__159317) : tailrecursion.hoplon.span.call(null,G__159316,G__159317));
})();
var G__159228 = "))\n             ";
var G__159229 = (function (){var G__159318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159319 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159318,G__159319) : tailrecursion.hoplon.span.call(null,G__159318,G__159319));
})();
var G__159230 = "(";
var G__159231 = (function (){var G__159320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159321 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159320,G__159321) : tailrecursion.hoplon.span.call(null,G__159320,G__159321));
})();
var G__159232 = " ";
var G__159233 = (function (){var G__159322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159323 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159322,G__159323) : tailrecursion.hoplon.span.call(null,G__159322,G__159323));
})();
var G__159234 = " ";
var G__159235 = (function (){var G__159324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159325 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159324,G__159325) : tailrecursion.hoplon.span.call(null,G__159324,G__159325));
})();
var G__159236 = "\n             ";
var G__159237 = (function (){var G__159326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159327 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159326,G__159327) : tailrecursion.hoplon.span.call(null,G__159326,G__159327));
})();
var G__159238 = "(";
var G__159239 = (function (){var G__159328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159329 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159328,G__159329) : tailrecursion.hoplon.span.call(null,G__159328,G__159329));
})();
var G__159240 = " ";
var G__159241 = (function (){var G__159330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159331 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159330,G__159331) : tailrecursion.hoplon.span.call(null,G__159330,G__159331));
})();
var G__159242 = " (";
var G__159243 = (function (){var G__159332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159333 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159332,G__159333) : tailrecursion.hoplon.span.call(null,G__159332,G__159333));
})();
var G__159244 = " ";
var G__159245 = (function (){var G__159334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159335 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159334,G__159335) : tailrecursion.hoplon.span.call(null,G__159334,G__159335));
})();
var G__159246 = " ";
var G__159247 = (function (){var G__159336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159337 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159336,G__159337) : tailrecursion.hoplon.span.call(null,G__159336,G__159337));
})();
var G__159248 = "))\n             ";
var G__159249 = (function (){var G__159338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159339 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159338,G__159339) : tailrecursion.hoplon.span.call(null,G__159338,G__159339));
})();
var G__159250 = "(";
var G__159251 = (function (){var G__159340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159341 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159340,G__159341) : tailrecursion.hoplon.span.call(null,G__159340,G__159341));
})();
var G__159252 = " ";
var G__159253 = (function (){var G__159342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159343 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159342,G__159343) : tailrecursion.hoplon.span.call(null,G__159342,G__159343));
})();
var G__159254 = " ";
var G__159255 = (function (){var G__159344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159345 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159344,G__159345) : tailrecursion.hoplon.span.call(null,G__159344,G__159345));
})();
var G__159256 = ")\n             ";
var G__159257 = (function (){var G__159346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159347 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159346,G__159347) : tailrecursion.hoplon.span.call(null,G__159346,G__159347));
})();
var G__159258 = "(";
var G__159259 = (function (){var G__159348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159349 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159348,G__159349) : tailrecursion.hoplon.span.call(null,G__159348,G__159349));
})();
var G__159260 = " ";
var G__159261 = (function (){var G__159350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159351 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159350,G__159351) : tailrecursion.hoplon.span.call(null,G__159350,G__159351));
})();
var G__159262 = " (";
var G__159263 = (function (){var G__159352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159353 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159352,G__159353) : tailrecursion.hoplon.span.call(null,G__159352,G__159353));
})();
var G__159264 = " ";
var G__159265 = (function (){var G__159354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159355 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159354,G__159355) : tailrecursion.hoplon.span.call(null,G__159354,G__159355));
})();
var G__159266 = " ";
var G__159267 = (function (){var G__159356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159357 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159356,G__159357) : tailrecursion.hoplon.span.call(null,G__159356,G__159357));
})();
var G__159268 = "))\n             ";
var G__159269 = (function (){var G__159358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159359 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159358,G__159359) : tailrecursion.hoplon.span.call(null,G__159358,G__159359));
})();
var G__159270 = "(";
var G__159271 = (function (){var G__159360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159361 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159360,G__159361) : tailrecursion.hoplon.span.call(null,G__159360,G__159361));
})();
var G__159272 = " ";
var G__159273 = (function (){var G__159362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159363 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159362,G__159363) : tailrecursion.hoplon.span.call(null,G__159362,G__159363));
})();
var G__159274 = " ";
var G__159275 = (function (){var G__159364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159365 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159364,G__159365) : tailrecursion.hoplon.span.call(null,G__159364,G__159365));
})();
var G__159276 = ")\n             ";
var G__159277 = (function (){var G__159366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159367 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159366,G__159367) : tailrecursion.hoplon.span.call(null,G__159366,G__159367));
})();
var G__159278 = (function (){var G__159368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159369 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159368,G__159369) : tailrecursion.hoplon.span.call(null,G__159368,G__159369));
})();
var G__159279 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__159189,G__159190,G__159191,G__159192,G__159193,G__159194,G__159195,G__159196,G__159197,G__159198,G__159199,G__159200,G__159201,G__159202,G__159203,G__159204,G__159205,G__159206,G__159207,G__159208,G__159209,G__159210,G__159211,G__159212,G__159213,G__159214,G__159215,G__159216,G__159217,G__159218,G__159219,G__159220,G__159221,G__159222,G__159223,G__159224,G__159225,G__159226,G__159227,G__159228,G__159229,G__159230,G__159231,G__159232,G__159233,G__159234,G__159235,G__159236,G__159237,G__159238,G__159239,G__159240,G__159241,G__159242,G__159243,G__159244,G__159245,G__159246,G__159247,G__159248,G__159249,G__159250,G__159251,G__159252,G__159253,G__159254,G__159255,G__159256,G__159257,G__159258,G__159259,G__159260,G__159261,G__159262,G__159263,G__159264,G__159265,G__159266,G__159267,G__159268,G__159269,G__159270,G__159271,G__159272,G__159273,G__159274,G__159275,G__159276,G__159277,G__159278,G__159279) : tailrecursion.hoplon.pre.call(null,G__159189,G__159190,G__159191,G__159192,G__159193,G__159194,G__159195,G__159196,G__159197,G__159198,G__159199,G__159200,G__159201,G__159202,G__159203,G__159204,G__159205,G__159206,G__159207,G__159208,G__159209,G__159210,G__159211,G__159212,G__159213,G__159214,G__159215,G__159216,G__159217,G__159218,G__159219,G__159220,G__159221,G__159222,G__159223,G__159224,G__159225,G__159226,G__159227,G__159228,G__159229,G__159230,G__159231,G__159232,G__159233,G__159234,G__159235,G__159236,G__159237,G__159238,G__159239,G__159240,G__159241,G__159242,G__159243,G__159244,G__159245,G__159246,G__159247,G__159248,G__159249,G__159250,G__159251,G__159252,G__159253,G__159254,G__159255,G__159256,G__159257,G__159258,G__159259,G__159260,G__159261,G__159262,G__159263,G__159264,G__159265,G__159266,G__159267,G__159268,G__159269,G__159270,G__159271,G__159272,G__159273,G__159274,G__159275,G__159276,G__159277,G__159278,G__159279));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159187,G__159188) : tailrecursion.hoplon.div.call(null,G__159187,G__159188));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159186) : tailrecursion.hoplon.div.call(null,G__159186));
})(),(function (){var G__159370 = cljs.core.PersistentArrayMap.EMPTY;
var G__159371 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in applicative order, ",(function (){var G__159372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__159373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159372,G__159373) : tailrecursion.hoplon.markdown.code_node.call(null,G__159372,G__159373));
})()," is only called four times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159370,G__159371) : tailrecursion.hoplon.markdown.para_node.call(null,G__159370,G__159371));
})(),(function (){var G__159374 = cljs.core.PersistentArrayMap.EMPTY;
var G__159375 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For normal-order evaluation it would start with ",(function (){var G__159376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= 40 0)"], null);
var G__159377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159376,G__159377) : tailrecursion.hoplon.markdown.code_node.call(null,G__159376,G__159377));
})()," which would lead it to ",(function (){var G__159378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(GCD 40 (mod 206 40))"], null);
var G__159379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159378,G__159379) : tailrecursion.hoplon.markdown.code_node.call(null,G__159378,G__159379));
})()," without computing the ",(function (){var G__159380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__159381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159380,G__159381) : tailrecursion.hoplon.markdown.code_node.call(null,G__159380,G__159381));
})()," yet. Then it evaluates ",(function (){var G__159382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (mod 206 40) 0)"], null);
var G__159383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159382,G__159383) : tailrecursion.hoplon.markdown.code_node.call(null,G__159382,G__159383));
})()," with our first ",(function (){var G__159384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__159385 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159384,G__159385) : tailrecursion.hoplon.markdown.code_node.call(null,G__159384,G__159385));
})()," evaluation. Then it calls ",(function (){var G__159386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(GCD (mod 206 40) (mod 40 (mod 206 40)))"], null);
var G__159387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159386,G__159387) : tailrecursion.hoplon.markdown.code_node.call(null,G__159386,G__159387));
})()," without computing the ",(function (){var G__159388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mods"], null);
var G__159389 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159388,G__159389) : tailrecursion.hoplon.markdown.code_node.call(null,G__159388,G__159389));
})(),", which evaluates ",(function (){var G__159390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (mod 40 (mod 206\n40)) 0)"], null);
var G__159391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159390,G__159391) : tailrecursion.hoplon.markdown.code_node.call(null,G__159390,G__159391));
})()," which gives us our second and third calls for ",(function (){var G__159392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__159393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159392,G__159393) : tailrecursion.hoplon.markdown.code_node.call(null,G__159392,G__159393));
})()," and calls ",(function (){var G__159394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(GCD (mod 40 (mod 206 40)) (mod (mod 206 40) (mod 40 (mod 206\n40))))"], null);
var G__159395 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159394,G__159395) : tailrecursion.hoplon.markdown.code_node.call(null,G__159394,G__159395));
})()," without evaluating the arguments. This calls ",(function (){var G__159396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (mod (mod\n206 40) (mod 40 (mod 206 40))) 0)"], null);
var G__159397 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159396,G__159397) : tailrecursion.hoplon.markdown.code_node.call(null,G__159396,G__159397));
})()," and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159374,G__159375) : tailrecursion.hoplon.markdown.para_node.call(null,G__159374,G__159375));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159183;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159182;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159181;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159180;
}})()], 0))], 0))], 0));
var G__153297 = "";
var G__153298 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: Testing for Primality"], null),(function (){var _STAR_references_STAR_159398 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159399 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159400 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159401 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159402 = cljs.core.PersistentArrayMap.EMPTY;
var G__159403 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section describes two methods for checking the primality of an integer \\(n\\), one with order of growth \\(\\Theta(\\sqrt n)\\), and a ",(function (){var G__159404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__159405 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159404,G__159405) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159404,G__159405));
})()," algorithm with order of growth \\(\\Theta(\\log n)\\). The exercises at the end of this section suggest programming projects based on these algorithms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159402,G__159403) : tailrecursion.hoplon.markdown.para_node.call(null,G__159402,G__159403));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159401;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159400;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159399;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159398;
}})()], 0));
var G__153299 = "";
var G__153300 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Searching for Divisors"], null),(function (){var _STAR_references_STAR_159406 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159407 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159408 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159409 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159410 = cljs.core.PersistentArrayMap.EMPTY;
var G__159411 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ancient times, mathematicians have been fascinated by the problems concerning prime numbers, and many people have worked on the problem of determining ways to test if numbers are prime. One way to test if a number is prime is to find the number",(function (){var G__159412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159413 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159412,G__159413) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159412,G__159413));
})(),"s divisors. The following program finds the smallest integral divisor (greater than 1) of a given number \\(n\\). It does this in a straightforward way, by testing \\(n\\) for divisibility by successive integers starting with 2."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159410,G__159411) : tailrecursion.hoplon.markdown.para_node.call(null,G__159410,G__159411));
})(),(function (){var G__159414 = (function (){var G__159415 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159416 = (function (){var G__159417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159418 = "(";
var G__159419 = (function (){var G__159483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159484 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159483,G__159484) : tailrecursion.hoplon.span.call(null,G__159483,G__159484));
})();
var G__159420 = (function (){var G__159485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159486 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159485,G__159486) : tailrecursion.hoplon.span.call(null,G__159485,G__159486));
})();
var G__159421 = " [";
var G__159422 = (function (){var G__159487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159488 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159487,G__159488) : tailrecursion.hoplon.span.call(null,G__159487,G__159488));
})();
var G__159423 = " ";
var G__159424 = (function (){var G__159489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159490 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159489,G__159490) : tailrecursion.hoplon.span.call(null,G__159489,G__159490));
})();
var G__159425 = "]\n  (";
var G__159426 = (function (){var G__159491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159492 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159491,G__159492) : tailrecursion.hoplon.span.call(null,G__159491,G__159492));
})();
var G__159427 = "(";
var G__159428 = (function (){var G__159493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159494 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159493,G__159494) : tailrecursion.hoplon.span.call(null,G__159493,G__159494));
})();
var G__159429 = " ";
var G__159430 = (function (){var G__159495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159496 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159495,G__159496) : tailrecursion.hoplon.span.call(null,G__159495,G__159496));
})();
var G__159431 = " ";
var G__159432 = (function (){var G__159497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159498 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159497,G__159498) : tailrecursion.hoplon.span.call(null,G__159497,G__159498));
})();
var G__159433 = ") ";
var G__159434 = (function (){var G__159499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159500 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159499,G__159500) : tailrecursion.hoplon.span.call(null,G__159499,G__159500));
})();
var G__159435 = "))\n(";
var G__159436 = (function (){var G__159501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159502 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159501,G__159502) : tailrecursion.hoplon.span.call(null,G__159501,G__159502));
})();
var G__159437 = (function (){var G__159503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159504 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159503,G__159504) : tailrecursion.hoplon.span.call(null,G__159503,G__159504));
})();
var G__159438 = " [";
var G__159439 = (function (){var G__159505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159506 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159505,G__159506) : tailrecursion.hoplon.span.call(null,G__159505,G__159506));
})();
var G__159440 = " ";
var G__159441 = (function (){var G__159507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159508 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159507,G__159508) : tailrecursion.hoplon.span.call(null,G__159507,G__159508));
})();
var G__159442 = "]\n  (";
var G__159443 = (function (){var G__159509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159510 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159509,G__159510) : tailrecursion.hoplon.span.call(null,G__159509,G__159510));
})();
var G__159444 = "(";
var G__159445 = (function (){var G__159511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159512 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159511,G__159512) : tailrecursion.hoplon.span.call(null,G__159511,G__159512));
})();
var G__159446 = "(";
var G__159447 = (function (){var G__159513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159514 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159513,G__159514) : tailrecursion.hoplon.span.call(null,G__159513,G__159514));
})();
var G__159448 = " ";
var G__159449 = (function (){var G__159515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159516 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159515,G__159516) : tailrecursion.hoplon.span.call(null,G__159515,G__159516));
})();
var G__159450 = ") ";
var G__159451 = (function (){var G__159517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159518 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159517,G__159518) : tailrecursion.hoplon.span.call(null,G__159517,G__159518));
})();
var G__159452 = ") ";
var G__159453 = (function (){var G__159519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159520 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159519,G__159520) : tailrecursion.hoplon.span.call(null,G__159519,G__159520));
})();
var G__159454 = "\n        (";
var G__159455 = (function (){var G__159521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159522 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159521,G__159522) : tailrecursion.hoplon.span.call(null,G__159521,G__159522));
})();
var G__159456 = " ";
var G__159457 = (function (){var G__159523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159524 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159523,G__159524) : tailrecursion.hoplon.span.call(null,G__159523,G__159524));
})();
var G__159458 = " ";
var G__159459 = (function (){var G__159525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159526 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159525,G__159526) : tailrecursion.hoplon.span.call(null,G__159525,G__159526));
})();
var G__159460 = ") ";
var G__159461 = (function (){var G__159527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159528 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159527,G__159528) : tailrecursion.hoplon.span.call(null,G__159527,G__159528));
})();
var G__159462 = "\n        ";
var G__159463 = (function (){var G__159529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159530 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159529,G__159530) : tailrecursion.hoplon.span.call(null,G__159529,G__159530));
})();
var G__159464 = " (";
var G__159465 = (function (){var G__159531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159532 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159531,G__159532) : tailrecursion.hoplon.span.call(null,G__159531,G__159532));
})();
var G__159466 = " ";
var G__159467 = (function (){var G__159533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159534 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159533,G__159534) : tailrecursion.hoplon.span.call(null,G__159533,G__159534));
})();
var G__159468 = " (";
var G__159469 = (function (){var G__159535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159536 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159535,G__159536) : tailrecursion.hoplon.span.call(null,G__159535,G__159536));
})();
var G__159470 = (function (){var G__159537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159538 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159537,G__159538) : tailrecursion.hoplon.span.call(null,G__159537,G__159538));
})();
var G__159471 = "))))\n(";
var G__159472 = (function (){var G__159539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159540 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159539,G__159540) : tailrecursion.hoplon.span.call(null,G__159539,G__159540));
})();
var G__159473 = (function (){var G__159541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159542 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159541,G__159542) : tailrecursion.hoplon.span.call(null,G__159541,G__159542));
})();
var G__159474 = " [";
var G__159475 = (function (){var G__159543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159544 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159543,G__159544) : tailrecursion.hoplon.span.call(null,G__159543,G__159544));
})();
var G__159476 = "]\n  (";
var G__159477 = (function (){var G__159545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159546 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159545,G__159546) : tailrecursion.hoplon.span.call(null,G__159545,G__159546));
})();
var G__159478 = " ";
var G__159479 = (function (){var G__159547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159548 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159547,G__159548) : tailrecursion.hoplon.span.call(null,G__159547,G__159548));
})();
var G__159480 = " ";
var G__159481 = (function (){var G__159549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159550 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159549,G__159550) : tailrecursion.hoplon.span.call(null,G__159549,G__159550));
})();
var G__159482 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__159417,G__159418,G__159419,G__159420,G__159421,G__159422,G__159423,G__159424,G__159425,G__159426,G__159427,G__159428,G__159429,G__159430,G__159431,G__159432,G__159433,G__159434,G__159435,G__159436,G__159437,G__159438,G__159439,G__159440,G__159441,G__159442,G__159443,G__159444,G__159445,G__159446,G__159447,G__159448,G__159449,G__159450,G__159451,G__159452,G__159453,G__159454,G__159455,G__159456,G__159457,G__159458,G__159459,G__159460,G__159461,G__159462,G__159463,G__159464,G__159465,G__159466,G__159467,G__159468,G__159469,G__159470,G__159471,G__159472,G__159473,G__159474,G__159475,G__159476,G__159477,G__159478,G__159479,G__159480,G__159481,G__159482) : tailrecursion.hoplon.pre.call(null,G__159417,G__159418,G__159419,G__159420,G__159421,G__159422,G__159423,G__159424,G__159425,G__159426,G__159427,G__159428,G__159429,G__159430,G__159431,G__159432,G__159433,G__159434,G__159435,G__159436,G__159437,G__159438,G__159439,G__159440,G__159441,G__159442,G__159443,G__159444,G__159445,G__159446,G__159447,G__159448,G__159449,G__159450,G__159451,G__159452,G__159453,G__159454,G__159455,G__159456,G__159457,G__159458,G__159459,G__159460,G__159461,G__159462,G__159463,G__159464,G__159465,G__159466,G__159467,G__159468,G__159469,G__159470,G__159471,G__159472,G__159473,G__159474,G__159475,G__159476,G__159477,G__159478,G__159479,G__159480,G__159481,G__159482));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159415,G__159416) : tailrecursion.hoplon.div.call(null,G__159415,G__159416));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159414) : tailrecursion.hoplon.div.call(null,G__159414));
})(),(function (){var G__159551 = cljs.core.PersistentArrayMap.EMPTY;
var G__159552 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can test whether a number is prime as follows: \\(n\\) is prime if and only if \\(n\\) is its own smallest divisor."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159551,G__159552) : tailrecursion.hoplon.markdown.para_node.call(null,G__159551,G__159552));
})(),(function (){var G__159553 = (function (){var G__159554 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159555 = (function (){var G__159556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159557 = "(";
var G__159558 = (function (){var G__159570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159571 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159570,G__159571) : tailrecursion.hoplon.span.call(null,G__159570,G__159571));
})();
var G__159559 = (function (){var G__159572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159573 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159572,G__159573) : tailrecursion.hoplon.span.call(null,G__159572,G__159573));
})();
var G__159560 = " [";
var G__159561 = (function (){var G__159574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159575 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159574,G__159575) : tailrecursion.hoplon.span.call(null,G__159574,G__159575));
})();
var G__159562 = "]\n  (";
var G__159563 = (function (){var G__159576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159577 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159576,G__159577) : tailrecursion.hoplon.span.call(null,G__159576,G__159577));
})();
var G__159564 = (function (){var G__159578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159579 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159578,G__159579) : tailrecursion.hoplon.span.call(null,G__159578,G__159579));
})();
var G__159565 = " (";
var G__159566 = (function (){var G__159580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159581 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159580,G__159581) : tailrecursion.hoplon.span.call(null,G__159580,G__159581));
})();
var G__159567 = " ";
var G__159568 = (function (){var G__159582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159583 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159582,G__159583) : tailrecursion.hoplon.span.call(null,G__159582,G__159583));
})();
var G__159569 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__159556,G__159557,G__159558,G__159559,G__159560,G__159561,G__159562,G__159563,G__159564,G__159565,G__159566,G__159567,G__159568,G__159569) : tailrecursion.hoplon.pre.call(null,G__159556,G__159557,G__159558,G__159559,G__159560,G__159561,G__159562,G__159563,G__159564,G__159565,G__159566,G__159567,G__159568,G__159569));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159554,G__159555) : tailrecursion.hoplon.div.call(null,G__159554,G__159555));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159553) : tailrecursion.hoplon.div.call(null,G__159553));
})(),(function (){var G__159584 = cljs.core.PersistentArrayMap.EMPTY;
var G__159585 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The end test for ",(function (){var G__159586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"find-divisor"], null);
var G__159587 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159586,G__159587) : tailrecursion.hoplon.markdown.code_node.call(null,G__159586,G__159587));
})()," is based on the fact that if \\(n\\) is not prime it must have a divisor less than or equal to \\(\\sqrt n\\).",(function (){var G__159588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159589 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(d\\) is a divisor of \\(n\\), then so id \\(n/d\\). But \\(d\\) and \\(n/d\\) cannot both be greater than \\(\\sqrt n\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159588,G__159589) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159588,G__159589));
})()," This means that the algorithm need only test divisors between 1 and \\(\\sqrt n\\). Consequently, the number of steps required to identify \\(n\\) as prime will have order of growth \\(\\Theta (\\sqrt n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159584,G__159585) : tailrecursion.hoplon.markdown.para_node.call(null,G__159584,G__159585));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159409;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159408;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159407;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159406;
}})()], 0));
var G__153301 = "";
var G__153302 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"The Fermat Test"], null),(function (){var _STAR_references_STAR_159590 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159591 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159592 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159593 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159594 = cljs.core.PersistentArrayMap.EMPTY;
var G__159595 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The \\(\\Theta(\\log n)\\) primality test is based on a result from number theory known as Fermat",(function (){var G__159596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159597 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159596,G__159597) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159596,G__159597));
})(),"s Little Theorem.",(function (){var G__159598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159599 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pierre de Fermat (1601-1665) is considered to be the founder of modern number theory. He obtained many important number-theoretic results, but he usually announced just the results, without providing his proofs. Fermat",(function (){var G__159600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159601 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159600,G__159601) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159600,G__159601));
})(),"s Little Theorem was stated in a letter he wrote in 1640. The first published proof was given by Euler in 1736 (and an earlier, identical proof was discovered in the unpublished manuscripts of Leibniz). The most famous of Fermat",(function (){var G__159602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159602,G__159603) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159602,G__159603));
})(),"s results ",(function (){var G__159604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__159605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159604,G__159605) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159604,G__159605));
})()," known as Fermat",(function (){var G__159606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159606,G__159607) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159606,G__159607));
})(),"s Last Theorem ",(function (){var G__159608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__159609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159608,G__159609) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159608,G__159609));
})()," was jotted down in 1637 in his copy of the book ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Arithmetic"], null)], 0))," (by the third-century Greek mathematician Diophantus) with the remark ",(function (){var G__159610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__159611 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I have discovered a truly remarkable proof, but this margin is too small to contain it."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159610,G__159611) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159610,G__159611));
})()," Finding a proof of Fermat",(function (){var G__159612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159612,G__159613) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159612,G__159613));
})(),"s Last Theorem became one of the most famous challenges in number theory. A complete solution was finally given in 1995 by Andrew Wiles of Princeton University."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159598,G__159599) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159598,G__159599));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159594,G__159595) : tailrecursion.hoplon.markdown.para_node.call(null,G__159594,G__159595));
})(),(function (){var G__159614 = cljs.core.PersistentArrayMap.EMPTY;
var G__159615 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"**",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fermat",(function (){var G__159616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__159617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__159616,G__159617) : tailrecursion.hoplon.markdown.simple_node.call(null,G__159616,G__159617));
})(),"s Little Theorem:"], null)], 0))," If \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a\\) raised to the \\(n\\)th power is congruent to \\(a\\) modulo \\(n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159614,G__159615) : tailrecursion.hoplon.markdown.para_node.call(null,G__159614,G__159615));
})(),(function (){var G__159618 = cljs.core.PersistentArrayMap.EMPTY;
var G__159619 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(Two numbers are said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["congruent modulo"], null)], 0))," \\(n\\) if they both have the same remainder when divided by \\(n\\). The remainder of a number \\(a\\) when divided by \\(n\\) is also referred to as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remainder of a modulo n"], null)], 0))," or simply as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a modulo n"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159618,G__159619) : tailrecursion.hoplon.markdown.para_node.call(null,G__159618,G__159619));
})(),(function (){var G__159620 = cljs.core.PersistentArrayMap.EMPTY;
var G__159621 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is not prime, then, in general, most of the numbers \\(a<n\\) will not satisfy the above relation. This leads to the following algorithm for testing primality: Given a number \\(n\\), pick a random number \\(a<n\\) and compute the remainder of \\(a^n\\) modulo \\(n\\). If the result is not equal to \\(a\\), then \\(n\\) is certainly not prime. If it is \\(a\\), then chances are good that \\(n\\) is prime. Now pick another random number \\(a\\) and test it with the same method. If it also satisfies the equation, then we can be even more confident that \\(n\\) is prime. By trying more and more values of \\(a\\), we can increase our confidence in the result. This algorithm is known as the Fermat test."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159620,G__159621) : tailrecursion.hoplon.markdown.para_node.call(null,G__159620,G__159621));
})(),(function (){var G__159622 = cljs.core.PersistentArrayMap.EMPTY;
var G__159623 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the Fermat test, we need a procedure that computes the exponential of a number modulo another number:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159622,G__159623) : tailrecursion.hoplon.markdown.para_node.call(null,G__159622,G__159623));
})(),(function (){var G__159624 = (function (){var G__159625 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159626 = (function (){var G__159627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159628 = "(";
var G__159629 = (function (){var G__159684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159685 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159684,G__159685) : tailrecursion.hoplon.span.call(null,G__159684,G__159685));
})();
var G__159630 = (function (){var G__159686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159687 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159686,G__159687) : tailrecursion.hoplon.span.call(null,G__159686,G__159687));
})();
var G__159631 = " [";
var G__159632 = (function (){var G__159688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159689 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159688,G__159689) : tailrecursion.hoplon.span.call(null,G__159688,G__159689));
})();
var G__159633 = " ";
var G__159634 = (function (){var G__159690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159691 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159690,G__159691) : tailrecursion.hoplon.span.call(null,G__159690,G__159691));
})();
var G__159635 = " ";
var G__159636 = (function (){var G__159692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159693 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159692,G__159693) : tailrecursion.hoplon.span.call(null,G__159692,G__159693));
})();
var G__159637 = "]\n  (";
var G__159638 = (function (){var G__159694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159695 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159694,G__159695) : tailrecursion.hoplon.span.call(null,G__159694,G__159695));
})();
var G__159639 = "(";
var G__159640 = (function (){var G__159696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159697 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159696,G__159697) : tailrecursion.hoplon.span.call(null,G__159696,G__159697));
})();
var G__159641 = (function (){var G__159698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159699 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159698,G__159699) : tailrecursion.hoplon.span.call(null,G__159698,G__159699));
})();
var G__159642 = " ";
var G__159643 = (function (){var G__159700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159701 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159700,G__159701) : tailrecursion.hoplon.span.call(null,G__159700,G__159701));
})();
var G__159644 = ") ";
var G__159645 = (function (){var G__159702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159703 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159702,G__159703) : tailrecursion.hoplon.span.call(null,G__159702,G__159703));
})();
var G__159646 = "\n        (";
var G__159647 = (function (){var G__159704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159705 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159704,G__159705) : tailrecursion.hoplon.span.call(null,G__159704,G__159705));
})();
var G__159648 = " ";
var G__159649 = (function (){var G__159706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159707 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159706,G__159707) : tailrecursion.hoplon.span.call(null,G__159706,G__159707));
})();
var G__159650 = ") (";
var G__159651 = (function (){var G__159708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159709 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159708,G__159709) : tailrecursion.hoplon.span.call(null,G__159708,G__159709));
})();
var G__159652 = " (";
var G__159653 = (function (){var G__159710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159711 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159710,G__159711) : tailrecursion.hoplon.span.call(null,G__159710,G__159711));
})();
var G__159654 = " (";
var G__159655 = (function (){var G__159712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159713 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159712,G__159713) : tailrecursion.hoplon.span.call(null,G__159712,G__159713));
})();
var G__159656 = " ";
var G__159657 = (function (){var G__159714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159715 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159714,G__159715) : tailrecursion.hoplon.span.call(null,G__159714,G__159715));
})();
var G__159658 = " (";
var G__159659 = (function (){var G__159716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159717 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159716,G__159717) : tailrecursion.hoplon.span.call(null,G__159716,G__159717));
})();
var G__159660 = (function (){var G__159718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159719 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159718,G__159719) : tailrecursion.hoplon.span.call(null,G__159718,G__159719));
})();
var G__159661 = " ";
var G__159662 = (function (){var G__159720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159721 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159720,G__159721) : tailrecursion.hoplon.span.call(null,G__159720,G__159721));
})();
var G__159663 = "))) ";
var G__159664 = (function (){var G__159722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159723 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159722,G__159723) : tailrecursion.hoplon.span.call(null,G__159722,G__159723));
})();
var G__159665 = ")\n        ";
var G__159666 = (function (){var G__159724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159725 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159724,G__159725) : tailrecursion.hoplon.span.call(null,G__159724,G__159725));
})();
var G__159667 = " (";
var G__159668 = (function (){var G__159726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159727 = "remainder";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159726,G__159727) : tailrecursion.hoplon.span.call(null,G__159726,G__159727));
})();
var G__159669 = " (";
var G__159670 = (function (){var G__159728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159729 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159728,G__159729) : tailrecursion.hoplon.span.call(null,G__159728,G__159729));
})();
var G__159671 = (function (){var G__159730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159731 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159730,G__159731) : tailrecursion.hoplon.span.call(null,G__159730,G__159731));
})();
var G__159672 = " (";
var G__159673 = (function (){var G__159732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159733 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159732,G__159733) : tailrecursion.hoplon.span.call(null,G__159732,G__159733));
})();
var G__159674 = " ";
var G__159675 = (function (){var G__159734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159735 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159734,G__159735) : tailrecursion.hoplon.span.call(null,G__159734,G__159735));
})();
var G__159676 = " (";
var G__159677 = (function (){var G__159736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159737 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159736,G__159737) : tailrecursion.hoplon.span.call(null,G__159736,G__159737));
})();
var G__159678 = (function (){var G__159738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159739 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159738,G__159739) : tailrecursion.hoplon.span.call(null,G__159738,G__159739));
})();
var G__159679 = " ";
var G__159680 = (function (){var G__159740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159741 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159740,G__159741) : tailrecursion.hoplon.span.call(null,G__159740,G__159741));
})();
var G__159681 = "))) ";
var G__159682 = (function (){var G__159742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159743 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159742,G__159743) : tailrecursion.hoplon.span.call(null,G__159742,G__159743));
})();
var G__159683 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__159627,G__159628,G__159629,G__159630,G__159631,G__159632,G__159633,G__159634,G__159635,G__159636,G__159637,G__159638,G__159639,G__159640,G__159641,G__159642,G__159643,G__159644,G__159645,G__159646,G__159647,G__159648,G__159649,G__159650,G__159651,G__159652,G__159653,G__159654,G__159655,G__159656,G__159657,G__159658,G__159659,G__159660,G__159661,G__159662,G__159663,G__159664,G__159665,G__159666,G__159667,G__159668,G__159669,G__159670,G__159671,G__159672,G__159673,G__159674,G__159675,G__159676,G__159677,G__159678,G__159679,G__159680,G__159681,G__159682,G__159683) : tailrecursion.hoplon.pre.call(null,G__159627,G__159628,G__159629,G__159630,G__159631,G__159632,G__159633,G__159634,G__159635,G__159636,G__159637,G__159638,G__159639,G__159640,G__159641,G__159642,G__159643,G__159644,G__159645,G__159646,G__159647,G__159648,G__159649,G__159650,G__159651,G__159652,G__159653,G__159654,G__159655,G__159656,G__159657,G__159658,G__159659,G__159660,G__159661,G__159662,G__159663,G__159664,G__159665,G__159666,G__159667,G__159668,G__159669,G__159670,G__159671,G__159672,G__159673,G__159674,G__159675,G__159676,G__159677,G__159678,G__159679,G__159680,G__159681,G__159682,G__159683));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159625,G__159626) : tailrecursion.hoplon.div.call(null,G__159625,G__159626));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159624) : tailrecursion.hoplon.div.call(null,G__159624));
})(),(function (){var G__159744 = cljs.core.PersistentArrayMap.EMPTY;
var G__159745 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159746 = cljs.core.PersistentArrayMap.EMPTY;
var G__159747 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: This is not tail recursive!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159746,G__159747) : tailrecursion.hoplon.markdown.para_node.call(null,G__159746,G__159747));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__159744,G__159745) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__159744,G__159745));
})(),(function (){var G__159748 = cljs.core.PersistentArrayMap.EMPTY;
var G__159749 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is very similar to the ",(function (){var G__159750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__159751 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159750,G__159751) : tailrecursion.hoplon.markdown.code_node.call(null,G__159750,G__159751));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/4/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.4"], null)], 0)),". It uses successive squaring, so that the number of steps grows logarithmically with the exponent.",(function (){var G__159752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159753 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The reduction steps in the cases where the exponent \\(e\\) is greater than 1 are based on the fact that, for any integers \\(x, y\\), and \\(m\\), we can find the remainder of \\(x\\) times \\(y\\) modulo \\(m\\) by computing separately the remainders of \\(x\\) modulo \\(m\\) and \\(y\\) modulo \\(m\\), multiplying these, and then taking the remainder of the result modulo \\(m\\). For instance, in the case where \\(e\\) is even, we compute \\(b^{e/2}\\pmod m\\), square this, and take the remainder modulo m. This technique is useful because it means we can perform our computation without ever having to deal with numbers much larger than m. (Compare exercise 1.25.)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159752,G__159753) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159752,G__159753));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159748,G__159749) : tailrecursion.hoplon.markdown.para_node.call(null,G__159748,G__159749));
})(),(function (){var G__159754 = cljs.core.PersistentArrayMap.EMPTY;
var G__159755 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Fermat test is performed by choosing at randum a number \\(a\\) between 1 and \\(n-1\\) inclusive and checking whether the remainder modulo \\(n\\) of the \\(n\\)th power of \\(a\\) is equal to \\(a\\). The random number \\(a\\) is chosen using the procedure ",(function (){var G__159756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rand-int"], null);
var G__159757 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159756,G__159757) : tailrecursion.hoplon.markdown.code_node.call(null,G__159756,G__159757));
})()," which returns a nonnegative integer less than its integer input. Hence to obtain a random number between 1 and \\(n-1\\), we call ",(function (){var G__159758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rand-int"], null);
var G__159759 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159758,G__159759) : tailrecursion.hoplon.markdown.code_node.call(null,G__159758,G__159759));
})()," with an input of \\(n-1\\) and add 1 to the result"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159754,G__159755) : tailrecursion.hoplon.markdown.para_node.call(null,G__159754,G__159755));
})(),(function (){var G__159760 = (function (){var G__159761 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159762 = (function (){var G__159763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159764 = "(";
var G__159765 = (function (){var G__159790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159791 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159790,G__159791) : tailrecursion.hoplon.span.call(null,G__159790,G__159791));
})();
var G__159766 = (function (){var G__159792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159793 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159792,G__159793) : tailrecursion.hoplon.span.call(null,G__159792,G__159793));
})();
var G__159767 = " [";
var G__159768 = (function (){var G__159794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159795 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159794,G__159795) : tailrecursion.hoplon.span.call(null,G__159794,G__159795));
})();
var G__159769 = "]\n  (";
var G__159770 = (function (){var G__159796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159797 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159796,G__159797) : tailrecursion.hoplon.span.call(null,G__159796,G__159797));
})();
var G__159771 = "(";
var G__159772 = (function (){var G__159798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159799 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159798,G__159799) : tailrecursion.hoplon.span.call(null,G__159798,G__159799));
})();
var G__159773 = " (";
var G__159774 = (function (){var G__159800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159801 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159800,G__159801) : tailrecursion.hoplon.span.call(null,G__159800,G__159801));
})();
var G__159775 = (function (){var G__159802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159803 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159802,G__159803) : tailrecursion.hoplon.span.call(null,G__159802,G__159803));
})();
var G__159776 = " (";
var G__159777 = (function (){var G__159804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159805 = "rand-int ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159804,G__159805) : tailrecursion.hoplon.span.call(null,G__159804,G__159805));
})();
var G__159778 = "(";
var G__159779 = (function (){var G__159806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159807 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159806,G__159807) : tailrecursion.hoplon.span.call(null,G__159806,G__159807));
})();
var G__159780 = (function (){var G__159808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159809 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159808,G__159809) : tailrecursion.hoplon.span.call(null,G__159808,G__159809));
})();
var G__159781 = " ";
var G__159782 = (function (){var G__159810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159811 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159810,G__159811) : tailrecursion.hoplon.span.call(null,G__159810,G__159811));
})();
var G__159783 = ")))\n             ";
var G__159784 = (function (){var G__159812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159813 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159812,G__159813) : tailrecursion.hoplon.span.call(null,G__159812,G__159813));
})();
var G__159785 = "\n             ";
var G__159786 = (function (){var G__159814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159815 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159814,G__159815) : tailrecursion.hoplon.span.call(null,G__159814,G__159815));
})();
var G__159787 = ")\n     ";
var G__159788 = (function (){var G__159816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159817 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159816,G__159817) : tailrecursion.hoplon.span.call(null,G__159816,G__159817));
})();
var G__159789 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__159763,G__159764,G__159765,G__159766,G__159767,G__159768,G__159769,G__159770,G__159771,G__159772,G__159773,G__159774,G__159775,G__159776,G__159777,G__159778,G__159779,G__159780,G__159781,G__159782,G__159783,G__159784,G__159785,G__159786,G__159787,G__159788,G__159789) : tailrecursion.hoplon.pre.call(null,G__159763,G__159764,G__159765,G__159766,G__159767,G__159768,G__159769,G__159770,G__159771,G__159772,G__159773,G__159774,G__159775,G__159776,G__159777,G__159778,G__159779,G__159780,G__159781,G__159782,G__159783,G__159784,G__159785,G__159786,G__159787,G__159788,G__159789));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159761,G__159762) : tailrecursion.hoplon.div.call(null,G__159761,G__159762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159760) : tailrecursion.hoplon.div.call(null,G__159760));
})(),(function (){var G__159818 = cljs.core.PersistentArrayMap.EMPTY;
var G__159819 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure runs the test a given number of times, as specified by a parameter. Its value is true if the test succeeds every time, and false otherwise."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159818,G__159819) : tailrecursion.hoplon.markdown.para_node.call(null,G__159818,G__159819));
})(),(function (){var G__159820 = (function (){var G__159821 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159822 = (function (){var G__159823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159824 = "(";
var G__159825 = (function (){var G__159862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159863 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159862,G__159863) : tailrecursion.hoplon.span.call(null,G__159862,G__159863));
})();
var G__159826 = (function (){var G__159864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159865 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159864,G__159865) : tailrecursion.hoplon.span.call(null,G__159864,G__159865));
})();
var G__159827 = " [";
var G__159828 = (function (){var G__159866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159867 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159866,G__159867) : tailrecursion.hoplon.span.call(null,G__159866,G__159867));
})();
var G__159829 = " ";
var G__159830 = (function (){var G__159868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159869 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159868,G__159869) : tailrecursion.hoplon.span.call(null,G__159868,G__159869));
})();
var G__159831 = "]\n  (";
var G__159832 = (function (){var G__159870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159871 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159870,G__159871) : tailrecursion.hoplon.span.call(null,G__159870,G__159871));
})();
var G__159833 = "[";
var G__159834 = (function (){var G__159872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159873 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159872,G__159873) : tailrecursion.hoplon.span.call(null,G__159872,G__159873));
})();
var G__159835 = " ";
var G__159836 = (function (){var G__159874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159875 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159874,G__159875) : tailrecursion.hoplon.span.call(null,G__159874,G__159875));
})();
var G__159837 = "]\n    (";
var G__159838 = (function (){var G__159876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159877 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159876,G__159877) : tailrecursion.hoplon.span.call(null,G__159876,G__159877));
})();
var G__159839 = "(";
var G__159840 = (function (){var G__159878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159879 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159878,G__159879) : tailrecursion.hoplon.span.call(null,G__159878,G__159879));
})();
var G__159841 = (function (){var G__159880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159881 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159880,G__159881) : tailrecursion.hoplon.span.call(null,G__159880,G__159881));
})();
var G__159842 = " ";
var G__159843 = (function (){var G__159882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159883 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159882,G__159883) : tailrecursion.hoplon.span.call(null,G__159882,G__159883));
})();
var G__159844 = ") ";
var G__159845 = (function (){var G__159884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159885 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159884,G__159885) : tailrecursion.hoplon.span.call(null,G__159884,G__159885));
})();
var G__159846 = "\n          (";
var G__159847 = (function (){var G__159886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159887 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159886,G__159887) : tailrecursion.hoplon.span.call(null,G__159886,G__159887));
})();
var G__159848 = " ";
var G__159849 = (function (){var G__159888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159889 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159888,G__159889) : tailrecursion.hoplon.span.call(null,G__159888,G__159889));
})();
var G__159850 = ") (";
var G__159851 = (function (){var G__159890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159891 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159890,G__159891) : tailrecursion.hoplon.span.call(null,G__159890,G__159891));
})();
var G__159852 = " (";
var G__159853 = (function (){var G__159892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159893 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159892,G__159893) : tailrecursion.hoplon.span.call(null,G__159892,G__159893));
})();
var G__159854 = (function (){var G__159894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159895 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159894,G__159895) : tailrecursion.hoplon.span.call(null,G__159894,G__159895));
})();
var G__159855 = " ";
var G__159856 = (function (){var G__159896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159897 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159896,G__159897) : tailrecursion.hoplon.span.call(null,G__159896,G__159897));
})();
var G__159857 = "))\n          ";
var G__159858 = (function (){var G__159898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159899 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159898,G__159899) : tailrecursion.hoplon.span.call(null,G__159898,G__159899));
})();
var G__159859 = " ";
var G__159860 = (function (){var G__159900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159901 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159900,G__159901) : tailrecursion.hoplon.span.call(null,G__159900,G__159901));
})();
var G__159861 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__159823,G__159824,G__159825,G__159826,G__159827,G__159828,G__159829,G__159830,G__159831,G__159832,G__159833,G__159834,G__159835,G__159836,G__159837,G__159838,G__159839,G__159840,G__159841,G__159842,G__159843,G__159844,G__159845,G__159846,G__159847,G__159848,G__159849,G__159850,G__159851,G__159852,G__159853,G__159854,G__159855,G__159856,G__159857,G__159858,G__159859,G__159860,G__159861) : tailrecursion.hoplon.pre.call(null,G__159823,G__159824,G__159825,G__159826,G__159827,G__159828,G__159829,G__159830,G__159831,G__159832,G__159833,G__159834,G__159835,G__159836,G__159837,G__159838,G__159839,G__159840,G__159841,G__159842,G__159843,G__159844,G__159845,G__159846,G__159847,G__159848,G__159849,G__159850,G__159851,G__159852,G__159853,G__159854,G__159855,G__159856,G__159857,G__159858,G__159859,G__159860,G__159861));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159821,G__159822) : tailrecursion.hoplon.div.call(null,G__159821,G__159822));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159820) : tailrecursion.hoplon.div.call(null,G__159820));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159593;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159592;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159591;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159590;
}})()], 0));
var G__153303 = "";
var G__153304 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Probabilistic Methods"], null),(function (){var _STAR_references_STAR_159902 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159903 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159904 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159905 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159906 = cljs.core.PersistentArrayMap.EMPTY;
var G__159907 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ther Fermat test differs in character from most familiar algorithms, in which one computes an answer that is guaranteed to be correct. Here, the answer obtained is only probably correct. More precisely, if \\(n\\) ever fails the Fermat test, we can be certain that \\(n\\) is not prime. But the fact that \\(n\\) passes the test, while an extremely strong indication, is still not a guarantee that \\(n\\) is prime. What we would like to say is that for any number \\(n\\), if we perform the test enough times and find that \\(n\\) always passes the test, then the probability of error in our primality test can be made as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159906,G__159907) : tailrecursion.hoplon.markdown.para_node.call(null,G__159906,G__159907));
})(),(function (){var G__159908 = cljs.core.PersistentArrayMap.EMPTY;
var G__159909 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, this assertion is not quite correct. There do exist numbers that fool the Fermat test: numbers \\(n\\) that are note prime and yet have th property that \\(a^n\\) is congruent to \\(a\\) modulo \\(n\\) for all integers \\(a< n\\). Such numbers are extremely rare, so the Fermat test is quite reliable in practice.",(function (){var G__159910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159911 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Numbers that fool the Fermat test are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Carmichael numbers"], null)], 0)),", and little is known about them other than that they are extremely rare. There are 255 Carmichael numbers below 100,000,000. The smallest few are 561, 1105, 1729, 2465, 2821, and 6601. In testing primality of very large numbers chosen at random, the chance of stumbling upon a value that fools the Fermat test is less than the chance that cosmic radiation will cause the computer to make an error in carrying out a ",(function (){var G__159912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__159913 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["correct"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159912,G__159913) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159912,G__159913));
})()," algorithm. Considering an algorithm to be inadequate for the first reason but not for the second illustrates the difference between mathematics and engineering."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159910,G__159911) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159910,G__159911));
})()," There are variations of the Fermat test that cannot be fooled. In these tests, as with the Fermat method, one tests the primality of an integer \\(n\\) by choosing a random integer \\(a< n\\) and checking some condition that depends upon \\(n\\) and \\(a\\). (See ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/exercise/28/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercise 1.28"], null)], 0))," for an example of such a test.) On the other hand, in contrast to the Fermat test, one can prove that, for any \\(n\\), the condition does not hold for most of the integers \\(a<n\\) unless \\(n\\) is prime. Thus, if \\(n\\) passes the test for some random choice of \\(a\\), the chances are better than even that \\(n\\) is prime. If \\(n\\) passes the test for two random choices of \\(a\\), the chances are better than 3 out of 4 that \\(n\\) is prime. By running the test with more and more randomly chosen values of \\(a\\) we can make the probability of error as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159908,G__159909) : tailrecursion.hoplon.markdown.para_node.call(null,G__159908,G__159909));
})(),(function (){var G__159914 = cljs.core.PersistentArrayMap.EMPTY;
var G__159915 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The existence of tests for which one can prove that the chance of error becomes arbitrarily small has sparked interest in algorithms of this type, which have come to be known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic algorithms"], null)], 0)),". There is a great deal of research activity in this area and probabilistic algorithms have been ruitfully applied to many fields.",(function (){var G__159916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__159917 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the most striking applications of probabilistic prime testing has been to the field of cryptography. Although it is now computationally infeasible to factor an arbitrary 200-digit number, the primality of such a number can be checked in a few seconds with the Fermat test. This fact forms the basis of a technique for constructing ",(function (){var G__159918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__159919 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unbreakable codes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159918,G__159919) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159918,G__159919));
})()," suggested by Rivest, Shamir, and Adleman (1977). The resulting ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["RSA algorithm"], null)], 0))," has become a widely used technique for enhancing the security of electronic communications. Because of this and related developments, the study of prime numbers, once considered the epitome of a topic in ",(function (){var G__159920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__159921 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159920,G__159921) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159920,G__159921));
})()," mathematics to be studied only for its own sake, now turns out to have important practical applications to cryptography, electronic funds transfer, and information retrieval."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__159916,G__159917) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__159916,G__159917));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159914,G__159915) : tailrecursion.hoplon.markdown.para_node.call(null,G__159914,G__159915));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159905;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159904;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159903;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159902;
}})()], 0));
var G__153305 = "";
var G__153306 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"21-28"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(21)], null),(function (){var _STAR_references_STAR_159922 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159923 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159924 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159925 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159926 = cljs.core.PersistentArrayMap.EMPTY;
var G__159927 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__159928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest-divisor"], null);
var G__159929 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159928,G__159929) : tailrecursion.hoplon.markdown.code_node.call(null,G__159928,G__159929));
})()," procedure to find the smallest divisor of each of the following numbers: 199, 1999,19999."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159926,G__159927) : tailrecursion.hoplon.markdown.para_node.call(null,G__159926,G__159927));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159925;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159924;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159923;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159922;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_159930 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159931 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159932 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159933 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159934 = cljs.core.PersistentArrayMap.EMPTY;
var G__159935 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["199 is prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159934,G__159935) : tailrecursion.hoplon.markdown.para_node.call(null,G__159934,G__159935));
})(),(function (){var G__159936 = cljs.core.PersistentArrayMap.EMPTY;
var G__159937 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1999 is also prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159936,G__159937) : tailrecursion.hoplon.markdown.para_node.call(null,G__159936,G__159937));
})(),(function (){var G__159938 = cljs.core.PersistentArrayMap.EMPTY;
var G__159939 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["7 is the smallest divisor of 19999"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159938,G__159939) : tailrecursion.hoplon.markdown.para_node.call(null,G__159938,G__159939));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159933;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159932;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159931;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159930;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(22)], null),(function (){var _STAR_references_STAR_159940 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159941 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_159942 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_159943 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159944 = cljs.core.PersistentArrayMap.EMPTY;
var G__159945 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Most Lisp implementations include a primitive (called ",(function (){var G__159946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"runtime"], null);
var G__159947 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159946,G__159947) : tailrecursion.hoplon.markdown.code_node.call(null,G__159946,G__159947));
})()," in Scheme) that returns an integer that specifies the amount of time the system has been running (measured, for example, in microseconds). In Clojure, however, there is a function that is better suited for our current needs called ",(function (){var G__159948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"time"], null);
var G__159949 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159948,G__159949) : tailrecursion.hoplon.markdown.code_node.call(null,G__159948,G__159949));
})()," that evaluates its argument and prints the time it took to evaluate it, then it returns the value of the expression. The following ",(function (){var G__159950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"timed-prime-test"], null);
var G__159951 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159950,G__159951) : tailrecursion.hoplon.markdown.code_node.call(null,G__159950,G__159951));
})()," procedure, when called with an integer \\(n\\), prints \\(n\\) and checks to see if \\(n\\) is prime while timing the test, prints the time it took to test the primality of the number followed by the value of that test (ie ",(function (){var G__159952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__159953 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159952,G__159953) : tailrecursion.hoplon.markdown.code_node.call(null,G__159952,G__159953));
})()," or ",(function (){var G__159954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"false"], null);
var G__159955 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__159954,G__159955) : tailrecursion.hoplon.markdown.code_node.call(null,G__159954,G__159955));
})(),"). But in order to successfully accomplish this task, we need to learn about a few more tools in the Clojure toolshed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159944,G__159945) : tailrecursion.hoplon.markdown.para_node.call(null,G__159944,G__159945));
})(),(function (){var G__159956 = cljs.core.PersistentArrayMap.EMPTY;
var G__159957 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you have any questions about the specific functions used in this (or any example), remember to check out ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"http://www.clojuredocs.org",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojuredocs.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159956,G__159957) : tailrecursion.hoplon.markdown.para_node.call(null,G__159956,G__159957));
})(),(function (){var G__159958 = (function (){var G__159959 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__159960 = (function (){var G__159961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__159962 = "(";
var G__159963 = (function (){var G__159979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159980 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159979,G__159980) : tailrecursion.hoplon.span.call(null,G__159979,G__159980));
})();
var G__159964 = (function (){var G__159981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159982 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159981,G__159982) : tailrecursion.hoplon.span.call(null,G__159981,G__159982));
})();
var G__159965 = " [";
var G__159966 = (function (){var G__159983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159984 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159983,G__159984) : tailrecursion.hoplon.span.call(null,G__159983,G__159984));
})();
var G__159967 = "]\n  (";
var G__159968 = (function (){var G__159985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__159986 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159985,G__159986) : tailrecursion.hoplon.span.call(null,G__159985,G__159986));
})();
var G__159969 = "(";
var G__159970 = (function (){var G__159987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159988 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159987,G__159988) : tailrecursion.hoplon.span.call(null,G__159987,G__159988));
})();
var G__159971 = (function (){var G__159989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159990 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159989,G__159990) : tailrecursion.hoplon.span.call(null,G__159989,G__159990));
})();
var G__159972 = ") (";
var G__159973 = (function (){var G__159991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159992 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159991,G__159992) : tailrecursion.hoplon.span.call(null,G__159991,G__159992));
})();
var G__159974 = "(";
var G__159975 = (function (){var G__159993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159994 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159993,G__159994) : tailrecursion.hoplon.span.call(null,G__159993,G__159994));
})();
var G__159976 = " ";
var G__159977 = (function (){var G__159995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__159996 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159995,G__159996) : tailrecursion.hoplon.span.call(null,G__159995,G__159996));
})();
var G__159978 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__159961,G__159962,G__159963,G__159964,G__159965,G__159966,G__159967,G__159968,G__159969,G__159970,G__159971,G__159972,G__159973,G__159974,G__159975,G__159976,G__159977,G__159978) : tailrecursion.hoplon.pre.call(null,G__159961,G__159962,G__159963,G__159964,G__159965,G__159966,G__159967,G__159968,G__159969,G__159970,G__159971,G__159972,G__159973,G__159974,G__159975,G__159976,G__159977,G__159978));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__159959,G__159960) : tailrecursion.hoplon.div.call(null,G__159959,G__159960));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__159958) : tailrecursion.hoplon.div.call(null,G__159958));
})(),(function (){var G__159997 = cljs.core.PersistentArrayMap.EMPTY;
var G__159998 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__159999 = cljs.core.PersistentArrayMap.EMPTY;
var G__160000 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alternatively, if we didn",(function (){var G__160001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160001,G__160002) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160001,G__160002));
})(),"t want to see the ",(function (){var G__160003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__160004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160003,G__160004) : tailrecursion.hoplon.markdown.code_node.call(null,G__160003,G__160004));
})(),"/",(function (){var G__160005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"false"], null);
var G__160006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160005,G__160006) : tailrecursion.hoplon.markdown.code_node.call(null,G__160005,G__160006));
})()," at the end, we could put ",(function (){var G__160007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(do (time (prime? n)) n)"], null);
var G__160008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160007,G__160008) : tailrecursion.hoplon.markdown.code_node.call(null,G__160007,G__160008));
})(),", which would evaluate the ",(function (){var G__160009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(time (prime? n))"], null);
var G__160010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160009,G__160010) : tailrecursion.hoplon.markdown.code_node.call(null,G__160009,G__160010));
})()," procedure, which would print the time it took to determine the primality of \\(n\\), then it would evaluate ",(function (){var G__160011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__160012 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160011,G__160012) : tailrecursion.hoplon.markdown.code_node.call(null,G__160011,G__160012));
})(),", and return the value, which is ",(function (){var G__160013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__160014 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160013,G__160014) : tailrecursion.hoplon.markdown.code_node.call(null,G__160013,G__160014));
})()," itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__159999,G__160000) : tailrecursion.hoplon.markdown.para_node.call(null,G__159999,G__160000));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__159997,G__159998) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__159997,G__159998));
})(),(function (){var G__160015 = cljs.core.PersistentArrayMap.EMPTY;
var G__160016 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this procedure, write a procedure ",(function (){var G__160017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"search-for-primes"], null);
var G__160018 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160017,G__160018) : tailrecursion.hoplon.markdown.code_node.call(null,G__160017,G__160018));
})()," that checks for the primality of consecutive odd integers in a specific range. Use your procedure to find the three smallest primes larger than 10,000,000,000; larger than 100,000,000,000; larger than 1,000,000,000,000; larger than 10,000,000,000,000. Note the time needed to test each prime. Since the testing algorithm has order of growth of \\(\\Theta(\\sqrt n)\\), you should expect that the testing for primes around 10,000 should take about \\(\\sqrt 10\\) times as long as testing for primes around 1,000. Do your timing data bear this out? How well do the data for 100,000 and 1,000,000 support the \\(\\sqrt n\\) prediction? Is your result compatible with the notion that programs on your machine run in the time proportional to the number of steps required for the computation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160015,G__160016) : tailrecursion.hoplon.markdown.para_node.call(null,G__160015,G__160016));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159943;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159942;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_159941;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_159940;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160019 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160020 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160021 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160022 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160023 = (function (){var G__160024 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160025 = (function (){var G__160026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160027 = "(";
var G__160028 = (function (){var G__160081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160082 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160081,G__160082) : tailrecursion.hoplon.span.call(null,G__160081,G__160082));
})();
var G__160029 = (function (){var G__160083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160084 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160083,G__160084) : tailrecursion.hoplon.span.call(null,G__160083,G__160084));
})();
var G__160030 = " [";
var G__160031 = (function (){var G__160085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160086 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160085,G__160086) : tailrecursion.hoplon.span.call(null,G__160085,G__160086));
})();
var G__160032 = " ";
var G__160033 = (function (){var G__160087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160088 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160087,G__160088) : tailrecursion.hoplon.span.call(null,G__160087,G__160088));
})();
var G__160034 = "]\n  (";
var G__160035 = (function (){var G__160089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160090 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160089,G__160090) : tailrecursion.hoplon.span.call(null,G__160089,G__160090));
})();
var G__160036 = "[";
var G__160037 = (function (){var G__160091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160092 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160091,G__160092) : tailrecursion.hoplon.span.call(null,G__160091,G__160092));
})();
var G__160038 = " ";
var G__160039 = (function (){var G__160093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160094 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160093,G__160094) : tailrecursion.hoplon.span.call(null,G__160093,G__160094));
})();
var G__160040 = "\n         ";
var G__160041 = (function (){var G__160095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160096 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160095,G__160096) : tailrecursion.hoplon.span.call(null,G__160095,G__160096));
})();
var G__160042 = " ";
var G__160043 = (function (){var G__160097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160098 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160097,G__160098) : tailrecursion.hoplon.span.call(null,G__160097,G__160098));
})();
var G__160044 = "]\n    (";
var G__160045 = (function (){var G__160099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160100 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160099,G__160100) : tailrecursion.hoplon.span.call(null,G__160099,G__160100));
})();
var G__160046 = "(";
var G__160047 = (function (){var G__160101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160102 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160101,G__160102) : tailrecursion.hoplon.span.call(null,G__160101,G__160102));
})();
var G__160048 = (function (){var G__160103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160104 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160103,G__160104) : tailrecursion.hoplon.span.call(null,G__160103,G__160104));
})();
var G__160049 = " ";
var G__160050 = (function (){var G__160105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160106 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160105,G__160106) : tailrecursion.hoplon.span.call(null,G__160105,G__160106));
})();
var G__160051 = ") ";
var G__160052 = (function (){var G__160107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160108 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160107,G__160108) : tailrecursion.hoplon.span.call(null,G__160107,G__160108));
})();
var G__160053 = "\n          (";
var G__160054 = (function (){var G__160109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160110 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160109,G__160110) : tailrecursion.hoplon.span.call(null,G__160109,G__160110));
})();
var G__160055 = " ";
var G__160056 = (function (){var G__160111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160112 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160111,G__160112) : tailrecursion.hoplon.span.call(null,G__160111,G__160112));
})();
var G__160057 = ") (";
var G__160058 = (function (){var G__160113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160114 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160113,G__160114) : tailrecursion.hoplon.span.call(null,G__160113,G__160114));
})();
var G__160059 = "(";
var G__160060 = (function (){var G__160115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160116 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160115,G__160116) : tailrecursion.hoplon.span.call(null,G__160115,G__160116));
})();
var G__160061 = " ";
var G__160062 = (function (){var G__160117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160118 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160117,G__160118) : tailrecursion.hoplon.span.call(null,G__160117,G__160118));
})();
var G__160063 = ") (";
var G__160064 = (function (){var G__160119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160120 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160119,G__160120) : tailrecursion.hoplon.span.call(null,G__160119,G__160120));
})();
var G__160065 = " (";
var G__160066 = (function (){var G__160121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160122 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160121,G__160122) : tailrecursion.hoplon.span.call(null,G__160121,G__160122));
})();
var G__160067 = (function (){var G__160123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160124 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160123,G__160124) : tailrecursion.hoplon.span.call(null,G__160123,G__160124));
})();
var G__160068 = ") (";
var G__160069 = (function (){var G__160125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160126 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160125,G__160126) : tailrecursion.hoplon.span.call(null,G__160125,G__160126));
})();
var G__160070 = (function (){var G__160127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160128 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160127,G__160128) : tailrecursion.hoplon.span.call(null,G__160127,G__160128));
})();
var G__160071 = ")))\n          ";
var G__160072 = (function (){var G__160129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160130 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160129,G__160130) : tailrecursion.hoplon.span.call(null,G__160129,G__160130));
})();
var G__160073 = " (";
var G__160074 = (function (){var G__160131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160132 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160131,G__160132) : tailrecursion.hoplon.span.call(null,G__160131,G__160132));
})();
var G__160075 = " (";
var G__160076 = (function (){var G__160133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160134 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160133,G__160134) : tailrecursion.hoplon.span.call(null,G__160133,G__160134));
})();
var G__160077 = (function (){var G__160135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160136 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160135,G__160136) : tailrecursion.hoplon.span.call(null,G__160135,G__160136));
})();
var G__160078 = ") ";
var G__160079 = (function (){var G__160137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160138 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160137,G__160138) : tailrecursion.hoplon.span.call(null,G__160137,G__160138));
})();
var G__160080 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55(G__160026,G__160027,G__160028,G__160029,G__160030,G__160031,G__160032,G__160033,G__160034,G__160035,G__160036,G__160037,G__160038,G__160039,G__160040,G__160041,G__160042,G__160043,G__160044,G__160045,G__160046,G__160047,G__160048,G__160049,G__160050,G__160051,G__160052,G__160053,G__160054,G__160055,G__160056,G__160057,G__160058,G__160059,G__160060,G__160061,G__160062,G__160063,G__160064,G__160065,G__160066,G__160067,G__160068,G__160069,G__160070,G__160071,G__160072,G__160073,G__160074,G__160075,G__160076,G__160077,G__160078,G__160079,G__160080) : tailrecursion.hoplon.pre.call(null,G__160026,G__160027,G__160028,G__160029,G__160030,G__160031,G__160032,G__160033,G__160034,G__160035,G__160036,G__160037,G__160038,G__160039,G__160040,G__160041,G__160042,G__160043,G__160044,G__160045,G__160046,G__160047,G__160048,G__160049,G__160050,G__160051,G__160052,G__160053,G__160054,G__160055,G__160056,G__160057,G__160058,G__160059,G__160060,G__160061,G__160062,G__160063,G__160064,G__160065,G__160066,G__160067,G__160068,G__160069,G__160070,G__160071,G__160072,G__160073,G__160074,G__160075,G__160076,G__160077,G__160078,G__160079,G__160080));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160024,G__160025) : tailrecursion.hoplon.div.call(null,G__160024,G__160025));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160023) : tailrecursion.hoplon.div.call(null,G__160023));
})(),(function (){var G__160139 = cljs.core.PersistentArrayMap.EMPTY;
var G__160140 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And I leave the observations to you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160139,G__160140) : tailrecursion.hoplon.markdown.para_node.call(null,G__160139,G__160140));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160022;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160021;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160020;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160019;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(23)], null),(function (){var _STAR_references_STAR_160141 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160142 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160143 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160144 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160145 = cljs.core.PersistentArrayMap.EMPTY;
var G__160146 = new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__160147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest-divisor"], null);
var G__160148 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160147,G__160148) : tailrecursion.hoplon.markdown.code_node.call(null,G__160147,G__160148));
})()," procedure shown at the start of this section does lots of needless testing: After it checks to see if the number is divisible by 2 there is no point in checking to see if it is divisible by any larger even numbers. This suggests that the values used for ",(function (){var G__160149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"test-divisor"], null);
var G__160150 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160149,G__160150) : tailrecursion.hoplon.markdown.code_node.call(null,G__160149,G__160150));
})()," should not be 2,3,4,5,6,",(function (){var G__160151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__160152 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160151,G__160152) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160151,G__160152));
})(),", but rather, 2,3,5,7,9,",(function (){var G__160153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__160154 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160153,G__160154) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160153,G__160154));
})(),". To implement this chance, define a procedure ",(function (){var G__160155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"next"], null);
var G__160156 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160155,G__160156) : tailrecursion.hoplon.markdown.code_node.call(null,G__160155,G__160156));
})()," that returns 3 if its input is equal to 2 and otherwise returns its input plus 2. Modify the ",(function (){var G__160157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest divisor"], null);
var G__160158 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160157,G__160158) : tailrecursion.hoplon.markdown.code_node.call(null,G__160157,G__160158));
})()," procedure to use ",(function (){var G__160159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(next\ntest-divisor)"], null);
var G__160160 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160159,G__160160) : tailrecursion.hoplon.markdown.code_node.call(null,G__160159,G__160160));
})()," instead of ",(function (){var G__160161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ test-divisor 1)"], null);
var G__160162 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160161,G__160162) : tailrecursion.hoplon.markdown.code_node.call(null,G__160161,G__160162));
})()," or ",(function (){var G__160163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(inc\ntest-divisor)"], null);
var G__160164 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160163,G__160164) : tailrecursion.hoplon.markdown.code_node.call(null,G__160163,G__160164));
})(),". With ",(function (){var G__160165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"timed-prime-test"], null);
var G__160166 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160165,G__160166) : tailrecursion.hoplon.markdown.code_node.call(null,G__160165,G__160166));
})()," incorporating this modified version of ",(function (){var G__160167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest-divisor"], null);
var G__160168 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160167,G__160168) : tailrecursion.hoplon.markdown.code_node.call(null,G__160167,G__160168));
})(),", run the test for each of the 12 primes found in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/22/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0)),". Since this modification halves the number of test steps, you should expect it to run about twice as fast. Is this expectation confirmed? If not, what is the ovserved ration of the speeds of the two algorithms, and how do you explain the fact that it is different from 2? "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160145,G__160146) : tailrecursion.hoplon.markdown.para_node.call(null,G__160145,G__160146));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160144;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160143;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160142;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160141;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160169 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160170 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160171 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160172 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160173 = (function (){var G__160174 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160175 = (function (){var G__160176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160177 = "(";
var G__160178 = (function (){var G__160252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160253 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160252,G__160253) : tailrecursion.hoplon.span.call(null,G__160252,G__160253));
})();
var G__160179 = (function (){var G__160254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160255 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160254,G__160255) : tailrecursion.hoplon.span.call(null,G__160254,G__160255));
})();
var G__160180 = "[";
var G__160181 = (function (){var G__160256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160257 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160256,G__160257) : tailrecursion.hoplon.span.call(null,G__160256,G__160257));
})();
var G__160182 = "]\n  (";
var G__160183 = (function (){var G__160258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160259 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160258,G__160259) : tailrecursion.hoplon.span.call(null,G__160258,G__160259));
})();
var G__160184 = "(";
var G__160185 = (function (){var G__160260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160261 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160260,G__160261) : tailrecursion.hoplon.span.call(null,G__160260,G__160261));
})();
var G__160186 = " ";
var G__160187 = (function (){var G__160262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160263 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160262,G__160263) : tailrecursion.hoplon.span.call(null,G__160262,G__160263));
})();
var G__160188 = " ";
var G__160189 = (function (){var G__160264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160265 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160264,G__160265) : tailrecursion.hoplon.span.call(null,G__160264,G__160265));
})();
var G__160190 = ")\n      (";
var G__160191 = (function (){var G__160266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160267 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160266,G__160267) : tailrecursion.hoplon.span.call(null,G__160266,G__160267));
})();
var G__160192 = (function (){var G__160268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160269 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160268,G__160269) : tailrecursion.hoplon.span.call(null,G__160268,G__160269));
})();
var G__160193 = ")\n      (";
var G__160194 = (function (){var G__160270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160271 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160270,G__160271) : tailrecursion.hoplon.span.call(null,G__160270,G__160271));
})();
var G__160195 = (function (){var G__160272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160273 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160272,G__160273) : tailrecursion.hoplon.span.call(null,G__160272,G__160273));
})();
var G__160196 = " ";
var G__160197 = (function (){var G__160274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160275 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160274,G__160275) : tailrecursion.hoplon.span.call(null,G__160274,G__160275));
})();
var G__160198 = ")))\n(";
var G__160199 = (function (){var G__160276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160277 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160276,G__160277) : tailrecursion.hoplon.span.call(null,G__160276,G__160277));
})();
var G__160200 = (function (){var G__160278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160279 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160278,G__160279) : tailrecursion.hoplon.span.call(null,G__160278,G__160279));
})();
var G__160201 = " [";
var G__160202 = (function (){var G__160280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160281 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160280,G__160281) : tailrecursion.hoplon.span.call(null,G__160280,G__160281));
})();
var G__160203 = " ";
var G__160204 = (function (){var G__160282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160283 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160282,G__160283) : tailrecursion.hoplon.span.call(null,G__160282,G__160283));
})();
var G__160205 = "]\n  (";
var G__160206 = (function (){var G__160284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160285 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160284,G__160285) : tailrecursion.hoplon.span.call(null,G__160284,G__160285));
})();
var G__160207 = "[";
var G__160208 = (function (){var G__160286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160287 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160286,G__160287) : tailrecursion.hoplon.span.call(null,G__160286,G__160287));
})();
var G__160209 = " ";
var G__160210 = (function (){var G__160288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160289 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160288,G__160289) : tailrecursion.hoplon.span.call(null,G__160288,G__160289));
})();
var G__160211 = "\n         ";
var G__160212 = (function (){var G__160290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160291 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160290,G__160291) : tailrecursion.hoplon.span.call(null,G__160290,G__160291));
})();
var G__160213 = " ";
var G__160214 = (function (){var G__160292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160293 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160292,G__160293) : tailrecursion.hoplon.span.call(null,G__160292,G__160293));
})();
var G__160215 = "]\n    (";
var G__160216 = (function (){var G__160294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160295 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160294,G__160295) : tailrecursion.hoplon.span.call(null,G__160294,G__160295));
})();
var G__160217 = "(";
var G__160218 = (function (){var G__160296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160297 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160296,G__160297) : tailrecursion.hoplon.span.call(null,G__160296,G__160297));
})();
var G__160219 = (function (){var G__160298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160299 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160298,G__160299) : tailrecursion.hoplon.span.call(null,G__160298,G__160299));
})();
var G__160220 = " ";
var G__160221 = (function (){var G__160300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160301 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160300,G__160301) : tailrecursion.hoplon.span.call(null,G__160300,G__160301));
})();
var G__160222 = ") ";
var G__160223 = (function (){var G__160302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160303 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160302,G__160303) : tailrecursion.hoplon.span.call(null,G__160302,G__160303));
})();
var G__160224 = "\n          (";
var G__160225 = (function (){var G__160304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160305 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160304,G__160305) : tailrecursion.hoplon.span.call(null,G__160304,G__160305));
})();
var G__160226 = " ";
var G__160227 = (function (){var G__160306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160307 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160306,G__160307) : tailrecursion.hoplon.span.call(null,G__160306,G__160307));
})();
var G__160228 = ") (";
var G__160229 = (function (){var G__160308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160309 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160308,G__160309) : tailrecursion.hoplon.span.call(null,G__160308,G__160309));
})();
var G__160230 = "(";
var G__160231 = (function (){var G__160310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160311 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160310,G__160311) : tailrecursion.hoplon.span.call(null,G__160310,G__160311));
})();
var G__160232 = " ";
var G__160233 = (function (){var G__160312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160313 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160312,G__160313) : tailrecursion.hoplon.span.call(null,G__160312,G__160313));
})();
var G__160234 = ") (";
var G__160235 = (function (){var G__160314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160315 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160314,G__160315) : tailrecursion.hoplon.span.call(null,G__160314,G__160315));
})();
var G__160236 = " (";
var G__160237 = (function (){var G__160316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160317 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160316,G__160317) : tailrecursion.hoplon.span.call(null,G__160316,G__160317));
})();
var G__160238 = (function (){var G__160318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160319 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160318,G__160319) : tailrecursion.hoplon.span.call(null,G__160318,G__160319));
})();
var G__160239 = ") (";
var G__160240 = (function (){var G__160320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160321 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160320,G__160321) : tailrecursion.hoplon.span.call(null,G__160320,G__160321));
})();
var G__160241 = (function (){var G__160322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160323 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160322,G__160323) : tailrecursion.hoplon.span.call(null,G__160322,G__160323));
})();
var G__160242 = ")))\n          ";
var G__160243 = (function (){var G__160324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160325 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160324,G__160325) : tailrecursion.hoplon.span.call(null,G__160324,G__160325));
})();
var G__160244 = " (";
var G__160245 = (function (){var G__160326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160327 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160326,G__160327) : tailrecursion.hoplon.span.call(null,G__160326,G__160327));
})();
var G__160246 = " (";
var G__160247 = (function (){var G__160328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160329 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160328,G__160329) : tailrecursion.hoplon.span.call(null,G__160328,G__160329));
})();
var G__160248 = (function (){var G__160330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160331 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160330,G__160331) : tailrecursion.hoplon.span.call(null,G__160330,G__160331));
})();
var G__160249 = ") ";
var G__160250 = (function (){var G__160332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160333 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160332,G__160333) : tailrecursion.hoplon.span.call(null,G__160332,G__160333));
})();
var G__160251 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__160176,G__160177,G__160178,G__160179,G__160180,G__160181,G__160182,G__160183,G__160184,G__160185,G__160186,G__160187,G__160188,G__160189,G__160190,G__160191,G__160192,G__160193,G__160194,G__160195,G__160196,G__160197,G__160198,G__160199,G__160200,G__160201,G__160202,G__160203,G__160204,G__160205,G__160206,G__160207,G__160208,G__160209,G__160210,G__160211,G__160212,G__160213,G__160214,G__160215,G__160216,G__160217,G__160218,G__160219,G__160220,G__160221,G__160222,G__160223,G__160224,G__160225,G__160226,G__160227,G__160228,G__160229,G__160230,G__160231,G__160232,G__160233,G__160234,G__160235,G__160236,G__160237,G__160238,G__160239,G__160240,G__160241,G__160242,G__160243,G__160244,G__160245,G__160246,G__160247,G__160248,G__160249,G__160250,G__160251) : tailrecursion.hoplon.pre.call(null,G__160176,G__160177,G__160178,G__160179,G__160180,G__160181,G__160182,G__160183,G__160184,G__160185,G__160186,G__160187,G__160188,G__160189,G__160190,G__160191,G__160192,G__160193,G__160194,G__160195,G__160196,G__160197,G__160198,G__160199,G__160200,G__160201,G__160202,G__160203,G__160204,G__160205,G__160206,G__160207,G__160208,G__160209,G__160210,G__160211,G__160212,G__160213,G__160214,G__160215,G__160216,G__160217,G__160218,G__160219,G__160220,G__160221,G__160222,G__160223,G__160224,G__160225,G__160226,G__160227,G__160228,G__160229,G__160230,G__160231,G__160232,G__160233,G__160234,G__160235,G__160236,G__160237,G__160238,G__160239,G__160240,G__160241,G__160242,G__160243,G__160244,G__160245,G__160246,G__160247,G__160248,G__160249,G__160250,G__160251));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160174,G__160175) : tailrecursion.hoplon.div.call(null,G__160174,G__160175));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160173) : tailrecursion.hoplon.div.call(null,G__160173));
})(),(function (){var G__160334 = cljs.core.PersistentArrayMap.EMPTY;
var G__160335 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Well, we",(function (){var G__160336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160337 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160336,G__160337) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160336,G__160337));
})(),"re not exactly halving the number of steps because each time we have to evaluate the ",(function (){var G__160338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"if"], null);
var G__160339 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160338,G__160339) : tailrecursion.hoplon.markdown.code_node.call(null,G__160338,G__160339));
})()," statement which includes some division and whatnot. Also there are compiler optimizations invloved, so these things are rough estimates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160334,G__160335) : tailrecursion.hoplon.markdown.para_node.call(null,G__160334,G__160335));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160172;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160171;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160170;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160169;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(24)], null),(function (){var _STAR_references_STAR_160340 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160341 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160342 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160343 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160344 = cljs.core.PersistentArrayMap.EMPTY;
var G__160345 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify the ",(function (){var G__160346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"timed-prime-test"], null);
var G__160347 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160346,G__160347) : tailrecursion.hoplon.markdown.code_node.call(null,G__160346,G__160347));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/24/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0))," to use ",(function (){var G__160348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-prime?"], null);
var G__160349 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160348,G__160349) : tailrecursion.hoplon.markdown.code_node.call(null,G__160348,G__160349));
})()," (the Fermat method), and test each of the 12 primes you found in that exercise. Since the Fermat test has \\(\\Theta(\\log n)\\) growth, how would you expect the time to test primes near 10,000,000,000,000 to compare with the time needed to test primes near 10,000,000,000? Do your data bear this out? Can you explain any discrepancy you find?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160344,G__160345) : tailrecursion.hoplon.markdown.para_node.call(null,G__160344,G__160345));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160343;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160342;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160341;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160340;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160350 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160351 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160352 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160353 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160354 = (function (){var G__160355 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160356 = (function (){var G__160357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160358 = "(";
var G__160359 = (function (){var G__160375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160376 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160375,G__160376) : tailrecursion.hoplon.span.call(null,G__160375,G__160376));
})();
var G__160360 = (function (){var G__160377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160378 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160377,G__160378) : tailrecursion.hoplon.span.call(null,G__160377,G__160378));
})();
var G__160361 = " [";
var G__160362 = (function (){var G__160379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160380 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160379,G__160380) : tailrecursion.hoplon.span.call(null,G__160379,G__160380));
})();
var G__160363 = "]\n  (";
var G__160364 = (function (){var G__160381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160382 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160381,G__160382) : tailrecursion.hoplon.span.call(null,G__160381,G__160382));
})();
var G__160365 = "(";
var G__160366 = (function (){var G__160383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160384 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160383,G__160384) : tailrecursion.hoplon.span.call(null,G__160383,G__160384));
})();
var G__160367 = (function (){var G__160385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160386 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160385,G__160386) : tailrecursion.hoplon.span.call(null,G__160385,G__160386));
})();
var G__160368 = ") (";
var G__160369 = (function (){var G__160387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160388 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160387,G__160388) : tailrecursion.hoplon.span.call(null,G__160387,G__160388));
})();
var G__160370 = "(";
var G__160371 = (function (){var G__160389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160390 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160389,G__160390) : tailrecursion.hoplon.span.call(null,G__160389,G__160390));
})();
var G__160372 = " ";
var G__160373 = (function (){var G__160391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160392 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160391,G__160392) : tailrecursion.hoplon.span.call(null,G__160391,G__160392));
})();
var G__160374 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__160357,G__160358,G__160359,G__160360,G__160361,G__160362,G__160363,G__160364,G__160365,G__160366,G__160367,G__160368,G__160369,G__160370,G__160371,G__160372,G__160373,G__160374) : tailrecursion.hoplon.pre.call(null,G__160357,G__160358,G__160359,G__160360,G__160361,G__160362,G__160363,G__160364,G__160365,G__160366,G__160367,G__160368,G__160369,G__160370,G__160371,G__160372,G__160373,G__160374));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160355,G__160356) : tailrecursion.hoplon.div.call(null,G__160355,G__160356));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160354) : tailrecursion.hoplon.div.call(null,G__160354));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160353;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160352;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160351;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160350;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(25)], null),(function (){var _STAR_references_STAR_160393 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160394 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160395 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160396 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160397 = cljs.core.PersistentArrayMap.EMPTY;
var G__160398 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker complains that we went to a lot of extra work in writing ",(function (){var G__160399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__160400 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160399,G__160400) : tailrecursion.hoplon.markdown.code_node.call(null,G__160399,G__160400));
})(),". After all, she says, since we already know how to compute exponentials, we could have simply written"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160397,G__160398) : tailrecursion.hoplon.markdown.para_node.call(null,G__160397,G__160398));
})(),(function (){var G__160401 = (function (){var G__160402 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160403 = (function (){var G__160404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160405 = "(";
var G__160406 = (function (){var G__160425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160426 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160425,G__160426) : tailrecursion.hoplon.span.call(null,G__160425,G__160426));
})();
var G__160407 = (function (){var G__160427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160428 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160427,G__160428) : tailrecursion.hoplon.span.call(null,G__160427,G__160428));
})();
var G__160408 = " [";
var G__160409 = (function (){var G__160429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160430 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160429,G__160430) : tailrecursion.hoplon.span.call(null,G__160429,G__160430));
})();
var G__160410 = " ";
var G__160411 = (function (){var G__160431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160432 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160431,G__160432) : tailrecursion.hoplon.span.call(null,G__160431,G__160432));
})();
var G__160412 = " ";
var G__160413 = (function (){var G__160433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160434 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160433,G__160434) : tailrecursion.hoplon.span.call(null,G__160433,G__160434));
})();
var G__160414 = "]\n  (";
var G__160415 = (function (){var G__160435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160436 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160435,G__160436) : tailrecursion.hoplon.span.call(null,G__160435,G__160436));
})();
var G__160416 = " (";
var G__160417 = (function (){var G__160437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160438 = "fast-expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160437,G__160438) : tailrecursion.hoplon.span.call(null,G__160437,G__160438));
})();
var G__160418 = " ";
var G__160419 = (function (){var G__160439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160440 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160439,G__160440) : tailrecursion.hoplon.span.call(null,G__160439,G__160440));
})();
var G__160420 = " ";
var G__160421 = (function (){var G__160441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160442 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160441,G__160442) : tailrecursion.hoplon.span.call(null,G__160441,G__160442));
})();
var G__160422 = ") ";
var G__160423 = (function (){var G__160443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160444 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160443,G__160444) : tailrecursion.hoplon.span.call(null,G__160443,G__160444));
})();
var G__160424 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__160404,G__160405,G__160406,G__160407,G__160408,G__160409,G__160410,G__160411,G__160412,G__160413,G__160414,G__160415,G__160416,G__160417,G__160418,G__160419,G__160420,G__160421,G__160422,G__160423,G__160424) : tailrecursion.hoplon.pre.call(null,G__160404,G__160405,G__160406,G__160407,G__160408,G__160409,G__160410,G__160411,G__160412,G__160413,G__160414,G__160415,G__160416,G__160417,G__160418,G__160419,G__160420,G__160421,G__160422,G__160423,G__160424));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160402,G__160403) : tailrecursion.hoplon.div.call(null,G__160402,G__160403));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160401) : tailrecursion.hoplon.div.call(null,G__160401));
})(),(function (){var G__160445 = cljs.core.PersistentArrayMap.EMPTY;
var G__160446 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is she correct? Would this procedure serve as well for our fast prime tester? Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160445,G__160446) : tailrecursion.hoplon.markdown.para_node.call(null,G__160445,G__160446));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160396;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160395;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160394;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160393;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160447 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160448 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160449 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160450 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160451 = cljs.core.PersistentArrayMap.EMPTY;
var G__160452 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplying larger numbers takes longer than the time you save by only computing ",(function (){var G__160453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__160454 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160453,G__160454) : tailrecursion.hoplon.markdown.code_node.call(null,G__160453,G__160454));
})()," once. So if the numbers you",(function (){var G__160455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160456 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160455,G__160456) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160455,G__160456));
})(),"re dealing with are sufficiently small, she",(function (){var G__160457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160457,G__160458) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160457,G__160458));
})(),"s correct. But if we",(function (){var G__160459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160460 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160459,G__160460) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160459,G__160460));
})(),"re trying to use this for our primality test, raising 10,000,000 to the 100,000,000,000,000 would be far more computationally expensive than modding out each time."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160451,G__160452) : tailrecursion.hoplon.markdown.para_node.call(null,G__160451,G__160452));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160450;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160449;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160448;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160447;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(26)], null),(function (){var _STAR_references_STAR_160461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160463 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160464 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160465 = cljs.core.PersistentArrayMap.EMPTY;
var G__160466 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner is having great difficulty doing ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/24/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.24"], null)], 0)),". His ",(function (){var G__160467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-prime?"], null);
var G__160468 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160467,G__160468) : tailrecursion.hoplon.markdown.code_node.call(null,G__160467,G__160468));
})()," test seems to run more slowly than his ",(function (){var G__160469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"prime?"], null);
var G__160470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160469,G__160470) : tailrecursion.hoplon.markdown.code_node.call(null,G__160469,G__160470));
})()," test. Louis calls his friend Eva Lu Ator over to help. When they examine Louis",(function (){var G__160471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160472 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160471,G__160472) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160471,G__160472));
})(),"s code, they find that he has rewritten the ",(function (){var G__160473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__160474 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160473,G__160474) : tailrecursion.hoplon.markdown.code_node.call(null,G__160473,G__160474));
})()," procedure to use an explicit multiplication, rather than calling ",(function (){var G__160475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square"], null);
var G__160476 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160475,G__160476) : tailrecursion.hoplon.markdown.code_node.call(null,G__160475,G__160476));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160465,G__160466) : tailrecursion.hoplon.markdown.para_node.call(null,G__160465,G__160466));
})(),(function (){var G__160477 = (function (){var G__160478 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160479 = (function (){var G__160480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160481 = "(";
var G__160482 = (function (){var G__160552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160553 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160552,G__160553) : tailrecursion.hoplon.span.call(null,G__160552,G__160553));
})();
var G__160483 = (function (){var G__160554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160555 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160554,G__160555) : tailrecursion.hoplon.span.call(null,G__160554,G__160555));
})();
var G__160484 = " [";
var G__160485 = (function (){var G__160556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160557 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160556,G__160557) : tailrecursion.hoplon.span.call(null,G__160556,G__160557));
})();
var G__160486 = " ";
var G__160487 = (function (){var G__160558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160559 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160558,G__160559) : tailrecursion.hoplon.span.call(null,G__160558,G__160559));
})();
var G__160488 = " ";
var G__160489 = (function (){var G__160560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160561 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160560,G__160561) : tailrecursion.hoplon.span.call(null,G__160560,G__160561));
})();
var G__160490 = "]\n  (";
var G__160491 = (function (){var G__160562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160563 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160562,G__160563) : tailrecursion.hoplon.span.call(null,G__160562,G__160563));
})();
var G__160492 = "(";
var G__160493 = (function (){var G__160564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160565 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160564,G__160565) : tailrecursion.hoplon.span.call(null,G__160564,G__160565));
})();
var G__160494 = (function (){var G__160566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160567 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160566,G__160567) : tailrecursion.hoplon.span.call(null,G__160566,G__160567));
})();
var G__160495 = " ";
var G__160496 = (function (){var G__160568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160569 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160568,G__160569) : tailrecursion.hoplon.span.call(null,G__160568,G__160569));
})();
var G__160497 = ") ";
var G__160498 = (function (){var G__160570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160571 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160570,G__160571) : tailrecursion.hoplon.span.call(null,G__160570,G__160571));
})();
var G__160499 = "\n        (";
var G__160500 = (function (){var G__160572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160573 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160572,G__160573) : tailrecursion.hoplon.span.call(null,G__160572,G__160573));
})();
var G__160501 = " ";
var G__160502 = (function (){var G__160574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160575 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160574,G__160575) : tailrecursion.hoplon.span.call(null,G__160574,G__160575));
})();
var G__160503 = ") (";
var G__160504 = (function (){var G__160576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160577 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160576,G__160577) : tailrecursion.hoplon.span.call(null,G__160576,G__160577));
})();
var G__160505 = " (";
var G__160506 = (function (){var G__160578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160579 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160578,G__160579) : tailrecursion.hoplon.span.call(null,G__160578,G__160579));
})();
var G__160507 = "(";
var G__160508 = (function (){var G__160580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160581 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160580,G__160581) : tailrecursion.hoplon.span.call(null,G__160580,G__160581));
})();
var G__160509 = " ";
var G__160510 = (function (){var G__160582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160583 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160582,G__160583) : tailrecursion.hoplon.span.call(null,G__160582,G__160583));
})();
var G__160511 = " (";
var G__160512 = (function (){var G__160584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160585 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160584,G__160585) : tailrecursion.hoplon.span.call(null,G__160584,G__160585));
})();
var G__160513 = (function (){var G__160586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160587 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160586,G__160587) : tailrecursion.hoplon.span.call(null,G__160586,G__160587));
})();
var G__160514 = " ";
var G__160515 = (function (){var G__160588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160589 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160588,G__160589) : tailrecursion.hoplon.span.call(null,G__160588,G__160589));
})();
var G__160516 = ") ";
var G__160517 = (function (){var G__160590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160591 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160590,G__160591) : tailrecursion.hoplon.span.call(null,G__160590,G__160591));
})();
var G__160518 = ")\n                            (";
var G__160519 = (function (){var G__160592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160593 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160592,G__160593) : tailrecursion.hoplon.span.call(null,G__160592,G__160593));
})();
var G__160520 = " ";
var G__160521 = (function (){var G__160594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160595 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160594,G__160595) : tailrecursion.hoplon.span.call(null,G__160594,G__160595));
})();
var G__160522 = " (";
var G__160523 = (function (){var G__160596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160597 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160596,G__160597) : tailrecursion.hoplon.span.call(null,G__160596,G__160597));
})();
var G__160524 = (function (){var G__160598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160599 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160598,G__160599) : tailrecursion.hoplon.span.call(null,G__160598,G__160599));
})();
var G__160525 = " ";
var G__160526 = (function (){var G__160600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160601 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160600,G__160601) : tailrecursion.hoplon.span.call(null,G__160600,G__160601));
})();
var G__160527 = ") ";
var G__160528 = (function (){var G__160602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160603 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160602,G__160603) : tailrecursion.hoplon.span.call(null,G__160602,G__160603));
})();
var G__160529 = "))\n                         ";
var G__160530 = (function (){var G__160604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160605 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160604,G__160605) : tailrecursion.hoplon.span.call(null,G__160604,G__160605));
})();
var G__160531 = ")\n        ";
var G__160532 = (function (){var G__160606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160607 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160606,G__160607) : tailrecursion.hoplon.span.call(null,G__160606,G__160607));
})();
var G__160533 = " (";
var G__160534 = (function (){var G__160608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160609 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160608,G__160609) : tailrecursion.hoplon.span.call(null,G__160608,G__160609));
})();
var G__160535 = " (";
var G__160536 = (function (){var G__160610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160611 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160610,G__160611) : tailrecursion.hoplon.span.call(null,G__160610,G__160611));
})();
var G__160537 = (function (){var G__160612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160613 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160612,G__160613) : tailrecursion.hoplon.span.call(null,G__160612,G__160613));
})();
var G__160538 = " (";
var G__160539 = (function (){var G__160614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160615 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160614,G__160615) : tailrecursion.hoplon.span.call(null,G__160614,G__160615));
})();
var G__160540 = " ";
var G__160541 = (function (){var G__160616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160617 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160616,G__160617) : tailrecursion.hoplon.span.call(null,G__160616,G__160617));
})();
var G__160542 = " (";
var G__160543 = (function (){var G__160618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160619 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160618,G__160619) : tailrecursion.hoplon.span.call(null,G__160618,G__160619));
})();
var G__160544 = (function (){var G__160620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160621 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160620,G__160621) : tailrecursion.hoplon.span.call(null,G__160620,G__160621));
})();
var G__160545 = " ";
var G__160546 = (function (){var G__160622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160623 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160622,G__160623) : tailrecursion.hoplon.span.call(null,G__160622,G__160623));
})();
var G__160547 = ") ";
var G__160548 = (function (){var G__160624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160625 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160624,G__160625) : tailrecursion.hoplon.span.call(null,G__160624,G__160625));
})();
var G__160549 = ")) ";
var G__160550 = (function (){var G__160626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160627 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160626,G__160627) : tailrecursion.hoplon.span.call(null,G__160626,G__160627));
})();
var G__160551 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72(G__160480,G__160481,G__160482,G__160483,G__160484,G__160485,G__160486,G__160487,G__160488,G__160489,G__160490,G__160491,G__160492,G__160493,G__160494,G__160495,G__160496,G__160497,G__160498,G__160499,G__160500,G__160501,G__160502,G__160503,G__160504,G__160505,G__160506,G__160507,G__160508,G__160509,G__160510,G__160511,G__160512,G__160513,G__160514,G__160515,G__160516,G__160517,G__160518,G__160519,G__160520,G__160521,G__160522,G__160523,G__160524,G__160525,G__160526,G__160527,G__160528,G__160529,G__160530,G__160531,G__160532,G__160533,G__160534,G__160535,G__160536,G__160537,G__160538,G__160539,G__160540,G__160541,G__160542,G__160543,G__160544,G__160545,G__160546,G__160547,G__160548,G__160549,G__160550,G__160551) : tailrecursion.hoplon.pre.call(null,G__160480,G__160481,G__160482,G__160483,G__160484,G__160485,G__160486,G__160487,G__160488,G__160489,G__160490,G__160491,G__160492,G__160493,G__160494,G__160495,G__160496,G__160497,G__160498,G__160499,G__160500,G__160501,G__160502,G__160503,G__160504,G__160505,G__160506,G__160507,G__160508,G__160509,G__160510,G__160511,G__160512,G__160513,G__160514,G__160515,G__160516,G__160517,G__160518,G__160519,G__160520,G__160521,G__160522,G__160523,G__160524,G__160525,G__160526,G__160527,G__160528,G__160529,G__160530,G__160531,G__160532,G__160533,G__160534,G__160535,G__160536,G__160537,G__160538,G__160539,G__160540,G__160541,G__160542,G__160543,G__160544,G__160545,G__160546,G__160547,G__160548,G__160549,G__160550,G__160551));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160478,G__160479) : tailrecursion.hoplon.div.call(null,G__160478,G__160479));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160477) : tailrecursion.hoplon.div.call(null,G__160477));
})(),(function (){var G__160628 = cljs.core.PersistentArrayMap.EMPTY;
var G__160629 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__160631 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I don",(function (){var G__160632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160632,G__160633) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160632,G__160633));
})(),"t see what difference that could make,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__160630,G__160631) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__160630,G__160631));
})()," says Louis. ",(function (){var G__160634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__160635 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I do."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__160634,G__160635) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__160634,G__160635));
})()," says Eva. ",(function (){var G__160636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__160637 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By writing the procedure like that, you have transformed the \\(\\Theta(\\log n)\\) process into a \\(\\Theta(n)\\) process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__160636,G__160637) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__160636,G__160637));
})()," Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160628,G__160629) : tailrecursion.hoplon.markdown.para_node.call(null,G__160628,G__160629));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160464;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160463;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160461;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160638 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160639 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160640 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160641 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160642 = cljs.core.PersistentArrayMap.EMPTY;
var G__160643 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Remember the applicative order evaluation model. Every time the exponent is even, ",(function (){var G__160644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(expmod base (/ exp 2) m)"], null);
var G__160645 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160644,G__160645) : tailrecursion.hoplon.markdown.code_node.call(null,G__160644,G__160645));
})()," is computed twice, causing two branches of the same computation to occur."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160642,G__160643) : tailrecursion.hoplon.markdown.para_node.call(null,G__160642,G__160643));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160641;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160640;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160639;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160638;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(27)], null),(function (){var _STAR_references_STAR_160646 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160647 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160648 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160649 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160650 = cljs.core.PersistentArrayMap.EMPTY;
var G__160651 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that these Carmichael numbers: 561, 1105, 1729, 2465, 2821, 6601, really do fool the Fermat test. That is, write a procedure that takes an integer \\(n\\) and tests whether an is congruent to \\(a\\) modulo \\(n\\) for every \\(a<n\\), and try your procedure on the given Carmichael numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160650,G__160651) : tailrecursion.hoplon.markdown.para_node.call(null,G__160650,G__160651));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160649;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160648;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160647;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160646;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160652 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160653 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160654 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160655 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160656 = (function (){var G__160657 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160658 = (function (){var G__160659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160660 = "(";
var G__160661 = (function (){var G__160702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160703 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160702,G__160703) : tailrecursion.hoplon.span.call(null,G__160702,G__160703));
})();
var G__160662 = (function (){var G__160704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160705 = "carmichael-check";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160704,G__160705) : tailrecursion.hoplon.span.call(null,G__160704,G__160705));
})();
var G__160663 = " [";
var G__160664 = (function (){var G__160706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160707 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160706,G__160707) : tailrecursion.hoplon.span.call(null,G__160706,G__160707));
})();
var G__160665 = "]\n  (";
var G__160666 = (function (){var G__160708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160709 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160708,G__160709) : tailrecursion.hoplon.span.call(null,G__160708,G__160709));
})();
var G__160667 = "[";
var G__160668 = (function (){var G__160710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160711 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160710,G__160711) : tailrecursion.hoplon.span.call(null,G__160710,G__160711));
})();
var G__160669 = " ";
var G__160670 = (function (){var G__160712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160713 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160712,G__160713) : tailrecursion.hoplon.span.call(null,G__160712,G__160713));
})();
var G__160671 = "]\n    (";
var G__160672 = (function (){var G__160714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160715 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160714,G__160715) : tailrecursion.hoplon.span.call(null,G__160714,G__160715));
})();
var G__160673 = "(";
var G__160674 = (function (){var G__160716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160717 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160716,G__160717) : tailrecursion.hoplon.span.call(null,G__160716,G__160717));
})();
var G__160675 = (function (){var G__160718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160719 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160718,G__160719) : tailrecursion.hoplon.span.call(null,G__160718,G__160719));
})();
var G__160676 = " ";
var G__160677 = (function (){var G__160720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160721 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160720,G__160721) : tailrecursion.hoplon.span.call(null,G__160720,G__160721));
})();
var G__160678 = ") ";
var G__160679 = (function (){var G__160722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160723 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160722,G__160723) : tailrecursion.hoplon.span.call(null,G__160722,G__160723));
})();
var G__160680 = "\n          (";
var G__160681 = (function (){var G__160724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160725 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160724,G__160725) : tailrecursion.hoplon.span.call(null,G__160724,G__160725));
})();
var G__160682 = "(";
var G__160683 = (function (){var G__160726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160727 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160726,G__160727) : tailrecursion.hoplon.span.call(null,G__160726,G__160727));
})();
var G__160684 = " ";
var G__160685 = (function (){var G__160728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160729 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160728,G__160729) : tailrecursion.hoplon.span.call(null,G__160728,G__160729));
})();
var G__160686 = " ";
var G__160687 = (function (){var G__160730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160731 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160730,G__160731) : tailrecursion.hoplon.span.call(null,G__160730,G__160731));
})();
var G__160688 = " ";
var G__160689 = (function (){var G__160732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160733 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160732,G__160733) : tailrecursion.hoplon.span.call(null,G__160732,G__160733));
})();
var G__160690 = ") ";
var G__160691 = (function (){var G__160734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160735 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160734,G__160735) : tailrecursion.hoplon.span.call(null,G__160734,G__160735));
})();
var G__160692 = ") (";
var G__160693 = (function (){var G__160736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160737 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160736,G__160737) : tailrecursion.hoplon.span.call(null,G__160736,G__160737));
})();
var G__160694 = " (";
var G__160695 = (function (){var G__160738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160739 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160738,G__160739) : tailrecursion.hoplon.span.call(null,G__160738,G__160739));
})();
var G__160696 = (function (){var G__160740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160741 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160740,G__160741) : tailrecursion.hoplon.span.call(null,G__160740,G__160741));
})();
var G__160697 = "))\n          ";
var G__160698 = (function (){var G__160742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160743 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160742,G__160743) : tailrecursion.hoplon.span.call(null,G__160742,G__160743));
})();
var G__160699 = " ";
var G__160700 = (function (){var G__160744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160745 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160744,G__160745) : tailrecursion.hoplon.span.call(null,G__160744,G__160745));
})();
var G__160701 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__160659,G__160660,G__160661,G__160662,G__160663,G__160664,G__160665,G__160666,G__160667,G__160668,G__160669,G__160670,G__160671,G__160672,G__160673,G__160674,G__160675,G__160676,G__160677,G__160678,G__160679,G__160680,G__160681,G__160682,G__160683,G__160684,G__160685,G__160686,G__160687,G__160688,G__160689,G__160690,G__160691,G__160692,G__160693,G__160694,G__160695,G__160696,G__160697,G__160698,G__160699,G__160700,G__160701) : tailrecursion.hoplon.pre.call(null,G__160659,G__160660,G__160661,G__160662,G__160663,G__160664,G__160665,G__160666,G__160667,G__160668,G__160669,G__160670,G__160671,G__160672,G__160673,G__160674,G__160675,G__160676,G__160677,G__160678,G__160679,G__160680,G__160681,G__160682,G__160683,G__160684,G__160685,G__160686,G__160687,G__160688,G__160689,G__160690,G__160691,G__160692,G__160693,G__160694,G__160695,G__160696,G__160697,G__160698,G__160699,G__160700,G__160701));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160657,G__160658) : tailrecursion.hoplon.div.call(null,G__160657,G__160658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160656) : tailrecursion.hoplon.div.call(null,G__160656));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160655;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160654;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160653;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160652;
}})()], 0))], 0)),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(28)], null),(function (){var _STAR_references_STAR_160746 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160747 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160748 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160749 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160750 = cljs.core.PersistentArrayMap.EMPTY;
var G__160751 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One variant of the Fermat test that cannot be fooled is called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Miller-Rabin"], null)], 0))," test (Miller 1976; Rabin 1980). This starts from an alternate form of Fermat",(function (){var G__160752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__160753 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__160752,G__160753) : tailrecursion.hoplon.markdown.simple_node.call(null,G__160752,G__160753));
})(),"s Little Theorem, which states that if \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a^{n-1}\\equiv 1\\pmod n\\). To test the primality of a number \\(n\\) by the Miller-Rabin test, we pick a random number \\(a<n\\) and raise \\(a\\) to the \\((n - 1)\\)st power modulo \\(n\\) using the ",(function (){var G__160754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__160755 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160754,G__160755) : tailrecursion.hoplon.markdown.code_node.call(null,G__160754,G__160755));
})()," procedure. However, whenever we perform the squaring step in ",(function (){var G__160756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__160757 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160756,G__160757) : tailrecursion.hoplon.markdown.code_node.call(null,G__160756,G__160757));
})(),", we check to see if we have discovered a ",(function (){var G__160758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__160759 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nontrivial square root of 1 modulo \\(n\\),"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__160758,G__160759) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__160758,G__160759));
})()," that is, a number not equal to 1 or \\(n - 1\\) whose square is equal to 1 modulo \\(n\\). It is possible to prove that if such a nontrivial square root of 1 exists, then \\(n\\) is not prime. It is also possible to prove that if \\(n\\) is an odd number that is not prime, then, for at least half the numbers \\(a<n\\), computing \\(a^{n-1}\\) in this way will reveal a nontrivial square root of 1 modulo \\(n\\). (This is why the Miller-Rabin test cannot be fooled.) Modify the ",(function (){var G__160760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__160761 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160760,G__160761) : tailrecursion.hoplon.markdown.code_node.call(null,G__160760,G__160761));
})()," procedure to signal if it discovers a nontrivial square root of 1, and use this to implement the Miller-Rabin test with a procedure analogous to ",(function (){var G__160762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fermat-test"], null);
var G__160763 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160762,G__160763) : tailrecursion.hoplon.markdown.code_node.call(null,G__160762,G__160763));
})(),". Check your procedure by testing various known primes and non-primes. Hint: One convenient way to make ",(function (){var G__160764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__160765 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__160764,G__160765) : tailrecursion.hoplon.markdown.code_node.call(null,G__160764,G__160765));
})()," signal is to have it return 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__160750,G__160751) : tailrecursion.hoplon.markdown.para_node.call(null,G__160750,G__160751));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160749;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160748;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160747;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160746;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160768 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160769 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160770 = (function (){var G__160771 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160772 = (function (){var G__160773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160774 = "(";
var G__160775 = (function (){var G__160819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160820 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160819,G__160820) : tailrecursion.hoplon.span.call(null,G__160819,G__160820));
})();
var G__160776 = (function (){var G__160821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160822 = "miller-rabin-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160821,G__160822) : tailrecursion.hoplon.span.call(null,G__160821,G__160822));
})();
var G__160777 = " [";
var G__160778 = (function (){var G__160823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160824 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160823,G__160824) : tailrecursion.hoplon.span.call(null,G__160823,G__160824));
})();
var G__160779 = "]\n  (";
var G__160780 = (function (){var G__160825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__160826 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160825,G__160826) : tailrecursion.hoplon.span.call(null,G__160825,G__160826));
})();
var G__160781 = "[";
var G__160782 = (function (){var G__160827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160828 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160827,G__160828) : tailrecursion.hoplon.span.call(null,G__160827,G__160828));
})();
var G__160783 = " ";
var G__160784 = (function (){var G__160829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160830 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160829,G__160830) : tailrecursion.hoplon.span.call(null,G__160829,G__160830));
})();
var G__160785 = "]\n    (";
var G__160786 = (function (){var G__160831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160832 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160831,G__160832) : tailrecursion.hoplon.span.call(null,G__160831,G__160832));
})();
var G__160787 = "(";
var G__160788 = (function (){var G__160833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160834 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160833,G__160834) : tailrecursion.hoplon.span.call(null,G__160833,G__160834));
})();
var G__160789 = (function (){var G__160835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160836 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160835,G__160836) : tailrecursion.hoplon.span.call(null,G__160835,G__160836));
})();
var G__160790 = " (";
var G__160791 = (function (){var G__160837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160838 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160837,G__160838) : tailrecursion.hoplon.span.call(null,G__160837,G__160838));
})();
var G__160792 = (function (){var G__160839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160840 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160839,G__160840) : tailrecursion.hoplon.span.call(null,G__160839,G__160840));
})();
var G__160793 = " ";
var G__160794 = (function (){var G__160841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160842 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160841,G__160842) : tailrecursion.hoplon.span.call(null,G__160841,G__160842));
})();
var G__160795 = "))            ";
var G__160796 = (function (){var G__160843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160844 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160843,G__160844) : tailrecursion.hoplon.span.call(null,G__160843,G__160844));
})();
var G__160797 = "\n          (";
var G__160798 = (function (){var G__160845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160846 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160845,G__160846) : tailrecursion.hoplon.span.call(null,G__160845,G__160846));
})();
var G__160799 = "(";
var G__160800 = (function (){var G__160847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160848 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160847,G__160848) : tailrecursion.hoplon.span.call(null,G__160847,G__160848));
})();
var G__160801 = " (";
var G__160802 = (function (){var G__160849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160850 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160849,G__160850) : tailrecursion.hoplon.span.call(null,G__160849,G__160850));
})();
var G__160803 = " ";
var G__160804 = (function (){var G__160851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160852 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160851,G__160852) : tailrecursion.hoplon.span.call(null,G__160851,G__160852));
})();
var G__160805 = ") ";
var G__160806 = (function (){var G__160853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160854 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160853,G__160854) : tailrecursion.hoplon.span.call(null,G__160853,G__160854));
})();
var G__160807 = ") ";
var G__160808 = (function (){var G__160855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160856 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160855,G__160856) : tailrecursion.hoplon.span.call(null,G__160855,G__160856));
})();
var G__160809 = ") ";
var G__160810 = (function (){var G__160857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160858 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160857,G__160858) : tailrecursion.hoplon.span.call(null,G__160857,G__160858));
})();
var G__160811 = "\n          ";
var G__160812 = (function (){var G__160859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160860 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160859,G__160860) : tailrecursion.hoplon.span.call(null,G__160859,G__160860));
})();
var G__160813 = "                    (";
var G__160814 = (function (){var G__160861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160862 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160861,G__160862) : tailrecursion.hoplon.span.call(null,G__160861,G__160862));
})();
var G__160815 = " (";
var G__160816 = (function (){var G__160863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160864 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160863,G__160864) : tailrecursion.hoplon.span.call(null,G__160863,G__160864));
})();
var G__160817 = (function (){var G__160865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160866 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160865,G__160866) : tailrecursion.hoplon.span.call(null,G__160865,G__160866));
})();
var G__160818 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__160773,G__160774,G__160775,G__160776,G__160777,G__160778,G__160779,G__160780,G__160781,G__160782,G__160783,G__160784,G__160785,G__160786,G__160787,G__160788,G__160789,G__160790,G__160791,G__160792,G__160793,G__160794,G__160795,G__160796,G__160797,G__160798,G__160799,G__160800,G__160801,G__160802,G__160803,G__160804,G__160805,G__160806,G__160807,G__160808,G__160809,G__160810,G__160811,G__160812,G__160813,G__160814,G__160815,G__160816,G__160817,G__160818) : tailrecursion.hoplon.pre.call(null,G__160773,G__160774,G__160775,G__160776,G__160777,G__160778,G__160779,G__160780,G__160781,G__160782,G__160783,G__160784,G__160785,G__160786,G__160787,G__160788,G__160789,G__160790,G__160791,G__160792,G__160793,G__160794,G__160795,G__160796,G__160797,G__160798,G__160799,G__160800,G__160801,G__160802,G__160803,G__160804,G__160805,G__160806,G__160807,G__160808,G__160809,G__160810,G__160811,G__160812,G__160813,G__160814,G__160815,G__160816,G__160817,G__160818));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160771,G__160772) : tailrecursion.hoplon.div.call(null,G__160771,G__160772));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160770) : tailrecursion.hoplon.div.call(null,G__160770));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160769;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160768;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160766;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31(G__153276,G__153277,G__153278,G__153279,G__153280,G__153281,G__153282,G__153283,G__153284,G__153285,G__153286,G__153287,G__153288,G__153289,G__153290,G__153291,G__153292,G__153293,G__153294,G__153295,G__153296,G__153297,G__153298,G__153299,G__153300,G__153301,G__153302,G__153303,G__153304,G__153305,G__153306) : tailrecursion.hoplon.div.call(null,G__153276,G__153277,G__153278,G__153279,G__153280,G__153281,G__153282,G__153283,G__153284,G__153285,G__153286,G__153287,G__153288,G__153289,G__153290,G__153291,G__153292,G__153293,G__153294,G__153295,G__153296,G__153297,G__153298,G__153299,G__153300,G__153301,G__153302,G__153303,G__153304,G__153305,G__153306));
};
var content$sicp$texts$ch1sect2$content = function (var_args){
var args__10403__auto__ = null;
if (arguments.length > 0) {
var G__160867__i = 0, G__160867__a = new Array(arguments.length -  0);
while (G__160867__i < G__160867__a.length) {G__160867__a[G__160867__i] = arguments[G__160867__i + 0]; ++G__160867__i;}
  args__10403__auto__ = new cljs.core.IndexedSeq(G__160867__a,0);
} 
return content$sicp$texts$ch1sect2$content__delegate.call(this,args__10403__auto__);};
content$sicp$texts$ch1sect2$content.cljs$lang$maxFixedArity = 0;
content$sicp$texts$ch1sect2$content.cljs$lang$applyTo = (function (arglist__160868){
var args__10403__auto__ = cljs.core.seq(arglist__160868);
return content$sicp$texts$ch1sect2$content__delegate(args__10403__auto__);
});
content$sicp$texts$ch1sect2$content.cljs$core$IFn$_invoke$arity$variadic = content$sicp$texts$ch1sect2$content__delegate;
return content$sicp$texts$ch1sect2$content;
})()
;

// Compiled by ClojureScript 0.0-3308 {:static-fns true, :optimize-constants true}
goog.provide('content.sicp.texts.ch1sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('content.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
content.sicp.texts.ch1sect2.content = (function() { 
var content$sicp$texts$ch1sect2$content__delegate = function (args__10403__auto__){
var vec__157993 = tailrecursion.hoplon.parse_args(args__10403__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__157993,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__157993,(1),null);
var G__157994 = cljs.core.PersistentArrayMap.EMPTY;
var G__157995 = content.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Procedures and the Processes They Generate"], null),(function (){var _STAR_references_STAR_158025 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158026 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158027 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158028 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158029 = cljs.core.PersistentArrayMap.EMPTY;
var G__158030 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have now considered the elements of programming: We have used primitive arithmetic operations, we have combined these operations, and we have abstracted these composite operations by defining them as compound procedures. But that is not enough to enable us to say that we know how to program. Our situation is analogous to that of someone who has learned the rules for how the pieces move in chess but knows nothing of typical openings, tactics, or strategy. Like the novice chess player, we don",(function (){var G__158031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158031,G__158032) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158031,G__158032));
})(),"t yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). We lack the experience to predict the consequences of making a move (executing a procedure)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158029,G__158030) : tailrecursion.hoplon.markdown.para_node.call(null,G__158029,G__158030));
})(),(function (){var G__158033 = cljs.core.PersistentArrayMap.EMPTY;
var G__158034 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity. In becoming an expert photographer, for example, one must learn how to look at a scene and know how dark each region will appear on a print for each possible choice of exposure and development conditions. Only then can one reason backward, planning framing, lighting, exposure, and development to obtain the desired effects. So it is with programming, where we are planning the course of action to be taken by a process and where we control the process by means of a program. To become experts, we must learn to visualize the processes generated by various types of procedures. Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158033,G__158034) : tailrecursion.hoplon.markdown.para_node.call(null,G__158033,G__158034));
})(),(function (){var G__158035 = cljs.core.PersistentArrayMap.EMPTY;
var G__158036 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A procedure is a pattern for the local evolution of a computational process. It specifies how each stage of the process is built upon the previous stage. We would like to be able to make statements about the overall, or global, behavior of a process whose local evolution has been specified by a procedure. This is very difficult to do in general, but we can at least try to describe some typical patterns of process evolution."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158035,G__158036) : tailrecursion.hoplon.markdown.para_node.call(null,G__158035,G__158036));
})(),(function (){var G__158037 = cljs.core.PersistentArrayMap.EMPTY;
var G__158038 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section we will examine some common ",(function (){var G__158039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158040 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158039,G__158040) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158039,G__158040));
})()," for processes generated by simple procedures. We will also investigate the rates at which these processes consume the important computational resources of time and space. The procedures we will consider are very simple. Their role is like that played by test patterns in photography: as oversimplified prototypical patterns, rather than practical examples in their own right."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158037,G__158038) : tailrecursion.hoplon.markdown.para_node.call(null,G__158037,G__158038));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158028;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158027;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158026;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158025;
}})()], 0));
var G__157996 = "";
var G__157997 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Linear Recursion and Iteration"], null),content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"A linear recursive process for computing 6!."], null)], 0)),(function (){var _STAR_references_STAR_158041 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158042 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158043 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158044 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158045 = cljs.core.PersistentArrayMap.EMPTY;
var G__158046 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin by considering the factorial function, defined by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158045,G__158046) : tailrecursion.hoplon.markdown.para_node.call(null,G__158045,G__158046));
})(),(function (){var G__158047 = cljs.core.PersistentArrayMap.EMPTY;
var G__158048 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158047,G__158048) : tailrecursion.hoplon.markdown.para_node.call(null,G__158047,G__158048));
})(),(function (){var G__158049 = cljs.core.PersistentArrayMap.EMPTY;
var G__158050 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are many ways to compute factorials. One way is to make use of the observation that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n!"], null)], 0))," is equal to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," times ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)!"], null)], 0))," for any positive integer ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158049,G__158050) : tailrecursion.hoplon.markdown.para_node.call(null,G__158049,G__158050));
})(),(function (){var G__158051 = cljs.core.PersistentArrayMap.EMPTY;
var G__158052 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$separator_DASH_space,null,cljs.core.constant$keyword$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1\\right"], null)], 0)),"=n\\cdot(n-1)!$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158051,G__158052) : tailrecursion.hoplon.markdown.para_node.call(null,G__158051,G__158052));
})(),(function (){var G__158053 = cljs.core.PersistentArrayMap.EMPTY;
var G__158054 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus we can compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)"], null)], 0)),"! and multiplying the result by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". If we add the stipulation that 1! is equal to 1, this observation translates directly into a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158053,G__158054) : tailrecursion.hoplon.markdown.para_node.call(null,G__158053,G__158054));
})(),(function (){var G__158055 = (function (){var G__158056 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158057 = (function (){var G__158058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158059 = "(";
var G__158060 = (function (){var G__158084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158085 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158084,G__158085) : tailrecursion.hoplon.span.call(null,G__158084,G__158085));
})();
var G__158061 = (function (){var G__158086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158087 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158086,G__158087) : tailrecursion.hoplon.span.call(null,G__158086,G__158087));
})();
var G__158062 = " [";
var G__158063 = (function (){var G__158088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158089 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158088,G__158089) : tailrecursion.hoplon.span.call(null,G__158088,G__158089));
})();
var G__158064 = "]\n  (";
var G__158065 = (function (){var G__158090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158091 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158090,G__158091) : tailrecursion.hoplon.span.call(null,G__158090,G__158091));
})();
var G__158066 = "(";
var G__158067 = (function (){var G__158092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158093 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158092,G__158093) : tailrecursion.hoplon.span.call(null,G__158092,G__158093));
})();
var G__158068 = (function (){var G__158094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158095 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158094,G__158095) : tailrecursion.hoplon.span.call(null,G__158094,G__158095));
})();
var G__158069 = " ";
var G__158070 = (function (){var G__158096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158097 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158096,G__158097) : tailrecursion.hoplon.span.call(null,G__158096,G__158097));
})();
var G__158071 = ")\n      ";
var G__158072 = (function (){var G__158098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158099 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158098,G__158099) : tailrecursion.hoplon.span.call(null,G__158098,G__158099));
})();
var G__158073 = "\n      (";
var G__158074 = (function (){var G__158100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158101 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158100,G__158101) : tailrecursion.hoplon.span.call(null,G__158100,G__158101));
})();
var G__158075 = (function (){var G__158102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158103 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158102,G__158103) : tailrecursion.hoplon.span.call(null,G__158102,G__158103));
})();
var G__158076 = " (";
var G__158077 = (function (){var G__158104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158105 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158104,G__158105) : tailrecursion.hoplon.span.call(null,G__158104,G__158105));
})();
var G__158078 = " (";
var G__158079 = (function (){var G__158106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158107 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158106,G__158107) : tailrecursion.hoplon.span.call(null,G__158106,G__158107));
})();
var G__158080 = (function (){var G__158108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158109 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158108,G__158109) : tailrecursion.hoplon.span.call(null,G__158108,G__158109));
})();
var G__158081 = " ";
var G__158082 = (function (){var G__158110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158111 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158110,G__158111) : tailrecursion.hoplon.span.call(null,G__158110,G__158111));
})();
var G__158083 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__158058,G__158059,G__158060,G__158061,G__158062,G__158063,G__158064,G__158065,G__158066,G__158067,G__158068,G__158069,G__158070,G__158071,G__158072,G__158073,G__158074,G__158075,G__158076,G__158077,G__158078,G__158079,G__158080,G__158081,G__158082,G__158083) : tailrecursion.hoplon.pre.call(null,G__158058,G__158059,G__158060,G__158061,G__158062,G__158063,G__158064,G__158065,G__158066,G__158067,G__158068,G__158069,G__158070,G__158071,G__158072,G__158073,G__158074,G__158075,G__158076,G__158077,G__158078,G__158079,G__158080,G__158081,G__158082,G__158083));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158056,G__158057) : tailrecursion.hoplon.div.call(null,G__158056,G__158057));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158055) : tailrecursion.hoplon.div.call(null,G__158055));
})(),(function (){var G__158112 = cljs.core.PersistentArrayMap.EMPTY;
var G__158113 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the substitution model of section ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/1/sub/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1.1.5"], null)], 0))," to watch this procedure in action computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure1-3",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158112,G__158113) : tailrecursion.hoplon.markdown.para_node.call(null,G__158112,G__158113));
})(),(function (){var G__158114 = cljs.core.PersistentArrayMap.EMPTY;
var G__158115 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__158116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158117 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158116,G__158117) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158116,G__158117));
})(),"s take a different perspective on computing factorials. We could describe a rule for computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by specifying that we first multiply 1 by 2, then multiply the result by 3, then by 4, and so on until we reach ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More formally, we maintain a running product, together with a counter that counts from 1 up to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". We can describe the computation by saying that the counter and the product simultaneously change from one step to the next according to the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158114,G__158115) : tailrecursion.hoplon.markdown.para_node.call(null,G__158114,G__158115));
})(),(function (){var G__158118 = cljs.core.PersistentArrayMap.EMPTY;
var G__158119 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{product }\\rightarrow\\text{counter }\\cdot\\text{product}$$ $$\\text{counter }\\rightarrow\\text{ counter }+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158118,G__158119) : tailrecursion.hoplon.markdown.para_node.call(null,G__158118,G__158119));
})(),(function (){var G__158120 = cljs.core.PersistentArrayMap.EMPTY;
var G__158121 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and stipulating that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! is the value of the product when the counter exceeds ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158120,G__158121) : tailrecursion.hoplon.markdown.para_node.call(null,G__158120,G__158121));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158044;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158043;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158042;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158041;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"A linear iterative process for computing 6!"], null)], 0)),"",(function (){var _STAR_references_STAR_158122 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158123 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158124 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158125 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158126 = cljs.core.PersistentArrayMap.EMPTY;
var G__158127 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once again, we can recast our description as a procedure for computing factorials:",(function (){var G__158128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158129 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In a real program we would hide the definition of ",(function (){var G__158130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fact-iter"], null);
var G__158131 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158130,G__158131) : tailrecursion.hoplon.markdown.code_node.call(null,G__158130,G__158131));
})()," using what",(function (){var G__158132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158133 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158132,G__158133) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158132,G__158133));
})(),"s called a ",(function (){var G__158134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"let"], null);
var G__158135 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158134,G__158135) : tailrecursion.hoplon.markdown.code_node.call(null,G__158134,G__158135));
})()," binding, but we",(function (){var G__158136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158137 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158136,G__158137) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158136,G__158137));
})(),"ll learn more about that later on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158128,G__158129) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158128,G__158129));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158126,G__158127) : tailrecursion.hoplon.markdown.para_node.call(null,G__158126,G__158127));
})(),(function (){var G__158138 = (function (){var G__158139 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158140 = (function (){var G__158141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158142 = "(";
var G__158143 = (function (){var G__158188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158189 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158188,G__158189) : tailrecursion.hoplon.span.call(null,G__158188,G__158189));
})();
var G__158144 = (function (){var G__158190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158191 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158190,G__158191) : tailrecursion.hoplon.span.call(null,G__158190,G__158191));
})();
var G__158145 = " [";
var G__158146 = (function (){var G__158192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158193 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158192,G__158193) : tailrecursion.hoplon.span.call(null,G__158192,G__158193));
})();
var G__158147 = "]\n  (";
var G__158148 = (function (){var G__158194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158195 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158194,G__158195) : tailrecursion.hoplon.span.call(null,G__158194,G__158195));
})();
var G__158149 = " ";
var G__158150 = (function (){var G__158196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158197 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158196,G__158197) : tailrecursion.hoplon.span.call(null,G__158196,G__158197));
})();
var G__158151 = " ";
var G__158152 = (function (){var G__158198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158199 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158198,G__158199) : tailrecursion.hoplon.span.call(null,G__158198,G__158199));
})();
var G__158153 = " ";
var G__158154 = (function (){var G__158200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158201 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158200,G__158201) : tailrecursion.hoplon.span.call(null,G__158200,G__158201));
})();
var G__158155 = "))\n(";
var G__158156 = (function (){var G__158202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158203 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158202,G__158203) : tailrecursion.hoplon.span.call(null,G__158202,G__158203));
})();
var G__158157 = (function (){var G__158204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158205 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158204,G__158205) : tailrecursion.hoplon.span.call(null,G__158204,G__158205));
})();
var G__158158 = " [";
var G__158159 = (function (){var G__158206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158207 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158206,G__158207) : tailrecursion.hoplon.span.call(null,G__158206,G__158207));
})();
var G__158160 = " ";
var G__158161 = (function (){var G__158208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158209 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158208,G__158209) : tailrecursion.hoplon.span.call(null,G__158208,G__158209));
})();
var G__158162 = " ";
var G__158163 = (function (){var G__158210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158211 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158210,G__158211) : tailrecursion.hoplon.span.call(null,G__158210,G__158211));
})();
var G__158164 = "]\n  (";
var G__158165 = (function (){var G__158212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158213 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158212,G__158213) : tailrecursion.hoplon.span.call(null,G__158212,G__158213));
})();
var G__158166 = "(";
var G__158167 = (function (){var G__158214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158215 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158214,G__158215) : tailrecursion.hoplon.span.call(null,G__158214,G__158215));
})();
var G__158168 = (function (){var G__158216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158217 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158216,G__158217) : tailrecursion.hoplon.span.call(null,G__158216,G__158217));
})();
var G__158169 = " ";
var G__158170 = (function (){var G__158218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158219 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158218,G__158219) : tailrecursion.hoplon.span.call(null,G__158218,G__158219));
})();
var G__158171 = ")\n      ";
var G__158172 = (function (){var G__158220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158221 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158220,G__158221) : tailrecursion.hoplon.span.call(null,G__158220,G__158221));
})();
var G__158173 = "\n      (";
var G__158174 = (function (){var G__158222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158223 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158222,G__158223) : tailrecursion.hoplon.span.call(null,G__158222,G__158223));
})();
var G__158175 = " (";
var G__158176 = (function (){var G__158224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158225 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158224,G__158225) : tailrecursion.hoplon.span.call(null,G__158224,G__158225));
})();
var G__158177 = (function (){var G__158226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158227 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158226,G__158227) : tailrecursion.hoplon.span.call(null,G__158226,G__158227));
})();
var G__158178 = " ";
var G__158179 = (function (){var G__158228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158229 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158228,G__158229) : tailrecursion.hoplon.span.call(null,G__158228,G__158229));
})();
var G__158180 = ")\n                 (";
var G__158181 = (function (){var G__158230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158231 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158230,G__158231) : tailrecursion.hoplon.span.call(null,G__158230,G__158231));
})();
var G__158182 = (function (){var G__158232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158233 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158232,G__158233) : tailrecursion.hoplon.span.call(null,G__158232,G__158233));
})();
var G__158183 = " ";
var G__158184 = (function (){var G__158234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158235 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158234,G__158235) : tailrecursion.hoplon.span.call(null,G__158234,G__158235));
})();
var G__158185 = ")\n                 ";
var G__158186 = (function (){var G__158236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158237 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158236,G__158237) : tailrecursion.hoplon.span.call(null,G__158236,G__158237));
})();
var G__158187 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__158141,G__158142,G__158143,G__158144,G__158145,G__158146,G__158147,G__158148,G__158149,G__158150,G__158151,G__158152,G__158153,G__158154,G__158155,G__158156,G__158157,G__158158,G__158159,G__158160,G__158161,G__158162,G__158163,G__158164,G__158165,G__158166,G__158167,G__158168,G__158169,G__158170,G__158171,G__158172,G__158173,G__158174,G__158175,G__158176,G__158177,G__158178,G__158179,G__158180,G__158181,G__158182,G__158183,G__158184,G__158185,G__158186,G__158187) : tailrecursion.hoplon.pre.call(null,G__158141,G__158142,G__158143,G__158144,G__158145,G__158146,G__158147,G__158148,G__158149,G__158150,G__158151,G__158152,G__158153,G__158154,G__158155,G__158156,G__158157,G__158158,G__158159,G__158160,G__158161,G__158162,G__158163,G__158164,G__158165,G__158166,G__158167,G__158168,G__158169,G__158170,G__158171,G__158172,G__158173,G__158174,G__158175,G__158176,G__158177,G__158178,G__158179,G__158180,G__158181,G__158182,G__158183,G__158184,G__158185,G__158186,G__158187));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158139,G__158140) : tailrecursion.hoplon.div.call(null,G__158139,G__158140));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158138) : tailrecursion.hoplon.div.call(null,G__158138));
})(),(function (){var G__158238 = cljs.core.PersistentArrayMap.EMPTY;
var G__158239 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As before, we can use the substitution model to visualize the process of computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-4",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.4"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158238,G__158239) : tailrecursion.hoplon.markdown.para_node.call(null,G__158238,G__158239));
})(),(function (){var G__158240 = cljs.core.PersistentArrayMap.EMPTY;
var G__158241 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compare the two processes. From one point of view, they seem hardly different at all. Both compute the sam emathematical function on the same domain, and each reauires a number of steps proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," to compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!. Indeed, both processes even carry out the same sequence of multiplications, obtaining the same sequence of partial products. On the other hand, when we consider the ",(function (){var G__158242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158243 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158242,G__158243) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158242,G__158243));
})()," of the two processes, we find that they evolve quite differently."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158240,G__158241) : tailrecursion.hoplon.markdown.para_node.call(null,G__158240,G__158241));
})(),(function (){var G__158244 = cljs.core.PersistentArrayMap.EMPTY;
var G__158245 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the first process. The substitution model reveals a shape of expansion followed by contraction, indicated by the arrow in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-3",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),". The expansion occurs as the process builds up a chain of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["deferred operations"], null)], 0))," (in this case, a chain of multiplications). The contraction occurs as the operations are actually performed. This type of process, characterized by a chain of deferred operations, is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["recursive process"], null)], 0)),". Carrying out this process requires that the interpreter keep track of the operations to be performed later on. In the computation of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the length of the chain of deffered multiplications, and hence the amount of information needed to keep track of it, grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," (is proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"), just like the number of steps. Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear recursive process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158244,G__158245) : tailrecursion.hoplon.markdown.para_node.call(null,G__158244,G__158245));
})(),(function (){var G__158246 = cljs.core.PersistentArrayMap.EMPTY;
var G__158247 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By contrast, the second process does not grow and shrink. At each step, all we need to keep track of, for any ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),", are the current values of the variables ",(function (){var G__158248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"product"], null);
var G__158249 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158248,G__158249) : tailrecursion.hoplon.markdown.code_node.call(null,G__158248,G__158249));
})(),", ",(function (){var G__158250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"counter"], null);
var G__158251 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158250,G__158251) : tailrecursion.hoplon.markdown.code_node.call(null,G__158250,G__158251));
})(),", and ",(function (){var G__158252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"max-count"], null);
var G__158253 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158252,G__158253) : tailrecursion.hoplon.markdown.code_node.call(null,G__158252,G__158253));
})(),". We call this an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["iterative process"], null)], 0)),". In general, an iterative process is one whose state can be summarized by a fixed number of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["state variables"], null)], 0)),", together with a fixed rule that describes how the state variables should be updated as the process moves from state to state and an (optional) end test that specifies conditions under which the process should terminate. In computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the number of steps required grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear iterative process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158246,G__158247) : tailrecursion.hoplon.markdown.para_node.call(null,G__158246,G__158247));
})(),(function (){var G__158254 = cljs.core.PersistentArrayMap.EMPTY;
var G__158255 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The contrast between the two processes can be seen in another way. In the iterative case, the program variables provide a complete description of the state of the process at any point. If we stopped the computation between steps, all we would need to do to resume the computation is to supply the interpreter with the values of the three program variables. Not so with the recursive process. In this case there is some additional ",(function (){var G__158256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158257 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hidden"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158256,G__158257) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158256,G__158257));
})()," information, maintained by the interpreter and not contained in the program variables, which indicates ",(function (){var G__158258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158259 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where the process is"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158258,G__158259) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158258,G__158259));
})()," in negotiating the chain of deferred operations. The longer the chain, the more information must be maintained.",(function (){var G__158260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158261 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we discuss the implementation of procedures on register machines in chapter 5, we will see that any iterative process can be realized ",(function (){var G__158262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158263 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["in hardware"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158262,G__158263) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158262,G__158263));
})()," as a machine that has a fixed set of registers and no auxiliary memory. In contrast, realizing a recursive process requires a machine that uses an auxiliary data structure known as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["stack"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158260,G__158261) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158260,G__158261));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158254,G__158255) : tailrecursion.hoplon.markdown.para_node.call(null,G__158254,G__158255));
})(),(function (){var G__158264 = cljs.core.PersistentArrayMap.EMPTY;
var G__158265 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In contrasting iteration and recursion, we must be careful not to confuse the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["process"], null)], 0))," and the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedure"], null)], 0)),". When we describe a procedure as recursive, we are referring to the syntactic fact that the procedure definition refers (either directly or indirectly) to the procedure itself. But when we describe a process as following a pattern that is, say, linearly recursive, we are speaking about how the process evolves, not about the syntax of how a procedure is written. It may seem disturbing that we refer to a recursive procedure such as ",(function (){var G__158266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fact-iter"], null);
var G__158267 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158266,G__158267) : tailrecursion.hoplon.markdown.code_node.call(null,G__158266,G__158267));
})()," as generating an iterative process. However, the process really is iterative: Its state is captured completely by its three state variables, and an interpreter need keep track of only three variables in order to execute the process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158264,G__158265) : tailrecursion.hoplon.markdown.para_node.call(null,G__158264,G__158265));
})(),(function (){var G__158268 = cljs.core.PersistentArrayMap.EMPTY;
var G__158269 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One reason that the distinction between process and procedure may be confusing is that most implementations of common languages (including Ada, Pascal, and C) are designed in such a way that the interpretation of any recursive procedure consumes an amount of memory that grows with the number of procedure calls, even when the process described is, in principle, iterative. As a consequence, these languages can describe iterative processes only by resorting to special-purpose ",(function (){var G__158270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158271 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["looping constructs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158270,G__158271) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158270,G__158271));
})()," such as ",(function (){var G__158272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"do"], null);
var G__158273 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158272,G__158273) : tailrecursion.hoplon.markdown.code_node.call(null,G__158272,G__158273));
})(),", ",(function (){var G__158274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"repeat"], null);
var G__158275 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158274,G__158275) : tailrecursion.hoplon.markdown.code_node.call(null,G__158274,G__158275));
})(),", ",(function (){var G__158276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"until"], null);
var G__158277 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158276,G__158277) : tailrecursion.hoplon.markdown.code_node.call(null,G__158276,G__158277));
})(),", ",(function (){var G__158278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"for"], null);
var G__158279 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158278,G__158279) : tailrecursion.hoplon.markdown.code_node.call(null,G__158278,G__158279));
})(),", and ",(function (){var G__158280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"while"], null);
var G__158281 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158280,G__158281) : tailrecursion.hoplon.markdown.code_node.call(null,G__158280,G__158281));
})(),". The implemenation of Scheme we shall consider in chapter 5 does not share this defect. It will execute an iterative process in constant space, even if the iterative process is described by a recursive procedure. An implementation with this property is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tail-recursive"], null)], 0)),". With a tail-recursive implementation, iteration can be expressed using the ordinary procedure call mechanism, so that special iteration constructs are useful only as syntactic sugar.",(function (){var G__158282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__158283 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Tail recursion has long been known as a compiler optimization trick. A coherent semantic basis for tail recursion was provided by Carl Hewitt (1977), who explained it in terms of the ",(function (){var G__158284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__158285 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["message-passing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158284,G__158285) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158284,G__158285));
})()," model of computation that we shall discuss in chapter 3. Inspired by this, Gerald Jay Sussman and Guy Lewis Steele Jr. (see Steele 1975) constructed a tail-recursive interpreter for Scheme. Steele later showed how tail recursion is a consequence of the natural way to compile procedure calls (Steele 1977). The IEEE standard for Scheme requires that Scheme implementations be tail-recursive."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__158282,G__158283) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__158282,G__158283));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158268,G__158269) : tailrecursion.hoplon.markdown.para_node.call(null,G__158268,G__158269));
})(),(function (){var G__158286 = cljs.core.PersistentArrayMap.EMPTY;
var G__158287 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158288 = cljs.core.PersistentArrayMap.EMPTY;
var G__158289 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is worthwhile to note at this point that Clojure is not tail-recursive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158288,G__158289) : tailrecursion.hoplon.markdown.para_node.call(null,G__158288,G__158289));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__158286,G__158287) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__158286,G__158287));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158125;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158124;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158123;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158122;
}})()], 0));
var G__157998 = "";
var G__157999 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"9-10"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(9)], null),(function (){var _STAR_references_STAR_158290 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158291 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158292 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158293 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158294 = cljs.core.PersistentArrayMap.EMPTY;
var G__158295 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures defines a method for adding two positive integers in terms of the procedures ",(function (){var G__158296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"inc"], null);
var G__158297 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158296,G__158297) : tailrecursion.hoplon.markdown.code_node.call(null,G__158296,G__158297));
})(),", which increments its arguments by 1, and ",(function (){var G__158298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"dec"], null);
var G__158299 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158298,G__158299) : tailrecursion.hoplon.markdown.code_node.call(null,G__158298,G__158299));
})(),", which decrements its arguments by 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158294,G__158295) : tailrecursion.hoplon.markdown.para_node.call(null,G__158294,G__158295));
})(),(function (){var G__158300 = (function (){var G__158301 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158302 = (function (){var G__158303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158304 = "(";
var G__158305 = (function (){var G__158330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158331 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158330,G__158331) : tailrecursion.hoplon.span.call(null,G__158330,G__158331));
})();
var G__158306 = (function (){var G__158332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158333 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158332,G__158333) : tailrecursion.hoplon.span.call(null,G__158332,G__158333));
})();
var G__158307 = "[";
var G__158308 = (function (){var G__158334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158335 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158334,G__158335) : tailrecursion.hoplon.span.call(null,G__158334,G__158335));
})();
var G__158309 = " ";
var G__158310 = (function (){var G__158336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158337 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158336,G__158337) : tailrecursion.hoplon.span.call(null,G__158336,G__158337));
})();
var G__158311 = "]\n  (";
var G__158312 = (function (){var G__158338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158339 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158338,G__158339) : tailrecursion.hoplon.span.call(null,G__158338,G__158339));
})();
var G__158313 = "(";
var G__158314 = (function (){var G__158340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158341 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158340,G__158341) : tailrecursion.hoplon.span.call(null,G__158340,G__158341));
})();
var G__158315 = (function (){var G__158342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158343 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158342,G__158343) : tailrecursion.hoplon.span.call(null,G__158342,G__158343));
})();
var G__158316 = " ";
var G__158317 = (function (){var G__158344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158345 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158344,G__158345) : tailrecursion.hoplon.span.call(null,G__158344,G__158345));
})();
var G__158318 = ")\n      ";
var G__158319 = (function (){var G__158346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158347 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158346,G__158347) : tailrecursion.hoplon.span.call(null,G__158346,G__158347));
})();
var G__158320 = "\n      (";
var G__158321 = (function (){var G__158348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158349 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158348,G__158349) : tailrecursion.hoplon.span.call(null,G__158348,G__158349));
})();
var G__158322 = "(";
var G__158323 = (function (){var G__158350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158351 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158350,G__158351) : tailrecursion.hoplon.span.call(null,G__158350,G__158351));
})();
var G__158324 = "(";
var G__158325 = (function (){var G__158352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158353 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158352,G__158353) : tailrecursion.hoplon.span.call(null,G__158352,G__158353));
})();
var G__158326 = (function (){var G__158354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158355 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158354,G__158355) : tailrecursion.hoplon.span.call(null,G__158354,G__158355));
})();
var G__158327 = ") ";
var G__158328 = (function (){var G__158356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158357 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158356,G__158357) : tailrecursion.hoplon.span.call(null,G__158356,G__158357));
})();
var G__158329 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__158303,G__158304,G__158305,G__158306,G__158307,G__158308,G__158309,G__158310,G__158311,G__158312,G__158313,G__158314,G__158315,G__158316,G__158317,G__158318,G__158319,G__158320,G__158321,G__158322,G__158323,G__158324,G__158325,G__158326,G__158327,G__158328,G__158329) : tailrecursion.hoplon.pre.call(null,G__158303,G__158304,G__158305,G__158306,G__158307,G__158308,G__158309,G__158310,G__158311,G__158312,G__158313,G__158314,G__158315,G__158316,G__158317,G__158318,G__158319,G__158320,G__158321,G__158322,G__158323,G__158324,G__158325,G__158326,G__158327,G__158328,G__158329));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158301,G__158302) : tailrecursion.hoplon.div.call(null,G__158301,G__158302));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158300) : tailrecursion.hoplon.div.call(null,G__158300));
})(),(function (){var G__158358 = (function (){var G__158359 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158360 = (function (){var G__158361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158362 = "(";
var G__158363 = (function (){var G__158387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158388 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158387,G__158388) : tailrecursion.hoplon.span.call(null,G__158387,G__158388));
})();
var G__158364 = (function (){var G__158389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158390 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158389,G__158390) : tailrecursion.hoplon.span.call(null,G__158389,G__158390));
})();
var G__158365 = "[";
var G__158366 = (function (){var G__158391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158392 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158391,G__158392) : tailrecursion.hoplon.span.call(null,G__158391,G__158392));
})();
var G__158367 = " ";
var G__158368 = (function (){var G__158393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158394 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158393,G__158394) : tailrecursion.hoplon.span.call(null,G__158393,G__158394));
})();
var G__158369 = "]\n  (";
var G__158370 = (function (){var G__158395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158396 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158395,G__158396) : tailrecursion.hoplon.span.call(null,G__158395,G__158396));
})();
var G__158371 = "(";
var G__158372 = (function (){var G__158397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158398 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158397,G__158398) : tailrecursion.hoplon.span.call(null,G__158397,G__158398));
})();
var G__158373 = (function (){var G__158399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158400 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158399,G__158400) : tailrecursion.hoplon.span.call(null,G__158399,G__158400));
})();
var G__158374 = " ";
var G__158375 = (function (){var G__158401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158402 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158401,G__158402) : tailrecursion.hoplon.span.call(null,G__158401,G__158402));
})();
var G__158376 = ")\n      ";
var G__158377 = (function (){var G__158403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158404 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158403,G__158404) : tailrecursion.hoplon.span.call(null,G__158403,G__158404));
})();
var G__158378 = "\n      (";
var G__158379 = (function (){var G__158405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158406 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158405,G__158406) : tailrecursion.hoplon.span.call(null,G__158405,G__158406));
})();
var G__158380 = "(";
var G__158381 = (function (){var G__158407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158408 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158407,G__158408) : tailrecursion.hoplon.span.call(null,G__158407,G__158408));
})();
var G__158382 = (function (){var G__158409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158410 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158409,G__158410) : tailrecursion.hoplon.span.call(null,G__158409,G__158410));
})();
var G__158383 = ") (";
var G__158384 = (function (){var G__158411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158412 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158411,G__158412) : tailrecursion.hoplon.span.call(null,G__158411,G__158412));
})();
var G__158385 = (function (){var G__158413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158414 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158413,G__158414) : tailrecursion.hoplon.span.call(null,G__158413,G__158414));
})();
var G__158386 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__158361,G__158362,G__158363,G__158364,G__158365,G__158366,G__158367,G__158368,G__158369,G__158370,G__158371,G__158372,G__158373,G__158374,G__158375,G__158376,G__158377,G__158378,G__158379,G__158380,G__158381,G__158382,G__158383,G__158384,G__158385,G__158386) : tailrecursion.hoplon.pre.call(null,G__158361,G__158362,G__158363,G__158364,G__158365,G__158366,G__158367,G__158368,G__158369,G__158370,G__158371,G__158372,G__158373,G__158374,G__158375,G__158376,G__158377,G__158378,G__158379,G__158380,G__158381,G__158382,G__158383,G__158384,G__158385,G__158386));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158359,G__158360) : tailrecursion.hoplon.div.call(null,G__158359,G__158360));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158358) : tailrecursion.hoplon.div.call(null,G__158358));
})(),(function (){var G__158415 = cljs.core.PersistentArrayMap.EMPTY;
var G__158416 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the substitution model, illustrate the process generated by each procedure in evaluating ",(function (){var G__158417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ 4 5)"], null);
var G__158418 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__158417,G__158418) : tailrecursion.hoplon.markdown.code_node.call(null,G__158417,G__158418));
})(),". Are these processes iterative or recursive?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158415,G__158416) : tailrecursion.hoplon.markdown.para_node.call(null,G__158415,G__158416));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158293;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158292;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158291;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158290;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158419 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158420 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158421 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158422 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158423 = cljs.core.PersistentArrayMap.EMPTY;
var G__158424 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The first is recursive, and the second is iterative. Let",(function (){var G__158425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158426 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158425,G__158426) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158425,G__158426));
})(),"s see why",(function (){var G__158427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__158428 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158427,G__158428) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158427,G__158428));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158423,G__158424) : tailrecursion.hoplon.markdown.para_node.call(null,G__158423,G__158424));
})(),(function (){var G__158429 = cljs.core.PersistentArrayMap.EMPTY;
var G__158430 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the first definition,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158429,G__158430) : tailrecursion.hoplon.markdown.para_node.call(null,G__158429,G__158430));
})(),(function (){var G__158431 = (function (){var G__158432 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158433 = (function (){var G__158434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158435 = "(";
var G__158436 = (function (){var G__158555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158556 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158555,G__158556) : tailrecursion.hoplon.span.call(null,G__158555,G__158556));
})();
var G__158437 = (function (){var G__158557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158558 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158557,G__158558) : tailrecursion.hoplon.span.call(null,G__158557,G__158558));
})();
var G__158438 = " ";
var G__158439 = (function (){var G__158559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158560 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158559,G__158560) : tailrecursion.hoplon.span.call(null,G__158559,G__158560));
})();
var G__158440 = ")\n(";
var G__158441 = (function (){var G__158561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158562 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158561,G__158562) : tailrecursion.hoplon.span.call(null,G__158561,G__158562));
})();
var G__158442 = "(";
var G__158443 = (function (){var G__158563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158564 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158563,G__158564) : tailrecursion.hoplon.span.call(null,G__158563,G__158564));
})();
var G__158444 = "(";
var G__158445 = (function (){var G__158565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158566 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158565,G__158566) : tailrecursion.hoplon.span.call(null,G__158565,G__158566));
})();
var G__158446 = (function (){var G__158567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158568 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158567,G__158568) : tailrecursion.hoplon.span.call(null,G__158567,G__158568));
})();
var G__158447 = ") ";
var G__158448 = (function (){var G__158569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158570 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158569,G__158570) : tailrecursion.hoplon.span.call(null,G__158569,G__158570));
})();
var G__158449 = "))\n(";
var G__158450 = (function (){var G__158571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158572 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158571,G__158572) : tailrecursion.hoplon.span.call(null,G__158571,G__158572));
})();
var G__158451 = "(";
var G__158452 = (function (){var G__158573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158574 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158573,G__158574) : tailrecursion.hoplon.span.call(null,G__158573,G__158574));
})();
var G__158453 = (function (){var G__158575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158576 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158575,G__158576) : tailrecursion.hoplon.span.call(null,G__158575,G__158576));
})();
var G__158454 = " ";
var G__158455 = (function (){var G__158577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158578 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158577,G__158578) : tailrecursion.hoplon.span.call(null,G__158577,G__158578));
})();
var G__158456 = "))\n(";
var G__158457 = (function (){var G__158579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158580 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158579,G__158580) : tailrecursion.hoplon.span.call(null,G__158579,G__158580));
})();
var G__158458 = "(";
var G__158459 = (function (){var G__158581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158582 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158581,G__158582) : tailrecursion.hoplon.span.call(null,G__158581,G__158582));
})();
var G__158460 = "(";
var G__158461 = (function (){var G__158583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158584 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158583,G__158584) : tailrecursion.hoplon.span.call(null,G__158583,G__158584));
})();
var G__158462 = "(";
var G__158463 = (function (){var G__158585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158586 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158585,G__158586) : tailrecursion.hoplon.span.call(null,G__158585,G__158586));
})();
var G__158464 = (function (){var G__158587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158588 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158587,G__158588) : tailrecursion.hoplon.span.call(null,G__158587,G__158588));
})();
var G__158465 = ") ";
var G__158466 = (function (){var G__158589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158590 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158589,G__158590) : tailrecursion.hoplon.span.call(null,G__158589,G__158590));
})();
var G__158467 = ")))\n(";
var G__158468 = (function (){var G__158591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158592 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158591,G__158592) : tailrecursion.hoplon.span.call(null,G__158591,G__158592));
})();
var G__158469 = "(";
var G__158470 = (function (){var G__158593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158594 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158593,G__158594) : tailrecursion.hoplon.span.call(null,G__158593,G__158594));
})();
var G__158471 = "(";
var G__158472 = (function (){var G__158595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158596 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158595,G__158596) : tailrecursion.hoplon.span.call(null,G__158595,G__158596));
})();
var G__158473 = (function (){var G__158597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158598 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158597,G__158598) : tailrecursion.hoplon.span.call(null,G__158597,G__158598));
})();
var G__158474 = " ";
var G__158475 = (function (){var G__158599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158600 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158599,G__158600) : tailrecursion.hoplon.span.call(null,G__158599,G__158600));
})();
var G__158476 = ")))\n(";
var G__158477 = (function (){var G__158601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158602 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158601,G__158602) : tailrecursion.hoplon.span.call(null,G__158601,G__158602));
})();
var G__158478 = "(";
var G__158479 = (function (){var G__158603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158604 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158603,G__158604) : tailrecursion.hoplon.span.call(null,G__158603,G__158604));
})();
var G__158480 = "(";
var G__158481 = (function (){var G__158605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158606 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158605,G__158606) : tailrecursion.hoplon.span.call(null,G__158605,G__158606));
})();
var G__158482 = "(";
var G__158483 = (function (){var G__158607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158608 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158607,G__158608) : tailrecursion.hoplon.span.call(null,G__158607,G__158608));
})();
var G__158484 = "(";
var G__158485 = (function (){var G__158609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158610 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158609,G__158610) : tailrecursion.hoplon.span.call(null,G__158609,G__158610));
})();
var G__158486 = (function (){var G__158611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158612 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158611,G__158612) : tailrecursion.hoplon.span.call(null,G__158611,G__158612));
})();
var G__158487 = ") ";
var G__158488 = (function (){var G__158613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158614 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158613,G__158614) : tailrecursion.hoplon.span.call(null,G__158613,G__158614));
})();
var G__158489 = "))))\n(";
var G__158490 = (function (){var G__158615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158616 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158615,G__158616) : tailrecursion.hoplon.span.call(null,G__158615,G__158616));
})();
var G__158491 = "(";
var G__158492 = (function (){var G__158617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158618 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158617,G__158618) : tailrecursion.hoplon.span.call(null,G__158617,G__158618));
})();
var G__158493 = "(";
var G__158494 = (function (){var G__158619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158620 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158619,G__158620) : tailrecursion.hoplon.span.call(null,G__158619,G__158620));
})();
var G__158495 = "(";
var G__158496 = (function (){var G__158621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158622 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158621,G__158622) : tailrecursion.hoplon.span.call(null,G__158621,G__158622));
})();
var G__158497 = (function (){var G__158623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158624 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158623,G__158624) : tailrecursion.hoplon.span.call(null,G__158623,G__158624));
})();
var G__158498 = " ";
var G__158499 = (function (){var G__158625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158626 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158625,G__158626) : tailrecursion.hoplon.span.call(null,G__158625,G__158626));
})();
var G__158500 = "))))\n(";
var G__158501 = (function (){var G__158627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158628 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158627,G__158628) : tailrecursion.hoplon.span.call(null,G__158627,G__158628));
})();
var G__158502 = "(";
var G__158503 = (function (){var G__158629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158630 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158629,G__158630) : tailrecursion.hoplon.span.call(null,G__158629,G__158630));
})();
var G__158504 = "(";
var G__158505 = (function (){var G__158631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158632 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158631,G__158632) : tailrecursion.hoplon.span.call(null,G__158631,G__158632));
})();
var G__158506 = "(";
var G__158507 = (function (){var G__158633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158634 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158633,G__158634) : tailrecursion.hoplon.span.call(null,G__158633,G__158634));
})();
var G__158508 = "(";
var G__158509 = (function (){var G__158635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158636 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158635,G__158636) : tailrecursion.hoplon.span.call(null,G__158635,G__158636));
})();
var G__158510 = "(";
var G__158511 = (function (){var G__158637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158638 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158637,G__158638) : tailrecursion.hoplon.span.call(null,G__158637,G__158638));
})();
var G__158512 = (function (){var G__158639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158640 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158639,G__158640) : tailrecursion.hoplon.span.call(null,G__158639,G__158640));
})();
var G__158513 = ") ";
var G__158514 = (function (){var G__158641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158642 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158641,G__158642) : tailrecursion.hoplon.span.call(null,G__158641,G__158642));
})();
var G__158515 = ")))))\n(";
var G__158516 = (function (){var G__158643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158644 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158643,G__158644) : tailrecursion.hoplon.span.call(null,G__158643,G__158644));
})();
var G__158517 = "(";
var G__158518 = (function (){var G__158645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158646 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158645,G__158646) : tailrecursion.hoplon.span.call(null,G__158645,G__158646));
})();
var G__158519 = "(";
var G__158520 = (function (){var G__158647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158648 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158647,G__158648) : tailrecursion.hoplon.span.call(null,G__158647,G__158648));
})();
var G__158521 = "(";
var G__158522 = (function (){var G__158649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158650 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158649,G__158650) : tailrecursion.hoplon.span.call(null,G__158649,G__158650));
})();
var G__158523 = "(";
var G__158524 = (function (){var G__158651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158652 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158651,G__158652) : tailrecursion.hoplon.span.call(null,G__158651,G__158652));
})();
var G__158525 = (function (){var G__158653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158654 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158653,G__158654) : tailrecursion.hoplon.span.call(null,G__158653,G__158654));
})();
var G__158526 = " ";
var G__158527 = (function (){var G__158655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158656 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158655,G__158656) : tailrecursion.hoplon.span.call(null,G__158655,G__158656));
})();
var G__158528 = ")))))\n(";
var G__158529 = (function (){var G__158657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158658 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158657,G__158658) : tailrecursion.hoplon.span.call(null,G__158657,G__158658));
})();
var G__158530 = "(";
var G__158531 = (function (){var G__158659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158660 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158659,G__158660) : tailrecursion.hoplon.span.call(null,G__158659,G__158660));
})();
var G__158532 = "(";
var G__158533 = (function (){var G__158661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158662 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158661,G__158662) : tailrecursion.hoplon.span.call(null,G__158661,G__158662));
})();
var G__158534 = "(";
var G__158535 = (function (){var G__158663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158664 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158663,G__158664) : tailrecursion.hoplon.span.call(null,G__158663,G__158664));
})();
var G__158536 = (function (){var G__158665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158666 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158665,G__158666) : tailrecursion.hoplon.span.call(null,G__158665,G__158666));
})();
var G__158537 = "))))\n(";
var G__158538 = (function (){var G__158667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158668 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158667,G__158668) : tailrecursion.hoplon.span.call(null,G__158667,G__158668));
})();
var G__158539 = "(";
var G__158540 = (function (){var G__158669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158670 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158669,G__158670) : tailrecursion.hoplon.span.call(null,G__158669,G__158670));
})();
var G__158541 = "(";
var G__158542 = (function (){var G__158671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158672 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158671,G__158672) : tailrecursion.hoplon.span.call(null,G__158671,G__158672));
})();
var G__158543 = (function (){var G__158673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158674 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158673,G__158674) : tailrecursion.hoplon.span.call(null,G__158673,G__158674));
})();
var G__158544 = ")))\n(";
var G__158545 = (function (){var G__158675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158676 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158675,G__158676) : tailrecursion.hoplon.span.call(null,G__158675,G__158676));
})();
var G__158546 = "(";
var G__158547 = (function (){var G__158677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158678 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158677,G__158678) : tailrecursion.hoplon.span.call(null,G__158677,G__158678));
})();
var G__158548 = (function (){var G__158679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158680 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158679,G__158680) : tailrecursion.hoplon.span.call(null,G__158679,G__158680));
})();
var G__158549 = "))\n(";
var G__158550 = (function (){var G__158681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158682 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158681,G__158682) : tailrecursion.hoplon.span.call(null,G__158681,G__158682));
})();
var G__158551 = (function (){var G__158683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158684 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158683,G__158684) : tailrecursion.hoplon.span.call(null,G__158683,G__158684));
})();
var G__158552 = ")\n";
var G__158553 = (function (){var G__158685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158686 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158685,G__158686) : tailrecursion.hoplon.span.call(null,G__158685,G__158686));
})();
var G__158554 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121(G__158434,G__158435,G__158436,G__158437,G__158438,G__158439,G__158440,G__158441,G__158442,G__158443,G__158444,G__158445,G__158446,G__158447,G__158448,G__158449,G__158450,G__158451,G__158452,G__158453,G__158454,G__158455,G__158456,G__158457,G__158458,G__158459,G__158460,G__158461,G__158462,G__158463,G__158464,G__158465,G__158466,G__158467,G__158468,G__158469,G__158470,G__158471,G__158472,G__158473,G__158474,G__158475,G__158476,G__158477,G__158478,G__158479,G__158480,G__158481,G__158482,G__158483,G__158484,G__158485,G__158486,G__158487,G__158488,G__158489,G__158490,G__158491,G__158492,G__158493,G__158494,G__158495,G__158496,G__158497,G__158498,G__158499,G__158500,G__158501,G__158502,G__158503,G__158504,G__158505,G__158506,G__158507,G__158508,G__158509,G__158510,G__158511,G__158512,G__158513,G__158514,G__158515,G__158516,G__158517,G__158518,G__158519,G__158520,G__158521,G__158522,G__158523,G__158524,G__158525,G__158526,G__158527,G__158528,G__158529,G__158530,G__158531,G__158532,G__158533,G__158534,G__158535,G__158536,G__158537,G__158538,G__158539,G__158540,G__158541,G__158542,G__158543,G__158544,G__158545,G__158546,G__158547,G__158548,G__158549,G__158550,G__158551,G__158552,G__158553,G__158554) : tailrecursion.hoplon.pre.call(null,G__158434,G__158435,G__158436,G__158437,G__158438,G__158439,G__158440,G__158441,G__158442,G__158443,G__158444,G__158445,G__158446,G__158447,G__158448,G__158449,G__158450,G__158451,G__158452,G__158453,G__158454,G__158455,G__158456,G__158457,G__158458,G__158459,G__158460,G__158461,G__158462,G__158463,G__158464,G__158465,G__158466,G__158467,G__158468,G__158469,G__158470,G__158471,G__158472,G__158473,G__158474,G__158475,G__158476,G__158477,G__158478,G__158479,G__158480,G__158481,G__158482,G__158483,G__158484,G__158485,G__158486,G__158487,G__158488,G__158489,G__158490,G__158491,G__158492,G__158493,G__158494,G__158495,G__158496,G__158497,G__158498,G__158499,G__158500,G__158501,G__158502,G__158503,G__158504,G__158505,G__158506,G__158507,G__158508,G__158509,G__158510,G__158511,G__158512,G__158513,G__158514,G__158515,G__158516,G__158517,G__158518,G__158519,G__158520,G__158521,G__158522,G__158523,G__158524,G__158525,G__158526,G__158527,G__158528,G__158529,G__158530,G__158531,G__158532,G__158533,G__158534,G__158535,G__158536,G__158537,G__158538,G__158539,G__158540,G__158541,G__158542,G__158543,G__158544,G__158545,G__158546,G__158547,G__158548,G__158549,G__158550,G__158551,G__158552,G__158553,G__158554));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158432,G__158433) : tailrecursion.hoplon.div.call(null,G__158432,G__158433));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158431) : tailrecursion.hoplon.div.call(null,G__158431));
})(),(function (){var G__158687 = cljs.core.PersistentArrayMap.EMPTY;
var G__158688 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clearly recursive in the way it grows."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158687,G__158688) : tailrecursion.hoplon.markdown.para_node.call(null,G__158687,G__158688));
})(),(function (){var G__158689 = cljs.core.PersistentArrayMap.EMPTY;
var G__158690 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the second, however,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158689,G__158690) : tailrecursion.hoplon.markdown.para_node.call(null,G__158689,G__158690));
})(),(function (){var G__158691 = (function (){var G__158692 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158693 = (function (){var G__158694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158695 = "(";
var G__158696 = (function (){var G__158755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158756 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158755,G__158756) : tailrecursion.hoplon.span.call(null,G__158755,G__158756));
})();
var G__158697 = (function (){var G__158757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158758 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158757,G__158758) : tailrecursion.hoplon.span.call(null,G__158757,G__158758));
})();
var G__158698 = " ";
var G__158699 = (function (){var G__158759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158760 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158759,G__158760) : tailrecursion.hoplon.span.call(null,G__158759,G__158760));
})();
var G__158700 = ")\n(";
var G__158701 = (function (){var G__158761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158762 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158761,G__158762) : tailrecursion.hoplon.span.call(null,G__158761,G__158762));
})();
var G__158702 = "(";
var G__158703 = (function (){var G__158763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158764 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158763,G__158764) : tailrecursion.hoplon.span.call(null,G__158763,G__158764));
})();
var G__158704 = (function (){var G__158765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158766 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158765,G__158766) : tailrecursion.hoplon.span.call(null,G__158765,G__158766));
})();
var G__158705 = ") (";
var G__158706 = (function (){var G__158767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158768 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158767,G__158768) : tailrecursion.hoplon.span.call(null,G__158767,G__158768));
})();
var G__158707 = (function (){var G__158769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158770 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158769,G__158770) : tailrecursion.hoplon.span.call(null,G__158769,G__158770));
})();
var G__158708 = "))\n(";
var G__158709 = (function (){var G__158771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158772 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158771,G__158772) : tailrecursion.hoplon.span.call(null,G__158771,G__158772));
})();
var G__158710 = (function (){var G__158773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158774 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158773,G__158774) : tailrecursion.hoplon.span.call(null,G__158773,G__158774));
})();
var G__158711 = " ";
var G__158712 = (function (){var G__158775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158776 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158775,G__158776) : tailrecursion.hoplon.span.call(null,G__158775,G__158776));
})();
var G__158713 = ")\n(";
var G__158714 = (function (){var G__158777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158778 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158777,G__158778) : tailrecursion.hoplon.span.call(null,G__158777,G__158778));
})();
var G__158715 = "(";
var G__158716 = (function (){var G__158779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158780 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158779,G__158780) : tailrecursion.hoplon.span.call(null,G__158779,G__158780));
})();
var G__158717 = (function (){var G__158781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158782 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158781,G__158782) : tailrecursion.hoplon.span.call(null,G__158781,G__158782));
})();
var G__158718 = ") (";
var G__158719 = (function (){var G__158783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158784 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158783,G__158784) : tailrecursion.hoplon.span.call(null,G__158783,G__158784));
})();
var G__158720 = (function (){var G__158785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158786 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158785,G__158786) : tailrecursion.hoplon.span.call(null,G__158785,G__158786));
})();
var G__158721 = "))\n(";
var G__158722 = (function (){var G__158787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158788 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158787,G__158788) : tailrecursion.hoplon.span.call(null,G__158787,G__158788));
})();
var G__158723 = (function (){var G__158789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158790 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158789,G__158790) : tailrecursion.hoplon.span.call(null,G__158789,G__158790));
})();
var G__158724 = " ";
var G__158725 = (function (){var G__158791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158792 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158791,G__158792) : tailrecursion.hoplon.span.call(null,G__158791,G__158792));
})();
var G__158726 = ")\n(";
var G__158727 = (function (){var G__158793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158794 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158793,G__158794) : tailrecursion.hoplon.span.call(null,G__158793,G__158794));
})();
var G__158728 = "(";
var G__158729 = (function (){var G__158795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158796 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158795,G__158796) : tailrecursion.hoplon.span.call(null,G__158795,G__158796));
})();
var G__158730 = (function (){var G__158797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158798 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158797,G__158798) : tailrecursion.hoplon.span.call(null,G__158797,G__158798));
})();
var G__158731 = ") (";
var G__158732 = (function (){var G__158799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158800 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158799,G__158800) : tailrecursion.hoplon.span.call(null,G__158799,G__158800));
})();
var G__158733 = (function (){var G__158801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158802 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158801,G__158802) : tailrecursion.hoplon.span.call(null,G__158801,G__158802));
})();
var G__158734 = "))\n(";
var G__158735 = (function (){var G__158803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158804 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158803,G__158804) : tailrecursion.hoplon.span.call(null,G__158803,G__158804));
})();
var G__158736 = (function (){var G__158805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158806 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158805,G__158806) : tailrecursion.hoplon.span.call(null,G__158805,G__158806));
})();
var G__158737 = " ";
var G__158738 = (function (){var G__158807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158808 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158807,G__158808) : tailrecursion.hoplon.span.call(null,G__158807,G__158808));
})();
var G__158739 = ")\n(";
var G__158740 = (function (){var G__158809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158810 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158809,G__158810) : tailrecursion.hoplon.span.call(null,G__158809,G__158810));
})();
var G__158741 = "(";
var G__158742 = (function (){var G__158811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158812 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158811,G__158812) : tailrecursion.hoplon.span.call(null,G__158811,G__158812));
})();
var G__158743 = (function (){var G__158813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158814 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158813,G__158814) : tailrecursion.hoplon.span.call(null,G__158813,G__158814));
})();
var G__158744 = ") (";
var G__158745 = (function (){var G__158815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158816 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158815,G__158816) : tailrecursion.hoplon.span.call(null,G__158815,G__158816));
})();
var G__158746 = (function (){var G__158817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158818 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158817,G__158818) : tailrecursion.hoplon.span.call(null,G__158817,G__158818));
})();
var G__158747 = "))\n(";
var G__158748 = (function (){var G__158819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158820 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158819,G__158820) : tailrecursion.hoplon.span.call(null,G__158819,G__158820));
})();
var G__158749 = (function (){var G__158821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158822 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158821,G__158822) : tailrecursion.hoplon.span.call(null,G__158821,G__158822));
})();
var G__158750 = " ";
var G__158751 = (function (){var G__158823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158824 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158823,G__158824) : tailrecursion.hoplon.span.call(null,G__158823,G__158824));
})();
var G__158752 = ")\n";
var G__158753 = (function (){var G__158825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158826 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158825,G__158826) : tailrecursion.hoplon.span.call(null,G__158825,G__158826));
})();
var G__158754 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__158694,G__158695,G__158696,G__158697,G__158698,G__158699,G__158700,G__158701,G__158702,G__158703,G__158704,G__158705,G__158706,G__158707,G__158708,G__158709,G__158710,G__158711,G__158712,G__158713,G__158714,G__158715,G__158716,G__158717,G__158718,G__158719,G__158720,G__158721,G__158722,G__158723,G__158724,G__158725,G__158726,G__158727,G__158728,G__158729,G__158730,G__158731,G__158732,G__158733,G__158734,G__158735,G__158736,G__158737,G__158738,G__158739,G__158740,G__158741,G__158742,G__158743,G__158744,G__158745,G__158746,G__158747,G__158748,G__158749,G__158750,G__158751,G__158752,G__158753,G__158754) : tailrecursion.hoplon.pre.call(null,G__158694,G__158695,G__158696,G__158697,G__158698,G__158699,G__158700,G__158701,G__158702,G__158703,G__158704,G__158705,G__158706,G__158707,G__158708,G__158709,G__158710,G__158711,G__158712,G__158713,G__158714,G__158715,G__158716,G__158717,G__158718,G__158719,G__158720,G__158721,G__158722,G__158723,G__158724,G__158725,G__158726,G__158727,G__158728,G__158729,G__158730,G__158731,G__158732,G__158733,G__158734,G__158735,G__158736,G__158737,G__158738,G__158739,G__158740,G__158741,G__158742,G__158743,G__158744,G__158745,G__158746,G__158747,G__158748,G__158749,G__158750,G__158751,G__158752,G__158753,G__158754));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158692,G__158693) : tailrecursion.hoplon.div.call(null,G__158692,G__158693));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158691) : tailrecursion.hoplon.div.call(null,G__158691));
})(),(function (){var G__158827 = cljs.core.PersistentArrayMap.EMPTY;
var G__158828 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You see the space needed to compute the second was significantly less than that of the first."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158827,G__158828) : tailrecursion.hoplon.markdown.para_node.call(null,G__158827,G__158828));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158422;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158421;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158420;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158419;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(10)], null),(function (){var _STAR_references_STAR_158829 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158830 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158831 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158832 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158833 = cljs.core.PersistentArrayMap.EMPTY;
var G__158834 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure computes a mathematical function called Ackermann",(function (){var G__158835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__158836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__158835,G__158836) : tailrecursion.hoplon.markdown.simple_node.call(null,G__158835,G__158836));
})(),"s function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158833,G__158834) : tailrecursion.hoplon.markdown.para_node.call(null,G__158833,G__158834));
})(),(function (){var G__158837 = (function (){var G__158838 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158839 = (function (){var G__158840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158841 = "(";
var G__158842 = (function (){var G__158893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__158894 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158893,G__158894) : tailrecursion.hoplon.span.call(null,G__158893,G__158894));
})();
var G__158843 = (function (){var G__158895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158896 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158895,G__158896) : tailrecursion.hoplon.span.call(null,G__158895,G__158896));
})();
var G__158844 = " [";
var G__158845 = (function (){var G__158897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158898 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158897,G__158898) : tailrecursion.hoplon.span.call(null,G__158897,G__158898));
})();
var G__158846 = " ";
var G__158847 = (function (){var G__158899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158900 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158899,G__158900) : tailrecursion.hoplon.span.call(null,G__158899,G__158900));
})();
var G__158848 = "]\n  (";
var G__158849 = (function (){var G__158901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158902 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158901,G__158902) : tailrecursion.hoplon.span.call(null,G__158901,G__158902));
})();
var G__158850 = "(";
var G__158851 = (function (){var G__158903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158904 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158903,G__158904) : tailrecursion.hoplon.span.call(null,G__158903,G__158904));
})();
var G__158852 = (function (){var G__158905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158906 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158905,G__158906) : tailrecursion.hoplon.span.call(null,G__158905,G__158906));
})();
var G__158853 = " ";
var G__158854 = (function (){var G__158907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158908 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158907,G__158908) : tailrecursion.hoplon.span.call(null,G__158907,G__158908));
})();
var G__158855 = ") ";
var G__158856 = (function (){var G__158909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158910 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158909,G__158910) : tailrecursion.hoplon.span.call(null,G__158909,G__158910));
})();
var G__158857 = "\n        (";
var G__158858 = (function (){var G__158911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158912 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158911,G__158912) : tailrecursion.hoplon.span.call(null,G__158911,G__158912));
})();
var G__158859 = (function (){var G__158913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158914 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158913,G__158914) : tailrecursion.hoplon.span.call(null,G__158913,G__158914));
})();
var G__158860 = " ";
var G__158861 = (function (){var G__158915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158916 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158915,G__158916) : tailrecursion.hoplon.span.call(null,G__158915,G__158916));
})();
var G__158862 = ") (";
var G__158863 = (function (){var G__158917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158918 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158917,G__158918) : tailrecursion.hoplon.span.call(null,G__158917,G__158918));
})();
var G__158864 = (function (){var G__158919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158920 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158919,G__158920) : tailrecursion.hoplon.span.call(null,G__158919,G__158920));
})();
var G__158865 = " ";
var G__158866 = (function (){var G__158921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158922 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158921,G__158922) : tailrecursion.hoplon.span.call(null,G__158921,G__158922));
})();
var G__158867 = ")\n        (";
var G__158868 = (function (){var G__158923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158924 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158923,G__158924) : tailrecursion.hoplon.span.call(null,G__158923,G__158924));
})();
var G__158869 = (function (){var G__158925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158926 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158925,G__158926) : tailrecursion.hoplon.span.call(null,G__158925,G__158926));
})();
var G__158870 = " ";
var G__158871 = (function (){var G__158927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158928 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158927,G__158928) : tailrecursion.hoplon.span.call(null,G__158927,G__158928));
})();
var G__158872 = ") ";
var G__158873 = (function (){var G__158929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158930 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158929,G__158930) : tailrecursion.hoplon.span.call(null,G__158929,G__158930));
})();
var G__158874 = "\n        ";
var G__158875 = (function (){var G__158931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158932 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158931,G__158932) : tailrecursion.hoplon.span.call(null,G__158931,G__158932));
})();
var G__158876 = " (";
var G__158877 = (function (){var G__158933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158934 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158933,G__158934) : tailrecursion.hoplon.span.call(null,G__158933,G__158934));
})();
var G__158878 = " (";
var G__158879 = (function (){var G__158935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158936 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158935,G__158936) : tailrecursion.hoplon.span.call(null,G__158935,G__158936));
})();
var G__158880 = (function (){var G__158937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158938 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158937,G__158938) : tailrecursion.hoplon.span.call(null,G__158937,G__158938));
})();
var G__158881 = " ";
var G__158882 = (function (){var G__158939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158940 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158939,G__158940) : tailrecursion.hoplon.span.call(null,G__158939,G__158940));
})();
var G__158883 = ")\n                 (";
var G__158884 = (function (){var G__158941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158942 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158941,G__158942) : tailrecursion.hoplon.span.call(null,G__158941,G__158942));
})();
var G__158885 = " ";
var G__158886 = (function (){var G__158943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158944 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158943,G__158944) : tailrecursion.hoplon.span.call(null,G__158943,G__158944));
})();
var G__158887 = " (";
var G__158888 = (function (){var G__158945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__158946 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158945,G__158946) : tailrecursion.hoplon.span.call(null,G__158945,G__158946));
})();
var G__158889 = (function (){var G__158947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__158948 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158947,G__158948) : tailrecursion.hoplon.span.call(null,G__158947,G__158948));
})();
var G__158890 = " ";
var G__158891 = (function (){var G__158949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158950 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158949,G__158950) : tailrecursion.hoplon.span.call(null,G__158949,G__158950));
})();
var G__158892 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__158840,G__158841,G__158842,G__158843,G__158844,G__158845,G__158846,G__158847,G__158848,G__158849,G__158850,G__158851,G__158852,G__158853,G__158854,G__158855,G__158856,G__158857,G__158858,G__158859,G__158860,G__158861,G__158862,G__158863,G__158864,G__158865,G__158866,G__158867,G__158868,G__158869,G__158870,G__158871,G__158872,G__158873,G__158874,G__158875,G__158876,G__158877,G__158878,G__158879,G__158880,G__158881,G__158882,G__158883,G__158884,G__158885,G__158886,G__158887,G__158888,G__158889,G__158890,G__158891,G__158892) : tailrecursion.hoplon.pre.call(null,G__158840,G__158841,G__158842,G__158843,G__158844,G__158845,G__158846,G__158847,G__158848,G__158849,G__158850,G__158851,G__158852,G__158853,G__158854,G__158855,G__158856,G__158857,G__158858,G__158859,G__158860,G__158861,G__158862,G__158863,G__158864,G__158865,G__158866,G__158867,G__158868,G__158869,G__158870,G__158871,G__158872,G__158873,G__158874,G__158875,G__158876,G__158877,G__158878,G__158879,G__158880,G__158881,G__158882,G__158883,G__158884,G__158885,G__158886,G__158887,G__158888,G__158889,G__158890,G__158891,G__158892));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158838,G__158839) : tailrecursion.hoplon.div.call(null,G__158838,G__158839));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158837) : tailrecursion.hoplon.div.call(null,G__158837));
})(),(function (){var G__158951 = cljs.core.PersistentArrayMap.EMPTY;
var G__158952 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__158951,G__158952) : tailrecursion.hoplon.markdown.para_node.call(null,G__158951,G__158952));
})(),(function (){var G__158953 = (function (){var G__158954 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158955 = (function (){var G__158956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158957 = "(";
var G__158958 = (function (){var G__158964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__158965 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158964,G__158965) : tailrecursion.hoplon.span.call(null,G__158964,G__158965));
})();
var G__158959 = " ";
var G__158960 = (function (){var G__158966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158967 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158966,G__158967) : tailrecursion.hoplon.span.call(null,G__158966,G__158967));
})();
var G__158961 = " ";
var G__158962 = (function (){var G__158968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__158969 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__158968,G__158969) : tailrecursion.hoplon.span.call(null,G__158968,G__158969));
})();
var G__158963 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__158956,G__158957,G__158958,G__158959,G__158960,G__158961,G__158962,G__158963) : tailrecursion.hoplon.pre.call(null,G__158956,G__158957,G__158958,G__158959,G__158960,G__158961,G__158962,G__158963));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158954,G__158955) : tailrecursion.hoplon.div.call(null,G__158954,G__158955));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158953) : tailrecursion.hoplon.div.call(null,G__158953));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158832;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158831;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158830;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158829;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_158970 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158971 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_158972 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_158973 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__158974 = (function (){var G__158975 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__158976 = (function (){var G__158977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__158978 = "(";
var G__158979 = (function (){var G__159491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159492 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159491,G__159492) : tailrecursion.hoplon.span.call(null,G__159491,G__159492));
})();
var G__158980 = " ";
var G__158981 = (function (){var G__159493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159494 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159493,G__159494) : tailrecursion.hoplon.span.call(null,G__159493,G__159494));
})();
var G__158982 = " ";
var G__158983 = (function (){var G__159495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159496 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159495,G__159496) : tailrecursion.hoplon.span.call(null,G__159495,G__159496));
})();
var G__158984 = ")\n(";
var G__158985 = (function (){var G__159497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159498 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159497,G__159498) : tailrecursion.hoplon.span.call(null,G__159497,G__159498));
})();
var G__158986 = " (";
var G__158987 = (function (){var G__159499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159500 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159499,G__159500) : tailrecursion.hoplon.span.call(null,G__159499,G__159500));
})();
var G__158988 = (function (){var G__159501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159502 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159501,G__159502) : tailrecursion.hoplon.span.call(null,G__159501,G__159502));
})();
var G__158989 = " ";
var G__158990 = (function (){var G__159503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159504 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159503,G__159504) : tailrecursion.hoplon.span.call(null,G__159503,G__159504));
})();
var G__158991 = ") (";
var G__158992 = (function (){var G__159505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159506 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159505,G__159506) : tailrecursion.hoplon.span.call(null,G__159505,G__159506));
})();
var G__158993 = " ";
var G__158994 = (function (){var G__159507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159508 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159507,G__159508) : tailrecursion.hoplon.span.call(null,G__159507,G__159508));
})();
var G__158995 = " (";
var G__158996 = (function (){var G__159509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159510 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159509,G__159510) : tailrecursion.hoplon.span.call(null,G__159509,G__159510));
})();
var G__158997 = (function (){var G__159511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159512 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159511,G__159512) : tailrecursion.hoplon.span.call(null,G__159511,G__159512));
})();
var G__158998 = " ";
var G__158999 = (function (){var G__159513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159514 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159513,G__159514) : tailrecursion.hoplon.span.call(null,G__159513,G__159514));
})();
var G__159000 = ")))\n(";
var G__159001 = (function (){var G__159515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159516 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159515,G__159516) : tailrecursion.hoplon.span.call(null,G__159515,G__159516));
})();
var G__159002 = " ";
var G__159003 = (function (){var G__159517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159518 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159517,G__159518) : tailrecursion.hoplon.span.call(null,G__159517,G__159518));
})();
var G__159004 = " (";
var G__159005 = (function (){var G__159519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159520 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159519,G__159520) : tailrecursion.hoplon.span.call(null,G__159519,G__159520));
})();
var G__159006 = " ";
var G__159007 = (function (){var G__159521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159522 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159521,G__159522) : tailrecursion.hoplon.span.call(null,G__159521,G__159522));
})();
var G__159008 = " ";
var G__159009 = (function (){var G__159523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159524 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159523,G__159524) : tailrecursion.hoplon.span.call(null,G__159523,G__159524));
})();
var G__159010 = "))\n(";
var G__159011 = (function (){var G__159525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159526 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159525,G__159526) : tailrecursion.hoplon.span.call(null,G__159525,G__159526));
})();
var G__159012 = " ";
var G__159013 = (function (){var G__159527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159528 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159527,G__159528) : tailrecursion.hoplon.span.call(null,G__159527,G__159528));
})();
var G__159014 = " (";
var G__159015 = (function (){var G__159529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159530 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159529,G__159530) : tailrecursion.hoplon.span.call(null,G__159529,G__159530));
})();
var G__159016 = " ";
var G__159017 = (function (){var G__159531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159532 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159531,G__159532) : tailrecursion.hoplon.span.call(null,G__159531,G__159532));
})();
var G__159018 = " (";
var G__159019 = (function (){var G__159533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159534 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159533,G__159534) : tailrecursion.hoplon.span.call(null,G__159533,G__159534));
})();
var G__159020 = " ";
var G__159021 = (function (){var G__159535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159536 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159535,G__159536) : tailrecursion.hoplon.span.call(null,G__159535,G__159536));
})();
var G__159022 = " (";
var G__159023 = (function (){var G__159537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159538 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159537,G__159538) : tailrecursion.hoplon.span.call(null,G__159537,G__159538));
})();
var G__159024 = (function (){var G__159539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159540 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159539,G__159540) : tailrecursion.hoplon.span.call(null,G__159539,G__159540));
})();
var G__159025 = " ";
var G__159026 = (function (){var G__159541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159542 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159541,G__159542) : tailrecursion.hoplon.span.call(null,G__159541,G__159542));
})();
var G__159027 = "))))\n(";
var G__159028 = (function (){var G__159543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159544 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159543,G__159544) : tailrecursion.hoplon.span.call(null,G__159543,G__159544));
})();
var G__159029 = " ";
var G__159030 = (function (){var G__159545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159546 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159545,G__159546) : tailrecursion.hoplon.span.call(null,G__159545,G__159546));
})();
var G__159031 = " (";
var G__159032 = (function (){var G__159547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159548 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159547,G__159548) : tailrecursion.hoplon.span.call(null,G__159547,G__159548));
})();
var G__159033 = " ";
var G__159034 = (function (){var G__159549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159550 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159549,G__159550) : tailrecursion.hoplon.span.call(null,G__159549,G__159550));
})();
var G__159035 = " (";
var G__159036 = (function (){var G__159551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159552 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159551,G__159552) : tailrecursion.hoplon.span.call(null,G__159551,G__159552));
})();
var G__159037 = " ";
var G__159038 = (function (){var G__159553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159554 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159553,G__159554) : tailrecursion.hoplon.span.call(null,G__159553,G__159554));
})();
var G__159039 = " ";
var G__159040 = (function (){var G__159555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159556 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159555,G__159556) : tailrecursion.hoplon.span.call(null,G__159555,G__159556));
})();
var G__159041 = ")))\n(";
var G__159042 = (function (){var G__159557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159558 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159557,G__159558) : tailrecursion.hoplon.span.call(null,G__159557,G__159558));
})();
var G__159043 = " ";
var G__159044 = (function (){var G__159559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159560 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159559,G__159560) : tailrecursion.hoplon.span.call(null,G__159559,G__159560));
})();
var G__159045 = " (";
var G__159046 = (function (){var G__159561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159562 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159561,G__159562) : tailrecursion.hoplon.span.call(null,G__159561,G__159562));
})();
var G__159047 = " ";
var G__159048 = (function (){var G__159563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159564 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159563,G__159564) : tailrecursion.hoplon.span.call(null,G__159563,G__159564));
})();
var G__159049 = " (";
var G__159050 = (function (){var G__159565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159566 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159565,G__159566) : tailrecursion.hoplon.span.call(null,G__159565,G__159566));
})();
var G__159051 = " ";
var G__159052 = (function (){var G__159567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159568 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159567,G__159568) : tailrecursion.hoplon.span.call(null,G__159567,G__159568));
})();
var G__159053 = " (";
var G__159054 = (function (){var G__159569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159570 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159569,G__159570) : tailrecursion.hoplon.span.call(null,G__159569,G__159570));
})();
var G__159055 = " ";
var G__159056 = (function (){var G__159571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159572 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159571,G__159572) : tailrecursion.hoplon.span.call(null,G__159571,G__159572));
})();
var G__159057 = " (";
var G__159058 = (function (){var G__159573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159574 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159573,G__159574) : tailrecursion.hoplon.span.call(null,G__159573,G__159574));
})();
var G__159059 = (function (){var G__159575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159576 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159575,G__159576) : tailrecursion.hoplon.span.call(null,G__159575,G__159576));
})();
var G__159060 = " ";
var G__159061 = (function (){var G__159577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159578 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159577,G__159578) : tailrecursion.hoplon.span.call(null,G__159577,G__159578));
})();
var G__159062 = ")))))\n(";
var G__159063 = (function (){var G__159579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159580 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159579,G__159580) : tailrecursion.hoplon.span.call(null,G__159579,G__159580));
})();
var G__159064 = " ";
var G__159065 = (function (){var G__159581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159582 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159581,G__159582) : tailrecursion.hoplon.span.call(null,G__159581,G__159582));
})();
var G__159066 = " (";
var G__159067 = (function (){var G__159583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159584 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159583,G__159584) : tailrecursion.hoplon.span.call(null,G__159583,G__159584));
})();
var G__159068 = " ";
var G__159069 = (function (){var G__159585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159586 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159585,G__159586) : tailrecursion.hoplon.span.call(null,G__159585,G__159586));
})();
var G__159070 = " (";
var G__159071 = (function (){var G__159587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159588 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159587,G__159588) : tailrecursion.hoplon.span.call(null,G__159587,G__159588));
})();
var G__159072 = " ";
var G__159073 = (function (){var G__159589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159590 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159589,G__159590) : tailrecursion.hoplon.span.call(null,G__159589,G__159590));
})();
var G__159074 = " (";
var G__159075 = (function (){var G__159591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159592 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159591,G__159592) : tailrecursion.hoplon.span.call(null,G__159591,G__159592));
})();
var G__159076 = " ";
var G__159077 = (function (){var G__159593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159594 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159593,G__159594) : tailrecursion.hoplon.span.call(null,G__159593,G__159594));
})();
var G__159078 = " (";
var G__159079 = (function (){var G__159595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159596 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159595,G__159596) : tailrecursion.hoplon.span.call(null,G__159595,G__159596));
})();
var G__159080 = " ";
var G__159081 = (function (){var G__159597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159598 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159597,G__159598) : tailrecursion.hoplon.span.call(null,G__159597,G__159598));
})();
var G__159082 = " (";
var G__159083 = (function (){var G__159599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159600 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159599,G__159600) : tailrecursion.hoplon.span.call(null,G__159599,G__159600));
})();
var G__159084 = (function (){var G__159601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159602 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159601,G__159602) : tailrecursion.hoplon.span.call(null,G__159601,G__159602));
})();
var G__159085 = " ";
var G__159086 = (function (){var G__159603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159604 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159603,G__159604) : tailrecursion.hoplon.span.call(null,G__159603,G__159604));
})();
var G__159087 = "))))))\n(";
var G__159088 = (function (){var G__159605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159606 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159605,G__159606) : tailrecursion.hoplon.span.call(null,G__159605,G__159606));
})();
var G__159089 = " ";
var G__159090 = (function (){var G__159607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159608 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159607,G__159608) : tailrecursion.hoplon.span.call(null,G__159607,G__159608));
})();
var G__159091 = " (";
var G__159092 = (function (){var G__159609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159610 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159609,G__159610) : tailrecursion.hoplon.span.call(null,G__159609,G__159610));
})();
var G__159093 = " ";
var G__159094 = (function (){var G__159611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159612 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159611,G__159612) : tailrecursion.hoplon.span.call(null,G__159611,G__159612));
})();
var G__159095 = " (";
var G__159096 = (function (){var G__159613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159614 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159613,G__159614) : tailrecursion.hoplon.span.call(null,G__159613,G__159614));
})();
var G__159097 = " ";
var G__159098 = (function (){var G__159615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159616 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159615,G__159616) : tailrecursion.hoplon.span.call(null,G__159615,G__159616));
})();
var G__159099 = " (";
var G__159100 = (function (){var G__159617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159618 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159617,G__159618) : tailrecursion.hoplon.span.call(null,G__159617,G__159618));
})();
var G__159101 = " ";
var G__159102 = (function (){var G__159619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159620 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159619,G__159620) : tailrecursion.hoplon.span.call(null,G__159619,G__159620));
})();
var G__159103 = " (";
var G__159104 = (function (){var G__159621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159622 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159621,G__159622) : tailrecursion.hoplon.span.call(null,G__159621,G__159622));
})();
var G__159105 = " ";
var G__159106 = (function (){var G__159623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159624 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159623,G__159624) : tailrecursion.hoplon.span.call(null,G__159623,G__159624));
})();
var G__159107 = " (";
var G__159108 = (function (){var G__159625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159626 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159625,G__159626) : tailrecursion.hoplon.span.call(null,G__159625,G__159626));
})();
var G__159109 = " ";
var G__159110 = (function (){var G__159627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159628 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159627,G__159628) : tailrecursion.hoplon.span.call(null,G__159627,G__159628));
})();
var G__159111 = " (";
var G__159112 = (function (){var G__159629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159630 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159629,G__159630) : tailrecursion.hoplon.span.call(null,G__159629,G__159630));
})();
var G__159113 = (function (){var G__159631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159632 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159631,G__159632) : tailrecursion.hoplon.span.call(null,G__159631,G__159632));
})();
var G__159114 = " ";
var G__159115 = (function (){var G__159633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159634 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159633,G__159634) : tailrecursion.hoplon.span.call(null,G__159633,G__159634));
})();
var G__159116 = ")))))))\n(";
var G__159117 = (function (){var G__159635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159636 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159635,G__159636) : tailrecursion.hoplon.span.call(null,G__159635,G__159636));
})();
var G__159118 = " ";
var G__159119 = (function (){var G__159637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159638 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159637,G__159638) : tailrecursion.hoplon.span.call(null,G__159637,G__159638));
})();
var G__159120 = " (";
var G__159121 = (function (){var G__159639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159640 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159639,G__159640) : tailrecursion.hoplon.span.call(null,G__159639,G__159640));
})();
var G__159122 = " ";
var G__159123 = (function (){var G__159641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159642 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159641,G__159642) : tailrecursion.hoplon.span.call(null,G__159641,G__159642));
})();
var G__159124 = " (";
var G__159125 = (function (){var G__159643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159644 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159643,G__159644) : tailrecursion.hoplon.span.call(null,G__159643,G__159644));
})();
var G__159126 = " ";
var G__159127 = (function (){var G__159645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159646 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159645,G__159646) : tailrecursion.hoplon.span.call(null,G__159645,G__159646));
})();
var G__159128 = " (";
var G__159129 = (function (){var G__159647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159648 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159647,G__159648) : tailrecursion.hoplon.span.call(null,G__159647,G__159648));
})();
var G__159130 = " ";
var G__159131 = (function (){var G__159649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159650 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159649,G__159650) : tailrecursion.hoplon.span.call(null,G__159649,G__159650));
})();
var G__159132 = " (";
var G__159133 = (function (){var G__159651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159652 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159651,G__159652) : tailrecursion.hoplon.span.call(null,G__159651,G__159652));
})();
var G__159134 = " ";
var G__159135 = (function (){var G__159653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159654 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159653,G__159654) : tailrecursion.hoplon.span.call(null,G__159653,G__159654));
})();
var G__159136 = " (";
var G__159137 = (function (){var G__159655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159656 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159655,G__159656) : tailrecursion.hoplon.span.call(null,G__159655,G__159656));
})();
var G__159138 = " ";
var G__159139 = (function (){var G__159657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159658 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159657,G__159658) : tailrecursion.hoplon.span.call(null,G__159657,G__159658));
})();
var G__159140 = " (";
var G__159141 = (function (){var G__159659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159660 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159659,G__159660) : tailrecursion.hoplon.span.call(null,G__159659,G__159660));
})();
var G__159142 = " ";
var G__159143 = (function (){var G__159661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159662 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159661,G__159662) : tailrecursion.hoplon.span.call(null,G__159661,G__159662));
})();
var G__159144 = " (";
var G__159145 = (function (){var G__159663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159664 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159663,G__159664) : tailrecursion.hoplon.span.call(null,G__159663,G__159664));
})();
var G__159146 = (function (){var G__159665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159666 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159665,G__159666) : tailrecursion.hoplon.span.call(null,G__159665,G__159666));
})();
var G__159147 = " ";
var G__159148 = (function (){var G__159667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159668 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159667,G__159668) : tailrecursion.hoplon.span.call(null,G__159667,G__159668));
})();
var G__159149 = "))))))))\n(";
var G__159150 = (function (){var G__159669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159670 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159669,G__159670) : tailrecursion.hoplon.span.call(null,G__159669,G__159670));
})();
var G__159151 = " ";
var G__159152 = (function (){var G__159671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159672 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159671,G__159672) : tailrecursion.hoplon.span.call(null,G__159671,G__159672));
})();
var G__159153 = " (";
var G__159154 = (function (){var G__159673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159674 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159673,G__159674) : tailrecursion.hoplon.span.call(null,G__159673,G__159674));
})();
var G__159155 = " ";
var G__159156 = (function (){var G__159675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159676 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159675,G__159676) : tailrecursion.hoplon.span.call(null,G__159675,G__159676));
})();
var G__159157 = " (";
var G__159158 = (function (){var G__159677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159678 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159677,G__159678) : tailrecursion.hoplon.span.call(null,G__159677,G__159678));
})();
var G__159159 = " ";
var G__159160 = (function (){var G__159679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159680 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159679,G__159680) : tailrecursion.hoplon.span.call(null,G__159679,G__159680));
})();
var G__159161 = " (";
var G__159162 = (function (){var G__159681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159682 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159681,G__159682) : tailrecursion.hoplon.span.call(null,G__159681,G__159682));
})();
var G__159163 = " ";
var G__159164 = (function (){var G__159683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159684 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159683,G__159684) : tailrecursion.hoplon.span.call(null,G__159683,G__159684));
})();
var G__159165 = " (";
var G__159166 = (function (){var G__159685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159686 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159685,G__159686) : tailrecursion.hoplon.span.call(null,G__159685,G__159686));
})();
var G__159167 = " ";
var G__159168 = (function (){var G__159687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159688 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159687,G__159688) : tailrecursion.hoplon.span.call(null,G__159687,G__159688));
})();
var G__159169 = " (";
var G__159170 = (function (){var G__159689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159690 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159689,G__159690) : tailrecursion.hoplon.span.call(null,G__159689,G__159690));
})();
var G__159171 = " ";
var G__159172 = (function (){var G__159691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159692 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159691,G__159692) : tailrecursion.hoplon.span.call(null,G__159691,G__159692));
})();
var G__159173 = " (";
var G__159174 = (function (){var G__159693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159694 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159693,G__159694) : tailrecursion.hoplon.span.call(null,G__159693,G__159694));
})();
var G__159175 = " ";
var G__159176 = (function (){var G__159695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159696 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159695,G__159696) : tailrecursion.hoplon.span.call(null,G__159695,G__159696));
})();
var G__159177 = " (";
var G__159178 = (function (){var G__159697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159698 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159697,G__159698) : tailrecursion.hoplon.span.call(null,G__159697,G__159698));
})();
var G__159179 = " ";
var G__159180 = (function (){var G__159699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159700 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159699,G__159700) : tailrecursion.hoplon.span.call(null,G__159699,G__159700));
})();
var G__159181 = " (";
var G__159182 = (function (){var G__159701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159702 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159701,G__159702) : tailrecursion.hoplon.span.call(null,G__159701,G__159702));
})();
var G__159183 = (function (){var G__159703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159704 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159703,G__159704) : tailrecursion.hoplon.span.call(null,G__159703,G__159704));
})();
var G__159184 = " ";
var G__159185 = (function (){var G__159705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159706 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159705,G__159706) : tailrecursion.hoplon.span.call(null,G__159705,G__159706));
})();
var G__159186 = ")))))))))\n(";
var G__159187 = (function (){var G__159707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159708 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159707,G__159708) : tailrecursion.hoplon.span.call(null,G__159707,G__159708));
})();
var G__159188 = " ";
var G__159189 = (function (){var G__159709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159710 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159709,G__159710) : tailrecursion.hoplon.span.call(null,G__159709,G__159710));
})();
var G__159190 = " (";
var G__159191 = (function (){var G__159711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159712 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159711,G__159712) : tailrecursion.hoplon.span.call(null,G__159711,G__159712));
})();
var G__159192 = " ";
var G__159193 = (function (){var G__159713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159714 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159713,G__159714) : tailrecursion.hoplon.span.call(null,G__159713,G__159714));
})();
var G__159194 = " (";
var G__159195 = (function (){var G__159715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159716 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159715,G__159716) : tailrecursion.hoplon.span.call(null,G__159715,G__159716));
})();
var G__159196 = " ";
var G__159197 = (function (){var G__159717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159718 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159717,G__159718) : tailrecursion.hoplon.span.call(null,G__159717,G__159718));
})();
var G__159198 = " (";
var G__159199 = (function (){var G__159719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159720 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159719,G__159720) : tailrecursion.hoplon.span.call(null,G__159719,G__159720));
})();
var G__159200 = " ";
var G__159201 = (function (){var G__159721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159722 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159721,G__159722) : tailrecursion.hoplon.span.call(null,G__159721,G__159722));
})();
var G__159202 = " (";
var G__159203 = (function (){var G__159723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159724 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159723,G__159724) : tailrecursion.hoplon.span.call(null,G__159723,G__159724));
})();
var G__159204 = " ";
var G__159205 = (function (){var G__159725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159726 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159725,G__159726) : tailrecursion.hoplon.span.call(null,G__159725,G__159726));
})();
var G__159206 = " (";
var G__159207 = (function (){var G__159727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159728 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159727,G__159728) : tailrecursion.hoplon.span.call(null,G__159727,G__159728));
})();
var G__159208 = " ";
var G__159209 = (function (){var G__159729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159730 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159729,G__159730) : tailrecursion.hoplon.span.call(null,G__159729,G__159730));
})();
var G__159210 = " (";
var G__159211 = (function (){var G__159731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159732 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159731,G__159732) : tailrecursion.hoplon.span.call(null,G__159731,G__159732));
})();
var G__159212 = " ";
var G__159213 = (function (){var G__159733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159734 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159733,G__159734) : tailrecursion.hoplon.span.call(null,G__159733,G__159734));
})();
var G__159214 = " (";
var G__159215 = (function (){var G__159735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159736 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159735,G__159736) : tailrecursion.hoplon.span.call(null,G__159735,G__159736));
})();
var G__159216 = " ";
var G__159217 = (function (){var G__159737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159738 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159737,G__159738) : tailrecursion.hoplon.span.call(null,G__159737,G__159738));
})();
var G__159218 = " (";
var G__159219 = (function (){var G__159739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159740 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159739,G__159740) : tailrecursion.hoplon.span.call(null,G__159739,G__159740));
})();
var G__159220 = " ";
var G__159221 = (function (){var G__159741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159742 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159741,G__159742) : tailrecursion.hoplon.span.call(null,G__159741,G__159742));
})();
var G__159222 = " (";
var G__159223 = (function (){var G__159743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159744 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159743,G__159744) : tailrecursion.hoplon.span.call(null,G__159743,G__159744));
})();
var G__159224 = (function (){var G__159745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159746 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159745,G__159746) : tailrecursion.hoplon.span.call(null,G__159745,G__159746));
})();
var G__159225 = " ";
var G__159226 = (function (){var G__159747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159748 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159747,G__159748) : tailrecursion.hoplon.span.call(null,G__159747,G__159748));
})();
var G__159227 = "))))))))))\n(";
var G__159228 = (function (){var G__159749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159750 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159749,G__159750) : tailrecursion.hoplon.span.call(null,G__159749,G__159750));
})();
var G__159229 = " ";
var G__159230 = (function (){var G__159751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159752 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159751,G__159752) : tailrecursion.hoplon.span.call(null,G__159751,G__159752));
})();
var G__159231 = " (";
var G__159232 = (function (){var G__159753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159754 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159753,G__159754) : tailrecursion.hoplon.span.call(null,G__159753,G__159754));
})();
var G__159233 = " ";
var G__159234 = (function (){var G__159755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159756 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159755,G__159756) : tailrecursion.hoplon.span.call(null,G__159755,G__159756));
})();
var G__159235 = " (";
var G__159236 = (function (){var G__159757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159758 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159757,G__159758) : tailrecursion.hoplon.span.call(null,G__159757,G__159758));
})();
var G__159237 = " ";
var G__159238 = (function (){var G__159759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159760 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159759,G__159760) : tailrecursion.hoplon.span.call(null,G__159759,G__159760));
})();
var G__159239 = " (";
var G__159240 = (function (){var G__159761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159762 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159761,G__159762) : tailrecursion.hoplon.span.call(null,G__159761,G__159762));
})();
var G__159241 = " ";
var G__159242 = (function (){var G__159763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159764 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159763,G__159764) : tailrecursion.hoplon.span.call(null,G__159763,G__159764));
})();
var G__159243 = " (";
var G__159244 = (function (){var G__159765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159766 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159765,G__159766) : tailrecursion.hoplon.span.call(null,G__159765,G__159766));
})();
var G__159245 = " ";
var G__159246 = (function (){var G__159767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159768 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159767,G__159768) : tailrecursion.hoplon.span.call(null,G__159767,G__159768));
})();
var G__159247 = " (";
var G__159248 = (function (){var G__159769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159770 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159769,G__159770) : tailrecursion.hoplon.span.call(null,G__159769,G__159770));
})();
var G__159249 = " ";
var G__159250 = (function (){var G__159771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159772 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159771,G__159772) : tailrecursion.hoplon.span.call(null,G__159771,G__159772));
})();
var G__159251 = " (";
var G__159252 = (function (){var G__159773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159774 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159773,G__159774) : tailrecursion.hoplon.span.call(null,G__159773,G__159774));
})();
var G__159253 = " ";
var G__159254 = (function (){var G__159775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159776 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159775,G__159776) : tailrecursion.hoplon.span.call(null,G__159775,G__159776));
})();
var G__159255 = " (";
var G__159256 = (function (){var G__159777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159778 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159777,G__159778) : tailrecursion.hoplon.span.call(null,G__159777,G__159778));
})();
var G__159257 = " ";
var G__159258 = (function (){var G__159779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159780 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159779,G__159780) : tailrecursion.hoplon.span.call(null,G__159779,G__159780));
})();
var G__159259 = " (";
var G__159260 = (function (){var G__159781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159782 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159781,G__159782) : tailrecursion.hoplon.span.call(null,G__159781,G__159782));
})();
var G__159261 = " ";
var G__159262 = (function (){var G__159783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159784 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159783,G__159784) : tailrecursion.hoplon.span.call(null,G__159783,G__159784));
})();
var G__159263 = " (";
var G__159264 = (function (){var G__159785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159786 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159785,G__159786) : tailrecursion.hoplon.span.call(null,G__159785,G__159786));
})();
var G__159265 = " ";
var G__159266 = (function (){var G__159787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159788 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159787,G__159788) : tailrecursion.hoplon.span.call(null,G__159787,G__159788));
})();
var G__159267 = " (";
var G__159268 = (function (){var G__159789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159790 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159789,G__159790) : tailrecursion.hoplon.span.call(null,G__159789,G__159790));
})();
var G__159269 = (function (){var G__159791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159792 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159791,G__159792) : tailrecursion.hoplon.span.call(null,G__159791,G__159792));
})();
var G__159270 = " ";
var G__159271 = (function (){var G__159793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159794 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159793,G__159794) : tailrecursion.hoplon.span.call(null,G__159793,G__159794));
})();
var G__159272 = ")))))))))))\n(";
var G__159273 = (function (){var G__159795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159796 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159795,G__159796) : tailrecursion.hoplon.span.call(null,G__159795,G__159796));
})();
var G__159274 = " ";
var G__159275 = (function (){var G__159797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159798 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159797,G__159798) : tailrecursion.hoplon.span.call(null,G__159797,G__159798));
})();
var G__159276 = " (";
var G__159277 = (function (){var G__159799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159800 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159799,G__159800) : tailrecursion.hoplon.span.call(null,G__159799,G__159800));
})();
var G__159278 = " ";
var G__159279 = (function (){var G__159801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159802 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159801,G__159802) : tailrecursion.hoplon.span.call(null,G__159801,G__159802));
})();
var G__159280 = " (";
var G__159281 = (function (){var G__159803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159804 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159803,G__159804) : tailrecursion.hoplon.span.call(null,G__159803,G__159804));
})();
var G__159282 = " ";
var G__159283 = (function (){var G__159805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159806 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159805,G__159806) : tailrecursion.hoplon.span.call(null,G__159805,G__159806));
})();
var G__159284 = " (";
var G__159285 = (function (){var G__159807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159808 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159807,G__159808) : tailrecursion.hoplon.span.call(null,G__159807,G__159808));
})();
var G__159286 = " ";
var G__159287 = (function (){var G__159809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159810 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159809,G__159810) : tailrecursion.hoplon.span.call(null,G__159809,G__159810));
})();
var G__159288 = " (";
var G__159289 = (function (){var G__159811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159812 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159811,G__159812) : tailrecursion.hoplon.span.call(null,G__159811,G__159812));
})();
var G__159290 = " ";
var G__159291 = (function (){var G__159813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159814 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159813,G__159814) : tailrecursion.hoplon.span.call(null,G__159813,G__159814));
})();
var G__159292 = " (";
var G__159293 = (function (){var G__159815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159816 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159815,G__159816) : tailrecursion.hoplon.span.call(null,G__159815,G__159816));
})();
var G__159294 = " ";
var G__159295 = (function (){var G__159817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159818 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159817,G__159818) : tailrecursion.hoplon.span.call(null,G__159817,G__159818));
})();
var G__159296 = " (";
var G__159297 = (function (){var G__159819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159820 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159819,G__159820) : tailrecursion.hoplon.span.call(null,G__159819,G__159820));
})();
var G__159298 = " ";
var G__159299 = (function (){var G__159821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159822 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159821,G__159822) : tailrecursion.hoplon.span.call(null,G__159821,G__159822));
})();
var G__159300 = " (";
var G__159301 = (function (){var G__159823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159824 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159823,G__159824) : tailrecursion.hoplon.span.call(null,G__159823,G__159824));
})();
var G__159302 = " ";
var G__159303 = (function (){var G__159825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159826 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159825,G__159826) : tailrecursion.hoplon.span.call(null,G__159825,G__159826));
})();
var G__159304 = " (";
var G__159305 = (function (){var G__159827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159828 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159827,G__159828) : tailrecursion.hoplon.span.call(null,G__159827,G__159828));
})();
var G__159306 = " ";
var G__159307 = (function (){var G__159829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159830 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159829,G__159830) : tailrecursion.hoplon.span.call(null,G__159829,G__159830));
})();
var G__159308 = " (";
var G__159309 = (function (){var G__159831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159832 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159831,G__159832) : tailrecursion.hoplon.span.call(null,G__159831,G__159832));
})();
var G__159310 = " ";
var G__159311 = (function (){var G__159833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159834 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159833,G__159834) : tailrecursion.hoplon.span.call(null,G__159833,G__159834));
})();
var G__159312 = " ";
var G__159313 = (function (){var G__159835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159836 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159835,G__159836) : tailrecursion.hoplon.span.call(null,G__159835,G__159836));
})();
var G__159314 = "))))))))))\n(";
var G__159315 = (function (){var G__159837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159838 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159837,G__159838) : tailrecursion.hoplon.span.call(null,G__159837,G__159838));
})();
var G__159316 = " ";
var G__159317 = (function (){var G__159839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159840 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159839,G__159840) : tailrecursion.hoplon.span.call(null,G__159839,G__159840));
})();
var G__159318 = " (";
var G__159319 = (function (){var G__159841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159842 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159841,G__159842) : tailrecursion.hoplon.span.call(null,G__159841,G__159842));
})();
var G__159320 = " ";
var G__159321 = (function (){var G__159843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159844 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159843,G__159844) : tailrecursion.hoplon.span.call(null,G__159843,G__159844));
})();
var G__159322 = " (";
var G__159323 = (function (){var G__159845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159846 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159845,G__159846) : tailrecursion.hoplon.span.call(null,G__159845,G__159846));
})();
var G__159324 = " ";
var G__159325 = (function (){var G__159847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159848 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159847,G__159848) : tailrecursion.hoplon.span.call(null,G__159847,G__159848));
})();
var G__159326 = " (";
var G__159327 = (function (){var G__159849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159850 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159849,G__159850) : tailrecursion.hoplon.span.call(null,G__159849,G__159850));
})();
var G__159328 = " ";
var G__159329 = (function (){var G__159851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159852 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159851,G__159852) : tailrecursion.hoplon.span.call(null,G__159851,G__159852));
})();
var G__159330 = " (";
var G__159331 = (function (){var G__159853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159854 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159853,G__159854) : tailrecursion.hoplon.span.call(null,G__159853,G__159854));
})();
var G__159332 = " ";
var G__159333 = (function (){var G__159855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159856 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159855,G__159856) : tailrecursion.hoplon.span.call(null,G__159855,G__159856));
})();
var G__159334 = " (";
var G__159335 = (function (){var G__159857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159858 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159857,G__159858) : tailrecursion.hoplon.span.call(null,G__159857,G__159858));
})();
var G__159336 = " ";
var G__159337 = (function (){var G__159859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159860 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159859,G__159860) : tailrecursion.hoplon.span.call(null,G__159859,G__159860));
})();
var G__159338 = " (";
var G__159339 = (function (){var G__159861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159862 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159861,G__159862) : tailrecursion.hoplon.span.call(null,G__159861,G__159862));
})();
var G__159340 = " ";
var G__159341 = (function (){var G__159863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159864 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159863,G__159864) : tailrecursion.hoplon.span.call(null,G__159863,G__159864));
})();
var G__159342 = " (";
var G__159343 = (function (){var G__159865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159866 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159865,G__159866) : tailrecursion.hoplon.span.call(null,G__159865,G__159866));
})();
var G__159344 = " ";
var G__159345 = (function (){var G__159867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159868 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159867,G__159868) : tailrecursion.hoplon.span.call(null,G__159867,G__159868));
})();
var G__159346 = " (";
var G__159347 = (function (){var G__159869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159870 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159869,G__159870) : tailrecursion.hoplon.span.call(null,G__159869,G__159870));
})();
var G__159348 = " ";
var G__159349 = (function (){var G__159871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159872 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159871,G__159872) : tailrecursion.hoplon.span.call(null,G__159871,G__159872));
})();
var G__159350 = " ";
var G__159351 = (function (){var G__159873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159874 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159873,G__159874) : tailrecursion.hoplon.span.call(null,G__159873,G__159874));
})();
var G__159352 = ")))))))))\n(";
var G__159353 = (function (){var G__159875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159876 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159875,G__159876) : tailrecursion.hoplon.span.call(null,G__159875,G__159876));
})();
var G__159354 = " ";
var G__159355 = (function (){var G__159877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159878 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159877,G__159878) : tailrecursion.hoplon.span.call(null,G__159877,G__159878));
})();
var G__159356 = " (";
var G__159357 = (function (){var G__159879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159880 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159879,G__159880) : tailrecursion.hoplon.span.call(null,G__159879,G__159880));
})();
var G__159358 = " ";
var G__159359 = (function (){var G__159881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159882 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159881,G__159882) : tailrecursion.hoplon.span.call(null,G__159881,G__159882));
})();
var G__159360 = " (";
var G__159361 = (function (){var G__159883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159884 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159883,G__159884) : tailrecursion.hoplon.span.call(null,G__159883,G__159884));
})();
var G__159362 = " ";
var G__159363 = (function (){var G__159885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159886 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159885,G__159886) : tailrecursion.hoplon.span.call(null,G__159885,G__159886));
})();
var G__159364 = " (";
var G__159365 = (function (){var G__159887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159888 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159887,G__159888) : tailrecursion.hoplon.span.call(null,G__159887,G__159888));
})();
var G__159366 = " ";
var G__159367 = (function (){var G__159889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159890 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159889,G__159890) : tailrecursion.hoplon.span.call(null,G__159889,G__159890));
})();
var G__159368 = " (";
var G__159369 = (function (){var G__159891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159892 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159891,G__159892) : tailrecursion.hoplon.span.call(null,G__159891,G__159892));
})();
var G__159370 = " ";
var G__159371 = (function (){var G__159893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159894 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159893,G__159894) : tailrecursion.hoplon.span.call(null,G__159893,G__159894));
})();
var G__159372 = " (";
var G__159373 = (function (){var G__159895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159896 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159895,G__159896) : tailrecursion.hoplon.span.call(null,G__159895,G__159896));
})();
var G__159374 = " ";
var G__159375 = (function (){var G__159897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159898 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159897,G__159898) : tailrecursion.hoplon.span.call(null,G__159897,G__159898));
})();
var G__159376 = " (";
var G__159377 = (function (){var G__159899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159900 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159899,G__159900) : tailrecursion.hoplon.span.call(null,G__159899,G__159900));
})();
var G__159378 = " ";
var G__159379 = (function (){var G__159901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159902 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159901,G__159902) : tailrecursion.hoplon.span.call(null,G__159901,G__159902));
})();
var G__159380 = " (";
var G__159381 = (function (){var G__159903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159904 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159903,G__159904) : tailrecursion.hoplon.span.call(null,G__159903,G__159904));
})();
var G__159382 = " ";
var G__159383 = (function (){var G__159905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159906 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159905,G__159906) : tailrecursion.hoplon.span.call(null,G__159905,G__159906));
})();
var G__159384 = " (";
var G__159385 = (function (){var G__159907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159908 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159907,G__159908) : tailrecursion.hoplon.span.call(null,G__159907,G__159908));
})();
var G__159386 = (function (){var G__159909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159910 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159909,G__159910) : tailrecursion.hoplon.span.call(null,G__159909,G__159910));
})();
var G__159387 = " ";
var G__159388 = (function (){var G__159911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159912 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159911,G__159912) : tailrecursion.hoplon.span.call(null,G__159911,G__159912));
})();
var G__159389 = ")))))))))\n(";
var G__159390 = (function (){var G__159913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159914 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159913,G__159914) : tailrecursion.hoplon.span.call(null,G__159913,G__159914));
})();
var G__159391 = " ";
var G__159392 = (function (){var G__159915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159916 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159915,G__159916) : tailrecursion.hoplon.span.call(null,G__159915,G__159916));
})();
var G__159393 = " (";
var G__159394 = (function (){var G__159917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159918 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159917,G__159918) : tailrecursion.hoplon.span.call(null,G__159917,G__159918));
})();
var G__159395 = " ";
var G__159396 = (function (){var G__159919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159920 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159919,G__159920) : tailrecursion.hoplon.span.call(null,G__159919,G__159920));
})();
var G__159397 = " (";
var G__159398 = (function (){var G__159921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159922 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159921,G__159922) : tailrecursion.hoplon.span.call(null,G__159921,G__159922));
})();
var G__159399 = " ";
var G__159400 = (function (){var G__159923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159924 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159923,G__159924) : tailrecursion.hoplon.span.call(null,G__159923,G__159924));
})();
var G__159401 = " (";
var G__159402 = (function (){var G__159925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159926 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159925,G__159926) : tailrecursion.hoplon.span.call(null,G__159925,G__159926));
})();
var G__159403 = " ";
var G__159404 = (function (){var G__159927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159928 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159927,G__159928) : tailrecursion.hoplon.span.call(null,G__159927,G__159928));
})();
var G__159405 = " (";
var G__159406 = (function (){var G__159929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159930 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159929,G__159930) : tailrecursion.hoplon.span.call(null,G__159929,G__159930));
})();
var G__159407 = " ";
var G__159408 = (function (){var G__159931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159932 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159931,G__159932) : tailrecursion.hoplon.span.call(null,G__159931,G__159932));
})();
var G__159409 = " (";
var G__159410 = (function (){var G__159933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159934 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159933,G__159934) : tailrecursion.hoplon.span.call(null,G__159933,G__159934));
})();
var G__159411 = " ";
var G__159412 = (function (){var G__159935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159936 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159935,G__159936) : tailrecursion.hoplon.span.call(null,G__159935,G__159936));
})();
var G__159413 = " (";
var G__159414 = (function (){var G__159937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159938 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159937,G__159938) : tailrecursion.hoplon.span.call(null,G__159937,G__159938));
})();
var G__159415 = " ";
var G__159416 = (function (){var G__159939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159940 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159939,G__159940) : tailrecursion.hoplon.span.call(null,G__159939,G__159940));
})();
var G__159417 = " (";
var G__159418 = (function (){var G__159941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159942 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159941,G__159942) : tailrecursion.hoplon.span.call(null,G__159941,G__159942));
})();
var G__159419 = " ";
var G__159420 = (function (){var G__159943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159944 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159943,G__159944) : tailrecursion.hoplon.span.call(null,G__159943,G__159944));
})();
var G__159421 = " ";
var G__159422 = (function (){var G__159945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159946 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159945,G__159946) : tailrecursion.hoplon.span.call(null,G__159945,G__159946));
})();
var G__159423 = "))))))))\n(";
var G__159424 = (function (){var G__159947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159948 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159947,G__159948) : tailrecursion.hoplon.span.call(null,G__159947,G__159948));
})();
var G__159425 = " ";
var G__159426 = (function (){var G__159949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159950 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159949,G__159950) : tailrecursion.hoplon.span.call(null,G__159949,G__159950));
})();
var G__159427 = " (";
var G__159428 = (function (){var G__159951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159952 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159951,G__159952) : tailrecursion.hoplon.span.call(null,G__159951,G__159952));
})();
var G__159429 = " ";
var G__159430 = (function (){var G__159953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159954 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159953,G__159954) : tailrecursion.hoplon.span.call(null,G__159953,G__159954));
})();
var G__159431 = " (";
var G__159432 = (function (){var G__159955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159956 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159955,G__159956) : tailrecursion.hoplon.span.call(null,G__159955,G__159956));
})();
var G__159433 = " ";
var G__159434 = (function (){var G__159957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159958 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159957,G__159958) : tailrecursion.hoplon.span.call(null,G__159957,G__159958));
})();
var G__159435 = " (";
var G__159436 = (function (){var G__159959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159960 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159959,G__159960) : tailrecursion.hoplon.span.call(null,G__159959,G__159960));
})();
var G__159437 = " ";
var G__159438 = (function (){var G__159961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159962 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159961,G__159962) : tailrecursion.hoplon.span.call(null,G__159961,G__159962));
})();
var G__159439 = " (";
var G__159440 = (function (){var G__159963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159964 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159963,G__159964) : tailrecursion.hoplon.span.call(null,G__159963,G__159964));
})();
var G__159441 = " ";
var G__159442 = (function (){var G__159965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159966 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159965,G__159966) : tailrecursion.hoplon.span.call(null,G__159965,G__159966));
})();
var G__159443 = " (";
var G__159444 = (function (){var G__159967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159968 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159967,G__159968) : tailrecursion.hoplon.span.call(null,G__159967,G__159968));
})();
var G__159445 = " ";
var G__159446 = (function (){var G__159969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159970 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159969,G__159970) : tailrecursion.hoplon.span.call(null,G__159969,G__159970));
})();
var G__159447 = " (";
var G__159448 = (function (){var G__159971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159972 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159971,G__159972) : tailrecursion.hoplon.span.call(null,G__159971,G__159972));
})();
var G__159449 = " ";
var G__159450 = (function (){var G__159973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159974 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159973,G__159974) : tailrecursion.hoplon.span.call(null,G__159973,G__159974));
})();
var G__159451 = " (";
var G__159452 = (function (){var G__159975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__159976 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159975,G__159976) : tailrecursion.hoplon.span.call(null,G__159975,G__159976));
})();
var G__159453 = (function (){var G__159977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159978 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159977,G__159978) : tailrecursion.hoplon.span.call(null,G__159977,G__159978));
})();
var G__159454 = " ";
var G__159455 = (function (){var G__159979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159980 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159979,G__159980) : tailrecursion.hoplon.span.call(null,G__159979,G__159980));
})();
var G__159456 = "))))))))\n(";
var G__159457 = (function (){var G__159981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159982 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159981,G__159982) : tailrecursion.hoplon.span.call(null,G__159981,G__159982));
})();
var G__159458 = " ";
var G__159459 = (function (){var G__159983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159984 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159983,G__159984) : tailrecursion.hoplon.span.call(null,G__159983,G__159984));
})();
var G__159460 = " (";
var G__159461 = (function (){var G__159985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159986 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159985,G__159986) : tailrecursion.hoplon.span.call(null,G__159985,G__159986));
})();
var G__159462 = " ";
var G__159463 = (function (){var G__159987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159988 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159987,G__159988) : tailrecursion.hoplon.span.call(null,G__159987,G__159988));
})();
var G__159464 = " (";
var G__159465 = (function (){var G__159989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159990 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159989,G__159990) : tailrecursion.hoplon.span.call(null,G__159989,G__159990));
})();
var G__159466 = " ";
var G__159467 = (function (){var G__159991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159992 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159991,G__159992) : tailrecursion.hoplon.span.call(null,G__159991,G__159992));
})();
var G__159468 = " (";
var G__159469 = (function (){var G__159993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159994 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159993,G__159994) : tailrecursion.hoplon.span.call(null,G__159993,G__159994));
})();
var G__159470 = " ";
var G__159471 = (function (){var G__159995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__159996 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159995,G__159996) : tailrecursion.hoplon.span.call(null,G__159995,G__159996));
})();
var G__159472 = " (";
var G__159473 = (function (){var G__159997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__159998 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159997,G__159998) : tailrecursion.hoplon.span.call(null,G__159997,G__159998));
})();
var G__159474 = " ";
var G__159475 = (function (){var G__159999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160000 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__159999,G__160000) : tailrecursion.hoplon.span.call(null,G__159999,G__160000));
})();
var G__159476 = " (";
var G__159477 = (function (){var G__160001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160002 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160001,G__160002) : tailrecursion.hoplon.span.call(null,G__160001,G__160002));
})();
var G__159478 = " ";
var G__159479 = (function (){var G__160003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160004 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160003,G__160004) : tailrecursion.hoplon.span.call(null,G__160003,G__160004));
})();
var G__159480 = " (";
var G__159481 = (function (){var G__160005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160006 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160005,G__160006) : tailrecursion.hoplon.span.call(null,G__160005,G__160006));
})();
var G__159482 = " ";
var G__159483 = (function (){var G__160007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160008 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160007,G__160008) : tailrecursion.hoplon.span.call(null,G__160007,G__160008));
})();
var G__159484 = " ";
var G__159485 = (function (){var G__160009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160010 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160009,G__160010) : tailrecursion.hoplon.span.call(null,G__160009,G__160010));
})();
var G__159486 = ")))))))\n";
var G__159487 = (function (){var G__160011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160012 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160011,G__160012) : tailrecursion.hoplon.span.call(null,G__160011,G__160012));
})();
var G__159488 = "\n";
var G__159489 = (function (){var G__160013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160014 = "1024";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160013,G__160014) : tailrecursion.hoplon.span.call(null,G__160013,G__160014));
})();
var G__159490 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514(G__158977,G__158978,G__158979,G__158980,G__158981,G__158982,G__158983,G__158984,G__158985,G__158986,G__158987,G__158988,G__158989,G__158990,G__158991,G__158992,G__158993,G__158994,G__158995,G__158996,G__158997,G__158998,G__158999,G__159000,G__159001,G__159002,G__159003,G__159004,G__159005,G__159006,G__159007,G__159008,G__159009,G__159010,G__159011,G__159012,G__159013,G__159014,G__159015,G__159016,G__159017,G__159018,G__159019,G__159020,G__159021,G__159022,G__159023,G__159024,G__159025,G__159026,G__159027,G__159028,G__159029,G__159030,G__159031,G__159032,G__159033,G__159034,G__159035,G__159036,G__159037,G__159038,G__159039,G__159040,G__159041,G__159042,G__159043,G__159044,G__159045,G__159046,G__159047,G__159048,G__159049,G__159050,G__159051,G__159052,G__159053,G__159054,G__159055,G__159056,G__159057,G__159058,G__159059,G__159060,G__159061,G__159062,G__159063,G__159064,G__159065,G__159066,G__159067,G__159068,G__159069,G__159070,G__159071,G__159072,G__159073,G__159074,G__159075,G__159076,G__159077,G__159078,G__159079,G__159080,G__159081,G__159082,G__159083,G__159084,G__159085,G__159086,G__159087,G__159088,G__159089,G__159090,G__159091,G__159092,G__159093,G__159094,G__159095,G__159096,G__159097,G__159098,G__159099,G__159100,G__159101,G__159102,G__159103,G__159104,G__159105,G__159106,G__159107,G__159108,G__159109,G__159110,G__159111,G__159112,G__159113,G__159114,G__159115,G__159116,G__159117,G__159118,G__159119,G__159120,G__159121,G__159122,G__159123,G__159124,G__159125,G__159126,G__159127,G__159128,G__159129,G__159130,G__159131,G__159132,G__159133,G__159134,G__159135,G__159136,G__159137,G__159138,G__159139,G__159140,G__159141,G__159142,G__159143,G__159144,G__159145,G__159146,G__159147,G__159148,G__159149,G__159150,G__159151,G__159152,G__159153,G__159154,G__159155,G__159156,G__159157,G__159158,G__159159,G__159160,G__159161,G__159162,G__159163,G__159164,G__159165,G__159166,G__159167,G__159168,G__159169,G__159170,G__159171,G__159172,G__159173,G__159174,G__159175,G__159176,G__159177,G__159178,G__159179,G__159180,G__159181,G__159182,G__159183,G__159184,G__159185,G__159186,G__159187,G__159188,G__159189,G__159190,G__159191,G__159192,G__159193,G__159194,G__159195,G__159196,G__159197,G__159198,G__159199,G__159200,G__159201,G__159202,G__159203,G__159204,G__159205,G__159206,G__159207,G__159208,G__159209,G__159210,G__159211,G__159212,G__159213,G__159214,G__159215,G__159216,G__159217,G__159218,G__159219,G__159220,G__159221,G__159222,G__159223,G__159224,G__159225,G__159226,G__159227,G__159228,G__159229,G__159230,G__159231,G__159232,G__159233,G__159234,G__159235,G__159236,G__159237,G__159238,G__159239,G__159240,G__159241,G__159242,G__159243,G__159244,G__159245,G__159246,G__159247,G__159248,G__159249,G__159250,G__159251,G__159252,G__159253,G__159254,G__159255,G__159256,G__159257,G__159258,G__159259,G__159260,G__159261,G__159262,G__159263,G__159264,G__159265,G__159266,G__159267,G__159268,G__159269,G__159270,G__159271,G__159272,G__159273,G__159274,G__159275,G__159276,G__159277,G__159278,G__159279,G__159280,G__159281,G__159282,G__159283,G__159284,G__159285,G__159286,G__159287,G__159288,G__159289,G__159290,G__159291,G__159292,G__159293,G__159294,G__159295,G__159296,G__159297,G__159298,G__159299,G__159300,G__159301,G__159302,G__159303,G__159304,G__159305,G__159306,G__159307,G__159308,G__159309,G__159310,G__159311,G__159312,G__159313,G__159314,G__159315,G__159316,G__159317,G__159318,G__159319,G__159320,G__159321,G__159322,G__159323,G__159324,G__159325,G__159326,G__159327,G__159328,G__159329,G__159330,G__159331,G__159332,G__159333,G__159334,G__159335,G__159336,G__159337,G__159338,G__159339,G__159340,G__159341,G__159342,G__159343,G__159344,G__159345,G__159346,G__159347,G__159348,G__159349,G__159350,G__159351,G__159352,G__159353,G__159354,G__159355,G__159356,G__159357,G__159358,G__159359,G__159360,G__159361,G__159362,G__159363,G__159364,G__159365,G__159366,G__159367,G__159368,G__159369,G__159370,G__159371,G__159372,G__159373,G__159374,G__159375,G__159376,G__159377,G__159378,G__159379,G__159380,G__159381,G__159382,G__159383,G__159384,G__159385,G__159386,G__159387,G__159388,G__159389,G__159390,G__159391,G__159392,G__159393,G__159394,G__159395,G__159396,G__159397,G__159398,G__159399,G__159400,G__159401,G__159402,G__159403,G__159404,G__159405,G__159406,G__159407,G__159408,G__159409,G__159410,G__159411,G__159412,G__159413,G__159414,G__159415,G__159416,G__159417,G__159418,G__159419,G__159420,G__159421,G__159422,G__159423,G__159424,G__159425,G__159426,G__159427,G__159428,G__159429,G__159430,G__159431,G__159432,G__159433,G__159434,G__159435,G__159436,G__159437,G__159438,G__159439,G__159440,G__159441,G__159442,G__159443,G__159444,G__159445,G__159446,G__159447,G__159448,G__159449,G__159450,G__159451,G__159452,G__159453,G__159454,G__159455,G__159456,G__159457,G__159458,G__159459,G__159460,G__159461,G__159462,G__159463,G__159464,G__159465,G__159466,G__159467,G__159468,G__159469,G__159470,G__159471,G__159472,G__159473,G__159474,G__159475,G__159476,G__159477,G__159478,G__159479,G__159480,G__159481,G__159482,G__159483,G__159484,G__159485,G__159486,G__159487,G__159488,G__159489,G__159490) : tailrecursion.hoplon.pre.call(null,G__158977,G__158978,G__158979,G__158980,G__158981,G__158982,G__158983,G__158984,G__158985,G__158986,G__158987,G__158988,G__158989,G__158990,G__158991,G__158992,G__158993,G__158994,G__158995,G__158996,G__158997,G__158998,G__158999,G__159000,G__159001,G__159002,G__159003,G__159004,G__159005,G__159006,G__159007,G__159008,G__159009,G__159010,G__159011,G__159012,G__159013,G__159014,G__159015,G__159016,G__159017,G__159018,G__159019,G__159020,G__159021,G__159022,G__159023,G__159024,G__159025,G__159026,G__159027,G__159028,G__159029,G__159030,G__159031,G__159032,G__159033,G__159034,G__159035,G__159036,G__159037,G__159038,G__159039,G__159040,G__159041,G__159042,G__159043,G__159044,G__159045,G__159046,G__159047,G__159048,G__159049,G__159050,G__159051,G__159052,G__159053,G__159054,G__159055,G__159056,G__159057,G__159058,G__159059,G__159060,G__159061,G__159062,G__159063,G__159064,G__159065,G__159066,G__159067,G__159068,G__159069,G__159070,G__159071,G__159072,G__159073,G__159074,G__159075,G__159076,G__159077,G__159078,G__159079,G__159080,G__159081,G__159082,G__159083,G__159084,G__159085,G__159086,G__159087,G__159088,G__159089,G__159090,G__159091,G__159092,G__159093,G__159094,G__159095,G__159096,G__159097,G__159098,G__159099,G__159100,G__159101,G__159102,G__159103,G__159104,G__159105,G__159106,G__159107,G__159108,G__159109,G__159110,G__159111,G__159112,G__159113,G__159114,G__159115,G__159116,G__159117,G__159118,G__159119,G__159120,G__159121,G__159122,G__159123,G__159124,G__159125,G__159126,G__159127,G__159128,G__159129,G__159130,G__159131,G__159132,G__159133,G__159134,G__159135,G__159136,G__159137,G__159138,G__159139,G__159140,G__159141,G__159142,G__159143,G__159144,G__159145,G__159146,G__159147,G__159148,G__159149,G__159150,G__159151,G__159152,G__159153,G__159154,G__159155,G__159156,G__159157,G__159158,G__159159,G__159160,G__159161,G__159162,G__159163,G__159164,G__159165,G__159166,G__159167,G__159168,G__159169,G__159170,G__159171,G__159172,G__159173,G__159174,G__159175,G__159176,G__159177,G__159178,G__159179,G__159180,G__159181,G__159182,G__159183,G__159184,G__159185,G__159186,G__159187,G__159188,G__159189,G__159190,G__159191,G__159192,G__159193,G__159194,G__159195,G__159196,G__159197,G__159198,G__159199,G__159200,G__159201,G__159202,G__159203,G__159204,G__159205,G__159206,G__159207,G__159208,G__159209,G__159210,G__159211,G__159212,G__159213,G__159214,G__159215,G__159216,G__159217,G__159218,G__159219,G__159220,G__159221,G__159222,G__159223,G__159224,G__159225,G__159226,G__159227,G__159228,G__159229,G__159230,G__159231,G__159232,G__159233,G__159234,G__159235,G__159236,G__159237,G__159238,G__159239,G__159240,G__159241,G__159242,G__159243,G__159244,G__159245,G__159246,G__159247,G__159248,G__159249,G__159250,G__159251,G__159252,G__159253,G__159254,G__159255,G__159256,G__159257,G__159258,G__159259,G__159260,G__159261,G__159262,G__159263,G__159264,G__159265,G__159266,G__159267,G__159268,G__159269,G__159270,G__159271,G__159272,G__159273,G__159274,G__159275,G__159276,G__159277,G__159278,G__159279,G__159280,G__159281,G__159282,G__159283,G__159284,G__159285,G__159286,G__159287,G__159288,G__159289,G__159290,G__159291,G__159292,G__159293,G__159294,G__159295,G__159296,G__159297,G__159298,G__159299,G__159300,G__159301,G__159302,G__159303,G__159304,G__159305,G__159306,G__159307,G__159308,G__159309,G__159310,G__159311,G__159312,G__159313,G__159314,G__159315,G__159316,G__159317,G__159318,G__159319,G__159320,G__159321,G__159322,G__159323,G__159324,G__159325,G__159326,G__159327,G__159328,G__159329,G__159330,G__159331,G__159332,G__159333,G__159334,G__159335,G__159336,G__159337,G__159338,G__159339,G__159340,G__159341,G__159342,G__159343,G__159344,G__159345,G__159346,G__159347,G__159348,G__159349,G__159350,G__159351,G__159352,G__159353,G__159354,G__159355,G__159356,G__159357,G__159358,G__159359,G__159360,G__159361,G__159362,G__159363,G__159364,G__159365,G__159366,G__159367,G__159368,G__159369,G__159370,G__159371,G__159372,G__159373,G__159374,G__159375,G__159376,G__159377,G__159378,G__159379,G__159380,G__159381,G__159382,G__159383,G__159384,G__159385,G__159386,G__159387,G__159388,G__159389,G__159390,G__159391,G__159392,G__159393,G__159394,G__159395,G__159396,G__159397,G__159398,G__159399,G__159400,G__159401,G__159402,G__159403,G__159404,G__159405,G__159406,G__159407,G__159408,G__159409,G__159410,G__159411,G__159412,G__159413,G__159414,G__159415,G__159416,G__159417,G__159418,G__159419,G__159420,G__159421,G__159422,G__159423,G__159424,G__159425,G__159426,G__159427,G__159428,G__159429,G__159430,G__159431,G__159432,G__159433,G__159434,G__159435,G__159436,G__159437,G__159438,G__159439,G__159440,G__159441,G__159442,G__159443,G__159444,G__159445,G__159446,G__159447,G__159448,G__159449,G__159450,G__159451,G__159452,G__159453,G__159454,G__159455,G__159456,G__159457,G__159458,G__159459,G__159460,G__159461,G__159462,G__159463,G__159464,G__159465,G__159466,G__159467,G__159468,G__159469,G__159470,G__159471,G__159472,G__159473,G__159474,G__159475,G__159476,G__159477,G__159478,G__159479,G__159480,G__159481,G__159482,G__159483,G__159484,G__159485,G__159486,G__159487,G__159488,G__159489,G__159490));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__158975,G__158976) : tailrecursion.hoplon.div.call(null,G__158975,G__158976));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__158974) : tailrecursion.hoplon.div.call(null,G__158974));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158973;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158972;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_158971;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_158970;
}})()], 0)),"",(function (){var _STAR_references_STAR_160015 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160016 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160017 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160018 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160019 = (function (){var G__160020 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160021 = (function (){var G__160022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160023 = "(";
var G__160024 = (function (){var G__160030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160031 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160030,G__160031) : tailrecursion.hoplon.span.call(null,G__160030,G__160031));
})();
var G__160025 = " ";
var G__160026 = (function (){var G__160032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160033 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160032,G__160033) : tailrecursion.hoplon.span.call(null,G__160032,G__160033));
})();
var G__160027 = " ";
var G__160028 = (function (){var G__160034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160035 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160034,G__160035) : tailrecursion.hoplon.span.call(null,G__160034,G__160035));
})();
var G__160029 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__160022,G__160023,G__160024,G__160025,G__160026,G__160027,G__160028,G__160029) : tailrecursion.hoplon.pre.call(null,G__160022,G__160023,G__160024,G__160025,G__160026,G__160027,G__160028,G__160029));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160020,G__160021) : tailrecursion.hoplon.div.call(null,G__160020,G__160021));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160019) : tailrecursion.hoplon.div.call(null,G__160019));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160018;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160017;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160016;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160015;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160036 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160037 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160038 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160039 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160040 = (function (){var G__160041 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160042 = (function (){var G__160043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160044 = "(";
var G__160045 = (function (){var G__160365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160366 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160365,G__160366) : tailrecursion.hoplon.span.call(null,G__160365,G__160366));
})();
var G__160046 = " ";
var G__160047 = (function (){var G__160367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160368 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160367,G__160368) : tailrecursion.hoplon.span.call(null,G__160367,G__160368));
})();
var G__160048 = " ";
var G__160049 = (function (){var G__160369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160370 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160369,G__160370) : tailrecursion.hoplon.span.call(null,G__160369,G__160370));
})();
var G__160050 = ")\n(";
var G__160051 = (function (){var G__160371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160372 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160371,G__160372) : tailrecursion.hoplon.span.call(null,G__160371,G__160372));
})();
var G__160052 = " (";
var G__160053 = (function (){var G__160373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160374 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160373,G__160374) : tailrecursion.hoplon.span.call(null,G__160373,G__160374));
})();
var G__160054 = (function (){var G__160375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160376 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160375,G__160376) : tailrecursion.hoplon.span.call(null,G__160375,G__160376));
})();
var G__160055 = " ";
var G__160056 = (function (){var G__160377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160378 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160377,G__160378) : tailrecursion.hoplon.span.call(null,G__160377,G__160378));
})();
var G__160057 = ") (";
var G__160058 = (function (){var G__160379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160380 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160379,G__160380) : tailrecursion.hoplon.span.call(null,G__160379,G__160380));
})();
var G__160059 = " ";
var G__160060 = (function (){var G__160381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160382 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160381,G__160382) : tailrecursion.hoplon.span.call(null,G__160381,G__160382));
})();
var G__160061 = " (";
var G__160062 = (function (){var G__160383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160384 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160383,G__160384) : tailrecursion.hoplon.span.call(null,G__160383,G__160384));
})();
var G__160063 = (function (){var G__160385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160386 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160385,G__160386) : tailrecursion.hoplon.span.call(null,G__160385,G__160386));
})();
var G__160064 = " ";
var G__160065 = (function (){var G__160387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160388 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160387,G__160388) : tailrecursion.hoplon.span.call(null,G__160387,G__160388));
})();
var G__160066 = ")))\n(";
var G__160067 = (function (){var G__160389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160390 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160389,G__160390) : tailrecursion.hoplon.span.call(null,G__160389,G__160390));
})();
var G__160068 = " ";
var G__160069 = (function (){var G__160391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160392 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160391,G__160392) : tailrecursion.hoplon.span.call(null,G__160391,G__160392));
})();
var G__160070 = " (";
var G__160071 = (function (){var G__160393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160394 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160393,G__160394) : tailrecursion.hoplon.span.call(null,G__160393,G__160394));
})();
var G__160072 = " ";
var G__160073 = (function (){var G__160395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160396 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160395,G__160396) : tailrecursion.hoplon.span.call(null,G__160395,G__160396));
})();
var G__160074 = " ";
var G__160075 = (function (){var G__160397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160398 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160397,G__160398) : tailrecursion.hoplon.span.call(null,G__160397,G__160398));
})();
var G__160076 = "))\n(";
var G__160077 = (function (){var G__160399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160400 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160399,G__160400) : tailrecursion.hoplon.span.call(null,G__160399,G__160400));
})();
var G__160078 = " ";
var G__160079 = (function (){var G__160401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160402 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160401,G__160402) : tailrecursion.hoplon.span.call(null,G__160401,G__160402));
})();
var G__160080 = " (";
var G__160081 = (function (){var G__160403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160404 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160403,G__160404) : tailrecursion.hoplon.span.call(null,G__160403,G__160404));
})();
var G__160082 = " (";
var G__160083 = (function (){var G__160405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160406 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160405,G__160406) : tailrecursion.hoplon.span.call(null,G__160405,G__160406));
})();
var G__160084 = (function (){var G__160407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160408 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160407,G__160408) : tailrecursion.hoplon.span.call(null,G__160407,G__160408));
})();
var G__160085 = " ";
var G__160086 = (function (){var G__160409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160410 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160409,G__160410) : tailrecursion.hoplon.span.call(null,G__160409,G__160410));
})();
var G__160087 = ") (";
var G__160088 = (function (){var G__160411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160412 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160411,G__160412) : tailrecursion.hoplon.span.call(null,G__160411,G__160412));
})();
var G__160089 = " ";
var G__160090 = (function (){var G__160413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160414 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160413,G__160414) : tailrecursion.hoplon.span.call(null,G__160413,G__160414));
})();
var G__160091 = " (";
var G__160092 = (function (){var G__160415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160416 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160415,G__160416) : tailrecursion.hoplon.span.call(null,G__160415,G__160416));
})();
var G__160093 = (function (){var G__160417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160418 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160417,G__160418) : tailrecursion.hoplon.span.call(null,G__160417,G__160418));
})();
var G__160094 = " ";
var G__160095 = (function (){var G__160419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160420 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160419,G__160420) : tailrecursion.hoplon.span.call(null,G__160419,G__160420));
})();
var G__160096 = "))))\n(";
var G__160097 = (function (){var G__160421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160422 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160421,G__160422) : tailrecursion.hoplon.span.call(null,G__160421,G__160422));
})();
var G__160098 = " ";
var G__160099 = (function (){var G__160423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160424 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160423,G__160424) : tailrecursion.hoplon.span.call(null,G__160423,G__160424));
})();
var G__160100 = " (";
var G__160101 = (function (){var G__160425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160426 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160425,G__160426) : tailrecursion.hoplon.span.call(null,G__160425,G__160426));
})();
var G__160102 = " ";
var G__160103 = (function (){var G__160427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160428 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160427,G__160428) : tailrecursion.hoplon.span.call(null,G__160427,G__160428));
})();
var G__160104 = " (";
var G__160105 = (function (){var G__160429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160430 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160429,G__160430) : tailrecursion.hoplon.span.call(null,G__160429,G__160430));
})();
var G__160106 = " ";
var G__160107 = (function (){var G__160431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160432 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160431,G__160432) : tailrecursion.hoplon.span.call(null,G__160431,G__160432));
})();
var G__160108 = " ";
var G__160109 = (function (){var G__160433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160434 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160433,G__160434) : tailrecursion.hoplon.span.call(null,G__160433,G__160434));
})();
var G__160110 = ")))\n(";
var G__160111 = (function (){var G__160435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160436 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160435,G__160436) : tailrecursion.hoplon.span.call(null,G__160435,G__160436));
})();
var G__160112 = " ";
var G__160113 = (function (){var G__160437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160438 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160437,G__160438) : tailrecursion.hoplon.span.call(null,G__160437,G__160438));
})();
var G__160114 = " (";
var G__160115 = (function (){var G__160439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160440 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160439,G__160440) : tailrecursion.hoplon.span.call(null,G__160439,G__160440));
})();
var G__160116 = " ";
var G__160117 = (function (){var G__160441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160442 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160441,G__160442) : tailrecursion.hoplon.span.call(null,G__160441,G__160442));
})();
var G__160118 = " (";
var G__160119 = (function (){var G__160443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160444 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160443,G__160444) : tailrecursion.hoplon.span.call(null,G__160443,G__160444));
})();
var G__160120 = " (";
var G__160121 = (function (){var G__160445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160446 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160445,G__160446) : tailrecursion.hoplon.span.call(null,G__160445,G__160446));
})();
var G__160122 = (function (){var G__160447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160448 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160447,G__160448) : tailrecursion.hoplon.span.call(null,G__160447,G__160448));
})();
var G__160123 = " ";
var G__160124 = (function (){var G__160449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160450 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160449,G__160450) : tailrecursion.hoplon.span.call(null,G__160449,G__160450));
})();
var G__160125 = ") (";
var G__160126 = (function (){var G__160451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160452 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160451,G__160452) : tailrecursion.hoplon.span.call(null,G__160451,G__160452));
})();
var G__160127 = " ";
var G__160128 = (function (){var G__160453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160454 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160453,G__160454) : tailrecursion.hoplon.span.call(null,G__160453,G__160454));
})();
var G__160129 = " (";
var G__160130 = (function (){var G__160455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160456 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160455,G__160456) : tailrecursion.hoplon.span.call(null,G__160455,G__160456));
})();
var G__160131 = (function (){var G__160457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160458 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160457,G__160458) : tailrecursion.hoplon.span.call(null,G__160457,G__160458));
})();
var G__160132 = " ";
var G__160133 = (function (){var G__160459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160460 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160459,G__160460) : tailrecursion.hoplon.span.call(null,G__160459,G__160460));
})();
var G__160134 = ")))))\n(";
var G__160135 = (function (){var G__160461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160462 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160461,G__160462) : tailrecursion.hoplon.span.call(null,G__160461,G__160462));
})();
var G__160136 = " ";
var G__160137 = (function (){var G__160463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160464 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160463,G__160464) : tailrecursion.hoplon.span.call(null,G__160463,G__160464));
})();
var G__160138 = " (";
var G__160139 = (function (){var G__160465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160466 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160465,G__160466) : tailrecursion.hoplon.span.call(null,G__160465,G__160466));
})();
var G__160140 = " ";
var G__160141 = (function (){var G__160467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160468 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160467,G__160468) : tailrecursion.hoplon.span.call(null,G__160467,G__160468));
})();
var G__160142 = " (";
var G__160143 = (function (){var G__160469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160470 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160469,G__160470) : tailrecursion.hoplon.span.call(null,G__160469,G__160470));
})();
var G__160144 = " ";
var G__160145 = (function (){var G__160471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160472 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160471,G__160472) : tailrecursion.hoplon.span.call(null,G__160471,G__160472));
})();
var G__160146 = " (";
var G__160147 = (function (){var G__160473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160474 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160473,G__160474) : tailrecursion.hoplon.span.call(null,G__160473,G__160474));
})();
var G__160148 = " ";
var G__160149 = (function (){var G__160475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160476 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160475,G__160476) : tailrecursion.hoplon.span.call(null,G__160475,G__160476));
})();
var G__160150 = " ";
var G__160151 = (function (){var G__160477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160478 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160477,G__160478) : tailrecursion.hoplon.span.call(null,G__160477,G__160478));
})();
var G__160152 = "))))\n(";
var G__160153 = (function (){var G__160479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160480 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160479,G__160480) : tailrecursion.hoplon.span.call(null,G__160479,G__160480));
})();
var G__160154 = " ";
var G__160155 = (function (){var G__160481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160482 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160481,G__160482) : tailrecursion.hoplon.span.call(null,G__160481,G__160482));
})();
var G__160156 = " (";
var G__160157 = (function (){var G__160483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160484 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160483,G__160484) : tailrecursion.hoplon.span.call(null,G__160483,G__160484));
})();
var G__160158 = " ";
var G__160159 = (function (){var G__160485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160486 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160485,G__160486) : tailrecursion.hoplon.span.call(null,G__160485,G__160486));
})();
var G__160160 = " (";
var G__160161 = (function (){var G__160487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160488 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160487,G__160488) : tailrecursion.hoplon.span.call(null,G__160487,G__160488));
})();
var G__160162 = " ";
var G__160163 = (function (){var G__160489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160490 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160489,G__160490) : tailrecursion.hoplon.span.call(null,G__160489,G__160490));
})();
var G__160164 = " ";
var G__160165 = (function (){var G__160491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160492 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160491,G__160492) : tailrecursion.hoplon.span.call(null,G__160491,G__160492));
})();
var G__160166 = ")))\n(";
var G__160167 = (function (){var G__160493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160494 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160493,G__160494) : tailrecursion.hoplon.span.call(null,G__160493,G__160494));
})();
var G__160168 = " ";
var G__160169 = (function (){var G__160495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160496 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160495,G__160496) : tailrecursion.hoplon.span.call(null,G__160495,G__160496));
})();
var G__160170 = " (";
var G__160171 = (function (){var G__160497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160498 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160497,G__160498) : tailrecursion.hoplon.span.call(null,G__160497,G__160498));
})();
var G__160172 = " ";
var G__160173 = (function (){var G__160499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160500 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160499,G__160500) : tailrecursion.hoplon.span.call(null,G__160499,G__160500));
})();
var G__160174 = " (";
var G__160175 = (function (){var G__160501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160502 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160501,G__160502) : tailrecursion.hoplon.span.call(null,G__160501,G__160502));
})();
var G__160176 = " (";
var G__160177 = (function (){var G__160503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160504 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160503,G__160504) : tailrecursion.hoplon.span.call(null,G__160503,G__160504));
})();
var G__160178 = (function (){var G__160505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160506 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160505,G__160506) : tailrecursion.hoplon.span.call(null,G__160505,G__160506));
})();
var G__160179 = " ";
var G__160180 = (function (){var G__160507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160508 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160507,G__160508) : tailrecursion.hoplon.span.call(null,G__160507,G__160508));
})();
var G__160181 = ") (";
var G__160182 = (function (){var G__160509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160510 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160509,G__160510) : tailrecursion.hoplon.span.call(null,G__160509,G__160510));
})();
var G__160183 = " ";
var G__160184 = (function (){var G__160511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160512 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160511,G__160512) : tailrecursion.hoplon.span.call(null,G__160511,G__160512));
})();
var G__160185 = " (";
var G__160186 = (function (){var G__160513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__160514 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160513,G__160514) : tailrecursion.hoplon.span.call(null,G__160513,G__160514));
})();
var G__160187 = (function (){var G__160515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160516 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160515,G__160516) : tailrecursion.hoplon.span.call(null,G__160515,G__160516));
})();
var G__160188 = " ";
var G__160189 = (function (){var G__160517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160518 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160517,G__160518) : tailrecursion.hoplon.span.call(null,G__160517,G__160518));
})();
var G__160190 = ")))))\n(";
var G__160191 = (function (){var G__160519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160520 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160519,G__160520) : tailrecursion.hoplon.span.call(null,G__160519,G__160520));
})();
var G__160192 = " ";
var G__160193 = (function (){var G__160521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160522 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160521,G__160522) : tailrecursion.hoplon.span.call(null,G__160521,G__160522));
})();
var G__160194 = " (";
var G__160195 = (function (){var G__160523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160524 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160523,G__160524) : tailrecursion.hoplon.span.call(null,G__160523,G__160524));
})();
var G__160196 = " ";
var G__160197 = (function (){var G__160525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160526 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160525,G__160526) : tailrecursion.hoplon.span.call(null,G__160525,G__160526));
})();
var G__160198 = " (";
var G__160199 = (function (){var G__160527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160528 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160527,G__160528) : tailrecursion.hoplon.span.call(null,G__160527,G__160528));
})();
var G__160200 = " ";
var G__160201 = (function (){var G__160529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160530 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160529,G__160530) : tailrecursion.hoplon.span.call(null,G__160529,G__160530));
})();
var G__160202 = " (";
var G__160203 = (function (){var G__160531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160532 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160531,G__160532) : tailrecursion.hoplon.span.call(null,G__160531,G__160532));
})();
var G__160204 = " ";
var G__160205 = (function (){var G__160533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160534 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160533,G__160534) : tailrecursion.hoplon.span.call(null,G__160533,G__160534));
})();
var G__160206 = " ";
var G__160207 = (function (){var G__160535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160536 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160535,G__160536) : tailrecursion.hoplon.span.call(null,G__160535,G__160536));
})();
var G__160208 = "))))\n(";
var G__160209 = (function (){var G__160537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160538 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160537,G__160538) : tailrecursion.hoplon.span.call(null,G__160537,G__160538));
})();
var G__160210 = " ";
var G__160211 = (function (){var G__160539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160540 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160539,G__160540) : tailrecursion.hoplon.span.call(null,G__160539,G__160540));
})();
var G__160212 = " (";
var G__160213 = (function (){var G__160541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160542 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160541,G__160542) : tailrecursion.hoplon.span.call(null,G__160541,G__160542));
})();
var G__160214 = " ";
var G__160215 = (function (){var G__160543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160544 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160543,G__160544) : tailrecursion.hoplon.span.call(null,G__160543,G__160544));
})();
var G__160216 = " (";
var G__160217 = (function (){var G__160545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160546 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160545,G__160546) : tailrecursion.hoplon.span.call(null,G__160545,G__160546));
})();
var G__160218 = " ";
var G__160219 = (function (){var G__160547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160548 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160547,G__160548) : tailrecursion.hoplon.span.call(null,G__160547,G__160548));
})();
var G__160220 = " ";
var G__160221 = (function (){var G__160549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160550 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160549,G__160550) : tailrecursion.hoplon.span.call(null,G__160549,G__160550));
})();
var G__160222 = ")))\n(";
var G__160223 = (function (){var G__160551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160552 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160551,G__160552) : tailrecursion.hoplon.span.call(null,G__160551,G__160552));
})();
var G__160224 = " ";
var G__160225 = (function (){var G__160553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160554 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160553,G__160554) : tailrecursion.hoplon.span.call(null,G__160553,G__160554));
})();
var G__160226 = " (";
var G__160227 = (function (){var G__160555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160556 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160555,G__160556) : tailrecursion.hoplon.span.call(null,G__160555,G__160556));
})();
var G__160228 = " ";
var G__160229 = (function (){var G__160557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160558 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160557,G__160558) : tailrecursion.hoplon.span.call(null,G__160557,G__160558));
})();
var G__160230 = " ";
var G__160231 = (function (){var G__160559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160560 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160559,G__160560) : tailrecursion.hoplon.span.call(null,G__160559,G__160560));
})();
var G__160232 = "))\n(";
var G__160233 = (function (){var G__160561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160562 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160561,G__160562) : tailrecursion.hoplon.span.call(null,G__160561,G__160562));
})();
var G__160234 = " ";
var G__160235 = (function (){var G__160563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160564 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160563,G__160564) : tailrecursion.hoplon.span.call(null,G__160563,G__160564));
})();
var G__160236 = " (";
var G__160237 = (function (){var G__160565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160566 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160565,G__160566) : tailrecursion.hoplon.span.call(null,G__160565,G__160566));
})();
var G__160238 = " ";
var G__160239 = (function (){var G__160567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160568 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160567,G__160568) : tailrecursion.hoplon.span.call(null,G__160567,G__160568));
})();
var G__160240 = " (";
var G__160241 = (function (){var G__160569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160570 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160569,G__160570) : tailrecursion.hoplon.span.call(null,G__160569,G__160570));
})();
var G__160242 = " ";
var G__160243 = (function (){var G__160571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160572 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160571,G__160572) : tailrecursion.hoplon.span.call(null,G__160571,G__160572));
})();
var G__160244 = " ";
var G__160245 = (function (){var G__160573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160574 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160573,G__160574) : tailrecursion.hoplon.span.call(null,G__160573,G__160574));
})();
var G__160246 = ")))\n(";
var G__160247 = (function (){var G__160575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160576 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160575,G__160576) : tailrecursion.hoplon.span.call(null,G__160575,G__160576));
})();
var G__160248 = " ";
var G__160249 = (function (){var G__160577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160578 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160577,G__160578) : tailrecursion.hoplon.span.call(null,G__160577,G__160578));
})();
var G__160250 = " (";
var G__160251 = (function (){var G__160579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160580 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160579,G__160580) : tailrecursion.hoplon.span.call(null,G__160579,G__160580));
})();
var G__160252 = " ";
var G__160253 = (function (){var G__160581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160582 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160581,G__160582) : tailrecursion.hoplon.span.call(null,G__160581,G__160582));
})();
var G__160254 = " (";
var G__160255 = (function (){var G__160583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160584 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160583,G__160584) : tailrecursion.hoplon.span.call(null,G__160583,G__160584));
})();
var G__160256 = " ";
var G__160257 = (function (){var G__160585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160586 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160585,G__160586) : tailrecursion.hoplon.span.call(null,G__160585,G__160586));
})();
var G__160258 = " (";
var G__160259 = (function (){var G__160587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160588 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160587,G__160588) : tailrecursion.hoplon.span.call(null,G__160587,G__160588));
})();
var G__160260 = " ";
var G__160261 = (function (){var G__160589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160590 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160589,G__160590) : tailrecursion.hoplon.span.call(null,G__160589,G__160590));
})();
var G__160262 = " ";
var G__160263 = (function (){var G__160591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160592 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160591,G__160592) : tailrecursion.hoplon.span.call(null,G__160591,G__160592));
})();
var G__160264 = "))))\n(";
var G__160265 = (function (){var G__160593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160594 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160593,G__160594) : tailrecursion.hoplon.span.call(null,G__160593,G__160594));
})();
var G__160266 = " ";
var G__160267 = (function (){var G__160595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160596 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160595,G__160596) : tailrecursion.hoplon.span.call(null,G__160595,G__160596));
})();
var G__160268 = " (";
var G__160269 = (function (){var G__160597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160598 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160597,G__160598) : tailrecursion.hoplon.span.call(null,G__160597,G__160598));
})();
var G__160270 = " ";
var G__160271 = (function (){var G__160599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160600 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160599,G__160600) : tailrecursion.hoplon.span.call(null,G__160599,G__160600));
})();
var G__160272 = " (";
var G__160273 = (function (){var G__160601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160602 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160601,G__160602) : tailrecursion.hoplon.span.call(null,G__160601,G__160602));
})();
var G__160274 = " ";
var G__160275 = (function (){var G__160603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160604 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160603,G__160604) : tailrecursion.hoplon.span.call(null,G__160603,G__160604));
})();
var G__160276 = " (";
var G__160277 = (function (){var G__160605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160606 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160605,G__160606) : tailrecursion.hoplon.span.call(null,G__160605,G__160606));
})();
var G__160278 = " ";
var G__160279 = (function (){var G__160607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160608 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160607,G__160608) : tailrecursion.hoplon.span.call(null,G__160607,G__160608));
})();
var G__160280 = " (";
var G__160281 = (function (){var G__160609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160610 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160609,G__160610) : tailrecursion.hoplon.span.call(null,G__160609,G__160610));
})();
var G__160282 = " ";
var G__160283 = (function (){var G__160611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160612 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160611,G__160612) : tailrecursion.hoplon.span.call(null,G__160611,G__160612));
})();
var G__160284 = " ";
var G__160285 = (function (){var G__160613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160614 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160613,G__160614) : tailrecursion.hoplon.span.call(null,G__160613,G__160614));
})();
var G__160286 = ")))))\n(";
var G__160287 = (function (){var G__160615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160616 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160615,G__160616) : tailrecursion.hoplon.span.call(null,G__160615,G__160616));
})();
var G__160288 = " ";
var G__160289 = (function (){var G__160617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160618 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160617,G__160618) : tailrecursion.hoplon.span.call(null,G__160617,G__160618));
})();
var G__160290 = " (";
var G__160291 = (function (){var G__160619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160620 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160619,G__160620) : tailrecursion.hoplon.span.call(null,G__160619,G__160620));
})();
var G__160292 = " ";
var G__160293 = (function (){var G__160621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160622 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160621,G__160622) : tailrecursion.hoplon.span.call(null,G__160621,G__160622));
})();
var G__160294 = " (";
var G__160295 = (function (){var G__160623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160624 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160623,G__160624) : tailrecursion.hoplon.span.call(null,G__160623,G__160624));
})();
var G__160296 = " ";
var G__160297 = (function (){var G__160625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160626 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160625,G__160626) : tailrecursion.hoplon.span.call(null,G__160625,G__160626));
})();
var G__160298 = " (";
var G__160299 = (function (){var G__160627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160628 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160627,G__160628) : tailrecursion.hoplon.span.call(null,G__160627,G__160628));
})();
var G__160300 = " ";
var G__160301 = (function (){var G__160629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160630 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160629,G__160630) : tailrecursion.hoplon.span.call(null,G__160629,G__160630));
})();
var G__160302 = " ";
var G__160303 = (function (){var G__160631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160632 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160631,G__160632) : tailrecursion.hoplon.span.call(null,G__160631,G__160632));
})();
var G__160304 = "))))\n(";
var G__160305 = (function (){var G__160633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160634 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160633,G__160634) : tailrecursion.hoplon.span.call(null,G__160633,G__160634));
})();
var G__160306 = " ";
var G__160307 = (function (){var G__160635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160636 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160635,G__160636) : tailrecursion.hoplon.span.call(null,G__160635,G__160636));
})();
var G__160308 = " (";
var G__160309 = (function (){var G__160637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160638 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160637,G__160638) : tailrecursion.hoplon.span.call(null,G__160637,G__160638));
})();
var G__160310 = " ";
var G__160311 = (function (){var G__160639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160640 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160639,G__160640) : tailrecursion.hoplon.span.call(null,G__160639,G__160640));
})();
var G__160312 = " (";
var G__160313 = (function (){var G__160641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160642 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160641,G__160642) : tailrecursion.hoplon.span.call(null,G__160641,G__160642));
})();
var G__160314 = " ";
var G__160315 = (function (){var G__160643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160644 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160643,G__160644) : tailrecursion.hoplon.span.call(null,G__160643,G__160644));
})();
var G__160316 = " ";
var G__160317 = (function (){var G__160645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160646 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160645,G__160646) : tailrecursion.hoplon.span.call(null,G__160645,G__160646));
})();
var G__160318 = ")))\n(";
var G__160319 = (function (){var G__160647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160648 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160647,G__160648) : tailrecursion.hoplon.span.call(null,G__160647,G__160648));
})();
var G__160320 = " ";
var G__160321 = (function (){var G__160649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160650 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160649,G__160650) : tailrecursion.hoplon.span.call(null,G__160649,G__160650));
})();
var G__160322 = " (";
var G__160323 = (function (){var G__160651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160652 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160651,G__160652) : tailrecursion.hoplon.span.call(null,G__160651,G__160652));
})();
var G__160324 = " ";
var G__160325 = (function (){var G__160653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160654 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160653,G__160654) : tailrecursion.hoplon.span.call(null,G__160653,G__160654));
})();
var G__160326 = " ";
var G__160327 = (function (){var G__160655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160656 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160655,G__160656) : tailrecursion.hoplon.span.call(null,G__160655,G__160656));
})();
var G__160328 = "))\n(";
var G__160329 = (function (){var G__160657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160658 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160657,G__160658) : tailrecursion.hoplon.span.call(null,G__160657,G__160658));
})();
var G__160330 = " ";
var G__160331 = (function (){var G__160659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160660 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160659,G__160660) : tailrecursion.hoplon.span.call(null,G__160659,G__160660));
})();
var G__160332 = " ";
var G__160333 = (function (){var G__160661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160662 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160661,G__160662) : tailrecursion.hoplon.span.call(null,G__160661,G__160662));
})();
var G__160334 = ")\n(";
var G__160335 = (function (){var G__160663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160664 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160663,G__160664) : tailrecursion.hoplon.span.call(null,G__160663,G__160664));
})();
var G__160336 = " ";
var G__160337 = (function (){var G__160665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160666 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160665,G__160666) : tailrecursion.hoplon.span.call(null,G__160665,G__160666));
})();
var G__160338 = " (";
var G__160339 = (function (){var G__160667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160668 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160667,G__160668) : tailrecursion.hoplon.span.call(null,G__160667,G__160668));
})();
var G__160340 = " ";
var G__160341 = (function (){var G__160669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160670 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160669,G__160670) : tailrecursion.hoplon.span.call(null,G__160669,G__160670));
})();
var G__160342 = " ";
var G__160343 = (function (){var G__160671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160672 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160671,G__160672) : tailrecursion.hoplon.span.call(null,G__160671,G__160672));
})();
var G__160344 = "))\n(";
var G__160345 = (function (){var G__160673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160674 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160673,G__160674) : tailrecursion.hoplon.span.call(null,G__160673,G__160674));
})();
var G__160346 = " ";
var G__160347 = (function (){var G__160675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160676 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160675,G__160676) : tailrecursion.hoplon.span.call(null,G__160675,G__160676));
})();
var G__160348 = " (";
var G__160349 = (function (){var G__160677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160678 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160677,G__160678) : tailrecursion.hoplon.span.call(null,G__160677,G__160678));
})();
var G__160350 = " ";
var G__160351 = (function (){var G__160679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160680 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160679,G__160680) : tailrecursion.hoplon.span.call(null,G__160679,G__160680));
})();
var G__160352 = " (";
var G__160353 = (function (){var G__160681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160682 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160681,G__160682) : tailrecursion.hoplon.span.call(null,G__160681,G__160682));
})();
var G__160354 = " ";
var G__160355 = (function (){var G__160683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160684 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160683,G__160684) : tailrecursion.hoplon.span.call(null,G__160683,G__160684));
})();
var G__160356 = " ";
var G__160357 = (function (){var G__160685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160686 = "14";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160685,G__160686) : tailrecursion.hoplon.span.call(null,G__160685,G__160686));
})();
var G__160358 = ")))\n";
var G__160359 = (function (){var G__160687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__160688 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160687,G__160688) : tailrecursion.hoplon.span.call(null,G__160687,G__160688));
})();
var G__160360 = "\n";
var G__160361 = (function (){var G__160689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160690 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160689,G__160690) : tailrecursion.hoplon.span.call(null,G__160689,G__160690));
})();
var G__160362 = ",";
var G__160363 = (function (){var G__160691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160692 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160691,G__160692) : tailrecursion.hoplon.span.call(null,G__160691,G__160692));
})();
var G__160364 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322(G__160043,G__160044,G__160045,G__160046,G__160047,G__160048,G__160049,G__160050,G__160051,G__160052,G__160053,G__160054,G__160055,G__160056,G__160057,G__160058,G__160059,G__160060,G__160061,G__160062,G__160063,G__160064,G__160065,G__160066,G__160067,G__160068,G__160069,G__160070,G__160071,G__160072,G__160073,G__160074,G__160075,G__160076,G__160077,G__160078,G__160079,G__160080,G__160081,G__160082,G__160083,G__160084,G__160085,G__160086,G__160087,G__160088,G__160089,G__160090,G__160091,G__160092,G__160093,G__160094,G__160095,G__160096,G__160097,G__160098,G__160099,G__160100,G__160101,G__160102,G__160103,G__160104,G__160105,G__160106,G__160107,G__160108,G__160109,G__160110,G__160111,G__160112,G__160113,G__160114,G__160115,G__160116,G__160117,G__160118,G__160119,G__160120,G__160121,G__160122,G__160123,G__160124,G__160125,G__160126,G__160127,G__160128,G__160129,G__160130,G__160131,G__160132,G__160133,G__160134,G__160135,G__160136,G__160137,G__160138,G__160139,G__160140,G__160141,G__160142,G__160143,G__160144,G__160145,G__160146,G__160147,G__160148,G__160149,G__160150,G__160151,G__160152,G__160153,G__160154,G__160155,G__160156,G__160157,G__160158,G__160159,G__160160,G__160161,G__160162,G__160163,G__160164,G__160165,G__160166,G__160167,G__160168,G__160169,G__160170,G__160171,G__160172,G__160173,G__160174,G__160175,G__160176,G__160177,G__160178,G__160179,G__160180,G__160181,G__160182,G__160183,G__160184,G__160185,G__160186,G__160187,G__160188,G__160189,G__160190,G__160191,G__160192,G__160193,G__160194,G__160195,G__160196,G__160197,G__160198,G__160199,G__160200,G__160201,G__160202,G__160203,G__160204,G__160205,G__160206,G__160207,G__160208,G__160209,G__160210,G__160211,G__160212,G__160213,G__160214,G__160215,G__160216,G__160217,G__160218,G__160219,G__160220,G__160221,G__160222,G__160223,G__160224,G__160225,G__160226,G__160227,G__160228,G__160229,G__160230,G__160231,G__160232,G__160233,G__160234,G__160235,G__160236,G__160237,G__160238,G__160239,G__160240,G__160241,G__160242,G__160243,G__160244,G__160245,G__160246,G__160247,G__160248,G__160249,G__160250,G__160251,G__160252,G__160253,G__160254,G__160255,G__160256,G__160257,G__160258,G__160259,G__160260,G__160261,G__160262,G__160263,G__160264,G__160265,G__160266,G__160267,G__160268,G__160269,G__160270,G__160271,G__160272,G__160273,G__160274,G__160275,G__160276,G__160277,G__160278,G__160279,G__160280,G__160281,G__160282,G__160283,G__160284,G__160285,G__160286,G__160287,G__160288,G__160289,G__160290,G__160291,G__160292,G__160293,G__160294,G__160295,G__160296,G__160297,G__160298,G__160299,G__160300,G__160301,G__160302,G__160303,G__160304,G__160305,G__160306,G__160307,G__160308,G__160309,G__160310,G__160311,G__160312,G__160313,G__160314,G__160315,G__160316,G__160317,G__160318,G__160319,G__160320,G__160321,G__160322,G__160323,G__160324,G__160325,G__160326,G__160327,G__160328,G__160329,G__160330,G__160331,G__160332,G__160333,G__160334,G__160335,G__160336,G__160337,G__160338,G__160339,G__160340,G__160341,G__160342,G__160343,G__160344,G__160345,G__160346,G__160347,G__160348,G__160349,G__160350,G__160351,G__160352,G__160353,G__160354,G__160355,G__160356,G__160357,G__160358,G__160359,G__160360,G__160361,G__160362,G__160363,G__160364) : tailrecursion.hoplon.pre.call(null,G__160043,G__160044,G__160045,G__160046,G__160047,G__160048,G__160049,G__160050,G__160051,G__160052,G__160053,G__160054,G__160055,G__160056,G__160057,G__160058,G__160059,G__160060,G__160061,G__160062,G__160063,G__160064,G__160065,G__160066,G__160067,G__160068,G__160069,G__160070,G__160071,G__160072,G__160073,G__160074,G__160075,G__160076,G__160077,G__160078,G__160079,G__160080,G__160081,G__160082,G__160083,G__160084,G__160085,G__160086,G__160087,G__160088,G__160089,G__160090,G__160091,G__160092,G__160093,G__160094,G__160095,G__160096,G__160097,G__160098,G__160099,G__160100,G__160101,G__160102,G__160103,G__160104,G__160105,G__160106,G__160107,G__160108,G__160109,G__160110,G__160111,G__160112,G__160113,G__160114,G__160115,G__160116,G__160117,G__160118,G__160119,G__160120,G__160121,G__160122,G__160123,G__160124,G__160125,G__160126,G__160127,G__160128,G__160129,G__160130,G__160131,G__160132,G__160133,G__160134,G__160135,G__160136,G__160137,G__160138,G__160139,G__160140,G__160141,G__160142,G__160143,G__160144,G__160145,G__160146,G__160147,G__160148,G__160149,G__160150,G__160151,G__160152,G__160153,G__160154,G__160155,G__160156,G__160157,G__160158,G__160159,G__160160,G__160161,G__160162,G__160163,G__160164,G__160165,G__160166,G__160167,G__160168,G__160169,G__160170,G__160171,G__160172,G__160173,G__160174,G__160175,G__160176,G__160177,G__160178,G__160179,G__160180,G__160181,G__160182,G__160183,G__160184,G__160185,G__160186,G__160187,G__160188,G__160189,G__160190,G__160191,G__160192,G__160193,G__160194,G__160195,G__160196,G__160197,G__160198,G__160199,G__160200,G__160201,G__160202,G__160203,G__160204,G__160205,G__160206,G__160207,G__160208,G__160209,G__160210,G__160211,G__160212,G__160213,G__160214,G__160215,G__160216,G__160217,G__160218,G__160219,G__160220,G__160221,G__160222,G__160223,G__160224,G__160225,G__160226,G__160227,G__160228,G__160229,G__160230,G__160231,G__160232,G__160233,G__160234,G__160235,G__160236,G__160237,G__160238,G__160239,G__160240,G__160241,G__160242,G__160243,G__160244,G__160245,G__160246,G__160247,G__160248,G__160249,G__160250,G__160251,G__160252,G__160253,G__160254,G__160255,G__160256,G__160257,G__160258,G__160259,G__160260,G__160261,G__160262,G__160263,G__160264,G__160265,G__160266,G__160267,G__160268,G__160269,G__160270,G__160271,G__160272,G__160273,G__160274,G__160275,G__160276,G__160277,G__160278,G__160279,G__160280,G__160281,G__160282,G__160283,G__160284,G__160285,G__160286,G__160287,G__160288,G__160289,G__160290,G__160291,G__160292,G__160293,G__160294,G__160295,G__160296,G__160297,G__160298,G__160299,G__160300,G__160301,G__160302,G__160303,G__160304,G__160305,G__160306,G__160307,G__160308,G__160309,G__160310,G__160311,G__160312,G__160313,G__160314,G__160315,G__160316,G__160317,G__160318,G__160319,G__160320,G__160321,G__160322,G__160323,G__160324,G__160325,G__160326,G__160327,G__160328,G__160329,G__160330,G__160331,G__160332,G__160333,G__160334,G__160335,G__160336,G__160337,G__160338,G__160339,G__160340,G__160341,G__160342,G__160343,G__160344,G__160345,G__160346,G__160347,G__160348,G__160349,G__160350,G__160351,G__160352,G__160353,G__160354,G__160355,G__160356,G__160357,G__160358,G__160359,G__160360,G__160361,G__160362,G__160363,G__160364));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160041,G__160042) : tailrecursion.hoplon.div.call(null,G__160041,G__160042));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160040) : tailrecursion.hoplon.div.call(null,G__160040));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160039;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160038;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160037;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160036;
}})()], 0)),(function (){var _STAR_references_STAR_160693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160695 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160696 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160697 = (function (){var G__160698 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160699 = (function (){var G__160700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160701 = "(";
var G__160702 = (function (){var G__160708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__160709 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160708,G__160709) : tailrecursion.hoplon.span.call(null,G__160708,G__160709));
})();
var G__160703 = " ";
var G__160704 = (function (){var G__160710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160711 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160710,G__160711) : tailrecursion.hoplon.span.call(null,G__160710,G__160711));
})();
var G__160705 = " ";
var G__160706 = (function (){var G__160712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__160713 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__160712,G__160713) : tailrecursion.hoplon.span.call(null,G__160712,G__160713));
})();
var G__160707 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__160700,G__160701,G__160702,G__160703,G__160704,G__160705,G__160706,G__160707) : tailrecursion.hoplon.pre.call(null,G__160700,G__160701,G__160702,G__160703,G__160704,G__160705,G__160706,G__160707));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160698,G__160699) : tailrecursion.hoplon.div.call(null,G__160698,G__160699));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160697) : tailrecursion.hoplon.div.call(null,G__160697));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160696;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160695;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160693;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_160714 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160715 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_160716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_160717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__160718 = (function (){var G__160719 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__160720 = (function (){var G__160721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__160722 = "(";
var G__160723 = (function (){var G__161023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161024 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161023,G__161024) : tailrecursion.hoplon.span.call(null,G__161023,G__161024));
})();
var G__160724 = " ";
var G__160725 = (function (){var G__161025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161026 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161025,G__161026) : tailrecursion.hoplon.span.call(null,G__161025,G__161026));
})();
var G__160726 = " ";
var G__160727 = (function (){var G__161027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161028 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161027,G__161028) : tailrecursion.hoplon.span.call(null,G__161027,G__161028));
})();
var G__160728 = ")\n(";
var G__160729 = (function (){var G__161029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161030 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161029,G__161030) : tailrecursion.hoplon.span.call(null,G__161029,G__161030));
})();
var G__160730 = " ";
var G__160731 = (function (){var G__161031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161032 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161031,G__161032) : tailrecursion.hoplon.span.call(null,G__161031,G__161032));
})();
var G__160732 = " (";
var G__160733 = (function (){var G__161033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161034 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161033,G__161034) : tailrecursion.hoplon.span.call(null,G__161033,G__161034));
})();
var G__160734 = " ";
var G__160735 = (function (){var G__161035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161036 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161035,G__161036) : tailrecursion.hoplon.span.call(null,G__161035,G__161036));
})();
var G__160736 = " ";
var G__160737 = (function (){var G__161037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161038 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161037,G__161038) : tailrecursion.hoplon.span.call(null,G__161037,G__161038));
})();
var G__160738 = "))\n(";
var G__160739 = (function (){var G__161039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161040 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161039,G__161040) : tailrecursion.hoplon.span.call(null,G__161039,G__161040));
})();
var G__160740 = " ";
var G__160741 = (function (){var G__161041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161042 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161041,G__161042) : tailrecursion.hoplon.span.call(null,G__161041,G__161042));
})();
var G__160742 = " (";
var G__160743 = (function (){var G__161043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161044 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161043,G__161044) : tailrecursion.hoplon.span.call(null,G__161043,G__161044));
})();
var G__160744 = " ";
var G__160745 = (function (){var G__161045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161046 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161045,G__161046) : tailrecursion.hoplon.span.call(null,G__161045,G__161046));
})();
var G__160746 = " (";
var G__160747 = (function (){var G__161047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161048 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161047,G__161048) : tailrecursion.hoplon.span.call(null,G__161047,G__161048));
})();
var G__160748 = " ";
var G__160749 = (function (){var G__161049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161050 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161049,G__161050) : tailrecursion.hoplon.span.call(null,G__161049,G__161050));
})();
var G__160750 = " ";
var G__160751 = (function (){var G__161051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161052 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161051,G__161052) : tailrecursion.hoplon.span.call(null,G__161051,G__161052));
})();
var G__160752 = ")))\n(";
var G__160753 = (function (){var G__161053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161054 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161053,G__161054) : tailrecursion.hoplon.span.call(null,G__161053,G__161054));
})();
var G__160754 = " ";
var G__160755 = (function (){var G__161055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161056 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161055,G__161056) : tailrecursion.hoplon.span.call(null,G__161055,G__161056));
})();
var G__160756 = " (";
var G__160757 = (function (){var G__161057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161058 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161057,G__161058) : tailrecursion.hoplon.span.call(null,G__161057,G__161058));
})();
var G__160758 = " ";
var G__160759 = (function (){var G__161059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161060 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161059,G__161060) : tailrecursion.hoplon.span.call(null,G__161059,G__161060));
})();
var G__160760 = " ";
var G__160761 = (function (){var G__161061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161062 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161061,G__161062) : tailrecursion.hoplon.span.call(null,G__161061,G__161062));
})();
var G__160762 = "))\n(";
var G__160763 = (function (){var G__161063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161064 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161063,G__161064) : tailrecursion.hoplon.span.call(null,G__161063,G__161064));
})();
var G__160764 = " ";
var G__160765 = (function (){var G__161065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161066 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161065,G__161066) : tailrecursion.hoplon.span.call(null,G__161065,G__161066));
})();
var G__160766 = " (";
var G__160767 = (function (){var G__161067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161068 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161067,G__161068) : tailrecursion.hoplon.span.call(null,G__161067,G__161068));
})();
var G__160768 = " ";
var G__160769 = (function (){var G__161069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161070 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161069,G__161070) : tailrecursion.hoplon.span.call(null,G__161069,G__161070));
})();
var G__160770 = " (";
var G__160771 = (function (){var G__161071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161072 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161071,G__161072) : tailrecursion.hoplon.span.call(null,G__161071,G__161072));
})();
var G__160772 = " ";
var G__160773 = (function (){var G__161073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161074 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161073,G__161074) : tailrecursion.hoplon.span.call(null,G__161073,G__161074));
})();
var G__160774 = " ";
var G__160775 = (function (){var G__161075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161076 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161075,G__161076) : tailrecursion.hoplon.span.call(null,G__161075,G__161076));
})();
var G__160776 = ")))\n(";
var G__160777 = (function (){var G__161077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161078 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161077,G__161078) : tailrecursion.hoplon.span.call(null,G__161077,G__161078));
})();
var G__160778 = " ";
var G__160779 = (function (){var G__161079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161080 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161079,G__161080) : tailrecursion.hoplon.span.call(null,G__161079,G__161080));
})();
var G__160780 = " (";
var G__160781 = (function (){var G__161081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161082 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161081,G__161082) : tailrecursion.hoplon.span.call(null,G__161081,G__161082));
})();
var G__160782 = " ";
var G__160783 = (function (){var G__161083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161084 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161083,G__161084) : tailrecursion.hoplon.span.call(null,G__161083,G__161084));
})();
var G__160784 = " ";
var G__160785 = (function (){var G__161085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161086 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161085,G__161086) : tailrecursion.hoplon.span.call(null,G__161085,G__161086));
})();
var G__160786 = "))\n(";
var G__160787 = (function (){var G__161087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161088 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161087,G__161088) : tailrecursion.hoplon.span.call(null,G__161087,G__161088));
})();
var G__160788 = " ";
var G__160789 = (function (){var G__161089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161090 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161089,G__161090) : tailrecursion.hoplon.span.call(null,G__161089,G__161090));
})();
var G__160790 = " (";
var G__160791 = (function (){var G__161091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161092 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161091,G__161092) : tailrecursion.hoplon.span.call(null,G__161091,G__161092));
})();
var G__160792 = " ";
var G__160793 = (function (){var G__161093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161094 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161093,G__161094) : tailrecursion.hoplon.span.call(null,G__161093,G__161094));
})();
var G__160794 = " (";
var G__160795 = (function (){var G__161095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161096 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161095,G__161096) : tailrecursion.hoplon.span.call(null,G__161095,G__161096));
})();
var G__160796 = " ";
var G__160797 = (function (){var G__161097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161098 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161097,G__161098) : tailrecursion.hoplon.span.call(null,G__161097,G__161098));
})();
var G__160798 = " ";
var G__160799 = (function (){var G__161099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161100 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161099,G__161100) : tailrecursion.hoplon.span.call(null,G__161099,G__161100));
})();
var G__160800 = ")))\n(";
var G__160801 = (function (){var G__161101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161102 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161101,G__161102) : tailrecursion.hoplon.span.call(null,G__161101,G__161102));
})();
var G__160802 = " ";
var G__160803 = (function (){var G__161103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161104 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161103,G__161104) : tailrecursion.hoplon.span.call(null,G__161103,G__161104));
})();
var G__160804 = " (";
var G__160805 = (function (){var G__161105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161106 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161105,G__161106) : tailrecursion.hoplon.span.call(null,G__161105,G__161106));
})();
var G__160806 = " ";
var G__160807 = (function (){var G__161107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161108 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161107,G__161108) : tailrecursion.hoplon.span.call(null,G__161107,G__161108));
})();
var G__160808 = " ";
var G__160809 = (function (){var G__161109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161110 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161109,G__161110) : tailrecursion.hoplon.span.call(null,G__161109,G__161110));
})();
var G__160810 = "))\n(";
var G__160811 = (function (){var G__161111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161112 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161111,G__161112) : tailrecursion.hoplon.span.call(null,G__161111,G__161112));
})();
var G__160812 = " ";
var G__160813 = (function (){var G__161113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161114 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161113,G__161114) : tailrecursion.hoplon.span.call(null,G__161113,G__161114));
})();
var G__160814 = " ";
var G__160815 = (function (){var G__161115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161116 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161115,G__161116) : tailrecursion.hoplon.span.call(null,G__161115,G__161116));
})();
var G__160816 = ")\n(";
var G__160817 = (function (){var G__161117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161118 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161117,G__161118) : tailrecursion.hoplon.span.call(null,G__161117,G__161118));
})();
var G__160818 = " ";
var G__160819 = (function (){var G__161119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161120 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161119,G__161120) : tailrecursion.hoplon.span.call(null,G__161119,G__161120));
})();
var G__160820 = " (";
var G__160821 = (function (){var G__161121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161122 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161121,G__161122) : tailrecursion.hoplon.span.call(null,G__161121,G__161122));
})();
var G__160822 = " ";
var G__160823 = (function (){var G__161123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161124 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161123,G__161124) : tailrecursion.hoplon.span.call(null,G__161123,G__161124));
})();
var G__160824 = " ";
var G__160825 = (function (){var G__161125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161126 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161125,G__161126) : tailrecursion.hoplon.span.call(null,G__161125,G__161126));
})();
var G__160826 = "))\n(";
var G__160827 = (function (){var G__161127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161128 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161127,G__161128) : tailrecursion.hoplon.span.call(null,G__161127,G__161128));
})();
var G__160828 = " ";
var G__160829 = (function (){var G__161129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161130 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161129,G__161130) : tailrecursion.hoplon.span.call(null,G__161129,G__161130));
})();
var G__160830 = " (";
var G__160831 = (function (){var G__161131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161132 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161131,G__161132) : tailrecursion.hoplon.span.call(null,G__161131,G__161132));
})();
var G__160832 = " ";
var G__160833 = (function (){var G__161133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161134 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161133,G__161134) : tailrecursion.hoplon.span.call(null,G__161133,G__161134));
})();
var G__160834 = " (";
var G__160835 = (function (){var G__161135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161136 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161135,G__161136) : tailrecursion.hoplon.span.call(null,G__161135,G__161136));
})();
var G__160836 = " ";
var G__160837 = (function (){var G__161137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161138 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161137,G__161138) : tailrecursion.hoplon.span.call(null,G__161137,G__161138));
})();
var G__160838 = " ";
var G__160839 = (function (){var G__161139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161140 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161139,G__161140) : tailrecursion.hoplon.span.call(null,G__161139,G__161140));
})();
var G__160840 = ")))\n(";
var G__160841 = (function (){var G__161141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161142 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161141,G__161142) : tailrecursion.hoplon.span.call(null,G__161141,G__161142));
})();
var G__160842 = " ";
var G__160843 = (function (){var G__161143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161144 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161143,G__161144) : tailrecursion.hoplon.span.call(null,G__161143,G__161144));
})();
var G__160844 = " (";
var G__160845 = (function (){var G__161145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161146 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161145,G__161146) : tailrecursion.hoplon.span.call(null,G__161145,G__161146));
})();
var G__160846 = " ";
var G__160847 = (function (){var G__161147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161148 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161147,G__161148) : tailrecursion.hoplon.span.call(null,G__161147,G__161148));
})();
var G__160848 = " (";
var G__160849 = (function (){var G__161149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161150 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161149,G__161150) : tailrecursion.hoplon.span.call(null,G__161149,G__161150));
})();
var G__160850 = " ";
var G__160851 = (function (){var G__161151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161152 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161151,G__161152) : tailrecursion.hoplon.span.call(null,G__161151,G__161152));
})();
var G__160852 = " (";
var G__160853 = (function (){var G__161153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161154 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161153,G__161154) : tailrecursion.hoplon.span.call(null,G__161153,G__161154));
})();
var G__160854 = " ";
var G__160855 = (function (){var G__161155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161156 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161155,G__161156) : tailrecursion.hoplon.span.call(null,G__161155,G__161156));
})();
var G__160856 = " ";
var G__160857 = (function (){var G__161157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161158 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161157,G__161158) : tailrecursion.hoplon.span.call(null,G__161157,G__161158));
})();
var G__160858 = "))))\n(";
var G__160859 = (function (){var G__161159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161160 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161159,G__161160) : tailrecursion.hoplon.span.call(null,G__161159,G__161160));
})();
var G__160860 = " ";
var G__160861 = (function (){var G__161161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161162 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161161,G__161162) : tailrecursion.hoplon.span.call(null,G__161161,G__161162));
})();
var G__160862 = " (";
var G__160863 = (function (){var G__161163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161164 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161163,G__161164) : tailrecursion.hoplon.span.call(null,G__161163,G__161164));
})();
var G__160864 = " ";
var G__160865 = (function (){var G__161165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161166 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161165,G__161166) : tailrecursion.hoplon.span.call(null,G__161165,G__161166));
})();
var G__160866 = " (";
var G__160867 = (function (){var G__161167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161168 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161167,G__161168) : tailrecursion.hoplon.span.call(null,G__161167,G__161168));
})();
var G__160868 = " ";
var G__160869 = (function (){var G__161169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161170 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161169,G__161170) : tailrecursion.hoplon.span.call(null,G__161169,G__161170));
})();
var G__160870 = " ";
var G__160871 = (function (){var G__161171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161172 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161171,G__161172) : tailrecursion.hoplon.span.call(null,G__161171,G__161172));
})();
var G__160872 = ")))\n(";
var G__160873 = (function (){var G__161173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161174 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161173,G__161174) : tailrecursion.hoplon.span.call(null,G__161173,G__161174));
})();
var G__160874 = " ";
var G__160875 = (function (){var G__161175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161176 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161175,G__161176) : tailrecursion.hoplon.span.call(null,G__161175,G__161176));
})();
var G__160876 = " (";
var G__160877 = (function (){var G__161177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161178 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161177,G__161178) : tailrecursion.hoplon.span.call(null,G__161177,G__161178));
})();
var G__160878 = " ";
var G__160879 = (function (){var G__161179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161180 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161179,G__161180) : tailrecursion.hoplon.span.call(null,G__161179,G__161180));
})();
var G__160880 = " (";
var G__160881 = (function (){var G__161181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161182 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161181,G__161182) : tailrecursion.hoplon.span.call(null,G__161181,G__161182));
})();
var G__160882 = " ";
var G__160883 = (function (){var G__161183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161184 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161183,G__161184) : tailrecursion.hoplon.span.call(null,G__161183,G__161184));
})();
var G__160884 = " (";
var G__160885 = (function (){var G__161185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161186 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161185,G__161186) : tailrecursion.hoplon.span.call(null,G__161185,G__161186));
})();
var G__160886 = " ";
var G__160887 = (function (){var G__161187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161188 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161187,G__161188) : tailrecursion.hoplon.span.call(null,G__161187,G__161188));
})();
var G__160888 = " ";
var G__160889 = (function (){var G__161189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161190 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161189,G__161190) : tailrecursion.hoplon.span.call(null,G__161189,G__161190));
})();
var G__160890 = "))))\n(";
var G__160891 = (function (){var G__161191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161192 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161191,G__161192) : tailrecursion.hoplon.span.call(null,G__161191,G__161192));
})();
var G__160892 = " ";
var G__160893 = (function (){var G__161193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161194 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161193,G__161194) : tailrecursion.hoplon.span.call(null,G__161193,G__161194));
})();
var G__160894 = " (";
var G__160895 = (function (){var G__161195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161196 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161195,G__161196) : tailrecursion.hoplon.span.call(null,G__161195,G__161196));
})();
var G__160896 = " ";
var G__160897 = (function (){var G__161197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161198 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161197,G__161198) : tailrecursion.hoplon.span.call(null,G__161197,G__161198));
})();
var G__160898 = " (";
var G__160899 = (function (){var G__161199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161200 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161199,G__161200) : tailrecursion.hoplon.span.call(null,G__161199,G__161200));
})();
var G__160900 = " ";
var G__160901 = (function (){var G__161201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161202 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161201,G__161202) : tailrecursion.hoplon.span.call(null,G__161201,G__161202));
})();
var G__160902 = " ";
var G__160903 = (function (){var G__161203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161204 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161203,G__161204) : tailrecursion.hoplon.span.call(null,G__161203,G__161204));
})();
var G__160904 = ")))\n(";
var G__160905 = (function (){var G__161205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161206 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161205,G__161206) : tailrecursion.hoplon.span.call(null,G__161205,G__161206));
})();
var G__160906 = " ";
var G__160907 = (function (){var G__161207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161208 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161207,G__161208) : tailrecursion.hoplon.span.call(null,G__161207,G__161208));
})();
var G__160908 = " (";
var G__160909 = (function (){var G__161209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161210 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161209,G__161210) : tailrecursion.hoplon.span.call(null,G__161209,G__161210));
})();
var G__160910 = " ";
var G__160911 = (function (){var G__161211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161212 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161211,G__161212) : tailrecursion.hoplon.span.call(null,G__161211,G__161212));
})();
var G__160912 = " ";
var G__160913 = (function (){var G__161213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161214 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161213,G__161214) : tailrecursion.hoplon.span.call(null,G__161213,G__161214));
})();
var G__160914 = "))\n(";
var G__160915 = (function (){var G__161215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161215,G__161216) : tailrecursion.hoplon.span.call(null,G__161215,G__161216));
})();
var G__160916 = " ";
var G__160917 = (function (){var G__161217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161218 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161217,G__161218) : tailrecursion.hoplon.span.call(null,G__161217,G__161218));
})();
var G__160918 = " (";
var G__160919 = (function (){var G__161219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161220 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161219,G__161220) : tailrecursion.hoplon.span.call(null,G__161219,G__161220));
})();
var G__160920 = " ";
var G__160921 = (function (){var G__161221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161222 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161221,G__161222) : tailrecursion.hoplon.span.call(null,G__161221,G__161222));
})();
var G__160922 = " (";
var G__160923 = (function (){var G__161223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161224 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161223,G__161224) : tailrecursion.hoplon.span.call(null,G__161223,G__161224));
})();
var G__160924 = " ";
var G__160925 = (function (){var G__161225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161226 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161225,G__161226) : tailrecursion.hoplon.span.call(null,G__161225,G__161226));
})();
var G__160926 = " ";
var G__160927 = (function (){var G__161227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161228 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161227,G__161228) : tailrecursion.hoplon.span.call(null,G__161227,G__161228));
})();
var G__160928 = ")))\n(";
var G__160929 = (function (){var G__161229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161230 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161229,G__161230) : tailrecursion.hoplon.span.call(null,G__161229,G__161230));
})();
var G__160930 = " ";
var G__160931 = (function (){var G__161231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161232 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161231,G__161232) : tailrecursion.hoplon.span.call(null,G__161231,G__161232));
})();
var G__160932 = " (";
var G__160933 = (function (){var G__161233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161234 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161233,G__161234) : tailrecursion.hoplon.span.call(null,G__161233,G__161234));
})();
var G__160934 = " ";
var G__160935 = (function (){var G__161235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161236 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161235,G__161236) : tailrecursion.hoplon.span.call(null,G__161235,G__161236));
})();
var G__160936 = " (";
var G__160937 = (function (){var G__161237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161238 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161237,G__161238) : tailrecursion.hoplon.span.call(null,G__161237,G__161238));
})();
var G__160938 = " ";
var G__160939 = (function (){var G__161239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161240 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161239,G__161240) : tailrecursion.hoplon.span.call(null,G__161239,G__161240));
})();
var G__160940 = " (";
var G__160941 = (function (){var G__161241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161242 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161241,G__161242) : tailrecursion.hoplon.span.call(null,G__161241,G__161242));
})();
var G__160942 = " ";
var G__160943 = (function (){var G__161243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161244 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161243,G__161244) : tailrecursion.hoplon.span.call(null,G__161243,G__161244));
})();
var G__160944 = " ";
var G__160945 = (function (){var G__161245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161246 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161245,G__161246) : tailrecursion.hoplon.span.call(null,G__161245,G__161246));
})();
var G__160946 = "))))\n(";
var G__160947 = (function (){var G__161247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161248 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161247,G__161248) : tailrecursion.hoplon.span.call(null,G__161247,G__161248));
})();
var G__160948 = " ";
var G__160949 = (function (){var G__161249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161250 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161249,G__161250) : tailrecursion.hoplon.span.call(null,G__161249,G__161250));
})();
var G__160950 = " (";
var G__160951 = (function (){var G__161251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161252 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161251,G__161252) : tailrecursion.hoplon.span.call(null,G__161251,G__161252));
})();
var G__160952 = " ";
var G__160953 = (function (){var G__161253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161254 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161253,G__161254) : tailrecursion.hoplon.span.call(null,G__161253,G__161254));
})();
var G__160954 = " (";
var G__160955 = (function (){var G__161255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161256 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161255,G__161256) : tailrecursion.hoplon.span.call(null,G__161255,G__161256));
})();
var G__160956 = " ";
var G__160957 = (function (){var G__161257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161258 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161257,G__161258) : tailrecursion.hoplon.span.call(null,G__161257,G__161258));
})();
var G__160958 = " (";
var G__160959 = (function (){var G__161259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161260 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161259,G__161260) : tailrecursion.hoplon.span.call(null,G__161259,G__161260));
})();
var G__160960 = " ";
var G__160961 = (function (){var G__161261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161262 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161261,G__161262) : tailrecursion.hoplon.span.call(null,G__161261,G__161262));
})();
var G__160962 = " (";
var G__160963 = (function (){var G__161263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161264 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161263,G__161264) : tailrecursion.hoplon.span.call(null,G__161263,G__161264));
})();
var G__160964 = " ";
var G__160965 = (function (){var G__161265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161266 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161265,G__161266) : tailrecursion.hoplon.span.call(null,G__161265,G__161266));
})();
var G__160966 = " ";
var G__160967 = (function (){var G__161267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161268 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161267,G__161268) : tailrecursion.hoplon.span.call(null,G__161267,G__161268));
})();
var G__160968 = ")))))\n(";
var G__160969 = (function (){var G__161269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161270 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161269,G__161270) : tailrecursion.hoplon.span.call(null,G__161269,G__161270));
})();
var G__160970 = " ";
var G__160971 = (function (){var G__161271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161272 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161271,G__161272) : tailrecursion.hoplon.span.call(null,G__161271,G__161272));
})();
var G__160972 = " (";
var G__160973 = (function (){var G__161273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161274 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161273,G__161274) : tailrecursion.hoplon.span.call(null,G__161273,G__161274));
})();
var G__160974 = " ";
var G__160975 = (function (){var G__161275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161276 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161275,G__161276) : tailrecursion.hoplon.span.call(null,G__161275,G__161276));
})();
var G__160976 = " (";
var G__160977 = (function (){var G__161277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161278 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161277,G__161278) : tailrecursion.hoplon.span.call(null,G__161277,G__161278));
})();
var G__160978 = " ";
var G__160979 = (function (){var G__161279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161280 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161279,G__161280) : tailrecursion.hoplon.span.call(null,G__161279,G__161280));
})();
var G__160980 = " (";
var G__160981 = (function (){var G__161281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161282 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161281,G__161282) : tailrecursion.hoplon.span.call(null,G__161281,G__161282));
})();
var G__160982 = " ";
var G__160983 = (function (){var G__161283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161284 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161283,G__161284) : tailrecursion.hoplon.span.call(null,G__161283,G__161284));
})();
var G__160984 = " ";
var G__160985 = (function (){var G__161285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161286 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161285,G__161286) : tailrecursion.hoplon.span.call(null,G__161285,G__161286));
})();
var G__160986 = "))))\n(";
var G__160987 = (function (){var G__161287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161288 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161287,G__161288) : tailrecursion.hoplon.span.call(null,G__161287,G__161288));
})();
var G__160988 = " ";
var G__160989 = (function (){var G__161289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161290 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161289,G__161290) : tailrecursion.hoplon.span.call(null,G__161289,G__161290));
})();
var G__160990 = " (";
var G__160991 = (function (){var G__161291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161292 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161291,G__161292) : tailrecursion.hoplon.span.call(null,G__161291,G__161292));
})();
var G__160992 = " ";
var G__160993 = (function (){var G__161293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161294 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161293,G__161294) : tailrecursion.hoplon.span.call(null,G__161293,G__161294));
})();
var G__160994 = " (";
var G__160995 = (function (){var G__161295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161296 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161295,G__161296) : tailrecursion.hoplon.span.call(null,G__161295,G__161296));
})();
var G__160996 = " ";
var G__160997 = (function (){var G__161297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161298 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161297,G__161298) : tailrecursion.hoplon.span.call(null,G__161297,G__161298));
})();
var G__160998 = " ";
var G__160999 = (function (){var G__161299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161300 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161299,G__161300) : tailrecursion.hoplon.span.call(null,G__161299,G__161300));
})();
var G__161000 = ")))\n(";
var G__161001 = (function (){var G__161301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161302 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161301,G__161302) : tailrecursion.hoplon.span.call(null,G__161301,G__161302));
})();
var G__161002 = " ";
var G__161003 = (function (){var G__161303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161304 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161303,G__161304) : tailrecursion.hoplon.span.call(null,G__161303,G__161304));
})();
var G__161004 = " (";
var G__161005 = (function (){var G__161305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161306 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161305,G__161306) : tailrecursion.hoplon.span.call(null,G__161305,G__161306));
})();
var G__161006 = " ";
var G__161007 = (function (){var G__161307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161308 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161307,G__161308) : tailrecursion.hoplon.span.call(null,G__161307,G__161308));
})();
var G__161008 = " ";
var G__161009 = (function (){var G__161309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161310 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161309,G__161310) : tailrecursion.hoplon.span.call(null,G__161309,G__161310));
})();
var G__161010 = "))\n(";
var G__161011 = (function (){var G__161311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161312 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161311,G__161312) : tailrecursion.hoplon.span.call(null,G__161311,G__161312));
})();
var G__161012 = " ";
var G__161013 = (function (){var G__161313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161314 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161313,G__161314) : tailrecursion.hoplon.span.call(null,G__161313,G__161314));
})();
var G__161014 = " ";
var G__161015 = (function (){var G__161315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161316 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161315,G__161316) : tailrecursion.hoplon.span.call(null,G__161315,G__161316));
})();
var G__161016 = ")\n";
var G__161017 = (function (){var G__161317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161318 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161317,G__161318) : tailrecursion.hoplon.span.call(null,G__161317,G__161318));
})();
var G__161018 = "\n";
var G__161019 = (function (){var G__161319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161320 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161319,G__161320) : tailrecursion.hoplon.span.call(null,G__161319,G__161320));
})();
var G__161020 = ",";
var G__161021 = (function (){var G__161321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161322 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161321,G__161322) : tailrecursion.hoplon.span.call(null,G__161321,G__161322));
})();
var G__161022 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302(G__160721,G__160722,G__160723,G__160724,G__160725,G__160726,G__160727,G__160728,G__160729,G__160730,G__160731,G__160732,G__160733,G__160734,G__160735,G__160736,G__160737,G__160738,G__160739,G__160740,G__160741,G__160742,G__160743,G__160744,G__160745,G__160746,G__160747,G__160748,G__160749,G__160750,G__160751,G__160752,G__160753,G__160754,G__160755,G__160756,G__160757,G__160758,G__160759,G__160760,G__160761,G__160762,G__160763,G__160764,G__160765,G__160766,G__160767,G__160768,G__160769,G__160770,G__160771,G__160772,G__160773,G__160774,G__160775,G__160776,G__160777,G__160778,G__160779,G__160780,G__160781,G__160782,G__160783,G__160784,G__160785,G__160786,G__160787,G__160788,G__160789,G__160790,G__160791,G__160792,G__160793,G__160794,G__160795,G__160796,G__160797,G__160798,G__160799,G__160800,G__160801,G__160802,G__160803,G__160804,G__160805,G__160806,G__160807,G__160808,G__160809,G__160810,G__160811,G__160812,G__160813,G__160814,G__160815,G__160816,G__160817,G__160818,G__160819,G__160820,G__160821,G__160822,G__160823,G__160824,G__160825,G__160826,G__160827,G__160828,G__160829,G__160830,G__160831,G__160832,G__160833,G__160834,G__160835,G__160836,G__160837,G__160838,G__160839,G__160840,G__160841,G__160842,G__160843,G__160844,G__160845,G__160846,G__160847,G__160848,G__160849,G__160850,G__160851,G__160852,G__160853,G__160854,G__160855,G__160856,G__160857,G__160858,G__160859,G__160860,G__160861,G__160862,G__160863,G__160864,G__160865,G__160866,G__160867,G__160868,G__160869,G__160870,G__160871,G__160872,G__160873,G__160874,G__160875,G__160876,G__160877,G__160878,G__160879,G__160880,G__160881,G__160882,G__160883,G__160884,G__160885,G__160886,G__160887,G__160888,G__160889,G__160890,G__160891,G__160892,G__160893,G__160894,G__160895,G__160896,G__160897,G__160898,G__160899,G__160900,G__160901,G__160902,G__160903,G__160904,G__160905,G__160906,G__160907,G__160908,G__160909,G__160910,G__160911,G__160912,G__160913,G__160914,G__160915,G__160916,G__160917,G__160918,G__160919,G__160920,G__160921,G__160922,G__160923,G__160924,G__160925,G__160926,G__160927,G__160928,G__160929,G__160930,G__160931,G__160932,G__160933,G__160934,G__160935,G__160936,G__160937,G__160938,G__160939,G__160940,G__160941,G__160942,G__160943,G__160944,G__160945,G__160946,G__160947,G__160948,G__160949,G__160950,G__160951,G__160952,G__160953,G__160954,G__160955,G__160956,G__160957,G__160958,G__160959,G__160960,G__160961,G__160962,G__160963,G__160964,G__160965,G__160966,G__160967,G__160968,G__160969,G__160970,G__160971,G__160972,G__160973,G__160974,G__160975,G__160976,G__160977,G__160978,G__160979,G__160980,G__160981,G__160982,G__160983,G__160984,G__160985,G__160986,G__160987,G__160988,G__160989,G__160990,G__160991,G__160992,G__160993,G__160994,G__160995,G__160996,G__160997,G__160998,G__160999,G__161000,G__161001,G__161002,G__161003,G__161004,G__161005,G__161006,G__161007,G__161008,G__161009,G__161010,G__161011,G__161012,G__161013,G__161014,G__161015,G__161016,G__161017,G__161018,G__161019,G__161020,G__161021,G__161022) : tailrecursion.hoplon.pre.call(null,G__160721,G__160722,G__160723,G__160724,G__160725,G__160726,G__160727,G__160728,G__160729,G__160730,G__160731,G__160732,G__160733,G__160734,G__160735,G__160736,G__160737,G__160738,G__160739,G__160740,G__160741,G__160742,G__160743,G__160744,G__160745,G__160746,G__160747,G__160748,G__160749,G__160750,G__160751,G__160752,G__160753,G__160754,G__160755,G__160756,G__160757,G__160758,G__160759,G__160760,G__160761,G__160762,G__160763,G__160764,G__160765,G__160766,G__160767,G__160768,G__160769,G__160770,G__160771,G__160772,G__160773,G__160774,G__160775,G__160776,G__160777,G__160778,G__160779,G__160780,G__160781,G__160782,G__160783,G__160784,G__160785,G__160786,G__160787,G__160788,G__160789,G__160790,G__160791,G__160792,G__160793,G__160794,G__160795,G__160796,G__160797,G__160798,G__160799,G__160800,G__160801,G__160802,G__160803,G__160804,G__160805,G__160806,G__160807,G__160808,G__160809,G__160810,G__160811,G__160812,G__160813,G__160814,G__160815,G__160816,G__160817,G__160818,G__160819,G__160820,G__160821,G__160822,G__160823,G__160824,G__160825,G__160826,G__160827,G__160828,G__160829,G__160830,G__160831,G__160832,G__160833,G__160834,G__160835,G__160836,G__160837,G__160838,G__160839,G__160840,G__160841,G__160842,G__160843,G__160844,G__160845,G__160846,G__160847,G__160848,G__160849,G__160850,G__160851,G__160852,G__160853,G__160854,G__160855,G__160856,G__160857,G__160858,G__160859,G__160860,G__160861,G__160862,G__160863,G__160864,G__160865,G__160866,G__160867,G__160868,G__160869,G__160870,G__160871,G__160872,G__160873,G__160874,G__160875,G__160876,G__160877,G__160878,G__160879,G__160880,G__160881,G__160882,G__160883,G__160884,G__160885,G__160886,G__160887,G__160888,G__160889,G__160890,G__160891,G__160892,G__160893,G__160894,G__160895,G__160896,G__160897,G__160898,G__160899,G__160900,G__160901,G__160902,G__160903,G__160904,G__160905,G__160906,G__160907,G__160908,G__160909,G__160910,G__160911,G__160912,G__160913,G__160914,G__160915,G__160916,G__160917,G__160918,G__160919,G__160920,G__160921,G__160922,G__160923,G__160924,G__160925,G__160926,G__160927,G__160928,G__160929,G__160930,G__160931,G__160932,G__160933,G__160934,G__160935,G__160936,G__160937,G__160938,G__160939,G__160940,G__160941,G__160942,G__160943,G__160944,G__160945,G__160946,G__160947,G__160948,G__160949,G__160950,G__160951,G__160952,G__160953,G__160954,G__160955,G__160956,G__160957,G__160958,G__160959,G__160960,G__160961,G__160962,G__160963,G__160964,G__160965,G__160966,G__160967,G__160968,G__160969,G__160970,G__160971,G__160972,G__160973,G__160974,G__160975,G__160976,G__160977,G__160978,G__160979,G__160980,G__160981,G__160982,G__160983,G__160984,G__160985,G__160986,G__160987,G__160988,G__160989,G__160990,G__160991,G__160992,G__160993,G__160994,G__160995,G__160996,G__160997,G__160998,G__160999,G__161000,G__161001,G__161002,G__161003,G__161004,G__161005,G__161006,G__161007,G__161008,G__161009,G__161010,G__161011,G__161012,G__161013,G__161014,G__161015,G__161016,G__161017,G__161018,G__161019,G__161020,G__161021,G__161022));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__160719,G__160720) : tailrecursion.hoplon.div.call(null,G__160719,G__160720));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__160718) : tailrecursion.hoplon.div.call(null,G__160718));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160716;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_160715;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_160714;
}})()], 0)),(function (){var _STAR_references_STAR_161323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_161325 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161326 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161327 = cljs.core.PersistentArrayMap.EMPTY;
var G__161328 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the following procedures, where ",(function (){var G__161329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"A"], null);
var G__161330 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161329,G__161330) : tailrecursion.hoplon.markdown.code_node.call(null,G__161329,G__161330));
})()," is the procedure defined above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161327,G__161328) : tailrecursion.hoplon.markdown.para_node.call(null,G__161327,G__161328));
})(),(function (){var G__161331 = (function (){var G__161332 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161333 = (function (){var G__161334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161335 = "(";
var G__161336 = (function (){var G__161347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161348 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161347,G__161348) : tailrecursion.hoplon.span.call(null,G__161347,G__161348));
})();
var G__161337 = (function (){var G__161349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161350 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161349,G__161350) : tailrecursion.hoplon.span.call(null,G__161349,G__161350));
})();
var G__161338 = " [";
var G__161339 = (function (){var G__161351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161352 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161351,G__161352) : tailrecursion.hoplon.span.call(null,G__161351,G__161352));
})();
var G__161340 = "] (";
var G__161341 = (function (){var G__161353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161354 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161353,G__161354) : tailrecursion.hoplon.span.call(null,G__161353,G__161354));
})();
var G__161342 = " ";
var G__161343 = (function (){var G__161355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161356 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161355,G__161356) : tailrecursion.hoplon.span.call(null,G__161355,G__161356));
})();
var G__161344 = " ";
var G__161345 = (function (){var G__161357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161358 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161357,G__161358) : tailrecursion.hoplon.span.call(null,G__161357,G__161358));
})();
var G__161346 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__161334,G__161335,G__161336,G__161337,G__161338,G__161339,G__161340,G__161341,G__161342,G__161343,G__161344,G__161345,G__161346) : tailrecursion.hoplon.pre.call(null,G__161334,G__161335,G__161336,G__161337,G__161338,G__161339,G__161340,G__161341,G__161342,G__161343,G__161344,G__161345,G__161346));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161332,G__161333) : tailrecursion.hoplon.div.call(null,G__161332,G__161333));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161331) : tailrecursion.hoplon.div.call(null,G__161331));
})(),(function (){var G__161359 = (function (){var G__161360 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161361 = (function (){var G__161362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161363 = "(";
var G__161364 = (function (){var G__161375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161376 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161375,G__161376) : tailrecursion.hoplon.span.call(null,G__161375,G__161376));
})();
var G__161365 = (function (){var G__161377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161378 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161377,G__161378) : tailrecursion.hoplon.span.call(null,G__161377,G__161378));
})();
var G__161366 = " [";
var G__161367 = (function (){var G__161379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161380 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161379,G__161380) : tailrecursion.hoplon.span.call(null,G__161379,G__161380));
})();
var G__161368 = "] (";
var G__161369 = (function (){var G__161381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161382 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161381,G__161382) : tailrecursion.hoplon.span.call(null,G__161381,G__161382));
})();
var G__161370 = " ";
var G__161371 = (function (){var G__161383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161384 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161383,G__161384) : tailrecursion.hoplon.span.call(null,G__161383,G__161384));
})();
var G__161372 = " ";
var G__161373 = (function (){var G__161385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161386 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161385,G__161386) : tailrecursion.hoplon.span.call(null,G__161385,G__161386));
})();
var G__161374 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__161362,G__161363,G__161364,G__161365,G__161366,G__161367,G__161368,G__161369,G__161370,G__161371,G__161372,G__161373,G__161374) : tailrecursion.hoplon.pre.call(null,G__161362,G__161363,G__161364,G__161365,G__161366,G__161367,G__161368,G__161369,G__161370,G__161371,G__161372,G__161373,G__161374));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161360,G__161361) : tailrecursion.hoplon.div.call(null,G__161360,G__161361));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161359) : tailrecursion.hoplon.div.call(null,G__161359));
})(),(function (){var G__161387 = (function (){var G__161388 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161389 = (function (){var G__161390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161391 = "(";
var G__161392 = (function (){var G__161403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161404 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161403,G__161404) : tailrecursion.hoplon.span.call(null,G__161403,G__161404));
})();
var G__161393 = (function (){var G__161405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161406 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161405,G__161406) : tailrecursion.hoplon.span.call(null,G__161405,G__161406));
})();
var G__161394 = " [";
var G__161395 = (function (){var G__161407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161408 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161407,G__161408) : tailrecursion.hoplon.span.call(null,G__161407,G__161408));
})();
var G__161396 = "] (";
var G__161397 = (function (){var G__161409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161410 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161409,G__161410) : tailrecursion.hoplon.span.call(null,G__161409,G__161410));
})();
var G__161398 = " ";
var G__161399 = (function (){var G__161411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161412 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161411,G__161412) : tailrecursion.hoplon.span.call(null,G__161411,G__161412));
})();
var G__161400 = " ";
var G__161401 = (function (){var G__161413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161414 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161413,G__161414) : tailrecursion.hoplon.span.call(null,G__161413,G__161414));
})();
var G__161402 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__161390,G__161391,G__161392,G__161393,G__161394,G__161395,G__161396,G__161397,G__161398,G__161399,G__161400,G__161401,G__161402) : tailrecursion.hoplon.pre.call(null,G__161390,G__161391,G__161392,G__161393,G__161394,G__161395,G__161396,G__161397,G__161398,G__161399,G__161400,G__161401,G__161402));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161388,G__161389) : tailrecursion.hoplon.div.call(null,G__161388,G__161389));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161387) : tailrecursion.hoplon.div.call(null,G__161387));
})(),(function (){var G__161415 = (function (){var G__161416 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161417 = (function (){var G__161418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161419 = "(";
var G__161420 = (function (){var G__161432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161433 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161432,G__161433) : tailrecursion.hoplon.span.call(null,G__161432,G__161433));
})();
var G__161421 = (function (){var G__161434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161435 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161434,G__161435) : tailrecursion.hoplon.span.call(null,G__161434,G__161435));
})();
var G__161422 = " [";
var G__161423 = (function (){var G__161436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161437 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161436,G__161437) : tailrecursion.hoplon.span.call(null,G__161436,G__161437));
})();
var G__161424 = "] (";
var G__161425 = (function (){var G__161438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161439 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161438,G__161439) : tailrecursion.hoplon.span.call(null,G__161438,G__161439));
})();
var G__161426 = (function (){var G__161440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161441 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161440,G__161441) : tailrecursion.hoplon.span.call(null,G__161440,G__161441));
})();
var G__161427 = " ";
var G__161428 = (function (){var G__161442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161443 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161442,G__161443) : tailrecursion.hoplon.span.call(null,G__161442,G__161443));
})();
var G__161429 = " ";
var G__161430 = (function (){var G__161444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161445 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161444,G__161445) : tailrecursion.hoplon.span.call(null,G__161444,G__161445));
})();
var G__161431 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__161418,G__161419,G__161420,G__161421,G__161422,G__161423,G__161424,G__161425,G__161426,G__161427,G__161428,G__161429,G__161430,G__161431) : tailrecursion.hoplon.pre.call(null,G__161418,G__161419,G__161420,G__161421,G__161422,G__161423,G__161424,G__161425,G__161426,G__161427,G__161428,G__161429,G__161430,G__161431));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161416,G__161417) : tailrecursion.hoplon.div.call(null,G__161416,G__161417));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161415) : tailrecursion.hoplon.div.call(null,G__161415));
})(),(function (){var G__161446 = cljs.core.PersistentArrayMap.EMPTY;
var G__161447 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give concise mathematical definitions for the functions computed by the procedures ",(function (){var G__161448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"f"], null);
var G__161449 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161448,G__161449) : tailrecursion.hoplon.markdown.code_node.call(null,G__161448,G__161449));
})(),",",(function (){var G__161450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"g"], null);
var G__161451 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161450,G__161451) : tailrecursion.hoplon.markdown.code_node.call(null,G__161450,G__161451));
})(),", and ",(function (){var G__161452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"h"], null);
var G__161453 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161452,G__161453) : tailrecursion.hoplon.markdown.code_node.call(null,G__161452,G__161453));
})()," for positive integer values of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". For example, ",(function (){var G__161454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(k n)"], null);
var G__161455 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161454,G__161455) : tailrecursion.hoplon.markdown.code_node.call(null,G__161454,G__161455));
})()," computes \\(5n^2\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161446,G__161447) : tailrecursion.hoplon.markdown.para_node.call(null,G__161446,G__161447));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161326;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161325;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161323;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_161456 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161457 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_161458 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161459 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161460 = cljs.core.PersistentArrayMap.EMPTY;
var G__161461 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(f n)"], null);
var G__161463 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161462,G__161463) : tailrecursion.hoplon.markdown.code_node.call(null,G__161462,G__161463));
})(),"\\(= 2n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161460,G__161461) : tailrecursion.hoplon.markdown.para_node.call(null,G__161460,G__161461));
})(),(function (){var G__161464 = cljs.core.PersistentArrayMap.EMPTY;
var G__161465 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(g n)"], null);
var G__161467 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161466,G__161467) : tailrecursion.hoplon.markdown.code_node.call(null,G__161466,G__161467));
})(),"\\(=2^n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161464,G__161465) : tailrecursion.hoplon.markdown.para_node.call(null,G__161464,G__161465));
})(),(function (){var G__161468 = cljs.core.PersistentArrayMap.EMPTY;
var G__161469 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(h n)"], null);
var G__161471 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161470,G__161471) : tailrecursion.hoplon.markdown.code_node.call(null,G__161470,G__161471));
})(),"\\(=2^{2^{",(function (){var G__161472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__161473 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161472,G__161473) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161472,G__161473));
})(),"^{2}}}\\), or alternatively, ",(function (){var G__161474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(h n)"], null);
var G__161475 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161474,G__161475) : tailrecursion.hoplon.markdown.code_node.call(null,G__161474,G__161475));
})(),"\\(= 2^{(h (n-1))}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161468,G__161469) : tailrecursion.hoplon.markdown.para_node.call(null,G__161468,G__161469));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161459;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161458;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161457;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161456;
}})()], 0))], 0))], 0));
var G__158000 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Tree Recursion"], null),(function (){var _STAR_references_STAR_161476 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161477 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_161478 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161479 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161480 = cljs.core.PersistentArrayMap.EMPTY;
var G__161481 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another common pattern of computation is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tree recursion"], null)], 0)),". As an example, consider computing the sequence of Fibonacci numbers, in which each number is the sum of the preceeding two:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161480,G__161481) : tailrecursion.hoplon.markdown.para_node.call(null,G__161480,G__161481));
})(),(function (){var G__161482 = cljs.core.PersistentArrayMap.EMPTY;
var G__161483 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$0, 1, 1, 2, 3, 5, 8, 13, 21, ",(function (){var G__161484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__161485 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161484,G__161485) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161484,G__161485));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161482,G__161483) : tailrecursion.hoplon.markdown.para_node.call(null,G__161482,G__161483));
})(),(function (){var G__161486 = cljs.core.PersistentArrayMap.EMPTY;
var G__161487 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, the Fibonacci numbers can be defined by the rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161486,G__161487) : tailrecursion.hoplon.markdown.para_node.call(null,G__161486,G__161487));
})(),(function (){var G__161488 = cljs.core.PersistentArrayMap.EMPTY;
var G__161489 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\text{fib}(n)=\\begin{cases} 0 &\\text{ if } n=0\\cr 1 &\\text{ if } n=1 \\cr \\text{fib}(n-1)+\\text{ fib}(n-2) &\\text{ otherwise }\\end{cases}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161488,G__161489) : tailrecursion.hoplon.markdown.para_node.call(null,G__161488,G__161489));
})(),(function (){var G__161490 = cljs.core.PersistentArrayMap.EMPTY;
var G__161491 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can immediately translate this definition into a recursive procedure for computing Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161490,G__161491) : tailrecursion.hoplon.markdown.para_node.call(null,G__161490,G__161491));
})(),(function (){var G__161492 = (function (){var G__161493 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161494 = (function (){var G__161495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161496 = "(";
var G__161497 = (function (){var G__161536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161537 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161536,G__161537) : tailrecursion.hoplon.span.call(null,G__161536,G__161537));
})();
var G__161498 = (function (){var G__161538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161539 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161538,G__161539) : tailrecursion.hoplon.span.call(null,G__161538,G__161539));
})();
var G__161499 = " [";
var G__161500 = (function (){var G__161540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161541 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161540,G__161541) : tailrecursion.hoplon.span.call(null,G__161540,G__161541));
})();
var G__161501 = "]\n  (";
var G__161502 = (function (){var G__161542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161543 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161542,G__161543) : tailrecursion.hoplon.span.call(null,G__161542,G__161543));
})();
var G__161503 = "(";
var G__161504 = (function (){var G__161544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161545 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161544,G__161545) : tailrecursion.hoplon.span.call(null,G__161544,G__161545));
})();
var G__161505 = (function (){var G__161546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161547 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161546,G__161547) : tailrecursion.hoplon.span.call(null,G__161546,G__161547));
})();
var G__161506 = " ";
var G__161507 = (function (){var G__161548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161549 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161548,G__161549) : tailrecursion.hoplon.span.call(null,G__161548,G__161549));
})();
var G__161508 = ") ";
var G__161509 = (function (){var G__161550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161551 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161550,G__161551) : tailrecursion.hoplon.span.call(null,G__161550,G__161551));
})();
var G__161510 = "\n        (";
var G__161511 = (function (){var G__161552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161553 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161552,G__161553) : tailrecursion.hoplon.span.call(null,G__161552,G__161553));
})();
var G__161512 = (function (){var G__161554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161555 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161554,G__161555) : tailrecursion.hoplon.span.call(null,G__161554,G__161555));
})();
var G__161513 = " ";
var G__161514 = (function (){var G__161556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161557 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161556,G__161557) : tailrecursion.hoplon.span.call(null,G__161556,G__161557));
})();
var G__161515 = ") ";
var G__161516 = (function (){var G__161558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161559 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161558,G__161559) : tailrecursion.hoplon.span.call(null,G__161558,G__161559));
})();
var G__161517 = "\n        ";
var G__161518 = (function (){var G__161560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161561 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161560,G__161561) : tailrecursion.hoplon.span.call(null,G__161560,G__161561));
})();
var G__161519 = " (";
var G__161520 = (function (){var G__161562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161563 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161562,G__161563) : tailrecursion.hoplon.span.call(null,G__161562,G__161563));
})();
var G__161521 = "(";
var G__161522 = (function (){var G__161564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161565 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161564,G__161565) : tailrecursion.hoplon.span.call(null,G__161564,G__161565));
})();
var G__161523 = " (";
var G__161524 = (function (){var G__161566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161567 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161566,G__161567) : tailrecursion.hoplon.span.call(null,G__161566,G__161567));
})();
var G__161525 = (function (){var G__161568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161569 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161568,G__161569) : tailrecursion.hoplon.span.call(null,G__161568,G__161569));
})();
var G__161526 = " ";
var G__161527 = (function (){var G__161570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161571 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161570,G__161571) : tailrecursion.hoplon.span.call(null,G__161570,G__161571));
})();
var G__161528 = "))\n                 (";
var G__161529 = (function (){var G__161572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161573 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161572,G__161573) : tailrecursion.hoplon.span.call(null,G__161572,G__161573));
})();
var G__161530 = " (";
var G__161531 = (function (){var G__161574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161575 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161574,G__161575) : tailrecursion.hoplon.span.call(null,G__161574,G__161575));
})();
var G__161532 = (function (){var G__161576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161577 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161576,G__161577) : tailrecursion.hoplon.span.call(null,G__161576,G__161577));
})();
var G__161533 = " ";
var G__161534 = (function (){var G__161578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161579 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161578,G__161579) : tailrecursion.hoplon.span.call(null,G__161578,G__161579));
})();
var G__161535 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__161495,G__161496,G__161497,G__161498,G__161499,G__161500,G__161501,G__161502,G__161503,G__161504,G__161505,G__161506,G__161507,G__161508,G__161509,G__161510,G__161511,G__161512,G__161513,G__161514,G__161515,G__161516,G__161517,G__161518,G__161519,G__161520,G__161521,G__161522,G__161523,G__161524,G__161525,G__161526,G__161527,G__161528,G__161529,G__161530,G__161531,G__161532,G__161533,G__161534,G__161535) : tailrecursion.hoplon.pre.call(null,G__161495,G__161496,G__161497,G__161498,G__161499,G__161500,G__161501,G__161502,G__161503,G__161504,G__161505,G__161506,G__161507,G__161508,G__161509,G__161510,G__161511,G__161512,G__161513,G__161514,G__161515,G__161516,G__161517,G__161518,G__161519,G__161520,G__161521,G__161522,G__161523,G__161524,G__161525,G__161526,G__161527,G__161528,G__161529,G__161530,G__161531,G__161532,G__161533,G__161534,G__161535));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161493,G__161494) : tailrecursion.hoplon.div.call(null,G__161493,G__161494));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161492) : tailrecursion.hoplon.div.call(null,G__161492));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161479;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161478;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161477;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161476;
}})(),"",content.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$footer,"The tree-recursive process generated in computing (fib 5)"], null)], 0)),"",(function (){var _STAR_references_STAR_161580 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161581 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_161582 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161583 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161584 = cljs.core.PersistentArrayMap.EMPTY;
var G__161585 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the pattern of this computation. To compute ",(function (){var G__161586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 5)"], null);
var G__161587 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161586,G__161587) : tailrecursion.hoplon.markdown.code_node.call(null,G__161586,G__161587));
})(),", we compute ",(function (){var G__161588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 4)"], null);
var G__161589 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161588,G__161589) : tailrecursion.hoplon.markdown.code_node.call(null,G__161588,G__161589));
})()," and ",(function (){var G__161590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 3)"], null);
var G__161591 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161590,G__161591) : tailrecursion.hoplon.markdown.code_node.call(null,G__161590,G__161591));
})(),". To compute ",(function (){var G__161592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 4)"], null);
var G__161593 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161592,G__161593) : tailrecursion.hoplon.markdown.code_node.call(null,G__161592,G__161593));
})(),", we compute ",(function (){var G__161594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib\n3)"], null);
var G__161595 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161594,G__161595) : tailrecursion.hoplon.markdown.code_node.call(null,G__161594,G__161595));
})()," and ",(function (){var G__161596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 2)"], null);
var G__161597 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161596,G__161597) : tailrecursion.hoplon.markdown.code_node.call(null,G__161596,G__161597));
})(),". In general, the evolved process looks like a tree, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0)),". Notice that the branches split into two at each level (except at the bottom); this reflects the fact that the ",(function (){var G__161598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib"], null);
var G__161599 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161598,G__161599) : tailrecursion.hoplon.markdown.code_node.call(null,G__161598,G__161599));
})()," procedure calls itself twice each time it is invoked."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161584,G__161585) : tailrecursion.hoplon.markdown.para_node.call(null,G__161584,G__161585));
})(),(function (){var G__161600 = cljs.core.PersistentArrayMap.EMPTY;
var G__161601 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This procedure is instructive as a prototypical tree recursion, but it is a terrible way to compute Fibonacci numbers because it does so much redundant computation. Notice in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/figure/1-5",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0))," that the entire computation of ",(function (){var G__161602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 3)"], null);
var G__161603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161602,G__161603) : tailrecursion.hoplon.markdown.code_node.call(null,G__161602,G__161603));
})()," ",(function (){var G__161604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__161605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161604,G__161605) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161604,G__161605));
})()," almost half the work ",(function (){var G__161606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__161607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161606,G__161607) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161606,G__161607));
})()," is dubplicated. In fact, it is not hard to show that the number of times the procedure will compute ",(function (){var G__161608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 1)"], null);
var G__161609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161608,G__161609) : tailrecursion.hoplon.markdown.code_node.call(null,G__161608,G__161609));
})()," or ",(function (){var G__161610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(fib 0)"], null);
var G__161611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161610,G__161611) : tailrecursion.hoplon.markdown.code_node.call(null,G__161610,G__161611));
})()," (the number of leaves in the above tree, in general) is precisely ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n+1)"], null)], 0)),". To get an idea of how bad this is, one can show that the value of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fiv(n)"], null)], 0))," grows exponentially with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More precisely (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/ex/13",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.13"], null)], 0)),"), ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n)"], null)], 0))," is the closest integer to \\(\\phi^n/\\sqrt5\\), where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161600,G__161601) : tailrecursion.hoplon.markdown.para_node.call(null,G__161600,G__161601));
})(),(function (){var G__161612 = cljs.core.PersistentArrayMap.EMPTY;
var G__161613 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi=\\left(1+\\sqrt5\\right)/2\\approx1.6180",(function (){var G__161614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__161615 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161614,G__161615) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161614,G__161615));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161612,G__161613) : tailrecursion.hoplon.markdown.para_node.call(null,G__161612,G__161613));
})(),(function (){var G__161616 = cljs.core.PersistentArrayMap.EMPTY;
var G__161617 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["golden ratio"], null)], 0)),", which satisfies the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161616,G__161617) : tailrecursion.hoplon.markdown.para_node.call(null,G__161616,G__161617));
})(),(function (){var G__161618 = cljs.core.PersistentArrayMap.EMPTY;
var G__161619 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi^2=\\phi+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161618,G__161619) : tailrecursion.hoplon.markdown.para_node.call(null,G__161618,G__161619));
})(),(function (){var G__161620 = cljs.core.PersistentArrayMap.EMPTY;
var G__161621 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, the process uses a number of steps that grows exponentially with the input. On the other hand, the space required gows only linearly with the input, because we need keep track only of which nodes are above us in the tree at any point in the computation. In general, the number of steps required by a tree-recursive process will be proportional to the number of nodes in the tree, while the space requrired will be proportional to the maximum depth of the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161620,G__161621) : tailrecursion.hoplon.markdown.para_node.call(null,G__161620,G__161621));
})(),(function (){var G__161622 = cljs.core.PersistentArrayMap.EMPTY;
var G__161623 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can also formulate an iterative process for computing the Fibonacci numbers. The idea is to use a pair of integers ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b"], null)], 0)),", initialized to \\(Fib(0)=0\\) and \\(Fib(1)=1\\), and to repeatedly apply the simultaneous transformations"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161622,G__161623) : tailrecursion.hoplon.markdown.para_node.call(null,G__161622,G__161623));
})(),(function (){var G__161624 = cljs.core.PersistentArrayMap.EMPTY;
var G__161625 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} a \\rightarrow & b \\cr b \\rightarrow & a + b\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161624,G__161625) : tailrecursion.hoplon.markdown.para_node.call(null,G__161624,G__161625));
})(),(function (){var G__161626 = cljs.core.PersistentArrayMap.EMPTY;
var G__161627 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is not hard to show that, after applying this transformation \\(n\\) times, \\(a\\) and \\(b\\) will be equal, respectively, to \\(Fib(n)\\) and \\(Fib(n+1)\\). Thus, we can compute Fibonacci numbers iteratively using the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161626,G__161627) : tailrecursion.hoplon.markdown.para_node.call(null,G__161626,G__161627));
})(),(function (){var G__161628 = (function (){var G__161629 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161630 = (function (){var G__161631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161632 = "(";
var G__161633 = (function (){var G__161674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161675 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161674,G__161675) : tailrecursion.hoplon.span.call(null,G__161674,G__161675));
})();
var G__161634 = (function (){var G__161676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161677 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161676,G__161677) : tailrecursion.hoplon.span.call(null,G__161676,G__161677));
})();
var G__161635 = " [";
var G__161636 = (function (){var G__161678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161679 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161678,G__161679) : tailrecursion.hoplon.span.call(null,G__161678,G__161679));
})();
var G__161637 = " ";
var G__161638 = (function (){var G__161680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161681 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161680,G__161681) : tailrecursion.hoplon.span.call(null,G__161680,G__161681));
})();
var G__161639 = " ";
var G__161640 = (function (){var G__161682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161683 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161682,G__161683) : tailrecursion.hoplon.span.call(null,G__161682,G__161683));
})();
var G__161641 = "]\n  (";
var G__161642 = (function (){var G__161684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161685 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161684,G__161685) : tailrecursion.hoplon.span.call(null,G__161684,G__161685));
})();
var G__161643 = "(";
var G__161644 = (function (){var G__161686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161687 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161686,G__161687) : tailrecursion.hoplon.span.call(null,G__161686,G__161687));
})();
var G__161645 = (function (){var G__161688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161689 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161688,G__161689) : tailrecursion.hoplon.span.call(null,G__161688,G__161689));
})();
var G__161646 = ")\n      ";
var G__161647 = (function (){var G__161690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161691 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161690,G__161691) : tailrecursion.hoplon.span.call(null,G__161690,G__161691));
})();
var G__161648 = "\n      (";
var G__161649 = (function (){var G__161692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161693 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161692,G__161693) : tailrecursion.hoplon.span.call(null,G__161692,G__161693));
})();
var G__161650 = " ";
var G__161651 = (function (){var G__161694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161695 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161694,G__161695) : tailrecursion.hoplon.span.call(null,G__161694,G__161695));
})();
var G__161652 = " (";
var G__161653 = (function (){var G__161696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161697 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161696,G__161697) : tailrecursion.hoplon.span.call(null,G__161696,G__161697));
})();
var G__161654 = (function (){var G__161698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161699 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161698,G__161699) : tailrecursion.hoplon.span.call(null,G__161698,G__161699));
})();
var G__161655 = " ";
var G__161656 = (function (){var G__161700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161701 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161700,G__161701) : tailrecursion.hoplon.span.call(null,G__161700,G__161701));
})();
var G__161657 = ") (";
var G__161658 = (function (){var G__161702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161703 = "- count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161702,G__161703) : tailrecursion.hoplon.span.call(null,G__161702,G__161703));
})();
var G__161659 = (function (){var G__161704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161705 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161704,G__161705) : tailrecursion.hoplon.span.call(null,G__161704,G__161705));
})();
var G__161660 = "))))\n(";
var G__161661 = (function (){var G__161706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161707 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161706,G__161707) : tailrecursion.hoplon.span.call(null,G__161706,G__161707));
})();
var G__161662 = (function (){var G__161708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161709 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161708,G__161709) : tailrecursion.hoplon.span.call(null,G__161708,G__161709));
})();
var G__161663 = " [";
var G__161664 = (function (){var G__161710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161711 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161710,G__161711) : tailrecursion.hoplon.span.call(null,G__161710,G__161711));
})();
var G__161665 = "]\n  (";
var G__161666 = (function (){var G__161712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161713 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161712,G__161713) : tailrecursion.hoplon.span.call(null,G__161712,G__161713));
})();
var G__161667 = " ";
var G__161668 = (function (){var G__161714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161715 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161714,G__161715) : tailrecursion.hoplon.span.call(null,G__161714,G__161715));
})();
var G__161669 = " ";
var G__161670 = (function (){var G__161716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161717 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161716,G__161717) : tailrecursion.hoplon.span.call(null,G__161716,G__161717));
})();
var G__161671 = " ";
var G__161672 = (function (){var G__161718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161719 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161718,G__161719) : tailrecursion.hoplon.span.call(null,G__161718,G__161719));
})();
var G__161673 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__161631,G__161632,G__161633,G__161634,G__161635,G__161636,G__161637,G__161638,G__161639,G__161640,G__161641,G__161642,G__161643,G__161644,G__161645,G__161646,G__161647,G__161648,G__161649,G__161650,G__161651,G__161652,G__161653,G__161654,G__161655,G__161656,G__161657,G__161658,G__161659,G__161660,G__161661,G__161662,G__161663,G__161664,G__161665,G__161666,G__161667,G__161668,G__161669,G__161670,G__161671,G__161672,G__161673) : tailrecursion.hoplon.pre.call(null,G__161631,G__161632,G__161633,G__161634,G__161635,G__161636,G__161637,G__161638,G__161639,G__161640,G__161641,G__161642,G__161643,G__161644,G__161645,G__161646,G__161647,G__161648,G__161649,G__161650,G__161651,G__161652,G__161653,G__161654,G__161655,G__161656,G__161657,G__161658,G__161659,G__161660,G__161661,G__161662,G__161663,G__161664,G__161665,G__161666,G__161667,G__161668,G__161669,G__161670,G__161671,G__161672,G__161673));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161629,G__161630) : tailrecursion.hoplon.div.call(null,G__161629,G__161630));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161628) : tailrecursion.hoplon.div.call(null,G__161628));
})(),(function (){var G__161720 = cljs.core.PersistentArrayMap.EMPTY;
var G__161721 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This second method for computing \\(Fib(n)\\) is a linear iteration. The difference in number of steps required by the two methods ",(function (){var G__161722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__161723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161722,G__161723) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161722,G__161723));
})(),"one linear in \\(n\\), one growing as fast as \\(Fib(n)\\) itself ",(function (){var G__161724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__161725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161724,G__161725) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161724,G__161725));
})()," is enormous, even for small inputs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161720,G__161721) : tailrecursion.hoplon.markdown.para_node.call(null,G__161720,G__161721));
})(),(function (){var G__161726 = cljs.core.PersistentArrayMap.EMPTY;
var G__161727 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One should not conclude from this that tree-recursive processes are useless. When we consider processes that operate on hierarchially structured data rather than numbers, we will find that tree recursion is a natural and powerful tool.",(function (){var G__161728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__161729 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["An example of this was hinted at in section 1.1.3: The interpreter itself evaluates expressions using a tree-recursive process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__161728,G__161729) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__161728,G__161729));
})()," But even in numerical operations, tree-recursive processes can be useful in helping us to understand and design programs. For instance, although the first ",(function (){var G__161730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib"], null);
var G__161731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__161730,G__161731) : tailrecursion.hoplon.markdown.code_node.call(null,G__161730,G__161731));
})()," procedure is much less efficient than the second one, it is more straightforward, being little more than a translation into Lisp of the definition of the Fibonacci sequence. To formulate the iterative algorithm required noticing that the computation could be recast as an iteration with three state variables."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161726,G__161727) : tailrecursion.hoplon.markdown.para_node.call(null,G__161726,G__161727));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161583;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161582;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161581;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161580;
}})()], 0));
var G__158001 = "";
var G__158002 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: Counting Change"], null),(function (){var _STAR_references_STAR_161732 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161733 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_161734 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161735 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161736 = cljs.core.PersistentArrayMap.EMPTY;
var G__161737 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It takes only a bit of cleverness to come up with the iterative Fibonacci algorithm. In contrast, consider the following problem: How many different ways can we make change of $1.00, given half-dollars, quarters, dimes, nickels, and pennies? More generally, can we write a procedure to compute the number of ways to change any given amount of money?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161736,G__161737) : tailrecursion.hoplon.markdown.para_node.call(null,G__161736,G__161737));
})(),(function (){var G__161738 = cljs.core.PersistentArrayMap.EMPTY;
var G__161739 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This problem has a simple solution as a recursive procedure. Suppose we think of the types of coins available as arranged in some order. Then the following relation holds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161738,G__161739) : tailrecursion.hoplon.markdown.para_node.call(null,G__161738,G__161739));
})(),(function (){var G__161740 = cljs.core.PersistentArrayMap.EMPTY;
var G__161741 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a\\) using \\(n\\) kinds of coins equals"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161740,G__161741) : tailrecursion.hoplon.markdown.para_node.call(null,G__161740,G__161741));
})(),(function (){var G__161742 = cljs.core.PersistentArrayMap.EMPTY;
var G__161743 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161744 = cljs.core.PersistentArrayMap.EMPTY;
var G__161745 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161746 = cljs.core.PersistentArrayMap.EMPTY;
var G__161747 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [" The number of ways to change amount \\(a\\) using all but the first kind of coin, plus"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161746,G__161747) : tailrecursion.hoplon.markdown.para_node.call(null,G__161746,G__161747));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__161744,G__161745) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__161744,G__161745));
})(),(function (){var G__161748 = cljs.core.PersistentArrayMap.EMPTY;
var G__161749 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_161750 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161751 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161752 = cljs.core.PersistentArrayMap.EMPTY;
var G__161753 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a-d\\) using all \\(n\\) kinds of coins, where \\(d\\) is the denomination of the first kind of coin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161752,G__161753) : tailrecursion.hoplon.markdown.para_node.call(null,G__161752,G__161753));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161751;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161750;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__161748,G__161749) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__161748,G__161749));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__161742,G__161743) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__161742,G__161743));
})(),(function (){var G__161754 = cljs.core.PersistentArrayMap.EMPTY;
var G__161755 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To see why this is true, observe that the ways to make change can be divided into two groups: those that do not use any of the first kind, and those that do. Therefore, the total number of ways to make change for some amount is equal to the number of ways to make change for the amount without using any of the first kind of coin, plus the number of ways to make change assuming that we do use the first kind of coin. But the latter number is equal to the number of ways to make change for the amount that remains after using a coin of the first kind."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161754,G__161755) : tailrecursion.hoplon.markdown.para_node.call(null,G__161754,G__161755));
})(),(function (){var G__161756 = cljs.core.PersistentArrayMap.EMPTY;
var G__161757 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, we can recursively reduce the problem of changing a give amount to the problem of changing smaller amounts using fewer kinds of coins. Consider this reduction rule carefully, and convince yourself that we can use it to describe an algorithm if we specify the following degenerate cases:",(function (){var G__161758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__161759 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, work through in detail how the reduction rule applies to the problem of making change for 10 cents using pennies and nickels."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__161758,G__161759) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__161758,G__161759));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161756,G__161757) : tailrecursion.hoplon.markdown.para_node.call(null,G__161756,G__161757));
})(),(function (){var G__161760 = cljs.core.PersistentArrayMap.EMPTY;
var G__161761 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161762 = cljs.core.PersistentArrayMap.EMPTY;
var G__161763 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161764 = cljs.core.PersistentArrayMap.EMPTY;
var G__161765 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is exactly 0, we should count that as 1 way to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161764,G__161765) : tailrecursion.hoplon.markdown.para_node.call(null,G__161764,G__161765));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__161762,G__161763) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__161762,G__161763));
})(),(function (){var G__161766 = cljs.core.PersistentArrayMap.EMPTY;
var G__161767 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_161768 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161769 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161770 = cljs.core.PersistentArrayMap.EMPTY;
var G__161771 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is less than 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161770,G__161771) : tailrecursion.hoplon.markdown.para_node.call(null,G__161770,G__161771));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161769;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161768;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__161766,G__161767) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__161766,G__161767));
})(),(function (){var G__161772 = cljs.core.PersistentArrayMap.EMPTY;
var G__161773 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_161774 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_161775 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__161776 = cljs.core.PersistentArrayMap.EMPTY;
var G__161777 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161776,G__161777) : tailrecursion.hoplon.markdown.para_node.call(null,G__161776,G__161777));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161775;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161774;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__161772,G__161773) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__161772,G__161773));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__161760,G__161761) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__161760,G__161761));
})(),(function (){var G__161778 = cljs.core.PersistentArrayMap.EMPTY;
var G__161779 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can easily translate this description into a recursive procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161778,G__161779) : tailrecursion.hoplon.markdown.para_node.call(null,G__161778,G__161779));
})(),(function (){var G__161780 = (function (){var G__161781 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161782 = (function (){var G__161783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161784 = "(";
var G__161785 = (function (){var G__161796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161797 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161796,G__161797) : tailrecursion.hoplon.span.call(null,G__161796,G__161797));
})();
var G__161786 = (function (){var G__161798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161799 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161798,G__161799) : tailrecursion.hoplon.span.call(null,G__161798,G__161799));
})();
var G__161787 = " [";
var G__161788 = (function (){var G__161800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161801 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161800,G__161801) : tailrecursion.hoplon.span.call(null,G__161800,G__161801));
})();
var G__161789 = "]\n  (";
var G__161790 = (function (){var G__161802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161803 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161802,G__161803) : tailrecursion.hoplon.span.call(null,G__161802,G__161803));
})();
var G__161791 = " ";
var G__161792 = (function (){var G__161804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161805 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161804,G__161805) : tailrecursion.hoplon.span.call(null,G__161804,G__161805));
})();
var G__161793 = " ";
var G__161794 = (function (){var G__161806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161807 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161806,G__161807) : tailrecursion.hoplon.span.call(null,G__161806,G__161807));
})();
var G__161795 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__161783,G__161784,G__161785,G__161786,G__161787,G__161788,G__161789,G__161790,G__161791,G__161792,G__161793,G__161794,G__161795) : tailrecursion.hoplon.pre.call(null,G__161783,G__161784,G__161785,G__161786,G__161787,G__161788,G__161789,G__161790,G__161791,G__161792,G__161793,G__161794,G__161795));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161781,G__161782) : tailrecursion.hoplon.div.call(null,G__161781,G__161782));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161780) : tailrecursion.hoplon.div.call(null,G__161780));
})(),(function (){var G__161808 = cljs.core.PersistentArrayMap.EMPTY;
var G__161809 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["given that we",(function (){var G__161810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__161811 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__161810,G__161811) : tailrecursion.hoplon.markdown.simple_node.call(null,G__161810,G__161811));
})(),"ve defined"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161808,G__161809) : tailrecursion.hoplon.markdown.para_node.call(null,G__161808,G__161809));
})(),(function (){var G__161812 = (function (){var G__161813 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161814 = (function (){var G__161815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161816 = "(";
var G__161817 = (function (){var G__161871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161872 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161871,G__161872) : tailrecursion.hoplon.span.call(null,G__161871,G__161872));
})();
var G__161818 = (function (){var G__161873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161874 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161873,G__161874) : tailrecursion.hoplon.span.call(null,G__161873,G__161874));
})();
var G__161819 = " [";
var G__161820 = (function (){var G__161875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161876 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161875,G__161876) : tailrecursion.hoplon.span.call(null,G__161875,G__161876));
})();
var G__161821 = " ";
var G__161822 = (function (){var G__161877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161878 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161877,G__161878) : tailrecursion.hoplon.span.call(null,G__161877,G__161878));
})();
var G__161823 = "]\n  (";
var G__161824 = (function (){var G__161879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161880 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161879,G__161880) : tailrecursion.hoplon.span.call(null,G__161879,G__161880));
})();
var G__161825 = "(";
var G__161826 = (function (){var G__161881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161882 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161881,G__161882) : tailrecursion.hoplon.span.call(null,G__161881,G__161882));
})();
var G__161827 = (function (){var G__161883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161884 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161883,G__161884) : tailrecursion.hoplon.span.call(null,G__161883,G__161884));
})();
var G__161828 = " ";
var G__161829 = (function (){var G__161885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161886 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161885,G__161886) : tailrecursion.hoplon.span.call(null,G__161885,G__161886));
})();
var G__161830 = ") ";
var G__161831 = (function (){var G__161887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161888 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161887,G__161888) : tailrecursion.hoplon.span.call(null,G__161887,G__161888));
})();
var G__161832 = "\n        (";
var G__161833 = (function (){var G__161889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161890 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161889,G__161890) : tailrecursion.hoplon.span.call(null,G__161889,G__161890));
})();
var G__161834 = "(";
var G__161835 = (function (){var G__161891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161892 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161891,G__161892) : tailrecursion.hoplon.span.call(null,G__161891,G__161892));
})();
var G__161836 = (function (){var G__161893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161894 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161893,G__161894) : tailrecursion.hoplon.span.call(null,G__161893,G__161894));
})();
var G__161837 = " ";
var G__161838 = (function (){var G__161895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161896 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161895,G__161896) : tailrecursion.hoplon.span.call(null,G__161895,G__161896));
})();
var G__161839 = ") (";
var G__161840 = (function (){var G__161897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161898 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161897,G__161898) : tailrecursion.hoplon.span.call(null,G__161897,G__161898));
})();
var G__161841 = (function (){var G__161899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161900 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161899,G__161900) : tailrecursion.hoplon.span.call(null,G__161899,G__161900));
})();
var G__161842 = " ";
var G__161843 = (function (){var G__161901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161902 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161901,G__161902) : tailrecursion.hoplon.span.call(null,G__161901,G__161902));
})();
var G__161844 = ")) ";
var G__161845 = (function (){var G__161903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161904 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161903,G__161904) : tailrecursion.hoplon.span.call(null,G__161903,G__161904));
})();
var G__161846 = "\n        ";
var G__161847 = (function (){var G__161905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161906 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161905,G__161906) : tailrecursion.hoplon.span.call(null,G__161905,G__161906));
})();
var G__161848 = " (";
var G__161849 = (function (){var G__161907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161908 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161907,G__161908) : tailrecursion.hoplon.span.call(null,G__161907,G__161908));
})();
var G__161850 = "(";
var G__161851 = (function (){var G__161909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161910 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161909,G__161910) : tailrecursion.hoplon.span.call(null,G__161909,G__161910));
})();
var G__161852 = " ";
var G__161853 = (function (){var G__161911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161912 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161911,G__161912) : tailrecursion.hoplon.span.call(null,G__161911,G__161912));
})();
var G__161854 = " (";
var G__161855 = (function (){var G__161913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161914 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161913,G__161914) : tailrecursion.hoplon.span.call(null,G__161913,G__161914));
})();
var G__161856 = (function (){var G__161915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161916 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161915,G__161916) : tailrecursion.hoplon.span.call(null,G__161915,G__161916));
})();
var G__161857 = " ";
var G__161858 = (function (){var G__161917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161918 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161917,G__161918) : tailrecursion.hoplon.span.call(null,G__161917,G__161918));
})();
var G__161859 = "))\n                 (";
var G__161860 = (function (){var G__161919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161920 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161919,G__161920) : tailrecursion.hoplon.span.call(null,G__161919,G__161920));
})();
var G__161861 = " (";
var G__161862 = (function (){var G__161921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161922 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161921,G__161922) : tailrecursion.hoplon.span.call(null,G__161921,G__161922));
})();
var G__161863 = (function (){var G__161923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161924 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161923,G__161924) : tailrecursion.hoplon.span.call(null,G__161923,G__161924));
})();
var G__161864 = " (";
var G__161865 = (function (){var G__161925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__161926 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161925,G__161926) : tailrecursion.hoplon.span.call(null,G__161925,G__161926));
})();
var G__161866 = " ";
var G__161867 = (function (){var G__161927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161928 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161927,G__161928) : tailrecursion.hoplon.span.call(null,G__161927,G__161928));
})();
var G__161868 = ")) ";
var G__161869 = (function (){var G__161929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161930 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161929,G__161930) : tailrecursion.hoplon.span.call(null,G__161929,G__161930));
})();
var G__161870 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__161815,G__161816,G__161817,G__161818,G__161819,G__161820,G__161821,G__161822,G__161823,G__161824,G__161825,G__161826,G__161827,G__161828,G__161829,G__161830,G__161831,G__161832,G__161833,G__161834,G__161835,G__161836,G__161837,G__161838,G__161839,G__161840,G__161841,G__161842,G__161843,G__161844,G__161845,G__161846,G__161847,G__161848,G__161849,G__161850,G__161851,G__161852,G__161853,G__161854,G__161855,G__161856,G__161857,G__161858,G__161859,G__161860,G__161861,G__161862,G__161863,G__161864,G__161865,G__161866,G__161867,G__161868,G__161869,G__161870) : tailrecursion.hoplon.pre.call(null,G__161815,G__161816,G__161817,G__161818,G__161819,G__161820,G__161821,G__161822,G__161823,G__161824,G__161825,G__161826,G__161827,G__161828,G__161829,G__161830,G__161831,G__161832,G__161833,G__161834,G__161835,G__161836,G__161837,G__161838,G__161839,G__161840,G__161841,G__161842,G__161843,G__161844,G__161845,G__161846,G__161847,G__161848,G__161849,G__161850,G__161851,G__161852,G__161853,G__161854,G__161855,G__161856,G__161857,G__161858,G__161859,G__161860,G__161861,G__161862,G__161863,G__161864,G__161865,G__161866,G__161867,G__161868,G__161869,G__161870));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161813,G__161814) : tailrecursion.hoplon.div.call(null,G__161813,G__161814));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161812) : tailrecursion.hoplon.div.call(null,G__161812));
})(),(function (){var G__161931 = cljs.core.PersistentArrayMap.EMPTY;
var G__161932 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__161931,G__161932) : tailrecursion.hoplon.markdown.para_node.call(null,G__161931,G__161932));
})(),(function (){var G__161933 = (function (){var G__161934 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__161935 = (function (){var G__161936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__161937 = "(";
var G__161938 = (function (){var G__161980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__161981 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161980,G__161981) : tailrecursion.hoplon.span.call(null,G__161980,G__161981));
})();
var G__161939 = (function (){var G__161982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161983 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161982,G__161983) : tailrecursion.hoplon.span.call(null,G__161982,G__161983));
})();
var G__161940 = " [";
var G__161941 = (function (){var G__161984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161985 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161984,G__161985) : tailrecursion.hoplon.span.call(null,G__161984,G__161985));
})();
var G__161942 = "]\n  (";
var G__161943 = (function (){var G__161986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161987 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161986,G__161987) : tailrecursion.hoplon.span.call(null,G__161986,G__161987));
})();
var G__161944 = "(";
var G__161945 = (function (){var G__161988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161989 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161988,G__161989) : tailrecursion.hoplon.span.call(null,G__161988,G__161989));
})();
var G__161946 = (function (){var G__161990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161991 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161990,G__161991) : tailrecursion.hoplon.span.call(null,G__161990,G__161991));
})();
var G__161947 = " ";
var G__161948 = (function (){var G__161992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161993 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161992,G__161993) : tailrecursion.hoplon.span.call(null,G__161992,G__161993));
})();
var G__161949 = ") ";
var G__161950 = (function (){var G__161994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__161995 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161994,G__161995) : tailrecursion.hoplon.span.call(null,G__161994,G__161995));
})();
var G__161951 = "\n        (";
var G__161952 = (function (){var G__161996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__161997 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161996,G__161997) : tailrecursion.hoplon.span.call(null,G__161996,G__161997));
})();
var G__161953 = (function (){var G__161998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__161999 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__161998,G__161999) : tailrecursion.hoplon.span.call(null,G__161998,G__161999));
})();
var G__161954 = " ";
var G__161955 = (function (){var G__162000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162001 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162000,G__162001) : tailrecursion.hoplon.span.call(null,G__162000,G__162001));
})();
var G__161956 = ") ";
var G__161957 = (function (){var G__162002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162003 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162002,G__162003) : tailrecursion.hoplon.span.call(null,G__162002,G__162003));
})();
var G__161958 = "\n        (";
var G__161959 = (function (){var G__162004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162005 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162004,G__162005) : tailrecursion.hoplon.span.call(null,G__162004,G__162005));
})();
var G__161960 = (function (){var G__162006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162007 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162006,G__162007) : tailrecursion.hoplon.span.call(null,G__162006,G__162007));
})();
var G__161961 = " ";
var G__161962 = (function (){var G__162008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162009 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162008,G__162009) : tailrecursion.hoplon.span.call(null,G__162008,G__162009));
})();
var G__161963 = ") ";
var G__161964 = (function (){var G__162010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162011 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162010,G__162011) : tailrecursion.hoplon.span.call(null,G__162010,G__162011));
})();
var G__161965 = "\n        (";
var G__161966 = (function (){var G__162012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162013 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162012,G__162013) : tailrecursion.hoplon.span.call(null,G__162012,G__162013));
})();
var G__161967 = (function (){var G__162014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162015 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162014,G__162015) : tailrecursion.hoplon.span.call(null,G__162014,G__162015));
})();
var G__161968 = " ";
var G__161969 = (function (){var G__162016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162017 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162016,G__162017) : tailrecursion.hoplon.span.call(null,G__162016,G__162017));
})();
var G__161970 = ") ";
var G__161971 = (function (){var G__162018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162019 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162018,G__162019) : tailrecursion.hoplon.span.call(null,G__162018,G__162019));
})();
var G__161972 = "\n        (";
var G__161973 = (function (){var G__162020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162021 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162020,G__162021) : tailrecursion.hoplon.span.call(null,G__162020,G__162021));
})();
var G__161974 = (function (){var G__162022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162023 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162022,G__162023) : tailrecursion.hoplon.span.call(null,G__162022,G__162023));
})();
var G__161975 = " ";
var G__161976 = (function (){var G__162024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162025 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162024,G__162025) : tailrecursion.hoplon.span.call(null,G__162024,G__162025));
})();
var G__161977 = ") ";
var G__161978 = (function (){var G__162026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162027 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162026,G__162027) : tailrecursion.hoplon.span.call(null,G__162026,G__162027));
})();
var G__161979 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__161936,G__161937,G__161938,G__161939,G__161940,G__161941,G__161942,G__161943,G__161944,G__161945,G__161946,G__161947,G__161948,G__161949,G__161950,G__161951,G__161952,G__161953,G__161954,G__161955,G__161956,G__161957,G__161958,G__161959,G__161960,G__161961,G__161962,G__161963,G__161964,G__161965,G__161966,G__161967,G__161968,G__161969,G__161970,G__161971,G__161972,G__161973,G__161974,G__161975,G__161976,G__161977,G__161978,G__161979) : tailrecursion.hoplon.pre.call(null,G__161936,G__161937,G__161938,G__161939,G__161940,G__161941,G__161942,G__161943,G__161944,G__161945,G__161946,G__161947,G__161948,G__161949,G__161950,G__161951,G__161952,G__161953,G__161954,G__161955,G__161956,G__161957,G__161958,G__161959,G__161960,G__161961,G__161962,G__161963,G__161964,G__161965,G__161966,G__161967,G__161968,G__161969,G__161970,G__161971,G__161972,G__161973,G__161974,G__161975,G__161976,G__161977,G__161978,G__161979));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__161934,G__161935) : tailrecursion.hoplon.div.call(null,G__161934,G__161935));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__161933) : tailrecursion.hoplon.div.call(null,G__161933));
})(),(function (){var G__162028 = cljs.core.PersistentArrayMap.EMPTY;
var G__162029 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162030 = cljs.core.PersistentArrayMap.EMPTY;
var G__162031 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that I made the stipulation that we",(function (){var G__162032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162033 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162032,G__162033) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162032,G__162033));
})(),"ve already defined the two next things. I said this because the REPL we",(function (){var G__162034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162035 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162034,G__162035) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162034,G__162035));
})(),"re using for this book will return an error if you use somthing that has not been previously defined, so if we try to use ",(function (){var G__162036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__162037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162036,G__162037) : tailrecursion.hoplon.markdown.code_node.call(null,G__162036,G__162037));
})()," in a function definition before we",(function (){var G__162038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162039 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162038,G__162039) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162038,G__162039));
})(),"ve defined ",(function (){var G__162040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__162041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162040,G__162041) : tailrecursion.hoplon.markdown.code_node.call(null,G__162040,G__162041));
})(),", the program won",(function (){var G__162042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162042,G__162043) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162042,G__162043));
})(),"t compile. I introduced the functions in the order I did for two reasons: 1) it",(function (){var G__162044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162044,G__162045) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162044,G__162045));
})(),"s the same order that is used in the original SICP, and 2) it makes more sense pedagogically."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162030,G__162031) : tailrecursion.hoplon.markdown.para_node.call(null,G__162030,G__162031));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__162028,G__162029) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__162028,G__162029));
})(),(function (){var G__162046 = cljs.core.PersistentArrayMap.EMPTY;
var G__162047 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(The ",(function (){var G__162048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"first-denomination"], null);
var G__162049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162048,G__162049) : tailrecursion.hoplon.markdown.code_node.call(null,G__162048,G__162049));
})()," procedure takes as input the number of kinds of coins available and returns the denomination of the first kind. Here we are thinking of the coins as arranged in order from largest to smallest, but any order would do as well.) We can now answer our original question about changing a dollar:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162046,G__162047) : tailrecursion.hoplon.markdown.para_node.call(null,G__162046,G__162047));
})(),(function (){var G__162050 = (function (){var G__162051 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162052 = (function (){var G__162053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162054 = "(";
var G__162055 = (function (){var G__162061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162062 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162061,G__162062) : tailrecursion.hoplon.span.call(null,G__162061,G__162062));
})();
var G__162056 = " ";
var G__162057 = (function (){var G__162063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162064 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162063,G__162064) : tailrecursion.hoplon.span.call(null,G__162063,G__162064));
})();
var G__162058 = ")\n";
var G__162059 = (function (){var G__162065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162066 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162065,G__162066) : tailrecursion.hoplon.span.call(null,G__162065,G__162066));
})();
var G__162060 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__162053,G__162054,G__162055,G__162056,G__162057,G__162058,G__162059,G__162060) : tailrecursion.hoplon.pre.call(null,G__162053,G__162054,G__162055,G__162056,G__162057,G__162058,G__162059,G__162060));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162051,G__162052) : tailrecursion.hoplon.div.call(null,G__162051,G__162052));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162050) : tailrecursion.hoplon.div.call(null,G__162050));
})(),(function (){var G__162067 = cljs.core.PersistentArrayMap.EMPTY;
var G__162068 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__162070 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162069,G__162070) : tailrecursion.hoplon.markdown.code_node.call(null,G__162069,G__162070));
})()," generates a tree-recursive process with redundancies similar to those in our first implementation of ",(function (){var G__162071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib"], null);
var G__162072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162071,G__162072) : tailrecursion.hoplon.markdown.code_node.call(null,G__162071,G__162072));
})(),". (It will take quite a wile for that 292 to be computed.) On the other hand, it is not obvious hwo to design a better algorithm for computing the result, and we leave this problem as a challenge. The observation that a tree-recursive process may be highly inefficient but often easy to specify and understand has led people to propose that one could get the best of both worlds by designing a ",(function (){var G__162073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__162074 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smart compiler"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162073,G__162074) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162073,G__162074));
})()," that could transform tree-recusive procedures into more efficient procedures that compute the same result.",(function (){var G__162075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__162076 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One approach to coping with redundant computations is to arrange matters so that we automatically construct a table of values as they are computed. Each time we are asked to apply the procedure to some argument, we first look to see if the value is already stored in the table, in which case we avoid performing the redundant computation. This strategy, known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tabulation"], null)], 0))," or ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["memoization"], null)], 0)),", can be implemented in a straightforward way. Tabulation can sometimes be used to transform processes that require an exponential number of steps (such as ",(function (){var G__162077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__162078 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162077,G__162078) : tailrecursion.hoplon.markdown.code_node.call(null,G__162077,G__162078));
})(),") into processes whose space and time requirements grow linearly with the input. See exercise 3.27."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162075,G__162076) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162075,G__162076));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162067,G__162068) : tailrecursion.hoplon.markdown.para_node.call(null,G__162067,G__162068));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161735;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161734;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_161733;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_161732;
}})()], 0));
var G__158003 = "";
var G__158004 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"11-13"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(11)], null),(function (){var _STAR_references_STAR_162079 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162080 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162081 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162082 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162083 = cljs.core.PersistentArrayMap.EMPTY;
var G__162084 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A function \\(f\\) is defined by the rule that \\(f(n)=f(n-1)+2f(n-2)+3f(n-3)\\) if \\(n\\geq3\\). Write a procedure that computes \\(f\\) by means of a recursive process. Write a procedure that computes \\(f\\) by a means of an iterative process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162083,G__162084) : tailrecursion.hoplon.markdown.para_node.call(null,G__162083,G__162084));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162082;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162081;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162080;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162079;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_162085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162087 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162088 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162089 = cljs.core.PersistentArrayMap.EMPTY;
var G__162090 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursive:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162089,G__162090) : tailrecursion.hoplon.markdown.para_node.call(null,G__162089,G__162090));
})(),(function (){var G__162091 = (function (){var G__162092 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162093 = (function (){var G__162094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162095 = "(";
var G__162096 = (function (){var G__162139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162140 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162139,G__162140) : tailrecursion.hoplon.span.call(null,G__162139,G__162140));
})();
var G__162097 = (function (){var G__162141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162142 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162141,G__162142) : tailrecursion.hoplon.span.call(null,G__162141,G__162142));
})();
var G__162098 = " [";
var G__162099 = (function (){var G__162143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162144 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162143,G__162144) : tailrecursion.hoplon.span.call(null,G__162143,G__162144));
})();
var G__162100 = "]\n  (";
var G__162101 = (function (){var G__162145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162146 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162145,G__162146) : tailrecursion.hoplon.span.call(null,G__162145,G__162146));
})();
var G__162102 = "(";
var G__162103 = (function (){var G__162147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162148 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162147,G__162148) : tailrecursion.hoplon.span.call(null,G__162147,G__162148));
})();
var G__162104 = (function (){var G__162149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162150 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162149,G__162150) : tailrecursion.hoplon.span.call(null,G__162149,G__162150));
})();
var G__162105 = " ";
var G__162106 = (function (){var G__162151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162152 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162151,G__162152) : tailrecursion.hoplon.span.call(null,G__162151,G__162152));
})();
var G__162107 = ")\n      ";
var G__162108 = (function (){var G__162153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162154 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162153,G__162154) : tailrecursion.hoplon.span.call(null,G__162153,G__162154));
})();
var G__162109 = "\n      (";
var G__162110 = (function (){var G__162155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162156 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162155,G__162156) : tailrecursion.hoplon.span.call(null,G__162155,G__162156));
})();
var G__162111 = "(";
var G__162112 = (function (){var G__162157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162158 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162157,G__162158) : tailrecursion.hoplon.span.call(null,G__162157,G__162158));
})();
var G__162113 = " (";
var G__162114 = (function (){var G__162159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162160 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162159,G__162160) : tailrecursion.hoplon.span.call(null,G__162159,G__162160));
})();
var G__162115 = (function (){var G__162161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162162 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162161,G__162162) : tailrecursion.hoplon.span.call(null,G__162161,G__162162));
})();
var G__162116 = " ";
var G__162117 = (function (){var G__162163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162164 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162163,G__162164) : tailrecursion.hoplon.span.call(null,G__162163,G__162164));
})();
var G__162118 = ")) \n         (";
var G__162119 = (function (){var G__162165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162166 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162165,G__162166) : tailrecursion.hoplon.span.call(null,G__162165,G__162166));
})();
var G__162120 = (function (){var G__162167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162168 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162167,G__162168) : tailrecursion.hoplon.span.call(null,G__162167,G__162168));
})();
var G__162121 = " (";
var G__162122 = (function (){var G__162169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162170 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162169,G__162170) : tailrecursion.hoplon.span.call(null,G__162169,G__162170));
})();
var G__162123 = " (";
var G__162124 = (function (){var G__162171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162172 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162171,G__162172) : tailrecursion.hoplon.span.call(null,G__162171,G__162172));
})();
var G__162125 = (function (){var G__162173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162174 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162173,G__162174) : tailrecursion.hoplon.span.call(null,G__162173,G__162174));
})();
var G__162126 = " ";
var G__162127 = (function (){var G__162175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162176 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162175,G__162176) : tailrecursion.hoplon.span.call(null,G__162175,G__162176));
})();
var G__162128 = "))) \n         (";
var G__162129 = (function (){var G__162177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162178 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162177,G__162178) : tailrecursion.hoplon.span.call(null,G__162177,G__162178));
})();
var G__162130 = (function (){var G__162179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162180 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162179,G__162180) : tailrecursion.hoplon.span.call(null,G__162179,G__162180));
})();
var G__162131 = " (";
var G__162132 = (function (){var G__162181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162182 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162181,G__162182) : tailrecursion.hoplon.span.call(null,G__162181,G__162182));
})();
var G__162133 = " (";
var G__162134 = (function (){var G__162183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162184 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162183,G__162184) : tailrecursion.hoplon.span.call(null,G__162183,G__162184));
})();
var G__162135 = (function (){var G__162185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162186 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162185,G__162186) : tailrecursion.hoplon.span.call(null,G__162185,G__162186));
})();
var G__162136 = " ";
var G__162137 = (function (){var G__162187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162188 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162187,G__162188) : tailrecursion.hoplon.span.call(null,G__162187,G__162188));
})();
var G__162138 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__162094,G__162095,G__162096,G__162097,G__162098,G__162099,G__162100,G__162101,G__162102,G__162103,G__162104,G__162105,G__162106,G__162107,G__162108,G__162109,G__162110,G__162111,G__162112,G__162113,G__162114,G__162115,G__162116,G__162117,G__162118,G__162119,G__162120,G__162121,G__162122,G__162123,G__162124,G__162125,G__162126,G__162127,G__162128,G__162129,G__162130,G__162131,G__162132,G__162133,G__162134,G__162135,G__162136,G__162137,G__162138) : tailrecursion.hoplon.pre.call(null,G__162094,G__162095,G__162096,G__162097,G__162098,G__162099,G__162100,G__162101,G__162102,G__162103,G__162104,G__162105,G__162106,G__162107,G__162108,G__162109,G__162110,G__162111,G__162112,G__162113,G__162114,G__162115,G__162116,G__162117,G__162118,G__162119,G__162120,G__162121,G__162122,G__162123,G__162124,G__162125,G__162126,G__162127,G__162128,G__162129,G__162130,G__162131,G__162132,G__162133,G__162134,G__162135,G__162136,G__162137,G__162138));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162092,G__162093) : tailrecursion.hoplon.div.call(null,G__162092,G__162093));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162091) : tailrecursion.hoplon.div.call(null,G__162091));
})(),(function (){var G__162189 = cljs.core.PersistentArrayMap.EMPTY;
var G__162190 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Iterative:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162189,G__162190) : tailrecursion.hoplon.markdown.para_node.call(null,G__162189,G__162190));
})(),(function (){var G__162191 = (function (){var G__162192 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162193 = (function (){var G__162194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162195 = "(";
var G__162196 = (function (){var G__162262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162263 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162262,G__162263) : tailrecursion.hoplon.span.call(null,G__162262,G__162263));
})();
var G__162197 = (function (){var G__162264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162265 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162264,G__162265) : tailrecursion.hoplon.span.call(null,G__162264,G__162265));
})();
var G__162198 = " [";
var G__162199 = (function (){var G__162266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162267 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162266,G__162267) : tailrecursion.hoplon.span.call(null,G__162266,G__162267));
})();
var G__162200 = " ";
var G__162201 = (function (){var G__162268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162269 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162268,G__162269) : tailrecursion.hoplon.span.call(null,G__162268,G__162269));
})();
var G__162202 = " ";
var G__162203 = (function (){var G__162270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162271 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162270,G__162271) : tailrecursion.hoplon.span.call(null,G__162270,G__162271));
})();
var G__162204 = " ";
var G__162205 = (function (){var G__162272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162273 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162272,G__162273) : tailrecursion.hoplon.span.call(null,G__162272,G__162273));
})();
var G__162206 = "]\n  (";
var G__162207 = (function (){var G__162274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162275 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162274,G__162275) : tailrecursion.hoplon.span.call(null,G__162274,G__162275));
})();
var G__162208 = "(";
var G__162209 = (function (){var G__162276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162277 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162276,G__162277) : tailrecursion.hoplon.span.call(null,G__162276,G__162277));
})();
var G__162210 = (function (){var G__162278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162279 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162278,G__162279) : tailrecursion.hoplon.span.call(null,G__162278,G__162279));
})();
var G__162211 = " ";
var G__162212 = (function (){var G__162280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162281 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162280,G__162281) : tailrecursion.hoplon.span.call(null,G__162280,G__162281));
})();
var G__162213 = ")\n      ";
var G__162214 = (function (){var G__162282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162283 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162282,G__162283) : tailrecursion.hoplon.span.call(null,G__162282,G__162283));
})();
var G__162215 = "\n      (";
var G__162216 = (function (){var G__162284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162285 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162284,G__162285) : tailrecursion.hoplon.span.call(null,G__162284,G__162285));
})();
var G__162217 = " (";
var G__162218 = (function (){var G__162286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162287 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162286,G__162287) : tailrecursion.hoplon.span.call(null,G__162286,G__162287));
})();
var G__162219 = (function (){var G__162288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162289 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162288,G__162289) : tailrecursion.hoplon.span.call(null,G__162288,G__162289));
})();
var G__162220 = ") (";
var G__162221 = (function (){var G__162290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162291 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162290,G__162291) : tailrecursion.hoplon.span.call(null,G__162290,G__162291));
})();
var G__162222 = (function (){var G__162292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162293 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162292,G__162293) : tailrecursion.hoplon.span.call(null,G__162292,G__162293));
})();
var G__162223 = " (";
var G__162224 = (function (){var G__162294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162295 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162294,G__162295) : tailrecursion.hoplon.span.call(null,G__162294,G__162295));
})();
var G__162225 = (function (){var G__162296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162297 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162296,G__162297) : tailrecursion.hoplon.span.call(null,G__162296,G__162297));
})();
var G__162226 = " ";
var G__162227 = (function (){var G__162298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162299 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162298,G__162299) : tailrecursion.hoplon.span.call(null,G__162298,G__162299));
})();
var G__162228 = ") (";
var G__162229 = (function (){var G__162300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162301 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162300,G__162301) : tailrecursion.hoplon.span.call(null,G__162300,G__162301));
})();
var G__162230 = (function (){var G__162302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162303 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162302,G__162303) : tailrecursion.hoplon.span.call(null,G__162302,G__162303));
})();
var G__162231 = " ";
var G__162232 = (function (){var G__162304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162305 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162304,G__162305) : tailrecursion.hoplon.span.call(null,G__162304,G__162305));
})();
var G__162233 = ")) ";
var G__162234 = (function (){var G__162306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162307 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162306,G__162307) : tailrecursion.hoplon.span.call(null,G__162306,G__162307));
})();
var G__162235 = " ";
var G__162236 = (function (){var G__162308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162309 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162308,G__162309) : tailrecursion.hoplon.span.call(null,G__162308,G__162309));
})();
var G__162237 = ")))\n(";
var G__162238 = (function (){var G__162310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162311 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162310,G__162311) : tailrecursion.hoplon.span.call(null,G__162310,G__162311));
})();
var G__162239 = (function (){var G__162312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162313 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162312,G__162313) : tailrecursion.hoplon.span.call(null,G__162312,G__162313));
})();
var G__162240 = " [";
var G__162241 = (function (){var G__162314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162315 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162314,G__162315) : tailrecursion.hoplon.span.call(null,G__162314,G__162315));
})();
var G__162242 = "]\n  (";
var G__162243 = (function (){var G__162316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162317 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162316,G__162317) : tailrecursion.hoplon.span.call(null,G__162316,G__162317));
})();
var G__162244 = "(";
var G__162245 = (function (){var G__162318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162319 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162318,G__162319) : tailrecursion.hoplon.span.call(null,G__162318,G__162319));
})();
var G__162246 = (function (){var G__162320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162321 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162320,G__162321) : tailrecursion.hoplon.span.call(null,G__162320,G__162321));
})();
var G__162247 = " ";
var G__162248 = (function (){var G__162322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162323 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162322,G__162323) : tailrecursion.hoplon.span.call(null,G__162322,G__162323));
})();
var G__162249 = ")\n      ";
var G__162250 = (function (){var G__162324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162325 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162324,G__162325) : tailrecursion.hoplon.span.call(null,G__162324,G__162325));
})();
var G__162251 = "\n      (";
var G__162252 = (function (){var G__162326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162327 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162326,G__162327) : tailrecursion.hoplon.span.call(null,G__162326,G__162327));
})();
var G__162253 = " ";
var G__162254 = (function (){var G__162328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162329 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162328,G__162329) : tailrecursion.hoplon.span.call(null,G__162328,G__162329));
})();
var G__162255 = " ";
var G__162256 = (function (){var G__162330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162331 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162330,G__162331) : tailrecursion.hoplon.span.call(null,G__162330,G__162331));
})();
var G__162257 = " ";
var G__162258 = (function (){var G__162332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162333 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162332,G__162333) : tailrecursion.hoplon.span.call(null,G__162332,G__162333));
})();
var G__162259 = " ";
var G__162260 = (function (){var G__162334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162335 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162334,G__162335) : tailrecursion.hoplon.span.call(null,G__162334,G__162335));
})();
var G__162261 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68(G__162194,G__162195,G__162196,G__162197,G__162198,G__162199,G__162200,G__162201,G__162202,G__162203,G__162204,G__162205,G__162206,G__162207,G__162208,G__162209,G__162210,G__162211,G__162212,G__162213,G__162214,G__162215,G__162216,G__162217,G__162218,G__162219,G__162220,G__162221,G__162222,G__162223,G__162224,G__162225,G__162226,G__162227,G__162228,G__162229,G__162230,G__162231,G__162232,G__162233,G__162234,G__162235,G__162236,G__162237,G__162238,G__162239,G__162240,G__162241,G__162242,G__162243,G__162244,G__162245,G__162246,G__162247,G__162248,G__162249,G__162250,G__162251,G__162252,G__162253,G__162254,G__162255,G__162256,G__162257,G__162258,G__162259,G__162260,G__162261) : tailrecursion.hoplon.pre.call(null,G__162194,G__162195,G__162196,G__162197,G__162198,G__162199,G__162200,G__162201,G__162202,G__162203,G__162204,G__162205,G__162206,G__162207,G__162208,G__162209,G__162210,G__162211,G__162212,G__162213,G__162214,G__162215,G__162216,G__162217,G__162218,G__162219,G__162220,G__162221,G__162222,G__162223,G__162224,G__162225,G__162226,G__162227,G__162228,G__162229,G__162230,G__162231,G__162232,G__162233,G__162234,G__162235,G__162236,G__162237,G__162238,G__162239,G__162240,G__162241,G__162242,G__162243,G__162244,G__162245,G__162246,G__162247,G__162248,G__162249,G__162250,G__162251,G__162252,G__162253,G__162254,G__162255,G__162256,G__162257,G__162258,G__162259,G__162260,G__162261));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162192,G__162193) : tailrecursion.hoplon.div.call(null,G__162192,G__162193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162191) : tailrecursion.hoplon.div.call(null,G__162191));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162088;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162087;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162085;
}})()], 0))], 0)),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(12)], null),(function (){var _STAR_references_STAR_162336 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162337 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162338 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162339 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162340 = cljs.core.PersistentArrayMap.EMPTY;
var G__162341 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following patter is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pascal",(function (){var G__162342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162343 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162342,G__162343) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162342,G__162343));
})(),"s Triangle"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162340,G__162341) : tailrecursion.hoplon.markdown.para_node.call(null,G__162340,G__162341));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162339;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162338;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162337;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162336;
}})(),content.sicp.book_data.image.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$src,"img/sicp/exercise1_12.gif"], null)], 0)),(function (){var _STAR_references_STAR_162344 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162345 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162346 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162347 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162348 = cljs.core.PersistentArrayMap.EMPTY;
var G__162349 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The numbers at the edge of the triangle are all 1, and each number inside the triangle is the sum of the two numbers above it.",(function (){var G__162350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__162351 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The elements of Pascal",(function (){var G__162352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162353 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162352,G__162353) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162352,G__162353));
})(),"s triangle are called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binomial coefficients"], null)], 0)),", because the \\(n\\)th row consists of the coefficients of the terms in the expansion of \\((x + y)^n\\). This pattern for computing the coefficients appeared in Blaise Pascal",(function (){var G__162354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162355 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162354,G__162355) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162354,G__162355));
})(),"s 1653 seminal work on probability theory, ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Trait\u00E9 du triangle arithm\u00E9tique"], null)], 0)),". According to Knuth (1973), the same pattern appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Szu-yuen Y\u00FC-chien"], null)], 0))," (",(function (){var G__162356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__162357 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Precious Mirror of the Four Elements"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162356,G__162357) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162356,G__162357));
})(),"), published by the Chinese mathematician Chu Shih-chieh in 1303, in the works of the twelfth-century Persian poet and mathematician Omar Khayyam, and in the works of the twelfth-century Hindu mathematician Bh\u00E1scara \u00C1ch\u00E1rya."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162350,G__162351) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162350,G__162351));
})()," Write a procedure that computes elements of Pascal",(function (){var G__162358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162358,G__162359) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162358,G__162359));
})(),"s Triangle by means of a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162348,G__162349) : tailrecursion.hoplon.markdown.para_node.call(null,G__162348,G__162349));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162347;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162346;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162345;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162344;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_162360 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162361 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162362 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162363 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162364 = (function (){var G__162365 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162366 = (function (){var G__162367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162368 = "(";
var G__162369 = (function (){var G__162436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162437 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162436,G__162437) : tailrecursion.hoplon.span.call(null,G__162436,G__162437));
})();
var G__162370 = (function (){var G__162438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162439 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162438,G__162439) : tailrecursion.hoplon.span.call(null,G__162438,G__162439));
})();
var G__162371 = " [";
var G__162372 = (function (){var G__162440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162441 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162440,G__162441) : tailrecursion.hoplon.span.call(null,G__162440,G__162441));
})();
var G__162373 = " ";
var G__162374 = (function (){var G__162442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162443 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162442,G__162443) : tailrecursion.hoplon.span.call(null,G__162442,G__162443));
})();
var G__162375 = "]\n  (";
var G__162376 = (function (){var G__162444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162445 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162444,G__162445) : tailrecursion.hoplon.span.call(null,G__162444,G__162445));
})();
var G__162377 = "(";
var G__162378 = (function (){var G__162446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162447 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162446,G__162447) : tailrecursion.hoplon.span.call(null,G__162446,G__162447));
})();
var G__162379 = "(";
var G__162380 = (function (){var G__162448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162449 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162448,G__162449) : tailrecursion.hoplon.span.call(null,G__162448,G__162449));
})();
var G__162381 = (function (){var G__162450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162451 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162450,G__162451) : tailrecursion.hoplon.span.call(null,G__162450,G__162451));
})();
var G__162382 = " ";
var G__162383 = (function (){var G__162452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162453 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162452,G__162453) : tailrecursion.hoplon.span.call(null,G__162452,G__162453));
})();
var G__162384 = ") (";
var G__162385 = (function (){var G__162454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162455 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162454,G__162455) : tailrecursion.hoplon.span.call(null,G__162454,G__162455));
})();
var G__162386 = (function (){var G__162456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162457 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162456,G__162457) : tailrecursion.hoplon.span.call(null,G__162456,G__162457));
})();
var G__162387 = " ";
var G__162388 = (function (){var G__162458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162459 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162458,G__162459) : tailrecursion.hoplon.span.call(null,G__162458,G__162459));
})();
var G__162389 = ") (";
var G__162390 = (function (){var G__162460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162461 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162460,G__162461) : tailrecursion.hoplon.span.call(null,G__162460,G__162461));
})();
var G__162391 = (function (){var G__162462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162463 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162462,G__162463) : tailrecursion.hoplon.span.call(null,G__162462,G__162463));
})();
var G__162392 = " ";
var G__162393 = (function (){var G__162464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162465 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162464,G__162465) : tailrecursion.hoplon.span.call(null,G__162464,G__162465));
})();
var G__162394 = ")) ";
var G__162395 = (function (){var G__162466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162467 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162466,G__162467) : tailrecursion.hoplon.span.call(null,G__162466,G__162467));
})();
var G__162396 = "\n        (";
var G__162397 = (function (){var G__162468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162469 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162468,G__162469) : tailrecursion.hoplon.span.call(null,G__162468,G__162469));
})();
var G__162398 = "(";
var G__162399 = (function (){var G__162470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162471 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162470,G__162471) : tailrecursion.hoplon.span.call(null,G__162470,G__162471));
})();
var G__162400 = (function (){var G__162472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162473 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162472,G__162473) : tailrecursion.hoplon.span.call(null,G__162472,G__162473));
})();
var G__162401 = " ";
var G__162402 = (function (){var G__162474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162475 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162474,G__162475) : tailrecursion.hoplon.span.call(null,G__162474,G__162475));
})();
var G__162403 = ") (";
var G__162404 = (function (){var G__162476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162477 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162476,G__162477) : tailrecursion.hoplon.span.call(null,G__162476,G__162477));
})();
var G__162405 = (function (){var G__162478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162479 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162478,G__162479) : tailrecursion.hoplon.span.call(null,G__162478,G__162479));
})();
var G__162406 = " ";
var G__162407 = (function (){var G__162480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162481 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162480,G__162481) : tailrecursion.hoplon.span.call(null,G__162480,G__162481));
})();
var G__162408 = ")) ";
var G__162409 = (function (){var G__162482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162483 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162482,G__162483) : tailrecursion.hoplon.span.call(null,G__162482,G__162483));
})();
var G__162410 = "\n        ";
var G__162411 = (function (){var G__162484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162485 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162484,G__162485) : tailrecursion.hoplon.span.call(null,G__162484,G__162485));
})();
var G__162412 = " (";
var G__162413 = (function (){var G__162486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162487 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162486,G__162487) : tailrecursion.hoplon.span.call(null,G__162486,G__162487));
})();
var G__162414 = "(";
var G__162415 = (function (){var G__162488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162489 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162488,G__162489) : tailrecursion.hoplon.span.call(null,G__162488,G__162489));
})();
var G__162416 = " (";
var G__162417 = (function (){var G__162490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162491 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162490,G__162491) : tailrecursion.hoplon.span.call(null,G__162490,G__162491));
})();
var G__162418 = (function (){var G__162492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162493 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162492,G__162493) : tailrecursion.hoplon.span.call(null,G__162492,G__162493));
})();
var G__162419 = " ";
var G__162420 = (function (){var G__162494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162495 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162494,G__162495) : tailrecursion.hoplon.span.call(null,G__162494,G__162495));
})();
var G__162421 = ") (";
var G__162422 = (function (){var G__162496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162497 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162496,G__162497) : tailrecursion.hoplon.span.call(null,G__162496,G__162497));
})();
var G__162423 = (function (){var G__162498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162499 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162498,G__162499) : tailrecursion.hoplon.span.call(null,G__162498,G__162499));
})();
var G__162424 = " ";
var G__162425 = (function (){var G__162500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162501 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162500,G__162501) : tailrecursion.hoplon.span.call(null,G__162500,G__162501));
})();
var G__162426 = "))\n                 (";
var G__162427 = (function (){var G__162502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162503 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162502,G__162503) : tailrecursion.hoplon.span.call(null,G__162502,G__162503));
})();
var G__162428 = " (";
var G__162429 = (function (){var G__162504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162505 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162504,G__162505) : tailrecursion.hoplon.span.call(null,G__162504,G__162505));
})();
var G__162430 = (function (){var G__162506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162507 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162506,G__162507) : tailrecursion.hoplon.span.call(null,G__162506,G__162507));
})();
var G__162431 = " ";
var G__162432 = (function (){var G__162508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162509 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162508,G__162509) : tailrecursion.hoplon.span.call(null,G__162508,G__162509));
})();
var G__162433 = ") ";
var G__162434 = (function (){var G__162510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162511 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162510,G__162511) : tailrecursion.hoplon.span.call(null,G__162510,G__162511));
})();
var G__162435 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__162367,G__162368,G__162369,G__162370,G__162371,G__162372,G__162373,G__162374,G__162375,G__162376,G__162377,G__162378,G__162379,G__162380,G__162381,G__162382,G__162383,G__162384,G__162385,G__162386,G__162387,G__162388,G__162389,G__162390,G__162391,G__162392,G__162393,G__162394,G__162395,G__162396,G__162397,G__162398,G__162399,G__162400,G__162401,G__162402,G__162403,G__162404,G__162405,G__162406,G__162407,G__162408,G__162409,G__162410,G__162411,G__162412,G__162413,G__162414,G__162415,G__162416,G__162417,G__162418,G__162419,G__162420,G__162421,G__162422,G__162423,G__162424,G__162425,G__162426,G__162427,G__162428,G__162429,G__162430,G__162431,G__162432,G__162433,G__162434,G__162435) : tailrecursion.hoplon.pre.call(null,G__162367,G__162368,G__162369,G__162370,G__162371,G__162372,G__162373,G__162374,G__162375,G__162376,G__162377,G__162378,G__162379,G__162380,G__162381,G__162382,G__162383,G__162384,G__162385,G__162386,G__162387,G__162388,G__162389,G__162390,G__162391,G__162392,G__162393,G__162394,G__162395,G__162396,G__162397,G__162398,G__162399,G__162400,G__162401,G__162402,G__162403,G__162404,G__162405,G__162406,G__162407,G__162408,G__162409,G__162410,G__162411,G__162412,G__162413,G__162414,G__162415,G__162416,G__162417,G__162418,G__162419,G__162420,G__162421,G__162422,G__162423,G__162424,G__162425,G__162426,G__162427,G__162428,G__162429,G__162430,G__162431,G__162432,G__162433,G__162434,G__162435));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162365,G__162366) : tailrecursion.hoplon.div.call(null,G__162365,G__162366));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162364) : tailrecursion.hoplon.div.call(null,G__162364));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162363;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162362;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162361;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162360;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(13)], null),(function (){var _STAR_references_STAR_162512 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162513 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162514 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162515 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162516 = cljs.core.PersistentArrayMap.EMPTY;
var G__162517 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Prove that \\(Fib(n)\\) is the closest integer to \\(\\phi^n/\\sqrt5\\), where \\(\\phi=\\left(1+\\sqrt5\\right)/2\\). Hint: let \\(\\psi=\\left(1-\\sqrt5\\right)/2\\) Use induction and the definition of the Fibonacci numbers (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/2",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),") to prove that \\(Fib(n)=\\left(\\phi^n-\\psi^n\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162516,G__162517) : tailrecursion.hoplon.markdown.para_node.call(null,G__162516,G__162517));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162515;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162514;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162513;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162512;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_162518 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162519 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162520 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162521 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162522 = cljs.core.PersistentArrayMap.EMPTY;
var G__162523 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__162524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162525 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162524,G__162525) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162524,G__162525));
})(),"s pick a natural number \\(n\\) and state our inductive hypothesis:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162522,G__162523) : tailrecursion.hoplon.markdown.para_node.call(null,G__162522,G__162523));
})(),(function (){var G__162526 = cljs.core.PersistentArrayMap.EMPTY;
var G__162527 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assume that for any \\(k< n\\), \\(Fib(k)=\\left(\\phi^k-\\psi^k\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162526,G__162527) : tailrecursion.hoplon.markdown.para_node.call(null,G__162526,G__162527));
})(),(function (){var G__162528 = cljs.core.PersistentArrayMap.EMPTY;
var G__162529 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 1: \\(n=0\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162528,G__162529) : tailrecursion.hoplon.markdown.para_node.call(null,G__162528,G__162529));
})(),(function (){var G__162530 = cljs.core.PersistentArrayMap.EMPTY;
var G__162531 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then note: \\( Fib(0)= 0 =\\frac{1-1}{\\sqrt5}=\\frac{\\phi^0-\\psi^0}{\\sqrt5}\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162530,G__162531) : tailrecursion.hoplon.markdown.para_node.call(null,G__162530,G__162531));
})(),(function (){var G__162532 = cljs.core.PersistentArrayMap.EMPTY;
var G__162533 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 2: \\( n = 1\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162532,G__162533) : tailrecursion.hoplon.markdown.para_node.call(null,G__162532,G__162533));
})(),(function (){var G__162534 = cljs.core.PersistentArrayMap.EMPTY;
var G__162535 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then \\(\\frac{\\phi^1-\\psi^1}{\\sqrt5} =\\frac{\\left(\\frac{1+\\sqrt5}{2}\\right)^1-\\left(\\frac{1-\\sqrt5}{2}\\right)^1}{\\sqrt5} =\\frac{\\sqrt5}{\\sqrt5}= 1= Fib(1)\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162534,G__162535) : tailrecursion.hoplon.markdown.para_node.call(null,G__162534,G__162535));
})(),(function (){var G__162536 = cljs.core.PersistentArrayMap.EMPTY;
var G__162537 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Our last case is if \\(n > 1\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162536,G__162537) : tailrecursion.hoplon.markdown.para_node.call(null,G__162536,G__162537));
})(),(function (){var G__162538 = cljs.core.PersistentArrayMap.EMPTY;
var G__162539 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, $$\\frac{\\phi^n-\\psi^n}{\\sqrt5} =\\frac{\\phi^{n-2}\\phi^2-\\psi^{n-2}\\psi^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162538,G__162539) : tailrecursion.hoplon.markdown.para_node.call(null,G__162538,G__162539));
})(),(function (){var G__162540 = cljs.core.PersistentArrayMap.EMPTY;
var G__162541 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)^2-\\psi^{n-2}\\left(\\frac{1-\\sqrt5}{2}\\right)^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162540,G__162541) : tailrecursion.hoplon.markdown.para_node.call(null,G__162540,G__162541));
})(),(function (){var G__162542 = cljs.core.PersistentArrayMap.EMPTY;
var G__162543 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{6+2\\sqrt5}{4}\\right)-\\psi^{n-2}\\left(\\frac{6-2\\sqrt5}{4}\\right)}{\\sqrt5}$$ "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162542,G__162543) : tailrecursion.hoplon.markdown.para_node.call(null,G__162542,G__162543));
})(),(function (){var G__162544 = cljs.core.PersistentArrayMap.EMPTY;
var G__162545 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}-\\psi^{n-2}}{\\sqrt5}+\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)-\\psi^{n-2}\\left(\\frac{1-2\\sqrt5}{2}\\right)}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162544,G__162545) : tailrecursion.hoplon.markdown.para_node.call(null,G__162544,G__162545));
})(),(function (){var G__162546 = cljs.core.PersistentArrayMap.EMPTY;
var G__162547 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+\\frac{\\phi^{n-1}-\\psi^{n-1}}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162546,G__162547) : tailrecursion.hoplon.markdown.para_node.call(null,G__162546,G__162547));
})(),(function (){var G__162548 = cljs.core.PersistentArrayMap.EMPTY;
var G__162549 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+Fib(n-1)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162548,G__162549) : tailrecursion.hoplon.markdown.para_node.call(null,G__162548,G__162549));
})(),(function (){var G__162550 = cljs.core.PersistentArrayMap.EMPTY;
var G__162551 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162550,G__162551) : tailrecursion.hoplon.markdown.para_node.call(null,G__162550,G__162551));
})(),(function (){var G__162552 = cljs.core.PersistentArrayMap.EMPTY;
var G__162553 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in general, \\(Fib(n)=\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162552,G__162553) : tailrecursion.hoplon.markdown.para_node.call(null,G__162552,G__162553));
})(),(function (){var G__162554 = cljs.core.PersistentArrayMap.EMPTY;
var G__162555 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, to prove that \\(Fib(n)\\) is the integer closest to \\(\\phi^n/\\sqrt5\\). First we note that since \\(\\psi^2< 0.4\\), \\(\\sqrt5>1\\) and \\(\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\) is an integer, we know for any \\(n\\geq2\\), "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162554,G__162555) : tailrecursion.hoplon.markdown.para_node.call(null,G__162554,G__162555));
})(),(function (){var G__162556 = cljs.core.PersistentArrayMap.EMPTY;
var G__162557 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left|\\frac{\\phi^n}{\\sqrt5}-Fib(n)\\right| =\\left|\\frac{\\phi^n}{\\sqrt5}-\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\right| =\\left|\\frac{\\psi^n}{\\sqrt5}\\right|< 0.4$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162556,G__162557) : tailrecursion.hoplon.markdown.para_node.call(null,G__162556,G__162557));
})(),(function (){var G__162558 = cljs.core.PersistentArrayMap.EMPTY;
var G__162559 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that the closest integer to \\(\\frac{\\phi^n}{\\sqrt5}\\) must be \\(Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162558,G__162559) : tailrecursion.hoplon.markdown.para_node.call(null,G__162558,G__162559));
})(),(function (){var G__162560 = cljs.core.PersistentArrayMap.EMPTY;
var G__162561 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for when \\(n< 2\\), we can check one by one."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162560,G__162561) : tailrecursion.hoplon.markdown.para_node.call(null,G__162560,G__162561));
})(),(function (){var G__162562 = cljs.core.PersistentArrayMap.EMPTY;
var G__162563 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n = 0\\): \\(\\frac{1}{\\sqrt5}< 0.45\\), so that the closest integer is 0 (\\(Fib(0)\\))."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162562,G__162563) : tailrecursion.hoplon.markdown.para_node.call(null,G__162562,G__162563));
})(),(function (){var G__162564 = cljs.core.PersistentArrayMap.EMPTY;
var G__162565 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n=1\\): \\(\\frac{\\frac{1+\\sqrt5}{2}}{\\sqrt5}\\approx0.72\\), so that the closest integer is \\(Fib(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162564,G__162565) : tailrecursion.hoplon.markdown.para_node.call(null,G__162564,G__162565));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162521;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162520;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162519;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162518;
}})()], 0))], 0))], 0));
var G__158005 = "";
var G__158006 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Orders of Growth"], null),(function (){var _STAR_references_STAR_162566 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162567 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162568 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162569 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162570 = cljs.core.PersistentArrayMap.EMPTY;
var G__162571 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The previous examples illustrate that processes can differ considerably in the rates at which they consume computational resources. One convenient way to describe this difference is to use the notion of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["order of growth"], null)], 0))," to obtain a gross measure of the resources required by a process as the inputs become larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162570,G__162571) : tailrecursion.hoplon.markdown.para_node.call(null,G__162570,G__162571));
})(),(function (){var G__162572 = cljs.core.PersistentArrayMap.EMPTY;
var G__162573 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let \\(n\\) be a parameter that measures the size of the problem, and let \\(R(n)\\) be the amount of resources the process requires for a problem of size \\(n\\). In our previous examples we took \\(n\\) to be the number for which a given function is to be computed, but there are other possibilities. For instance, if our goal is to compute an approximation to the square root of a number, we might take \\(n\\) to be the number of digits accuracy required. For matrix multiplication we might take \\(n\\) to be the number of rows in the matrices. In general there are a number of properties of the problem with respect to which it will be desirable to analyze a given process. Similarly, \\(R(n)\\) might measure the number of internal storage registers used, the number of elementary machine operations performed, and so on. In computers that do only a fixed number of operations at a time, the time required will be proportional to the number of elementary machine operations performed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162572,G__162573) : tailrecursion.hoplon.markdown.para_node.call(null,G__162572,G__162573));
})(),(function (){var G__162574 = cljs.core.PersistentArrayMap.EMPTY;
var G__162575 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We say \\(R(n)\\) has order of growth \\(\\Theta(f(n))\\), written \\(R(n)=\\Theta(f(n))\\) (pronounced ",(function (){var G__162576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__162577 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["theta of \\(f(n)\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162576,G__162577) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162576,G__162577));
})(),"), if there are positive constants \\(k_1\\) and \\(k_2\\) independent of \\(n\\) such that"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162574,G__162575) : tailrecursion.hoplon.markdown.para_node.call(null,G__162574,G__162575));
})(),(function (){var G__162578 = cljs.core.PersistentArrayMap.EMPTY;
var G__162579 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$k_1f(n)\\leq R(n)\\leq k_2f(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162578,G__162579) : tailrecursion.hoplon.markdown.para_node.call(null,G__162578,G__162579));
})(),(function (){var G__162580 = cljs.core.PersistentArrayMap.EMPTY;
var G__162581 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for any sufficiently large value of \\(n\\). (In other words, for large \\(n\\), the value of \\(R(n)\\) is sandwiched between \\(k_1f(n)\\) and \\(k_2f(n)\\).)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162580,G__162581) : tailrecursion.hoplon.markdown.para_node.call(null,G__162580,G__162581));
})(),(function (){var G__162582 = cljs.core.PersistentArrayMap.EMPTY;
var G__162583 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For instance, with the linear recursive process for computing factorial described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/1/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.1"], null)], 0))," the number of steps grows proportionally to the input \\(n\\). Thus, the steps required for this process grows as \\(\\Theta(n)\\). We also saw that the space required grows as \\(\\Theta(n)\\). For the iterative factorial, the number of steps is still \\(\\Theta(n)\\) but the space is \\(\\Theta(1)\\) ",(function (){var G__162584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__162585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162584,G__162585) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162584,G__162585));
})()," that is, constant.",(function (){var G__162586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__162587 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These statements mask a great deal of oversimplification. For instance, if we count process steps as ",(function (){var G__162588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__162589 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["machine operations"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162588,G__162589) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162588,G__162589));
})()," we are making the assumption that the number of machine operations needed to perform, say, a multiplication is independent of the size of the numbers to be multiplied, which is false if the numbers are sufficiently large. Similar remarks hold for the estimates of space. Like the design and description of a process, the analysis of a process can be carried out at various levels of abstraction."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162586,G__162587) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162586,G__162587));
})()," The tree-recursive Fibonacci computation requires \\(\\Theta(\\phi^n)\\) steps and space \\(\\Theta(n)\\), where \\(\\phi\\) is the golden ratio described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162582,G__162583) : tailrecursion.hoplon.markdown.para_node.call(null,G__162582,G__162583));
})(),(function (){var G__162590 = cljs.core.PersistentArrayMap.EMPTY;
var G__162591 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Orders of growth provide only a crude description of the behavior of a process. For example, a process requiring \\(n^2\\) steps and a process requiring \\(1000n^2\\) steps and a process requiring \\(3n^2+10n+17\\) steps all have \\(\\Theta(n^2)\\) order of growth. On the other hand, order of growth provides a useful indication of how we may expect the behavior of the process to change as we change the size of the problem. For a \\(\\Theta(n)\\) (linear) process, doubling the size will roughly double the amount of resources used. For an exponential process, each increment in problem size will multiply the resource utilization by a constant factor. In the remainder of section 1.2 we will examine two algorithms whose order of growth is logarithmic, so that doubling the problem size increases the resource requirment by a constant amount."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162590,G__162591) : tailrecursion.hoplon.markdown.para_node.call(null,G__162590,G__162591));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162569;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162568;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162567;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162566;
}})()], 0));
var G__158007 = "";
var G__158008 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"14-15"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(14)], null),(function (){var _STAR_references_STAR_162592 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162593 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162594 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162595 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162596 = cljs.core.PersistentArrayMap.EMPTY;
var G__162597 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Draw the tree illustrating the process generated by the ",(function (){var G__162598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"count-change"], null);
var G__162599 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162598,G__162599) : tailrecursion.hoplon.markdown.code_node.call(null,G__162598,G__162599));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0))," in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162596,G__162597) : tailrecursion.hoplon.markdown.para_node.call(null,G__162596,G__162597));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162595;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162594;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162593;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162592;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_162600 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162601 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162602 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162603 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162604 = cljs.core.PersistentArrayMap.EMPTY;
var G__162605 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Things will go here (once I get this LaTeX thing all sorted out)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162604,G__162605) : tailrecursion.hoplon.markdown.para_node.call(null,G__162604,G__162605));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162603;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162602;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162601;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162600;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(15)], null),(function (){var _STAR_references_STAR_162606 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162607 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162608 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162609 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162610 = cljs.core.PersistentArrayMap.EMPTY;
var G__162611 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The sine of an angle (specified in radians) can be computed by making use of the approximation \\(\\sin x\\approx x\\) if \\(x\\) is sufficiently small, and the trigonometric identity"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162610,G__162611) : tailrecursion.hoplon.markdown.para_node.call(null,G__162610,G__162611));
})(),(function (){var G__162612 = cljs.core.PersistentArrayMap.EMPTY;
var G__162613 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\sin x = 3\\sin\\frac{x}{3}-4\\sin^3\\frac{x}{3}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162612,G__162613) : tailrecursion.hoplon.markdown.para_node.call(null,G__162612,G__162613));
})(),(function (){var G__162614 = cljs.core.PersistentArrayMap.EMPTY;
var G__162615 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to reduce the size of the argument of \\(\\sin\\). (For purposes of this exerise an angle is considered ",(function (){var G__162616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__162617 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sufficiently small"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__162616,G__162617) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__162616,G__162617));
})()," if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162614,G__162615) : tailrecursion.hoplon.markdown.para_node.call(null,G__162614,G__162615));
})(),(function (){var G__162618 = (function (){var G__162619 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162620 = (function (){var G__162621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162622 = "(";
var G__162623 = (function (){var G__162682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162683 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162682,G__162683) : tailrecursion.hoplon.span.call(null,G__162682,G__162683));
})();
var G__162624 = (function (){var G__162684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162685 = "cub";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162684,G__162685) : tailrecursion.hoplon.span.call(null,G__162684,G__162685));
})();
var G__162625 = " [";
var G__162626 = (function (){var G__162686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162687 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162686,G__162687) : tailrecursion.hoplon.span.call(null,G__162686,G__162687));
})();
var G__162627 = "] (";
var G__162628 = (function (){var G__162688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162689 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162688,G__162689) : tailrecursion.hoplon.span.call(null,G__162688,G__162689));
})();
var G__162629 = (function (){var G__162690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162691 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162690,G__162691) : tailrecursion.hoplon.span.call(null,G__162690,G__162691));
})();
var G__162630 = " ";
var G__162631 = (function (){var G__162692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162693 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162692,G__162693) : tailrecursion.hoplon.span.call(null,G__162692,G__162693));
})();
var G__162632 = " ";
var G__162633 = (function (){var G__162694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162695 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162694,G__162695) : tailrecursion.hoplon.span.call(null,G__162694,G__162695));
})();
var G__162634 = "))\n(";
var G__162635 = (function (){var G__162696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162697 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162696,G__162697) : tailrecursion.hoplon.span.call(null,G__162696,G__162697));
})();
var G__162636 = (function (){var G__162698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162699 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162698,G__162699) : tailrecursion.hoplon.span.call(null,G__162698,G__162699));
})();
var G__162637 = " [";
var G__162638 = (function (){var G__162700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162701 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162700,G__162701) : tailrecursion.hoplon.span.call(null,G__162700,G__162701));
})();
var G__162639 = "] (";
var G__162640 = (function (){var G__162702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162703 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162702,G__162703) : tailrecursion.hoplon.span.call(null,G__162702,G__162703));
})();
var G__162641 = "(";
var G__162642 = (function (){var G__162704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162705 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162704,G__162705) : tailrecursion.hoplon.span.call(null,G__162704,G__162705));
})();
var G__162643 = (function (){var G__162706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162707 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162706,G__162707) : tailrecursion.hoplon.span.call(null,G__162706,G__162707));
})();
var G__162644 = " ";
var G__162645 = (function (){var G__162708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162709 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162708,G__162709) : tailrecursion.hoplon.span.call(null,G__162708,G__162709));
})();
var G__162646 = ") (";
var G__162647 = (function (){var G__162710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162711 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162710,G__162711) : tailrecursion.hoplon.span.call(null,G__162710,G__162711));
})();
var G__162648 = (function (){var G__162712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162713 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162712,G__162713) : tailrecursion.hoplon.span.call(null,G__162712,G__162713));
})();
var G__162649 = " (";
var G__162650 = (function (){var G__162714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162715 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162714,G__162715) : tailrecursion.hoplon.span.call(null,G__162714,G__162715));
})();
var G__162651 = " ";
var G__162652 = (function (){var G__162716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162717 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162716,G__162717) : tailrecursion.hoplon.span.call(null,G__162716,G__162717));
})();
var G__162653 = "))))\n(";
var G__162654 = (function (){var G__162718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162719 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162718,G__162719) : tailrecursion.hoplon.span.call(null,G__162718,G__162719));
})();
var G__162655 = (function (){var G__162720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162721 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162720,G__162721) : tailrecursion.hoplon.span.call(null,G__162720,G__162721));
})();
var G__162656 = " [";
var G__162657 = (function (){var G__162722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162723 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162722,G__162723) : tailrecursion.hoplon.span.call(null,G__162722,G__162723));
})();
var G__162658 = "]\n  (";
var G__162659 = (function (){var G__162724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162725 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162724,G__162725) : tailrecursion.hoplon.span.call(null,G__162724,G__162725));
})();
var G__162660 = "(";
var G__162661 = (function (){var G__162726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162727 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162726,G__162727) : tailrecursion.hoplon.span.call(null,G__162726,G__162727));
})();
var G__162662 = "(";
var G__162663 = (function (){var G__162728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162729 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162728,G__162729) : tailrecursion.hoplon.span.call(null,G__162728,G__162729));
})();
var G__162664 = "(";
var G__162665 = (function (){var G__162730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162731 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162730,G__162731) : tailrecursion.hoplon.span.call(null,G__162730,G__162731));
})();
var G__162666 = " ";
var G__162667 = (function (){var G__162732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162733 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162732,G__162733) : tailrecursion.hoplon.span.call(null,G__162732,G__162733));
})();
var G__162668 = ") ";
var G__162669 = (function (){var G__162734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162735 = "0.1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162734,G__162735) : tailrecursion.hoplon.span.call(null,G__162734,G__162735));
})();
var G__162670 = "))\n      ";
var G__162671 = (function (){var G__162736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162737 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162736,G__162737) : tailrecursion.hoplon.span.call(null,G__162736,G__162737));
})();
var G__162672 = "\n      (";
var G__162673 = (function (){var G__162738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162739 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162738,G__162739) : tailrecursion.hoplon.span.call(null,G__162738,G__162739));
})();
var G__162674 = " (";
var G__162675 = (function (){var G__162740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162741 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162740,G__162741) : tailrecursion.hoplon.span.call(null,G__162740,G__162741));
})();
var G__162676 = " (";
var G__162677 = (function (){var G__162742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162743 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162742,G__162743) : tailrecursion.hoplon.span.call(null,G__162742,G__162743));
})();
var G__162678 = (function (){var G__162744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162745 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162744,G__162745) : tailrecursion.hoplon.span.call(null,G__162744,G__162745));
})();
var G__162679 = " ";
var G__162680 = (function (){var G__162746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162747 = "3.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162746,G__162747) : tailrecursion.hoplon.span.call(null,G__162746,G__162747));
})();
var G__162681 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__162621,G__162622,G__162623,G__162624,G__162625,G__162626,G__162627,G__162628,G__162629,G__162630,G__162631,G__162632,G__162633,G__162634,G__162635,G__162636,G__162637,G__162638,G__162639,G__162640,G__162641,G__162642,G__162643,G__162644,G__162645,G__162646,G__162647,G__162648,G__162649,G__162650,G__162651,G__162652,G__162653,G__162654,G__162655,G__162656,G__162657,G__162658,G__162659,G__162660,G__162661,G__162662,G__162663,G__162664,G__162665,G__162666,G__162667,G__162668,G__162669,G__162670,G__162671,G__162672,G__162673,G__162674,G__162675,G__162676,G__162677,G__162678,G__162679,G__162680,G__162681) : tailrecursion.hoplon.pre.call(null,G__162621,G__162622,G__162623,G__162624,G__162625,G__162626,G__162627,G__162628,G__162629,G__162630,G__162631,G__162632,G__162633,G__162634,G__162635,G__162636,G__162637,G__162638,G__162639,G__162640,G__162641,G__162642,G__162643,G__162644,G__162645,G__162646,G__162647,G__162648,G__162649,G__162650,G__162651,G__162652,G__162653,G__162654,G__162655,G__162656,G__162657,G__162658,G__162659,G__162660,G__162661,G__162662,G__162663,G__162664,G__162665,G__162666,G__162667,G__162668,G__162669,G__162670,G__162671,G__162672,G__162673,G__162674,G__162675,G__162676,G__162677,G__162678,G__162679,G__162680,G__162681));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162619,G__162620) : tailrecursion.hoplon.div.call(null,G__162619,G__162620));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162618) : tailrecursion.hoplon.div.call(null,G__162618));
})(),(function (){var G__162748 = cljs.core.PersistentArrayMap.EMPTY;
var G__162749 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. How many times is the procedure \\(p\\) applied when ",(function (){var G__162750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(sine\n12.15)"], null);
var G__162751 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162750,G__162751) : tailrecursion.hoplon.markdown.code_node.call(null,G__162750,G__162751));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162748,G__162749) : tailrecursion.hoplon.markdown.para_node.call(null,G__162748,G__162749));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162609;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162608;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162607;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162606;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_162752 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162753 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162754 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162755 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162756 = cljs.core.PersistentArrayMap.EMPTY;
var G__162757 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this we first realize that each iteration (until the angle \\(\\theta\\) is less than or equal to 0.1) divides the angle by three. Since this is applicative order, we know that each iteration will call ",(function (){var G__162758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"p"], null);
var G__162759 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162758,G__162759) : tailrecursion.hoplon.markdown.code_node.call(null,G__162758,G__162759));
})()," exactly once. So this reduces to solving the equation,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162756,G__162757) : tailrecursion.hoplon.markdown.para_node.call(null,G__162756,G__162757));
})(),(function (){var G__162760 = cljs.core.PersistentArrayMap.EMPTY;
var G__162761 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\frac{12.15}{3^n}\\leq 0.1 \\iff n\\geq 4.37",(function (){var G__162762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__162763 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162762,G__162763) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162762,G__162763));
})()," $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162760,G__162761) : tailrecursion.hoplon.markdown.para_node.call(null,G__162760,G__162761));
})(),(function (){var G__162764 = cljs.core.PersistentArrayMap.EMPTY;
var G__162765 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since we",(function (){var G__162766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__162767 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__162766,G__162767) : tailrecursion.hoplon.markdown.simple_node.call(null,G__162766,G__162767));
})(),"re looking for an integer, we need \\(n=5\\). Hence, ",(function (){var G__162768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"p"], null);
var G__162769 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162768,G__162769) : tailrecursion.hoplon.markdown.code_node.call(null,G__162768,G__162769));
})()," will be applied 5 times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162764,G__162765) : tailrecursion.hoplon.markdown.para_node.call(null,G__162764,G__162765));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162755;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162754;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162753;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162752;
}})()], 0)),"",(function (){var _STAR_references_STAR_162770 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162771 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162772 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162773 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162774 = cljs.core.PersistentArrayMap.EMPTY;
var G__162775 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in space and number of steps (as a function of \\(a\\)) used by the process generated by the ",(function (){var G__162776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"sine"], null);
var G__162777 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162776,G__162777) : tailrecursion.hoplon.markdown.code_node.call(null,G__162776,G__162777));
})()," procedure when ",(function (){var G__162778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(sine a)"], null);
var G__162779 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__162778,G__162779) : tailrecursion.hoplon.markdown.code_node.call(null,G__162778,G__162779));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162774,G__162775) : tailrecursion.hoplon.markdown.para_node.call(null,G__162774,G__162775));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162773;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162772;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162771;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162770;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_162780 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162781 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162782 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162783 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162784 = cljs.core.PersistentArrayMap.EMPTY;
var G__162785 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One could realize, just from noting that each step divides the argument by 3, that the order of growth in the number of steps required is logarithmic (doubling the argument only adds at most one more iteration, and hence a fixed number of steps)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162784,G__162785) : tailrecursion.hoplon.markdown.para_node.call(null,G__162784,G__162785));
})(),(function (){var G__162786 = cljs.core.PersistentArrayMap.EMPTY;
var G__162787 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as in the space required, it is also logarithmic because every time you triple the argument, you only add one more iteration."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162786,G__162787) : tailrecursion.hoplon.markdown.para_node.call(null,G__162786,G__162787));
})(),(function (){var G__162788 = cljs.core.PersistentArrayMap.EMPTY;
var G__162789 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So both have \\(\\Theta(\\log x)\\) order of growth."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162788,G__162789) : tailrecursion.hoplon.markdown.para_node.call(null,G__162788,G__162789));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162783;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162782;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162781;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162780;
}})()], 0))], 0))], 0));
var G__158009 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Exponentiation"], null),(function (){var _STAR_references_STAR_162790 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162791 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_162792 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_162793 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__162794 = cljs.core.PersistentArrayMap.EMPTY;
var G__162795 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of computing the exponential of a given number. We would like a procedure that takes as arguments a base \\(b\\) and a positive integer exponent \\(n\\) and computes \\(b^n\\). One way to do this is via the recursive definition:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162794,G__162795) : tailrecursion.hoplon.markdown.para_node.call(null,G__162794,G__162795));
})(),(function (){var G__162796 = cljs.core.PersistentArrayMap.EMPTY;
var G__162797 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}b^n =& b\\cdot b^{n-1} \\\\ b^0=&1 \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162796,G__162797) : tailrecursion.hoplon.markdown.para_node.call(null,G__162796,G__162797));
})(),(function (){var G__162798 = cljs.core.PersistentArrayMap.EMPTY;
var G__162799 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which translates readily into the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162798,G__162799) : tailrecursion.hoplon.markdown.para_node.call(null,G__162798,G__162799));
})(),(function (){var G__162800 = (function (){var G__162801 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162802 = (function (){var G__162803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162804 = "(";
var G__162805 = (function (){var G__162834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162835 = "define";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162834,G__162835) : tailrecursion.hoplon.span.call(null,G__162834,G__162835));
})();
var G__162806 = " ";
var G__162807 = (function (){var G__162836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162837 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162836,G__162837) : tailrecursion.hoplon.span.call(null,G__162836,G__162837));
})();
var G__162808 = " [";
var G__162809 = (function (){var G__162838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162839 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162838,G__162839) : tailrecursion.hoplon.span.call(null,G__162838,G__162839));
})();
var G__162810 = " ";
var G__162811 = (function (){var G__162840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162841 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162840,G__162841) : tailrecursion.hoplon.span.call(null,G__162840,G__162841));
})();
var G__162812 = "]\n  (";
var G__162813 = (function (){var G__162842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162843 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162842,G__162843) : tailrecursion.hoplon.span.call(null,G__162842,G__162843));
})();
var G__162814 = "(";
var G__162815 = (function (){var G__162844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162845 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162844,G__162845) : tailrecursion.hoplon.span.call(null,G__162844,G__162845));
})();
var G__162816 = (function (){var G__162846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162847 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162846,G__162847) : tailrecursion.hoplon.span.call(null,G__162846,G__162847));
})();
var G__162817 = " ";
var G__162818 = (function (){var G__162848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162849 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162848,G__162849) : tailrecursion.hoplon.span.call(null,G__162848,G__162849));
})();
var G__162819 = ")\n      ";
var G__162820 = (function (){var G__162850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162851 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162850,G__162851) : tailrecursion.hoplon.span.call(null,G__162850,G__162851));
})();
var G__162821 = "\n      (";
var G__162822 = (function (){var G__162852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162853 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162852,G__162853) : tailrecursion.hoplon.span.call(null,G__162852,G__162853));
})();
var G__162823 = (function (){var G__162854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162855 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162854,G__162855) : tailrecursion.hoplon.span.call(null,G__162854,G__162855));
})();
var G__162824 = " (";
var G__162825 = (function (){var G__162856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162857 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162856,G__162857) : tailrecursion.hoplon.span.call(null,G__162856,G__162857));
})();
var G__162826 = " ";
var G__162827 = (function (){var G__162858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162859 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162858,G__162859) : tailrecursion.hoplon.span.call(null,G__162858,G__162859));
})();
var G__162828 = " (";
var G__162829 = (function (){var G__162860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162861 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162860,G__162861) : tailrecursion.hoplon.span.call(null,G__162860,G__162861));
})();
var G__162830 = (function (){var G__162862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162863 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162862,G__162863) : tailrecursion.hoplon.span.call(null,G__162862,G__162863));
})();
var G__162831 = " ";
var G__162832 = (function (){var G__162864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162865 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162864,G__162865) : tailrecursion.hoplon.span.call(null,G__162864,G__162865));
})();
var G__162833 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__162803,G__162804,G__162805,G__162806,G__162807,G__162808,G__162809,G__162810,G__162811,G__162812,G__162813,G__162814,G__162815,G__162816,G__162817,G__162818,G__162819,G__162820,G__162821,G__162822,G__162823,G__162824,G__162825,G__162826,G__162827,G__162828,G__162829,G__162830,G__162831,G__162832,G__162833) : tailrecursion.hoplon.pre.call(null,G__162803,G__162804,G__162805,G__162806,G__162807,G__162808,G__162809,G__162810,G__162811,G__162812,G__162813,G__162814,G__162815,G__162816,G__162817,G__162818,G__162819,G__162820,G__162821,G__162822,G__162823,G__162824,G__162825,G__162826,G__162827,G__162828,G__162829,G__162830,G__162831,G__162832,G__162833));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162801,G__162802) : tailrecursion.hoplon.div.call(null,G__162801,G__162802));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162800) : tailrecursion.hoplon.div.call(null,G__162800));
})(),(function (){var G__162866 = cljs.core.PersistentArrayMap.EMPTY;
var G__162867 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is a linear recursive process, which requires \\(\\Theta(n)\\) steps and \\(\\Theta(n)\\) space. Just as with factorial, we can readily formulate an equivalent linear iteration:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162866,G__162867) : tailrecursion.hoplon.markdown.para_node.call(null,G__162866,G__162867));
})(),(function (){var G__162868 = (function (){var G__162869 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162870 = (function (){var G__162871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162872 = "(";
var G__162873 = (function (){var G__162888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162889 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162888,G__162889) : tailrecursion.hoplon.span.call(null,G__162888,G__162889));
})();
var G__162874 = (function (){var G__162890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162891 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162890,G__162891) : tailrecursion.hoplon.span.call(null,G__162890,G__162891));
})();
var G__162875 = " [";
var G__162876 = (function (){var G__162892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162893 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162892,G__162893) : tailrecursion.hoplon.span.call(null,G__162892,G__162893));
})();
var G__162877 = " ";
var G__162878 = (function (){var G__162894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162895 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162894,G__162895) : tailrecursion.hoplon.span.call(null,G__162894,G__162895));
})();
var G__162879 = "]\n  (";
var G__162880 = (function (){var G__162896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162897 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162896,G__162897) : tailrecursion.hoplon.span.call(null,G__162896,G__162897));
})();
var G__162881 = " ";
var G__162882 = (function (){var G__162898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162899 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162898,G__162899) : tailrecursion.hoplon.span.call(null,G__162898,G__162899));
})();
var G__162883 = " ";
var G__162884 = (function (){var G__162900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162901 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162900,G__162901) : tailrecursion.hoplon.span.call(null,G__162900,G__162901));
})();
var G__162885 = " ";
var G__162886 = (function (){var G__162902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162903 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162902,G__162903) : tailrecursion.hoplon.span.call(null,G__162902,G__162903));
})();
var G__162887 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__162871,G__162872,G__162873,G__162874,G__162875,G__162876,G__162877,G__162878,G__162879,G__162880,G__162881,G__162882,G__162883,G__162884,G__162885,G__162886,G__162887) : tailrecursion.hoplon.pre.call(null,G__162871,G__162872,G__162873,G__162874,G__162875,G__162876,G__162877,G__162878,G__162879,G__162880,G__162881,G__162882,G__162883,G__162884,G__162885,G__162886,G__162887));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162869,G__162870) : tailrecursion.hoplon.div.call(null,G__162869,G__162870));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162868) : tailrecursion.hoplon.div.call(null,G__162868));
})(),(function (){var G__162904 = cljs.core.PersistentArrayMap.EMPTY;
var G__162905 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162904,G__162905) : tailrecursion.hoplon.markdown.para_node.call(null,G__162904,G__162905));
})(),(function (){var G__162906 = (function (){var G__162907 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162908 = (function (){var G__162909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162910 = "(";
var G__162911 = (function (){var G__162943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162944 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162943,G__162944) : tailrecursion.hoplon.span.call(null,G__162943,G__162944));
})();
var G__162912 = (function (){var G__162945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162946 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162945,G__162946) : tailrecursion.hoplon.span.call(null,G__162945,G__162946));
})();
var G__162913 = " [";
var G__162914 = (function (){var G__162947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162948 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162947,G__162948) : tailrecursion.hoplon.span.call(null,G__162947,G__162948));
})();
var G__162915 = " ";
var G__162916 = (function (){var G__162949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162950 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162949,G__162950) : tailrecursion.hoplon.span.call(null,G__162949,G__162950));
})();
var G__162917 = " ";
var G__162918 = (function (){var G__162951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162952 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162951,G__162952) : tailrecursion.hoplon.span.call(null,G__162951,G__162952));
})();
var G__162919 = "]\n  (";
var G__162920 = (function (){var G__162953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__162954 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162953,G__162954) : tailrecursion.hoplon.span.call(null,G__162953,G__162954));
})();
var G__162921 = "(";
var G__162922 = (function (){var G__162955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162956 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162955,G__162956) : tailrecursion.hoplon.span.call(null,G__162955,G__162956));
})();
var G__162923 = (function (){var G__162957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162958 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162957,G__162958) : tailrecursion.hoplon.span.call(null,G__162957,G__162958));
})();
var G__162924 = " ";
var G__162925 = (function (){var G__162959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162960 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162959,G__162960) : tailrecursion.hoplon.span.call(null,G__162959,G__162960));
})();
var G__162926 = ")\n      ";
var G__162927 = (function (){var G__162961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162962 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162961,G__162962) : tailrecursion.hoplon.span.call(null,G__162961,G__162962));
})();
var G__162928 = "\n      (";
var G__162929 = (function (){var G__162963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__162964 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162963,G__162964) : tailrecursion.hoplon.span.call(null,G__162963,G__162964));
})();
var G__162930 = " ";
var G__162931 = (function (){var G__162965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162966 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162965,G__162966) : tailrecursion.hoplon.span.call(null,G__162965,G__162966));
})();
var G__162932 = "\n                 (";
var G__162933 = (function (){var G__162967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162968 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162967,G__162968) : tailrecursion.hoplon.span.call(null,G__162967,G__162968));
})();
var G__162934 = (function (){var G__162969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162970 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162969,G__162970) : tailrecursion.hoplon.span.call(null,G__162969,G__162970));
})();
var G__162935 = " ";
var G__162936 = (function (){var G__162971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__162972 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162971,G__162972) : tailrecursion.hoplon.span.call(null,G__162971,G__162972));
})();
var G__162937 = ")\n                 (";
var G__162938 = (function (){var G__162973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__162974 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162973,G__162974) : tailrecursion.hoplon.span.call(null,G__162973,G__162974));
})();
var G__162939 = (function (){var G__162975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162976 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162975,G__162976) : tailrecursion.hoplon.span.call(null,G__162975,G__162976));
})();
var G__162940 = " ";
var G__162941 = (function (){var G__162977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__162978 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__162977,G__162978) : tailrecursion.hoplon.span.call(null,G__162977,G__162978));
})();
var G__162942 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__162909,G__162910,G__162911,G__162912,G__162913,G__162914,G__162915,G__162916,G__162917,G__162918,G__162919,G__162920,G__162921,G__162922,G__162923,G__162924,G__162925,G__162926,G__162927,G__162928,G__162929,G__162930,G__162931,G__162932,G__162933,G__162934,G__162935,G__162936,G__162937,G__162938,G__162939,G__162940,G__162941,G__162942) : tailrecursion.hoplon.pre.call(null,G__162909,G__162910,G__162911,G__162912,G__162913,G__162914,G__162915,G__162916,G__162917,G__162918,G__162919,G__162920,G__162921,G__162922,G__162923,G__162924,G__162925,G__162926,G__162927,G__162928,G__162929,G__162930,G__162931,G__162932,G__162933,G__162934,G__162935,G__162936,G__162937,G__162938,G__162939,G__162940,G__162941,G__162942));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162907,G__162908) : tailrecursion.hoplon.div.call(null,G__162907,G__162908));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162906) : tailrecursion.hoplon.div.call(null,G__162906));
})(),(function (){var G__162979 = cljs.core.PersistentArrayMap.EMPTY;
var G__162980 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This version requires \\(\\Theta(n)\\) steps and \\(\\Theta(1)\\) space."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162979,G__162980) : tailrecursion.hoplon.markdown.para_node.call(null,G__162979,G__162980));
})(),(function (){var G__162981 = cljs.core.PersistentArrayMap.EMPTY;
var G__162982 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can compute exponentials in fewer steps by using successive squaring. For instance, rather than computing \\(b^8\\) as \\(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot b))))))\\) we can compute it using three multiplications:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162981,G__162982) : tailrecursion.hoplon.markdown.para_node.call(null,G__162981,G__162982));
})(),(function (){var G__162983 = cljs.core.PersistentArrayMap.EMPTY;
var G__162984 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} b^2=& b\\cdot b  \\\\ b^4=& b^2\\cdot b^2  \\\\ b^8=& b^4\\cdot b^4\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162983,G__162984) : tailrecursion.hoplon.markdown.para_node.call(null,G__162983,G__162984));
})(),(function (){var G__162985 = cljs.core.PersistentArrayMap.EMPTY;
var G__162986 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This method works fine for exponents that are powers of 2. We can also take advantage of successive squaring in computing exponentials in general if we use the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162985,G__162986) : tailrecursion.hoplon.markdown.para_node.call(null,G__162985,G__162986));
})(),(function (){var G__162987 = cljs.core.PersistentArrayMap.EMPTY;
var G__162988 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  b^n=&(b^{n/2})^2 & \\text{if }& n \\text{ is even} \\\\  b^n=&b\\cdot b^{n-1} & \\text{if }& n \\text{ is odd}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162987,G__162988) : tailrecursion.hoplon.markdown.para_node.call(null,G__162987,G__162988));
})(),(function (){var G__162989 = cljs.core.PersistentArrayMap.EMPTY;
var G__162990 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express this method as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__162989,G__162990) : tailrecursion.hoplon.markdown.para_node.call(null,G__162989,G__162990));
})(),(function (){var G__162991 = (function (){var G__162992 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__162993 = (function (){var G__162994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__162995 = "(";
var G__162996 = (function (){var G__163011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163012 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163011,G__163012) : tailrecursion.hoplon.span.call(null,G__163011,G__163012));
})();
var G__162997 = (function (){var G__163013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163014 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163013,G__163014) : tailrecursion.hoplon.span.call(null,G__163013,G__163014));
})();
var G__162998 = " [";
var G__162999 = (function (){var G__163015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163016 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163015,G__163016) : tailrecursion.hoplon.span.call(null,G__163015,G__163016));
})();
var G__163000 = "]\n  (";
var G__163001 = (function (){var G__163017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163018 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163017,G__163018) : tailrecursion.hoplon.span.call(null,G__163017,G__163018));
})();
var G__163002 = "(";
var G__163003 = (function (){var G__163019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163020 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163019,G__163020) : tailrecursion.hoplon.span.call(null,G__163019,G__163020));
})();
var G__163004 = " ";
var G__163005 = (function (){var G__163021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163022 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163021,G__163022) : tailrecursion.hoplon.span.call(null,G__163021,G__163022));
})();
var G__163006 = " ";
var G__163007 = (function (){var G__163023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163024 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163023,G__163024) : tailrecursion.hoplon.span.call(null,G__163023,G__163024));
})();
var G__163008 = ") ";
var G__163009 = (function (){var G__163025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163026 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163025,G__163026) : tailrecursion.hoplon.span.call(null,G__163025,G__163026));
})();
var G__163010 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__162994,G__162995,G__162996,G__162997,G__162998,G__162999,G__163000,G__163001,G__163002,G__163003,G__163004,G__163005,G__163006,G__163007,G__163008,G__163009,G__163010) : tailrecursion.hoplon.pre.call(null,G__162994,G__162995,G__162996,G__162997,G__162998,G__162999,G__163000,G__163001,G__163002,G__163003,G__163004,G__163005,G__163006,G__163007,G__163008,G__163009,G__163010));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__162992,G__162993) : tailrecursion.hoplon.div.call(null,G__162992,G__162993));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__162991) : tailrecursion.hoplon.div.call(null,G__162991));
})(),(function (){var G__163027 = cljs.core.PersistentArrayMap.EMPTY;
var G__163028 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163029 = cljs.core.PersistentArrayMap.EMPTY;
var G__163030 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: In Clojure ",(function (){var G__163031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__163032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163031,G__163032) : tailrecursion.hoplon.markdown.code_node.call(null,G__163031,G__163032));
})()," takes the place of ",(function (){var G__163033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"remainder"], null);
var G__163034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163033,G__163034) : tailrecursion.hoplon.markdown.code_node.call(null,G__163033,G__163034));
})()," in Scheme."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163029,G__163030) : tailrecursion.hoplon.markdown.para_node.call(null,G__163029,G__163030));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__163027,G__163028) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__163027,G__163028));
})(),(function (){var G__163035 = cljs.core.PersistentArrayMap.EMPTY;
var G__163036 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process evolved by ",(function (){var G__163037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__163038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163037,G__163038) : tailrecursion.hoplon.markdown.code_node.call(null,G__163037,G__163038));
})()," grows logarithmically with \\(n\\) in both space and number of steps. To see this, observe that computing \\(b^{2n}\\) using ",(function (){var G__163039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__163040 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163039,G__163040) : tailrecursion.hoplon.markdown.code_node.call(null,G__163039,G__163040));
})()," requires only one more multiplication than computing \\(b^n\\). The size of the exponent we can compute therefore doubles (approximately) with every new multiplication we are allowed. Thus the number of multiplications required for an exponent of \\(n\\) grows about as fast as the logarithm of \\(n\\) to the base 2. The process has \\(\\Theta(\\log n)\\) growth.",(function (){var G__163041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163042 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More precisely, the number of multiplications required is equal to 1 less than the log base 2 of \\(n\\) plus the number of ones in the binary representation of \\(n\\). This total is always less than twice \\(\\log_2(n)\\). The arbitrary constants \\(k_1\\) and \\(k_2\\) in the definition of order notation imply that, for a logarithmic process, the base to which logarithms are taken does not matter, so all such processes are described as \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163041,G__163042) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163041,G__163042));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163035,G__163036) : tailrecursion.hoplon.markdown.para_node.call(null,G__163035,G__163036));
})(),(function (){var G__163043 = cljs.core.PersistentArrayMap.EMPTY;
var G__163044 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between \\(\\Theta(\\log n) \\) growth and \\(\\Theta(n) \\) growth becomes striking as \\(n \\) becomes large. For example, ",(function (){var G__163045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__163046 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163045,G__163046) : tailrecursion.hoplon.markdown.code_node.call(null,G__163045,G__163046));
})()," for \\(n=1000 \\) requires only 14 multiplications. ",(function (){var G__163047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163048 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You may wonder why anyone would care about raising numbers to the 1000th power. See section 1.26."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163047,G__163048) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163047,G__163048));
})()," It is also possible to use the idea of successive squaring to devise an iterative algorithm that computes exponentials with a logarithmic number of steps (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#/sicp/ex/1-16/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.16"], null)], 0)),"), although, as is often the case with iterative algorithms, this is not written down so straightforwardly as the recursive algorithm.",(function (){var G__163049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163050 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This iterative algorithm is ancient. It appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chandah-sutra"], null)], 0))," by \u00C1ch\u00E1rya Pingala, written before 200 B.C. See Knuth 1981, section 4.6.3, for a full discussion and analysis of this and other methods of exponentiation."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163049,G__163050) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163049,G__163050));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163043,G__163044) : tailrecursion.hoplon.markdown.para_node.call(null,G__163043,G__163044));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162793;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162792;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_162791;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_162790;
}})()], 0));
var G__158010 = "";
var G__158011 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"16-19"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(16)], null),(function (){var _STAR_references_STAR_163051 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163052 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163053 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163054 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163055 = cljs.core.PersistentArrayMap.EMPTY;
var G__163056 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Design a procedure that evolves an iterative exponentiation process that uses successive squaring and uses a logarithmic number of steps, as does ",(function (){var G__163057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__163058 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163057,G__163058) : tailrecursion.hoplon.markdown.code_node.call(null,G__163057,G__163058));
})(),". (Hint: Using the observations that \\((b^{n/2})^2=(b^2)^{n/2}\\), keep, along with the exponent \\(n\\) and the base \\(b\\), an additional state variable \\(a\\), and define the state transformation in such a way that the product \\(ab^n\\) is unchanged from state to state. At the beginning of the process \\(a\\) is taken to be 1, and the answer is given by the value of \\(a\\) at the end of the process. In general, the technique of defining an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["invariant quantity"], null)], 0))," that remains unchanged from state to state is a powerful way to think about the design of iterative algorithms.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163055,G__163056) : tailrecursion.hoplon.markdown.para_node.call(null,G__163055,G__163056));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163054;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163053;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163052;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163051;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_163059 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163060 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163061 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163062 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163063 = (function (){var G__163064 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163065 = (function (){var G__163066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163067 = "(";
var G__163068 = (function (){var G__163137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163138 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163137,G__163138) : tailrecursion.hoplon.span.call(null,G__163137,G__163138));
})();
var G__163069 = (function (){var G__163139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163140 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163139,G__163140) : tailrecursion.hoplon.span.call(null,G__163139,G__163140));
})();
var G__163070 = " [";
var G__163071 = (function (){var G__163141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163142 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163141,G__163142) : tailrecursion.hoplon.span.call(null,G__163141,G__163142));
})();
var G__163072 = " ";
var G__163073 = (function (){var G__163143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163144 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163143,G__163144) : tailrecursion.hoplon.span.call(null,G__163143,G__163144));
})();
var G__163074 = "]\n  (";
var G__163075 = (function (){var G__163145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163146 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163145,G__163146) : tailrecursion.hoplon.span.call(null,G__163145,G__163146));
})();
var G__163076 = "[";
var G__163077 = (function (){var G__163147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163148 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163147,G__163148) : tailrecursion.hoplon.span.call(null,G__163147,G__163148));
})();
var G__163078 = "     ";
var G__163079 = (function (){var G__163149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163150 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163149,G__163150) : tailrecursion.hoplon.span.call(null,G__163149,G__163150));
})();
var G__163080 = "\n         ";
var G__163081 = (function (){var G__163151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163152 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163151,G__163152) : tailrecursion.hoplon.span.call(null,G__163151,G__163152));
})();
var G__163082 = " ";
var G__163083 = (function (){var G__163153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163154 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163153,G__163154) : tailrecursion.hoplon.span.call(null,G__163153,G__163154));
})();
var G__163084 = "\n         ";
var G__163085 = (function (){var G__163155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163156 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163155,G__163156) : tailrecursion.hoplon.span.call(null,G__163155,G__163156));
})();
var G__163086 = " ";
var G__163087 = (function (){var G__163157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163158 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163157,G__163158) : tailrecursion.hoplon.span.call(null,G__163157,G__163158));
})();
var G__163088 = "]\n    (";
var G__163089 = (function (){var G__163159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163160 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163159,G__163160) : tailrecursion.hoplon.span.call(null,G__163159,G__163160));
})();
var G__163090 = "(";
var G__163091 = (function (){var G__163161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163162 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163161,G__163162) : tailrecursion.hoplon.span.call(null,G__163161,G__163162));
})();
var G__163092 = (function (){var G__163163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163164 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163163,G__163164) : tailrecursion.hoplon.span.call(null,G__163163,G__163164));
})();
var G__163093 = " ";
var G__163094 = (function (){var G__163165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163166 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163165,G__163166) : tailrecursion.hoplon.span.call(null,G__163165,G__163166));
})();
var G__163095 = ") ";
var G__163096 = (function (){var G__163167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163168 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163167,G__163168) : tailrecursion.hoplon.span.call(null,G__163167,G__163168));
})();
var G__163097 = "\n          (";
var G__163098 = (function (){var G__163169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163170 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163169,G__163170) : tailrecursion.hoplon.span.call(null,G__163169,G__163170));
})();
var G__163099 = "(";
var G__163100 = (function (){var G__163171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163172 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163171,G__163172) : tailrecursion.hoplon.span.call(null,G__163171,G__163172));
})();
var G__163101 = " ";
var G__163102 = (function (){var G__163173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163174 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163173,G__163174) : tailrecursion.hoplon.span.call(null,G__163173,G__163174));
})();
var G__163103 = " ";
var G__163104 = (function (){var G__163175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163176 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163175,G__163176) : tailrecursion.hoplon.span.call(null,G__163175,G__163176));
})();
var G__163105 = ") ";
var G__163106 = (function (){var G__163177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163178 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163177,G__163178) : tailrecursion.hoplon.span.call(null,G__163177,G__163178));
})();
var G__163107 = ") (";
var G__163108 = (function (){var G__163179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163180 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163179,G__163180) : tailrecursion.hoplon.span.call(null,G__163179,G__163180));
})();
var G__163109 = " (";
var G__163110 = (function (){var G__163181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163182 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163181,G__163182) : tailrecursion.hoplon.span.call(null,G__163181,G__163182));
})();
var G__163111 = " ";
var G__163112 = (function (){var G__163183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163184 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163183,G__163184) : tailrecursion.hoplon.span.call(null,G__163183,G__163184));
})();
var G__163113 = ") (";
var G__163114 = (function (){var G__163185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163186 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163185,G__163186) : tailrecursion.hoplon.span.call(null,G__163185,G__163186));
})();
var G__163115 = (function (){var G__163187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163188 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163187,G__163188) : tailrecursion.hoplon.span.call(null,G__163187,G__163188));
})();
var G__163116 = " ";
var G__163117 = (function (){var G__163189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163190 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163189,G__163190) : tailrecursion.hoplon.span.call(null,G__163189,G__163190));
})();
var G__163118 = ") ";
var G__163119 = (function (){var G__163191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163192 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163191,G__163192) : tailrecursion.hoplon.span.call(null,G__163191,G__163192));
})();
var G__163120 = ")\n          ";
var G__163121 = (function (){var G__163193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163194 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163193,G__163194) : tailrecursion.hoplon.span.call(null,G__163193,G__163194));
})();
var G__163122 = " (";
var G__163123 = (function (){var G__163195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163196 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163195,G__163196) : tailrecursion.hoplon.span.call(null,G__163195,G__163196));
})();
var G__163124 = " ";
var G__163125 = (function (){var G__163197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163198 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163197,G__163198) : tailrecursion.hoplon.span.call(null,G__163197,G__163198));
})();
var G__163126 = " (";
var G__163127 = (function (){var G__163199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163200 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163199,G__163200) : tailrecursion.hoplon.span.call(null,G__163199,G__163200));
})();
var G__163128 = (function (){var G__163201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163202 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163201,G__163202) : tailrecursion.hoplon.span.call(null,G__163201,G__163202));
})();
var G__163129 = " ";
var G__163130 = (function (){var G__163203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163204 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163203,G__163204) : tailrecursion.hoplon.span.call(null,G__163203,G__163204));
})();
var G__163131 = ") (";
var G__163132 = (function (){var G__163205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163206 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163205,G__163206) : tailrecursion.hoplon.span.call(null,G__163205,G__163206));
})();
var G__163133 = (function (){var G__163207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163208 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163207,G__163208) : tailrecursion.hoplon.span.call(null,G__163207,G__163208));
})();
var G__163134 = " ";
var G__163135 = (function (){var G__163209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163210 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163209,G__163210) : tailrecursion.hoplon.span.call(null,G__163209,G__163210));
})();
var G__163136 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__163066,G__163067,G__163068,G__163069,G__163070,G__163071,G__163072,G__163073,G__163074,G__163075,G__163076,G__163077,G__163078,G__163079,G__163080,G__163081,G__163082,G__163083,G__163084,G__163085,G__163086,G__163087,G__163088,G__163089,G__163090,G__163091,G__163092,G__163093,G__163094,G__163095,G__163096,G__163097,G__163098,G__163099,G__163100,G__163101,G__163102,G__163103,G__163104,G__163105,G__163106,G__163107,G__163108,G__163109,G__163110,G__163111,G__163112,G__163113,G__163114,G__163115,G__163116,G__163117,G__163118,G__163119,G__163120,G__163121,G__163122,G__163123,G__163124,G__163125,G__163126,G__163127,G__163128,G__163129,G__163130,G__163131,G__163132,G__163133,G__163134,G__163135,G__163136) : tailrecursion.hoplon.pre.call(null,G__163066,G__163067,G__163068,G__163069,G__163070,G__163071,G__163072,G__163073,G__163074,G__163075,G__163076,G__163077,G__163078,G__163079,G__163080,G__163081,G__163082,G__163083,G__163084,G__163085,G__163086,G__163087,G__163088,G__163089,G__163090,G__163091,G__163092,G__163093,G__163094,G__163095,G__163096,G__163097,G__163098,G__163099,G__163100,G__163101,G__163102,G__163103,G__163104,G__163105,G__163106,G__163107,G__163108,G__163109,G__163110,G__163111,G__163112,G__163113,G__163114,G__163115,G__163116,G__163117,G__163118,G__163119,G__163120,G__163121,G__163122,G__163123,G__163124,G__163125,G__163126,G__163127,G__163128,G__163129,G__163130,G__163131,G__163132,G__163133,G__163134,G__163135,G__163136));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163064,G__163065) : tailrecursion.hoplon.div.call(null,G__163064,G__163065));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163063) : tailrecursion.hoplon.div.call(null,G__163063));
})(),(function (){var G__163211 = cljs.core.PersistentArrayMap.EMPTY;
var G__163212 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: Due to the fact that Clojure is not tail-recursive, in order to avoid a stack overflow, we want to avoid recursion whenever possible. These are the perils of working with a hosted language."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163211,G__163212) : tailrecursion.hoplon.markdown.para_node.call(null,G__163211,G__163212));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163062;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163061;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163060;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163059;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(17)], null),(function (){var _STAR_references_STAR_163213 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163214 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163215 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163216 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163217 = cljs.core.PersistentArrayMap.EMPTY;
var G__163218 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The exponentiation algorithms in this section are based on performing exponentiation by means of repeated multiplication. In a similar way, one can perform integer multiplication by means of repeated addition. The following multiplication procedure (in which it is assumed that our language can only add, not multiply) is analogous to the ",(function (){var G__163219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expt"], null);
var G__163220 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163219,G__163220) : tailrecursion.hoplon.markdown.code_node.call(null,G__163219,G__163220));
})()," procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163217,G__163218) : tailrecursion.hoplon.markdown.para_node.call(null,G__163217,G__163218));
})(),(function (){var G__163221 = (function (){var G__163222 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163223 = (function (){var G__163224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163225 = "(";
var G__163226 = (function (){var G__163253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163254 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163253,G__163254) : tailrecursion.hoplon.span.call(null,G__163253,G__163254));
})();
var G__163227 = (function (){var G__163255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163256 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163255,G__163256) : tailrecursion.hoplon.span.call(null,G__163255,G__163256));
})();
var G__163228 = "[";
var G__163229 = (function (){var G__163257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163258 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163257,G__163258) : tailrecursion.hoplon.span.call(null,G__163257,G__163258));
})();
var G__163230 = " ";
var G__163231 = (function (){var G__163259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163260 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163259,G__163260) : tailrecursion.hoplon.span.call(null,G__163259,G__163260));
})();
var G__163232 = "]\n  (";
var G__163233 = (function (){var G__163261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163262 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163261,G__163262) : tailrecursion.hoplon.span.call(null,G__163261,G__163262));
})();
var G__163234 = "(";
var G__163235 = (function (){var G__163263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163264 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163263,G__163264) : tailrecursion.hoplon.span.call(null,G__163263,G__163264));
})();
var G__163236 = (function (){var G__163265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163266 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163265,G__163266) : tailrecursion.hoplon.span.call(null,G__163265,G__163266));
})();
var G__163237 = " ";
var G__163238 = (function (){var G__163267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163268 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163267,G__163268) : tailrecursion.hoplon.span.call(null,G__163267,G__163268));
})();
var G__163239 = ")\n      ";
var G__163240 = (function (){var G__163269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163270 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163269,G__163270) : tailrecursion.hoplon.span.call(null,G__163269,G__163270));
})();
var G__163241 = "\n      (";
var G__163242 = (function (){var G__163271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163272 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163271,G__163272) : tailrecursion.hoplon.span.call(null,G__163271,G__163272));
})();
var G__163243 = (function (){var G__163273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163274 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163273,G__163274) : tailrecursion.hoplon.span.call(null,G__163273,G__163274));
})();
var G__163244 = " (";
var G__163245 = (function (){var G__163275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163276 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163275,G__163276) : tailrecursion.hoplon.span.call(null,G__163275,G__163276));
})();
var G__163246 = (function (){var G__163277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163278 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163277,G__163278) : tailrecursion.hoplon.span.call(null,G__163277,G__163278));
})();
var G__163247 = " (";
var G__163248 = (function (){var G__163279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163280 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163279,G__163280) : tailrecursion.hoplon.span.call(null,G__163279,G__163280));
})();
var G__163249 = (function (){var G__163281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163282 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163281,G__163282) : tailrecursion.hoplon.span.call(null,G__163281,G__163282));
})();
var G__163250 = " ";
var G__163251 = (function (){var G__163283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163284 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163283,G__163284) : tailrecursion.hoplon.span.call(null,G__163283,G__163284));
})();
var G__163252 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__163224,G__163225,G__163226,G__163227,G__163228,G__163229,G__163230,G__163231,G__163232,G__163233,G__163234,G__163235,G__163236,G__163237,G__163238,G__163239,G__163240,G__163241,G__163242,G__163243,G__163244,G__163245,G__163246,G__163247,G__163248,G__163249,G__163250,G__163251,G__163252) : tailrecursion.hoplon.pre.call(null,G__163224,G__163225,G__163226,G__163227,G__163228,G__163229,G__163230,G__163231,G__163232,G__163233,G__163234,G__163235,G__163236,G__163237,G__163238,G__163239,G__163240,G__163241,G__163242,G__163243,G__163244,G__163245,G__163246,G__163247,G__163248,G__163249,G__163250,G__163251,G__163252));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163222,G__163223) : tailrecursion.hoplon.div.call(null,G__163222,G__163223));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163221) : tailrecursion.hoplon.div.call(null,G__163221));
})(),(function (){var G__163285 = cljs.core.PersistentArrayMap.EMPTY;
var G__163286 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm takes a number of steps that is linear in ",(function (){var G__163287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"b"], null);
var G__163288 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163287,G__163288) : tailrecursion.hoplon.markdown.code_node.call(null,G__163287,G__163288));
})(),". Now suppose we include, together with addition, operations ",(function (){var G__163289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"double"], null);
var G__163290 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163289,G__163290) : tailrecursion.hoplon.markdown.code_node.call(null,G__163289,G__163290));
})(),", which doubles an integer, and ",(function (){var G__163291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"halve"], null);
var G__163292 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163291,G__163292) : tailrecursion.hoplon.markdown.code_node.call(null,G__163291,G__163292));
})(),", which divides an (even) integer by 2. Using these, design a multiplication procedure analogous to ",(function (){var G__163293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__163294 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163293,G__163294) : tailrecursion.hoplon.markdown.code_node.call(null,G__163293,G__163294));
})()," that uses a logarithmic number of steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163285,G__163286) : tailrecursion.hoplon.markdown.para_node.call(null,G__163285,G__163286));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163216;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163215;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163214;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163213;
}})(),content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_163295 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163296 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163297 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163298 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163299 = (function (){var G__163300 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163301 = (function (){var G__163302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163303 = "(";
var G__163304 = (function (){var G__163371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163372 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163371,G__163372) : tailrecursion.hoplon.span.call(null,G__163371,G__163372));
})();
var G__163305 = (function (){var G__163373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163374 = "fast-mult";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163373,G__163374) : tailrecursion.hoplon.span.call(null,G__163373,G__163374));
})();
var G__163306 = " [";
var G__163307 = (function (){var G__163375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163376 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163375,G__163376) : tailrecursion.hoplon.span.call(null,G__163375,G__163376));
})();
var G__163308 = " ";
var G__163309 = (function (){var G__163377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163378 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163377,G__163378) : tailrecursion.hoplon.span.call(null,G__163377,G__163378));
})();
var G__163310 = "]\n  (";
var G__163311 = (function (){var G__163379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163380 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163379,G__163380) : tailrecursion.hoplon.span.call(null,G__163379,G__163380));
})();
var G__163312 = "[";
var G__163313 = (function (){var G__163381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163382 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163381,G__163382) : tailrecursion.hoplon.span.call(null,G__163381,G__163382));
})();
var G__163314 = " ";
var G__163315 = (function (){var G__163383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163384 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163383,G__163384) : tailrecursion.hoplon.span.call(null,G__163383,G__163384));
})();
var G__163316 = "\n         ";
var G__163317 = (function (){var G__163385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163386 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163385,G__163386) : tailrecursion.hoplon.span.call(null,G__163385,G__163386));
})();
var G__163318 = " ";
var G__163319 = (function (){var G__163387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163388 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163387,G__163388) : tailrecursion.hoplon.span.call(null,G__163387,G__163388));
})();
var G__163320 = "\n         ";
var G__163321 = (function (){var G__163389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163390 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163389,G__163390) : tailrecursion.hoplon.span.call(null,G__163389,G__163390));
})();
var G__163322 = "   ";
var G__163323 = (function (){var G__163391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163392 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163391,G__163392) : tailrecursion.hoplon.span.call(null,G__163391,G__163392));
})();
var G__163324 = "]\n    (";
var G__163325 = (function (){var G__163393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163394 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163393,G__163394) : tailrecursion.hoplon.span.call(null,G__163393,G__163394));
})();
var G__163326 = "(";
var G__163327 = (function (){var G__163395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163396 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163395,G__163396) : tailrecursion.hoplon.span.call(null,G__163395,G__163396));
})();
var G__163328 = (function (){var G__163397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163398 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163397,G__163398) : tailrecursion.hoplon.span.call(null,G__163397,G__163398));
})();
var G__163329 = " ";
var G__163330 = (function (){var G__163399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163400 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163399,G__163400) : tailrecursion.hoplon.span.call(null,G__163399,G__163400));
})();
var G__163331 = ") ";
var G__163332 = (function (){var G__163401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163402 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163401,G__163402) : tailrecursion.hoplon.span.call(null,G__163401,G__163402));
})();
var G__163333 = "\n          (";
var G__163334 = (function (){var G__163403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163404 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163403,G__163404) : tailrecursion.hoplon.span.call(null,G__163403,G__163404));
})();
var G__163335 = "(";
var G__163336 = (function (){var G__163405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163406 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163405,G__163406) : tailrecursion.hoplon.span.call(null,G__163405,G__163406));
})();
var G__163337 = " ";
var G__163338 = (function (){var G__163407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163408 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163407,G__163408) : tailrecursion.hoplon.span.call(null,G__163407,G__163408));
})();
var G__163339 = " ";
var G__163340 = (function (){var G__163409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163410 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163409,G__163410) : tailrecursion.hoplon.span.call(null,G__163409,G__163410));
})();
var G__163341 = ") ";
var G__163342 = (function (){var G__163411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163412 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163411,G__163412) : tailrecursion.hoplon.span.call(null,G__163411,G__163412));
})();
var G__163343 = ") (";
var G__163344 = (function (){var G__163413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163414 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163413,G__163414) : tailrecursion.hoplon.span.call(null,G__163413,G__163414));
})();
var G__163345 = " (";
var G__163346 = (function (){var G__163415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163416 = "halve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163415,G__163416) : tailrecursion.hoplon.span.call(null,G__163415,G__163416));
})();
var G__163347 = " ";
var G__163348 = (function (){var G__163417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163418 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163417,G__163418) : tailrecursion.hoplon.span.call(null,G__163417,G__163418));
})();
var G__163349 = ") (";
var G__163350 = (function (){var G__163419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163420 = "double ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163419,G__163420) : tailrecursion.hoplon.span.call(null,G__163419,G__163420));
})();
var G__163351 = (function (){var G__163421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163422 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163421,G__163422) : tailrecursion.hoplon.span.call(null,G__163421,G__163422));
})();
var G__163352 = ") ";
var G__163353 = (function (){var G__163423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163424 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163423,G__163424) : tailrecursion.hoplon.span.call(null,G__163423,G__163424));
})();
var G__163354 = ")\n          ";
var G__163355 = (function (){var G__163425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163426 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163425,G__163426) : tailrecursion.hoplon.span.call(null,G__163425,G__163426));
})();
var G__163356 = " (";
var G__163357 = (function (){var G__163427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163428 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163427,G__163428) : tailrecursion.hoplon.span.call(null,G__163427,G__163428));
})();
var G__163358 = " (";
var G__163359 = (function (){var G__163429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163430 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163429,G__163430) : tailrecursion.hoplon.span.call(null,G__163429,G__163430));
})();
var G__163360 = (function (){var G__163431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163432 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163431,G__163432) : tailrecursion.hoplon.span.call(null,G__163431,G__163432));
})();
var G__163361 = " ";
var G__163362 = (function (){var G__163433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163434 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163433,G__163434) : tailrecursion.hoplon.span.call(null,G__163433,G__163434));
})();
var G__163363 = ") ";
var G__163364 = (function (){var G__163435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163436 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163435,G__163436) : tailrecursion.hoplon.span.call(null,G__163435,G__163436));
})();
var G__163365 = " (";
var G__163366 = (function (){var G__163437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163438 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163437,G__163438) : tailrecursion.hoplon.span.call(null,G__163437,G__163438));
})();
var G__163367 = (function (){var G__163439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163440 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163439,G__163440) : tailrecursion.hoplon.span.call(null,G__163439,G__163440));
})();
var G__163368 = " ";
var G__163369 = (function (){var G__163441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163442 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163441,G__163442) : tailrecursion.hoplon.span.call(null,G__163441,G__163442));
})();
var G__163370 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__163302,G__163303,G__163304,G__163305,G__163306,G__163307,G__163308,G__163309,G__163310,G__163311,G__163312,G__163313,G__163314,G__163315,G__163316,G__163317,G__163318,G__163319,G__163320,G__163321,G__163322,G__163323,G__163324,G__163325,G__163326,G__163327,G__163328,G__163329,G__163330,G__163331,G__163332,G__163333,G__163334,G__163335,G__163336,G__163337,G__163338,G__163339,G__163340,G__163341,G__163342,G__163343,G__163344,G__163345,G__163346,G__163347,G__163348,G__163349,G__163350,G__163351,G__163352,G__163353,G__163354,G__163355,G__163356,G__163357,G__163358,G__163359,G__163360,G__163361,G__163362,G__163363,G__163364,G__163365,G__163366,G__163367,G__163368,G__163369,G__163370) : tailrecursion.hoplon.pre.call(null,G__163302,G__163303,G__163304,G__163305,G__163306,G__163307,G__163308,G__163309,G__163310,G__163311,G__163312,G__163313,G__163314,G__163315,G__163316,G__163317,G__163318,G__163319,G__163320,G__163321,G__163322,G__163323,G__163324,G__163325,G__163326,G__163327,G__163328,G__163329,G__163330,G__163331,G__163332,G__163333,G__163334,G__163335,G__163336,G__163337,G__163338,G__163339,G__163340,G__163341,G__163342,G__163343,G__163344,G__163345,G__163346,G__163347,G__163348,G__163349,G__163350,G__163351,G__163352,G__163353,G__163354,G__163355,G__163356,G__163357,G__163358,G__163359,G__163360,G__163361,G__163362,G__163363,G__163364,G__163365,G__163366,G__163367,G__163368,G__163369,G__163370));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163300,G__163301) : tailrecursion.hoplon.div.call(null,G__163300,G__163301));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163299) : tailrecursion.hoplon.div.call(null,G__163299));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163298;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163297;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163296;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163295;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(18)], null),(function (){var _STAR_references_STAR_163443 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163444 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163445 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163446 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163447 = cljs.core.PersistentArrayMap.EMPTY;
var G__163448 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the results of exercises 1.16 and 1.17, devise a procedure that generates an iterative process for multiplying two integers in terms of adding, doubling, and halving and uses a logarithmic number of steps.",(function (){var G__163449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163450 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm, which is sometimes known as the ",(function (){var G__163451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__163452 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Russian peasant method"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163451,G__163452) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163451,G__163452));
})()," of multiplication, is ancient. Examples of its use are found in the Rhind Papyrus, one of the two oldest mathematical documents in existence, written about 1700 B.C. (and copied from an even older document) by an Egyptian scribe named A",(function (){var G__163453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163454 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163453,G__163454) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163453,G__163454));
})(),"h-mose."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163449,G__163450) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163449,G__163450));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163447,G__163448) : tailrecursion.hoplon.markdown.para_node.call(null,G__163447,G__163448));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163446;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163445;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163444;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163443;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_163455 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163456 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163457 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163458 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163459 = cljs.core.PersistentArrayMap.EMPTY;
var G__163460 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It",(function (){var G__163461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163462 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163461,G__163462) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163461,G__163462));
})(),"s exactly the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163459,G__163460) : tailrecursion.hoplon.markdown.para_node.call(null,G__163459,G__163460));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163458;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163457;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163456;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163455;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(19)], null),(function (){var _STAR_references_STAR_163463 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163464 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163465 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163466 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163467 = cljs.core.PersistentArrayMap.EMPTY;
var G__163468 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There is a clever algorithm for computing the Fibonacci numbers in a logarithmic number of steps. Recall the transformation of the state variables \\(a\\) and \\(b\\) in the ",(function (){var G__163469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fib-iter"], null);
var G__163470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163469,G__163470) : tailrecursion.hoplon.markdown.code_node.call(null,G__163469,G__163470));
})()," process of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),": \\(a\\to a + b\\) and \\(b\\to a\\). Call this transformation \\(T\\), and observe that applying \\(T\\) over and over again \\(n\\) times, starting with 0 and 1, produces the pair \\(Fib(n)\\) and \\(Fib(n+1)\\). In other words, the Fibonacci numbers are produced by applying \\(T^n\\), the nth power of the transformation \\(T\\), starting with the pair (0,1). Now consider \\(T\\) to be the special case of \\(p = 0\\) and \\(q = 1\\) in a family of transformations \\(T_{pq}\\), where \\(T_{pq}\\) transforms the pair (a,b) according to \\(a\\to ap + bq\\) and \\(b\\to aq + bq + bp\\) (so that \\(T_{pq}(a,b)=(ap+bq,aq+bq+bp)\\)). Show that if we apply such a transformation \\(T_{pq}\\) twice, the effect is the same as using a single transformation \\(T_{p\u2019q\u2019}\\) of the same form, and compute \\(p\u2019\\) and \\(q\u2019\\) in terms of \\(p\\) and \\(q\\). This gives us an explicit way to square these transformations, and thus we can compute \\(T^n\\) using successive squaring, as in the ",(function (){var G__163471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__163472 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163471,G__163472) : tailrecursion.hoplon.markdown.code_node.call(null,G__163471,G__163472));
})()," procedure. Put this all together to complete the following procedure, which runs in a logarithmic number of steps:",(function (){var G__163473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163474 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This exercise was suggested to us by Joe Stoy, based on an example in Kaldewaij 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163473,G__163474) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163473,G__163474));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163467,G__163468) : tailrecursion.hoplon.markdown.para_node.call(null,G__163467,G__163468));
})(),(function (){var G__163475 = (function (){var G__163476 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163477 = (function (){var G__163478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163479 = "(";
var G__163480 = (function (){var G__163574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163575 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163574,G__163575) : tailrecursion.hoplon.span.call(null,G__163574,G__163575));
})();
var G__163481 = (function (){var G__163576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163577 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163576,G__163577) : tailrecursion.hoplon.span.call(null,G__163576,G__163577));
})();
var G__163482 = " [";
var G__163483 = (function (){var G__163578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163579 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163578,G__163579) : tailrecursion.hoplon.span.call(null,G__163578,G__163579));
})();
var G__163484 = "]\n  (";
var G__163485 = (function (){var G__163580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163581 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163580,G__163581) : tailrecursion.hoplon.span.call(null,G__163580,G__163581));
})();
var G__163486 = "[";
var G__163487 = (function (){var G__163582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163583 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163582,G__163583) : tailrecursion.hoplon.span.call(null,G__163582,G__163583));
})();
var G__163488 = " ";
var G__163489 = (function (){var G__163584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163585 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163584,G__163585) : tailrecursion.hoplon.span.call(null,G__163584,G__163585));
})();
var G__163490 = "\n         ";
var G__163491 = (function (){var G__163586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163587 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163586,G__163587) : tailrecursion.hoplon.span.call(null,G__163586,G__163587));
})();
var G__163492 = " ";
var G__163493 = (function (){var G__163588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163589 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163588,G__163589) : tailrecursion.hoplon.span.call(null,G__163588,G__163589));
})();
var G__163494 = "\n         ";
var G__163495 = (function (){var G__163590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163591 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163590,G__163591) : tailrecursion.hoplon.span.call(null,G__163590,G__163591));
})();
var G__163496 = " ";
var G__163497 = (function (){var G__163592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163593 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163592,G__163593) : tailrecursion.hoplon.span.call(null,G__163592,G__163593));
})();
var G__163498 = "\n         ";
var G__163499 = (function (){var G__163594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163595 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163594,G__163595) : tailrecursion.hoplon.span.call(null,G__163594,G__163595));
})();
var G__163500 = " ";
var G__163501 = (function (){var G__163596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163597 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163596,G__163597) : tailrecursion.hoplon.span.call(null,G__163596,G__163597));
})();
var G__163502 = "\n         ";
var G__163503 = (function (){var G__163598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163599 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163598,G__163599) : tailrecursion.hoplon.span.call(null,G__163598,G__163599));
})();
var G__163504 = (function (){var G__163600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163601 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163600,G__163601) : tailrecursion.hoplon.span.call(null,G__163600,G__163601));
})();
var G__163505 = "]\n    (";
var G__163506 = (function (){var G__163602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163603 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163602,G__163603) : tailrecursion.hoplon.span.call(null,G__163602,G__163603));
})();
var G__163507 = "(";
var G__163508 = (function (){var G__163604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163605 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163604,G__163605) : tailrecursion.hoplon.span.call(null,G__163604,G__163605));
})();
var G__163509 = (function (){var G__163606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163607 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163606,G__163607) : tailrecursion.hoplon.span.call(null,G__163606,G__163607));
})();
var G__163510 = ") ";
var G__163511 = (function (){var G__163608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163609 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163608,G__163609) : tailrecursion.hoplon.span.call(null,G__163608,G__163609));
})();
var G__163512 = "\n          (";
var G__163513 = (function (){var G__163610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163611 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163610,G__163611) : tailrecursion.hoplon.span.call(null,G__163610,G__163611));
})();
var G__163514 = " ";
var G__163515 = (function (){var G__163612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163613 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163612,G__163613) : tailrecursion.hoplon.span.call(null,G__163612,G__163613));
})();
var G__163516 = ") (";
var G__163517 = (function (){var G__163614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163615 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163614,G__163615) : tailrecursion.hoplon.span.call(null,G__163614,G__163615));
})();
var G__163518 = " ";
var G__163519 = (function (){var G__163616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163617 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163616,G__163617) : tailrecursion.hoplon.span.call(null,G__163616,G__163617));
})();
var G__163520 = "  ";
var G__163521 = (function (){var G__163618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__163619 = "; compute p'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163618,G__163619) : tailrecursion.hoplon.span.call(null,G__163618,G__163619));
})();
var G__163522 = "\n                               ";
var G__163523 = (function (){var G__163620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163621 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163620,G__163621) : tailrecursion.hoplon.span.call(null,G__163620,G__163621));
})();
var G__163524 = "  ";
var G__163525 = (function (){var G__163622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #408080; font-style: italic"], null);
var G__163623 = "; compute q'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163622,G__163623) : tailrecursion.hoplon.span.call(null,G__163622,G__163623));
})();
var G__163526 = "\n                               ";
var G__163527 = (function (){var G__163624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163625 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163624,G__163625) : tailrecursion.hoplon.span.call(null,G__163624,G__163625));
})();
var G__163528 = "\n                               ";
var G__163529 = (function (){var G__163626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163627 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163626,G__163627) : tailrecursion.hoplon.span.call(null,G__163626,G__163627));
})();
var G__163530 = "\n                               (";
var G__163531 = (function (){var G__163628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163629 = "/ count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163628,G__163629) : tailrecursion.hoplon.span.call(null,G__163628,G__163629));
})();
var G__163532 = (function (){var G__163630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163631 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163630,G__163631) : tailrecursion.hoplon.span.call(null,G__163630,G__163631));
})();
var G__163533 = "))\n          ";
var G__163534 = (function (){var G__163632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163633 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163632,G__163633) : tailrecursion.hoplon.span.call(null,G__163632,G__163633));
})();
var G__163535 = " (";
var G__163536 = (function (){var G__163634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163635 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163634,G__163635) : tailrecursion.hoplon.span.call(null,G__163634,G__163635));
})();
var G__163537 = " ";
var G__163538 = (function (){var G__163636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163637 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163636,G__163637) : tailrecursion.hoplon.span.call(null,G__163636,G__163637));
})();
var G__163539 = "\n                       ";
var G__163540 = (function (){var G__163638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163639 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163638,G__163639) : tailrecursion.hoplon.span.call(null,G__163638,G__163639));
})();
var G__163541 = "\n                       (";
var G__163542 = (function (){var G__163640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163641 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163640,G__163641) : tailrecursion.hoplon.span.call(null,G__163640,G__163641));
})();
var G__163543 = "(";
var G__163544 = (function (){var G__163642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163643 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163642,G__163643) : tailrecursion.hoplon.span.call(null,G__163642,G__163643));
})();
var G__163545 = (function (){var G__163644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163645 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163644,G__163645) : tailrecursion.hoplon.span.call(null,G__163644,G__163645));
})();
var G__163546 = " ";
var G__163547 = (function (){var G__163646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163647 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163646,G__163647) : tailrecursion.hoplon.span.call(null,G__163646,G__163647));
})();
var G__163548 = ") (";
var G__163549 = (function (){var G__163648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163649 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163648,G__163649) : tailrecursion.hoplon.span.call(null,G__163648,G__163649));
})();
var G__163550 = (function (){var G__163650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163651 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163650,G__163651) : tailrecursion.hoplon.span.call(null,G__163650,G__163651));
})();
var G__163551 = " ";
var G__163552 = (function (){var G__163652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163653 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163652,G__163653) : tailrecursion.hoplon.span.call(null,G__163652,G__163653));
})();
var G__163553 = "))\n                       (";
var G__163554 = (function (){var G__163654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163655 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163654,G__163655) : tailrecursion.hoplon.span.call(null,G__163654,G__163655));
})();
var G__163555 = "(";
var G__163556 = (function (){var G__163656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163657 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163656,G__163657) : tailrecursion.hoplon.span.call(null,G__163656,G__163657));
})();
var G__163557 = (function (){var G__163658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163659 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163658,G__163659) : tailrecursion.hoplon.span.call(null,G__163658,G__163659));
})();
var G__163558 = " ";
var G__163559 = (function (){var G__163660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163661 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163660,G__163661) : tailrecursion.hoplon.span.call(null,G__163660,G__163661));
})();
var G__163560 = ") (";
var G__163561 = (function (){var G__163662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163663 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163662,G__163663) : tailrecursion.hoplon.span.call(null,G__163662,G__163663));
})();
var G__163562 = (function (){var G__163664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163665 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163664,G__163665) : tailrecursion.hoplon.span.call(null,G__163664,G__163665));
})();
var G__163563 = " ";
var G__163564 = (function (){var G__163666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163667 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163666,G__163667) : tailrecursion.hoplon.span.call(null,G__163666,G__163667));
})();
var G__163565 = ") (";
var G__163566 = (function (){var G__163668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163669 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163668,G__163669) : tailrecursion.hoplon.span.call(null,G__163668,G__163669));
})();
var G__163567 = (function (){var G__163670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163671 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163670,G__163671) : tailrecursion.hoplon.span.call(null,G__163670,G__163671));
})();
var G__163568 = " ";
var G__163569 = (function (){var G__163672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163673 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163672,G__163673) : tailrecursion.hoplon.span.call(null,G__163672,G__163673));
})();
var G__163570 = "))\n                       (";
var G__163571 = (function (){var G__163674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163675 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163674,G__163675) : tailrecursion.hoplon.span.call(null,G__163674,G__163675));
})();
var G__163572 = (function (){var G__163676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163677 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163676,G__163677) : tailrecursion.hoplon.span.call(null,G__163676,G__163677));
})();
var G__163573 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96(G__163478,G__163479,G__163480,G__163481,G__163482,G__163483,G__163484,G__163485,G__163486,G__163487,G__163488,G__163489,G__163490,G__163491,G__163492,G__163493,G__163494,G__163495,G__163496,G__163497,G__163498,G__163499,G__163500,G__163501,G__163502,G__163503,G__163504,G__163505,G__163506,G__163507,G__163508,G__163509,G__163510,G__163511,G__163512,G__163513,G__163514,G__163515,G__163516,G__163517,G__163518,G__163519,G__163520,G__163521,G__163522,G__163523,G__163524,G__163525,G__163526,G__163527,G__163528,G__163529,G__163530,G__163531,G__163532,G__163533,G__163534,G__163535,G__163536,G__163537,G__163538,G__163539,G__163540,G__163541,G__163542,G__163543,G__163544,G__163545,G__163546,G__163547,G__163548,G__163549,G__163550,G__163551,G__163552,G__163553,G__163554,G__163555,G__163556,G__163557,G__163558,G__163559,G__163560,G__163561,G__163562,G__163563,G__163564,G__163565,G__163566,G__163567,G__163568,G__163569,G__163570,G__163571,G__163572,G__163573) : tailrecursion.hoplon.pre.call(null,G__163478,G__163479,G__163480,G__163481,G__163482,G__163483,G__163484,G__163485,G__163486,G__163487,G__163488,G__163489,G__163490,G__163491,G__163492,G__163493,G__163494,G__163495,G__163496,G__163497,G__163498,G__163499,G__163500,G__163501,G__163502,G__163503,G__163504,G__163505,G__163506,G__163507,G__163508,G__163509,G__163510,G__163511,G__163512,G__163513,G__163514,G__163515,G__163516,G__163517,G__163518,G__163519,G__163520,G__163521,G__163522,G__163523,G__163524,G__163525,G__163526,G__163527,G__163528,G__163529,G__163530,G__163531,G__163532,G__163533,G__163534,G__163535,G__163536,G__163537,G__163538,G__163539,G__163540,G__163541,G__163542,G__163543,G__163544,G__163545,G__163546,G__163547,G__163548,G__163549,G__163550,G__163551,G__163552,G__163553,G__163554,G__163555,G__163556,G__163557,G__163558,G__163559,G__163560,G__163561,G__163562,G__163563,G__163564,G__163565,G__163566,G__163567,G__163568,G__163569,G__163570,G__163571,G__163572,G__163573));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163476,G__163477) : tailrecursion.hoplon.div.call(null,G__163476,G__163477));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163475) : tailrecursion.hoplon.div.call(null,G__163475));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163466;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163465;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163464;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163463;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_163678 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163679 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163680 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163681 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163682 = cljs.core.PersistentArrayMap.EMPTY;
var G__163683 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__163684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163685 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163684,G__163685) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163684,G__163685));
})(),"s find what \\(p",(function (){var G__163686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163687 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163686,G__163687) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163686,G__163687));
})(),",q",(function (){var G__163688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163689 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163688,G__163689) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163688,G__163689));
})(),"\\) are."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163682,G__163683) : tailrecursion.hoplon.markdown.para_node.call(null,G__163682,G__163683));
})(),(function (){var G__163690 = cljs.core.PersistentArrayMap.EMPTY;
var G__163691 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}T_{pq}^2(a,b)=&T_{pq}(ap+bq,aq+bq+bp) \\\\=&((ap+bq)p+(aq+bq+bp)q,(ap+bq)q+(aq+bq+bp)(q+p)) \\\\=&(ap^2+bpq+aq^2+bq^2+bpq, apq+bq^2+aq^2+apq+b(q+p)^2) \\\\=&(a(p^2+q^2)+b(q^2+2pq),a(q^2+2pq)+b(p^2+2q^2+2pq))\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163690,G__163691) : tailrecursion.hoplon.markdown.para_node.call(null,G__163690,G__163691));
})(),(function (){var G__163692 = cljs.core.PersistentArrayMap.EMPTY;
var G__163693 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that, \\(p",(function (){var G__163694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163695 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163694,G__163695) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163694,G__163695));
})(),"=p^2+q^2\\) and \\(q",(function (){var G__163696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163697 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163696,G__163697) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163696,G__163697));
})(),"=q^2+2pq\\) and our missing pieces of code are, ",(function (){var G__163698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ (square p) (square q))"], null);
var G__163699 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163698,G__163699) : tailrecursion.hoplon.markdown.code_node.call(null,G__163698,G__163699));
})()," and ",(function (){var G__163700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ (square q)\n(* 2 p q))"], null);
var G__163701 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163700,G__163701) : tailrecursion.hoplon.markdown.code_node.call(null,G__163700,G__163701));
})()," respectively."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163692,G__163693) : tailrecursion.hoplon.markdown.para_node.call(null,G__163692,G__163693));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163681;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163680;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163679;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163678;
}})()], 0))], 0))], 0));
var G__158012 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Greatest Common Divisors"], null),(function (){var _STAR_references_STAR_163702 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163703 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163704 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163705 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163706 = cljs.core.PersistentArrayMap.EMPTY;
var G__163707 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The greatest common divisor (GCD) of two integers \\(a\\) and \\(b\\) is defined to be the largest integer that divides both \\(a\\) and \\(b\\) with no remainder. For example, the GCD of 16 and 28 is 4. In chapter 2, when we investigate how to implement rational-number arithmetic, we will need to be able to compute GCDs in order to reduce rational numbers to lowest terms. (To reduce a rational number to lowest terms, we must divide both the numerator and the denominator by their GCD. For example, 16/28 reduces to 4/7.) One way to find the GCD of two integers is to factor them and search for common factors, but there is a famous algorithm that is much more efficient."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163706,G__163707) : tailrecursion.hoplon.markdown.para_node.call(null,G__163706,G__163707));
})(),(function (){var G__163708 = cljs.core.PersistentArrayMap.EMPTY;
var G__163709 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea of the algorithm is based on the observation that, if \\(r\\) is the remainder when \\(a\\) is divided by \\(b\\), then the common divisors of \\(a\\) and \\(b\\) are precisely the same as the common divisors of \\(b\\) and \\(r\\). Thus, we can use the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163708,G__163709) : tailrecursion.hoplon.markdown.para_node.call(null,G__163708,G__163709));
})(),(function (){var G__163710 = cljs.core.PersistentArrayMap.EMPTY;
var G__163711 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$GCD(a,b)=GCD(b,r)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163710,G__163711) : tailrecursion.hoplon.markdown.para_node.call(null,G__163710,G__163711));
})(),(function (){var G__163712 = cljs.core.PersistentArrayMap.EMPTY;
var G__163713 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to successively reduce the problem of computing a GCD to the problem of computing the GCD of smaller and smaller pairs of integers. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163712,G__163713) : tailrecursion.hoplon.markdown.para_node.call(null,G__163712,G__163713));
})(),(function (){var G__163714 = cljs.core.PersistentArrayMap.EMPTY;
var G__163715 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  GCD(206,40)=&GCD(40,6)  \\\\=&GCD(6,4)  \\\\=&GCD(4,2)  \\\\=&GCD(2,0)  \\\\=&2  \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163714,G__163715) : tailrecursion.hoplon.markdown.para_node.call(null,G__163714,G__163715));
})(),(function (){var G__163716 = cljs.core.PersistentArrayMap.EMPTY;
var G__163717 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["reduces GCD(206,40) to GCD(2,0), which is 2. It is possible to show that starting with any two positive integers and performing repeated reductions will always eventually produce a pair where the second number is 0. Then the GCD is the other number in the pair. This method for computing the GCD is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__163718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163718,G__163719) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163718,G__163719));
})(),"s Algorithm"], null)], 0)),".",(function (){var G__163720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163721 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__163722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163722,G__163723) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163722,G__163723));
})(),"s Algorithm is so called because it appears in Euclid",(function (){var G__163724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163724,G__163725) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163724,G__163725));
})(),"s ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Elements"], null)], 0))," (Book 7, ca. 300 B.C.). According to Knuth (1973), it can be considered the oldest known nontrivial algorithm. The ancient Egyptian method of multiplication (exercise 1.18) is surely older, but, as Knuth explains, Euclid",(function (){var G__163726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163727 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163726,G__163727) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163726,G__163727));
})(),"s algorithm is the oldest known to have been presented as a general algorithm, rather than as a set of illustrative examples."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163720,G__163721) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163720,G__163721));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163716,G__163717) : tailrecursion.hoplon.markdown.para_node.call(null,G__163716,G__163717));
})(),(function (){var G__163728 = cljs.core.PersistentArrayMap.EMPTY;
var G__163729 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is easy to express Euclid",(function (){var G__163730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163730,G__163731) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163730,G__163731));
})(),"s Algorithm as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163728,G__163729) : tailrecursion.hoplon.markdown.para_node.call(null,G__163728,G__163729));
})(),(function (){var G__163732 = (function (){var G__163733 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163734 = (function (){var G__163735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163736 = "(";
var G__163737 = (function (){var G__163763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163764 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163763,G__163764) : tailrecursion.hoplon.span.call(null,G__163763,G__163764));
})();
var G__163738 = (function (){var G__163765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163766 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163765,G__163766) : tailrecursion.hoplon.span.call(null,G__163765,G__163766));
})();
var G__163739 = " [";
var G__163740 = (function (){var G__163767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163768 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163767,G__163768) : tailrecursion.hoplon.span.call(null,G__163767,G__163768));
})();
var G__163741 = " ";
var G__163742 = (function (){var G__163769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163770 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163769,G__163770) : tailrecursion.hoplon.span.call(null,G__163769,G__163770));
})();
var G__163743 = "]\n  (";
var G__163744 = (function (){var G__163771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163772 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163771,G__163772) : tailrecursion.hoplon.span.call(null,G__163771,G__163772));
})();
var G__163745 = "(";
var G__163746 = (function (){var G__163773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163774 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163773,G__163774) : tailrecursion.hoplon.span.call(null,G__163773,G__163774));
})();
var G__163747 = (function (){var G__163775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163776 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163775,G__163776) : tailrecursion.hoplon.span.call(null,G__163775,G__163776));
})();
var G__163748 = " ";
var G__163749 = (function (){var G__163777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163778 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163777,G__163778) : tailrecursion.hoplon.span.call(null,G__163777,G__163778));
})();
var G__163750 = ")\n      ";
var G__163751 = (function (){var G__163779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163780 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163779,G__163780) : tailrecursion.hoplon.span.call(null,G__163779,G__163780));
})();
var G__163752 = "\n      (";
var G__163753 = (function (){var G__163781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163782 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163781,G__163782) : tailrecursion.hoplon.span.call(null,G__163781,G__163782));
})();
var G__163754 = " ";
var G__163755 = (function (){var G__163783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163784 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163783,G__163784) : tailrecursion.hoplon.span.call(null,G__163783,G__163784));
})();
var G__163756 = " (";
var G__163757 = (function (){var G__163785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163786 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163785,G__163786) : tailrecursion.hoplon.span.call(null,G__163785,G__163786));
})();
var G__163758 = " ";
var G__163759 = (function (){var G__163787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163788 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163787,G__163788) : tailrecursion.hoplon.span.call(null,G__163787,G__163788));
})();
var G__163760 = " ";
var G__163761 = (function (){var G__163789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163790 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163789,G__163790) : tailrecursion.hoplon.span.call(null,G__163789,G__163790));
})();
var G__163762 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__163735,G__163736,G__163737,G__163738,G__163739,G__163740,G__163741,G__163742,G__163743,G__163744,G__163745,G__163746,G__163747,G__163748,G__163749,G__163750,G__163751,G__163752,G__163753,G__163754,G__163755,G__163756,G__163757,G__163758,G__163759,G__163760,G__163761,G__163762) : tailrecursion.hoplon.pre.call(null,G__163735,G__163736,G__163737,G__163738,G__163739,G__163740,G__163741,G__163742,G__163743,G__163744,G__163745,G__163746,G__163747,G__163748,G__163749,G__163750,G__163751,G__163752,G__163753,G__163754,G__163755,G__163756,G__163757,G__163758,G__163759,G__163760,G__163761,G__163762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163733,G__163734) : tailrecursion.hoplon.div.call(null,G__163733,G__163734));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163732) : tailrecursion.hoplon.div.call(null,G__163732));
})(),(function (){var G__163791 = cljs.core.PersistentArrayMap.EMPTY;
var G__163792 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or using recur, "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163791,G__163792) : tailrecursion.hoplon.markdown.para_node.call(null,G__163791,G__163792));
})(),(function (){var G__163793 = (function (){var G__163794 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163795 = (function (){var G__163796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163797 = "(";
var G__163798 = (function (){var G__163824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163825 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163824,G__163825) : tailrecursion.hoplon.span.call(null,G__163824,G__163825));
})();
var G__163799 = (function (){var G__163826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163827 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163826,G__163827) : tailrecursion.hoplon.span.call(null,G__163826,G__163827));
})();
var G__163800 = " [";
var G__163801 = (function (){var G__163828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163829 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163828,G__163829) : tailrecursion.hoplon.span.call(null,G__163828,G__163829));
})();
var G__163802 = " ";
var G__163803 = (function (){var G__163830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163831 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163830,G__163831) : tailrecursion.hoplon.span.call(null,G__163830,G__163831));
})();
var G__163804 = "]\n  (";
var G__163805 = (function (){var G__163832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__163833 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163832,G__163833) : tailrecursion.hoplon.span.call(null,G__163832,G__163833));
})();
var G__163806 = "(";
var G__163807 = (function (){var G__163834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__163835 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163834,G__163835) : tailrecursion.hoplon.span.call(null,G__163834,G__163835));
})();
var G__163808 = (function (){var G__163836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163837 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163836,G__163837) : tailrecursion.hoplon.span.call(null,G__163836,G__163837));
})();
var G__163809 = " ";
var G__163810 = (function (){var G__163838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__163839 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163838,G__163839) : tailrecursion.hoplon.span.call(null,G__163838,G__163839));
})();
var G__163811 = ")\n      ";
var G__163812 = (function (){var G__163840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163841 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163840,G__163841) : tailrecursion.hoplon.span.call(null,G__163840,G__163841));
})();
var G__163813 = "\n      (";
var G__163814 = (function (){var G__163842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163843 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163842,G__163843) : tailrecursion.hoplon.span.call(null,G__163842,G__163843));
})();
var G__163815 = " ";
var G__163816 = (function (){var G__163844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163845 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163844,G__163845) : tailrecursion.hoplon.span.call(null,G__163844,G__163845));
})();
var G__163817 = " (";
var G__163818 = (function (){var G__163846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163847 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163846,G__163847) : tailrecursion.hoplon.span.call(null,G__163846,G__163847));
})();
var G__163819 = " ";
var G__163820 = (function (){var G__163848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163849 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163848,G__163849) : tailrecursion.hoplon.span.call(null,G__163848,G__163849));
})();
var G__163821 = " ";
var G__163822 = (function (){var G__163850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__163851 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163850,G__163851) : tailrecursion.hoplon.span.call(null,G__163850,G__163851));
})();
var G__163823 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__163796,G__163797,G__163798,G__163799,G__163800,G__163801,G__163802,G__163803,G__163804,G__163805,G__163806,G__163807,G__163808,G__163809,G__163810,G__163811,G__163812,G__163813,G__163814,G__163815,G__163816,G__163817,G__163818,G__163819,G__163820,G__163821,G__163822,G__163823) : tailrecursion.hoplon.pre.call(null,G__163796,G__163797,G__163798,G__163799,G__163800,G__163801,G__163802,G__163803,G__163804,G__163805,G__163806,G__163807,G__163808,G__163809,G__163810,G__163811,G__163812,G__163813,G__163814,G__163815,G__163816,G__163817,G__163818,G__163819,G__163820,G__163821,G__163822,G__163823));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163794,G__163795) : tailrecursion.hoplon.div.call(null,G__163794,G__163795));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163793) : tailrecursion.hoplon.div.call(null,G__163793));
})(),(function (){var G__163852 = cljs.core.PersistentArrayMap.EMPTY;
var G__163853 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This generates an iterative process, whose number of steps grows as the logarithm of the numbers involved."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163852,G__163853) : tailrecursion.hoplon.markdown.para_node.call(null,G__163852,G__163853));
})(),(function (){var G__163854 = cljs.core.PersistentArrayMap.EMPTY;
var G__163855 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The fact that the number of steps required by Euclid",(function (){var G__163856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163857 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163856,G__163857) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163856,G__163857));
})(),"s Algorithm has a logarithmic growth bears an interesting relation to the Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163854,G__163855) : tailrecursion.hoplon.markdown.para_node.call(null,G__163854,G__163855));
})(),(function (){var G__163858 = cljs.core.PersistentArrayMap.EMPTY;
var G__163859 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"**",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lam\u00E9",(function (){var G__163860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163861 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163860,G__163861) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163860,G__163861));
})(),"s Theorem:"], null)], 0))," If Euclid",(function (){var G__163862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163863 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163862,G__163863) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163862,G__163863));
})(),"s Algorithm requires \\(k\\) steps to compute the GCD of some pair, then the smaller number in the pair must be greater than or equal to the \\(k\\)th Fibonacci number.",(function (){var G__163864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__163865 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can prove this by induction. Let",(function (){var G__163866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163867 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163866,G__163867) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163866,G__163867));
})(),"s pick an arbitrary natural number \\(n\\), and assume that for any \\(k<n\\), if a pair of natural numbers \\(a>b>0\\) requires \\(k\\) steps of Euclid",(function (){var G__163868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163869 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163868,G__163869) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163868,G__163869));
})(),"s algorithm to compute their GCD, then both \\(a\\) and \\(b\\) are greater than or equal to \\(Fib(k)\\). Now we take a pair, \\((a_n,b_n)\\) that takes \\(n\\) steps. If \\(n=0\\), then we know we started with zero and we",(function (){var G__163870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163870,G__163871) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163870,G__163871));
})(),"re done. If \\(n=1\\), then \\(b|a\\), and since neither of them are 0, we",(function (){var G__163872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163872,G__163873) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163872,G__163873));
})(),"re done. Otherwise, we note that every time we apply an iteration of the algorithm \\((a_n,b_n)\\to(a_{n-1},b_{n-1})\\), where \\(a_{n-1}=b_n\\) and \\(a_n=q\\cdot b_n+b_{n-1}\\) for some integer \\(q>0\\). Now we note, if we apply two iterations, \\((a_n,b_n)\\to (a_{n-2},b_{n-2})\\), where \\(a_{n-2}=b_{n-1}\\) and \\(a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\) and \\(s>0\\). So we",(function (){var G__163874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163874,G__163875) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163874,G__163875));
})(),"ve concluded \\(b_n=a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\geq b_{n-1}+b_{n-2}\\), which by assumption are greater than \\(Fib(n-1)\\) and \\(Fib(n-2)\\) respectively. Hence, \\(a_n>b_n\\geq Fib(n-1)+Fib(n-2)=Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__163864,G__163865) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__163864,G__163865));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163858,G__163859) : tailrecursion.hoplon.markdown.para_node.call(null,G__163858,G__163859));
})(),(function (){var G__163876 = cljs.core.PersistentArrayMap.EMPTY;
var G__163877 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use this theorem to get an order-of-growth estimate for Euclid",(function (){var G__163878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__163879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__163878,G__163879) : tailrecursion.hoplon.markdown.simple_node.call(null,G__163878,G__163879));
})(),"s Algorithm. Let \\(n\\) be the smaller of the two inputs to the procedure. If the process takes \\(k\\) steps, then we must have \\(n\\geq Fib(k)\\approx\\phi^k/\\sqrt5\\). Therefore the smaller of steps \\(k\\) grows as the logarithm (to the base \\(\\phi\\)) of \\(n\\). Hence, the order of growth is \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163876,G__163877) : tailrecursion.hoplon.markdown.para_node.call(null,G__163876,G__163877));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163705;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163704;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163703;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163702;
}})()], 0));
var G__158013 = "";
var G__158014 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"20"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_163880 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163881 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163884 = cljs.core.PersistentArrayMap.EMPTY;
var G__163885 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process that a procedure generates is of course dependent on the rules used by the interpreter. As an example, consider the iterative ",(function (){var G__163886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"gcd"], null);
var G__163887 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163886,G__163887) : tailrecursion.hoplon.markdown.code_node.call(null,G__163886,G__163887));
})()," procedure given above. Suppose we were to interpret this procedure using normal-order evaluation, as discussed in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/5/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.5"], null)], 0)),". (The normal-order-evaluation rule for ",(function (){var G__163888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"if"], null);
var G__163889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163888,G__163889) : tailrecursion.hoplon.markdown.code_node.call(null,G__163888,G__163889));
})()," is described in exercise 1.5.) Using the substitution method (for normal order), illustrate the process generated in evaluating ",(function (){var G__163890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(gcd 206\n40)"], null);
var G__163891 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163890,G__163891) : tailrecursion.hoplon.markdown.code_node.call(null,G__163890,G__163891));
})()," and indicate the ",(function (){var G__163892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__163893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163892,G__163893) : tailrecursion.hoplon.markdown.code_node.call(null,G__163892,G__163893));
})()," operations that are actually performed. How many ",(function (){var G__163894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__163895 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163894,G__163895) : tailrecursion.hoplon.markdown.code_node.call(null,G__163894,G__163895));
})()," operations are actually performed in the normal-order evaluation of ",(function (){var G__163896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(gcd 206 40)"], null);
var G__163897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__163896,G__163897) : tailrecursion.hoplon.markdown.code_node.call(null,G__163896,G__163897));
})(),"? In the applicative-order evaluation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163884,G__163885) : tailrecursion.hoplon.markdown.para_node.call(null,G__163884,G__163885));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163882;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163881;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163880;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_163898 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163899 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_163900 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_163901 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__163902 = cljs.core.PersistentArrayMap.EMPTY;
var G__163903 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For applicative order evaluation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__163902,G__163903) : tailrecursion.hoplon.markdown.para_node.call(null,G__163902,G__163903));
})(),(function (){var G__163904 = (function (){var G__163905 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__163906 = (function (){var G__163907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__163908 = "(";
var G__163909 = (function (){var G__163998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__163999 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__163998,G__163999) : tailrecursion.hoplon.span.call(null,G__163998,G__163999));
})();
var G__163910 = " ";
var G__163911 = (function (){var G__164000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164001 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164000,G__164001) : tailrecursion.hoplon.span.call(null,G__164000,G__164001));
})();
var G__163912 = " ";
var G__163913 = (function (){var G__164002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164003 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164002,G__164003) : tailrecursion.hoplon.span.call(null,G__164002,G__164003));
})();
var G__163914 = ") ";
var G__163915 = (function (){var G__164004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164005 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164004,G__164005) : tailrecursion.hoplon.span.call(null,G__164004,G__164005));
})();
var G__163916 = "(";
var G__163917 = (function (){var G__164006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164007 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164006,G__164007) : tailrecursion.hoplon.span.call(null,G__164006,G__164007));
})();
var G__163918 = " ";
var G__163919 = (function (){var G__164008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164009 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164008,G__164009) : tailrecursion.hoplon.span.call(null,G__164008,G__164009));
})();
var G__163920 = " (";
var G__163921 = (function (){var G__164010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164011 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164010,G__164011) : tailrecursion.hoplon.span.call(null,G__164010,G__164011));
})();
var G__163922 = " ";
var G__163923 = (function (){var G__164012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164013 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164012,G__164013) : tailrecursion.hoplon.span.call(null,G__164012,G__164013));
})();
var G__163924 = " ";
var G__163925 = (function (){var G__164014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164015 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164014,G__164015) : tailrecursion.hoplon.span.call(null,G__164014,G__164015));
})();
var G__163926 = "))\n             ";
var G__163927 = (function (){var G__164016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164017 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164016,G__164017) : tailrecursion.hoplon.span.call(null,G__164016,G__164017));
})();
var G__163928 = "(";
var G__163929 = (function (){var G__164018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164019 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164018,G__164019) : tailrecursion.hoplon.span.call(null,G__164018,G__164019));
})();
var G__163930 = " ";
var G__163931 = (function (){var G__164020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164021 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164020,G__164021) : tailrecursion.hoplon.span.call(null,G__164020,G__164021));
})();
var G__163932 = " ";
var G__163933 = (function (){var G__164022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164023 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164022,G__164023) : tailrecursion.hoplon.span.call(null,G__164022,G__164023));
})();
var G__163934 = ")\n             ";
var G__163935 = (function (){var G__164024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164025 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164024,G__164025) : tailrecursion.hoplon.span.call(null,G__164024,G__164025));
})();
var G__163936 = "(";
var G__163937 = (function (){var G__164026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164027 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164026,G__164027) : tailrecursion.hoplon.span.call(null,G__164026,G__164027));
})();
var G__163938 = " ";
var G__163939 = (function (){var G__164028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164029 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164028,G__164029) : tailrecursion.hoplon.span.call(null,G__164028,G__164029));
})();
var G__163940 = " (";
var G__163941 = (function (){var G__164030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164031 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164030,G__164031) : tailrecursion.hoplon.span.call(null,G__164030,G__164031));
})();
var G__163942 = " ";
var G__163943 = (function (){var G__164032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164033 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164032,G__164033) : tailrecursion.hoplon.span.call(null,G__164032,G__164033));
})();
var G__163944 = " ";
var G__163945 = (function (){var G__164034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164035 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164034,G__164035) : tailrecursion.hoplon.span.call(null,G__164034,G__164035));
})();
var G__163946 = "))\n             ";
var G__163947 = (function (){var G__164036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164037 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164036,G__164037) : tailrecursion.hoplon.span.call(null,G__164036,G__164037));
})();
var G__163948 = "(";
var G__163949 = (function (){var G__164038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164039 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164038,G__164039) : tailrecursion.hoplon.span.call(null,G__164038,G__164039));
})();
var G__163950 = " ";
var G__163951 = (function (){var G__164040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164041 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164040,G__164041) : tailrecursion.hoplon.span.call(null,G__164040,G__164041));
})();
var G__163952 = " ";
var G__163953 = (function (){var G__164042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164043 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164042,G__164043) : tailrecursion.hoplon.span.call(null,G__164042,G__164043));
})();
var G__163954 = "\n             ";
var G__163955 = (function (){var G__164044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164045 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164044,G__164045) : tailrecursion.hoplon.span.call(null,G__164044,G__164045));
})();
var G__163956 = "(";
var G__163957 = (function (){var G__164046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164047 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164046,G__164047) : tailrecursion.hoplon.span.call(null,G__164046,G__164047));
})();
var G__163958 = " ";
var G__163959 = (function (){var G__164048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164049 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164048,G__164049) : tailrecursion.hoplon.span.call(null,G__164048,G__164049));
})();
var G__163960 = " (";
var G__163961 = (function (){var G__164050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164051 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164050,G__164051) : tailrecursion.hoplon.span.call(null,G__164050,G__164051));
})();
var G__163962 = " ";
var G__163963 = (function (){var G__164052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164053 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164052,G__164053) : tailrecursion.hoplon.span.call(null,G__164052,G__164053));
})();
var G__163964 = " ";
var G__163965 = (function (){var G__164054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164055 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164054,G__164055) : tailrecursion.hoplon.span.call(null,G__164054,G__164055));
})();
var G__163966 = "))\n             ";
var G__163967 = (function (){var G__164056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164057 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164056,G__164057) : tailrecursion.hoplon.span.call(null,G__164056,G__164057));
})();
var G__163968 = "(";
var G__163969 = (function (){var G__164058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164059 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164058,G__164059) : tailrecursion.hoplon.span.call(null,G__164058,G__164059));
})();
var G__163970 = " ";
var G__163971 = (function (){var G__164060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164061 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164060,G__164061) : tailrecursion.hoplon.span.call(null,G__164060,G__164061));
})();
var G__163972 = " ";
var G__163973 = (function (){var G__164062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164063 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164062,G__164063) : tailrecursion.hoplon.span.call(null,G__164062,G__164063));
})();
var G__163974 = ")\n             ";
var G__163975 = (function (){var G__164064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164065 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164064,G__164065) : tailrecursion.hoplon.span.call(null,G__164064,G__164065));
})();
var G__163976 = "(";
var G__163977 = (function (){var G__164066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164067 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164066,G__164067) : tailrecursion.hoplon.span.call(null,G__164066,G__164067));
})();
var G__163978 = " ";
var G__163979 = (function (){var G__164068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164069 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164068,G__164069) : tailrecursion.hoplon.span.call(null,G__164068,G__164069));
})();
var G__163980 = " (";
var G__163981 = (function (){var G__164070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164071 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164070,G__164071) : tailrecursion.hoplon.span.call(null,G__164070,G__164071));
})();
var G__163982 = " ";
var G__163983 = (function (){var G__164072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164073 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164072,G__164073) : tailrecursion.hoplon.span.call(null,G__164072,G__164073));
})();
var G__163984 = " ";
var G__163985 = (function (){var G__164074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164075 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164074,G__164075) : tailrecursion.hoplon.span.call(null,G__164074,G__164075));
})();
var G__163986 = "))\n             ";
var G__163987 = (function (){var G__164076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164077 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164076,G__164077) : tailrecursion.hoplon.span.call(null,G__164076,G__164077));
})();
var G__163988 = "(";
var G__163989 = (function (){var G__164078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164079 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164078,G__164079) : tailrecursion.hoplon.span.call(null,G__164078,G__164079));
})();
var G__163990 = " ";
var G__163991 = (function (){var G__164080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164081 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164080,G__164081) : tailrecursion.hoplon.span.call(null,G__164080,G__164081));
})();
var G__163992 = " ";
var G__163993 = (function (){var G__164082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164083 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164082,G__164083) : tailrecursion.hoplon.span.call(null,G__164082,G__164083));
})();
var G__163994 = ")\n             ";
var G__163995 = (function (){var G__164084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164085 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164084,G__164085) : tailrecursion.hoplon.span.call(null,G__164084,G__164085));
})();
var G__163996 = (function (){var G__164086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164087 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164086,G__164087) : tailrecursion.hoplon.span.call(null,G__164086,G__164087));
})();
var G__163997 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__163907,G__163908,G__163909,G__163910,G__163911,G__163912,G__163913,G__163914,G__163915,G__163916,G__163917,G__163918,G__163919,G__163920,G__163921,G__163922,G__163923,G__163924,G__163925,G__163926,G__163927,G__163928,G__163929,G__163930,G__163931,G__163932,G__163933,G__163934,G__163935,G__163936,G__163937,G__163938,G__163939,G__163940,G__163941,G__163942,G__163943,G__163944,G__163945,G__163946,G__163947,G__163948,G__163949,G__163950,G__163951,G__163952,G__163953,G__163954,G__163955,G__163956,G__163957,G__163958,G__163959,G__163960,G__163961,G__163962,G__163963,G__163964,G__163965,G__163966,G__163967,G__163968,G__163969,G__163970,G__163971,G__163972,G__163973,G__163974,G__163975,G__163976,G__163977,G__163978,G__163979,G__163980,G__163981,G__163982,G__163983,G__163984,G__163985,G__163986,G__163987,G__163988,G__163989,G__163990,G__163991,G__163992,G__163993,G__163994,G__163995,G__163996,G__163997) : tailrecursion.hoplon.pre.call(null,G__163907,G__163908,G__163909,G__163910,G__163911,G__163912,G__163913,G__163914,G__163915,G__163916,G__163917,G__163918,G__163919,G__163920,G__163921,G__163922,G__163923,G__163924,G__163925,G__163926,G__163927,G__163928,G__163929,G__163930,G__163931,G__163932,G__163933,G__163934,G__163935,G__163936,G__163937,G__163938,G__163939,G__163940,G__163941,G__163942,G__163943,G__163944,G__163945,G__163946,G__163947,G__163948,G__163949,G__163950,G__163951,G__163952,G__163953,G__163954,G__163955,G__163956,G__163957,G__163958,G__163959,G__163960,G__163961,G__163962,G__163963,G__163964,G__163965,G__163966,G__163967,G__163968,G__163969,G__163970,G__163971,G__163972,G__163973,G__163974,G__163975,G__163976,G__163977,G__163978,G__163979,G__163980,G__163981,G__163982,G__163983,G__163984,G__163985,G__163986,G__163987,G__163988,G__163989,G__163990,G__163991,G__163992,G__163993,G__163994,G__163995,G__163996,G__163997));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__163905,G__163906) : tailrecursion.hoplon.div.call(null,G__163905,G__163906));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__163904) : tailrecursion.hoplon.div.call(null,G__163904));
})(),(function (){var G__164088 = cljs.core.PersistentArrayMap.EMPTY;
var G__164089 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in applicative order, ",(function (){var G__164090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__164091 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164090,G__164091) : tailrecursion.hoplon.markdown.code_node.call(null,G__164090,G__164091));
})()," is only called four times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164088,G__164089) : tailrecursion.hoplon.markdown.para_node.call(null,G__164088,G__164089));
})(),(function (){var G__164092 = cljs.core.PersistentArrayMap.EMPTY;
var G__164093 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For normal-order evaluation it would start with ",(function (){var G__164094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= 40 0)"], null);
var G__164095 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164094,G__164095) : tailrecursion.hoplon.markdown.code_node.call(null,G__164094,G__164095));
})()," which would lead it to ",(function (){var G__164096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(GCD 40 (mod 206 40))"], null);
var G__164097 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164096,G__164097) : tailrecursion.hoplon.markdown.code_node.call(null,G__164096,G__164097));
})()," without computing the ",(function (){var G__164098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__164099 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164098,G__164099) : tailrecursion.hoplon.markdown.code_node.call(null,G__164098,G__164099));
})()," yet. Then it evaluates ",(function (){var G__164100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (mod 206 40) 0)"], null);
var G__164101 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164100,G__164101) : tailrecursion.hoplon.markdown.code_node.call(null,G__164100,G__164101));
})()," with our first ",(function (){var G__164102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__164103 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164102,G__164103) : tailrecursion.hoplon.markdown.code_node.call(null,G__164102,G__164103));
})()," evaluation. Then it calls ",(function (){var G__164104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(GCD (mod 206 40) (mod 40 (mod 206 40)))"], null);
var G__164105 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164104,G__164105) : tailrecursion.hoplon.markdown.code_node.call(null,G__164104,G__164105));
})()," without computing the ",(function (){var G__164106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mods"], null);
var G__164107 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164106,G__164107) : tailrecursion.hoplon.markdown.code_node.call(null,G__164106,G__164107));
})(),", which evaluates ",(function (){var G__164108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (mod 40 (mod 206\n40)) 0)"], null);
var G__164109 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164108,G__164109) : tailrecursion.hoplon.markdown.code_node.call(null,G__164108,G__164109));
})()," which gives us our second and third calls for ",(function (){var G__164110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__164111 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164110,G__164111) : tailrecursion.hoplon.markdown.code_node.call(null,G__164110,G__164111));
})()," and calls ",(function (){var G__164112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(GCD (mod 40 (mod 206 40)) (mod (mod 206 40) (mod 40 (mod 206\n40))))"], null);
var G__164113 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164112,G__164113) : tailrecursion.hoplon.markdown.code_node.call(null,G__164112,G__164113));
})()," without evaluating the arguments. This calls ",(function (){var G__164114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(= (mod (mod\n206 40) (mod 40 (mod 206 40))) 0)"], null);
var G__164115 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164114,G__164115) : tailrecursion.hoplon.markdown.code_node.call(null,G__164114,G__164115));
})()," and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164092,G__164093) : tailrecursion.hoplon.markdown.para_node.call(null,G__164092,G__164093));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163901;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163900;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_163899;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_163898;
}})()], 0))], 0))], 0));
var G__158015 = "";
var G__158016 = content.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Example: Testing for Primality"], null),(function (){var _STAR_references_STAR_164116 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164117 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164118 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164119 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164120 = cljs.core.PersistentArrayMap.EMPTY;
var G__164121 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section describes two methods for checking the primality of an integer \\(n\\), one with order of growth \\(\\Theta(\\sqrt n)\\), and a ",(function (){var G__164122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__164123 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164122,G__164123) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164122,G__164123));
})()," algorithm with order of growth \\(\\Theta(\\log n)\\). The exercises at the end of this section suggest programming projects based on these algorithms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164120,G__164121) : tailrecursion.hoplon.markdown.para_node.call(null,G__164120,G__164121));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164119;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164118;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164117;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164116;
}})()], 0));
var G__158017 = "";
var G__158018 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Searching for Divisors"], null),(function (){var _STAR_references_STAR_164124 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164125 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164126 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164127 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164128 = cljs.core.PersistentArrayMap.EMPTY;
var G__164129 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ancient times, mathematicians have been fascinated by the problems concerning prime numbers, and many people have worked on the problem of determining ways to test if numbers are prime. One way to test if a number is prime is to find the number",(function (){var G__164130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164131 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164130,G__164131) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164130,G__164131));
})(),"s divisors. The following program finds the smallest integral divisor (greater than 1) of a given number \\(n\\). It does this in a straightforward way, by testing \\(n\\) for divisibility by successive integers starting with 2."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164128,G__164129) : tailrecursion.hoplon.markdown.para_node.call(null,G__164128,G__164129));
})(),(function (){var G__164132 = (function (){var G__164133 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164134 = (function (){var G__164135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164136 = "(";
var G__164137 = (function (){var G__164201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164202 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164201,G__164202) : tailrecursion.hoplon.span.call(null,G__164201,G__164202));
})();
var G__164138 = (function (){var G__164203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164204 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164203,G__164204) : tailrecursion.hoplon.span.call(null,G__164203,G__164204));
})();
var G__164139 = " [";
var G__164140 = (function (){var G__164205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164206 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164205,G__164206) : tailrecursion.hoplon.span.call(null,G__164205,G__164206));
})();
var G__164141 = " ";
var G__164142 = (function (){var G__164207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164208 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164207,G__164208) : tailrecursion.hoplon.span.call(null,G__164207,G__164208));
})();
var G__164143 = "]\n  (";
var G__164144 = (function (){var G__164209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164210 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164209,G__164210) : tailrecursion.hoplon.span.call(null,G__164209,G__164210));
})();
var G__164145 = "(";
var G__164146 = (function (){var G__164211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164212 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164211,G__164212) : tailrecursion.hoplon.span.call(null,G__164211,G__164212));
})();
var G__164147 = " ";
var G__164148 = (function (){var G__164213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164214 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164213,G__164214) : tailrecursion.hoplon.span.call(null,G__164213,G__164214));
})();
var G__164149 = " ";
var G__164150 = (function (){var G__164215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164216 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164215,G__164216) : tailrecursion.hoplon.span.call(null,G__164215,G__164216));
})();
var G__164151 = ") ";
var G__164152 = (function (){var G__164217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164218 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164217,G__164218) : tailrecursion.hoplon.span.call(null,G__164217,G__164218));
})();
var G__164153 = "))\n(";
var G__164154 = (function (){var G__164219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164220 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164219,G__164220) : tailrecursion.hoplon.span.call(null,G__164219,G__164220));
})();
var G__164155 = (function (){var G__164221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164222 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164221,G__164222) : tailrecursion.hoplon.span.call(null,G__164221,G__164222));
})();
var G__164156 = " [";
var G__164157 = (function (){var G__164223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164224 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164223,G__164224) : tailrecursion.hoplon.span.call(null,G__164223,G__164224));
})();
var G__164158 = " ";
var G__164159 = (function (){var G__164225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164226 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164225,G__164226) : tailrecursion.hoplon.span.call(null,G__164225,G__164226));
})();
var G__164160 = "]\n  (";
var G__164161 = (function (){var G__164227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164228 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164227,G__164228) : tailrecursion.hoplon.span.call(null,G__164227,G__164228));
})();
var G__164162 = "(";
var G__164163 = (function (){var G__164229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164230 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164229,G__164230) : tailrecursion.hoplon.span.call(null,G__164229,G__164230));
})();
var G__164164 = "(";
var G__164165 = (function (){var G__164231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164232 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164231,G__164232) : tailrecursion.hoplon.span.call(null,G__164231,G__164232));
})();
var G__164166 = " ";
var G__164167 = (function (){var G__164233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164234 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164233,G__164234) : tailrecursion.hoplon.span.call(null,G__164233,G__164234));
})();
var G__164168 = ") ";
var G__164169 = (function (){var G__164235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164236 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164235,G__164236) : tailrecursion.hoplon.span.call(null,G__164235,G__164236));
})();
var G__164170 = ") ";
var G__164171 = (function (){var G__164237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164238 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164237,G__164238) : tailrecursion.hoplon.span.call(null,G__164237,G__164238));
})();
var G__164172 = "\n        (";
var G__164173 = (function (){var G__164239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164240 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164239,G__164240) : tailrecursion.hoplon.span.call(null,G__164239,G__164240));
})();
var G__164174 = " ";
var G__164175 = (function (){var G__164241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164242 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164241,G__164242) : tailrecursion.hoplon.span.call(null,G__164241,G__164242));
})();
var G__164176 = " ";
var G__164177 = (function (){var G__164243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164244 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164243,G__164244) : tailrecursion.hoplon.span.call(null,G__164243,G__164244));
})();
var G__164178 = ") ";
var G__164179 = (function (){var G__164245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164246 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164245,G__164246) : tailrecursion.hoplon.span.call(null,G__164245,G__164246));
})();
var G__164180 = "\n        ";
var G__164181 = (function (){var G__164247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164248 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164247,G__164248) : tailrecursion.hoplon.span.call(null,G__164247,G__164248));
})();
var G__164182 = " (";
var G__164183 = (function (){var G__164249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164250 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164249,G__164250) : tailrecursion.hoplon.span.call(null,G__164249,G__164250));
})();
var G__164184 = " ";
var G__164185 = (function (){var G__164251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164252 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164251,G__164252) : tailrecursion.hoplon.span.call(null,G__164251,G__164252));
})();
var G__164186 = " (";
var G__164187 = (function (){var G__164253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164254 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164253,G__164254) : tailrecursion.hoplon.span.call(null,G__164253,G__164254));
})();
var G__164188 = (function (){var G__164255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164256 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164255,G__164256) : tailrecursion.hoplon.span.call(null,G__164255,G__164256));
})();
var G__164189 = "))))\n(";
var G__164190 = (function (){var G__164257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164258 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164257,G__164258) : tailrecursion.hoplon.span.call(null,G__164257,G__164258));
})();
var G__164191 = (function (){var G__164259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164260 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164259,G__164260) : tailrecursion.hoplon.span.call(null,G__164259,G__164260));
})();
var G__164192 = " [";
var G__164193 = (function (){var G__164261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164262 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164261,G__164262) : tailrecursion.hoplon.span.call(null,G__164261,G__164262));
})();
var G__164194 = "]\n  (";
var G__164195 = (function (){var G__164263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164264 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164263,G__164264) : tailrecursion.hoplon.span.call(null,G__164263,G__164264));
})();
var G__164196 = " ";
var G__164197 = (function (){var G__164265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164266 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164265,G__164266) : tailrecursion.hoplon.span.call(null,G__164265,G__164266));
})();
var G__164198 = " ";
var G__164199 = (function (){var G__164267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164268 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164267,G__164268) : tailrecursion.hoplon.span.call(null,G__164267,G__164268));
})();
var G__164200 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__164135,G__164136,G__164137,G__164138,G__164139,G__164140,G__164141,G__164142,G__164143,G__164144,G__164145,G__164146,G__164147,G__164148,G__164149,G__164150,G__164151,G__164152,G__164153,G__164154,G__164155,G__164156,G__164157,G__164158,G__164159,G__164160,G__164161,G__164162,G__164163,G__164164,G__164165,G__164166,G__164167,G__164168,G__164169,G__164170,G__164171,G__164172,G__164173,G__164174,G__164175,G__164176,G__164177,G__164178,G__164179,G__164180,G__164181,G__164182,G__164183,G__164184,G__164185,G__164186,G__164187,G__164188,G__164189,G__164190,G__164191,G__164192,G__164193,G__164194,G__164195,G__164196,G__164197,G__164198,G__164199,G__164200) : tailrecursion.hoplon.pre.call(null,G__164135,G__164136,G__164137,G__164138,G__164139,G__164140,G__164141,G__164142,G__164143,G__164144,G__164145,G__164146,G__164147,G__164148,G__164149,G__164150,G__164151,G__164152,G__164153,G__164154,G__164155,G__164156,G__164157,G__164158,G__164159,G__164160,G__164161,G__164162,G__164163,G__164164,G__164165,G__164166,G__164167,G__164168,G__164169,G__164170,G__164171,G__164172,G__164173,G__164174,G__164175,G__164176,G__164177,G__164178,G__164179,G__164180,G__164181,G__164182,G__164183,G__164184,G__164185,G__164186,G__164187,G__164188,G__164189,G__164190,G__164191,G__164192,G__164193,G__164194,G__164195,G__164196,G__164197,G__164198,G__164199,G__164200));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164133,G__164134) : tailrecursion.hoplon.div.call(null,G__164133,G__164134));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164132) : tailrecursion.hoplon.div.call(null,G__164132));
})(),(function (){var G__164269 = cljs.core.PersistentArrayMap.EMPTY;
var G__164270 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can test whether a number is prime as follows: \\(n\\) is prime if and only if \\(n\\) is its own smallest divisor."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164269,G__164270) : tailrecursion.hoplon.markdown.para_node.call(null,G__164269,G__164270));
})(),(function (){var G__164271 = (function (){var G__164272 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164273 = (function (){var G__164274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164275 = "(";
var G__164276 = (function (){var G__164288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164289 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164288,G__164289) : tailrecursion.hoplon.span.call(null,G__164288,G__164289));
})();
var G__164277 = (function (){var G__164290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164291 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164290,G__164291) : tailrecursion.hoplon.span.call(null,G__164290,G__164291));
})();
var G__164278 = " [";
var G__164279 = (function (){var G__164292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164293 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164292,G__164293) : tailrecursion.hoplon.span.call(null,G__164292,G__164293));
})();
var G__164280 = "]\n  (";
var G__164281 = (function (){var G__164294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164295 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164294,G__164295) : tailrecursion.hoplon.span.call(null,G__164294,G__164295));
})();
var G__164282 = (function (){var G__164296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164297 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164296,G__164297) : tailrecursion.hoplon.span.call(null,G__164296,G__164297));
})();
var G__164283 = " (";
var G__164284 = (function (){var G__164298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164299 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164298,G__164299) : tailrecursion.hoplon.span.call(null,G__164298,G__164299));
})();
var G__164285 = " ";
var G__164286 = (function (){var G__164300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164301 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164300,G__164301) : tailrecursion.hoplon.span.call(null,G__164300,G__164301));
})();
var G__164287 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__164274,G__164275,G__164276,G__164277,G__164278,G__164279,G__164280,G__164281,G__164282,G__164283,G__164284,G__164285,G__164286,G__164287) : tailrecursion.hoplon.pre.call(null,G__164274,G__164275,G__164276,G__164277,G__164278,G__164279,G__164280,G__164281,G__164282,G__164283,G__164284,G__164285,G__164286,G__164287));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164272,G__164273) : tailrecursion.hoplon.div.call(null,G__164272,G__164273));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164271) : tailrecursion.hoplon.div.call(null,G__164271));
})(),(function (){var G__164302 = cljs.core.PersistentArrayMap.EMPTY;
var G__164303 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The end test for ",(function (){var G__164304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"find-divisor"], null);
var G__164305 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164304,G__164305) : tailrecursion.hoplon.markdown.code_node.call(null,G__164304,G__164305));
})()," is based on the fact that if \\(n\\) is not prime it must have a divisor less than or equal to \\(\\sqrt n\\).",(function (){var G__164306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__164307 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(d\\) is a divisor of \\(n\\), then so id \\(n/d\\). But \\(d\\) and \\(n/d\\) cannot both be greater than \\(\\sqrt n\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164306,G__164307) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164306,G__164307));
})()," This means that the algorithm need only test divisors between 1 and \\(\\sqrt n\\). Consequently, the number of steps required to identify \\(n\\) as prime will have order of growth \\(\\Theta (\\sqrt n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164302,G__164303) : tailrecursion.hoplon.markdown.para_node.call(null,G__164302,G__164303));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164127;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164126;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164125;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164124;
}})()], 0));
var G__158019 = "";
var G__158020 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"The Fermat Test"], null),(function (){var _STAR_references_STAR_164308 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164309 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164310 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164311 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164312 = cljs.core.PersistentArrayMap.EMPTY;
var G__164313 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The \\(\\Theta(\\log n)\\) primality test is based on a result from number theory known as Fermat",(function (){var G__164314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164315 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164314,G__164315) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164314,G__164315));
})(),"s Little Theorem.",(function (){var G__164316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__164317 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pierre de Fermat (1601-1665) is considered to be the founder of modern number theory. He obtained many important number-theoretic results, but he usually announced just the results, without providing his proofs. Fermat",(function (){var G__164318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164319 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164318,G__164319) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164318,G__164319));
})(),"s Little Theorem was stated in a letter he wrote in 1640. The first published proof was given by Euler in 1736 (and an earlier, identical proof was discovered in the unpublished manuscripts of Leibniz). The most famous of Fermat",(function (){var G__164320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164321 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164320,G__164321) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164320,G__164321));
})(),"s results ",(function (){var G__164322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__164323 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164322,G__164323) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164322,G__164323));
})()," known as Fermat",(function (){var G__164324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164325 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164324,G__164325) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164324,G__164325));
})(),"s Last Theorem ",(function (){var G__164326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$endash], null);
var G__164327 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164326,G__164327) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164326,G__164327));
})()," was jotted down in 1637 in his copy of the book ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Arithmetic"], null)], 0))," (by the third-century Greek mathematician Diophantus) with the remark ",(function (){var G__164328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__164329 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I have discovered a truly remarkable proof, but this margin is too small to contain it."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164328,G__164329) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164328,G__164329));
})()," Finding a proof of Fermat",(function (){var G__164330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164331 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164330,G__164331) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164330,G__164331));
})(),"s Last Theorem became one of the most famous challenges in number theory. A complete solution was finally given in 1995 by Andrew Wiles of Princeton University."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164316,G__164317) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164316,G__164317));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164312,G__164313) : tailrecursion.hoplon.markdown.para_node.call(null,G__164312,G__164313));
})(),(function (){var G__164332 = cljs.core.PersistentArrayMap.EMPTY;
var G__164333 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"**",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fermat",(function (){var G__164334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164335 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164334,G__164335) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164334,G__164335));
})(),"s Little Theorem:"], null)], 0))," If \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a\\) raised to the \\(n\\)th power is congruent to \\(a\\) modulo \\(n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164332,G__164333) : tailrecursion.hoplon.markdown.para_node.call(null,G__164332,G__164333));
})(),(function (){var G__164336 = cljs.core.PersistentArrayMap.EMPTY;
var G__164337 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(Two numbers are said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["congruent modulo"], null)], 0))," \\(n\\) if they both have the same remainder when divided by \\(n\\). The remainder of a number \\(a\\) when divided by \\(n\\) is also referred to as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remainder of a modulo n"], null)], 0))," or simply as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a modulo n"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164336,G__164337) : tailrecursion.hoplon.markdown.para_node.call(null,G__164336,G__164337));
})(),(function (){var G__164338 = cljs.core.PersistentArrayMap.EMPTY;
var G__164339 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is not prime, then, in general, most of the numbers \\(a<n\\) will not satisfy the above relation. This leads to the following algorithm for testing primality: Given a number \\(n\\), pick a random number \\(a<n\\) and compute the remainder of \\(a^n\\) modulo \\(n\\). If the result is not equal to \\(a\\), then \\(n\\) is certainly not prime. If it is \\(a\\), then chances are good that \\(n\\) is prime. Now pick another random number \\(a\\) and test it with the same method. If it also satisfies the equation, then we can be even more confident that \\(n\\) is prime. By trying more and more values of \\(a\\), we can increase our confidence in the result. This algorithm is known as the Fermat test."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164338,G__164339) : tailrecursion.hoplon.markdown.para_node.call(null,G__164338,G__164339));
})(),(function (){var G__164340 = cljs.core.PersistentArrayMap.EMPTY;
var G__164341 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the Fermat test, we need a procedure that computes the exponential of a number modulo another number:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164340,G__164341) : tailrecursion.hoplon.markdown.para_node.call(null,G__164340,G__164341));
})(),(function (){var G__164342 = (function (){var G__164343 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164344 = (function (){var G__164345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164346 = "(";
var G__164347 = (function (){var G__164402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164403 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164402,G__164403) : tailrecursion.hoplon.span.call(null,G__164402,G__164403));
})();
var G__164348 = (function (){var G__164404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164405 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164404,G__164405) : tailrecursion.hoplon.span.call(null,G__164404,G__164405));
})();
var G__164349 = " [";
var G__164350 = (function (){var G__164406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164407 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164406,G__164407) : tailrecursion.hoplon.span.call(null,G__164406,G__164407));
})();
var G__164351 = " ";
var G__164352 = (function (){var G__164408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164409 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164408,G__164409) : tailrecursion.hoplon.span.call(null,G__164408,G__164409));
})();
var G__164353 = " ";
var G__164354 = (function (){var G__164410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164411 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164410,G__164411) : tailrecursion.hoplon.span.call(null,G__164410,G__164411));
})();
var G__164355 = "]\n  (";
var G__164356 = (function (){var G__164412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164413 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164412,G__164413) : tailrecursion.hoplon.span.call(null,G__164412,G__164413));
})();
var G__164357 = "(";
var G__164358 = (function (){var G__164414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164415 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164414,G__164415) : tailrecursion.hoplon.span.call(null,G__164414,G__164415));
})();
var G__164359 = (function (){var G__164416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164417 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164416,G__164417) : tailrecursion.hoplon.span.call(null,G__164416,G__164417));
})();
var G__164360 = " ";
var G__164361 = (function (){var G__164418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164419 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164418,G__164419) : tailrecursion.hoplon.span.call(null,G__164418,G__164419));
})();
var G__164362 = ") ";
var G__164363 = (function (){var G__164420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164421 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164420,G__164421) : tailrecursion.hoplon.span.call(null,G__164420,G__164421));
})();
var G__164364 = "\n        (";
var G__164365 = (function (){var G__164422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164423 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164422,G__164423) : tailrecursion.hoplon.span.call(null,G__164422,G__164423));
})();
var G__164366 = " ";
var G__164367 = (function (){var G__164424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164425 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164424,G__164425) : tailrecursion.hoplon.span.call(null,G__164424,G__164425));
})();
var G__164368 = ") (";
var G__164369 = (function (){var G__164426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164427 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164426,G__164427) : tailrecursion.hoplon.span.call(null,G__164426,G__164427));
})();
var G__164370 = " (";
var G__164371 = (function (){var G__164428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164429 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164428,G__164429) : tailrecursion.hoplon.span.call(null,G__164428,G__164429));
})();
var G__164372 = " (";
var G__164373 = (function (){var G__164430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164431 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164430,G__164431) : tailrecursion.hoplon.span.call(null,G__164430,G__164431));
})();
var G__164374 = " ";
var G__164375 = (function (){var G__164432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164433 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164432,G__164433) : tailrecursion.hoplon.span.call(null,G__164432,G__164433));
})();
var G__164376 = " (";
var G__164377 = (function (){var G__164434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164435 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164434,G__164435) : tailrecursion.hoplon.span.call(null,G__164434,G__164435));
})();
var G__164378 = (function (){var G__164436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164437 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164436,G__164437) : tailrecursion.hoplon.span.call(null,G__164436,G__164437));
})();
var G__164379 = " ";
var G__164380 = (function (){var G__164438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164439 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164438,G__164439) : tailrecursion.hoplon.span.call(null,G__164438,G__164439));
})();
var G__164381 = "))) ";
var G__164382 = (function (){var G__164440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164441 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164440,G__164441) : tailrecursion.hoplon.span.call(null,G__164440,G__164441));
})();
var G__164383 = ")\n        ";
var G__164384 = (function (){var G__164442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164443 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164442,G__164443) : tailrecursion.hoplon.span.call(null,G__164442,G__164443));
})();
var G__164385 = " (";
var G__164386 = (function (){var G__164444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164445 = "remainder";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164444,G__164445) : tailrecursion.hoplon.span.call(null,G__164444,G__164445));
})();
var G__164387 = " (";
var G__164388 = (function (){var G__164446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164447 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164446,G__164447) : tailrecursion.hoplon.span.call(null,G__164446,G__164447));
})();
var G__164389 = (function (){var G__164448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164449 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164448,G__164449) : tailrecursion.hoplon.span.call(null,G__164448,G__164449));
})();
var G__164390 = " (";
var G__164391 = (function (){var G__164450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164451 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164450,G__164451) : tailrecursion.hoplon.span.call(null,G__164450,G__164451));
})();
var G__164392 = " ";
var G__164393 = (function (){var G__164452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164453 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164452,G__164453) : tailrecursion.hoplon.span.call(null,G__164452,G__164453));
})();
var G__164394 = " (";
var G__164395 = (function (){var G__164454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164455 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164454,G__164455) : tailrecursion.hoplon.span.call(null,G__164454,G__164455));
})();
var G__164396 = (function (){var G__164456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164457 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164456,G__164457) : tailrecursion.hoplon.span.call(null,G__164456,G__164457));
})();
var G__164397 = " ";
var G__164398 = (function (){var G__164458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164459 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164458,G__164459) : tailrecursion.hoplon.span.call(null,G__164458,G__164459));
})();
var G__164399 = "))) ";
var G__164400 = (function (){var G__164460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164461 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164460,G__164461) : tailrecursion.hoplon.span.call(null,G__164460,G__164461));
})();
var G__164401 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__164345,G__164346,G__164347,G__164348,G__164349,G__164350,G__164351,G__164352,G__164353,G__164354,G__164355,G__164356,G__164357,G__164358,G__164359,G__164360,G__164361,G__164362,G__164363,G__164364,G__164365,G__164366,G__164367,G__164368,G__164369,G__164370,G__164371,G__164372,G__164373,G__164374,G__164375,G__164376,G__164377,G__164378,G__164379,G__164380,G__164381,G__164382,G__164383,G__164384,G__164385,G__164386,G__164387,G__164388,G__164389,G__164390,G__164391,G__164392,G__164393,G__164394,G__164395,G__164396,G__164397,G__164398,G__164399,G__164400,G__164401) : tailrecursion.hoplon.pre.call(null,G__164345,G__164346,G__164347,G__164348,G__164349,G__164350,G__164351,G__164352,G__164353,G__164354,G__164355,G__164356,G__164357,G__164358,G__164359,G__164360,G__164361,G__164362,G__164363,G__164364,G__164365,G__164366,G__164367,G__164368,G__164369,G__164370,G__164371,G__164372,G__164373,G__164374,G__164375,G__164376,G__164377,G__164378,G__164379,G__164380,G__164381,G__164382,G__164383,G__164384,G__164385,G__164386,G__164387,G__164388,G__164389,G__164390,G__164391,G__164392,G__164393,G__164394,G__164395,G__164396,G__164397,G__164398,G__164399,G__164400,G__164401));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164343,G__164344) : tailrecursion.hoplon.div.call(null,G__164343,G__164344));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164342) : tailrecursion.hoplon.div.call(null,G__164342));
})(),(function (){var G__164462 = cljs.core.PersistentArrayMap.EMPTY;
var G__164463 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164464 = cljs.core.PersistentArrayMap.EMPTY;
var G__164465 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: This is not tail recursive!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164464,G__164465) : tailrecursion.hoplon.markdown.para_node.call(null,G__164464,G__164465));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__164462,G__164463) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__164462,G__164463));
})(),(function (){var G__164466 = cljs.core.PersistentArrayMap.EMPTY;
var G__164467 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is very similar to the ",(function (){var G__164468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-expt"], null);
var G__164469 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164468,G__164469) : tailrecursion.hoplon.markdown.code_node.call(null,G__164468,G__164469));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/sect/2/sub/4/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.4"], null)], 0)),". It uses successive squaring, so that the number of steps grows logarithmically with the exponent.",(function (){var G__164470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__164471 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The reduction steps in the cases where the exponent \\(e\\) is greater than 1 are based on the fact that, for any integers \\(x, y\\), and \\(m\\), we can find the remainder of \\(x\\) times \\(y\\) modulo \\(m\\) by computing separately the remainders of \\(x\\) modulo \\(m\\) and \\(y\\) modulo \\(m\\), multiplying these, and then taking the remainder of the result modulo \\(m\\). For instance, in the case where \\(e\\) is even, we compute \\(b^{e/2}\\pmod m\\), square this, and take the remainder modulo m. This technique is useful because it means we can perform our computation without ever having to deal with numbers much larger than m. (Compare exercise 1.25.)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164470,G__164471) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164470,G__164471));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164466,G__164467) : tailrecursion.hoplon.markdown.para_node.call(null,G__164466,G__164467));
})(),(function (){var G__164472 = cljs.core.PersistentArrayMap.EMPTY;
var G__164473 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Fermat test is performed by choosing at randum a number \\(a\\) between 1 and \\(n-1\\) inclusive and checking whether the remainder modulo \\(n\\) of the \\(n\\)th power of \\(a\\) is equal to \\(a\\). The random number \\(a\\) is chosen using the procedure ",(function (){var G__164474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rand-int"], null);
var G__164475 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164474,G__164475) : tailrecursion.hoplon.markdown.code_node.call(null,G__164474,G__164475));
})()," which returns a nonnegative integer less than its integer input. Hence to obtain a random number between 1 and \\(n-1\\), we call ",(function (){var G__164476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"rand-int"], null);
var G__164477 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164476,G__164477) : tailrecursion.hoplon.markdown.code_node.call(null,G__164476,G__164477));
})()," with an input of \\(n-1\\) and add 1 to the result"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164472,G__164473) : tailrecursion.hoplon.markdown.para_node.call(null,G__164472,G__164473));
})(),(function (){var G__164478 = (function (){var G__164479 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164480 = (function (){var G__164481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164482 = "(";
var G__164483 = (function (){var G__164508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164509 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164508,G__164509) : tailrecursion.hoplon.span.call(null,G__164508,G__164509));
})();
var G__164484 = (function (){var G__164510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164511 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164510,G__164511) : tailrecursion.hoplon.span.call(null,G__164510,G__164511));
})();
var G__164485 = " [";
var G__164486 = (function (){var G__164512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164513 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164512,G__164513) : tailrecursion.hoplon.span.call(null,G__164512,G__164513));
})();
var G__164487 = "]\n  (";
var G__164488 = (function (){var G__164514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164515 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164514,G__164515) : tailrecursion.hoplon.span.call(null,G__164514,G__164515));
})();
var G__164489 = "(";
var G__164490 = (function (){var G__164516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164517 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164516,G__164517) : tailrecursion.hoplon.span.call(null,G__164516,G__164517));
})();
var G__164491 = " (";
var G__164492 = (function (){var G__164518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164519 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164518,G__164519) : tailrecursion.hoplon.span.call(null,G__164518,G__164519));
})();
var G__164493 = (function (){var G__164520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164521 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164520,G__164521) : tailrecursion.hoplon.span.call(null,G__164520,G__164521));
})();
var G__164494 = " (";
var G__164495 = (function (){var G__164522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164523 = "rand-int ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164522,G__164523) : tailrecursion.hoplon.span.call(null,G__164522,G__164523));
})();
var G__164496 = "(";
var G__164497 = (function (){var G__164524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164525 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164524,G__164525) : tailrecursion.hoplon.span.call(null,G__164524,G__164525));
})();
var G__164498 = (function (){var G__164526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164527 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164526,G__164527) : tailrecursion.hoplon.span.call(null,G__164526,G__164527));
})();
var G__164499 = " ";
var G__164500 = (function (){var G__164528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164529 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164528,G__164529) : tailrecursion.hoplon.span.call(null,G__164528,G__164529));
})();
var G__164501 = ")))\n             ";
var G__164502 = (function (){var G__164530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164531 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164530,G__164531) : tailrecursion.hoplon.span.call(null,G__164530,G__164531));
})();
var G__164503 = "\n             ";
var G__164504 = (function (){var G__164532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164533 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164532,G__164533) : tailrecursion.hoplon.span.call(null,G__164532,G__164533));
})();
var G__164505 = ")\n     ";
var G__164506 = (function (){var G__164534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164535 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164534,G__164535) : tailrecursion.hoplon.span.call(null,G__164534,G__164535));
})();
var G__164507 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__164481,G__164482,G__164483,G__164484,G__164485,G__164486,G__164487,G__164488,G__164489,G__164490,G__164491,G__164492,G__164493,G__164494,G__164495,G__164496,G__164497,G__164498,G__164499,G__164500,G__164501,G__164502,G__164503,G__164504,G__164505,G__164506,G__164507) : tailrecursion.hoplon.pre.call(null,G__164481,G__164482,G__164483,G__164484,G__164485,G__164486,G__164487,G__164488,G__164489,G__164490,G__164491,G__164492,G__164493,G__164494,G__164495,G__164496,G__164497,G__164498,G__164499,G__164500,G__164501,G__164502,G__164503,G__164504,G__164505,G__164506,G__164507));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164479,G__164480) : tailrecursion.hoplon.div.call(null,G__164479,G__164480));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164478) : tailrecursion.hoplon.div.call(null,G__164478));
})(),(function (){var G__164536 = cljs.core.PersistentArrayMap.EMPTY;
var G__164537 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure runs the test a given number of times, as specified by a parameter. Its value is true if the test succeeds every time, and false otherwise."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164536,G__164537) : tailrecursion.hoplon.markdown.para_node.call(null,G__164536,G__164537));
})(),(function (){var G__164538 = (function (){var G__164539 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164540 = (function (){var G__164541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164542 = "(";
var G__164543 = (function (){var G__164580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164581 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164580,G__164581) : tailrecursion.hoplon.span.call(null,G__164580,G__164581));
})();
var G__164544 = (function (){var G__164582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164583 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164582,G__164583) : tailrecursion.hoplon.span.call(null,G__164582,G__164583));
})();
var G__164545 = " [";
var G__164546 = (function (){var G__164584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164585 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164584,G__164585) : tailrecursion.hoplon.span.call(null,G__164584,G__164585));
})();
var G__164547 = " ";
var G__164548 = (function (){var G__164586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164587 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164586,G__164587) : tailrecursion.hoplon.span.call(null,G__164586,G__164587));
})();
var G__164549 = "]\n  (";
var G__164550 = (function (){var G__164588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164589 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164588,G__164589) : tailrecursion.hoplon.span.call(null,G__164588,G__164589));
})();
var G__164551 = "[";
var G__164552 = (function (){var G__164590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164591 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164590,G__164591) : tailrecursion.hoplon.span.call(null,G__164590,G__164591));
})();
var G__164553 = " ";
var G__164554 = (function (){var G__164592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164593 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164592,G__164593) : tailrecursion.hoplon.span.call(null,G__164592,G__164593));
})();
var G__164555 = "]\n    (";
var G__164556 = (function (){var G__164594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164595 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164594,G__164595) : tailrecursion.hoplon.span.call(null,G__164594,G__164595));
})();
var G__164557 = "(";
var G__164558 = (function (){var G__164596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164597 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164596,G__164597) : tailrecursion.hoplon.span.call(null,G__164596,G__164597));
})();
var G__164559 = (function (){var G__164598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164599 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164598,G__164599) : tailrecursion.hoplon.span.call(null,G__164598,G__164599));
})();
var G__164560 = " ";
var G__164561 = (function (){var G__164600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164601 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164600,G__164601) : tailrecursion.hoplon.span.call(null,G__164600,G__164601));
})();
var G__164562 = ") ";
var G__164563 = (function (){var G__164602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164603 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164602,G__164603) : tailrecursion.hoplon.span.call(null,G__164602,G__164603));
})();
var G__164564 = "\n          (";
var G__164565 = (function (){var G__164604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164605 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164604,G__164605) : tailrecursion.hoplon.span.call(null,G__164604,G__164605));
})();
var G__164566 = " ";
var G__164567 = (function (){var G__164606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164607 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164606,G__164607) : tailrecursion.hoplon.span.call(null,G__164606,G__164607));
})();
var G__164568 = ") (";
var G__164569 = (function (){var G__164608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164609 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164608,G__164609) : tailrecursion.hoplon.span.call(null,G__164608,G__164609));
})();
var G__164570 = " (";
var G__164571 = (function (){var G__164610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164611 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164610,G__164611) : tailrecursion.hoplon.span.call(null,G__164610,G__164611));
})();
var G__164572 = (function (){var G__164612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164613 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164612,G__164613) : tailrecursion.hoplon.span.call(null,G__164612,G__164613));
})();
var G__164573 = " ";
var G__164574 = (function (){var G__164614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164615 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164614,G__164615) : tailrecursion.hoplon.span.call(null,G__164614,G__164615));
})();
var G__164575 = "))\n          ";
var G__164576 = (function (){var G__164616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164617 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164616,G__164617) : tailrecursion.hoplon.span.call(null,G__164616,G__164617));
})();
var G__164577 = " ";
var G__164578 = (function (){var G__164618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164619 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164618,G__164619) : tailrecursion.hoplon.span.call(null,G__164618,G__164619));
})();
var G__164579 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__164541,G__164542,G__164543,G__164544,G__164545,G__164546,G__164547,G__164548,G__164549,G__164550,G__164551,G__164552,G__164553,G__164554,G__164555,G__164556,G__164557,G__164558,G__164559,G__164560,G__164561,G__164562,G__164563,G__164564,G__164565,G__164566,G__164567,G__164568,G__164569,G__164570,G__164571,G__164572,G__164573,G__164574,G__164575,G__164576,G__164577,G__164578,G__164579) : tailrecursion.hoplon.pre.call(null,G__164541,G__164542,G__164543,G__164544,G__164545,G__164546,G__164547,G__164548,G__164549,G__164550,G__164551,G__164552,G__164553,G__164554,G__164555,G__164556,G__164557,G__164558,G__164559,G__164560,G__164561,G__164562,G__164563,G__164564,G__164565,G__164566,G__164567,G__164568,G__164569,G__164570,G__164571,G__164572,G__164573,G__164574,G__164575,G__164576,G__164577,G__164578,G__164579));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164539,G__164540) : tailrecursion.hoplon.div.call(null,G__164539,G__164540));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164538) : tailrecursion.hoplon.div.call(null,G__164538));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164311;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164310;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164309;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164308;
}})()], 0));
var G__158021 = "";
var G__158022 = content.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"Probabilistic Methods"], null),(function (){var _STAR_references_STAR_164620 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164621 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164622 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164623 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164624 = cljs.core.PersistentArrayMap.EMPTY;
var G__164625 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ther Fermat test differs in character from most familiar algorithms, in which one computes an answer that is guaranteed to be correct. Here, the answer obtained is only probably correct. More precisely, if \\(n\\) ever fails the Fermat test, we can be certain that \\(n\\) is not prime. But the fact that \\(n\\) passes the test, while an extremely strong indication, is still not a guarantee that \\(n\\) is prime. What we would like to say is that for any number \\(n\\), if we perform the test enough times and find that \\(n\\) always passes the test, then the probability of error in our primality test can be made as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164624,G__164625) : tailrecursion.hoplon.markdown.para_node.call(null,G__164624,G__164625));
})(),(function (){var G__164626 = cljs.core.PersistentArrayMap.EMPTY;
var G__164627 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, this assertion is not quite correct. There do exist numbers that fool the Fermat test: numbers \\(n\\) that are note prime and yet have th property that \\(a^n\\) is congruent to \\(a\\) modulo \\(n\\) for all integers \\(a< n\\). Such numbers are extremely rare, so the Fermat test is quite reliable in practice.",(function (){var G__164628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__164629 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Numbers that fool the Fermat test are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Carmichael numbers"], null)], 0)),", and little is known about them other than that they are extremely rare. There are 255 Carmichael numbers below 100,000,000. The smallest few are 561, 1105, 1729, 2465, 2821, and 6601. In testing primality of very large numbers chosen at random, the chance of stumbling upon a value that fools the Fermat test is less than the chance that cosmic radiation will cause the computer to make an error in carrying out a ",(function (){var G__164630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__164631 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["correct"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164630,G__164631) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164630,G__164631));
})()," algorithm. Considering an algorithm to be inadequate for the first reason but not for the second illustrates the difference between mathematics and engineering."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164628,G__164629) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164628,G__164629));
})()," There are variations of the Fermat test that cannot be fooled. In these tests, as with the Fermat method, one tests the primality of an integer \\(n\\) by choosing a random integer \\(a< n\\) and checking some condition that depends upon \\(n\\) and \\(a\\). (See ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/exercise/28/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercise 1.28"], null)], 0))," for an example of such a test.) On the other hand, in contrast to the Fermat test, one can prove that, for any \\(n\\), the condition does not hold for most of the integers \\(a<n\\) unless \\(n\\) is prime. Thus, if \\(n\\) passes the test for some random choice of \\(a\\), the chances are better than even that \\(n\\) is prime. If \\(n\\) passes the test for two random choices of \\(a\\), the chances are better than 3 out of 4 that \\(n\\) is prime. By running the test with more and more randomly chosen values of \\(a\\) we can make the probability of error as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164626,G__164627) : tailrecursion.hoplon.markdown.para_node.call(null,G__164626,G__164627));
})(),(function (){var G__164632 = cljs.core.PersistentArrayMap.EMPTY;
var G__164633 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The existence of tests for which one can prove that the chance of error becomes arbitrarily small has sparked interest in algorithms of this type, which have come to be known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic algorithms"], null)], 0)),". There is a great deal of research activity in this area and probabilistic algorithms have been ruitfully applied to many fields.",(function (){var G__164634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double_DASH_angle], null);
var G__164635 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the most striking applications of probabilistic prime testing has been to the field of cryptography. Although it is now computationally infeasible to factor an arbitrary 200-digit number, the primality of such a number can be checked in a few seconds with the Fermat test. This fact forms the basis of a technique for constructing ",(function (){var G__164636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__164637 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unbreakable codes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164636,G__164637) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164636,G__164637));
})()," suggested by Rivest, Shamir, and Adleman (1977). The resulting ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["RSA algorithm"], null)], 0))," has become a widely used technique for enhancing the security of electronic communications. Because of this and related developments, the study of prime numbers, once considered the epitome of a topic in ",(function (){var G__164638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__164639 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164638,G__164639) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164638,G__164639));
})()," mathematics to be studied only for its own sake, now turns out to have important practical applications to cryptography, electronic funds transfer, and information retrieval."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__164634,G__164635) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__164634,G__164635));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164632,G__164633) : tailrecursion.hoplon.markdown.para_node.call(null,G__164632,G__164633));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164623;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164622;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164621;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164620;
}})()], 0));
var G__158023 = "";
var G__158024 = content.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$title,"21-28"], null),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(21)], null),(function (){var _STAR_references_STAR_164640 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164641 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164642 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164643 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164644 = cljs.core.PersistentArrayMap.EMPTY;
var G__164645 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__164646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest-divisor"], null);
var G__164647 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164646,G__164647) : tailrecursion.hoplon.markdown.code_node.call(null,G__164646,G__164647));
})()," procedure to find the smallest divisor of each of the following numbers: 199, 1999,19999."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164644,G__164645) : tailrecursion.hoplon.markdown.para_node.call(null,G__164644,G__164645));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164643;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164642;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164641;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164640;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_164648 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164649 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164650 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164651 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164652 = cljs.core.PersistentArrayMap.EMPTY;
var G__164653 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["199 is prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164652,G__164653) : tailrecursion.hoplon.markdown.para_node.call(null,G__164652,G__164653));
})(),(function (){var G__164654 = cljs.core.PersistentArrayMap.EMPTY;
var G__164655 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1999 is also prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164654,G__164655) : tailrecursion.hoplon.markdown.para_node.call(null,G__164654,G__164655));
})(),(function (){var G__164656 = cljs.core.PersistentArrayMap.EMPTY;
var G__164657 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["7 is the smallest divisor of 19999"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164656,G__164657) : tailrecursion.hoplon.markdown.para_node.call(null,G__164656,G__164657));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164651;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164650;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164649;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164648;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(22)], null),(function (){var _STAR_references_STAR_164658 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164659 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164660 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164661 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164662 = cljs.core.PersistentArrayMap.EMPTY;
var G__164663 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Most Lisp implementations include a primitive (called ",(function (){var G__164664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"runtime"], null);
var G__164665 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164664,G__164665) : tailrecursion.hoplon.markdown.code_node.call(null,G__164664,G__164665));
})()," in Scheme) that returns an integer that specifies the amount of time the system has been running (measured, for example, in microseconds). In Clojure, however, there is a function that is better suited for our current needs called ",(function (){var G__164666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"time"], null);
var G__164667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164666,G__164667) : tailrecursion.hoplon.markdown.code_node.call(null,G__164666,G__164667));
})()," that evaluates its argument and prints the time it took to evaluate it, then it returns the value of the expression. The following ",(function (){var G__164668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"timed-prime-test"], null);
var G__164669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164668,G__164669) : tailrecursion.hoplon.markdown.code_node.call(null,G__164668,G__164669));
})()," procedure, when called with an integer \\(n\\), prints \\(n\\) and checks to see if \\(n\\) is prime while timing the test, prints the time it took to test the primality of the number followed by the value of that test (ie ",(function (){var G__164670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__164671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164670,G__164671) : tailrecursion.hoplon.markdown.code_node.call(null,G__164670,G__164671));
})()," or ",(function (){var G__164672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"false"], null);
var G__164673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164672,G__164673) : tailrecursion.hoplon.markdown.code_node.call(null,G__164672,G__164673));
})(),"). But in order to successfully accomplish this task, we need to learn about a few more tools in the Clojure toolshed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164662,G__164663) : tailrecursion.hoplon.markdown.para_node.call(null,G__164662,G__164663));
})(),(function (){var G__164674 = cljs.core.PersistentArrayMap.EMPTY;
var G__164675 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you have any questions about the specific functions used in this (or any example), remember to check out ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"http://www.clojuredocs.org",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojuredocs.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164674,G__164675) : tailrecursion.hoplon.markdown.para_node.call(null,G__164674,G__164675));
})(),(function (){var G__164676 = (function (){var G__164677 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164678 = (function (){var G__164679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164680 = "(";
var G__164681 = (function (){var G__164697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164698 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164697,G__164698) : tailrecursion.hoplon.span.call(null,G__164697,G__164698));
})();
var G__164682 = (function (){var G__164699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164700 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164699,G__164700) : tailrecursion.hoplon.span.call(null,G__164699,G__164700));
})();
var G__164683 = " [";
var G__164684 = (function (){var G__164701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164702 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164701,G__164702) : tailrecursion.hoplon.span.call(null,G__164701,G__164702));
})();
var G__164685 = "]\n  (";
var G__164686 = (function (){var G__164703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164704 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164703,G__164704) : tailrecursion.hoplon.span.call(null,G__164703,G__164704));
})();
var G__164687 = "(";
var G__164688 = (function (){var G__164705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164706 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164705,G__164706) : tailrecursion.hoplon.span.call(null,G__164705,G__164706));
})();
var G__164689 = (function (){var G__164707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164708 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164707,G__164708) : tailrecursion.hoplon.span.call(null,G__164707,G__164708));
})();
var G__164690 = ") (";
var G__164691 = (function (){var G__164709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164710 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164709,G__164710) : tailrecursion.hoplon.span.call(null,G__164709,G__164710));
})();
var G__164692 = "(";
var G__164693 = (function (){var G__164711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164712 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164711,G__164712) : tailrecursion.hoplon.span.call(null,G__164711,G__164712));
})();
var G__164694 = " ";
var G__164695 = (function (){var G__164713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164714 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164713,G__164714) : tailrecursion.hoplon.span.call(null,G__164713,G__164714));
})();
var G__164696 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__164679,G__164680,G__164681,G__164682,G__164683,G__164684,G__164685,G__164686,G__164687,G__164688,G__164689,G__164690,G__164691,G__164692,G__164693,G__164694,G__164695,G__164696) : tailrecursion.hoplon.pre.call(null,G__164679,G__164680,G__164681,G__164682,G__164683,G__164684,G__164685,G__164686,G__164687,G__164688,G__164689,G__164690,G__164691,G__164692,G__164693,G__164694,G__164695,G__164696));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164677,G__164678) : tailrecursion.hoplon.div.call(null,G__164677,G__164678));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164676) : tailrecursion.hoplon.div.call(null,G__164676));
})(),(function (){var G__164715 = cljs.core.PersistentArrayMap.EMPTY;
var G__164716 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164717 = cljs.core.PersistentArrayMap.EMPTY;
var G__164718 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alternatively, if we didn",(function (){var G__164719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__164720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164719,G__164720) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164719,G__164720));
})(),"t want to see the ",(function (){var G__164721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"true"], null);
var G__164722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164721,G__164722) : tailrecursion.hoplon.markdown.code_node.call(null,G__164721,G__164722));
})(),"/",(function (){var G__164723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"false"], null);
var G__164724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164723,G__164724) : tailrecursion.hoplon.markdown.code_node.call(null,G__164723,G__164724));
})()," at the end, we could put ",(function (){var G__164725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(do (time (prime? n)) n)"], null);
var G__164726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164725,G__164726) : tailrecursion.hoplon.markdown.code_node.call(null,G__164725,G__164726));
})(),", which would evaluate the ",(function (){var G__164727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(time (prime? n))"], null);
var G__164728 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164727,G__164728) : tailrecursion.hoplon.markdown.code_node.call(null,G__164727,G__164728));
})()," procedure, which would print the time it took to determine the primality of \\(n\\), then it would evaluate ",(function (){var G__164729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__164730 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164729,G__164730) : tailrecursion.hoplon.markdown.code_node.call(null,G__164729,G__164730));
})(),", and return the value, which is ",(function (){var G__164731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"n"], null);
var G__164732 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164731,G__164732) : tailrecursion.hoplon.markdown.code_node.call(null,G__164731,G__164732));
})()," itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164717,G__164718) : tailrecursion.hoplon.markdown.para_node.call(null,G__164717,G__164718));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__164715,G__164716) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__164715,G__164716));
})(),(function (){var G__164733 = cljs.core.PersistentArrayMap.EMPTY;
var G__164734 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this procedure, write a procedure ",(function (){var G__164735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"search-for-primes"], null);
var G__164736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164735,G__164736) : tailrecursion.hoplon.markdown.code_node.call(null,G__164735,G__164736));
})()," that checks for the primality of consecutive odd integers in a specific range. Use your procedure to find the three smallest primes larger than 10,000,000,000; larger than 100,000,000,000; larger than 1,000,000,000,000; larger than 10,000,000,000,000. Note the time needed to test each prime. Since the testing algorithm has order of growth of \\(\\Theta(\\sqrt n)\\), you should expect that the testing for primes around 10,000 should take about \\(\\sqrt 10\\) times as long as testing for primes around 1,000. Do your timing data bear this out? How well do the data for 100,000 and 1,000,000 support the \\(\\sqrt n\\) prediction? Is your result compatible with the notion that programs on your machine run in the time proportional to the number of steps required for the computation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164733,G__164734) : tailrecursion.hoplon.markdown.para_node.call(null,G__164733,G__164734));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164661;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164660;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164659;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164658;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_164737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164741 = (function (){var G__164742 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164743 = (function (){var G__164744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164745 = "(";
var G__164746 = (function (){var G__164799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164800 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164799,G__164800) : tailrecursion.hoplon.span.call(null,G__164799,G__164800));
})();
var G__164747 = (function (){var G__164801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164802 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164801,G__164802) : tailrecursion.hoplon.span.call(null,G__164801,G__164802));
})();
var G__164748 = " [";
var G__164749 = (function (){var G__164803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164804 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164803,G__164804) : tailrecursion.hoplon.span.call(null,G__164803,G__164804));
})();
var G__164750 = " ";
var G__164751 = (function (){var G__164805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164806 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164805,G__164806) : tailrecursion.hoplon.span.call(null,G__164805,G__164806));
})();
var G__164752 = "]\n  (";
var G__164753 = (function (){var G__164807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164808 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164807,G__164808) : tailrecursion.hoplon.span.call(null,G__164807,G__164808));
})();
var G__164754 = "[";
var G__164755 = (function (){var G__164809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164810 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164809,G__164810) : tailrecursion.hoplon.span.call(null,G__164809,G__164810));
})();
var G__164756 = " ";
var G__164757 = (function (){var G__164811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164812 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164811,G__164812) : tailrecursion.hoplon.span.call(null,G__164811,G__164812));
})();
var G__164758 = "\n         ";
var G__164759 = (function (){var G__164813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164814 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164813,G__164814) : tailrecursion.hoplon.span.call(null,G__164813,G__164814));
})();
var G__164760 = " ";
var G__164761 = (function (){var G__164815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164816 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164815,G__164816) : tailrecursion.hoplon.span.call(null,G__164815,G__164816));
})();
var G__164762 = "]\n    (";
var G__164763 = (function (){var G__164817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164818 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164817,G__164818) : tailrecursion.hoplon.span.call(null,G__164817,G__164818));
})();
var G__164764 = "(";
var G__164765 = (function (){var G__164819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164820 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164819,G__164820) : tailrecursion.hoplon.span.call(null,G__164819,G__164820));
})();
var G__164766 = (function (){var G__164821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164822 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164821,G__164822) : tailrecursion.hoplon.span.call(null,G__164821,G__164822));
})();
var G__164767 = " ";
var G__164768 = (function (){var G__164823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164824 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164823,G__164824) : tailrecursion.hoplon.span.call(null,G__164823,G__164824));
})();
var G__164769 = ") ";
var G__164770 = (function (){var G__164825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164826 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164825,G__164826) : tailrecursion.hoplon.span.call(null,G__164825,G__164826));
})();
var G__164771 = "\n          (";
var G__164772 = (function (){var G__164827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164828 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164827,G__164828) : tailrecursion.hoplon.span.call(null,G__164827,G__164828));
})();
var G__164773 = " ";
var G__164774 = (function (){var G__164829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164830 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164829,G__164830) : tailrecursion.hoplon.span.call(null,G__164829,G__164830));
})();
var G__164775 = ") (";
var G__164776 = (function (){var G__164831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164832 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164831,G__164832) : tailrecursion.hoplon.span.call(null,G__164831,G__164832));
})();
var G__164777 = "(";
var G__164778 = (function (){var G__164833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164834 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164833,G__164834) : tailrecursion.hoplon.span.call(null,G__164833,G__164834));
})();
var G__164779 = " ";
var G__164780 = (function (){var G__164835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164836 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164835,G__164836) : tailrecursion.hoplon.span.call(null,G__164835,G__164836));
})();
var G__164781 = ") (";
var G__164782 = (function (){var G__164837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164838 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164837,G__164838) : tailrecursion.hoplon.span.call(null,G__164837,G__164838));
})();
var G__164783 = " (";
var G__164784 = (function (){var G__164839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164840 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164839,G__164840) : tailrecursion.hoplon.span.call(null,G__164839,G__164840));
})();
var G__164785 = (function (){var G__164841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164842 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164841,G__164842) : tailrecursion.hoplon.span.call(null,G__164841,G__164842));
})();
var G__164786 = ") (";
var G__164787 = (function (){var G__164843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164844 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164843,G__164844) : tailrecursion.hoplon.span.call(null,G__164843,G__164844));
})();
var G__164788 = (function (){var G__164845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164846 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164845,G__164846) : tailrecursion.hoplon.span.call(null,G__164845,G__164846));
})();
var G__164789 = ")))\n          ";
var G__164790 = (function (){var G__164847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164848 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164847,G__164848) : tailrecursion.hoplon.span.call(null,G__164847,G__164848));
})();
var G__164791 = " (";
var G__164792 = (function (){var G__164849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164850 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164849,G__164850) : tailrecursion.hoplon.span.call(null,G__164849,G__164850));
})();
var G__164793 = " (";
var G__164794 = (function (){var G__164851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164852 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164851,G__164852) : tailrecursion.hoplon.span.call(null,G__164851,G__164852));
})();
var G__164795 = (function (){var G__164853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164854 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164853,G__164854) : tailrecursion.hoplon.span.call(null,G__164853,G__164854));
})();
var G__164796 = ") ";
var G__164797 = (function (){var G__164855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164856 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164855,G__164856) : tailrecursion.hoplon.span.call(null,G__164855,G__164856));
})();
var G__164798 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55(G__164744,G__164745,G__164746,G__164747,G__164748,G__164749,G__164750,G__164751,G__164752,G__164753,G__164754,G__164755,G__164756,G__164757,G__164758,G__164759,G__164760,G__164761,G__164762,G__164763,G__164764,G__164765,G__164766,G__164767,G__164768,G__164769,G__164770,G__164771,G__164772,G__164773,G__164774,G__164775,G__164776,G__164777,G__164778,G__164779,G__164780,G__164781,G__164782,G__164783,G__164784,G__164785,G__164786,G__164787,G__164788,G__164789,G__164790,G__164791,G__164792,G__164793,G__164794,G__164795,G__164796,G__164797,G__164798) : tailrecursion.hoplon.pre.call(null,G__164744,G__164745,G__164746,G__164747,G__164748,G__164749,G__164750,G__164751,G__164752,G__164753,G__164754,G__164755,G__164756,G__164757,G__164758,G__164759,G__164760,G__164761,G__164762,G__164763,G__164764,G__164765,G__164766,G__164767,G__164768,G__164769,G__164770,G__164771,G__164772,G__164773,G__164774,G__164775,G__164776,G__164777,G__164778,G__164779,G__164780,G__164781,G__164782,G__164783,G__164784,G__164785,G__164786,G__164787,G__164788,G__164789,G__164790,G__164791,G__164792,G__164793,G__164794,G__164795,G__164796,G__164797,G__164798));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164742,G__164743) : tailrecursion.hoplon.div.call(null,G__164742,G__164743));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164741) : tailrecursion.hoplon.div.call(null,G__164741));
})(),(function (){var G__164857 = cljs.core.PersistentArrayMap.EMPTY;
var G__164858 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And I leave the observations to you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164857,G__164858) : tailrecursion.hoplon.markdown.para_node.call(null,G__164857,G__164858));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164739;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164737;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(23)], null),(function (){var _STAR_references_STAR_164859 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164860 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164861 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164862 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164863 = cljs.core.PersistentArrayMap.EMPTY;
var G__164864 = new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__164865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest-divisor"], null);
var G__164866 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164865,G__164866) : tailrecursion.hoplon.markdown.code_node.call(null,G__164865,G__164866));
})()," procedure shown at the start of this section does lots of needless testing: After it checks to see if the number is divisible by 2 there is no point in checking to see if it is divisible by any larger even numbers. This suggests that the values used for ",(function (){var G__164867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"test-divisor"], null);
var G__164868 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164867,G__164868) : tailrecursion.hoplon.markdown.code_node.call(null,G__164867,G__164868));
})()," should not be 2,3,4,5,6,",(function (){var G__164869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__164870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164869,G__164870) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164869,G__164870));
})(),", but rather, 2,3,5,7,9,",(function (){var G__164871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$ellipsis], null);
var G__164872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__164871,G__164872) : tailrecursion.hoplon.markdown.simple_node.call(null,G__164871,G__164872));
})(),". To implement this chance, define a procedure ",(function (){var G__164873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"next"], null);
var G__164874 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164873,G__164874) : tailrecursion.hoplon.markdown.code_node.call(null,G__164873,G__164874));
})()," that returns 3 if its input is equal to 2 and otherwise returns its input plus 2. Modify the ",(function (){var G__164875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest divisor"], null);
var G__164876 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164875,G__164876) : tailrecursion.hoplon.markdown.code_node.call(null,G__164875,G__164876));
})()," procedure to use ",(function (){var G__164877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(next\ntest-divisor)"], null);
var G__164878 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164877,G__164878) : tailrecursion.hoplon.markdown.code_node.call(null,G__164877,G__164878));
})()," instead of ",(function (){var G__164879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(+ test-divisor 1)"], null);
var G__164880 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164879,G__164880) : tailrecursion.hoplon.markdown.code_node.call(null,G__164879,G__164880));
})()," or ",(function (){var G__164881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(inc\ntest-divisor)"], null);
var G__164882 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164881,G__164882) : tailrecursion.hoplon.markdown.code_node.call(null,G__164881,G__164882));
})(),". With ",(function (){var G__164883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"timed-prime-test"], null);
var G__164884 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164883,G__164884) : tailrecursion.hoplon.markdown.code_node.call(null,G__164883,G__164884));
})()," incorporating this modified version of ",(function (){var G__164885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"smallest-divisor"], null);
var G__164886 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__164885,G__164886) : tailrecursion.hoplon.markdown.code_node.call(null,G__164885,G__164886));
})(),", run the test for each of the 12 primes found in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/22/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0)),". Since this modification halves the number of test steps, you should expect it to run about twice as fast. Is this expectation confirmed? If not, what is the ovserved ration of the speeds of the two algorithms, and how do you explain the fact that it is different from 2? "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__164863,G__164864) : tailrecursion.hoplon.markdown.para_node.call(null,G__164863,G__164864));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164862;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164861;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164860;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164859;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_164887 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164888 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_164889 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_164890 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__164891 = (function (){var G__164892 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__164893 = (function (){var G__164894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__164895 = "(";
var G__164896 = (function (){var G__164970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164971 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164970,G__164971) : tailrecursion.hoplon.span.call(null,G__164970,G__164971));
})();
var G__164897 = (function (){var G__164972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164973 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164972,G__164973) : tailrecursion.hoplon.span.call(null,G__164972,G__164973));
})();
var G__164898 = "[";
var G__164899 = (function (){var G__164974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164975 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164974,G__164975) : tailrecursion.hoplon.span.call(null,G__164974,G__164975));
})();
var G__164900 = "]\n  (";
var G__164901 = (function (){var G__164976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164977 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164976,G__164977) : tailrecursion.hoplon.span.call(null,G__164976,G__164977));
})();
var G__164902 = "(";
var G__164903 = (function (){var G__164978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__164979 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164978,G__164979) : tailrecursion.hoplon.span.call(null,G__164978,G__164979));
})();
var G__164904 = " ";
var G__164905 = (function (){var G__164980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164981 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164980,G__164981) : tailrecursion.hoplon.span.call(null,G__164980,G__164981));
})();
var G__164906 = " ";
var G__164907 = (function (){var G__164982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164983 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164982,G__164983) : tailrecursion.hoplon.span.call(null,G__164982,G__164983));
})();
var G__164908 = ")\n      (";
var G__164909 = (function (){var G__164984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164985 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164984,G__164985) : tailrecursion.hoplon.span.call(null,G__164984,G__164985));
})();
var G__164910 = (function (){var G__164986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164987 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164986,G__164987) : tailrecursion.hoplon.span.call(null,G__164986,G__164987));
})();
var G__164911 = ")\n      (";
var G__164912 = (function (){var G__164988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__164989 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164988,G__164989) : tailrecursion.hoplon.span.call(null,G__164988,G__164989));
})();
var G__164913 = (function (){var G__164990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164991 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164990,G__164991) : tailrecursion.hoplon.span.call(null,G__164990,G__164991));
})();
var G__164914 = " ";
var G__164915 = (function (){var G__164992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__164993 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164992,G__164993) : tailrecursion.hoplon.span.call(null,G__164992,G__164993));
})();
var G__164916 = ")))\n(";
var G__164917 = (function (){var G__164994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__164995 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164994,G__164995) : tailrecursion.hoplon.span.call(null,G__164994,G__164995));
})();
var G__164918 = (function (){var G__164996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164997 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164996,G__164997) : tailrecursion.hoplon.span.call(null,G__164996,G__164997));
})();
var G__164919 = " [";
var G__164920 = (function (){var G__164998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__164999 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__164998,G__164999) : tailrecursion.hoplon.span.call(null,G__164998,G__164999));
})();
var G__164921 = " ";
var G__164922 = (function (){var G__165000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165001 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165000,G__165001) : tailrecursion.hoplon.span.call(null,G__165000,G__165001));
})();
var G__164923 = "]\n  (";
var G__164924 = (function (){var G__165002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165003 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165002,G__165003) : tailrecursion.hoplon.span.call(null,G__165002,G__165003));
})();
var G__164925 = "[";
var G__164926 = (function (){var G__165004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165005 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165004,G__165005) : tailrecursion.hoplon.span.call(null,G__165004,G__165005));
})();
var G__164927 = " ";
var G__164928 = (function (){var G__165006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165007 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165006,G__165007) : tailrecursion.hoplon.span.call(null,G__165006,G__165007));
})();
var G__164929 = "\n         ";
var G__164930 = (function (){var G__165008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165009 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165008,G__165009) : tailrecursion.hoplon.span.call(null,G__165008,G__165009));
})();
var G__164931 = " ";
var G__164932 = (function (){var G__165010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165011 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165010,G__165011) : tailrecursion.hoplon.span.call(null,G__165010,G__165011));
})();
var G__164933 = "]\n    (";
var G__164934 = (function (){var G__165012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165013 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165012,G__165013) : tailrecursion.hoplon.span.call(null,G__165012,G__165013));
})();
var G__164935 = "(";
var G__164936 = (function (){var G__165014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165015 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165014,G__165015) : tailrecursion.hoplon.span.call(null,G__165014,G__165015));
})();
var G__164937 = (function (){var G__165016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165017 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165016,G__165017) : tailrecursion.hoplon.span.call(null,G__165016,G__165017));
})();
var G__164938 = " ";
var G__164939 = (function (){var G__165018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165019 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165018,G__165019) : tailrecursion.hoplon.span.call(null,G__165018,G__165019));
})();
var G__164940 = ") ";
var G__164941 = (function (){var G__165020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165021 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165020,G__165021) : tailrecursion.hoplon.span.call(null,G__165020,G__165021));
})();
var G__164942 = "\n          (";
var G__164943 = (function (){var G__165022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165023 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165022,G__165023) : tailrecursion.hoplon.span.call(null,G__165022,G__165023));
})();
var G__164944 = " ";
var G__164945 = (function (){var G__165024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165025 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165024,G__165025) : tailrecursion.hoplon.span.call(null,G__165024,G__165025));
})();
var G__164946 = ") (";
var G__164947 = (function (){var G__165026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165027 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165026,G__165027) : tailrecursion.hoplon.span.call(null,G__165026,G__165027));
})();
var G__164948 = "(";
var G__164949 = (function (){var G__165028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165029 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165028,G__165029) : tailrecursion.hoplon.span.call(null,G__165028,G__165029));
})();
var G__164950 = " ";
var G__164951 = (function (){var G__165030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165031 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165030,G__165031) : tailrecursion.hoplon.span.call(null,G__165030,G__165031));
})();
var G__164952 = ") (";
var G__164953 = (function (){var G__165032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165033 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165032,G__165033) : tailrecursion.hoplon.span.call(null,G__165032,G__165033));
})();
var G__164954 = " (";
var G__164955 = (function (){var G__165034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165035 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165034,G__165035) : tailrecursion.hoplon.span.call(null,G__165034,G__165035));
})();
var G__164956 = (function (){var G__165036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165037 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165036,G__165037) : tailrecursion.hoplon.span.call(null,G__165036,G__165037));
})();
var G__164957 = ") (";
var G__164958 = (function (){var G__165038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165039 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165038,G__165039) : tailrecursion.hoplon.span.call(null,G__165038,G__165039));
})();
var G__164959 = (function (){var G__165040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165041 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165040,G__165041) : tailrecursion.hoplon.span.call(null,G__165040,G__165041));
})();
var G__164960 = ")))\n          ";
var G__164961 = (function (){var G__165042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165043 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165042,G__165043) : tailrecursion.hoplon.span.call(null,G__165042,G__165043));
})();
var G__164962 = " (";
var G__164963 = (function (){var G__165044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165045 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165044,G__165045) : tailrecursion.hoplon.span.call(null,G__165044,G__165045));
})();
var G__164964 = " (";
var G__164965 = (function (){var G__165046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165047 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165046,G__165047) : tailrecursion.hoplon.span.call(null,G__165046,G__165047));
})();
var G__164966 = (function (){var G__165048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165049 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165048,G__165049) : tailrecursion.hoplon.span.call(null,G__165048,G__165049));
})();
var G__164967 = ") ";
var G__164968 = (function (){var G__165050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165051 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165050,G__165051) : tailrecursion.hoplon.span.call(null,G__165050,G__165051));
})();
var G__164969 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__164894,G__164895,G__164896,G__164897,G__164898,G__164899,G__164900,G__164901,G__164902,G__164903,G__164904,G__164905,G__164906,G__164907,G__164908,G__164909,G__164910,G__164911,G__164912,G__164913,G__164914,G__164915,G__164916,G__164917,G__164918,G__164919,G__164920,G__164921,G__164922,G__164923,G__164924,G__164925,G__164926,G__164927,G__164928,G__164929,G__164930,G__164931,G__164932,G__164933,G__164934,G__164935,G__164936,G__164937,G__164938,G__164939,G__164940,G__164941,G__164942,G__164943,G__164944,G__164945,G__164946,G__164947,G__164948,G__164949,G__164950,G__164951,G__164952,G__164953,G__164954,G__164955,G__164956,G__164957,G__164958,G__164959,G__164960,G__164961,G__164962,G__164963,G__164964,G__164965,G__164966,G__164967,G__164968,G__164969) : tailrecursion.hoplon.pre.call(null,G__164894,G__164895,G__164896,G__164897,G__164898,G__164899,G__164900,G__164901,G__164902,G__164903,G__164904,G__164905,G__164906,G__164907,G__164908,G__164909,G__164910,G__164911,G__164912,G__164913,G__164914,G__164915,G__164916,G__164917,G__164918,G__164919,G__164920,G__164921,G__164922,G__164923,G__164924,G__164925,G__164926,G__164927,G__164928,G__164929,G__164930,G__164931,G__164932,G__164933,G__164934,G__164935,G__164936,G__164937,G__164938,G__164939,G__164940,G__164941,G__164942,G__164943,G__164944,G__164945,G__164946,G__164947,G__164948,G__164949,G__164950,G__164951,G__164952,G__164953,G__164954,G__164955,G__164956,G__164957,G__164958,G__164959,G__164960,G__164961,G__164962,G__164963,G__164964,G__164965,G__164966,G__164967,G__164968,G__164969));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__164892,G__164893) : tailrecursion.hoplon.div.call(null,G__164892,G__164893));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__164891) : tailrecursion.hoplon.div.call(null,G__164891));
})(),(function (){var G__165052 = cljs.core.PersistentArrayMap.EMPTY;
var G__165053 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Well, we",(function (){var G__165054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165054,G__165055) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165054,G__165055));
})(),"re not exactly halving the number of steps because each time we have to evaluate the ",(function (){var G__165056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"if"], null);
var G__165057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165056,G__165057) : tailrecursion.hoplon.markdown.code_node.call(null,G__165056,G__165057));
})()," statement which includes some division and whatnot. Also there are compiler optimizations invloved, so these things are rough estimates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165052,G__165053) : tailrecursion.hoplon.markdown.para_node.call(null,G__165052,G__165053));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164890;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164889;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_164888;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_164887;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(24)], null),(function (){var _STAR_references_STAR_165058 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165059 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165060 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165061 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165062 = cljs.core.PersistentArrayMap.EMPTY;
var G__165063 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify the ",(function (){var G__165064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"timed-prime-test"], null);
var G__165065 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165064,G__165065) : tailrecursion.hoplon.markdown.code_node.call(null,G__165064,G__165065));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/24/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0))," to use ",(function (){var G__165066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-prime?"], null);
var G__165067 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165066,G__165067) : tailrecursion.hoplon.markdown.code_node.call(null,G__165066,G__165067));
})()," (the Fermat method), and test each of the 12 primes you found in that exercise. Since the Fermat test has \\(\\Theta(\\log n)\\) growth, how would you expect the time to test primes near 10,000,000,000,000 to compare with the time needed to test primes near 10,000,000,000? Do your data bear this out? Can you explain any discrepancy you find?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165062,G__165063) : tailrecursion.hoplon.markdown.para_node.call(null,G__165062,G__165063));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165061;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165060;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165059;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165058;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_165068 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165069 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165070 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165071 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165072 = (function (){var G__165073 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__165074 = (function (){var G__165075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__165076 = "(";
var G__165077 = (function (){var G__165093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165094 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165093,G__165094) : tailrecursion.hoplon.span.call(null,G__165093,G__165094));
})();
var G__165078 = (function (){var G__165095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165096 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165095,G__165096) : tailrecursion.hoplon.span.call(null,G__165095,G__165096));
})();
var G__165079 = " [";
var G__165080 = (function (){var G__165097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165098 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165097,G__165098) : tailrecursion.hoplon.span.call(null,G__165097,G__165098));
})();
var G__165081 = "]\n  (";
var G__165082 = (function (){var G__165099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165100 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165099,G__165100) : tailrecursion.hoplon.span.call(null,G__165099,G__165100));
})();
var G__165083 = "(";
var G__165084 = (function (){var G__165101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165102 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165101,G__165102) : tailrecursion.hoplon.span.call(null,G__165101,G__165102));
})();
var G__165085 = (function (){var G__165103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165104 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165103,G__165104) : tailrecursion.hoplon.span.call(null,G__165103,G__165104));
})();
var G__165086 = ") (";
var G__165087 = (function (){var G__165105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165106 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165105,G__165106) : tailrecursion.hoplon.span.call(null,G__165105,G__165106));
})();
var G__165088 = "(";
var G__165089 = (function (){var G__165107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165108 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165107,G__165108) : tailrecursion.hoplon.span.call(null,G__165107,G__165108));
})();
var G__165090 = " ";
var G__165091 = (function (){var G__165109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165110 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165109,G__165110) : tailrecursion.hoplon.span.call(null,G__165109,G__165110));
})();
var G__165092 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__165075,G__165076,G__165077,G__165078,G__165079,G__165080,G__165081,G__165082,G__165083,G__165084,G__165085,G__165086,G__165087,G__165088,G__165089,G__165090,G__165091,G__165092) : tailrecursion.hoplon.pre.call(null,G__165075,G__165076,G__165077,G__165078,G__165079,G__165080,G__165081,G__165082,G__165083,G__165084,G__165085,G__165086,G__165087,G__165088,G__165089,G__165090,G__165091,G__165092));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__165073,G__165074) : tailrecursion.hoplon.div.call(null,G__165073,G__165074));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__165072) : tailrecursion.hoplon.div.call(null,G__165072));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165071;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165070;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165069;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165068;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(25)], null),(function (){var _STAR_references_STAR_165111 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165112 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165113 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165114 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165115 = cljs.core.PersistentArrayMap.EMPTY;
var G__165116 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker complains that we went to a lot of extra work in writing ",(function (){var G__165117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__165118 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165117,G__165118) : tailrecursion.hoplon.markdown.code_node.call(null,G__165117,G__165118));
})(),". After all, she says, since we already know how to compute exponentials, we could have simply written"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165115,G__165116) : tailrecursion.hoplon.markdown.para_node.call(null,G__165115,G__165116));
})(),(function (){var G__165119 = (function (){var G__165120 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__165121 = (function (){var G__165122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__165123 = "(";
var G__165124 = (function (){var G__165143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165144 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165143,G__165144) : tailrecursion.hoplon.span.call(null,G__165143,G__165144));
})();
var G__165125 = (function (){var G__165145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165146 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165145,G__165146) : tailrecursion.hoplon.span.call(null,G__165145,G__165146));
})();
var G__165126 = " [";
var G__165127 = (function (){var G__165147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165148 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165147,G__165148) : tailrecursion.hoplon.span.call(null,G__165147,G__165148));
})();
var G__165128 = " ";
var G__165129 = (function (){var G__165149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165150 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165149,G__165150) : tailrecursion.hoplon.span.call(null,G__165149,G__165150));
})();
var G__165130 = " ";
var G__165131 = (function (){var G__165151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165152 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165151,G__165152) : tailrecursion.hoplon.span.call(null,G__165151,G__165152));
})();
var G__165132 = "]\n  (";
var G__165133 = (function (){var G__165153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165154 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165153,G__165154) : tailrecursion.hoplon.span.call(null,G__165153,G__165154));
})();
var G__165134 = " (";
var G__165135 = (function (){var G__165155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165156 = "fast-expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165155,G__165156) : tailrecursion.hoplon.span.call(null,G__165155,G__165156));
})();
var G__165136 = " ";
var G__165137 = (function (){var G__165157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165158 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165157,G__165158) : tailrecursion.hoplon.span.call(null,G__165157,G__165158));
})();
var G__165138 = " ";
var G__165139 = (function (){var G__165159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165160 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165159,G__165160) : tailrecursion.hoplon.span.call(null,G__165159,G__165160));
})();
var G__165140 = ") ";
var G__165141 = (function (){var G__165161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165162 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165161,G__165162) : tailrecursion.hoplon.span.call(null,G__165161,G__165162));
})();
var G__165142 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__165122,G__165123,G__165124,G__165125,G__165126,G__165127,G__165128,G__165129,G__165130,G__165131,G__165132,G__165133,G__165134,G__165135,G__165136,G__165137,G__165138,G__165139,G__165140,G__165141,G__165142) : tailrecursion.hoplon.pre.call(null,G__165122,G__165123,G__165124,G__165125,G__165126,G__165127,G__165128,G__165129,G__165130,G__165131,G__165132,G__165133,G__165134,G__165135,G__165136,G__165137,G__165138,G__165139,G__165140,G__165141,G__165142));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__165120,G__165121) : tailrecursion.hoplon.div.call(null,G__165120,G__165121));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__165119) : tailrecursion.hoplon.div.call(null,G__165119));
})(),(function (){var G__165163 = cljs.core.PersistentArrayMap.EMPTY;
var G__165164 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is she correct? Would this procedure serve as well for our fast prime tester? Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165163,G__165164) : tailrecursion.hoplon.markdown.para_node.call(null,G__165163,G__165164));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165114;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165113;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165112;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165111;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_165165 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165166 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165167 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165168 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165169 = cljs.core.PersistentArrayMap.EMPTY;
var G__165170 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplying larger numbers takes longer than the time you save by only computing ",(function (){var G__165171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"mod"], null);
var G__165172 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165171,G__165172) : tailrecursion.hoplon.markdown.code_node.call(null,G__165171,G__165172));
})()," once. So if the numbers you",(function (){var G__165173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165174 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165173,G__165174) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165173,G__165174));
})(),"re dealing with are sufficiently small, she",(function (){var G__165175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165176 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165175,G__165176) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165175,G__165176));
})(),"s correct. But if we",(function (){var G__165177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165178 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165177,G__165178) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165177,G__165178));
})(),"re trying to use this for our primality test, raising 10,000,000 to the 100,000,000,000,000 would be far more computationally expensive than modding out each time."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165169,G__165170) : tailrecursion.hoplon.markdown.para_node.call(null,G__165169,G__165170));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165168;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165167;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165166;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165165;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(26)], null),(function (){var _STAR_references_STAR_165179 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165180 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165181 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165182 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165183 = cljs.core.PersistentArrayMap.EMPTY;
var G__165184 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner is having great difficulty doing ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$url,"#!/sicp/ch/1/ex/24/",cljs.core.constant$keyword$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.24"], null)], 0)),". His ",(function (){var G__165185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fast-prime?"], null);
var G__165186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165185,G__165186) : tailrecursion.hoplon.markdown.code_node.call(null,G__165185,G__165186));
})()," test seems to run more slowly than his ",(function (){var G__165187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"prime?"], null);
var G__165188 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165187,G__165188) : tailrecursion.hoplon.markdown.code_node.call(null,G__165187,G__165188));
})()," test. Louis calls his friend Eva Lu Ator over to help. When they examine Louis",(function (){var G__165189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165189,G__165190) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165189,G__165190));
})(),"s code, they find that he has rewritten the ",(function (){var G__165191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__165192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165191,G__165192) : tailrecursion.hoplon.markdown.code_node.call(null,G__165191,G__165192));
})()," procedure to use an explicit multiplication, rather than calling ",(function (){var G__165193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"square"], null);
var G__165194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165193,G__165194) : tailrecursion.hoplon.markdown.code_node.call(null,G__165193,G__165194));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165183,G__165184) : tailrecursion.hoplon.markdown.para_node.call(null,G__165183,G__165184));
})(),(function (){var G__165195 = (function (){var G__165196 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__165197 = (function (){var G__165198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__165199 = "(";
var G__165200 = (function (){var G__165270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165271 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165270,G__165271) : tailrecursion.hoplon.span.call(null,G__165270,G__165271));
})();
var G__165201 = (function (){var G__165272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165273 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165272,G__165273) : tailrecursion.hoplon.span.call(null,G__165272,G__165273));
})();
var G__165202 = " [";
var G__165203 = (function (){var G__165274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165275 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165274,G__165275) : tailrecursion.hoplon.span.call(null,G__165274,G__165275));
})();
var G__165204 = " ";
var G__165205 = (function (){var G__165276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165277 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165276,G__165277) : tailrecursion.hoplon.span.call(null,G__165276,G__165277));
})();
var G__165206 = " ";
var G__165207 = (function (){var G__165278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165279 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165278,G__165279) : tailrecursion.hoplon.span.call(null,G__165278,G__165279));
})();
var G__165208 = "]\n  (";
var G__165209 = (function (){var G__165280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165281 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165280,G__165281) : tailrecursion.hoplon.span.call(null,G__165280,G__165281));
})();
var G__165210 = "(";
var G__165211 = (function (){var G__165282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165283 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165282,G__165283) : tailrecursion.hoplon.span.call(null,G__165282,G__165283));
})();
var G__165212 = (function (){var G__165284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165285 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165284,G__165285) : tailrecursion.hoplon.span.call(null,G__165284,G__165285));
})();
var G__165213 = " ";
var G__165214 = (function (){var G__165286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165287 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165286,G__165287) : tailrecursion.hoplon.span.call(null,G__165286,G__165287));
})();
var G__165215 = ") ";
var G__165216 = (function (){var G__165288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165289 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165288,G__165289) : tailrecursion.hoplon.span.call(null,G__165288,G__165289));
})();
var G__165217 = "\n        (";
var G__165218 = (function (){var G__165290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165291 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165290,G__165291) : tailrecursion.hoplon.span.call(null,G__165290,G__165291));
})();
var G__165219 = " ";
var G__165220 = (function (){var G__165292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165293 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165292,G__165293) : tailrecursion.hoplon.span.call(null,G__165292,G__165293));
})();
var G__165221 = ") (";
var G__165222 = (function (){var G__165294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165295 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165294,G__165295) : tailrecursion.hoplon.span.call(null,G__165294,G__165295));
})();
var G__165223 = " (";
var G__165224 = (function (){var G__165296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165297 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165296,G__165297) : tailrecursion.hoplon.span.call(null,G__165296,G__165297));
})();
var G__165225 = "(";
var G__165226 = (function (){var G__165298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165299 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165298,G__165299) : tailrecursion.hoplon.span.call(null,G__165298,G__165299));
})();
var G__165227 = " ";
var G__165228 = (function (){var G__165300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165301 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165300,G__165301) : tailrecursion.hoplon.span.call(null,G__165300,G__165301));
})();
var G__165229 = " (";
var G__165230 = (function (){var G__165302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165303 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165302,G__165303) : tailrecursion.hoplon.span.call(null,G__165302,G__165303));
})();
var G__165231 = (function (){var G__165304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165305 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165304,G__165305) : tailrecursion.hoplon.span.call(null,G__165304,G__165305));
})();
var G__165232 = " ";
var G__165233 = (function (){var G__165306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165307 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165306,G__165307) : tailrecursion.hoplon.span.call(null,G__165306,G__165307));
})();
var G__165234 = ") ";
var G__165235 = (function (){var G__165308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165309 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165308,G__165309) : tailrecursion.hoplon.span.call(null,G__165308,G__165309));
})();
var G__165236 = ")\n                            (";
var G__165237 = (function (){var G__165310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165311 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165310,G__165311) : tailrecursion.hoplon.span.call(null,G__165310,G__165311));
})();
var G__165238 = " ";
var G__165239 = (function (){var G__165312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165313 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165312,G__165313) : tailrecursion.hoplon.span.call(null,G__165312,G__165313));
})();
var G__165240 = " (";
var G__165241 = (function (){var G__165314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165315 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165314,G__165315) : tailrecursion.hoplon.span.call(null,G__165314,G__165315));
})();
var G__165242 = (function (){var G__165316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165317 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165316,G__165317) : tailrecursion.hoplon.span.call(null,G__165316,G__165317));
})();
var G__165243 = " ";
var G__165244 = (function (){var G__165318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165319 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165318,G__165319) : tailrecursion.hoplon.span.call(null,G__165318,G__165319));
})();
var G__165245 = ") ";
var G__165246 = (function (){var G__165320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165321 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165320,G__165321) : tailrecursion.hoplon.span.call(null,G__165320,G__165321));
})();
var G__165247 = "))\n                         ";
var G__165248 = (function (){var G__165322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165323 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165322,G__165323) : tailrecursion.hoplon.span.call(null,G__165322,G__165323));
})();
var G__165249 = ")\n        ";
var G__165250 = (function (){var G__165324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165325 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165324,G__165325) : tailrecursion.hoplon.span.call(null,G__165324,G__165325));
})();
var G__165251 = " (";
var G__165252 = (function (){var G__165326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165327 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165326,G__165327) : tailrecursion.hoplon.span.call(null,G__165326,G__165327));
})();
var G__165253 = " (";
var G__165254 = (function (){var G__165328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165329 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165328,G__165329) : tailrecursion.hoplon.span.call(null,G__165328,G__165329));
})();
var G__165255 = (function (){var G__165330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165331 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165330,G__165331) : tailrecursion.hoplon.span.call(null,G__165330,G__165331));
})();
var G__165256 = " (";
var G__165257 = (function (){var G__165332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165333 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165332,G__165333) : tailrecursion.hoplon.span.call(null,G__165332,G__165333));
})();
var G__165258 = " ";
var G__165259 = (function (){var G__165334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165335 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165334,G__165335) : tailrecursion.hoplon.span.call(null,G__165334,G__165335));
})();
var G__165260 = " (";
var G__165261 = (function (){var G__165336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165337 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165336,G__165337) : tailrecursion.hoplon.span.call(null,G__165336,G__165337));
})();
var G__165262 = (function (){var G__165338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165339 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165338,G__165339) : tailrecursion.hoplon.span.call(null,G__165338,G__165339));
})();
var G__165263 = " ";
var G__165264 = (function (){var G__165340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165341 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165340,G__165341) : tailrecursion.hoplon.span.call(null,G__165340,G__165341));
})();
var G__165265 = ") ";
var G__165266 = (function (){var G__165342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165343 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165342,G__165343) : tailrecursion.hoplon.span.call(null,G__165342,G__165343));
})();
var G__165267 = ")) ";
var G__165268 = (function (){var G__165344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165345 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165344,G__165345) : tailrecursion.hoplon.span.call(null,G__165344,G__165345));
})();
var G__165269 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72(G__165198,G__165199,G__165200,G__165201,G__165202,G__165203,G__165204,G__165205,G__165206,G__165207,G__165208,G__165209,G__165210,G__165211,G__165212,G__165213,G__165214,G__165215,G__165216,G__165217,G__165218,G__165219,G__165220,G__165221,G__165222,G__165223,G__165224,G__165225,G__165226,G__165227,G__165228,G__165229,G__165230,G__165231,G__165232,G__165233,G__165234,G__165235,G__165236,G__165237,G__165238,G__165239,G__165240,G__165241,G__165242,G__165243,G__165244,G__165245,G__165246,G__165247,G__165248,G__165249,G__165250,G__165251,G__165252,G__165253,G__165254,G__165255,G__165256,G__165257,G__165258,G__165259,G__165260,G__165261,G__165262,G__165263,G__165264,G__165265,G__165266,G__165267,G__165268,G__165269) : tailrecursion.hoplon.pre.call(null,G__165198,G__165199,G__165200,G__165201,G__165202,G__165203,G__165204,G__165205,G__165206,G__165207,G__165208,G__165209,G__165210,G__165211,G__165212,G__165213,G__165214,G__165215,G__165216,G__165217,G__165218,G__165219,G__165220,G__165221,G__165222,G__165223,G__165224,G__165225,G__165226,G__165227,G__165228,G__165229,G__165230,G__165231,G__165232,G__165233,G__165234,G__165235,G__165236,G__165237,G__165238,G__165239,G__165240,G__165241,G__165242,G__165243,G__165244,G__165245,G__165246,G__165247,G__165248,G__165249,G__165250,G__165251,G__165252,G__165253,G__165254,G__165255,G__165256,G__165257,G__165258,G__165259,G__165260,G__165261,G__165262,G__165263,G__165264,G__165265,G__165266,G__165267,G__165268,G__165269));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__165196,G__165197) : tailrecursion.hoplon.div.call(null,G__165196,G__165197));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__165195) : tailrecursion.hoplon.div.call(null,G__165195));
})(),(function (){var G__165346 = cljs.core.PersistentArrayMap.EMPTY;
var G__165347 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__165349 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I don",(function (){var G__165350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165351 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165350,G__165351) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165350,G__165351));
})(),"t see what difference that could make,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__165348,G__165349) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__165348,G__165349));
})()," says Louis. ",(function (){var G__165352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__165353 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I do."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__165352,G__165353) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__165352,G__165353));
})()," says Eva. ",(function (){var G__165354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__165355 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By writing the procedure like that, you have transformed the \\(\\Theta(\\log n)\\) process into a \\(\\Theta(n)\\) process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__165354,G__165355) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__165354,G__165355));
})()," Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165346,G__165347) : tailrecursion.hoplon.markdown.para_node.call(null,G__165346,G__165347));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165182;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165181;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165180;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165179;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_165356 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165357 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165358 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165359 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165360 = cljs.core.PersistentArrayMap.EMPTY;
var G__165361 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Remember the applicative order evaluation model. Every time the exponent is even, ",(function (){var G__165362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"(expmod base (/ exp 2) m)"], null);
var G__165363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165362,G__165363) : tailrecursion.hoplon.markdown.code_node.call(null,G__165362,G__165363));
})()," is computed twice, causing two branches of the same computation to occur."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165360,G__165361) : tailrecursion.hoplon.markdown.para_node.call(null,G__165360,G__165361));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165359;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165358;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165357;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165356;
}})()], 0))], 0)),"",content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(27)], null),(function (){var _STAR_references_STAR_165364 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165365 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165366 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165367 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165368 = cljs.core.PersistentArrayMap.EMPTY;
var G__165369 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that these Carmichael numbers: 561, 1105, 1729, 2465, 2821, 6601, really do fool the Fermat test. That is, write a procedure that takes an integer \\(n\\) and tests whether an is congruent to \\(a\\) modulo \\(n\\) for every \\(a<n\\), and try your procedure on the given Carmichael numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165368,G__165369) : tailrecursion.hoplon.markdown.para_node.call(null,G__165368,G__165369));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165367;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165366;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165365;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165364;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_165370 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165371 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165372 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165373 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165374 = (function (){var G__165375 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__165376 = (function (){var G__165377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__165378 = "(";
var G__165379 = (function (){var G__165420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165421 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165420,G__165421) : tailrecursion.hoplon.span.call(null,G__165420,G__165421));
})();
var G__165380 = (function (){var G__165422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165423 = "carmichael-check";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165422,G__165423) : tailrecursion.hoplon.span.call(null,G__165422,G__165423));
})();
var G__165381 = " [";
var G__165382 = (function (){var G__165424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165425 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165424,G__165425) : tailrecursion.hoplon.span.call(null,G__165424,G__165425));
})();
var G__165383 = "]\n  (";
var G__165384 = (function (){var G__165426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165427 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165426,G__165427) : tailrecursion.hoplon.span.call(null,G__165426,G__165427));
})();
var G__165385 = "[";
var G__165386 = (function (){var G__165428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165429 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165428,G__165429) : tailrecursion.hoplon.span.call(null,G__165428,G__165429));
})();
var G__165387 = " ";
var G__165388 = (function (){var G__165430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165431 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165430,G__165431) : tailrecursion.hoplon.span.call(null,G__165430,G__165431));
})();
var G__165389 = "]\n    (";
var G__165390 = (function (){var G__165432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165433 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165432,G__165433) : tailrecursion.hoplon.span.call(null,G__165432,G__165433));
})();
var G__165391 = "(";
var G__165392 = (function (){var G__165434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165435 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165434,G__165435) : tailrecursion.hoplon.span.call(null,G__165434,G__165435));
})();
var G__165393 = (function (){var G__165436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165437 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165436,G__165437) : tailrecursion.hoplon.span.call(null,G__165436,G__165437));
})();
var G__165394 = " ";
var G__165395 = (function (){var G__165438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165439 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165438,G__165439) : tailrecursion.hoplon.span.call(null,G__165438,G__165439));
})();
var G__165396 = ") ";
var G__165397 = (function (){var G__165440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165441 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165440,G__165441) : tailrecursion.hoplon.span.call(null,G__165440,G__165441));
})();
var G__165398 = "\n          (";
var G__165399 = (function (){var G__165442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165443 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165442,G__165443) : tailrecursion.hoplon.span.call(null,G__165442,G__165443));
})();
var G__165400 = "(";
var G__165401 = (function (){var G__165444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165445 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165444,G__165445) : tailrecursion.hoplon.span.call(null,G__165444,G__165445));
})();
var G__165402 = " ";
var G__165403 = (function (){var G__165446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165447 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165446,G__165447) : tailrecursion.hoplon.span.call(null,G__165446,G__165447));
})();
var G__165404 = " ";
var G__165405 = (function (){var G__165448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165449 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165448,G__165449) : tailrecursion.hoplon.span.call(null,G__165448,G__165449));
})();
var G__165406 = " ";
var G__165407 = (function (){var G__165450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165451 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165450,G__165451) : tailrecursion.hoplon.span.call(null,G__165450,G__165451));
})();
var G__165408 = ") ";
var G__165409 = (function (){var G__165452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165453 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165452,G__165453) : tailrecursion.hoplon.span.call(null,G__165452,G__165453));
})();
var G__165410 = ") (";
var G__165411 = (function (){var G__165454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165455 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165454,G__165455) : tailrecursion.hoplon.span.call(null,G__165454,G__165455));
})();
var G__165412 = " (";
var G__165413 = (function (){var G__165456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165457 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165456,G__165457) : tailrecursion.hoplon.span.call(null,G__165456,G__165457));
})();
var G__165414 = (function (){var G__165458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165459 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165458,G__165459) : tailrecursion.hoplon.span.call(null,G__165458,G__165459));
})();
var G__165415 = "))\n          ";
var G__165416 = (function (){var G__165460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165461 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165460,G__165461) : tailrecursion.hoplon.span.call(null,G__165460,G__165461));
})();
var G__165417 = " ";
var G__165418 = (function (){var G__165462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165463 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165462,G__165463) : tailrecursion.hoplon.span.call(null,G__165462,G__165463));
})();
var G__165419 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__165377,G__165378,G__165379,G__165380,G__165381,G__165382,G__165383,G__165384,G__165385,G__165386,G__165387,G__165388,G__165389,G__165390,G__165391,G__165392,G__165393,G__165394,G__165395,G__165396,G__165397,G__165398,G__165399,G__165400,G__165401,G__165402,G__165403,G__165404,G__165405,G__165406,G__165407,G__165408,G__165409,G__165410,G__165411,G__165412,G__165413,G__165414,G__165415,G__165416,G__165417,G__165418,G__165419) : tailrecursion.hoplon.pre.call(null,G__165377,G__165378,G__165379,G__165380,G__165381,G__165382,G__165383,G__165384,G__165385,G__165386,G__165387,G__165388,G__165389,G__165390,G__165391,G__165392,G__165393,G__165394,G__165395,G__165396,G__165397,G__165398,G__165399,G__165400,G__165401,G__165402,G__165403,G__165404,G__165405,G__165406,G__165407,G__165408,G__165409,G__165410,G__165411,G__165412,G__165413,G__165414,G__165415,G__165416,G__165417,G__165418,G__165419));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__165375,G__165376) : tailrecursion.hoplon.div.call(null,G__165375,G__165376));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__165374) : tailrecursion.hoplon.div.call(null,G__165374));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165373;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165372;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165371;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165370;
}})()], 0))], 0)),content.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$ch,(1),cljs.core.constant$keyword$number,(28)], null),(function (){var _STAR_references_STAR_165464 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165465 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165466 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165467 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165468 = cljs.core.PersistentArrayMap.EMPTY;
var G__165469 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One variant of the Fermat test that cannot be fooled is called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$chars,"*",cljs.core.constant$keyword$closed,true,cljs.core.constant$keyword$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Miller-Rabin"], null)], 0))," test (Miller 1976; Rabin 1980). This starts from an alternate form of Fermat",(function (){var G__165470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$apostrophe], null);
var G__165471 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__165470,G__165471) : tailrecursion.hoplon.markdown.simple_node.call(null,G__165470,G__165471));
})(),"s Little Theorem, which states that if \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a^{n-1}\\equiv 1\\pmod n\\). To test the primality of a number \\(n\\) by the Miller-Rabin test, we pick a random number \\(a<n\\) and raise \\(a\\) to the \\((n - 1)\\)st power modulo \\(n\\) using the ",(function (){var G__165472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__165473 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165472,G__165473) : tailrecursion.hoplon.markdown.code_node.call(null,G__165472,G__165473));
})()," procedure. However, whenever we perform the squaring step in ",(function (){var G__165474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__165475 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165474,G__165475) : tailrecursion.hoplon.markdown.code_node.call(null,G__165474,G__165475));
})(),", we check to see if we have discovered a ",(function (){var G__165476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$type,cljs.core.constant$keyword$double], null);
var G__165477 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nontrivial square root of 1 modulo \\(n\\),"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__165476,G__165477) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__165476,G__165477));
})()," that is, a number not equal to 1 or \\(n - 1\\) whose square is equal to 1 modulo \\(n\\). It is possible to prove that if such a nontrivial square root of 1 exists, then \\(n\\) is not prime. It is also possible to prove that if \\(n\\) is an odd number that is not prime, then, for at least half the numbers \\(a<n\\), computing \\(a^{n-1}\\) in this way will reveal a nontrivial square root of 1 modulo \\(n\\). (This is why the Miller-Rabin test cannot be fooled.) Modify the ",(function (){var G__165478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__165479 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165478,G__165479) : tailrecursion.hoplon.markdown.code_node.call(null,G__165478,G__165479));
})()," procedure to signal if it discovers a nontrivial square root of 1, and use this to implement the Miller-Rabin test with a procedure analogous to ",(function (){var G__165480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"fermat-test"], null);
var G__165481 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165480,G__165481) : tailrecursion.hoplon.markdown.code_node.call(null,G__165480,G__165481));
})(),". Check your procedure by testing various known primes and non-primes. Hint: One convenient way to make ",(function (){var G__165482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$text,"expmod"], null);
var G__165483 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__165482,G__165483) : tailrecursion.hoplon.markdown.code_node.call(null,G__165482,G__165483));
})()," signal is to have it return 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__165468,G__165469) : tailrecursion.hoplon.markdown.para_node.call(null,G__165468,G__165469));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165467;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165466;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165465;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165464;
}})(),"",content.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_165484 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165485 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_165486 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_165487 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__165488 = (function (){var G__165489 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$class,"highlight",cljs.core.constant$keyword$style,"background: #f8f8f8"], null);
var G__165490 = (function (){var G__165491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"line-height: 125%"], null);
var G__165492 = "(";
var G__165493 = (function (){var G__165537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165538 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165537,G__165538) : tailrecursion.hoplon.span.call(null,G__165537,G__165538));
})();
var G__165494 = (function (){var G__165539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165540 = "miller-rabin-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165539,G__165540) : tailrecursion.hoplon.span.call(null,G__165539,G__165540));
})();
var G__165495 = " [";
var G__165496 = (function (){var G__165541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165542 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165541,G__165542) : tailrecursion.hoplon.span.call(null,G__165541,G__165542));
})();
var G__165497 = "]\n  (";
var G__165498 = (function (){var G__165543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000; font-weight: bold"], null);
var G__165544 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165543,G__165544) : tailrecursion.hoplon.span.call(null,G__165543,G__165544));
})();
var G__165499 = "[";
var G__165500 = (function (){var G__165545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165546 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165545,G__165546) : tailrecursion.hoplon.span.call(null,G__165545,G__165546));
})();
var G__165501 = " ";
var G__165502 = (function (){var G__165547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165548 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165547,G__165548) : tailrecursion.hoplon.span.call(null,G__165547,G__165548));
})();
var G__165503 = "]\n    (";
var G__165504 = (function (){var G__165549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165550 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165549,G__165550) : tailrecursion.hoplon.span.call(null,G__165549,G__165550));
})();
var G__165505 = "(";
var G__165506 = (function (){var G__165551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165552 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165551,G__165552) : tailrecursion.hoplon.span.call(null,G__165551,G__165552));
})();
var G__165507 = (function (){var G__165553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165554 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165553,G__165554) : tailrecursion.hoplon.span.call(null,G__165553,G__165554));
})();
var G__165508 = " (";
var G__165509 = (function (){var G__165555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165556 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165555,G__165556) : tailrecursion.hoplon.span.call(null,G__165555,G__165556));
})();
var G__165510 = (function (){var G__165557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165558 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165557,G__165558) : tailrecursion.hoplon.span.call(null,G__165557,G__165558));
})();
var G__165511 = " ";
var G__165512 = (function (){var G__165559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165560 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165559,G__165560) : tailrecursion.hoplon.span.call(null,G__165559,G__165560));
})();
var G__165513 = "))            ";
var G__165514 = (function (){var G__165561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165562 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165561,G__165562) : tailrecursion.hoplon.span.call(null,G__165561,G__165562));
})();
var G__165515 = "\n          (";
var G__165516 = (function (){var G__165563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165564 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165563,G__165564) : tailrecursion.hoplon.span.call(null,G__165563,G__165564));
})();
var G__165517 = "(";
var G__165518 = (function (){var G__165565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165566 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165565,G__165566) : tailrecursion.hoplon.span.call(null,G__165565,G__165566));
})();
var G__165519 = " (";
var G__165520 = (function (){var G__165567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165568 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165567,G__165568) : tailrecursion.hoplon.span.call(null,G__165567,G__165568));
})();
var G__165521 = " ";
var G__165522 = (function (){var G__165569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165570 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165569,G__165570) : tailrecursion.hoplon.span.call(null,G__165569,G__165570));
})();
var G__165523 = ") ";
var G__165524 = (function (){var G__165571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165572 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165571,G__165572) : tailrecursion.hoplon.span.call(null,G__165571,G__165572));
})();
var G__165525 = ") ";
var G__165526 = (function (){var G__165573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #666666"], null);
var G__165574 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165573,G__165574) : tailrecursion.hoplon.span.call(null,G__165573,G__165574));
})();
var G__165527 = ") ";
var G__165528 = (function (){var G__165575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165576 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165575,G__165576) : tailrecursion.hoplon.span.call(null,G__165575,G__165576));
})();
var G__165529 = "\n          ";
var G__165530 = (function (){var G__165577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165578 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165577,G__165578) : tailrecursion.hoplon.span.call(null,G__165577,G__165578));
})();
var G__165531 = "                    (";
var G__165532 = (function (){var G__165579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #0000FF"], null);
var G__165580 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165579,G__165580) : tailrecursion.hoplon.span.call(null,G__165579,G__165580));
})();
var G__165533 = " (";
var G__165534 = (function (){var G__165581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #008000"], null);
var G__165582 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165581,G__165582) : tailrecursion.hoplon.span.call(null,G__165581,G__165582));
})();
var G__165535 = (function (){var G__165583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$style,"color: #19177C"], null);
var G__165584 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__165583,G__165584) : tailrecursion.hoplon.span.call(null,G__165583,G__165584));
})();
var G__165536 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__165491,G__165492,G__165493,G__165494,G__165495,G__165496,G__165497,G__165498,G__165499,G__165500,G__165501,G__165502,G__165503,G__165504,G__165505,G__165506,G__165507,G__165508,G__165509,G__165510,G__165511,G__165512,G__165513,G__165514,G__165515,G__165516,G__165517,G__165518,G__165519,G__165520,G__165521,G__165522,G__165523,G__165524,G__165525,G__165526,G__165527,G__165528,G__165529,G__165530,G__165531,G__165532,G__165533,G__165534,G__165535,G__165536) : tailrecursion.hoplon.pre.call(null,G__165491,G__165492,G__165493,G__165494,G__165495,G__165496,G__165497,G__165498,G__165499,G__165500,G__165501,G__165502,G__165503,G__165504,G__165505,G__165506,G__165507,G__165508,G__165509,G__165510,G__165511,G__165512,G__165513,G__165514,G__165515,G__165516,G__165517,G__165518,G__165519,G__165520,G__165521,G__165522,G__165523,G__165524,G__165525,G__165526,G__165527,G__165528,G__165529,G__165530,G__165531,G__165532,G__165533,G__165534,G__165535,G__165536));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__165489,G__165490) : tailrecursion.hoplon.div.call(null,G__165489,G__165490));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__165488) : tailrecursion.hoplon.div.call(null,G__165488));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165487;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165486;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_165485;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_165484;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31(G__157994,G__157995,G__157996,G__157997,G__157998,G__157999,G__158000,G__158001,G__158002,G__158003,G__158004,G__158005,G__158006,G__158007,G__158008,G__158009,G__158010,G__158011,G__158012,G__158013,G__158014,G__158015,G__158016,G__158017,G__158018,G__158019,G__158020,G__158021,G__158022,G__158023,G__158024) : tailrecursion.hoplon.div.call(null,G__157994,G__157995,G__157996,G__157997,G__157998,G__157999,G__158000,G__158001,G__158002,G__158003,G__158004,G__158005,G__158006,G__158007,G__158008,G__158009,G__158010,G__158011,G__158012,G__158013,G__158014,G__158015,G__158016,G__158017,G__158018,G__158019,G__158020,G__158021,G__158022,G__158023,G__158024));
};
var content$sicp$texts$ch1sect2$content = function (var_args){
var args__10403__auto__ = null;
if (arguments.length > 0) {
var G__165585__i = 0, G__165585__a = new Array(arguments.length -  0);
while (G__165585__i < G__165585__a.length) {G__165585__a[G__165585__i] = arguments[G__165585__i + 0]; ++G__165585__i;}
  args__10403__auto__ = new cljs.core.IndexedSeq(G__165585__a,0);
} 
return content$sicp$texts$ch1sect2$content__delegate.call(this,args__10403__auto__);};
content$sicp$texts$ch1sect2$content.cljs$lang$maxFixedArity = 0;
content$sicp$texts$ch1sect2$content.cljs$lang$applyTo = (function (arglist__165586){
var args__10403__auto__ = cljs.core.seq(arglist__165586);
return content$sicp$texts$ch1sect2$content__delegate(args__10403__auto__);
});
content$sicp$texts$ch1sect2$content.cljs$core$IFn$_invoke$arity$variadic = content$sicp$texts$ch1sect2$content__delegate;
return content$sicp$texts$ch1sect2$content;
})()
;

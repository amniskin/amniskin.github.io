// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect3');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect3.content = (function() { 
var book$sicp$texts$ch2sect3$content__delegate = function (args__8262__auto__){
var vec__320048 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__320048,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__320048,(1),null);
var G__320049 = cljs.core.PersistentArrayMap.EMPTY;
var G__320050 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Symbolic Data"], null),(function (){var _STAR_references_STAR_320093 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_320094 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_320095 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_320096 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__320097 = cljs.core.PersistentArrayMap.EMPTY;
var G__320098 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["All the compound data objects we have used so far were constructed ultimately from numbers. In this section we extend the representational capability of our language by introducing the ability to work with arbitrary symbols as data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320097,G__320098) : tailrecursion.hoplon.markdown.para_node.call(null,G__320097,G__320098));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_320096;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_320095;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_320094;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_320093;
}})()], 0));
var G__320051 = "";
var G__320052 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Quotation"], null),(function (){var _STAR_references_STAR_320099 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_320100 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_320101 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_320102 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__320103 = cljs.core.PersistentArrayMap.EMPTY;
var G__320104 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we can form compound data using symbols, we can have lists such as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320103,G__320104) : tailrecursion.hoplon.markdown.para_node.call(null,G__320103,G__320104));
})(),(function (){var G__320177 = (function (){var G__320178 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320179 = (function (){var G__320180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320181 = "(";
var G__320182 = (function (){var G__320216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320217 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320216,G__320217) : tailrecursion.hoplon.span.call(null,G__320216,G__320217));
})();
var G__320183 = " ";
var G__320184 = (function (){var G__320218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320219 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320218,G__320219) : tailrecursion.hoplon.span.call(null,G__320218,G__320219));
})();
var G__320185 = " ";
var G__320186 = (function (){var G__320220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320221 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320220,G__320221) : tailrecursion.hoplon.span.call(null,G__320220,G__320221));
})();
var G__320187 = " ";
var G__320188 = (function (){var G__320222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320223 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320222,G__320223) : tailrecursion.hoplon.span.call(null,G__320222,G__320223));
})();
var G__320189 = ")\n(";
var G__320190 = (function (){var G__320224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320225 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320224,G__320225) : tailrecursion.hoplon.span.call(null,G__320224,G__320225));
})();
var G__320191 = " ";
var G__320192 = (function (){var G__320226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320227 = "45";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320226,G__320227) : tailrecursion.hoplon.span.call(null,G__320226,G__320227));
})();
var G__320193 = " ";
var G__320194 = (function (){var G__320228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320229 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320228,G__320229) : tailrecursion.hoplon.span.call(null,G__320228,G__320229));
})();
var G__320195 = ")\n((";
var G__320196 = (function (){var G__320230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320231 = "Norah";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320230,G__320231) : tailrecursion.hoplon.span.call(null,G__320230,G__320231));
})();
var G__320197 = " ";
var G__320198 = (function (){var G__320232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320233 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320232,G__320233) : tailrecursion.hoplon.span.call(null,G__320232,G__320233));
})();
var G__320199 = ") (";
var G__320200 = (function (){var G__320234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320235 = "Molly";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320234,G__320235) : tailrecursion.hoplon.span.call(null,G__320234,G__320235));
})();
var G__320201 = " ";
var G__320202 = (function (){var G__320236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320237 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320236,G__320237) : tailrecursion.hoplon.span.call(null,G__320236,G__320237));
})();
var G__320203 = ") (";
var G__320204 = (function (){var G__320238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320239 = "Anna";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320238,G__320239) : tailrecursion.hoplon.span.call(null,G__320238,G__320239));
})();
var G__320205 = " ";
var G__320206 = (function (){var G__320240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320241 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320240,G__320241) : tailrecursion.hoplon.span.call(null,G__320240,G__320241));
})();
var G__320207 = ") (";
var G__320208 = (function (){var G__320242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320243 = "Lauren";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320242,G__320243) : tailrecursion.hoplon.span.call(null,G__320242,G__320243));
})();
var G__320209 = " ";
var G__320210 = (function (){var G__320244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320245 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320244,G__320245) : tailrecursion.hoplon.span.call(null,G__320244,G__320245));
})();
var G__320211 = ") (";
var G__320212 = (function (){var G__320246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320247 = "Charlotte";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320246,G__320247) : tailrecursion.hoplon.span.call(null,G__320246,G__320247));
})();
var G__320213 = " ";
var G__320214 = (function (){var G__320248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320249 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320248,G__320249) : tailrecursion.hoplon.span.call(null,G__320248,G__320249));
})();
var G__320215 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__320180,G__320181,G__320182,G__320183,G__320184,G__320185,G__320186,G__320187,G__320188,G__320189,G__320190,G__320191,G__320192,G__320193,G__320194,G__320195,G__320196,G__320197,G__320198,G__320199,G__320200,G__320201,G__320202,G__320203,G__320204,G__320205,G__320206,G__320207,G__320208,G__320209,G__320210,G__320211,G__320212,G__320213,G__320214,G__320215) : tailrecursion.hoplon.pre.call(null,G__320180,G__320181,G__320182,G__320183,G__320184,G__320185,G__320186,G__320187,G__320188,G__320189,G__320190,G__320191,G__320192,G__320193,G__320194,G__320195,G__320196,G__320197,G__320198,G__320199,G__320200,G__320201,G__320202,G__320203,G__320204,G__320205,G__320206,G__320207,G__320208,G__320209,G__320210,G__320211,G__320212,G__320213,G__320214,G__320215));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320178,G__320179) : tailrecursion.hoplon.div.call(null,G__320178,G__320179));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320177) : tailrecursion.hoplon.div.call(null,G__320177));
})(),(function (){var G__320250 = cljs.core.PersistentArrayMap.EMPTY;
var G__320251 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lists containing symbols can look just like the exressions of our language:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320250,G__320251) : tailrecursion.hoplon.markdown.para_node.call(null,G__320250,G__320251));
})(),(function (){var G__320334 = (function (){var G__320335 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320336 = (function (){var G__320337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320338 = "(";
var G__320339 = (function (){var G__320375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320376 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320375,G__320376) : tailrecursion.hoplon.span.call(null,G__320375,G__320376));
})();
var G__320340 = "(";
var G__320341 = (function (){var G__320377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320378 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320377,G__320378) : tailrecursion.hoplon.span.call(null,G__320377,G__320378));
})();
var G__320342 = (function (){var G__320379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320380 = "23";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320379,G__320380) : tailrecursion.hoplon.span.call(null,G__320379,G__320380));
})();
var G__320343 = " ";
var G__320344 = (function (){var G__320381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320382 = "45";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320381,G__320382) : tailrecursion.hoplon.span.call(null,G__320381,G__320382));
})();
var G__320345 = ") (";
var G__320346 = (function (){var G__320383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320384 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320383,G__320384) : tailrecursion.hoplon.span.call(null,G__320383,G__320384));
})();
var G__320347 = (function (){var G__320385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320386 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320385,G__320386) : tailrecursion.hoplon.span.call(null,G__320385,G__320386));
})();
var G__320348 = " ";
var G__320349 = (function (){var G__320387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320388 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320387,G__320388) : tailrecursion.hoplon.span.call(null,G__320387,G__320388));
})();
var G__320350 = "))\n(";
var G__320351 = (function (){var G__320389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320390 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320389,G__320390) : tailrecursion.hoplon.span.call(null,G__320389,G__320390));
})();
var G__320352 = (function (){var G__320391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320392 = "fact";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320391,G__320392) : tailrecursion.hoplon.span.call(null,G__320391,G__320392));
})();
var G__320353 = " [";
var G__320354 = (function (){var G__320393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320394 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320393,G__320394) : tailrecursion.hoplon.span.call(null,G__320393,G__320394));
})();
var G__320355 = "] (";
var G__320356 = (function (){var G__320395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320396 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320395,G__320396) : tailrecursion.hoplon.span.call(null,G__320395,G__320396));
})();
var G__320357 = "(";
var G__320358 = (function (){var G__320397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320398 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320397,G__320398) : tailrecursion.hoplon.span.call(null,G__320397,G__320398));
})();
var G__320359 = (function (){var G__320399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320400 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320399,G__320400) : tailrecursion.hoplon.span.call(null,G__320399,G__320400));
})();
var G__320360 = " ";
var G__320361 = (function (){var G__320401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320402 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320401,G__320402) : tailrecursion.hoplon.span.call(null,G__320401,G__320402));
})();
var G__320362 = ") ";
var G__320363 = (function (){var G__320403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320404 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320403,G__320404) : tailrecursion.hoplon.span.call(null,G__320403,G__320404));
})();
var G__320364 = " (";
var G__320365 = (function (){var G__320405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320406 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320405,G__320406) : tailrecursion.hoplon.span.call(null,G__320405,G__320406));
})();
var G__320366 = (function (){var G__320407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320408 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320407,G__320408) : tailrecursion.hoplon.span.call(null,G__320407,G__320408));
})();
var G__320367 = " (";
var G__320368 = (function (){var G__320409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320410 = "fact";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320409,G__320410) : tailrecursion.hoplon.span.call(null,G__320409,G__320410));
})();
var G__320369 = " (";
var G__320370 = (function (){var G__320411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320412 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320411,G__320412) : tailrecursion.hoplon.span.call(null,G__320411,G__320412));
})();
var G__320371 = (function (){var G__320413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320414 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320413,G__320414) : tailrecursion.hoplon.span.call(null,G__320413,G__320414));
})();
var G__320372 = " ";
var G__320373 = (function (){var G__320415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320416 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320415,G__320416) : tailrecursion.hoplon.span.call(null,G__320415,G__320416));
})();
var G__320374 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__320337,G__320338,G__320339,G__320340,G__320341,G__320342,G__320343,G__320344,G__320345,G__320346,G__320347,G__320348,G__320349,G__320350,G__320351,G__320352,G__320353,G__320354,G__320355,G__320356,G__320357,G__320358,G__320359,G__320360,G__320361,G__320362,G__320363,G__320364,G__320365,G__320366,G__320367,G__320368,G__320369,G__320370,G__320371,G__320372,G__320373,G__320374) : tailrecursion.hoplon.pre.call(null,G__320337,G__320338,G__320339,G__320340,G__320341,G__320342,G__320343,G__320344,G__320345,G__320346,G__320347,G__320348,G__320349,G__320350,G__320351,G__320352,G__320353,G__320354,G__320355,G__320356,G__320357,G__320358,G__320359,G__320360,G__320361,G__320362,G__320363,G__320364,G__320365,G__320366,G__320367,G__320368,G__320369,G__320370,G__320371,G__320372,G__320373,G__320374));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320335,G__320336) : tailrecursion.hoplon.div.call(null,G__320335,G__320336));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320334) : tailrecursion.hoplon.div.call(null,G__320334));
})(),(function (){var G__320417 = cljs.core.PersistentArrayMap.EMPTY;
var G__320418 = new cljs.core.PersistentVector(null, 28, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to manipulate symbols we need a new element in our language: the ability to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quote"], null)], 0))," a data object. Suppose we want to construct the list ",(function (){var G__320419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(a b)"], null);
var G__320420 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320419,G__320420) : tailrecursion.hoplon.markdown.code_node.call(null,G__320419,G__320420));
})(),". We can",(function (){var G__320421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320422 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320421,G__320422) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320421,G__320422));
})(),"t accomplish this with ",(function (){var G__320423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list a b)"], null);
var G__320424 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320423,G__320424) : tailrecursion.hoplon.markdown.code_node.call(null,G__320423,G__320424));
})(),", because this expression constructs a list of the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["values"], null)], 0))," of ",(function (){var G__320425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__320426 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320425,G__320426) : tailrecursion.hoplon.markdown.code_node.call(null,G__320425,G__320426));
})()," and ",(function (){var G__320427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__320428 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320427,G__320428) : tailrecursion.hoplon.markdown.code_node.call(null,G__320427,G__320428));
})()," rather than the symbols themselves. This issue is well known in the context of natural languages, where words and sentences may be regarded either as semantic entities or as character strings (syntactic entities). The common practice in natural languages is to use quotation marks to indicate that a word or a sentence is to be treated literally as a string of characters. For instance, the first letter of ",(function (){var G__320429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320430 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320429,G__320430) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320429,G__320430));
})()," is clearly a ",(function (){var G__320431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320432 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["J."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320431,G__320432) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320431,G__320432));
})()," If we tell somebody, ",(function (){var G__320433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320434 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["say your name aloud,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320433,G__320434) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320433,G__320434));
})()," we expect to hear that person",(function (){var G__320435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320436 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320435,G__320436) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320435,G__320436));
})(),"s name. However, if we tell somebody ",(function (){var G__320437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320438 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["say 'your name' aloud,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320437,G__320438) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320437,G__320438));
})()," we expect to hear the words ",(function (){var G__320439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320440 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["your name."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320439,G__320440) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320439,G__320440));
})()," Note that we are forced to nest quotation marks to describe what somebody else might say.",(function (){var G__320441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320442 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Allowing quotation in a language wreaks havoc with the ability to reason about the language in simple terms, because it destroys the notion that equals can be substituted for equals. For example, three is one plus two, but the word ",(function (){var G__320443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320444 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["three"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320443,G__320444) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320443,G__320444));
})()," is not the phrase ",(function (){var G__320445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320446 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["one plus two."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320445,G__320446) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320445,G__320446));
})()," Quotation is powerful because it gives us a way to build expressions that manipulate other expressions (as we will see when we write an interpreter in chapter 4). But allowing statements in a language that talk about other statements in that language makes it very difficult to maintain any coherent principle of what ",(function (){var G__320447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320448 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equals can be substituted for equals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320447,G__320448) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320447,G__320448));
})()," should mean. For example, if we know that the evening star is the morning star, then from the statement ",(function (){var G__320449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320450 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the evening star is Venus"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320449,G__320450) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320449,G__320450));
})()," we can deduce ",(function (){var G__320451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320452 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the morning star is Venus."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320451,G__320452) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320451,G__320452));
})()," However, given that ",(function (){var G__320453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320454 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John knows that the evening star is Venus"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320453,G__320454) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320453,G__320454));
})()," we cannot infer that ",(function (){var G__320455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320456 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John knows that the morning star is Venus."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320455,G__320456) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320455,G__320456));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320441,G__320442) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320441,G__320442));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320417,G__320418) : tailrecursion.hoplon.markdown.para_node.call(null,G__320417,G__320418));
})(),(function (){var G__320457 = cljs.core.PersistentArrayMap.EMPTY;
var G__320458 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["w this same practice to identify lists and symbols that are to be treated as data objects rather than as expressions to be evaluated. However, our format for quoting differs from that of natural languages in that we place a quotation mark (traditionally, the single quote symbol ",(function (){var G__320459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320460 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320459,G__320460) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320459,G__320460));
})(),") only at the beginning of the object to be quoted. We can get away with this in Scheme syntax because we rely on blanks and parentheses to delimit objects. Thus, the meaning of the single quote character is to quote the next object.",(function (){var G__320461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320462 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The single quote is different from the double quote we have been using to enclose character strings to be printed. Whereas the single quote can be used to denote lists or symbols, the double quote is used only with character strings. In this book, the only use for character strings is as items to be printed."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320461,G__320462) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320461,G__320462));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320457,G__320458) : tailrecursion.hoplon.markdown.para_node.call(null,G__320457,G__320458));
})(),(function (){var G__320463 = cljs.core.PersistentArrayMap.EMPTY;
var G__320464 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can distinguish between simbols and their values:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320463,G__320464) : tailrecursion.hoplon.markdown.para_node.call(null,G__320463,G__320464));
})(),(function (){var G__320560 = (function (){var G__320561 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320562 = (function (){var G__320563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320564 = "(";
var G__320565 = (function (){var G__320608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320609 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320608,G__320609) : tailrecursion.hoplon.span.call(null,G__320608,G__320609));
})();
var G__320566 = (function (){var G__320610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320611 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320610,G__320611) : tailrecursion.hoplon.span.call(null,G__320610,G__320611));
})();
var G__320567 = " ";
var G__320568 = (function (){var G__320612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320613 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320612,G__320613) : tailrecursion.hoplon.span.call(null,G__320612,G__320613));
})();
var G__320569 = ")\n\n(";
var G__320570 = (function (){var G__320614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320615 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320614,G__320615) : tailrecursion.hoplon.span.call(null,G__320614,G__320615));
})();
var G__320571 = (function (){var G__320616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320617 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320616,G__320617) : tailrecursion.hoplon.span.call(null,G__320616,G__320617));
})();
var G__320572 = " ";
var G__320573 = (function (){var G__320618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320619 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320618,G__320619) : tailrecursion.hoplon.span.call(null,G__320618,G__320619));
})();
var G__320574 = ")\n\n(";
var G__320575 = (function (){var G__320620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320621 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320620,G__320621) : tailrecursion.hoplon.span.call(null,G__320620,G__320621));
})();
var G__320576 = (function (){var G__320622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320623 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320622,G__320623) : tailrecursion.hoplon.span.call(null,G__320622,G__320623));
})();
var G__320577 = " ";
var G__320578 = (function (){var G__320624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320625 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320624,G__320625) : tailrecursion.hoplon.span.call(null,G__320624,G__320625));
})();
var G__320579 = ")\n";
var G__320580 = (function (){var G__320626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320627 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320626,G__320627) : tailrecursion.hoplon.span.call(null,G__320626,G__320627));
})();
var G__320581 = "(";
var G__320582 = (function (){var G__320628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320629 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320628,G__320629) : tailrecursion.hoplon.span.call(null,G__320628,G__320629));
})();
var G__320583 = " ";
var G__320584 = (function (){var G__320630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320631 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320630,G__320631) : tailrecursion.hoplon.span.call(null,G__320630,G__320631));
})();
var G__320585 = ")\n\n(";
var G__320586 = (function (){var G__320632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320633 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320632,G__320633) : tailrecursion.hoplon.span.call(null,G__320632,G__320633));
})();
var G__320587 = (function (){var G__320634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320635 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320634,G__320635) : tailrecursion.hoplon.span.call(null,G__320634,G__320635));
})();
var G__320588 = " ";
var G__320589 = (function (){var G__320636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320637 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320636,G__320637) : tailrecursion.hoplon.span.call(null,G__320636,G__320637));
})();
var G__320590 = ")\n";
var G__320591 = (function (){var G__320638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320639 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320638,G__320639) : tailrecursion.hoplon.span.call(null,G__320638,G__320639));
})();
var G__320592 = "(";
var G__320593 = (function (){var G__320640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320641 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320640,G__320641) : tailrecursion.hoplon.span.call(null,G__320640,G__320641));
})();
var G__320594 = " ";
var G__320595 = (function (){var G__320642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320643 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320642,G__320643) : tailrecursion.hoplon.span.call(null,G__320642,G__320643));
})();
var G__320596 = ")\n\n(";
var G__320597 = (function (){var G__320644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320645 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320644,G__320645) : tailrecursion.hoplon.span.call(null,G__320644,G__320645));
})();
var G__320598 = (function (){var G__320646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320647 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320646,G__320647) : tailrecursion.hoplon.span.call(null,G__320646,G__320647));
})();
var G__320599 = " ";
var G__320600 = (function (){var G__320648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320649 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320648,G__320649) : tailrecursion.hoplon.span.call(null,G__320648,G__320649));
})();
var G__320601 = ")\n";
var G__320602 = (function (){var G__320650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320651 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320650,G__320651) : tailrecursion.hoplon.span.call(null,G__320650,G__320651));
})();
var G__320603 = "(";
var G__320604 = (function (){var G__320652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320653 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320652,G__320653) : tailrecursion.hoplon.span.call(null,G__320652,G__320653));
})();
var G__320605 = " ";
var G__320606 = (function (){var G__320654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320655 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320654,G__320655) : tailrecursion.hoplon.span.call(null,G__320654,G__320655));
})();
var G__320607 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__320563,G__320564,G__320565,G__320566,G__320567,G__320568,G__320569,G__320570,G__320571,G__320572,G__320573,G__320574,G__320575,G__320576,G__320577,G__320578,G__320579,G__320580,G__320581,G__320582,G__320583,G__320584,G__320585,G__320586,G__320587,G__320588,G__320589,G__320590,G__320591,G__320592,G__320593,G__320594,G__320595,G__320596,G__320597,G__320598,G__320599,G__320600,G__320601,G__320602,G__320603,G__320604,G__320605,G__320606,G__320607) : tailrecursion.hoplon.pre.call(null,G__320563,G__320564,G__320565,G__320566,G__320567,G__320568,G__320569,G__320570,G__320571,G__320572,G__320573,G__320574,G__320575,G__320576,G__320577,G__320578,G__320579,G__320580,G__320581,G__320582,G__320583,G__320584,G__320585,G__320586,G__320587,G__320588,G__320589,G__320590,G__320591,G__320592,G__320593,G__320594,G__320595,G__320596,G__320597,G__320598,G__320599,G__320600,G__320601,G__320602,G__320603,G__320604,G__320605,G__320606,G__320607));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320561,G__320562) : tailrecursion.hoplon.div.call(null,G__320561,G__320562));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320560) : tailrecursion.hoplon.div.call(null,G__320560));
})(),(function (){var G__320656 = cljs.core.PersistentArrayMap.EMPTY;
var G__320657 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quotation also allows us to type in compound objects, using the conventional printed representation for lists:",(function (){var G__320658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320659 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Strictly, our use of the quotation mark violates the general rule that all compound expressions in our language should be delimited by parentheses and look like lists. We can recover this consistency by introducing a special form quote, which serves the same purpose as the quotation mark. Thus, we would type ",(function (){var G__320660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote a)"], null);
var G__320661 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320660,G__320661) : tailrecursion.hoplon.markdown.code_node.call(null,G__320660,G__320661));
})()," instead of ",(function (){var G__320662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'a"], null);
var G__320663 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320662,G__320663) : tailrecursion.hoplon.markdown.code_node.call(null,G__320662,G__320663));
})(),", and we would type ",(function (){var G__320664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote (a\nb c))"], null);
var G__320665 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320664,G__320665) : tailrecursion.hoplon.markdown.code_node.call(null,G__320664,G__320665));
})()," instead of ",(function (){var G__320666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'(a b c)"], null);
var G__320667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320666,G__320667) : tailrecursion.hoplon.markdown.code_node.call(null,G__320666,G__320667));
})(),". This is precisely how the interpreter works. The quotation mark is just a single-character abbreviation for wrapping the next complete expression with quote to form ",(function (){var G__320668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote\n<expression>)"], null);
var G__320669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320668,G__320669) : tailrecursion.hoplon.markdown.code_node.call(null,G__320668,G__320669));
})(),". This is important because it maintains the principle that any expression seen by the interpreter can be manipulated as a data object. For instance, we could construct the expression ",(function (){var G__320670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first '(a\nb c))"], null);
var G__320671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320670,G__320671) : tailrecursion.hoplon.markdown.code_node.call(null,G__320670,G__320671));
})(),", which is the same as ",(function (){var G__320672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (quote (a b c)))"], null);
var G__320673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320672,G__320673) : tailrecursion.hoplon.markdown.code_node.call(null,G__320672,G__320673));
})(),", by evaluating ",(function (){var G__320674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 'first (list 'quote '(a b c)))"], null);
var G__320675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320674,G__320675) : tailrecursion.hoplon.markdown.code_node.call(null,G__320674,G__320675));
})(),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320658,G__320659) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320658,G__320659));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320656,G__320657) : tailrecursion.hoplon.markdown.para_node.call(null,G__320656,G__320657));
})(),(function (){var G__320738 = (function (){var G__320739 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320740 = (function (){var G__320741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320742 = "(";
var G__320743 = (function (){var G__320771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320772 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320771,G__320772) : tailrecursion.hoplon.span.call(null,G__320771,G__320772));
})();
var G__320744 = (function (){var G__320773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320774 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320773,G__320774) : tailrecursion.hoplon.span.call(null,G__320773,G__320774));
})();
var G__320745 = "(";
var G__320746 = (function (){var G__320775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320776 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320775,G__320776) : tailrecursion.hoplon.span.call(null,G__320775,G__320776));
})();
var G__320747 = " ";
var G__320748 = (function (){var G__320777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320778 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320777,G__320778) : tailrecursion.hoplon.span.call(null,G__320777,G__320778));
})();
var G__320749 = " ";
var G__320750 = (function (){var G__320779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320780 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320779,G__320780) : tailrecursion.hoplon.span.call(null,G__320779,G__320780));
})();
var G__320751 = "))\n";
var G__320752 = (function (){var G__320781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320782 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320781,G__320782) : tailrecursion.hoplon.span.call(null,G__320781,G__320782));
})();
var G__320753 = " ";
var G__320754 = (function (){var G__320783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320784 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320783,G__320784) : tailrecursion.hoplon.span.call(null,G__320783,G__320784));
})();
var G__320755 = "\n\n(";
var G__320756 = (function (){var G__320785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320786 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320785,G__320786) : tailrecursion.hoplon.span.call(null,G__320785,G__320786));
})();
var G__320757 = (function (){var G__320787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320788 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320787,G__320788) : tailrecursion.hoplon.span.call(null,G__320787,G__320788));
})();
var G__320758 = "(";
var G__320759 = (function (){var G__320789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320790 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320789,G__320790) : tailrecursion.hoplon.span.call(null,G__320789,G__320790));
})();
var G__320760 = " ";
var G__320761 = (function (){var G__320791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320792 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320791,G__320792) : tailrecursion.hoplon.span.call(null,G__320791,G__320792));
})();
var G__320762 = " ";
var G__320763 = (function (){var G__320793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320794 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320793,G__320794) : tailrecursion.hoplon.span.call(null,G__320793,G__320794));
})();
var G__320764 = "))\n";
var G__320765 = (function (){var G__320795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320796 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320795,G__320796) : tailrecursion.hoplon.span.call(null,G__320795,G__320796));
})();
var G__320766 = " (";
var G__320767 = (function (){var G__320797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320798 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320797,G__320798) : tailrecursion.hoplon.span.call(null,G__320797,G__320798));
})();
var G__320768 = " ";
var G__320769 = (function (){var G__320799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320800 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320799,G__320800) : tailrecursion.hoplon.span.call(null,G__320799,G__320800));
})();
var G__320770 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__320741,G__320742,G__320743,G__320744,G__320745,G__320746,G__320747,G__320748,G__320749,G__320750,G__320751,G__320752,G__320753,G__320754,G__320755,G__320756,G__320757,G__320758,G__320759,G__320760,G__320761,G__320762,G__320763,G__320764,G__320765,G__320766,G__320767,G__320768,G__320769,G__320770) : tailrecursion.hoplon.pre.call(null,G__320741,G__320742,G__320743,G__320744,G__320745,G__320746,G__320747,G__320748,G__320749,G__320750,G__320751,G__320752,G__320753,G__320754,G__320755,G__320756,G__320757,G__320758,G__320759,G__320760,G__320761,G__320762,G__320763,G__320764,G__320765,G__320766,G__320767,G__320768,G__320769,G__320770));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320739,G__320740) : tailrecursion.hoplon.div.call(null,G__320739,G__320740));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320738) : tailrecursion.hoplon.div.call(null,G__320738));
})(),(function (){var G__320801 = cljs.core.PersistentArrayMap.EMPTY;
var G__320802 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In keeping with this, we can obtain the empty list by evaluating ",(function (){var G__320803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'()"], null);
var G__320804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320803,G__320804) : tailrecursion.hoplon.markdown.code_node.call(null,G__320803,G__320804));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320801,G__320802) : tailrecursion.hoplon.markdown.para_node.call(null,G__320801,G__320802));
})(),(function (){var G__320805 = cljs.core.PersistentArrayMap.EMPTY;
var G__320806 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To test whether two symbols are the same, we can use Clojure",(function (){var G__320807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320807,G__320808) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320807,G__320808));
})(),"s ",(function (){var G__320809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__320810 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320809,G__320810) : tailrecursion.hoplon.markdown.code_node.call(null,G__320809,G__320810));
})()," primative. In Scheme, due to the lack of the protocol abstraction, this primative had to be a new primative (one which they called ",(function (){var G__320811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__320812 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320811,G__320812) : tailrecursion.hoplon.markdown.code_node.call(null,G__320811,G__320812));
})(),").",(function (){var G__320813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320814 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__320815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$nbsp], null);
var G__320816 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320815,G__320816) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320815,G__320816));
})(),"We can consider two symbols to be ",(function (){var G__320817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320818 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the same"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320817,G__320818) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320817,G__320818));
})()," if they consist of the same characters in the same order. Such a definition skirts a deep issue that we are not yet ready to address: the meaning of ",(function (){var G__320819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320820 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sameness"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320819,G__320820) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320819,G__320820));
})()," in a programming language. We will return to this in chapter 3 (section 3.1.3)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320813,G__320814) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320813,G__320814));
})()," Using ",(function (){var G__320821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__320822 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320821,G__320822) : tailrecursion.hoplon.markdown.code_node.call(null,G__320821,G__320822));
})(),", we can implement a useful procedure called ",(function (){var G__320823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__320824 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320823,G__320824) : tailrecursion.hoplon.markdown.code_node.call(null,G__320823,G__320824));
})(),". This takes two arguments, a symbol and a list. If the symbol is not contained in the list (i.e., is not ",(function (){var G__320825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__320826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320825,G__320826) : tailrecursion.hoplon.markdown.code_node.call(null,G__320825,G__320826));
})()," to any item in the list), then ",(function (){var G__320827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__320828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320827,G__320828) : tailrecursion.hoplon.markdown.code_node.call(null,G__320827,G__320828));
})()," returns false. Otherwise it returns the sublist of the list beginning with the first occurrence of the symbol:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320805,G__320806) : tailrecursion.hoplon.markdown.para_node.call(null,G__320805,G__320806));
})(),(function (){var G__320909 = (function (){var G__320910 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320911 = (function (){var G__320912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320913 = "(";
var G__320914 = (function (){var G__320950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320951 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320950,G__320951) : tailrecursion.hoplon.span.call(null,G__320950,G__320951));
})();
var G__320915 = (function (){var G__320952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320953 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320952,G__320953) : tailrecursion.hoplon.span.call(null,G__320952,G__320953));
})();
var G__320916 = " [";
var G__320917 = (function (){var G__320954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320955 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320954,G__320955) : tailrecursion.hoplon.span.call(null,G__320954,G__320955));
})();
var G__320918 = " ";
var G__320919 = (function (){var G__320956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320957 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320956,G__320957) : tailrecursion.hoplon.span.call(null,G__320956,G__320957));
})();
var G__320920 = "]\n  (";
var G__320921 = (function (){var G__320958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320959 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320958,G__320959) : tailrecursion.hoplon.span.call(null,G__320958,G__320959));
})();
var G__320922 = "[";
var G__320923 = (function (){var G__320960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320961 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320960,G__320961) : tailrecursion.hoplon.span.call(null,G__320960,G__320961));
})();
var G__320924 = " ";
var G__320925 = (function (){var G__320962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320963 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320962,G__320963) : tailrecursion.hoplon.span.call(null,G__320962,G__320963));
})();
var G__320926 = "]\n    (";
var G__320927 = (function (){var G__320964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320965 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320964,G__320965) : tailrecursion.hoplon.span.call(null,G__320964,G__320965));
})();
var G__320928 = "(";
var G__320929 = (function (){var G__320966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320967 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320966,G__320967) : tailrecursion.hoplon.span.call(null,G__320966,G__320967));
})();
var G__320930 = " ";
var G__320931 = (function (){var G__320968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320969 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320968,G__320969) : tailrecursion.hoplon.span.call(null,G__320968,G__320969));
})();
var G__320932 = ") ";
var G__320933 = (function (){var G__320970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320971 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320970,G__320971) : tailrecursion.hoplon.span.call(null,G__320970,G__320971));
})();
var G__320934 = "\n          (";
var G__320935 = (function (){var G__320972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320973 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320972,G__320973) : tailrecursion.hoplon.span.call(null,G__320972,G__320973));
})();
var G__320936 = (function (){var G__320974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320975 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320974,G__320975) : tailrecursion.hoplon.span.call(null,G__320974,G__320975));
})();
var G__320937 = " (";
var G__320938 = (function (){var G__320976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320977 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320976,G__320977) : tailrecursion.hoplon.span.call(null,G__320976,G__320977));
})();
var G__320939 = (function (){var G__320978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320979 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320978,G__320979) : tailrecursion.hoplon.span.call(null,G__320978,G__320979));
})();
var G__320940 = ")) ";
var G__320941 = (function (){var G__320980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320981 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320980,G__320981) : tailrecursion.hoplon.span.call(null,G__320980,G__320981));
})();
var G__320942 = "\n          ";
var G__320943 = (function (){var G__320982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320983 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320982,G__320983) : tailrecursion.hoplon.span.call(null,G__320982,G__320983));
})();
var G__320944 = " (";
var G__320945 = (function (){var G__320984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320985 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320984,G__320985) : tailrecursion.hoplon.span.call(null,G__320984,G__320985));
})();
var G__320946 = " (";
var G__320947 = (function (){var G__320986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320987 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320986,G__320987) : tailrecursion.hoplon.span.call(null,G__320986,G__320987));
})();
var G__320948 = (function (){var G__320988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320989 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320988,G__320989) : tailrecursion.hoplon.span.call(null,G__320988,G__320989));
})();
var G__320949 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__320912,G__320913,G__320914,G__320915,G__320916,G__320917,G__320918,G__320919,G__320920,G__320921,G__320922,G__320923,G__320924,G__320925,G__320926,G__320927,G__320928,G__320929,G__320930,G__320931,G__320932,G__320933,G__320934,G__320935,G__320936,G__320937,G__320938,G__320939,G__320940,G__320941,G__320942,G__320943,G__320944,G__320945,G__320946,G__320947,G__320948,G__320949) : tailrecursion.hoplon.pre.call(null,G__320912,G__320913,G__320914,G__320915,G__320916,G__320917,G__320918,G__320919,G__320920,G__320921,G__320922,G__320923,G__320924,G__320925,G__320926,G__320927,G__320928,G__320929,G__320930,G__320931,G__320932,G__320933,G__320934,G__320935,G__320936,G__320937,G__320938,G__320939,G__320940,G__320941,G__320942,G__320943,G__320944,G__320945,G__320946,G__320947,G__320948,G__320949));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320910,G__320911) : tailrecursion.hoplon.div.call(null,G__320910,G__320911));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320909) : tailrecursion.hoplon.div.call(null,G__320909));
})(),(function (){var G__320990 = cljs.core.PersistentArrayMap.EMPTY;
var G__320991 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320990,G__320991) : tailrecursion.hoplon.markdown.para_node.call(null,G__320990,G__320991));
})(),(function (){var G__321076 = (function (){var G__321077 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321078 = (function (){var G__321079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321080 = "(";
var G__321081 = (function (){var G__321121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321122 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321121,G__321122) : tailrecursion.hoplon.span.call(null,G__321121,G__321122));
})();
var G__321082 = " ";
var G__321083 = (function (){var G__321123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321124 = "'apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321123,G__321124) : tailrecursion.hoplon.span.call(null,G__321123,G__321124));
})();
var G__321084 = " ";
var G__321085 = (function (){var G__321125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321126 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321125,G__321126) : tailrecursion.hoplon.span.call(null,G__321125,G__321126));
})();
var G__321086 = "(";
var G__321087 = (function (){var G__321127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321128 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321127,G__321128) : tailrecursion.hoplon.span.call(null,G__321127,G__321128));
})();
var G__321088 = " ";
var G__321089 = (function (){var G__321129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321130 = "banana";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321129,G__321130) : tailrecursion.hoplon.span.call(null,G__321129,G__321130));
})();
var G__321090 = " ";
var G__321091 = (function (){var G__321131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321132 = "prune";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321131,G__321132) : tailrecursion.hoplon.span.call(null,G__321131,G__321132));
})();
var G__321092 = "))\n";
var G__321093 = (function (){var G__321133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321134 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321133,G__321134) : tailrecursion.hoplon.span.call(null,G__321133,G__321134));
})();
var G__321094 = " ";
var G__321095 = (function (){var G__321135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321136 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321135,G__321136) : tailrecursion.hoplon.span.call(null,G__321135,G__321136));
})();
var G__321096 = "\n\n(";
var G__321097 = (function (){var G__321137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321138 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321137,G__321138) : tailrecursion.hoplon.span.call(null,G__321137,G__321138));
})();
var G__321098 = " ";
var G__321099 = (function (){var G__321139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321140 = "'apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321139,G__321140) : tailrecursion.hoplon.span.call(null,G__321139,G__321140));
})();
var G__321100 = " ";
var G__321101 = (function (){var G__321141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321142 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321141,G__321142) : tailrecursion.hoplon.span.call(null,G__321141,G__321142));
})();
var G__321102 = "(";
var G__321103 = (function (){var G__321143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321144 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321143,G__321144) : tailrecursion.hoplon.span.call(null,G__321143,G__321144));
})();
var G__321104 = " (";
var G__321105 = (function (){var G__321145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321146 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321145,G__321146) : tailrecursion.hoplon.span.call(null,G__321145,G__321146));
})();
var G__321106 = " ";
var G__321107 = (function (){var G__321147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321148 = "sauce";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321147,G__321148) : tailrecursion.hoplon.span.call(null,G__321147,G__321148));
})();
var G__321108 = ") ";
var G__321109 = (function (){var G__321149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321150 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321149,G__321150) : tailrecursion.hoplon.span.call(null,G__321149,G__321150));
})();
var G__321110 = " ";
var G__321111 = (function (){var G__321151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321152 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321151,G__321152) : tailrecursion.hoplon.span.call(null,G__321151,G__321152));
})();
var G__321112 = " ";
var G__321113 = (function (){var G__321153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321154 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321153,G__321154) : tailrecursion.hoplon.span.call(null,G__321153,G__321154));
})();
var G__321114 = "))\n";
var G__321115 = (function (){var G__321155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321156 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321155,G__321156) : tailrecursion.hoplon.span.call(null,G__321155,G__321156));
})();
var G__321116 = " (";
var G__321117 = (function (){var G__321157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321158 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321157,G__321158) : tailrecursion.hoplon.span.call(null,G__321157,G__321158));
})();
var G__321118 = " ";
var G__321119 = (function (){var G__321159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321160 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321159,G__321160) : tailrecursion.hoplon.span.call(null,G__321159,G__321160));
})();
var G__321120 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__321079,G__321080,G__321081,G__321082,G__321083,G__321084,G__321085,G__321086,G__321087,G__321088,G__321089,G__321090,G__321091,G__321092,G__321093,G__321094,G__321095,G__321096,G__321097,G__321098,G__321099,G__321100,G__321101,G__321102,G__321103,G__321104,G__321105,G__321106,G__321107,G__321108,G__321109,G__321110,G__321111,G__321112,G__321113,G__321114,G__321115,G__321116,G__321117,G__321118,G__321119,G__321120) : tailrecursion.hoplon.pre.call(null,G__321079,G__321080,G__321081,G__321082,G__321083,G__321084,G__321085,G__321086,G__321087,G__321088,G__321089,G__321090,G__321091,G__321092,G__321093,G__321094,G__321095,G__321096,G__321097,G__321098,G__321099,G__321100,G__321101,G__321102,G__321103,G__321104,G__321105,G__321106,G__321107,G__321108,G__321109,G__321110,G__321111,G__321112,G__321113,G__321114,G__321115,G__321116,G__321117,G__321118,G__321119,G__321120));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321077,G__321078) : tailrecursion.hoplon.div.call(null,G__321077,G__321078));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321076) : tailrecursion.hoplon.div.call(null,G__321076));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_320102;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_320101;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_320100;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_320099;
}})()], 0));
var G__320053 = "";
var G__320054 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321161 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321162 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321163 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321164 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321165 = cljs.core.PersistentArrayMap.EMPTY;
var G__321166 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What would the interpreter print in response to evaluating each of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__321165,G__321166) : tailrecursion.hoplon.markdown.para_node.call(null,G__321165,G__321166));
})(),(function (){var G__321186 = (function (){var G__321187 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321188 = (function (){var G__321189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321190 = "(";
var G__321191 = (function (){var G__321198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321199 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321198,G__321199) : tailrecursion.hoplon.span.call(null,G__321198,G__321199));
})();
var G__321192 = (function (){var G__321200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321201 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321200,G__321201) : tailrecursion.hoplon.span.call(null,G__321200,G__321201));
})();
var G__321193 = " ";
var G__321194 = (function (){var G__321202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321203 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321202,G__321203) : tailrecursion.hoplon.span.call(null,G__321202,G__321203));
})();
var G__321195 = " ";
var G__321196 = (function (){var G__321204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321205 = "'c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321204,G__321205) : tailrecursion.hoplon.span.call(null,G__321204,G__321205));
})();
var G__321197 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$9 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$9(G__321189,G__321190,G__321191,G__321192,G__321193,G__321194,G__321195,G__321196,G__321197) : tailrecursion.hoplon.pre.call(null,G__321189,G__321190,G__321191,G__321192,G__321193,G__321194,G__321195,G__321196,G__321197));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321187,G__321188) : tailrecursion.hoplon.div.call(null,G__321187,G__321188));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321186) : tailrecursion.hoplon.div.call(null,G__321186));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321164;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321163;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321162;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321161;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321206 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321207 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321208 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321209 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321245 = (function (){var G__321246 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321247 = (function (){var G__321248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321249 = "(";
var G__321250 = (function (){var G__321265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321266 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321265,G__321266) : tailrecursion.hoplon.span.call(null,G__321265,G__321266));
})();
var G__321251 = (function (){var G__321267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321268 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321267,G__321268) : tailrecursion.hoplon.span.call(null,G__321267,G__321268));
})();
var G__321252 = " ";
var G__321253 = (function (){var G__321269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321270 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321269,G__321270) : tailrecursion.hoplon.span.call(null,G__321269,G__321270));
})();
var G__321254 = " ";
var G__321255 = (function (){var G__321271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321272 = "'c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321271,G__321272) : tailrecursion.hoplon.span.call(null,G__321271,G__321272));
})();
var G__321256 = ")\n";
var G__321257 = (function (){var G__321273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321274 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321273,G__321274) : tailrecursion.hoplon.span.call(null,G__321273,G__321274));
})();
var G__321258 = " (";
var G__321259 = (function (){var G__321275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321276 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321275,G__321276) : tailrecursion.hoplon.span.call(null,G__321275,G__321276));
})();
var G__321260 = " ";
var G__321261 = (function (){var G__321277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321278 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321277,G__321278) : tailrecursion.hoplon.span.call(null,G__321277,G__321278));
})();
var G__321262 = " ";
var G__321263 = (function (){var G__321279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321280 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321279,G__321280) : tailrecursion.hoplon.span.call(null,G__321279,G__321280));
})();
var G__321264 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__321248,G__321249,G__321250,G__321251,G__321252,G__321253,G__321254,G__321255,G__321256,G__321257,G__321258,G__321259,G__321260,G__321261,G__321262,G__321263,G__321264) : tailrecursion.hoplon.pre.call(null,G__321248,G__321249,G__321250,G__321251,G__321252,G__321253,G__321254,G__321255,G__321256,G__321257,G__321258,G__321259,G__321260,G__321261,G__321262,G__321263,G__321264));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321246,G__321247) : tailrecursion.hoplon.div.call(null,G__321246,G__321247));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321245) : tailrecursion.hoplon.div.call(null,G__321245));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321209;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321208;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321207;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321206;
}})()], 0)),"",(function (){var _STAR_references_STAR_321281 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321282 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321283 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321284 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321300 = (function (){var G__321301 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321302 = (function (){var G__321303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321304 = "(";
var G__321305 = (function (){var G__321310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321311 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321310,G__321311) : tailrecursion.hoplon.span.call(null,G__321310,G__321311));
})();
var G__321306 = "(";
var G__321307 = (function (){var G__321312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321313 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321312,G__321313) : tailrecursion.hoplon.span.call(null,G__321312,G__321313));
})();
var G__321308 = (function (){var G__321314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321315 = "'george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321314,G__321315) : tailrecursion.hoplon.span.call(null,G__321314,G__321315));
})();
var G__321309 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7(G__321303,G__321304,G__321305,G__321306,G__321307,G__321308,G__321309) : tailrecursion.hoplon.pre.call(null,G__321303,G__321304,G__321305,G__321306,G__321307,G__321308,G__321309));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321301,G__321302) : tailrecursion.hoplon.div.call(null,G__321301,G__321302));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321300) : tailrecursion.hoplon.div.call(null,G__321300));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321284;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321283;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321282;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321281;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321316 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321317 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321318 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321319 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321343 = (function (){var G__321344 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321345 = (function (){var G__321346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321347 = "(";
var G__321348 = (function (){var G__321357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321358 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321357,G__321358) : tailrecursion.hoplon.span.call(null,G__321357,G__321358));
})();
var G__321349 = "(";
var G__321350 = (function (){var G__321359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321360 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321359,G__321360) : tailrecursion.hoplon.span.call(null,G__321359,G__321360));
})();
var G__321351 = (function (){var G__321361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321362 = "'george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321361,G__321362) : tailrecursion.hoplon.span.call(null,G__321361,G__321362));
})();
var G__321352 = "))\n";
var G__321353 = (function (){var G__321363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321364 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321363,G__321364) : tailrecursion.hoplon.span.call(null,G__321363,G__321364));
})();
var G__321354 = " ((";
var G__321355 = (function (){var G__321365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321366 = "george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321365,G__321366) : tailrecursion.hoplon.span.call(null,G__321365,G__321366));
})();
var G__321356 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__321346,G__321347,G__321348,G__321349,G__321350,G__321351,G__321352,G__321353,G__321354,G__321355,G__321356) : tailrecursion.hoplon.pre.call(null,G__321346,G__321347,G__321348,G__321349,G__321350,G__321351,G__321352,G__321353,G__321354,G__321355,G__321356));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321344,G__321345) : tailrecursion.hoplon.div.call(null,G__321344,G__321345));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321343) : tailrecursion.hoplon.div.call(null,G__321343));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321319;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321318;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321317;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321316;
}})()], 0)),"",(function (){var _STAR_references_STAR_321367 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321368 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321369 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321370 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321398 = (function (){var G__321399 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321400 = (function (){var G__321401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321402 = "(";
var G__321403 = (function (){var G__321414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321415 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321414,G__321415) : tailrecursion.hoplon.span.call(null,G__321414,G__321415));
})();
var G__321404 = (function (){var G__321416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321417 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321416,G__321417) : tailrecursion.hoplon.span.call(null,G__321416,G__321417));
})();
var G__321405 = "((";
var G__321406 = (function (){var G__321418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321419 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321418,G__321419) : tailrecursion.hoplon.span.call(null,G__321418,G__321419));
})();
var G__321407 = " ";
var G__321408 = (function (){var G__321420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321421 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321420,G__321421) : tailrecursion.hoplon.span.call(null,G__321420,G__321421));
})();
var G__321409 = ") (";
var G__321410 = (function (){var G__321422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321423 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321422,G__321423) : tailrecursion.hoplon.span.call(null,G__321422,G__321423));
})();
var G__321411 = " ";
var G__321412 = (function (){var G__321424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321425 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321424,G__321425) : tailrecursion.hoplon.span.call(null,G__321424,G__321425));
})();
var G__321413 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__321401,G__321402,G__321403,G__321404,G__321405,G__321406,G__321407,G__321408,G__321409,G__321410,G__321411,G__321412,G__321413) : tailrecursion.hoplon.pre.call(null,G__321401,G__321402,G__321403,G__321404,G__321405,G__321406,G__321407,G__321408,G__321409,G__321410,G__321411,G__321412,G__321413));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321399,G__321400) : tailrecursion.hoplon.div.call(null,G__321399,G__321400));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321398) : tailrecursion.hoplon.div.call(null,G__321398));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321370;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321369;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321368;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321367;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321426 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321427 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321428 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321429 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321469 = (function (){var G__321470 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321471 = (function (){var G__321472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321473 = "(";
var G__321474 = (function (){var G__321491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321492 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321491,G__321492) : tailrecursion.hoplon.span.call(null,G__321491,G__321492));
})();
var G__321475 = (function (){var G__321493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321494 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321493,G__321494) : tailrecursion.hoplon.span.call(null,G__321493,G__321494));
})();
var G__321476 = "((";
var G__321477 = (function (){var G__321495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321496 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321495,G__321496) : tailrecursion.hoplon.span.call(null,G__321495,G__321496));
})();
var G__321478 = " ";
var G__321479 = (function (){var G__321497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321498 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321497,G__321498) : tailrecursion.hoplon.span.call(null,G__321497,G__321498));
})();
var G__321480 = ") (";
var G__321481 = (function (){var G__321499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321500 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321499,G__321500) : tailrecursion.hoplon.span.call(null,G__321499,G__321500));
})();
var G__321482 = " ";
var G__321483 = (function (){var G__321501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321502 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321501,G__321502) : tailrecursion.hoplon.span.call(null,G__321501,G__321502));
})();
var G__321484 = ")))\n";
var G__321485 = (function (){var G__321503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321504 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321503,G__321504) : tailrecursion.hoplon.span.call(null,G__321503,G__321504));
})();
var G__321486 = " (";
var G__321487 = (function (){var G__321505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321506 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321505,G__321506) : tailrecursion.hoplon.span.call(null,G__321505,G__321506));
})();
var G__321488 = " ";
var G__321489 = (function (){var G__321507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321508 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321507,G__321508) : tailrecursion.hoplon.span.call(null,G__321507,G__321508));
})();
var G__321490 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__321472,G__321473,G__321474,G__321475,G__321476,G__321477,G__321478,G__321479,G__321480,G__321481,G__321482,G__321483,G__321484,G__321485,G__321486,G__321487,G__321488,G__321489,G__321490) : tailrecursion.hoplon.pre.call(null,G__321472,G__321473,G__321474,G__321475,G__321476,G__321477,G__321478,G__321479,G__321480,G__321481,G__321482,G__321483,G__321484,G__321485,G__321486,G__321487,G__321488,G__321489,G__321490));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321470,G__321471) : tailrecursion.hoplon.div.call(null,G__321470,G__321471));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321469) : tailrecursion.hoplon.div.call(null,G__321469));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321429;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321428;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321427;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321426;
}})()], 0)),"",(function (){var _STAR_references_STAR_321509 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321510 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321511 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321512 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321539 = (function (){var G__321540 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321541 = (function (){var G__321542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321543 = "(";
var G__321544 = (function (){var G__321554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321555 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321554,G__321555) : tailrecursion.hoplon.span.call(null,G__321554,G__321555));
})();
var G__321545 = " (";
var G__321546 = (function (){var G__321556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321557 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321556,G__321557) : tailrecursion.hoplon.span.call(null,G__321556,G__321557));
})();
var G__321547 = (function (){var G__321558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321559 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321558,G__321559) : tailrecursion.hoplon.span.call(null,G__321558,G__321559));
})();
var G__321548 = "(";
var G__321549 = (function (){var G__321560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321561 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321560,G__321561) : tailrecursion.hoplon.span.call(null,G__321560,G__321561));
})();
var G__321550 = " ";
var G__321551 = (function (){var G__321562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321563 = "short ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321562,G__321563) : tailrecursion.hoplon.span.call(null,G__321562,G__321563));
})();
var G__321552 = (function (){var G__321564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321565 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321564,G__321565) : tailrecursion.hoplon.span.call(null,G__321564,G__321565));
})();
var G__321553 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__321542,G__321543,G__321544,G__321545,G__321546,G__321547,G__321548,G__321549,G__321550,G__321551,G__321552,G__321553) : tailrecursion.hoplon.pre.call(null,G__321542,G__321543,G__321544,G__321545,G__321546,G__321547,G__321548,G__321549,G__321550,G__321551,G__321552,G__321553));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321540,G__321541) : tailrecursion.hoplon.div.call(null,G__321540,G__321541));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321539) : tailrecursion.hoplon.div.call(null,G__321539));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321512;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321511;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321510;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321509;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321566 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321567 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321568 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321569 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321604 = (function (){var G__321605 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321606 = (function (){var G__321607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321608 = "(";
var G__321609 = (function (){var G__321623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321624 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321623,G__321624) : tailrecursion.hoplon.span.call(null,G__321623,G__321624));
})();
var G__321610 = " (";
var G__321611 = (function (){var G__321625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321626 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321625,G__321626) : tailrecursion.hoplon.span.call(null,G__321625,G__321626));
})();
var G__321612 = (function (){var G__321627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321628 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321627,G__321628) : tailrecursion.hoplon.span.call(null,G__321627,G__321628));
})();
var G__321613 = "(";
var G__321614 = (function (){var G__321629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321630 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321629,G__321630) : tailrecursion.hoplon.span.call(null,G__321629,G__321630));
})();
var G__321615 = " ";
var G__321616 = (function (){var G__321631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321632 = "short ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321631,G__321632) : tailrecursion.hoplon.span.call(null,G__321631,G__321632));
})();
var G__321617 = (function (){var G__321633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321634 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321633,G__321634) : tailrecursion.hoplon.span.call(null,G__321633,G__321634));
})();
var G__321618 = ")))\n";
var G__321619 = (function (){var G__321635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321636 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321635,G__321636) : tailrecursion.hoplon.span.call(null,G__321635,G__321636));
})();
var G__321620 = " ";
var G__321621 = (function (){var G__321637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321638 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321637,G__321638) : tailrecursion.hoplon.span.call(null,G__321637,G__321638));
})();
var G__321622 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__321607,G__321608,G__321609,G__321610,G__321611,G__321612,G__321613,G__321614,G__321615,G__321616,G__321617,G__321618,G__321619,G__321620,G__321621,G__321622) : tailrecursion.hoplon.pre.call(null,G__321607,G__321608,G__321609,G__321610,G__321611,G__321612,G__321613,G__321614,G__321615,G__321616,G__321617,G__321618,G__321619,G__321620,G__321621,G__321622));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321605,G__321606) : tailrecursion.hoplon.div.call(null,G__321605,G__321606));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321604) : tailrecursion.hoplon.div.call(null,G__321604));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321569;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321568;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321567;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321566;
}})()], 0)),"",(function (){var _STAR_references_STAR_321639 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321640 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321641 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321642 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321675 = (function (){var G__321676 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321677 = (function (){var G__321678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321679 = "(";
var G__321680 = (function (){var G__321694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321695 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321694,G__321695) : tailrecursion.hoplon.span.call(null,G__321694,G__321695));
})();
var G__321681 = " ";
var G__321682 = (function (){var G__321696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321697 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321696,G__321697) : tailrecursion.hoplon.span.call(null,G__321696,G__321697));
})();
var G__321683 = " ";
var G__321684 = (function (){var G__321698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321699 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321698,G__321699) : tailrecursion.hoplon.span.call(null,G__321698,G__321699));
})();
var G__321685 = "((";
var G__321686 = (function (){var G__321700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321701 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321700,G__321701) : tailrecursion.hoplon.span.call(null,G__321700,G__321701));
})();
var G__321687 = " ";
var G__321688 = (function (){var G__321702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321703 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321702,G__321703) : tailrecursion.hoplon.span.call(null,G__321702,G__321703));
})();
var G__321689 = ") (";
var G__321690 = (function (){var G__321704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321705 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321704,G__321705) : tailrecursion.hoplon.span.call(null,G__321704,G__321705));
})();
var G__321691 = " ";
var G__321692 = (function (){var G__321706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321707 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321706,G__321707) : tailrecursion.hoplon.span.call(null,G__321706,G__321707));
})();
var G__321693 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__321678,G__321679,G__321680,G__321681,G__321682,G__321683,G__321684,G__321685,G__321686,G__321687,G__321688,G__321689,G__321690,G__321691,G__321692,G__321693) : tailrecursion.hoplon.pre.call(null,G__321678,G__321679,G__321680,G__321681,G__321682,G__321683,G__321684,G__321685,G__321686,G__321687,G__321688,G__321689,G__321690,G__321691,G__321692,G__321693));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321676,G__321677) : tailrecursion.hoplon.div.call(null,G__321676,G__321677));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321675) : tailrecursion.hoplon.div.call(null,G__321675));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321642;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321641;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321640;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321639;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321708 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321709 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321710 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321711 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321752 = (function (){var G__321753 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321754 = (function (){var G__321755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321756 = "(";
var G__321757 = (function (){var G__321775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321776 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321775,G__321776) : tailrecursion.hoplon.span.call(null,G__321775,G__321776));
})();
var G__321758 = " ";
var G__321759 = (function (){var G__321777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321778 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321777,G__321778) : tailrecursion.hoplon.span.call(null,G__321777,G__321778));
})();
var G__321760 = " ";
var G__321761 = (function (){var G__321779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321780 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321779,G__321780) : tailrecursion.hoplon.span.call(null,G__321779,G__321780));
})();
var G__321762 = "((";
var G__321763 = (function (){var G__321781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321782 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321781,G__321782) : tailrecursion.hoplon.span.call(null,G__321781,G__321782));
})();
var G__321764 = " ";
var G__321765 = (function (){var G__321783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321784 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321783,G__321784) : tailrecursion.hoplon.span.call(null,G__321783,G__321784));
})();
var G__321766 = ") (";
var G__321767 = (function (){var G__321785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321786 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321785,G__321786) : tailrecursion.hoplon.span.call(null,G__321785,G__321786));
})();
var G__321768 = " ";
var G__321769 = (function (){var G__321787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321788 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321787,G__321788) : tailrecursion.hoplon.span.call(null,G__321787,G__321788));
})();
var G__321770 = ")))\n";
var G__321771 = (function (){var G__321789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321790 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321789,G__321790) : tailrecursion.hoplon.span.call(null,G__321789,G__321790));
})();
var G__321772 = " ";
var G__321773 = (function (){var G__321791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321792 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321791,G__321792) : tailrecursion.hoplon.span.call(null,G__321791,G__321792));
})();
var G__321774 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__321755,G__321756,G__321757,G__321758,G__321759,G__321760,G__321761,G__321762,G__321763,G__321764,G__321765,G__321766,G__321767,G__321768,G__321769,G__321770,G__321771,G__321772,G__321773,G__321774) : tailrecursion.hoplon.pre.call(null,G__321755,G__321756,G__321757,G__321758,G__321759,G__321760,G__321761,G__321762,G__321763,G__321764,G__321765,G__321766,G__321767,G__321768,G__321769,G__321770,G__321771,G__321772,G__321773,G__321774));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321753,G__321754) : tailrecursion.hoplon.div.call(null,G__321753,G__321754));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321752) : tailrecursion.hoplon.div.call(null,G__321752));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321711;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321710;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321709;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321708;
}})()], 0)),"",(function (){var _STAR_references_STAR_321793 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321794 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321795 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321796 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321829 = (function (){var G__321830 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321831 = (function (){var G__321832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321833 = "(";
var G__321834 = (function (){var G__321848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321849 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321848,G__321849) : tailrecursion.hoplon.span.call(null,G__321848,G__321849));
})();
var G__321835 = " ";
var G__321836 = (function (){var G__321850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321851 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321850,G__321851) : tailrecursion.hoplon.span.call(null,G__321850,G__321851));
})();
var G__321837 = " ";
var G__321838 = (function (){var G__321852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321853 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321852,G__321853) : tailrecursion.hoplon.span.call(null,G__321852,G__321853));
})();
var G__321839 = "(";
var G__321840 = (function (){var G__321854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321855 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321854,G__321855) : tailrecursion.hoplon.span.call(null,G__321854,G__321855));
})();
var G__321841 = " ";
var G__321842 = (function (){var G__321856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321857 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321856,G__321857) : tailrecursion.hoplon.span.call(null,G__321856,G__321857));
})();
var G__321843 = " ";
var G__321844 = (function (){var G__321858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321859 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321858,G__321859) : tailrecursion.hoplon.span.call(null,G__321858,G__321859));
})();
var G__321845 = " ";
var G__321846 = (function (){var G__321860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321861 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321860,G__321861) : tailrecursion.hoplon.span.call(null,G__321860,G__321861));
})();
var G__321847 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__321832,G__321833,G__321834,G__321835,G__321836,G__321837,G__321838,G__321839,G__321840,G__321841,G__321842,G__321843,G__321844,G__321845,G__321846,G__321847) : tailrecursion.hoplon.pre.call(null,G__321832,G__321833,G__321834,G__321835,G__321836,G__321837,G__321838,G__321839,G__321840,G__321841,G__321842,G__321843,G__321844,G__321845,G__321846,G__321847));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321830,G__321831) : tailrecursion.hoplon.div.call(null,G__321830,G__321831));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321829) : tailrecursion.hoplon.div.call(null,G__321829));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321796;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321795;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321794;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321793;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321862 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321863 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321864 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321865 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321918 = (function (){var G__321919 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321920 = (function (){var G__321921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321922 = "(";
var G__321923 = (function (){var G__321947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321948 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321947,G__321948) : tailrecursion.hoplon.span.call(null,G__321947,G__321948));
})();
var G__321924 = " ";
var G__321925 = (function (){var G__321949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321950 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321949,G__321950) : tailrecursion.hoplon.span.call(null,G__321949,G__321950));
})();
var G__321926 = " ";
var G__321927 = (function (){var G__321951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321952 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321951,G__321952) : tailrecursion.hoplon.span.call(null,G__321951,G__321952));
})();
var G__321928 = "(";
var G__321929 = (function (){var G__321953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321954 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321953,G__321954) : tailrecursion.hoplon.span.call(null,G__321953,G__321954));
})();
var G__321930 = " ";
var G__321931 = (function (){var G__321955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321956 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321955,G__321956) : tailrecursion.hoplon.span.call(null,G__321955,G__321956));
})();
var G__321932 = " ";
var G__321933 = (function (){var G__321957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321958 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321957,G__321958) : tailrecursion.hoplon.span.call(null,G__321957,G__321958));
})();
var G__321934 = " ";
var G__321935 = (function (){var G__321959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321960 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321959,G__321960) : tailrecursion.hoplon.span.call(null,G__321959,G__321960));
})();
var G__321936 = "))\n";
var G__321937 = (function (){var G__321961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321962 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321961,G__321962) : tailrecursion.hoplon.span.call(null,G__321961,G__321962));
})();
var G__321938 = " (";
var G__321939 = (function (){var G__321963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321964 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321963,G__321964) : tailrecursion.hoplon.span.call(null,G__321963,G__321964));
})();
var G__321940 = " ";
var G__321941 = (function (){var G__321965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321966 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321965,G__321966) : tailrecursion.hoplon.span.call(null,G__321965,G__321966));
})();
var G__321942 = " ";
var G__321943 = (function (){var G__321967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321968 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321967,G__321968) : tailrecursion.hoplon.span.call(null,G__321967,G__321968));
})();
var G__321944 = " ";
var G__321945 = (function (){var G__321969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321970 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321969,G__321970) : tailrecursion.hoplon.span.call(null,G__321969,G__321970));
})();
var G__321946 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__321921,G__321922,G__321923,G__321924,G__321925,G__321926,G__321927,G__321928,G__321929,G__321930,G__321931,G__321932,G__321933,G__321934,G__321935,G__321936,G__321937,G__321938,G__321939,G__321940,G__321941,G__321942,G__321943,G__321944,G__321945,G__321946) : tailrecursion.hoplon.pre.call(null,G__321921,G__321922,G__321923,G__321924,G__321925,G__321926,G__321927,G__321928,G__321929,G__321930,G__321931,G__321932,G__321933,G__321934,G__321935,G__321936,G__321937,G__321938,G__321939,G__321940,G__321941,G__321942,G__321943,G__321944,G__321945,G__321946));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321919,G__321920) : tailrecursion.hoplon.div.call(null,G__321919,G__321920));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321918) : tailrecursion.hoplon.div.call(null,G__321918));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321865;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321864;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321863;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321862;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321971 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321972 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321973 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321974 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321975 = cljs.core.PersistentArrayMap.EMPTY;
var G__321976 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Two lists are said to be equal (again we will make use of the diverse protocols included in Clojure",(function (){var G__321977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__321978 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__321977,G__321978) : tailrecursion.hoplon.markdown.simple_node.call(null,G__321977,G__321978));
})(),"s ",(function (){var G__321979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__321980 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__321979,G__321980) : tailrecursion.hoplon.markdown.code_node.call(null,G__321979,G__321980));
})()," procedure), if they contain equal elements arranged in the same order. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__321975,G__321976) : tailrecursion.hoplon.markdown.para_node.call(null,G__321975,G__321976));
})(),(function (){var G__322087 = (function (){var G__322088 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322089 = (function (){var G__322090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322091 = "(";
var G__322092 = (function (){var G__322142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322143 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322142,G__322143) : tailrecursion.hoplon.span.call(null,G__322142,G__322143));
})();
var G__322093 = (function (){var G__322144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322145 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322144,G__322145) : tailrecursion.hoplon.span.call(null,G__322144,G__322145));
})();
var G__322094 = "(";
var G__322095 = (function (){var G__322146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322147 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322146,G__322147) : tailrecursion.hoplon.span.call(null,G__322146,G__322147));
})();
var G__322096 = " ";
var G__322097 = (function (){var G__322148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322149 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322148,G__322149) : tailrecursion.hoplon.span.call(null,G__322148,G__322149));
})();
var G__322098 = " ";
var G__322099 = (function (){var G__322150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322151 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322150,G__322151) : tailrecursion.hoplon.span.call(null,G__322150,G__322151));
})();
var G__322100 = " ";
var G__322101 = (function (){var G__322152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322153 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322152,G__322153) : tailrecursion.hoplon.span.call(null,G__322152,G__322153));
})();
var G__322102 = ") ";
var G__322103 = (function (){var G__322154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322155 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322154,G__322155) : tailrecursion.hoplon.span.call(null,G__322154,G__322155));
})();
var G__322104 = "(";
var G__322105 = (function (){var G__322156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322157 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322156,G__322157) : tailrecursion.hoplon.span.call(null,G__322156,G__322157));
})();
var G__322106 = " ";
var G__322107 = (function (){var G__322158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322159 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322158,G__322159) : tailrecursion.hoplon.span.call(null,G__322158,G__322159));
})();
var G__322108 = " ";
var G__322109 = (function (){var G__322160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322161 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322160,G__322161) : tailrecursion.hoplon.span.call(null,G__322160,G__322161));
})();
var G__322110 = " ";
var G__322111 = (function (){var G__322162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322163 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322162,G__322163) : tailrecursion.hoplon.span.call(null,G__322162,G__322163));
})();
var G__322112 = "))\n";
var G__322113 = (function (){var G__322164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322165 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322164,G__322165) : tailrecursion.hoplon.span.call(null,G__322164,G__322165));
})();
var G__322114 = " ";
var G__322115 = (function (){var G__322166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322167 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322166,G__322167) : tailrecursion.hoplon.span.call(null,G__322166,G__322167));
})();
var G__322116 = "\n\n(";
var G__322117 = (function (){var G__322168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322169 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322168,G__322169) : tailrecursion.hoplon.span.call(null,G__322168,G__322169));
})();
var G__322118 = (function (){var G__322170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322171 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322170,G__322171) : tailrecursion.hoplon.span.call(null,G__322170,G__322171));
})();
var G__322119 = "(";
var G__322120 = (function (){var G__322172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322173 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322172,G__322173) : tailrecursion.hoplon.span.call(null,G__322172,G__322173));
})();
var G__322121 = " ";
var G__322122 = (function (){var G__322174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322175 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322174,G__322175) : tailrecursion.hoplon.span.call(null,G__322174,G__322175));
})();
var G__322123 = " ";
var G__322124 = (function (){var G__322176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322177 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322176,G__322177) : tailrecursion.hoplon.span.call(null,G__322176,G__322177));
})();
var G__322125 = " ";
var G__322126 = (function (){var G__322178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322179 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322178,G__322179) : tailrecursion.hoplon.span.call(null,G__322178,G__322179));
})();
var G__322127 = ") ";
var G__322128 = (function (){var G__322180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322181 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322180,G__322181) : tailrecursion.hoplon.span.call(null,G__322180,G__322181));
})();
var G__322129 = "(";
var G__322130 = (function (){var G__322182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322183 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322182,G__322183) : tailrecursion.hoplon.span.call(null,G__322182,G__322183));
})();
var G__322131 = " (";
var G__322132 = (function (){var G__322184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322185 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322184,G__322185) : tailrecursion.hoplon.span.call(null,G__322184,G__322185));
})();
var G__322133 = " ";
var G__322134 = (function (){var G__322186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322187 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322186,G__322187) : tailrecursion.hoplon.span.call(null,G__322186,G__322187));
})();
var G__322135 = ") ";
var G__322136 = (function (){var G__322188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322189 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322188,G__322189) : tailrecursion.hoplon.span.call(null,G__322188,G__322189));
})();
var G__322137 = "))\n";
var G__322138 = (function (){var G__322190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322191 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322190,G__322191) : tailrecursion.hoplon.span.call(null,G__322190,G__322191));
})();
var G__322139 = " ";
var G__322140 = (function (){var G__322192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322193 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322192,G__322193) : tailrecursion.hoplon.span.call(null,G__322192,G__322193));
})();
var G__322141 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__322090,G__322091,G__322092,G__322093,G__322094,G__322095,G__322096,G__322097,G__322098,G__322099,G__322100,G__322101,G__322102,G__322103,G__322104,G__322105,G__322106,G__322107,G__322108,G__322109,G__322110,G__322111,G__322112,G__322113,G__322114,G__322115,G__322116,G__322117,G__322118,G__322119,G__322120,G__322121,G__322122,G__322123,G__322124,G__322125,G__322126,G__322127,G__322128,G__322129,G__322130,G__322131,G__322132,G__322133,G__322134,G__322135,G__322136,G__322137,G__322138,G__322139,G__322140,G__322141) : tailrecursion.hoplon.pre.call(null,G__322090,G__322091,G__322092,G__322093,G__322094,G__322095,G__322096,G__322097,G__322098,G__322099,G__322100,G__322101,G__322102,G__322103,G__322104,G__322105,G__322106,G__322107,G__322108,G__322109,G__322110,G__322111,G__322112,G__322113,G__322114,G__322115,G__322116,G__322117,G__322118,G__322119,G__322120,G__322121,G__322122,G__322123,G__322124,G__322125,G__322126,G__322127,G__322128,G__322129,G__322130,G__322131,G__322132,G__322133,G__322134,G__322135,G__322136,G__322137,G__322138,G__322139,G__322140,G__322141));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322088,G__322089) : tailrecursion.hoplon.div.call(null,G__322088,G__322089));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322087) : tailrecursion.hoplon.div.call(null,G__322087));
})(),(function (){var G__322194 = cljs.core.PersistentArrayMap.EMPTY;
var G__322195 = cljs.core.PersistentVector.fromArray(["To be more precise, we can define the protocols for ",(function (){var G__322196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322197 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322196,G__322197) : tailrecursion.hoplon.markdown.code_node.call(null,G__322196,G__322197));
})()," recursively in terms of the basic ",(function (){var G__322198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322199 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322198,G__322199) : tailrecursion.hoplon.markdown.code_node.call(null,G__322198,G__322199));
})()," protocols we",(function (){var G__322200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__322201 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__322200,G__322201) : tailrecursion.hoplon.markdown.simple_node.call(null,G__322200,G__322201));
})(),"re used to. To do this (for purposes of instruction) we will need to define a new procedure ",(function (){var G__322202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__322203 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322202,G__322203) : tailrecursion.hoplon.markdown.code_node.call(null,G__322202,G__322203));
})()," that will take two arguments and return true if they are not lists and they are ",(function (){var G__322204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322205 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322204,G__322205) : tailrecursion.hoplon.markdown.code_node.call(null,G__322204,G__322205));
})()," in the traditional sense. From that, we can define our new protocol for ",(function (){var G__322206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322207 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322206,G__322207) : tailrecursion.hoplon.markdown.code_node.call(null,G__322206,G__322207));
})(),", which we will call ",(function (){var G__322208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322209 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322208,G__322209) : tailrecursion.hoplon.markdown.code_node.call(null,G__322208,G__322209));
})()," by saying that ",(function (){var G__322210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__322211 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322210,G__322211) : tailrecursion.hoplon.markdown.code_node.call(null,G__322210,G__322211));
})()," and ",(function (){var G__322212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__322213 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322212,G__322213) : tailrecursion.hoplon.markdown.code_node.call(null,G__322212,G__322213));
})()," are ",(function (){var G__322214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322215 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322214,G__322215) : tailrecursion.hoplon.markdown.code_node.call(null,G__322214,G__322215));
})()," ifthey are both symbols and ",(function (){var G__322216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= a b)"], null);
var G__322217 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322216,G__322217) : tailrecursion.hoplon.markdown.code_node.call(null,G__322216,G__322217));
})(),", or if they are both lists such that ",(function (){var G__322218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first\na)"], null);
var G__322219 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322218,G__322219) : tailrecursion.hoplon.markdown.code_node.call(null,G__322218,G__322219));
})()," is ",(function (){var G__322220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322221 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322220,G__322221) : tailrecursion.hoplon.markdown.code_node.call(null,G__322220,G__322221));
})()," to ",(function (){var G__322222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first b)"], null);
var G__322223 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322222,G__322223) : tailrecursion.hoplon.markdown.code_node.call(null,G__322222,G__322223));
})()," and ",(function (){var G__322224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest a)"], null);
var G__322225 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322224,G__322225) : tailrecursion.hoplon.markdown.code_node.call(null,G__322224,G__322225));
})()," is ",(function (){var G__322226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322227 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322226,G__322227) : tailrecursion.hoplon.markdown.code_node.call(null,G__322226,G__322227));
})()," to ",(function (){var G__322228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest b)"], null);
var G__322229 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322228,G__322229) : tailrecursion.hoplon.markdown.code_node.call(null,G__322228,G__322229));
})(),". Using this idea, implement ",(function (){var G__322230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__322231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322230,G__322231) : tailrecursion.hoplon.markdown.code_node.call(null,G__322230,G__322231));
})()," and ",(function (){var G__322232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322233 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322232,G__322233) : tailrecursion.hoplon.markdown.code_node.call(null,G__322232,G__322233));
})()," as procedures.",(function (){var G__322234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__322235 = new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In practice, programmers use ",(function (){var G__322236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"equal?"], null);
var G__322237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322236,G__322237) : tailrecursion.hoplon.markdown.code_node.call(null,G__322236,G__322237));
})()," to compare lists that contain numbers as well as symbols. Numbers are not considered to be symbols. The question of whether two numerically equal numbers (as tested by ",(function (){var G__322238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322238,G__322239) : tailrecursion.hoplon.markdown.code_node.call(null,G__322238,G__322239));
})(),") are also ",(function (){var G__322240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__322241 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322240,G__322241) : tailrecursion.hoplon.markdown.code_node.call(null,G__322240,G__322241));
})()," is highly implementation-dependent. A better definition of ",(function (){var G__322242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"equal?"], null);
var G__322243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322242,G__322243) : tailrecursion.hoplon.markdown.code_node.call(null,G__322242,G__322243));
})()," (such as the one that comes as a primitive in Scheme) would also stipulate that if a and b are both numbers, then a and b are equal? if they are numerically equal. I believe Clojure gets around this issue through the use of protocols (something we will go over later). Basically, protocols allow for the use of functions accross many different types of arguments. For instance, ",(function (){var G__322244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__322245 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322244,G__322245) : tailrecursion.hoplon.markdown.code_node.call(null,G__322244,G__322245));
})()," can be used with a vector, a list, and more generally, any sequential object. In fact, you could write your own protocols for ",(function (){var G__322246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__322247 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322246,G__322247) : tailrecursion.hoplon.markdown.code_node.call(null,G__322246,G__322247));
})()," so that you could use ",(function (){var G__322248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__322249 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322248,G__322249) : tailrecursion.hoplon.markdown.code_node.call(null,G__322248,G__322249));
})()," on your own data structures. We've actually been using protocols for a while now via ",(function (){var G__322250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__322251 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322250,G__322251) : tailrecursion.hoplon.markdown.code_node.call(null,G__322250,G__322251));
})(),". When given a vector, ",(function (){var G__322252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__322253 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322252,G__322253) : tailrecursion.hoplon.markdown.code_node.call(null,G__322252,G__322253));
})()," appends the argument to the end of the vector; when given a list, ",(function (){var G__322254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__322255 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322254,G__322255) : tailrecursion.hoplon.markdown.code_node.call(null,G__322254,G__322255));
})()," prepends. This is due to protocols."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322234,G__322235) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322234,G__322235));
})()], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322194,G__322195) : tailrecursion.hoplon.markdown.para_node.call(null,G__322194,G__322195));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321974;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321973;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321972;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321971;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_322256 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322257 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322258 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322259 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322424 = (function (){var G__322425 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322426 = (function (){var G__322427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322428 = "(";
var G__322429 = (function (){var G__322505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322506 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322505,G__322506) : tailrecursion.hoplon.span.call(null,G__322505,G__322506));
})();
var G__322430 = (function (){var G__322507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322508 = "eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322507,G__322508) : tailrecursion.hoplon.span.call(null,G__322507,G__322508));
})();
var G__322431 = " [";
var G__322432 = (function (){var G__322509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322510 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322509,G__322510) : tailrecursion.hoplon.span.call(null,G__322509,G__322510));
})();
var G__322433 = " ";
var G__322434 = (function (){var G__322511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322512 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322511,G__322512) : tailrecursion.hoplon.span.call(null,G__322511,G__322512));
})();
var G__322435 = "]\n  (";
var G__322436 = (function (){var G__322513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322514 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322513,G__322514) : tailrecursion.hoplon.span.call(null,G__322513,G__322514));
})();
var G__322437 = "(";
var G__322438 = (function (){var G__322515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322516 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322515,G__322516) : tailrecursion.hoplon.span.call(null,G__322515,G__322516));
})();
var G__322439 = (function (){var G__322517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322518 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322517,G__322518) : tailrecursion.hoplon.span.call(null,G__322517,G__322518));
})();
var G__322440 = " ";
var G__322441 = (function (){var G__322519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322520 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322519,G__322520) : tailrecursion.hoplon.span.call(null,G__322519,G__322520));
})();
var G__322442 = ")\n       (";
var G__322443 = (function (){var G__322521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322522 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322521,G__322522) : tailrecursion.hoplon.span.call(null,G__322521,G__322522));
})();
var G__322444 = "(";
var G__322445 = (function (){var G__322523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322524 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322523,G__322524) : tailrecursion.hoplon.span.call(null,G__322523,G__322524));
})();
var G__322446 = (function (){var G__322525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322526 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322525,G__322526) : tailrecursion.hoplon.span.call(null,G__322525,G__322526));
})();
var G__322447 = "))))\n\n(";
var G__322448 = (function (){var G__322527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322528 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322527,G__322528) : tailrecursion.hoplon.span.call(null,G__322527,G__322528));
})();
var G__322449 = (function (){var G__322529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322530 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322529,G__322530) : tailrecursion.hoplon.span.call(null,G__322529,G__322530));
})();
var G__322450 = " [";
var G__322451 = (function (){var G__322531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322532 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322531,G__322532) : tailrecursion.hoplon.span.call(null,G__322531,G__322532));
})();
var G__322452 = " ";
var G__322453 = (function (){var G__322533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322534 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322533,G__322534) : tailrecursion.hoplon.span.call(null,G__322533,G__322534));
})();
var G__322454 = "]\n  (";
var G__322455 = (function (){var G__322535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322536 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322535,G__322536) : tailrecursion.hoplon.span.call(null,G__322535,G__322536));
})();
var G__322456 = "\n    (";
var G__322457 = (function (){var G__322537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322538 = "eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322537,G__322538) : tailrecursion.hoplon.span.call(null,G__322537,G__322538));
})();
var G__322458 = " ";
var G__322459 = (function (){var G__322539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322540 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322539,G__322540) : tailrecursion.hoplon.span.call(null,G__322539,G__322540));
})();
var G__322460 = " ";
var G__322461 = (function (){var G__322541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322542 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322541,G__322542) : tailrecursion.hoplon.span.call(null,G__322541,G__322542));
})();
var G__322462 = ") ";
var G__322463 = (function (){var G__322543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322544 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322543,G__322544) : tailrecursion.hoplon.span.call(null,G__322543,G__322544));
})();
var G__322464 = "\n    (";
var G__322465 = (function (){var G__322545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322546 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322545,G__322546) : tailrecursion.hoplon.span.call(null,G__322545,G__322546));
})();
var G__322466 = " ";
var G__322467 = (function (){var G__322547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322548 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322547,G__322548) : tailrecursion.hoplon.span.call(null,G__322547,G__322548));
})();
var G__322468 = ") (";
var G__322469 = (function (){var G__322549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322550 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322549,G__322550) : tailrecursion.hoplon.span.call(null,G__322549,G__322550));
})();
var G__322470 = " ";
var G__322471 = (function (){var G__322551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322552 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322551,G__322552) : tailrecursion.hoplon.span.call(null,G__322551,G__322552));
})();
var G__322472 = ")\n    (";
var G__322473 = (function (){var G__322553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322554 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322553,G__322554) : tailrecursion.hoplon.span.call(null,G__322553,G__322554));
})();
var G__322474 = "(";
var G__322475 = (function (){var G__322555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322556 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322555,G__322556) : tailrecursion.hoplon.span.call(null,G__322555,G__322556));
})();
var G__322476 = " ";
var G__322477 = (function (){var G__322557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322558 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322557,G__322558) : tailrecursion.hoplon.span.call(null,G__322557,G__322558));
})();
var G__322478 = ") \n         (";
var G__322479 = (function (){var G__322559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322560 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322559,G__322560) : tailrecursion.hoplon.span.call(null,G__322559,G__322560));
})();
var G__322480 = " ";
var G__322481 = (function (){var G__322561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322562 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322561,G__322562) : tailrecursion.hoplon.span.call(null,G__322561,G__322562));
})();
var G__322482 = "))\n    (";
var G__322483 = (function (){var G__322563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322564 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322563,G__322564) : tailrecursion.hoplon.span.call(null,G__322563,G__322564));
})();
var G__322484 = "(";
var G__322485 = (function (){var G__322565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322566 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322565,G__322566) : tailrecursion.hoplon.span.call(null,G__322565,G__322566));
})();
var G__322486 = " (";
var G__322487 = (function (){var G__322567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322568 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322567,G__322568) : tailrecursion.hoplon.span.call(null,G__322567,G__322568));
})();
var G__322488 = (function (){var G__322569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322570 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322569,G__322570) : tailrecursion.hoplon.span.call(null,G__322569,G__322570));
})();
var G__322489 = ") (";
var G__322490 = (function (){var G__322571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322572 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322571,G__322572) : tailrecursion.hoplon.span.call(null,G__322571,G__322572));
})();
var G__322491 = (function (){var G__322573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322574 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322573,G__322574) : tailrecursion.hoplon.span.call(null,G__322573,G__322574));
})();
var G__322492 = "))\n         (";
var G__322493 = (function (){var G__322575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322576 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322575,G__322576) : tailrecursion.hoplon.span.call(null,G__322575,G__322576));
})();
var G__322494 = " (";
var G__322495 = (function (){var G__322577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322578 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322577,G__322578) : tailrecursion.hoplon.span.call(null,G__322577,G__322578));
})();
var G__322496 = (function (){var G__322579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322580 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322579,G__322580) : tailrecursion.hoplon.span.call(null,G__322579,G__322580));
})();
var G__322497 = ") (";
var G__322498 = (function (){var G__322581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322582 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322581,G__322582) : tailrecursion.hoplon.span.call(null,G__322581,G__322582));
})();
var G__322499 = (function (){var G__322583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322584 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322583,G__322584) : tailrecursion.hoplon.span.call(null,G__322583,G__322584));
})();
var G__322500 = ")))\n    ";
var G__322501 = (function (){var G__322585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322586 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322585,G__322586) : tailrecursion.hoplon.span.call(null,G__322585,G__322586));
})();
var G__322502 = " ";
var G__322503 = (function (){var G__322587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322588 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322587,G__322588) : tailrecursion.hoplon.span.call(null,G__322587,G__322588));
})();
var G__322504 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78(G__322427,G__322428,G__322429,G__322430,G__322431,G__322432,G__322433,G__322434,G__322435,G__322436,G__322437,G__322438,G__322439,G__322440,G__322441,G__322442,G__322443,G__322444,G__322445,G__322446,G__322447,G__322448,G__322449,G__322450,G__322451,G__322452,G__322453,G__322454,G__322455,G__322456,G__322457,G__322458,G__322459,G__322460,G__322461,G__322462,G__322463,G__322464,G__322465,G__322466,G__322467,G__322468,G__322469,G__322470,G__322471,G__322472,G__322473,G__322474,G__322475,G__322476,G__322477,G__322478,G__322479,G__322480,G__322481,G__322482,G__322483,G__322484,G__322485,G__322486,G__322487,G__322488,G__322489,G__322490,G__322491,G__322492,G__322493,G__322494,G__322495,G__322496,G__322497,G__322498,G__322499,G__322500,G__322501,G__322502,G__322503,G__322504) : tailrecursion.hoplon.pre.call(null,G__322427,G__322428,G__322429,G__322430,G__322431,G__322432,G__322433,G__322434,G__322435,G__322436,G__322437,G__322438,G__322439,G__322440,G__322441,G__322442,G__322443,G__322444,G__322445,G__322446,G__322447,G__322448,G__322449,G__322450,G__322451,G__322452,G__322453,G__322454,G__322455,G__322456,G__322457,G__322458,G__322459,G__322460,G__322461,G__322462,G__322463,G__322464,G__322465,G__322466,G__322467,G__322468,G__322469,G__322470,G__322471,G__322472,G__322473,G__322474,G__322475,G__322476,G__322477,G__322478,G__322479,G__322480,G__322481,G__322482,G__322483,G__322484,G__322485,G__322486,G__322487,G__322488,G__322489,G__322490,G__322491,G__322492,G__322493,G__322494,G__322495,G__322496,G__322497,G__322498,G__322499,G__322500,G__322501,G__322502,G__322503,G__322504));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322425,G__322426) : tailrecursion.hoplon.div.call(null,G__322425,G__322426));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322424) : tailrecursion.hoplon.div.call(null,G__322424));
})(),(function (){var G__322589 = cljs.core.PersistentArrayMap.EMPTY;
var G__322590 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea being if ",(function (){var G__322591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__322592 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322591,G__322592) : tailrecursion.hoplon.markdown.code_node.call(null,G__322591,G__322592));
})()," and ",(function (){var G__322593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__322594 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322593,G__322594) : tailrecursion.hoplon.markdown.code_node.call(null,G__322593,G__322594));
})()," are equal (in this sense) then both ",(function (){var G__322595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__322596 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322595,G__322596) : tailrecursion.hoplon.markdown.code_node.call(null,G__322595,G__322596));
})()," and ",(function (){var G__322597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__322598 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322597,G__322598) : tailrecursion.hoplon.markdown.code_node.call(null,G__322597,G__322598));
})()," must be either: non-empty lists, empty lists, or not lists at all. This function takes care of those three cases in reverse order and if none are the case, it returns false."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322589,G__322590) : tailrecursion.hoplon.markdown.para_node.call(null,G__322589,G__322590));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322259;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322258;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322257;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322256;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_322599 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322600 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322601 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322602 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322603 = cljs.core.PersistentArrayMap.EMPTY;
var G__322604 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator types to the interpreter the expression"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322603,G__322604) : tailrecursion.hoplon.markdown.para_node.call(null,G__322603,G__322604));
})(),(function (){var G__322619 = (function (){var G__322620 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322621 = (function (){var G__322622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322623 = "(";
var G__322624 = (function (){var G__322628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322629 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322628,G__322629) : tailrecursion.hoplon.span.call(null,G__322628,G__322629));
})();
var G__322625 = (function (){var G__322630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322631 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322630,G__322631) : tailrecursion.hoplon.span.call(null,G__322630,G__322631));
})();
var G__322626 = (function (){var G__322632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322633 = "'abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322632,G__322633) : tailrecursion.hoplon.span.call(null,G__322632,G__322633));
})();
var G__322627 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$6 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$6(G__322622,G__322623,G__322624,G__322625,G__322626,G__322627) : tailrecursion.hoplon.pre.call(null,G__322622,G__322623,G__322624,G__322625,G__322626,G__322627));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322620,G__322621) : tailrecursion.hoplon.div.call(null,G__322620,G__322621));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322619) : tailrecursion.hoplon.div.call(null,G__322619));
})(),(function (){var G__322634 = cljs.core.PersistentArrayMap.EMPTY;
var G__322635 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To her surprise, the interpreter prints back ",(function (){var G__322636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"quote"], null);
var G__322637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322636,G__322637) : tailrecursion.hoplon.markdown.code_node.call(null,G__322636,G__322637));
})(),". Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322634,G__322635) : tailrecursion.hoplon.markdown.para_node.call(null,G__322634,G__322635));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322602;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322601;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322600;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322599;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_322638 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322639 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322640 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322641 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322642 = cljs.core.PersistentArrayMap.EMPTY;
var G__322643 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["First let",(function (){var G__322644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__322645 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__322644,G__322645) : tailrecursion.hoplon.markdown.simple_node.call(null,G__322644,G__322645));
})(),"s take a look at what ",(function (){var G__322646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"''abracadabra"], null);
var G__322647 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322646,G__322647) : tailrecursion.hoplon.markdown.code_node.call(null,G__322646,G__322647));
})()," returns."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322642,G__322643) : tailrecursion.hoplon.markdown.para_node.call(null,G__322642,G__322643));
})(),(function (){var G__322691 = (function (){var G__322692 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322693 = (function (){var G__322694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322695 = (function (){var G__322713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322714 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322713,G__322714) : tailrecursion.hoplon.span.call(null,G__322713,G__322714));
})();
var G__322696 = (function (){var G__322715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322716 = "'abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322715,G__322716) : tailrecursion.hoplon.span.call(null,G__322715,G__322716));
})();
var G__322697 = "\n";
var G__322698 = (function (){var G__322717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322718 = "`";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322717,G__322718) : tailrecursion.hoplon.span.call(null,G__322717,G__322718));
})();
var G__322699 = "(";
var G__322700 = (function (){var G__322719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322720 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322719,G__322720) : tailrecursion.hoplon.span.call(null,G__322719,G__322720));
})();
var G__322701 = (function (){var G__322721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322722 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322721,G__322722) : tailrecursion.hoplon.span.call(null,G__322721,G__322722));
})();
var G__322702 = ")\n(";
var G__322703 = (function (){var G__322723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322724 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322723,G__322724) : tailrecursion.hoplon.span.call(null,G__322723,G__322724));
})();
var G__322704 = "(";
var G__322705 = (function (){var G__322725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322726 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322725,G__322726) : tailrecursion.hoplon.span.call(null,G__322725,G__322726));
})();
var G__322706 = (function (){var G__322727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322728 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322727,G__322728) : tailrecursion.hoplon.span.call(null,G__322727,G__322728));
})();
var G__322707 = "))\n";
var G__322708 = (function (){var G__322729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322730 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322729,G__322730) : tailrecursion.hoplon.span.call(null,G__322729,G__322730));
})();
var G__322709 = " (";
var G__322710 = (function (){var G__322731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322732 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322731,G__322732) : tailrecursion.hoplon.span.call(null,G__322731,G__322732));
})();
var G__322711 = (function (){var G__322733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322734 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322733,G__322734) : tailrecursion.hoplon.span.call(null,G__322733,G__322734));
})();
var G__322712 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__322694,G__322695,G__322696,G__322697,G__322698,G__322699,G__322700,G__322701,G__322702,G__322703,G__322704,G__322705,G__322706,G__322707,G__322708,G__322709,G__322710,G__322711,G__322712) : tailrecursion.hoplon.pre.call(null,G__322694,G__322695,G__322696,G__322697,G__322698,G__322699,G__322700,G__322701,G__322702,G__322703,G__322704,G__322705,G__322706,G__322707,G__322708,G__322709,G__322710,G__322711,G__322712));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322692,G__322693) : tailrecursion.hoplon.div.call(null,G__322692,G__322693));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322691) : tailrecursion.hoplon.div.call(null,G__322691));
})(),(function (){var G__322735 = cljs.core.PersistentArrayMap.EMPTY;
var G__322736 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see the first thing in this list is the word ",(function (){var G__322737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322738 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quote"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322737,G__322738) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322737,G__322738));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322735,G__322736) : tailrecursion.hoplon.markdown.para_node.call(null,G__322735,G__322736));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322641;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322640;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322639;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322638;
}})()], 0))], 0))], 0));
var G__320055 = "";
var G__320056 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Symbolic Differentiation"], null),(function (){var _STAR_references_STAR_322739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322741 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322742 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322743 = cljs.core.PersistentArrayMap.EMPTY;
var G__322744 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As an illustration of symbol manipulation and a further illustration of data abstraction, consider the design of a procedure that performs symbolic differentiation of algebraic expressions. We would like the procedure to take as arguments an algebraic expression and a variable and to return the derivative of the expression with respect to the variable. For example, if the arguments to the procedure are \\(ax2 + bx + c\\) and \\(x\\), the procedure should return \\(2ax + b\\). Symbolic differentiation is of special historical significance in Lisp. It was one of the motivating examples behind the development of a computer language for symbol manipulation. Furthermore, it marked the beginning of the line of research that led to the development of powerful systems for symbolic mathematical work, which are currently being used by a growing number of applied mathematicians and physicists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322743,G__322744) : tailrecursion.hoplon.markdown.para_node.call(null,G__322743,G__322744));
})(),(function (){var G__322745 = cljs.core.PersistentArrayMap.EMPTY;
var G__322746 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In developing the symbolic-differentiation program, we will follow the same strategy of data abstraction that we followed in developing the rational-number system of section 2.1.1. That is, we will first define a differentiation algorithm that operates on abstract objects such as ",(function (){var G__322747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322748 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sums,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322747,G__322748) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322747,G__322748));
})()," ",(function (){var G__322749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322750 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["products,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322749,G__322750) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322749,G__322750));
})()," and ",(function (){var G__322751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322752 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["variables"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322751,G__322752) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322751,G__322752));
})()," without worrying about how these are to be represented. Only afterward will we address the representation problem."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322745,G__322746) : tailrecursion.hoplon.markdown.para_node.call(null,G__322745,G__322746));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322742;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322741;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322739;
}})()], 0));
var G__320057 = "";
var G__320058 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Differentiation Program with Abstract Data"], null),(function (){var _STAR_references_STAR_322753 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322754 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322755 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322756 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322757 = cljs.core.PersistentArrayMap.EMPTY;
var G__322758 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to keep things simple, we will consider a very simple symbolic-differentiation program that handles expressions that are built up using only the operations of addition and multiplication with two arguments. Differentiation of any such expression can be carried out by applying the following reduction rules:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322757,G__322758) : tailrecursion.hoplon.markdown.para_node.call(null,G__322757,G__322758));
})(),(function (){var G__322759 = cljs.core.PersistentArrayMap.EMPTY;
var G__322760 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{dc}{dx}=& 0 \\text{ for } c \\text{ a constant or a variable different from } x\\\\ \\frac{dx}{dx}=& 1\\\\ \\frac{d(u+v)}{dx}=& \\frac{du}{dx}+\\frac{dv}{dx}\\\\ \\frac{d(uv)}{dx}=& u\\left(\\frac{du}{dx}\\right) + v\\left(\\frac{dv}{dx}\\right)\\\\ \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322759,G__322760) : tailrecursion.hoplon.markdown.para_node.call(null,G__322759,G__322760));
})(),(function (){var G__322761 = cljs.core.PersistentArrayMap.EMPTY;
var G__322762 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Observe that the latter two rules are recursive in nature. That is, to obtain the derivative of a sum we first find the derivatives of the terms and add them. Each of the terms may in turn be an expression that needs to be decomposed. Decomposing into smaller and smaller pieces will eventually produce pieces that are either constants or variables, whose derivatives will be either 0 or 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322761,G__322762) : tailrecursion.hoplon.markdown.para_node.call(null,G__322761,G__322762));
})(),(function (){var G__322763 = cljs.core.PersistentArrayMap.EMPTY;
var G__322764 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To embody these rules in a procedure we indulge in a little wishful thinking, as we did in designing the rational-number implementation. If we had a means for representing algebraic expressions, we should be able to tell whether an expression is a sum, a product, a constant, or a variable. We should be able to extract the parts of an expression. For a sum, for example we want to be able to extract the addend (first term) and the augend (second term). We should also be able to construct expressions from parts. Let us assume that we already have procedures to implement the following selectors, constructors, and predicates:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322763,G__322764) : tailrecursion.hoplon.markdown.para_node.call(null,G__322763,G__322764));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322756;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322755;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322754;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322753;
}})(),"",(function (){var G__322765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$class,"table"], null);
var G__322766 = (function (){var G__322767 = cljs.core.PersistentArrayMap.EMPTY;
var G__322768 = (function (){var G__322787 = cljs.core.PersistentArrayMap.EMPTY;
var G__322788 = (function (){var G__322790 = cljs.core.PersistentArrayMap.EMPTY;
var G__322791 = (function (){var _STAR_references_STAR_322792 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322793 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322794 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322795 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322796 = cljs.core.PersistentArrayMap.EMPTY;
var G__322797 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(variable? e)"], null);
var G__322799 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322798,G__322799) : tailrecursion.hoplon.markdown.code_node.call(null,G__322798,G__322799));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322796,G__322797) : tailrecursion.hoplon.markdown.para_node.call(null,G__322796,G__322797));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322795;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322794;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322793;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322792;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322790,G__322791) : tailrecursion.hoplon.td.call(null,G__322790,G__322791));
})();
var G__322789 = (function (){var G__322800 = cljs.core.PersistentArrayMap.EMPTY;
var G__322801 = (function (){var _STAR_references_STAR_322802 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322803 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322804 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322805 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322806 = cljs.core.PersistentArrayMap.EMPTY;
var G__322807 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__322808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322809 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322808,G__322809) : tailrecursion.hoplon.markdown.code_node.call(null,G__322808,G__322809));
})()," a variable?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322806,G__322807) : tailrecursion.hoplon.markdown.para_node.call(null,G__322806,G__322807));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322805;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322804;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322803;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322802;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322800,G__322801) : tailrecursion.hoplon.td.call(null,G__322800,G__322801));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322787,G__322788,G__322789) : tailrecursion.hoplon.tr.call(null,G__322787,G__322788,G__322789));
})();
var G__322769 = "";
var G__322770 = (function (){var G__322810 = cljs.core.PersistentArrayMap.EMPTY;
var G__322811 = (function (){var G__322813 = cljs.core.PersistentArrayMap.EMPTY;
var G__322814 = (function (){var _STAR_references_STAR_322815 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322816 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322817 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322818 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322819 = cljs.core.PersistentArrayMap.EMPTY;
var G__322820 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(same-variable? v1 v2)"], null);
var G__322822 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322821,G__322822) : tailrecursion.hoplon.markdown.code_node.call(null,G__322821,G__322822));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322819,G__322820) : tailrecursion.hoplon.markdown.para_node.call(null,G__322819,G__322820));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322818;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322817;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322816;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322815;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322813,G__322814) : tailrecursion.hoplon.td.call(null,G__322813,G__322814));
})();
var G__322812 = (function (){var G__322823 = cljs.core.PersistentArrayMap.EMPTY;
var G__322824 = (function (){var _STAR_references_STAR_322825 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322826 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322827 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322828 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322829 = cljs.core.PersistentArrayMap.EMPTY;
var G__322830 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Are ",(function (){var G__322831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"v1"], null);
var G__322832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322831,G__322832) : tailrecursion.hoplon.markdown.code_node.call(null,G__322831,G__322832));
})()," and ",(function (){var G__322833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"v2"], null);
var G__322834 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322833,G__322834) : tailrecursion.hoplon.markdown.code_node.call(null,G__322833,G__322834));
})()," the same variable?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322829,G__322830) : tailrecursion.hoplon.markdown.para_node.call(null,G__322829,G__322830));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322828;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322827;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322826;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322825;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322823,G__322824) : tailrecursion.hoplon.td.call(null,G__322823,G__322824));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322810,G__322811,G__322812) : tailrecursion.hoplon.tr.call(null,G__322810,G__322811,G__322812));
})();
var G__322771 = "";
var G__322772 = (function (){var G__322835 = cljs.core.PersistentArrayMap.EMPTY;
var G__322836 = (function (){var G__322838 = cljs.core.PersistentArrayMap.EMPTY;
var G__322839 = (function (){var _STAR_references_STAR_322840 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322841 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322842 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322843 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322844 = cljs.core.PersistentArrayMap.EMPTY;
var G__322845 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sum? e)"], null);
var G__322847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322846,G__322847) : tailrecursion.hoplon.markdown.code_node.call(null,G__322846,G__322847));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322844,G__322845) : tailrecursion.hoplon.markdown.para_node.call(null,G__322844,G__322845));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322843;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322842;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322841;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322840;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322838,G__322839) : tailrecursion.hoplon.td.call(null,G__322838,G__322839));
})();
var G__322837 = (function (){var G__322848 = cljs.core.PersistentArrayMap.EMPTY;
var G__322849 = (function (){var _STAR_references_STAR_322850 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322851 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322852 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322853 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322854 = cljs.core.PersistentArrayMap.EMPTY;
var G__322855 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__322856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322857 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322856,G__322857) : tailrecursion.hoplon.markdown.code_node.call(null,G__322856,G__322857));
})()," a sum?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322854,G__322855) : tailrecursion.hoplon.markdown.para_node.call(null,G__322854,G__322855));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322853;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322852;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322851;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322850;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322848,G__322849) : tailrecursion.hoplon.td.call(null,G__322848,G__322849));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322835,G__322836,G__322837) : tailrecursion.hoplon.tr.call(null,G__322835,G__322836,G__322837));
})();
var G__322773 = "";
var G__322774 = (function (){var G__322858 = cljs.core.PersistentArrayMap.EMPTY;
var G__322859 = (function (){var G__322861 = cljs.core.PersistentArrayMap.EMPTY;
var G__322862 = (function (){var _STAR_references_STAR_322863 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322864 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322865 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322866 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322867 = cljs.core.PersistentArrayMap.EMPTY;
var G__322868 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(addend e)"], null);
var G__322870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322869,G__322870) : tailrecursion.hoplon.markdown.code_node.call(null,G__322869,G__322870));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322867,G__322868) : tailrecursion.hoplon.markdown.para_node.call(null,G__322867,G__322868));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322866;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322865;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322864;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322863;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322861,G__322862) : tailrecursion.hoplon.td.call(null,G__322861,G__322862));
})();
var G__322860 = (function (){var G__322871 = cljs.core.PersistentArrayMap.EMPTY;
var G__322872 = (function (){var _STAR_references_STAR_322873 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322874 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322875 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322876 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322877 = cljs.core.PersistentArrayMap.EMPTY;
var G__322878 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Addend of the sum ",(function (){var G__322879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322880 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322879,G__322880) : tailrecursion.hoplon.markdown.code_node.call(null,G__322879,G__322880));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322877,G__322878) : tailrecursion.hoplon.markdown.para_node.call(null,G__322877,G__322878));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322876;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322875;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322874;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322873;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322871,G__322872) : tailrecursion.hoplon.td.call(null,G__322871,G__322872));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322858,G__322859,G__322860) : tailrecursion.hoplon.tr.call(null,G__322858,G__322859,G__322860));
})();
var G__322775 = "";
var G__322776 = (function (){var G__322881 = cljs.core.PersistentArrayMap.EMPTY;
var G__322882 = (function (){var G__322884 = cljs.core.PersistentArrayMap.EMPTY;
var G__322885 = (function (){var _STAR_references_STAR_322886 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322887 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322888 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322889 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322890 = cljs.core.PersistentArrayMap.EMPTY;
var G__322891 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(augend e)"], null);
var G__322893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322892,G__322893) : tailrecursion.hoplon.markdown.code_node.call(null,G__322892,G__322893));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322890,G__322891) : tailrecursion.hoplon.markdown.para_node.call(null,G__322890,G__322891));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322889;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322888;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322887;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322886;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322884,G__322885) : tailrecursion.hoplon.td.call(null,G__322884,G__322885));
})();
var G__322883 = (function (){var G__322894 = cljs.core.PersistentArrayMap.EMPTY;
var G__322895 = (function (){var _STAR_references_STAR_322896 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322897 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322898 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322899 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322900 = cljs.core.PersistentArrayMap.EMPTY;
var G__322901 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Augend of the sum ",(function (){var G__322902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322903 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322902,G__322903) : tailrecursion.hoplon.markdown.code_node.call(null,G__322902,G__322903));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322900,G__322901) : tailrecursion.hoplon.markdown.para_node.call(null,G__322900,G__322901));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322899;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322898;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322897;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322896;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322894,G__322895) : tailrecursion.hoplon.td.call(null,G__322894,G__322895));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322881,G__322882,G__322883) : tailrecursion.hoplon.tr.call(null,G__322881,G__322882,G__322883));
})();
var G__322777 = "";
var G__322778 = (function (){var G__322904 = cljs.core.PersistentArrayMap.EMPTY;
var G__322905 = (function (){var G__322907 = cljs.core.PersistentArrayMap.EMPTY;
var G__322908 = (function (){var _STAR_references_STAR_322909 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322910 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322911 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322912 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322913 = cljs.core.PersistentArrayMap.EMPTY;
var G__322914 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-sum e)"], null);
var G__322916 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322915,G__322916) : tailrecursion.hoplon.markdown.code_node.call(null,G__322915,G__322916));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322913,G__322914) : tailrecursion.hoplon.markdown.para_node.call(null,G__322913,G__322914));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322912;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322911;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322910;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322909;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322907,G__322908) : tailrecursion.hoplon.td.call(null,G__322907,G__322908));
})();
var G__322906 = (function (){var G__322917 = cljs.core.PersistentArrayMap.EMPTY;
var G__322918 = (function (){var _STAR_references_STAR_322919 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322920 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322921 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322922 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322923 = cljs.core.PersistentArrayMap.EMPTY;
var G__322924 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Construct the sum of ",(function (){var G__322925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a1"], null);
var G__322926 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322925,G__322926) : tailrecursion.hoplon.markdown.code_node.call(null,G__322925,G__322926));
})()," and ",(function (){var G__322927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a2"], null);
var G__322928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322927,G__322928) : tailrecursion.hoplon.markdown.code_node.call(null,G__322927,G__322928));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322923,G__322924) : tailrecursion.hoplon.markdown.para_node.call(null,G__322923,G__322924));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322922;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322921;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322920;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322919;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322917,G__322918) : tailrecursion.hoplon.td.call(null,G__322917,G__322918));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322904,G__322905,G__322906) : tailrecursion.hoplon.tr.call(null,G__322904,G__322905,G__322906));
})();
var G__322779 = "";
var G__322780 = (function (){var G__322929 = cljs.core.PersistentArrayMap.EMPTY;
var G__322930 = (function (){var G__322932 = cljs.core.PersistentArrayMap.EMPTY;
var G__322933 = (function (){var _STAR_references_STAR_322934 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322935 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322936 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322937 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322938 = cljs.core.PersistentArrayMap.EMPTY;
var G__322939 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(product? e)"], null);
var G__322941 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322940,G__322941) : tailrecursion.hoplon.markdown.code_node.call(null,G__322940,G__322941));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322938,G__322939) : tailrecursion.hoplon.markdown.para_node.call(null,G__322938,G__322939));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322937;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322936;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322935;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322934;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322932,G__322933) : tailrecursion.hoplon.td.call(null,G__322932,G__322933));
})();
var G__322931 = (function (){var G__322942 = cljs.core.PersistentArrayMap.EMPTY;
var G__322943 = (function (){var _STAR_references_STAR_322944 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322945 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322946 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322947 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322948 = cljs.core.PersistentArrayMap.EMPTY;
var G__322949 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__322950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322951 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322950,G__322951) : tailrecursion.hoplon.markdown.code_node.call(null,G__322950,G__322951));
})()," a product?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322948,G__322949) : tailrecursion.hoplon.markdown.para_node.call(null,G__322948,G__322949));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322947;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322946;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322945;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322944;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322942,G__322943) : tailrecursion.hoplon.td.call(null,G__322942,G__322943));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322929,G__322930,G__322931) : tailrecursion.hoplon.tr.call(null,G__322929,G__322930,G__322931));
})();
var G__322781 = "";
var G__322782 = (function (){var G__322952 = cljs.core.PersistentArrayMap.EMPTY;
var G__322953 = (function (){var G__322955 = cljs.core.PersistentArrayMap.EMPTY;
var G__322956 = (function (){var _STAR_references_STAR_322957 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322958 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322959 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322960 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322961 = cljs.core.PersistentArrayMap.EMPTY;
var G__322962 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(multiplier e)"], null);
var G__322964 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322963,G__322964) : tailrecursion.hoplon.markdown.code_node.call(null,G__322963,G__322964));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322961,G__322962) : tailrecursion.hoplon.markdown.para_node.call(null,G__322961,G__322962));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322960;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322959;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322958;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322957;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322955,G__322956) : tailrecursion.hoplon.td.call(null,G__322955,G__322956));
})();
var G__322954 = (function (){var G__322965 = cljs.core.PersistentArrayMap.EMPTY;
var G__322966 = (function (){var _STAR_references_STAR_322967 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322968 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322969 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322970 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322971 = cljs.core.PersistentArrayMap.EMPTY;
var G__322972 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplier of the product ",(function (){var G__322973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322974 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322973,G__322974) : tailrecursion.hoplon.markdown.code_node.call(null,G__322973,G__322974));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322971,G__322972) : tailrecursion.hoplon.markdown.para_node.call(null,G__322971,G__322972));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322970;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322969;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322968;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322967;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322965,G__322966) : tailrecursion.hoplon.td.call(null,G__322965,G__322966));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322952,G__322953,G__322954) : tailrecursion.hoplon.tr.call(null,G__322952,G__322953,G__322954));
})();
var G__322783 = "";
var G__322784 = (function (){var G__322975 = cljs.core.PersistentArrayMap.EMPTY;
var G__322976 = (function (){var G__322978 = cljs.core.PersistentArrayMap.EMPTY;
var G__322979 = (function (){var _STAR_references_STAR_322980 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322981 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322982 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322983 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322984 = cljs.core.PersistentArrayMap.EMPTY;
var G__322985 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(multiplicand e)"], null);
var G__322987 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322986,G__322987) : tailrecursion.hoplon.markdown.code_node.call(null,G__322986,G__322987));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322984,G__322985) : tailrecursion.hoplon.markdown.para_node.call(null,G__322984,G__322985));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322983;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322982;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322981;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322980;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322978,G__322979) : tailrecursion.hoplon.td.call(null,G__322978,G__322979));
})();
var G__322977 = (function (){var G__322988 = cljs.core.PersistentArrayMap.EMPTY;
var G__322989 = (function (){var _STAR_references_STAR_322990 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322991 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322992 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322993 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322994 = cljs.core.PersistentArrayMap.EMPTY;
var G__322995 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplicand of the product ",(function (){var G__322996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322997 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322996,G__322997) : tailrecursion.hoplon.markdown.code_node.call(null,G__322996,G__322997));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322994,G__322995) : tailrecursion.hoplon.markdown.para_node.call(null,G__322994,G__322995));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322993;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322992;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322991;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322990;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322988,G__322989) : tailrecursion.hoplon.td.call(null,G__322988,G__322989));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322975,G__322976,G__322977) : tailrecursion.hoplon.tr.call(null,G__322975,G__322976,G__322977));
})();
var G__322785 = "";
var G__322786 = (function (){var G__322998 = cljs.core.PersistentArrayMap.EMPTY;
var G__322999 = (function (){var G__323001 = cljs.core.PersistentArrayMap.EMPTY;
var G__323002 = (function (){var _STAR_references_STAR_323003 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323004 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323005 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323006 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323007 = cljs.core.PersistentArrayMap.EMPTY;
var G__323008 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-product m1 m2)"], null);
var G__323010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323009,G__323010) : tailrecursion.hoplon.markdown.code_node.call(null,G__323009,G__323010));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323007,G__323008) : tailrecursion.hoplon.markdown.para_node.call(null,G__323007,G__323008));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323006;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323005;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323004;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323003;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__323001,G__323002) : tailrecursion.hoplon.td.call(null,G__323001,G__323002));
})();
var G__323000 = (function (){var G__323011 = cljs.core.PersistentArrayMap.EMPTY;
var G__323012 = (function (){var _STAR_references_STAR_323013 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323014 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323015 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323016 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323017 = cljs.core.PersistentArrayMap.EMPTY;
var G__323018 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Construct the product of ",(function (){var G__323019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m1"], null);
var G__323020 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323019,G__323020) : tailrecursion.hoplon.markdown.code_node.call(null,G__323019,G__323020));
})()," and ",(function (){var G__323021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m2"], null);
var G__323022 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323021,G__323022) : tailrecursion.hoplon.markdown.code_node.call(null,G__323021,G__323022));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323017,G__323018) : tailrecursion.hoplon.markdown.para_node.call(null,G__323017,G__323018));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323016;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323015;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323014;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323013;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__323011,G__323012) : tailrecursion.hoplon.td.call(null,G__323011,G__323012));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322998,G__322999,G__323000) : tailrecursion.hoplon.tr.call(null,G__322998,G__322999,G__323000));
})();
return (tailrecursion.hoplon.tbody.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.tbody.cljs$core$IFn$_invoke$arity$20(G__322767,G__322768,G__322769,G__322770,G__322771,G__322772,G__322773,G__322774,G__322775,G__322776,G__322777,G__322778,G__322779,G__322780,G__322781,G__322782,G__322783,G__322784,G__322785,G__322786) : tailrecursion.hoplon.tbody.call(null,G__322767,G__322768,G__322769,G__322770,G__322771,G__322772,G__322773,G__322774,G__322775,G__322776,G__322777,G__322778,G__322779,G__322780,G__322781,G__322782,G__322783,G__322784,G__322785,G__322786));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$2(G__322765,G__322766) : tailrecursion.hoplon.table.call(null,G__322765,G__322766));
})(),"",(function (){var _STAR_references_STAR_323023 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323024 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323025 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323026 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323027 = cljs.core.PersistentArrayMap.EMPTY;
var G__323028 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these, and the primitive predicate ",(function (){var G__323029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"number?"], null);
var G__323030 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323029,G__323030) : tailrecursion.hoplon.markdown.code_node.call(null,G__323029,G__323030));
})(),", which identifies numbers, we can express the differentiation rules as the following procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323027,G__323028) : tailrecursion.hoplon.markdown.para_node.call(null,G__323027,G__323028));
})(),(function (){var G__323226 = (function (){var G__323227 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323228 = (function (){var G__323229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323230 = "(";
var G__323231 = (function (){var G__323326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323327 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323326,G__323327) : tailrecursion.hoplon.span.call(null,G__323326,G__323327));
})();
var G__323232 = (function (){var G__323328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323329 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323328,G__323329) : tailrecursion.hoplon.span.call(null,G__323328,G__323329));
})();
var G__323233 = " [";
var G__323234 = (function (){var G__323330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323331 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323330,G__323331) : tailrecursion.hoplon.span.call(null,G__323330,G__323331));
})();
var G__323235 = " ";
var G__323236 = (function (){var G__323332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323333 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323332,G__323333) : tailrecursion.hoplon.span.call(null,G__323332,G__323333));
})();
var G__323237 = "]\n  (";
var G__323238 = (function (){var G__323334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323335 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323334,G__323335) : tailrecursion.hoplon.span.call(null,G__323334,G__323335));
})();
var G__323239 = "(";
var G__323240 = (function (){var G__323336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323337 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323336,G__323337) : tailrecursion.hoplon.span.call(null,G__323336,G__323337));
})();
var G__323241 = " ";
var G__323242 = (function (){var G__323338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323339 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323338,G__323339) : tailrecursion.hoplon.span.call(null,G__323338,G__323339));
})();
var G__323243 = ") ";
var G__323244 = (function (){var G__323340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323341 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323340,G__323341) : tailrecursion.hoplon.span.call(null,G__323340,G__323341));
})();
var G__323245 = "\n        (";
var G__323246 = (function (){var G__323342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323343 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323342,G__323343) : tailrecursion.hoplon.span.call(null,G__323342,G__323343));
})();
var G__323247 = " ";
var G__323248 = (function (){var G__323344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323345 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323344,G__323345) : tailrecursion.hoplon.span.call(null,G__323344,G__323345));
})();
var G__323249 = ") (";
var G__323250 = (function (){var G__323346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323347 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323346,G__323347) : tailrecursion.hoplon.span.call(null,G__323346,G__323347));
})();
var G__323251 = "(";
var G__323252 = (function (){var G__323348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323349 = "same-variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323348,G__323349) : tailrecursion.hoplon.span.call(null,G__323348,G__323349));
})();
var G__323253 = " ";
var G__323254 = (function (){var G__323350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323351 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323350,G__323351) : tailrecursion.hoplon.span.call(null,G__323350,G__323351));
})();
var G__323255 = " ";
var G__323256 = (function (){var G__323352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323353 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323352,G__323353) : tailrecursion.hoplon.span.call(null,G__323352,G__323353));
})();
var G__323257 = ") \n                            ";
var G__323258 = (function (){var G__323354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323355 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323354,G__323355) : tailrecursion.hoplon.span.call(null,G__323354,G__323355));
})();
var G__323259 = " \n                            ";
var G__323260 = (function (){var G__323356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323357 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323356,G__323357) : tailrecursion.hoplon.span.call(null,G__323356,G__323357));
})();
var G__323261 = ")\n        (";
var G__323262 = (function (){var G__323358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323359 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323358,G__323359) : tailrecursion.hoplon.span.call(null,G__323358,G__323359));
})();
var G__323263 = " ";
var G__323264 = (function (){var G__323360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323361 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323360,G__323361) : tailrecursion.hoplon.span.call(null,G__323360,G__323361));
})();
var G__323265 = ") (";
var G__323266 = (function (){var G__323362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323363 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323362,G__323363) : tailrecursion.hoplon.span.call(null,G__323362,G__323363));
})();
var G__323267 = "\n                     (";
var G__323268 = (function (){var G__323364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323365 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323364,G__323365) : tailrecursion.hoplon.span.call(null,G__323364,G__323365));
})();
var G__323269 = " (";
var G__323270 = (function (){var G__323366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323367 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323366,G__323367) : tailrecursion.hoplon.span.call(null,G__323366,G__323367));
})();
var G__323271 = " ";
var G__323272 = (function (){var G__323368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323369 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323368,G__323369) : tailrecursion.hoplon.span.call(null,G__323368,G__323369));
})();
var G__323273 = ") ";
var G__323274 = (function (){var G__323370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323371 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323370,G__323371) : tailrecursion.hoplon.span.call(null,G__323370,G__323371));
})();
var G__323275 = ")\n                     (";
var G__323276 = (function (){var G__323372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323373 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323372,G__323373) : tailrecursion.hoplon.span.call(null,G__323372,G__323373));
})();
var G__323277 = " (";
var G__323278 = (function (){var G__323374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323375 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323374,G__323375) : tailrecursion.hoplon.span.call(null,G__323374,G__323375));
})();
var G__323279 = " ";
var G__323280 = (function (){var G__323376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323377 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323376,G__323377) : tailrecursion.hoplon.span.call(null,G__323376,G__323377));
})();
var G__323281 = ") ";
var G__323282 = (function (){var G__323378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323379 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323378,G__323379) : tailrecursion.hoplon.span.call(null,G__323378,G__323379));
})();
var G__323283 = "))\n        (";
var G__323284 = (function (){var G__323380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323381 = "product?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323380,G__323381) : tailrecursion.hoplon.span.call(null,G__323380,G__323381));
})();
var G__323285 = " ";
var G__323286 = (function (){var G__323382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323383 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323382,G__323383) : tailrecursion.hoplon.span.call(null,G__323382,G__323383));
})();
var G__323287 = ") (";
var G__323288 = (function (){var G__323384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323385 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323384,G__323385) : tailrecursion.hoplon.span.call(null,G__323384,G__323385));
})();
var G__323289 = "\n                         (";
var G__323290 = (function (){var G__323386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323387 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323386,G__323387) : tailrecursion.hoplon.span.call(null,G__323386,G__323387));
})();
var G__323291 = " (";
var G__323292 = (function (){var G__323388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323389 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323388,G__323389) : tailrecursion.hoplon.span.call(null,G__323388,G__323389));
})();
var G__323293 = " ";
var G__323294 = (function (){var G__323390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323391 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323390,G__323391) : tailrecursion.hoplon.span.call(null,G__323390,G__323391));
})();
var G__323295 = ")\n                                       (";
var G__323296 = (function (){var G__323392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323393 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323392,G__323393) : tailrecursion.hoplon.span.call(null,G__323392,G__323393));
})();
var G__323297 = " (";
var G__323298 = (function (){var G__323394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323395 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323394,G__323395) : tailrecursion.hoplon.span.call(null,G__323394,G__323395));
})();
var G__323299 = " ";
var G__323300 = (function (){var G__323396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323397 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323396,G__323397) : tailrecursion.hoplon.span.call(null,G__323396,G__323397));
})();
var G__323301 = ") ";
var G__323302 = (function (){var G__323398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323399 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323398,G__323399) : tailrecursion.hoplon.span.call(null,G__323398,G__323399));
})();
var G__323303 = "))\n                         (";
var G__323304 = (function (){var G__323400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323401 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323400,G__323401) : tailrecursion.hoplon.span.call(null,G__323400,G__323401));
})();
var G__323305 = " (";
var G__323306 = (function (){var G__323402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323403 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323402,G__323403) : tailrecursion.hoplon.span.call(null,G__323402,G__323403));
})();
var G__323307 = " ";
var G__323308 = (function (){var G__323404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323405 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323404,G__323405) : tailrecursion.hoplon.span.call(null,G__323404,G__323405));
})();
var G__323309 = ")\n                                       (";
var G__323310 = (function (){var G__323406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323407 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323406,G__323407) : tailrecursion.hoplon.span.call(null,G__323406,G__323407));
})();
var G__323311 = " (";
var G__323312 = (function (){var G__323408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323409 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323408,G__323409) : tailrecursion.hoplon.span.call(null,G__323408,G__323409));
})();
var G__323313 = " ";
var G__323314 = (function (){var G__323410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323411 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323410,G__323411) : tailrecursion.hoplon.span.call(null,G__323410,G__323411));
})();
var G__323315 = ") ";
var G__323316 = (function (){var G__323412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323413 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323412,G__323413) : tailrecursion.hoplon.span.call(null,G__323412,G__323413));
})();
var G__323317 = ")))\n        ";
var G__323318 = (function (){var G__323414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323415 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323414,G__323415) : tailrecursion.hoplon.span.call(null,G__323414,G__323415));
})();
var G__323319 = " (";
var G__323320 = (function (){var G__323416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323417 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323416,G__323417) : tailrecursion.hoplon.span.call(null,G__323416,G__323417));
})();
var G__323321 = " (";
var G__323322 = (function (){var G__323418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323419 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323418,G__323419) : tailrecursion.hoplon.span.call(null,G__323418,G__323419));
})();
var G__323323 = " ";
var G__323324 = (function (){var G__323420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__323421 = "\"Unknown expression type -- DERIV\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323420,G__323421) : tailrecursion.hoplon.span.call(null,G__323420,G__323421));
})();
var G__323325 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97(G__323229,G__323230,G__323231,G__323232,G__323233,G__323234,G__323235,G__323236,G__323237,G__323238,G__323239,G__323240,G__323241,G__323242,G__323243,G__323244,G__323245,G__323246,G__323247,G__323248,G__323249,G__323250,G__323251,G__323252,G__323253,G__323254,G__323255,G__323256,G__323257,G__323258,G__323259,G__323260,G__323261,G__323262,G__323263,G__323264,G__323265,G__323266,G__323267,G__323268,G__323269,G__323270,G__323271,G__323272,G__323273,G__323274,G__323275,G__323276,G__323277,G__323278,G__323279,G__323280,G__323281,G__323282,G__323283,G__323284,G__323285,G__323286,G__323287,G__323288,G__323289,G__323290,G__323291,G__323292,G__323293,G__323294,G__323295,G__323296,G__323297,G__323298,G__323299,G__323300,G__323301,G__323302,G__323303,G__323304,G__323305,G__323306,G__323307,G__323308,G__323309,G__323310,G__323311,G__323312,G__323313,G__323314,G__323315,G__323316,G__323317,G__323318,G__323319,G__323320,G__323321,G__323322,G__323323,G__323324,G__323325) : tailrecursion.hoplon.pre.call(null,G__323229,G__323230,G__323231,G__323232,G__323233,G__323234,G__323235,G__323236,G__323237,G__323238,G__323239,G__323240,G__323241,G__323242,G__323243,G__323244,G__323245,G__323246,G__323247,G__323248,G__323249,G__323250,G__323251,G__323252,G__323253,G__323254,G__323255,G__323256,G__323257,G__323258,G__323259,G__323260,G__323261,G__323262,G__323263,G__323264,G__323265,G__323266,G__323267,G__323268,G__323269,G__323270,G__323271,G__323272,G__323273,G__323274,G__323275,G__323276,G__323277,G__323278,G__323279,G__323280,G__323281,G__323282,G__323283,G__323284,G__323285,G__323286,G__323287,G__323288,G__323289,G__323290,G__323291,G__323292,G__323293,G__323294,G__323295,G__323296,G__323297,G__323298,G__323299,G__323300,G__323301,G__323302,G__323303,G__323304,G__323305,G__323306,G__323307,G__323308,G__323309,G__323310,G__323311,G__323312,G__323313,G__323314,G__323315,G__323316,G__323317,G__323318,G__323319,G__323320,G__323321,G__323322,G__323323,G__323324,G__323325));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323227,G__323228) : tailrecursion.hoplon.div.call(null,G__323227,G__323228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323226) : tailrecursion.hoplon.div.call(null,G__323226));
})(),(function (){var G__323422 = cljs.core.PersistentArrayMap.EMPTY;
var G__323423 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This ",(function (){var G__323424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__323425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323424,G__323425) : tailrecursion.hoplon.markdown.code_node.call(null,G__323424,G__323425));
})()," procedure inforporates the complete differentiation algorithm. Since it is expressed in terms of abstract data, it will work no matter how we choose to represent algebraic expressions, as long as we design a proper set of selectors and constructors. This is the issue we must address next."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323422,G__323423) : tailrecursion.hoplon.markdown.para_node.call(null,G__323422,G__323423));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323026;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323025;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323024;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323023;
}})()], 0));
var G__320059 = "";
var G__320060 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Algebraic Expressions"], null),(function (){var _STAR_references_STAR_323426 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323427 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323428 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323429 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323430 = cljs.core.PersistentArrayMap.EMPTY;
var G__323431 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can imagine ways to use list structure to represent algebraic expressions. For example, we could use lists of symbols that mirror the usual algebraic notation, representing \\(ax+b\\) as the list ",(function (){var G__323432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(a * x +\nb)"], null);
var G__323433 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323432,G__323433) : tailrecursion.hoplon.markdown.code_node.call(null,G__323432,G__323433));
})(),". However, one especially straightforward choice is to use the same parenthesized prefix notation that Lisp uses for combinations: that is, to represent \\(ax+b\\) as ",(function (){var G__323434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (* a x) b)"], null);
var G__323435 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323434,G__323435) : tailrecursion.hoplon.markdown.code_node.call(null,G__323434,G__323435));
})(),". Then our data representation for the differentiation problem is as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323430,G__323431) : tailrecursion.hoplon.markdown.para_node.call(null,G__323430,G__323431));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323429;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323428;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323427;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323426;
}})(),"",(function (){var G__323436 = cljs.core.PersistentArrayMap.EMPTY;
var G__323437 = (function (){var G__323455 = cljs.core.PersistentArrayMap.EMPTY;
var G__323456 = (function (){var _STAR_references_STAR_323457 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323458 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323461 = cljs.core.PersistentArrayMap.EMPTY;
var G__323462 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The variables are symbols. They are identified by the primitive predicate ",(function (){var G__323463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbol?"], null);
var G__323464 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323463,G__323464) : tailrecursion.hoplon.markdown.code_node.call(null,G__323463,G__323464));
})(),": "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323461,G__323462) : tailrecursion.hoplon.markdown.para_node.call(null,G__323461,G__323462));
})(),(function (){var G__323487 = (function (){var G__323488 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323489 = (function (){var G__323490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323491 = "(";
var G__323492 = (function (){var G__323500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323501 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323500,G__323501) : tailrecursion.hoplon.span.call(null,G__323500,G__323501));
})();
var G__323493 = (function (){var G__323502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323503 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323502,G__323503) : tailrecursion.hoplon.span.call(null,G__323502,G__323503));
})();
var G__323494 = " [";
var G__323495 = (function (){var G__323504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323505 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323504,G__323505) : tailrecursion.hoplon.span.call(null,G__323504,G__323505));
})();
var G__323496 = "]\n  (";
var G__323497 = (function (){var G__323506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323507 = "symbol? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323506,G__323507) : tailrecursion.hoplon.span.call(null,G__323506,G__323507));
})();
var G__323498 = (function (){var G__323508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323509 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323508,G__323509) : tailrecursion.hoplon.span.call(null,G__323508,G__323509));
})();
var G__323499 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__323490,G__323491,G__323492,G__323493,G__323494,G__323495,G__323496,G__323497,G__323498,G__323499) : tailrecursion.hoplon.pre.call(null,G__323490,G__323491,G__323492,G__323493,G__323494,G__323495,G__323496,G__323497,G__323498,G__323499));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323488,G__323489) : tailrecursion.hoplon.div.call(null,G__323488,G__323489));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323487) : tailrecursion.hoplon.div.call(null,G__323487));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323459;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323458;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323457;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323455,G__323456) : tailrecursion.hoplon.li.call(null,G__323455,G__323456));
})();
var G__323438 = "";
var G__323439 = (function (){var G__323510 = cljs.core.PersistentArrayMap.EMPTY;
var G__323511 = (function (){var _STAR_references_STAR_323512 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323513 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323514 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323515 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323516 = cljs.core.PersistentArrayMap.EMPTY;
var G__323517 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Two variables are the same if the symbols representing them are ",(function (){var G__323518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__323519 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323518,G__323519) : tailrecursion.hoplon.markdown.code_node.call(null,G__323518,G__323519));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323516,G__323517) : tailrecursion.hoplon.markdown.para_node.call(null,G__323516,G__323517));
})(),(function (){var G__323570 = (function (){var G__323571 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323572 = (function (){var G__323573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323574 = "(";
var G__323575 = (function (){var G__323597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323598 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323597,G__323598) : tailrecursion.hoplon.span.call(null,G__323597,G__323598));
})();
var G__323576 = (function (){var G__323599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323600 = "same-variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323599,G__323600) : tailrecursion.hoplon.span.call(null,G__323599,G__323600));
})();
var G__323577 = " [";
var G__323578 = (function (){var G__323601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323602 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323601,G__323602) : tailrecursion.hoplon.span.call(null,G__323601,G__323602));
})();
var G__323579 = " ";
var G__323580 = (function (){var G__323603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323604 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323603,G__323604) : tailrecursion.hoplon.span.call(null,G__323603,G__323604));
})();
var G__323581 = "]\n  (";
var G__323582 = (function (){var G__323605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323606 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323605,G__323606) : tailrecursion.hoplon.span.call(null,G__323605,G__323606));
})();
var G__323583 = "(";
var G__323584 = (function (){var G__323607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323608 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323607,G__323608) : tailrecursion.hoplon.span.call(null,G__323607,G__323608));
})();
var G__323585 = " ";
var G__323586 = (function (){var G__323609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323610 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323609,G__323610) : tailrecursion.hoplon.span.call(null,G__323609,G__323610));
})();
var G__323587 = ")\n       (";
var G__323588 = (function (){var G__323611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323612 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323611,G__323612) : tailrecursion.hoplon.span.call(null,G__323611,G__323612));
})();
var G__323589 = " ";
var G__323590 = (function (){var G__323613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323614 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323613,G__323614) : tailrecursion.hoplon.span.call(null,G__323613,G__323614));
})();
var G__323591 = ")\n       (";
var G__323592 = (function (){var G__323615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323616 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323615,G__323616) : tailrecursion.hoplon.span.call(null,G__323615,G__323616));
})();
var G__323593 = (function (){var G__323617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323618 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323617,G__323618) : tailrecursion.hoplon.span.call(null,G__323617,G__323618));
})();
var G__323594 = " ";
var G__323595 = (function (){var G__323619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323620 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323619,G__323620) : tailrecursion.hoplon.span.call(null,G__323619,G__323620));
})();
var G__323596 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__323573,G__323574,G__323575,G__323576,G__323577,G__323578,G__323579,G__323580,G__323581,G__323582,G__323583,G__323584,G__323585,G__323586,G__323587,G__323588,G__323589,G__323590,G__323591,G__323592,G__323593,G__323594,G__323595,G__323596) : tailrecursion.hoplon.pre.call(null,G__323573,G__323574,G__323575,G__323576,G__323577,G__323578,G__323579,G__323580,G__323581,G__323582,G__323583,G__323584,G__323585,G__323586,G__323587,G__323588,G__323589,G__323590,G__323591,G__323592,G__323593,G__323594,G__323595,G__323596));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323571,G__323572) : tailrecursion.hoplon.div.call(null,G__323571,G__323572));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323570) : tailrecursion.hoplon.div.call(null,G__323570));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323515;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323514;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323513;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323512;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323510,G__323511) : tailrecursion.hoplon.li.call(null,G__323510,G__323511));
})();
var G__323440 = "";
var G__323441 = (function (){var G__323621 = cljs.core.PersistentArrayMap.EMPTY;
var G__323622 = (function (){var _STAR_references_STAR_323623 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323624 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323625 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323626 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323627 = cljs.core.PersistentArrayMap.EMPTY;
var G__323628 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sums and products are constructed as lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323627,G__323628) : tailrecursion.hoplon.markdown.para_node.call(null,G__323627,G__323628));
})(),(function (){var G__323693 = (function (){var G__323694 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323695 = (function (){var G__323696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323697 = "(";
var G__323698 = (function (){var G__323726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323727 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323726,G__323727) : tailrecursion.hoplon.span.call(null,G__323726,G__323727));
})();
var G__323699 = (function (){var G__323728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323729 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323728,G__323729) : tailrecursion.hoplon.span.call(null,G__323728,G__323729));
})();
var G__323700 = " [";
var G__323701 = (function (){var G__323730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323731 = "a1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323730,G__323731) : tailrecursion.hoplon.span.call(null,G__323730,G__323731));
})();
var G__323702 = " ";
var G__323703 = (function (){var G__323732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323733 = "a2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323732,G__323733) : tailrecursion.hoplon.span.call(null,G__323732,G__323733));
})();
var G__323704 = "]\n  (";
var G__323705 = (function (){var G__323734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323735 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323734,G__323735) : tailrecursion.hoplon.span.call(null,G__323734,G__323735));
})();
var G__323706 = (function (){var G__323736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323737 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323736,G__323737) : tailrecursion.hoplon.span.call(null,G__323736,G__323737));
})();
var G__323707 = " ";
var G__323708 = (function (){var G__323738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323739 = "a1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323738,G__323739) : tailrecursion.hoplon.span.call(null,G__323738,G__323739));
})();
var G__323709 = " ";
var G__323710 = (function (){var G__323740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323741 = "a2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323740,G__323741) : tailrecursion.hoplon.span.call(null,G__323740,G__323741));
})();
var G__323711 = "))\n(";
var G__323712 = (function (){var G__323742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323743 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323742,G__323743) : tailrecursion.hoplon.span.call(null,G__323742,G__323743));
})();
var G__323713 = (function (){var G__323744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323745 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323744,G__323745) : tailrecursion.hoplon.span.call(null,G__323744,G__323745));
})();
var G__323714 = " [";
var G__323715 = (function (){var G__323746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323747 = "m1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323746,G__323747) : tailrecursion.hoplon.span.call(null,G__323746,G__323747));
})();
var G__323716 = " ";
var G__323717 = (function (){var G__323748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323749 = "m2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323748,G__323749) : tailrecursion.hoplon.span.call(null,G__323748,G__323749));
})();
var G__323718 = "]\n  (";
var G__323719 = (function (){var G__323750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323751 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323750,G__323751) : tailrecursion.hoplon.span.call(null,G__323750,G__323751));
})();
var G__323720 = (function (){var G__323752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323753 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323752,G__323753) : tailrecursion.hoplon.span.call(null,G__323752,G__323753));
})();
var G__323721 = " ";
var G__323722 = (function (){var G__323754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323755 = "m1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323754,G__323755) : tailrecursion.hoplon.span.call(null,G__323754,G__323755));
})();
var G__323723 = " ";
var G__323724 = (function (){var G__323756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323757 = "m2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323756,G__323757) : tailrecursion.hoplon.span.call(null,G__323756,G__323757));
})();
var G__323725 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__323696,G__323697,G__323698,G__323699,G__323700,G__323701,G__323702,G__323703,G__323704,G__323705,G__323706,G__323707,G__323708,G__323709,G__323710,G__323711,G__323712,G__323713,G__323714,G__323715,G__323716,G__323717,G__323718,G__323719,G__323720,G__323721,G__323722,G__323723,G__323724,G__323725) : tailrecursion.hoplon.pre.call(null,G__323696,G__323697,G__323698,G__323699,G__323700,G__323701,G__323702,G__323703,G__323704,G__323705,G__323706,G__323707,G__323708,G__323709,G__323710,G__323711,G__323712,G__323713,G__323714,G__323715,G__323716,G__323717,G__323718,G__323719,G__323720,G__323721,G__323722,G__323723,G__323724,G__323725));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323694,G__323695) : tailrecursion.hoplon.div.call(null,G__323694,G__323695));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323693) : tailrecursion.hoplon.div.call(null,G__323693));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323626;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323625;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323624;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323623;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323621,G__323622) : tailrecursion.hoplon.li.call(null,G__323621,G__323622));
})();
var G__323442 = "";
var G__323443 = (function (){var G__323758 = cljs.core.PersistentArrayMap.EMPTY;
var G__323759 = (function (){var _STAR_references_STAR_323760 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323761 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323762 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323763 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323764 = cljs.core.PersistentArrayMap.EMPTY;
var G__323765 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A sum is a list whose first element is the symbol ",(function (){var G__323766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__323767 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323766,G__323767) : tailrecursion.hoplon.markdown.code_node.call(null,G__323766,G__323767));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323764,G__323765) : tailrecursion.hoplon.markdown.para_node.call(null,G__323764,G__323765));
})(),(function (){var G__323809 = (function (){var G__323810 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323811 = (function (){var G__323812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323813 = "(";
var G__323814 = (function (){var G__323831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323832 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323831,G__323832) : tailrecursion.hoplon.span.call(null,G__323831,G__323832));
})();
var G__323815 = (function (){var G__323833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323834 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323833,G__323834) : tailrecursion.hoplon.span.call(null,G__323833,G__323834));
})();
var G__323816 = " [";
var G__323817 = (function (){var G__323835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323836 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323835,G__323836) : tailrecursion.hoplon.span.call(null,G__323835,G__323836));
})();
var G__323818 = "]\n  (";
var G__323819 = (function (){var G__323837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323838 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323837,G__323838) : tailrecursion.hoplon.span.call(null,G__323837,G__323838));
})();
var G__323820 = "(";
var G__323821 = (function (){var G__323839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323840 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323839,G__323840) : tailrecursion.hoplon.span.call(null,G__323839,G__323840));
})();
var G__323822 = (function (){var G__323841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323842 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323841,G__323842) : tailrecursion.hoplon.span.call(null,G__323841,G__323842));
})();
var G__323823 = ")\n       (";
var G__323824 = (function (){var G__323843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323844 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323843,G__323844) : tailrecursion.hoplon.span.call(null,G__323843,G__323844));
})();
var G__323825 = "(";
var G__323826 = (function (){var G__323845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323846 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323845,G__323846) : tailrecursion.hoplon.span.call(null,G__323845,G__323846));
})();
var G__323827 = (function (){var G__323847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323848 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323847,G__323848) : tailrecursion.hoplon.span.call(null,G__323847,G__323848));
})();
var G__323828 = ") ";
var G__323829 = (function (){var G__323849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323850 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323849,G__323850) : tailrecursion.hoplon.span.call(null,G__323849,G__323850));
})();
var G__323830 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__323812,G__323813,G__323814,G__323815,G__323816,G__323817,G__323818,G__323819,G__323820,G__323821,G__323822,G__323823,G__323824,G__323825,G__323826,G__323827,G__323828,G__323829,G__323830) : tailrecursion.hoplon.pre.call(null,G__323812,G__323813,G__323814,G__323815,G__323816,G__323817,G__323818,G__323819,G__323820,G__323821,G__323822,G__323823,G__323824,G__323825,G__323826,G__323827,G__323828,G__323829,G__323830));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323810,G__323811) : tailrecursion.hoplon.div.call(null,G__323810,G__323811));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323809) : tailrecursion.hoplon.div.call(null,G__323809));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323763;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323762;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323761;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323760;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323758,G__323759) : tailrecursion.hoplon.li.call(null,G__323758,G__323759));
})();
var G__323444 = "";
var G__323445 = (function (){var G__323851 = cljs.core.PersistentArrayMap.EMPTY;
var G__323852 = (function (){var _STAR_references_STAR_323853 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323854 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323855 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323856 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323857 = cljs.core.PersistentArrayMap.EMPTY;
var G__323858 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The addend is the second term of the sum list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323857,G__323858) : tailrecursion.hoplon.markdown.para_node.call(null,G__323857,G__323858));
})(),(function (){var G__323881 = (function (){var G__323882 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323883 = (function (){var G__323884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323885 = "(";
var G__323886 = (function (){var G__323894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323895 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323894,G__323895) : tailrecursion.hoplon.span.call(null,G__323894,G__323895));
})();
var G__323887 = (function (){var G__323896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323897 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323896,G__323897) : tailrecursion.hoplon.span.call(null,G__323896,G__323897));
})();
var G__323888 = " [";
var G__323889 = (function (){var G__323898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323899 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323898,G__323899) : tailrecursion.hoplon.span.call(null,G__323898,G__323899));
})();
var G__323890 = "]\n  (";
var G__323891 = (function (){var G__323900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323901 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323900,G__323901) : tailrecursion.hoplon.span.call(null,G__323900,G__323901));
})();
var G__323892 = (function (){var G__323902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323903 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323902,G__323903) : tailrecursion.hoplon.span.call(null,G__323902,G__323903));
})();
var G__323893 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__323884,G__323885,G__323886,G__323887,G__323888,G__323889,G__323890,G__323891,G__323892,G__323893) : tailrecursion.hoplon.pre.call(null,G__323884,G__323885,G__323886,G__323887,G__323888,G__323889,G__323890,G__323891,G__323892,G__323893));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323882,G__323883) : tailrecursion.hoplon.div.call(null,G__323882,G__323883));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323881) : tailrecursion.hoplon.div.call(null,G__323881));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323856;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323855;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323854;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323853;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323851,G__323852) : tailrecursion.hoplon.li.call(null,G__323851,G__323852));
})();
var G__323446 = "";
var G__323447 = (function (){var G__323904 = cljs.core.PersistentArrayMap.EMPTY;
var G__323905 = (function (){var _STAR_references_STAR_323906 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323907 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323908 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323909 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323910 = cljs.core.PersistentArrayMap.EMPTY;
var G__323911 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The augend is the third term of the sum list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323910,G__323911) : tailrecursion.hoplon.markdown.para_node.call(null,G__323910,G__323911));
})(),(function (){var G__323938 = (function (){var G__323939 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323940 = (function (){var G__323941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323942 = "(";
var G__323943 = (function (){var G__323953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323954 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323953,G__323954) : tailrecursion.hoplon.span.call(null,G__323953,G__323954));
})();
var G__323944 = (function (){var G__323955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323956 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323955,G__323956) : tailrecursion.hoplon.span.call(null,G__323955,G__323956));
})();
var G__323945 = " [";
var G__323946 = (function (){var G__323957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323958 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323957,G__323958) : tailrecursion.hoplon.span.call(null,G__323957,G__323958));
})();
var G__323947 = "]\n  (";
var G__323948 = (function (){var G__323959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323960 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323959,G__323960) : tailrecursion.hoplon.span.call(null,G__323959,G__323960));
})();
var G__323949 = (function (){var G__323961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323962 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323961,G__323962) : tailrecursion.hoplon.span.call(null,G__323961,G__323962));
})();
var G__323950 = " ";
var G__323951 = (function (){var G__323963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323964 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323963,G__323964) : tailrecursion.hoplon.span.call(null,G__323963,G__323964));
})();
var G__323952 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__323941,G__323942,G__323943,G__323944,G__323945,G__323946,G__323947,G__323948,G__323949,G__323950,G__323951,G__323952) : tailrecursion.hoplon.pre.call(null,G__323941,G__323942,G__323943,G__323944,G__323945,G__323946,G__323947,G__323948,G__323949,G__323950,G__323951,G__323952));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323939,G__323940) : tailrecursion.hoplon.div.call(null,G__323939,G__323940));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323938) : tailrecursion.hoplon.div.call(null,G__323938));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323909;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323908;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323907;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323906;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323904,G__323905) : tailrecursion.hoplon.li.call(null,G__323904,G__323905));
})();
var G__323448 = "";
var G__323449 = (function (){var G__323965 = cljs.core.PersistentArrayMap.EMPTY;
var G__323966 = (function (){var _STAR_references_STAR_323967 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323968 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323969 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323970 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323971 = cljs.core.PersistentArrayMap.EMPTY;
var G__323972 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A product is a list whose first element is the symbol ",(function (){var G__323973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__323974 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323973,G__323974) : tailrecursion.hoplon.markdown.code_node.call(null,G__323973,G__323974));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323971,G__323972) : tailrecursion.hoplon.markdown.para_node.call(null,G__323971,G__323972));
})(),(function (){var G__324016 = (function (){var G__324017 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324018 = (function (){var G__324019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324020 = "(";
var G__324021 = (function (){var G__324038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324039 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324038,G__324039) : tailrecursion.hoplon.span.call(null,G__324038,G__324039));
})();
var G__324022 = (function (){var G__324040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324041 = "product?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324040,G__324041) : tailrecursion.hoplon.span.call(null,G__324040,G__324041));
})();
var G__324023 = " [";
var G__324024 = (function (){var G__324042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324043 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324042,G__324043) : tailrecursion.hoplon.span.call(null,G__324042,G__324043));
})();
var G__324025 = "]\n  (";
var G__324026 = (function (){var G__324044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324045 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324044,G__324045) : tailrecursion.hoplon.span.call(null,G__324044,G__324045));
})();
var G__324027 = "(";
var G__324028 = (function (){var G__324046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324047 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324046,G__324047) : tailrecursion.hoplon.span.call(null,G__324046,G__324047));
})();
var G__324029 = (function (){var G__324048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324049 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324048,G__324049) : tailrecursion.hoplon.span.call(null,G__324048,G__324049));
})();
var G__324030 = ")\n       (";
var G__324031 = (function (){var G__324050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324051 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324050,G__324051) : tailrecursion.hoplon.span.call(null,G__324050,G__324051));
})();
var G__324032 = "(";
var G__324033 = (function (){var G__324052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324053 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324052,G__324053) : tailrecursion.hoplon.span.call(null,G__324052,G__324053));
})();
var G__324034 = (function (){var G__324054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324055 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324054,G__324055) : tailrecursion.hoplon.span.call(null,G__324054,G__324055));
})();
var G__324035 = ") ";
var G__324036 = (function (){var G__324056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324057 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324056,G__324057) : tailrecursion.hoplon.span.call(null,G__324056,G__324057));
})();
var G__324037 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__324019,G__324020,G__324021,G__324022,G__324023,G__324024,G__324025,G__324026,G__324027,G__324028,G__324029,G__324030,G__324031,G__324032,G__324033,G__324034,G__324035,G__324036,G__324037) : tailrecursion.hoplon.pre.call(null,G__324019,G__324020,G__324021,G__324022,G__324023,G__324024,G__324025,G__324026,G__324027,G__324028,G__324029,G__324030,G__324031,G__324032,G__324033,G__324034,G__324035,G__324036,G__324037));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324017,G__324018) : tailrecursion.hoplon.div.call(null,G__324017,G__324018));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324016) : tailrecursion.hoplon.div.call(null,G__324016));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323970;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323969;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323968;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323967;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323965,G__323966) : tailrecursion.hoplon.li.call(null,G__323965,G__323966));
})();
var G__323450 = "";
var G__323451 = (function (){var G__324058 = cljs.core.PersistentArrayMap.EMPTY;
var G__324059 = (function (){var _STAR_references_STAR_324060 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324061 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324062 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324063 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324064 = cljs.core.PersistentArrayMap.EMPTY;
var G__324065 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The multiplier is the second item of the product list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324064,G__324065) : tailrecursion.hoplon.markdown.para_node.call(null,G__324064,G__324065));
})(),(function (){var G__324088 = (function (){var G__324089 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324090 = (function (){var G__324091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324092 = "(";
var G__324093 = (function (){var G__324101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324102 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324101,G__324102) : tailrecursion.hoplon.span.call(null,G__324101,G__324102));
})();
var G__324094 = (function (){var G__324103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324104 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324103,G__324104) : tailrecursion.hoplon.span.call(null,G__324103,G__324104));
})();
var G__324095 = " [";
var G__324096 = (function (){var G__324105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324106 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324105,G__324106) : tailrecursion.hoplon.span.call(null,G__324105,G__324106));
})();
var G__324097 = "]\n  (";
var G__324098 = (function (){var G__324107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324108 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324107,G__324108) : tailrecursion.hoplon.span.call(null,G__324107,G__324108));
})();
var G__324099 = (function (){var G__324109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324110 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324109,G__324110) : tailrecursion.hoplon.span.call(null,G__324109,G__324110));
})();
var G__324100 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__324091,G__324092,G__324093,G__324094,G__324095,G__324096,G__324097,G__324098,G__324099,G__324100) : tailrecursion.hoplon.pre.call(null,G__324091,G__324092,G__324093,G__324094,G__324095,G__324096,G__324097,G__324098,G__324099,G__324100));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324089,G__324090) : tailrecursion.hoplon.div.call(null,G__324089,G__324090));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324088) : tailrecursion.hoplon.div.call(null,G__324088));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324063;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324062;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324061;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324060;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__324058,G__324059) : tailrecursion.hoplon.li.call(null,G__324058,G__324059));
})();
var G__323452 = "";
var G__323453 = (function (){var G__324111 = cljs.core.PersistentArrayMap.EMPTY;
var G__324112 = (function (){var _STAR_references_STAR_324113 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324114 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324115 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324116 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324117 = cljs.core.PersistentArrayMap.EMPTY;
var G__324118 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The multiplicand is the third item of the product list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324117,G__324118) : tailrecursion.hoplon.markdown.para_node.call(null,G__324117,G__324118));
})(),(function (){var G__324145 = (function (){var G__324146 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324147 = (function (){var G__324148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324149 = "(";
var G__324150 = (function (){var G__324160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324161 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324160,G__324161) : tailrecursion.hoplon.span.call(null,G__324160,G__324161));
})();
var G__324151 = (function (){var G__324162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324163 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324162,G__324163) : tailrecursion.hoplon.span.call(null,G__324162,G__324163));
})();
var G__324152 = " [";
var G__324153 = (function (){var G__324164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324165 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324164,G__324165) : tailrecursion.hoplon.span.call(null,G__324164,G__324165));
})();
var G__324154 = "]\n  (";
var G__324155 = (function (){var G__324166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324167 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324166,G__324167) : tailrecursion.hoplon.span.call(null,G__324166,G__324167));
})();
var G__324156 = (function (){var G__324168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324169 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324168,G__324169) : tailrecursion.hoplon.span.call(null,G__324168,G__324169));
})();
var G__324157 = " ";
var G__324158 = (function (){var G__324170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324171 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324170,G__324171) : tailrecursion.hoplon.span.call(null,G__324170,G__324171));
})();
var G__324159 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__324148,G__324149,G__324150,G__324151,G__324152,G__324153,G__324154,G__324155,G__324156,G__324157,G__324158,G__324159) : tailrecursion.hoplon.pre.call(null,G__324148,G__324149,G__324150,G__324151,G__324152,G__324153,G__324154,G__324155,G__324156,G__324157,G__324158,G__324159));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324146,G__324147) : tailrecursion.hoplon.div.call(null,G__324146,G__324147));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324145) : tailrecursion.hoplon.div.call(null,G__324145));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324116;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324115;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324114;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324113;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__324111,G__324112) : tailrecursion.hoplon.li.call(null,G__324111,G__324112));
})();
var G__323454 = "\nThus, we need only combine these with the algorithm as embodied by\n`deriv` in order to have a working symbolic differentiation program.\nLet us look at some examples of its behavior:\n\n```clj\n(deriv '(+ x 3) 'x)\n=> (+ 1 0)\n\n(deriv '(* x y) 'x)\n=> (+ (* x 0) (* 1 y))\n\n(deriv '(* (* x y) (+ x 3)) 'x)\n=> (+ (* (* x y) (+ 1 0))\n      (* (+ (* x 0) (* 1 y))\n         (+ x 3)))\n```\n\nThe program produces answers that are correct; however, they are\nunsimplified. It is true that\n\n$$\\frac{d(xy)}{dx}=x*0+1*y$$\n\nbut we would like the program to know that \\\\(x\\cdot0=0\\\\), \\\\(1\\cdot\ny=y\\\\), and \\\\(0+y=y\\\\). The answer for the second example should have\nbeen simply, \\\\(y\\\\). As the third example shows, this becomes a\nserious issue when the expressions are complex.\n\nOur difficulty is much like the one we encountered with the\nrational-number implementation: we haven't reduced answers to simplest\nform. To accomplish the rational-number reduction, we needed to change\nonly the constructors and the selectors of the implementation. We can\nadopt a similar strategy here. We won't change `deriv` at all.\nInstead, we will change `make-sum` so that if both summands are\nnumbers, `make-sum` will add them and return their sum. Also, if one of\nthe summands is 0, then `make-sum` will return the other summand.\n\n```clj\n(defn make-sum [a1 a2]\n  (cond (= a1 0) a2\n        (= a2 0) a1\n        (and (number? a1)\n             (number? a2)) (+ a1 a2)\n        :else (list '+ a1 a2)))\n```\n\nThis uses the procedure `=`, which, returns `true` if and only if the\ntwo arguments are of the same type and value. Since `0` is a number,\n`(= a1 0)` implies that `a1` must be a number as well. In the original\nSICP, they used a function `=number?` to accomplish this task. We do\nnot need this in Clojure.\n\nSimilarly, we will change `make-product` to build in the rules that 0\ntimes anything is 0 and 1 times anything is the thing itself:\n\n```clj\n(defn make-product [m1 m2]\n  (cond (or (= m1 0)\n            (= m2 0)) 0\n        (= m1 1) m2\n        (= m2 1) m1\n        (and (number? m1)\n             (number? m2)) (* m1 m2)\n        :else (list '* m1 m2)))\n```\n\nHere is how this version works on our three examples:\n\n```clj\n(deriv '(+ x 3) 'x)\n=> 1\n\n(deriv '(* x y) 'x)\n=> y\n\n(deriv '(* (* x y) (+ x 3)) 'x)\n=> (+ (* x y) (* y (+ x 3)))\n```\n\nAlthough this is quite an improvement, the third example shows that\nthere is still a long way to go before we get a program that puts\nexpressions into a form that we might agree is \"simplest.\" The problem\nof algebraic simplification is complex because, among other reasons, a\nform that may be simplest for one purpose may not be for another.";
return (tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$19(G__323436,G__323437,G__323438,G__323439,G__323440,G__323441,G__323442,G__323443,G__323444,G__323445,G__323446,G__323447,G__323448,G__323449,G__323450,G__323451,G__323452,G__323453,G__323454) : tailrecursion.hoplon.ul.call(null,G__323436,G__323437,G__323438,G__323439,G__323440,G__323441,G__323442,G__323443,G__323444,G__323445,G__323446,G__323447,G__323448,G__323449,G__323450,G__323451,G__323452,G__323453,G__323454));
})()], 0));
var G__320061 = "";
var G__320062 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_324172 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324173 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324174 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324175 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324176 = cljs.core.PersistentArrayMap.EMPTY;
var G__324177 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show how to extend the basic differentiator to handle more kinds of expressions. For instance, implement the differentiation rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324176,G__324177) : tailrecursion.hoplon.markdown.para_node.call(null,G__324176,G__324177));
})(),(function (){var G__324178 = cljs.core.PersistentArrayMap.EMPTY;
var G__324179 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{d(u^n)}{dx}=nu^{n-1}\\left(\\frac{du}{dx}\\right)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324178,G__324179) : tailrecursion.hoplon.markdown.para_node.call(null,G__324178,G__324179));
})(),(function (){var G__324180 = cljs.core.PersistentArrayMap.EMPTY;
var G__324181 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["by adding a new clause to the ",(function (){var G__324182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__324183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324182,G__324183) : tailrecursion.hoplon.markdown.code_node.call(null,G__324182,G__324183));
})()," program and defining appropriate procedures ",(function (){var G__324184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exponentiation?"], null);
var G__324185 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324184,G__324185) : tailrecursion.hoplon.markdown.code_node.call(null,G__324184,G__324185));
})(),", ",(function (){var G__324186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"base"], null);
var G__324187 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324186,G__324187) : tailrecursion.hoplon.markdown.code_node.call(null,G__324186,G__324187));
})(),", ",(function (){var G__324188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exponent"], null);
var G__324189 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324188,G__324189) : tailrecursion.hoplon.markdown.code_node.call(null,G__324188,G__324189));
})()," and ",(function (){var G__324190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-exponentiation"], null);
var G__324191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324190,G__324191) : tailrecursion.hoplon.markdown.code_node.call(null,G__324190,G__324191));
})(),". (You may use the symbol ",(function (){var G__324192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"**"], null);
var G__324193 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324192,G__324193) : tailrecursion.hoplon.markdown.code_node.call(null,G__324192,G__324193));
})()," to denote exponentiation.) Build in the rules that anything raised to the power 0 is 1, and anything raised to the power 1 is the thing itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324180,G__324181) : tailrecursion.hoplon.markdown.para_node.call(null,G__324180,G__324181));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324175;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324174;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324173;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324172;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_324194 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324195 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324196 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324197 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324198 = cljs.core.PersistentArrayMap.EMPTY;
var G__324199 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We must add the following clause to the definition of ",(function (){var G__324200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(deriv exp\nvar)"], null);
var G__324201 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324200,G__324201) : tailrecursion.hoplon.markdown.code_node.call(null,G__324200,G__324201));
})(),", where ",(function (){var G__324202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exp"], null);
var G__324203 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324202,G__324203) : tailrecursion.hoplon.markdown.code_node.call(null,G__324202,G__324203));
})()," refers to the expression, and ",(function (){var G__324204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"var"], null);
var G__324205 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324204,G__324205) : tailrecursion.hoplon.markdown.code_node.call(null,G__324204,G__324205));
})()," refers to the variable with which we are differentiating."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324198,G__324199) : tailrecursion.hoplon.markdown.para_node.call(null,G__324198,G__324199));
})(),(function (){var G__324277 = (function (){var G__324278 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324279 = (function (){var G__324280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324281 = "(";
var G__324282 = (function (){var G__324315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324316 = "exponentiation?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324315,G__324316) : tailrecursion.hoplon.span.call(null,G__324315,G__324316));
})();
var G__324283 = " ";
var G__324284 = (function (){var G__324317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324318 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324317,G__324318) : tailrecursion.hoplon.span.call(null,G__324317,G__324318));
})();
var G__324285 = ")\n(";
var G__324286 = (function (){var G__324319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324320 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324319,G__324320) : tailrecursion.hoplon.span.call(null,G__324319,G__324320));
})();
var G__324287 = " \n  (";
var G__324288 = (function (){var G__324321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324322 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324321,G__324322) : tailrecursion.hoplon.span.call(null,G__324321,G__324322));
})();
var G__324289 = " \n    (";
var G__324290 = (function (){var G__324323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324324 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324323,G__324324) : tailrecursion.hoplon.span.call(null,G__324323,G__324324));
})();
var G__324291 = " ";
var G__324292 = (function (){var G__324325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324326 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324325,G__324326) : tailrecursion.hoplon.span.call(null,G__324325,G__324326));
})();
var G__324293 = ")\n    (";
var G__324294 = (function (){var G__324327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324328 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324327,G__324328) : tailrecursion.hoplon.span.call(null,G__324327,G__324328));
})();
var G__324295 = " \n      (";
var G__324296 = (function (){var G__324329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324330 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324329,G__324330) : tailrecursion.hoplon.span.call(null,G__324329,G__324330));
})();
var G__324297 = " ";
var G__324298 = (function (){var G__324331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324332 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324331,G__324332) : tailrecursion.hoplon.span.call(null,G__324331,G__324332));
})();
var G__324299 = ") \n      (";
var G__324300 = (function (){var G__324333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324334 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324333,G__324334) : tailrecursion.hoplon.span.call(null,G__324333,G__324334));
})();
var G__324301 = " (";
var G__324302 = (function (){var G__324335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324336 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324335,G__324336) : tailrecursion.hoplon.span.call(null,G__324335,G__324336));
})();
var G__324303 = (function (){var G__324337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324338 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324337,G__324338) : tailrecursion.hoplon.span.call(null,G__324337,G__324338));
})();
var G__324304 = " ";
var G__324305 = (function (){var G__324339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324340 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324339,G__324340) : tailrecursion.hoplon.span.call(null,G__324339,G__324340));
})();
var G__324306 = "))))\n  (";
var G__324307 = (function (){var G__324341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324342 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324341,G__324342) : tailrecursion.hoplon.span.call(null,G__324341,G__324342));
})();
var G__324308 = " (";
var G__324309 = (function (){var G__324343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324344 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324343,G__324344) : tailrecursion.hoplon.span.call(null,G__324343,G__324344));
})();
var G__324310 = " ";
var G__324311 = (function (){var G__324345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324346 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324345,G__324346) : tailrecursion.hoplon.span.call(null,G__324345,G__324346));
})();
var G__324312 = ") ";
var G__324313 = (function (){var G__324347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324348 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324347,G__324348) : tailrecursion.hoplon.span.call(null,G__324347,G__324348));
})();
var G__324314 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__324280,G__324281,G__324282,G__324283,G__324284,G__324285,G__324286,G__324287,G__324288,G__324289,G__324290,G__324291,G__324292,G__324293,G__324294,G__324295,G__324296,G__324297,G__324298,G__324299,G__324300,G__324301,G__324302,G__324303,G__324304,G__324305,G__324306,G__324307,G__324308,G__324309,G__324310,G__324311,G__324312,G__324313,G__324314) : tailrecursion.hoplon.pre.call(null,G__324280,G__324281,G__324282,G__324283,G__324284,G__324285,G__324286,G__324287,G__324288,G__324289,G__324290,G__324291,G__324292,G__324293,G__324294,G__324295,G__324296,G__324297,G__324298,G__324299,G__324300,G__324301,G__324302,G__324303,G__324304,G__324305,G__324306,G__324307,G__324308,G__324309,G__324310,G__324311,G__324312,G__324313,G__324314));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324278,G__324279) : tailrecursion.hoplon.div.call(null,G__324278,G__324279));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324277) : tailrecursion.hoplon.div.call(null,G__324277));
})(),(function (){var G__324449 = (function (){var G__324450 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324451 = (function (){var G__324452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324453 = "(";
var G__324454 = (function (){var G__324498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324499 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324498,G__324499) : tailrecursion.hoplon.span.call(null,G__324498,G__324499));
})();
var G__324455 = (function (){var G__324500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324501 = "exponentiation?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324500,G__324501) : tailrecursion.hoplon.span.call(null,G__324500,G__324501));
})();
var G__324456 = " [";
var G__324457 = (function (){var G__324502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324503 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324502,G__324503) : tailrecursion.hoplon.span.call(null,G__324502,G__324503));
})();
var G__324458 = "]\n  (";
var G__324459 = (function (){var G__324504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324505 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324504,G__324505) : tailrecursion.hoplon.span.call(null,G__324504,G__324505));
})();
var G__324460 = "(";
var G__324461 = (function (){var G__324506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324507 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324506,G__324507) : tailrecursion.hoplon.span.call(null,G__324506,G__324507));
})();
var G__324462 = (function (){var G__324508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324509 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324508,G__324509) : tailrecursion.hoplon.span.call(null,G__324508,G__324509));
})();
var G__324463 = ") ";
var G__324464 = (function (){var G__324510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324511 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324510,G__324511) : tailrecursion.hoplon.span.call(null,G__324510,G__324511));
})();
var G__324465 = "))\n\n(";
var G__324466 = (function (){var G__324512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324513 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324512,G__324513) : tailrecursion.hoplon.span.call(null,G__324512,G__324513));
})();
var G__324467 = (function (){var G__324514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324515 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324514,G__324515) : tailrecursion.hoplon.span.call(null,G__324514,G__324515));
})();
var G__324468 = " [";
var G__324469 = (function (){var G__324516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324517 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324516,G__324517) : tailrecursion.hoplon.span.call(null,G__324516,G__324517));
})();
var G__324470 = " ";
var G__324471 = (function (){var G__324518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324519 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324518,G__324519) : tailrecursion.hoplon.span.call(null,G__324518,G__324519));
})();
var G__324472 = "]\n  (";
var G__324473 = (function (){var G__324520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324521 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324520,G__324521) : tailrecursion.hoplon.span.call(null,G__324520,G__324521));
})();
var G__324474 = (function (){var G__324522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324523 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324522,G__324523) : tailrecursion.hoplon.span.call(null,G__324522,G__324523));
})();
var G__324475 = " ";
var G__324476 = (function (){var G__324524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324525 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324524,G__324525) : tailrecursion.hoplon.span.call(null,G__324524,G__324525));
})();
var G__324477 = " ";
var G__324478 = (function (){var G__324526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324527 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324526,G__324527) : tailrecursion.hoplon.span.call(null,G__324526,G__324527));
})();
var G__324479 = "))\n\n(";
var G__324480 = (function (){var G__324528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324529 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324528,G__324529) : tailrecursion.hoplon.span.call(null,G__324528,G__324529));
})();
var G__324481 = (function (){var G__324530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324531 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324530,G__324531) : tailrecursion.hoplon.span.call(null,G__324530,G__324531));
})();
var G__324482 = " [";
var G__324483 = (function (){var G__324532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324533 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324532,G__324533) : tailrecursion.hoplon.span.call(null,G__324532,G__324533));
})();
var G__324484 = "]\n  (";
var G__324485 = (function (){var G__324534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324535 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324534,G__324535) : tailrecursion.hoplon.span.call(null,G__324534,G__324535));
})();
var G__324486 = (function (){var G__324536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324537 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324536,G__324537) : tailrecursion.hoplon.span.call(null,G__324536,G__324537));
})();
var G__324487 = "))\n\n(";
var G__324488 = (function (){var G__324538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324539 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324538,G__324539) : tailrecursion.hoplon.span.call(null,G__324538,G__324539));
})();
var G__324489 = (function (){var G__324540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324541 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324540,G__324541) : tailrecursion.hoplon.span.call(null,G__324540,G__324541));
})();
var G__324490 = " [";
var G__324491 = (function (){var G__324542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324543 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324542,G__324543) : tailrecursion.hoplon.span.call(null,G__324542,G__324543));
})();
var G__324492 = "]\n  (";
var G__324493 = (function (){var G__324544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324545 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324544,G__324545) : tailrecursion.hoplon.span.call(null,G__324544,G__324545));
})();
var G__324494 = (function (){var G__324546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324547 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324546,G__324547) : tailrecursion.hoplon.span.call(null,G__324546,G__324547));
})();
var G__324495 = " ";
var G__324496 = (function (){var G__324548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324549 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324548,G__324549) : tailrecursion.hoplon.span.call(null,G__324548,G__324549));
})();
var G__324497 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__324452,G__324453,G__324454,G__324455,G__324456,G__324457,G__324458,G__324459,G__324460,G__324461,G__324462,G__324463,G__324464,G__324465,G__324466,G__324467,G__324468,G__324469,G__324470,G__324471,G__324472,G__324473,G__324474,G__324475,G__324476,G__324477,G__324478,G__324479,G__324480,G__324481,G__324482,G__324483,G__324484,G__324485,G__324486,G__324487,G__324488,G__324489,G__324490,G__324491,G__324492,G__324493,G__324494,G__324495,G__324496,G__324497) : tailrecursion.hoplon.pre.call(null,G__324452,G__324453,G__324454,G__324455,G__324456,G__324457,G__324458,G__324459,G__324460,G__324461,G__324462,G__324463,G__324464,G__324465,G__324466,G__324467,G__324468,G__324469,G__324470,G__324471,G__324472,G__324473,G__324474,G__324475,G__324476,G__324477,G__324478,G__324479,G__324480,G__324481,G__324482,G__324483,G__324484,G__324485,G__324486,G__324487,G__324488,G__324489,G__324490,G__324491,G__324492,G__324493,G__324494,G__324495,G__324496,G__324497));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324450,G__324451) : tailrecursion.hoplon.div.call(null,G__324450,G__324451));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324449) : tailrecursion.hoplon.div.call(null,G__324449));
})(),(function (){var G__324550 = cljs.core.PersistentArrayMap.EMPTY;
var G__324551 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But then we realize that we would like to include the simplification rules, so"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324550,G__324551) : tailrecursion.hoplon.markdown.para_node.call(null,G__324550,G__324551));
})(),(function (){var G__324656 = (function (){var G__324657 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324658 = (function (){var G__324659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324660 = "(";
var G__324661 = (function (){var G__324709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324710 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324709,G__324710) : tailrecursion.hoplon.span.call(null,G__324709,G__324710));
})();
var G__324662 = (function (){var G__324711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324712 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324711,G__324712) : tailrecursion.hoplon.span.call(null,G__324711,G__324712));
})();
var G__324663 = " [";
var G__324664 = (function (){var G__324713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324714 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324713,G__324714) : tailrecursion.hoplon.span.call(null,G__324713,G__324714));
})();
var G__324665 = " ";
var G__324666 = (function (){var G__324715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324716 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324715,G__324716) : tailrecursion.hoplon.span.call(null,G__324715,G__324716));
})();
var G__324667 = "]\n  (";
var G__324668 = (function (){var G__324717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324718 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324717,G__324718) : tailrecursion.hoplon.span.call(null,G__324717,G__324718));
})();
var G__324669 = "(";
var G__324670 = (function (){var G__324719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324720 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324719,G__324720) : tailrecursion.hoplon.span.call(null,G__324719,G__324720));
})();
var G__324671 = "(";
var G__324672 = (function (){var G__324721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324722 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324721,G__324722) : tailrecursion.hoplon.span.call(null,G__324721,G__324722));
})();
var G__324673 = " ";
var G__324674 = (function (){var G__324723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324724 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324723,G__324724) : tailrecursion.hoplon.span.call(null,G__324723,G__324724));
})();
var G__324675 = ")\n             (";
var G__324676 = (function (){var G__324725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324726 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324725,G__324726) : tailrecursion.hoplon.span.call(null,G__324725,G__324726));
})();
var G__324677 = " ";
var G__324678 = (function (){var G__324727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324728 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324727,G__324728) : tailrecursion.hoplon.span.call(null,G__324727,G__324728));
})();
var G__324679 = ")) (";
var G__324680 = (function (){var G__324729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324730 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324729,G__324730) : tailrecursion.hoplon.span.call(null,G__324729,G__324730));
})();
var G__324681 = " ";
var G__324682 = (function (){var G__324731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324732 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324731,G__324732) : tailrecursion.hoplon.span.call(null,G__324731,G__324732));
})();
var G__324683 = " ";
var G__324684 = (function (){var G__324733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324734 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324733,G__324734) : tailrecursion.hoplon.span.call(null,G__324733,G__324734));
})();
var G__324685 = ")\n        (";
var G__324686 = (function (){var G__324735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324736 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324735,G__324736) : tailrecursion.hoplon.span.call(null,G__324735,G__324736));
})();
var G__324687 = (function (){var G__324737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324738 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324737,G__324738) : tailrecursion.hoplon.span.call(null,G__324737,G__324738));
})();
var G__324688 = " ";
var G__324689 = (function (){var G__324739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324740 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324739,G__324740) : tailrecursion.hoplon.span.call(null,G__324739,G__324740));
})();
var G__324690 = ") ";
var G__324691 = (function (){var G__324741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324742 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324741,G__324742) : tailrecursion.hoplon.span.call(null,G__324741,G__324742));
})();
var G__324692 = "\n        (";
var G__324693 = (function (){var G__324743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324744 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324743,G__324744) : tailrecursion.hoplon.span.call(null,G__324743,G__324744));
})();
var G__324694 = (function (){var G__324745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324746 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324745,G__324746) : tailrecursion.hoplon.span.call(null,G__324745,G__324746));
})();
var G__324695 = " ";
var G__324696 = (function (){var G__324747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324748 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324747,G__324748) : tailrecursion.hoplon.span.call(null,G__324747,G__324748));
})();
var G__324697 = ") ";
var G__324698 = (function (){var G__324749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324750 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324749,G__324750) : tailrecursion.hoplon.span.call(null,G__324749,G__324750));
})();
var G__324699 = "\n        ";
var G__324700 = (function (){var G__324751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324752 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324751,G__324752) : tailrecursion.hoplon.span.call(null,G__324751,G__324752));
})();
var G__324701 = " (";
var G__324702 = (function (){var G__324753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324754 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324753,G__324754) : tailrecursion.hoplon.span.call(null,G__324753,G__324754));
})();
var G__324703 = (function (){var G__324755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324756 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324755,G__324756) : tailrecursion.hoplon.span.call(null,G__324755,G__324756));
})();
var G__324704 = " ";
var G__324705 = (function (){var G__324757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324758 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324757,G__324758) : tailrecursion.hoplon.span.call(null,G__324757,G__324758));
})();
var G__324706 = " ";
var G__324707 = (function (){var G__324759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324760 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324759,G__324760) : tailrecursion.hoplon.span.call(null,G__324759,G__324760));
})();
var G__324708 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50(G__324659,G__324660,G__324661,G__324662,G__324663,G__324664,G__324665,G__324666,G__324667,G__324668,G__324669,G__324670,G__324671,G__324672,G__324673,G__324674,G__324675,G__324676,G__324677,G__324678,G__324679,G__324680,G__324681,G__324682,G__324683,G__324684,G__324685,G__324686,G__324687,G__324688,G__324689,G__324690,G__324691,G__324692,G__324693,G__324694,G__324695,G__324696,G__324697,G__324698,G__324699,G__324700,G__324701,G__324702,G__324703,G__324704,G__324705,G__324706,G__324707,G__324708) : tailrecursion.hoplon.pre.call(null,G__324659,G__324660,G__324661,G__324662,G__324663,G__324664,G__324665,G__324666,G__324667,G__324668,G__324669,G__324670,G__324671,G__324672,G__324673,G__324674,G__324675,G__324676,G__324677,G__324678,G__324679,G__324680,G__324681,G__324682,G__324683,G__324684,G__324685,G__324686,G__324687,G__324688,G__324689,G__324690,G__324691,G__324692,G__324693,G__324694,G__324695,G__324696,G__324697,G__324698,G__324699,G__324700,G__324701,G__324702,G__324703,G__324704,G__324705,G__324706,G__324707,G__324708));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324657,G__324658) : tailrecursion.hoplon.div.call(null,G__324657,G__324658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324656) : tailrecursion.hoplon.div.call(null,G__324656));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324197;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324196;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324195;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324194;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_324761 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324762 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324763 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324764 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324765 = cljs.core.PersistentArrayMap.EMPTY;
var G__324766 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Extend the differentiation program to handle sums and products of arbitrary numbers of (two or more) terms. Then the last example above could be expressed as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324765,G__324766) : tailrecursion.hoplon.markdown.para_node.call(null,G__324765,G__324766));
})(),(function (){var G__324805 = (function (){var G__324806 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324807 = (function (){var G__324808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324809 = "(";
var G__324810 = (function (){var G__324826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324827 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324826,G__324827) : tailrecursion.hoplon.span.call(null,G__324826,G__324827));
})();
var G__324811 = " ";
var G__324812 = (function (){var G__324828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324829 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324828,G__324829) : tailrecursion.hoplon.span.call(null,G__324828,G__324829));
})();
var G__324813 = "(";
var G__324814 = (function (){var G__324830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324831 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324830,G__324831) : tailrecursion.hoplon.span.call(null,G__324830,G__324831));
})();
var G__324815 = (function (){var G__324832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324833 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324832,G__324833) : tailrecursion.hoplon.span.call(null,G__324832,G__324833));
})();
var G__324816 = " ";
var G__324817 = (function (){var G__324834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324835 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324834,G__324835) : tailrecursion.hoplon.span.call(null,G__324834,G__324835));
})();
var G__324818 = " (";
var G__324819 = (function (){var G__324836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324837 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324836,G__324837) : tailrecursion.hoplon.span.call(null,G__324836,G__324837));
})();
var G__324820 = (function (){var G__324838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324839 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324838,G__324839) : tailrecursion.hoplon.span.call(null,G__324838,G__324839));
})();
var G__324821 = " ";
var G__324822 = (function (){var G__324840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324841 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324840,G__324841) : tailrecursion.hoplon.span.call(null,G__324840,G__324841));
})();
var G__324823 = ")) ";
var G__324824 = (function (){var G__324842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324843 = "'x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324842,G__324843) : tailrecursion.hoplon.span.call(null,G__324842,G__324843));
})();
var G__324825 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__324808,G__324809,G__324810,G__324811,G__324812,G__324813,G__324814,G__324815,G__324816,G__324817,G__324818,G__324819,G__324820,G__324821,G__324822,G__324823,G__324824,G__324825) : tailrecursion.hoplon.pre.call(null,G__324808,G__324809,G__324810,G__324811,G__324812,G__324813,G__324814,G__324815,G__324816,G__324817,G__324818,G__324819,G__324820,G__324821,G__324822,G__324823,G__324824,G__324825));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324806,G__324807) : tailrecursion.hoplon.div.call(null,G__324806,G__324807));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324805) : tailrecursion.hoplon.div.call(null,G__324805));
})(),(function (){var G__324844 = cljs.core.PersistentArrayMap.EMPTY;
var G__324845 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Try to do this by changing only the representation for sums and products without changing the deriv procedure at all. For example, the ",(function (){var G__324846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"addend"], null);
var G__324847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324846,G__324847) : tailrecursion.hoplon.markdown.code_node.call(null,G__324846,G__324847));
})()," of a sum would be the first term, and the ",(function (){var G__324848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"augend"], null);
var G__324849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324848,G__324849) : tailrecursion.hoplon.markdown.code_node.call(null,G__324848,G__324849));
})()," would be the sum of the rest of the terms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324844,G__324845) : tailrecursion.hoplon.markdown.para_node.call(null,G__324844,G__324845));
})(),(function (){var G__324850 = cljs.core.PersistentArrayMap.EMPTY;
var G__324851 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this, it is best to take advantage of our ability to define functions with mutliple arities."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324850,G__324851) : tailrecursion.hoplon.markdown.para_node.call(null,G__324850,G__324851));
})(),(function (){var G__324909 = (function (){var G__324910 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324911 = (function (){var G__324912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324913 = "(";
var G__324914 = (function (){var G__324939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324940 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324939,G__324940) : tailrecursion.hoplon.span.call(null,G__324939,G__324940));
})();
var G__324915 = (function (){var G__324941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324942 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324941,G__324942) : tailrecursion.hoplon.span.call(null,G__324941,G__324942));
})();
var G__324916 = "\n  ([";
var G__324917 = (function (){var G__324943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324944 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324943,G__324944) : tailrecursion.hoplon.span.call(null,G__324943,G__324944));
})();
var G__324918 = " ";
var G__324919 = (function (){var G__324945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324946 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324945,G__324946) : tailrecursion.hoplon.span.call(null,G__324945,G__324946));
})();
var G__324920 = "] (";
var G__324921 = (function (){var G__324947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324948 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324947,G__324948) : tailrecursion.hoplon.span.call(null,G__324947,G__324948));
})();
var G__324922 = (function (){var G__324949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324950 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324949,G__324950) : tailrecursion.hoplon.span.call(null,G__324949,G__324950));
})();
var G__324923 = " ";
var G__324924 = (function (){var G__324951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324952 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324951,G__324952) : tailrecursion.hoplon.span.call(null,G__324951,G__324952));
})();
var G__324925 = "))\n  ([";
var G__324926 = (function (){var G__324953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324954 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324953,G__324954) : tailrecursion.hoplon.span.call(null,G__324953,G__324954));
})();
var G__324927 = " ";
var G__324928 = (function (){var G__324955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324956 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324955,G__324956) : tailrecursion.hoplon.span.call(null,G__324955,G__324956));
})();
var G__324929 = " ";
var G__324930 = (function (){var G__324957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324958 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324957,G__324958) : tailrecursion.hoplon.span.call(null,G__324957,G__324958));
})();
var G__324931 = "] (";
var G__324932 = (function (){var G__324959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324960 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324959,G__324960) : tailrecursion.hoplon.span.call(null,G__324959,G__324960));
})();
var G__324933 = (function (){var G__324961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324962 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324961,G__324962) : tailrecursion.hoplon.span.call(null,G__324961,G__324962));
})();
var G__324934 = " ";
var G__324935 = (function (){var G__324963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324964 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324963,G__324964) : tailrecursion.hoplon.span.call(null,G__324963,G__324964));
})();
var G__324936 = " ";
var G__324937 = (function (){var G__324965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324966 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324965,G__324966) : tailrecursion.hoplon.span.call(null,G__324965,G__324966));
})();
var G__324938 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__324912,G__324913,G__324914,G__324915,G__324916,G__324917,G__324918,G__324919,G__324920,G__324921,G__324922,G__324923,G__324924,G__324925,G__324926,G__324927,G__324928,G__324929,G__324930,G__324931,G__324932,G__324933,G__324934,G__324935,G__324936,G__324937,G__324938) : tailrecursion.hoplon.pre.call(null,G__324912,G__324913,G__324914,G__324915,G__324916,G__324917,G__324918,G__324919,G__324920,G__324921,G__324922,G__324923,G__324924,G__324925,G__324926,G__324927,G__324928,G__324929,G__324930,G__324931,G__324932,G__324933,G__324934,G__324935,G__324936,G__324937,G__324938));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324910,G__324911) : tailrecursion.hoplon.div.call(null,G__324910,G__324911));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324909) : tailrecursion.hoplon.div.call(null,G__324909));
})(),(function (){var G__324967 = cljs.core.PersistentArrayMap.EMPTY;
var G__324968 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This function will add its arguments if given two arguments, and multiply them if given three."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324967,G__324968) : tailrecursion.hoplon.markdown.para_node.call(null,G__324967,G__324968));
})(),(function (){var G__325014 = (function (){var G__325015 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__325016 = (function (){var G__325017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__325018 = "(";
var G__325019 = (function (){var G__325038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325039 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325038,G__325039) : tailrecursion.hoplon.span.call(null,G__325038,G__325039));
})();
var G__325020 = (function (){var G__325040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325041 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325040,G__325041) : tailrecursion.hoplon.span.call(null,G__325040,G__325041));
})();
var G__325021 = " [";
var G__325022 = (function (){var G__325042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325043 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325042,G__325043) : tailrecursion.hoplon.span.call(null,G__325042,G__325043));
})();
var G__325023 = " ";
var G__325024 = (function (){var G__325044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325045 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325044,G__325045) : tailrecursion.hoplon.span.call(null,G__325044,G__325045));
})();
var G__325025 = " ";
var G__325026 = (function (){var G__325046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325047 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325046,G__325047) : tailrecursion.hoplon.span.call(null,G__325046,G__325047));
})();
var G__325027 = " ";
var G__325028 = (function (){var G__325048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325049 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325048,G__325049) : tailrecursion.hoplon.span.call(null,G__325048,G__325049));
})();
var G__325029 = "]\n  (";
var G__325030 = (function (){var G__325050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325051 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325050,G__325051) : tailrecursion.hoplon.span.call(null,G__325050,G__325051));
})();
var G__325031 = (function (){var G__325052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325053 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325052,G__325053) : tailrecursion.hoplon.span.call(null,G__325052,G__325053));
})();
var G__325032 = " ";
var G__325033 = (function (){var G__325054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325055 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325054,G__325055) : tailrecursion.hoplon.span.call(null,G__325054,G__325055));
})();
var G__325034 = " (";
var G__325035 = (function (){var G__325056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325057 = "reduce + ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325056,G__325057) : tailrecursion.hoplon.span.call(null,G__325056,G__325057));
})();
var G__325036 = (function (){var G__325058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325059 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325058,G__325059) : tailrecursion.hoplon.span.call(null,G__325058,G__325059));
})();
var G__325037 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__325017,G__325018,G__325019,G__325020,G__325021,G__325022,G__325023,G__325024,G__325025,G__325026,G__325027,G__325028,G__325029,G__325030,G__325031,G__325032,G__325033,G__325034,G__325035,G__325036,G__325037) : tailrecursion.hoplon.pre.call(null,G__325017,G__325018,G__325019,G__325020,G__325021,G__325022,G__325023,G__325024,G__325025,G__325026,G__325027,G__325028,G__325029,G__325030,G__325031,G__325032,G__325033,G__325034,G__325035,G__325036,G__325037));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__325015,G__325016) : tailrecursion.hoplon.div.call(null,G__325015,G__325016));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__325014) : tailrecursion.hoplon.div.call(null,G__325014));
})(),(function (){var G__325060 = cljs.core.PersistentArrayMap.EMPTY;
var G__325061 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This function will add up all arguments after the first two (if there are none, it will return 0 for this part). It then returns the product of that sum and the first two arguments. Play around with this structure for a while to give yourself some familiarity before solving this problem."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325060,G__325061) : tailrecursion.hoplon.markdown.para_node.call(null,G__325060,G__325061));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324764;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324763;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324762;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324761;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325062 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325063 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325064 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325065 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325309 = (function (){var G__325310 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__325311 = (function (){var G__325312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__325313 = "(";
var G__325314 = (function (){var G__325427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325428 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325427,G__325428) : tailrecursion.hoplon.span.call(null,G__325427,G__325428));
})();
var G__325315 = (function (){var G__325429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325430 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325429,G__325430) : tailrecursion.hoplon.span.call(null,G__325429,G__325430));
})();
var G__325316 = " [";
var G__325317 = (function (){var G__325431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325432 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325431,G__325432) : tailrecursion.hoplon.span.call(null,G__325431,G__325432));
})();
var G__325318 = "]\n  (";
var G__325319 = (function (){var G__325433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325434 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325433,G__325434) : tailrecursion.hoplon.span.call(null,G__325433,G__325434));
})();
var G__325320 = "(";
var G__325321 = (function (){var G__325435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325436 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325435,G__325436) : tailrecursion.hoplon.span.call(null,G__325435,G__325436));
})();
var G__325322 = (function (){var G__325437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325438 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325437,G__325438) : tailrecursion.hoplon.span.call(null,G__325437,G__325438));
})();
var G__325323 = ") ";
var G__325324 = (function (){var G__325439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325440 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325439,G__325440) : tailrecursion.hoplon.span.call(null,G__325439,G__325440));
})();
var G__325325 = "))\n\n(";
var G__325326 = (function (){var G__325441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325442 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325441,G__325442) : tailrecursion.hoplon.span.call(null,G__325441,G__325442));
})();
var G__325327 = (function (){var G__325443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325444 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325443,G__325444) : tailrecursion.hoplon.span.call(null,G__325443,G__325444));
})();
var G__325328 = " [";
var G__325329 = (function (){var G__325445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325446 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325445,G__325446) : tailrecursion.hoplon.span.call(null,G__325445,G__325446));
})();
var G__325330 = "]\n  (";
var G__325331 = (function (){var G__325447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325448 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325447,G__325448) : tailrecursion.hoplon.span.call(null,G__325447,G__325448));
})();
var G__325332 = (function (){var G__325449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325450 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325449,G__325450) : tailrecursion.hoplon.span.call(null,G__325449,G__325450));
})();
var G__325333 = "))\n\n(";
var G__325334 = (function (){var G__325451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325452 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325451,G__325452) : tailrecursion.hoplon.span.call(null,G__325451,G__325452));
})();
var G__325335 = (function (){var G__325453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325454 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325453,G__325454) : tailrecursion.hoplon.span.call(null,G__325453,G__325454));
})();
var G__325336 = " [";
var G__325337 = (function (){var G__325455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325456 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325455,G__325456) : tailrecursion.hoplon.span.call(null,G__325455,G__325456));
})();
var G__325338 = "]\n  (";
var G__325339 = (function (){var G__325457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325458 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325457,G__325458) : tailrecursion.hoplon.span.call(null,G__325457,G__325458));
})();
var G__325340 = (function (){var G__325459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325460 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325459,G__325460) : tailrecursion.hoplon.span.call(null,G__325459,G__325460));
})();
var G__325341 = " ";
var G__325342 = (function (){var G__325461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325462 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325461,G__325462) : tailrecursion.hoplon.span.call(null,G__325461,G__325462));
})();
var G__325343 = "))\n\n(";
var G__325344 = (function (){var G__325463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325464 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325463,G__325464) : tailrecursion.hoplon.span.call(null,G__325463,G__325464));
})();
var G__325345 = (function (){var G__325465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325466 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325465,G__325466) : tailrecursion.hoplon.span.call(null,G__325465,G__325466));
})();
var G__325346 = "\n  ([";
var G__325347 = (function (){var G__325467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325468 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325467,G__325468) : tailrecursion.hoplon.span.call(null,G__325467,G__325468));
})();
var G__325348 = " ";
var G__325349 = (function (){var G__325469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325470 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325469,G__325470) : tailrecursion.hoplon.span.call(null,G__325469,G__325470));
})();
var G__325350 = "] (";
var G__325351 = (function (){var G__325471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325472 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325471,G__325472) : tailrecursion.hoplon.span.call(null,G__325471,G__325472));
})();
var G__325352 = "(";
var G__325353 = (function (){var G__325473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325474 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325473,G__325474) : tailrecursion.hoplon.span.call(null,G__325473,G__325474));
})();
var G__325354 = (function (){var G__325475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325476 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325475,G__325476) : tailrecursion.hoplon.span.call(null,G__325475,G__325476));
})();
var G__325355 = " ";
var G__325356 = (function (){var G__325477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325478 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325477,G__325478) : tailrecursion.hoplon.span.call(null,G__325477,G__325478));
})();
var G__325357 = ") ";
var G__325358 = (function (){var G__325479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325480 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325479,G__325480) : tailrecursion.hoplon.span.call(null,G__325479,G__325480));
})();
var G__325359 = "\n               (";
var G__325360 = (function (){var G__325481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325482 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325481,G__325482) : tailrecursion.hoplon.span.call(null,G__325481,G__325482));
})();
var G__325361 = (function (){var G__325483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325484 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325483,G__325484) : tailrecursion.hoplon.span.call(null,G__325483,G__325484));
})();
var G__325362 = " ";
var G__325363 = (function (){var G__325485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325486 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325485,G__325486) : tailrecursion.hoplon.span.call(null,G__325485,G__325486));
})();
var G__325364 = ") ";
var G__325365 = (function (){var G__325487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325488 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325487,G__325488) : tailrecursion.hoplon.span.call(null,G__325487,G__325488));
})();
var G__325366 = "\n               (";
var G__325367 = (function (){var G__325489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325490 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325489,G__325490) : tailrecursion.hoplon.span.call(null,G__325489,G__325490));
})();
var G__325368 = "(";
var G__325369 = (function (){var G__325491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325492 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325491,G__325492) : tailrecursion.hoplon.span.call(null,G__325491,G__325492));
})();
var G__325370 = " ";
var G__325371 = (function (){var G__325493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325494 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325493,G__325494) : tailrecursion.hoplon.span.call(null,G__325493,G__325494));
})();
var G__325372 = ")\n                    (";
var G__325373 = (function (){var G__325495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325496 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325495,G__325496) : tailrecursion.hoplon.span.call(null,G__325495,G__325496));
})();
var G__325374 = " ";
var G__325375 = (function (){var G__325497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325498 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325497,G__325498) : tailrecursion.hoplon.span.call(null,G__325497,G__325498));
})();
var G__325376 = ")) (";
var G__325377 = (function (){var G__325499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325500 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325499,G__325500) : tailrecursion.hoplon.span.call(null,G__325499,G__325500));
})();
var G__325378 = (function (){var G__325501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325502 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325501,G__325502) : tailrecursion.hoplon.span.call(null,G__325501,G__325502));
})();
var G__325379 = " ";
var G__325380 = (function (){var G__325503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325504 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325503,G__325504) : tailrecursion.hoplon.span.call(null,G__325503,G__325504));
})();
var G__325381 = ")\n               ";
var G__325382 = (function (){var G__325505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325506 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325505,G__325506) : tailrecursion.hoplon.span.call(null,G__325505,G__325506));
})();
var G__325383 = " (";
var G__325384 = (function (){var G__325507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325508 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325507,G__325508) : tailrecursion.hoplon.span.call(null,G__325507,G__325508));
})();
var G__325385 = (function (){var G__325509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325510 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325509,G__325510) : tailrecursion.hoplon.span.call(null,G__325509,G__325510));
})();
var G__325386 = " ";
var G__325387 = (function (){var G__325511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325512 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325511,G__325512) : tailrecursion.hoplon.span.call(null,G__325511,G__325512));
})();
var G__325388 = " ";
var G__325389 = (function (){var G__325513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325514 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325513,G__325514) : tailrecursion.hoplon.span.call(null,G__325513,G__325514));
})();
var G__325390 = ")))\n  ([";
var G__325391 = (function (){var G__325515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325516 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325515,G__325516) : tailrecursion.hoplon.span.call(null,G__325515,G__325516));
})();
var G__325392 = " ";
var G__325393 = (function (){var G__325517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325518 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325517,G__325518) : tailrecursion.hoplon.span.call(null,G__325517,G__325518));
})();
var G__325394 = " ";
var G__325395 = (function (){var G__325519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325520 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325519,G__325520) : tailrecursion.hoplon.span.call(null,G__325519,G__325520));
})();
var G__325396 = " ";
var G__325397 = (function (){var G__325521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325522 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325521,G__325522) : tailrecursion.hoplon.span.call(null,G__325521,G__325522));
})();
var G__325398 = "] (";
var G__325399 = (function (){var G__325523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325524 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325523,G__325524) : tailrecursion.hoplon.span.call(null,G__325523,G__325524));
})();
var G__325400 = "(";
var G__325401 = (function (){var G__325525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325526 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325525,G__325526) : tailrecursion.hoplon.span.call(null,G__325525,G__325526));
})();
var G__325402 = " ";
var G__325403 = (function (){var G__325527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325528 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325527,G__325528) : tailrecursion.hoplon.span.call(null,G__325527,G__325528));
})();
var G__325404 = ")\n                 (";
var G__325405 = (function (){var G__325529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325530 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325529,G__325530) : tailrecursion.hoplon.span.call(null,G__325529,G__325530));
})();
var G__325406 = " ";
var G__325407 = (function (){var G__325531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325532 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325531,G__325532) : tailrecursion.hoplon.span.call(null,G__325531,G__325532));
})();
var G__325408 = " ";
var G__325409 = (function (){var G__325533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325534 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325533,G__325534) : tailrecursion.hoplon.span.call(null,G__325533,G__325534));
})();
var G__325410 = ")\n                 (";
var G__325411 = (function (){var G__325535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325536 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325535,G__325536) : tailrecursion.hoplon.span.call(null,G__325535,G__325536));
})();
var G__325412 = " ";
var G__325413 = (function (){var G__325537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325538 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325537,G__325538) : tailrecursion.hoplon.span.call(null,G__325537,G__325538));
})();
var G__325414 = "\n                           (";
var G__325415 = (function (){var G__325539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325540 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325539,G__325540) : tailrecursion.hoplon.span.call(null,G__325539,G__325540));
})();
var G__325416 = " ";
var G__325417 = (function (){var G__325541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325542 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325541,G__325542) : tailrecursion.hoplon.span.call(null,G__325541,G__325542));
})();
var G__325418 = " \n                                     (";
var G__325419 = (function (){var G__325543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325544 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325543,G__325544) : tailrecursion.hoplon.span.call(null,G__325543,G__325544));
})();
var G__325420 = (function (){var G__325545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325546 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325545,G__325546) : tailrecursion.hoplon.span.call(null,G__325545,G__325546));
})();
var G__325421 = ") \n                                     ";
var G__325422 = (function (){var G__325547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325548 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325547,G__325548) : tailrecursion.hoplon.span.call(null,G__325547,G__325548));
})();
var G__325423 = " (";
var G__325424 = (function (){var G__325549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325550 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325549,G__325550) : tailrecursion.hoplon.span.call(null,G__325549,G__325550));
})();
var G__325425 = (function (){var G__325551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325552 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325551,G__325552) : tailrecursion.hoplon.span.call(null,G__325551,G__325552));
})();
var G__325426 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$115 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$115(G__325312,G__325313,G__325314,G__325315,G__325316,G__325317,G__325318,G__325319,G__325320,G__325321,G__325322,G__325323,G__325324,G__325325,G__325326,G__325327,G__325328,G__325329,G__325330,G__325331,G__325332,G__325333,G__325334,G__325335,G__325336,G__325337,G__325338,G__325339,G__325340,G__325341,G__325342,G__325343,G__325344,G__325345,G__325346,G__325347,G__325348,G__325349,G__325350,G__325351,G__325352,G__325353,G__325354,G__325355,G__325356,G__325357,G__325358,G__325359,G__325360,G__325361,G__325362,G__325363,G__325364,G__325365,G__325366,G__325367,G__325368,G__325369,G__325370,G__325371,G__325372,G__325373,G__325374,G__325375,G__325376,G__325377,G__325378,G__325379,G__325380,G__325381,G__325382,G__325383,G__325384,G__325385,G__325386,G__325387,G__325388,G__325389,G__325390,G__325391,G__325392,G__325393,G__325394,G__325395,G__325396,G__325397,G__325398,G__325399,G__325400,G__325401,G__325402,G__325403,G__325404,G__325405,G__325406,G__325407,G__325408,G__325409,G__325410,G__325411,G__325412,G__325413,G__325414,G__325415,G__325416,G__325417,G__325418,G__325419,G__325420,G__325421,G__325422,G__325423,G__325424,G__325425,G__325426) : tailrecursion.hoplon.pre.call(null,G__325312,G__325313,G__325314,G__325315,G__325316,G__325317,G__325318,G__325319,G__325320,G__325321,G__325322,G__325323,G__325324,G__325325,G__325326,G__325327,G__325328,G__325329,G__325330,G__325331,G__325332,G__325333,G__325334,G__325335,G__325336,G__325337,G__325338,G__325339,G__325340,G__325341,G__325342,G__325343,G__325344,G__325345,G__325346,G__325347,G__325348,G__325349,G__325350,G__325351,G__325352,G__325353,G__325354,G__325355,G__325356,G__325357,G__325358,G__325359,G__325360,G__325361,G__325362,G__325363,G__325364,G__325365,G__325366,G__325367,G__325368,G__325369,G__325370,G__325371,G__325372,G__325373,G__325374,G__325375,G__325376,G__325377,G__325378,G__325379,G__325380,G__325381,G__325382,G__325383,G__325384,G__325385,G__325386,G__325387,G__325388,G__325389,G__325390,G__325391,G__325392,G__325393,G__325394,G__325395,G__325396,G__325397,G__325398,G__325399,G__325400,G__325401,G__325402,G__325403,G__325404,G__325405,G__325406,G__325407,G__325408,G__325409,G__325410,G__325411,G__325412,G__325413,G__325414,G__325415,G__325416,G__325417,G__325418,G__325419,G__325420,G__325421,G__325422,G__325423,G__325424,G__325425,G__325426));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__325310,G__325311) : tailrecursion.hoplon.div.call(null,G__325310,G__325311));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__325309) : tailrecursion.hoplon.div.call(null,G__325309));
})(),(function (){var G__325553 = cljs.core.PersistentArrayMap.EMPTY;
var G__325554 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The product version is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325553,G__325554) : tailrecursion.hoplon.markdown.para_node.call(null,G__325553,G__325554));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325065;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325064;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325063;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325062;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325555 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325556 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325557 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325558 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325559 = cljs.core.PersistentArrayMap.EMPTY;
var G__325560 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to modify the differentiation program so that it works with ordinary mathematical notation, in which ",(function (){var G__325561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__325562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325561,G__325562) : tailrecursion.hoplon.markdown.code_node.call(null,G__325561,G__325562));
})()," and ",(function (){var G__325563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__325564 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325563,G__325564) : tailrecursion.hoplon.markdown.code_node.call(null,G__325563,G__325564));
})()," are infix rather than prefix operators. Since the differentiation program is defined in terms of abstract data, we can modify it to work with different representations of expressions solely by changing the predicates, selectors, and constructors that define the representation of the algebraic expressions on which the differentiator is to operate."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325559,G__325560) : tailrecursion.hoplon.markdown.para_node.call(null,G__325559,G__325560));
})(),(function (){var G__325565 = cljs.core.PersistentArrayMap.EMPTY;
var G__325566 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Show how to do this in order to differentiate algebraic expressions presented in infix form, such as ",(function (){var G__325567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(x + (3 * (x + (y +\n2))))"], null);
var G__325568 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325567,G__325568) : tailrecursion.hoplon.markdown.code_node.call(null,G__325567,G__325568));
})(),". To simplify the task, assume that ",(function (){var G__325569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__325570 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325569,G__325570) : tailrecursion.hoplon.markdown.code_node.call(null,G__325569,G__325570));
})()," and ",(function (){var G__325571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__325572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325571,G__325572) : tailrecursion.hoplon.markdown.code_node.call(null,G__325571,G__325572));
})()," always take two arguments and that expressions are fully parenthesized."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325565,G__325566) : tailrecursion.hoplon.markdown.para_node.call(null,G__325565,G__325566));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325558;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325557;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325556;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325555;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325573 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325574 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325575 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325576 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325746 = (function (){var G__325747 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__325748 = (function (){var G__325749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__325750 = "(";
var G__325751 = (function (){var G__325828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325829 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325828,G__325829) : tailrecursion.hoplon.span.call(null,G__325828,G__325829));
})();
var G__325752 = (function (){var G__325830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325831 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325830,G__325831) : tailrecursion.hoplon.span.call(null,G__325830,G__325831));
})();
var G__325753 = " [";
var G__325754 = (function (){var G__325832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325833 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325832,G__325833) : tailrecursion.hoplon.span.call(null,G__325832,G__325833));
})();
var G__325755 = " ";
var G__325756 = (function (){var G__325834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325835 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325834,G__325835) : tailrecursion.hoplon.span.call(null,G__325834,G__325835));
})();
var G__325757 = "]\n  (";
var G__325758 = (function (){var G__325836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325837 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325836,G__325837) : tailrecursion.hoplon.span.call(null,G__325836,G__325837));
})();
var G__325759 = "(";
var G__325760 = (function (){var G__325838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325839 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325838,G__325839) : tailrecursion.hoplon.span.call(null,G__325838,G__325839));
})();
var G__325761 = (function (){var G__325840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325841 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325840,G__325841) : tailrecursion.hoplon.span.call(null,G__325840,G__325841));
})();
var G__325762 = " ";
var G__325763 = (function (){var G__325842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325843 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325842,G__325843) : tailrecursion.hoplon.span.call(null,G__325842,G__325843));
})();
var G__325764 = ") ";
var G__325765 = (function (){var G__325844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325845 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325844,G__325845) : tailrecursion.hoplon.span.call(null,G__325844,G__325845));
})();
var G__325766 = "\n        (";
var G__325767 = (function (){var G__325846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325847 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325846,G__325847) : tailrecursion.hoplon.span.call(null,G__325846,G__325847));
})();
var G__325768 = (function (){var G__325848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325849 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325848,G__325849) : tailrecursion.hoplon.span.call(null,G__325848,G__325849));
})();
var G__325769 = " ";
var G__325770 = (function (){var G__325850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325851 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325850,G__325851) : tailrecursion.hoplon.span.call(null,G__325850,G__325851));
})();
var G__325771 = ") ";
var G__325772 = (function (){var G__325852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325853 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325852,G__325853) : tailrecursion.hoplon.span.call(null,G__325852,G__325853));
})();
var G__325773 = "\n        (";
var G__325774 = (function (){var G__325854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325855 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325854,G__325855) : tailrecursion.hoplon.span.call(null,G__325854,G__325855));
})();
var G__325775 = "(";
var G__325776 = (function (){var G__325856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325857 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325856,G__325857) : tailrecursion.hoplon.span.call(null,G__325856,G__325857));
})();
var G__325777 = " ";
var G__325778 = (function (){var G__325858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325859 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325858,G__325859) : tailrecursion.hoplon.span.call(null,G__325858,G__325859));
})();
var G__325779 = ")\n             (";
var G__325780 = (function (){var G__325860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325861 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325860,G__325861) : tailrecursion.hoplon.span.call(null,G__325860,G__325861));
})();
var G__325781 = " ";
var G__325782 = (function (){var G__325862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325863 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325862,G__325863) : tailrecursion.hoplon.span.call(null,G__325862,G__325863));
})();
var G__325783 = ")) (";
var G__325784 = (function (){var G__325864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325865 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325864,G__325865) : tailrecursion.hoplon.span.call(null,G__325864,G__325865));
})();
var G__325785 = (function (){var G__325866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325867 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325866,G__325867) : tailrecursion.hoplon.span.call(null,G__325866,G__325867));
})();
var G__325786 = " ";
var G__325787 = (function (){var G__325868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325869 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325868,G__325869) : tailrecursion.hoplon.span.call(null,G__325868,G__325869));
})();
var G__325788 = ")\n        ";
var G__325789 = (function (){var G__325870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325871 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325870,G__325871) : tailrecursion.hoplon.span.call(null,G__325870,G__325871));
})();
var G__325790 = " (";
var G__325791 = (function (){var G__325872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325873 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325872,G__325873) : tailrecursion.hoplon.span.call(null,G__325872,G__325873));
})();
var G__325792 = (function (){var G__325874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325875 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325874,G__325875) : tailrecursion.hoplon.span.call(null,G__325874,G__325875));
})();
var G__325793 = " ";
var G__325794 = (function (){var G__325876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325877 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325876,G__325877) : tailrecursion.hoplon.span.call(null,G__325876,G__325877));
})();
var G__325795 = " ";
var G__325796 = (function (){var G__325878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325879 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325878,G__325879) : tailrecursion.hoplon.span.call(null,G__325878,G__325879));
})();
var G__325797 = ")))\n\n(";
var G__325798 = (function (){var G__325880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325881 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325880,G__325881) : tailrecursion.hoplon.span.call(null,G__325880,G__325881));
})();
var G__325799 = (function (){var G__325882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325883 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325882,G__325883) : tailrecursion.hoplon.span.call(null,G__325882,G__325883));
})();
var G__325800 = " [";
var G__325801 = (function (){var G__325884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325885 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325884,G__325885) : tailrecursion.hoplon.span.call(null,G__325884,G__325885));
})();
var G__325802 = "]\n  (";
var G__325803 = (function (){var G__325886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325887 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325886,G__325887) : tailrecursion.hoplon.span.call(null,G__325886,G__325887));
})();
var G__325804 = (function (){var G__325888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325889 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325888,G__325889) : tailrecursion.hoplon.span.call(null,G__325888,G__325889));
})();
var G__325805 = "))\n\n(";
var G__325806 = (function (){var G__325890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325891 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325890,G__325891) : tailrecursion.hoplon.span.call(null,G__325890,G__325891));
})();
var G__325807 = (function (){var G__325892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325893 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325892,G__325893) : tailrecursion.hoplon.span.call(null,G__325892,G__325893));
})();
var G__325808 = " [";
var G__325809 = (function (){var G__325894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325895 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325894,G__325895) : tailrecursion.hoplon.span.call(null,G__325894,G__325895));
})();
var G__325810 = "]\n  (";
var G__325811 = (function (){var G__325896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325897 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325896,G__325897) : tailrecursion.hoplon.span.call(null,G__325896,G__325897));
})();
var G__325812 = (function (){var G__325898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325899 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325898,G__325899) : tailrecursion.hoplon.span.call(null,G__325898,G__325899));
})();
var G__325813 = " ";
var G__325814 = (function (){var G__325900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325901 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325900,G__325901) : tailrecursion.hoplon.span.call(null,G__325900,G__325901));
})();
var G__325815 = "))\n\n(";
var G__325816 = (function (){var G__325902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325903 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325902,G__325903) : tailrecursion.hoplon.span.call(null,G__325902,G__325903));
})();
var G__325817 = (function (){var G__325904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325905 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325904,G__325905) : tailrecursion.hoplon.span.call(null,G__325904,G__325905));
})();
var G__325818 = " [";
var G__325819 = (function (){var G__325906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325907 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325906,G__325907) : tailrecursion.hoplon.span.call(null,G__325906,G__325907));
})();
var G__325820 = "]\n  (";
var G__325821 = (function (){var G__325908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325909 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325908,G__325909) : tailrecursion.hoplon.span.call(null,G__325908,G__325909));
})();
var G__325822 = "(";
var G__325823 = (function (){var G__325910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325911 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325910,G__325911) : tailrecursion.hoplon.span.call(null,G__325910,G__325911));
})();
var G__325824 = (function (){var G__325912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325913 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325912,G__325913) : tailrecursion.hoplon.span.call(null,G__325912,G__325913));
})();
var G__325825 = ") ";
var G__325826 = (function (){var G__325914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325915 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325914,G__325915) : tailrecursion.hoplon.span.call(null,G__325914,G__325915));
})();
var G__325827 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__325749,G__325750,G__325751,G__325752,G__325753,G__325754,G__325755,G__325756,G__325757,G__325758,G__325759,G__325760,G__325761,G__325762,G__325763,G__325764,G__325765,G__325766,G__325767,G__325768,G__325769,G__325770,G__325771,G__325772,G__325773,G__325774,G__325775,G__325776,G__325777,G__325778,G__325779,G__325780,G__325781,G__325782,G__325783,G__325784,G__325785,G__325786,G__325787,G__325788,G__325789,G__325790,G__325791,G__325792,G__325793,G__325794,G__325795,G__325796,G__325797,G__325798,G__325799,G__325800,G__325801,G__325802,G__325803,G__325804,G__325805,G__325806,G__325807,G__325808,G__325809,G__325810,G__325811,G__325812,G__325813,G__325814,G__325815,G__325816,G__325817,G__325818,G__325819,G__325820,G__325821,G__325822,G__325823,G__325824,G__325825,G__325826,G__325827) : tailrecursion.hoplon.pre.call(null,G__325749,G__325750,G__325751,G__325752,G__325753,G__325754,G__325755,G__325756,G__325757,G__325758,G__325759,G__325760,G__325761,G__325762,G__325763,G__325764,G__325765,G__325766,G__325767,G__325768,G__325769,G__325770,G__325771,G__325772,G__325773,G__325774,G__325775,G__325776,G__325777,G__325778,G__325779,G__325780,G__325781,G__325782,G__325783,G__325784,G__325785,G__325786,G__325787,G__325788,G__325789,G__325790,G__325791,G__325792,G__325793,G__325794,G__325795,G__325796,G__325797,G__325798,G__325799,G__325800,G__325801,G__325802,G__325803,G__325804,G__325805,G__325806,G__325807,G__325808,G__325809,G__325810,G__325811,G__325812,G__325813,G__325814,G__325815,G__325816,G__325817,G__325818,G__325819,G__325820,G__325821,G__325822,G__325823,G__325824,G__325825,G__325826,G__325827));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__325747,G__325748) : tailrecursion.hoplon.div.call(null,G__325747,G__325748));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__325746) : tailrecursion.hoplon.div.call(null,G__325746));
})(),(function (){var G__325916 = cljs.core.PersistentArrayMap.EMPTY;
var G__325917 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The one for product is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325916,G__325917) : tailrecursion.hoplon.markdown.para_node.call(null,G__325916,G__325917));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325576;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325575;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325574;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325573;
}})()], 0)),"",(function (){var _STAR_references_STAR_325918 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325919 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325920 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325921 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325922 = cljs.core.PersistentArrayMap.EMPTY;
var G__325923 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. The problem becomes substantially harder if we allow standard algebraic notation, such as ",(function (){var G__325924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(x + 3 * (x + y + 2))"], null);
var G__325925 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325924,G__325925) : tailrecursion.hoplon.markdown.code_node.call(null,G__325924,G__325925));
})(),", which drops unnecessary parentheses and assumes that multiplication is done before addition. Can you design appropriate predicates, selectors, and constructors for this notation such that our derivative program still works?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325922,G__325923) : tailrecursion.hoplon.markdown.para_node.call(null,G__325922,G__325923));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325921;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325920;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325919;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325918;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325926 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325927 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325928 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325929 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325930 = cljs.core.PersistentArrayMap.EMPTY;
var G__325931 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is exactly why 1) prefix notation is so awesome, and 2) macros. But let",(function (){var G__325932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__325933 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__325932,G__325933) : tailrecursion.hoplon.markdown.simple_node.call(null,G__325932,G__325933));
})(),"s try this out without beautiful, beautiful macros. This solution is not a partifularly pretty one, but I",(function (){var G__325934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__325935 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__325934,G__325935) : tailrecursion.hoplon.markdown.simple_node.call(null,G__325934,G__325935));
})(),"m doing this one after a VERY long day, so",(function (){var G__325936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__325937 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__325936,G__325937) : tailrecursion.hoplon.markdown.simple_node.call(null,G__325936,G__325937));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325930,G__325931) : tailrecursion.hoplon.markdown.para_node.call(null,G__325930,G__325931));
})(),(function (){var G__326412 = (function (){var G__326413 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__326414 = (function (){var G__326415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__326416 = "(";
var G__326417 = (function (){var G__326637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326638 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326637,G__326638) : tailrecursion.hoplon.span.call(null,G__326637,G__326638));
})();
var G__326418 = (function (){var G__326639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326640 = "exponents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326639,G__326640) : tailrecursion.hoplon.span.call(null,G__326639,G__326640));
})();
var G__326419 = " [";
var G__326420 = (function (){var G__326641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326642 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326641,G__326642) : tailrecursion.hoplon.span.call(null,G__326641,G__326642));
})();
var G__326421 = "]\n  (";
var G__326422 = (function (){var G__326643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326644 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326643,G__326644) : tailrecursion.hoplon.span.call(null,G__326643,G__326644));
})();
var G__326423 = "[";
var G__326424 = (function (){var G__326645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326646 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326645,G__326646) : tailrecursion.hoplon.span.call(null,G__326645,G__326646));
})();
var G__326425 = " (";
var G__326426 = (function (){var G__326647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326648 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326647,G__326648) : tailrecursion.hoplon.span.call(null,G__326647,G__326648));
})();
var G__326427 = ")\n         ";
var G__326428 = (function (){var G__326649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326650 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326649,G__326650) : tailrecursion.hoplon.span.call(null,G__326649,G__326650));
})();
var G__326429 = (function (){var G__326651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326652 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326651,G__326652) : tailrecursion.hoplon.span.call(null,G__326651,G__326652));
})();
var G__326430 = "]\n    (";
var G__326431 = (function (){var G__326653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326654 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326653,G__326654) : tailrecursion.hoplon.span.call(null,G__326653,G__326654));
})();
var G__326432 = "(";
var G__326433 = (function (){var G__326655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326656 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326655,G__326656) : tailrecursion.hoplon.span.call(null,G__326655,G__326656));
})();
var G__326434 = " ";
var G__326435 = (function (){var G__326657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326658 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326657,G__326658) : tailrecursion.hoplon.span.call(null,G__326657,G__326658));
})();
var G__326436 = ") ";
var G__326437 = (function (){var G__326659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326660 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326659,G__326660) : tailrecursion.hoplon.span.call(null,G__326659,G__326660));
})();
var G__326438 = "\n          (";
var G__326439 = (function (){var G__326661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326662 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326661,G__326662) : tailrecursion.hoplon.span.call(null,G__326661,G__326662));
})();
var G__326440 = "(";
var G__326441 = (function (){var G__326663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326664 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326663,G__326664) : tailrecursion.hoplon.span.call(null,G__326663,G__326664));
})();
var G__326442 = (function (){var G__326665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326666 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326665,G__326666) : tailrecursion.hoplon.span.call(null,G__326665,G__326666));
})();
var G__326443 = ") ";
var G__326444 = (function (){var G__326667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326668 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326667,G__326668) : tailrecursion.hoplon.span.call(null,G__326667,G__326668));
})();
var G__326445 = ") (";
var G__326446 = (function (){var G__326669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326670 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326669,G__326670) : tailrecursion.hoplon.span.call(null,G__326669,G__326670));
})();
var G__326447 = " ";
var G__326448 = (function (){var G__326671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326672 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326671,G__326672) : tailrecursion.hoplon.span.call(null,G__326671,G__326672));
})();
var G__326449 = " \n                                       (";
var G__326450 = (function (){var G__326673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326674 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326673,G__326674) : tailrecursion.hoplon.span.call(null,G__326673,G__326674));
})();
var G__326451 = "(";
var G__326452 = (function (){var G__326675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326676 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326675,G__326676) : tailrecursion.hoplon.span.call(null,G__326675,G__326676));
})();
var G__326453 = (function (){var G__326677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326678 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326677,G__326678) : tailrecursion.hoplon.span.call(null,G__326677,G__326678));
})();
var G__326454 = " ";
var G__326455 = (function (){var G__326679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326680 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326679,G__326680) : tailrecursion.hoplon.span.call(null,G__326679,G__326680));
})();
var G__326456 = ")\n                                             (";
var G__326457 = (function (){var G__326681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326682 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326681,G__326682) : tailrecursion.hoplon.span.call(null,G__326681,G__326682));
})();
var G__326458 = " (";
var G__326459 = (function (){var G__326683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326684 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326683,G__326684) : tailrecursion.hoplon.span.call(null,G__326683,G__326684));
})();
var G__326460 = (function (){var G__326685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326686 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326685,G__326686) : tailrecursion.hoplon.span.call(null,G__326685,G__326686));
})();
var G__326461 = ")\n                                                                  (";
var G__326462 = (function (){var G__326687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326688 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326687,G__326688) : tailrecursion.hoplon.span.call(null,G__326687,G__326688));
})();
var G__326463 = (function (){var G__326689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326690 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326689,G__326690) : tailrecursion.hoplon.span.call(null,G__326689,G__326690));
})();
var G__326464 = "))))\n          ";
var G__326465 = (function (){var G__326691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326692 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326691,G__326692) : tailrecursion.hoplon.span.call(null,G__326691,G__326692));
})();
var G__326466 = " (";
var G__326467 = (function (){var G__326693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326694 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326693,G__326694) : tailrecursion.hoplon.span.call(null,G__326693,G__326694));
})();
var G__326468 = " (";
var G__326469 = (function (){var G__326695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326696 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326695,G__326696) : tailrecursion.hoplon.span.call(null,G__326695,G__326696));
})();
var G__326470 = (function (){var G__326697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326698 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326697,G__326698) : tailrecursion.hoplon.span.call(null,G__326697,G__326698));
})();
var G__326471 = " (";
var G__326472 = (function (){var G__326699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326700 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326699,G__326700) : tailrecursion.hoplon.span.call(null,G__326699,G__326700));
})();
var G__326473 = (function (){var G__326701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326702 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326701,G__326702) : tailrecursion.hoplon.span.call(null,G__326701,G__326702));
})();
var G__326474 = " ";
var G__326475 = (function (){var G__326703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326704 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326703,G__326704) : tailrecursion.hoplon.span.call(null,G__326703,G__326704));
})();
var G__326476 = "))\n                       (";
var G__326477 = (function (){var G__326705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326706 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326705,G__326706) : tailrecursion.hoplon.span.call(null,G__326705,G__326706));
})();
var G__326478 = (function (){var G__326707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326708 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326707,G__326708) : tailrecursion.hoplon.span.call(null,G__326707,G__326708));
})();
var G__326479 = " ";
var G__326480 = (function (){var G__326709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326710 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326709,G__326710) : tailrecursion.hoplon.span.call(null,G__326709,G__326710));
})();
var G__326481 = ")))))\n\n(";
var G__326482 = (function (){var G__326711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326712 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326711,G__326712) : tailrecursion.hoplon.span.call(null,G__326711,G__326712));
})();
var G__326483 = (function (){var G__326713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326714 = "multiplication";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326713,G__326714) : tailrecursion.hoplon.span.call(null,G__326713,G__326714));
})();
var G__326484 = " [";
var G__326485 = (function (){var G__326715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326716 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326715,G__326716) : tailrecursion.hoplon.span.call(null,G__326715,G__326716));
})();
var G__326486 = "]\n  (";
var G__326487 = (function (){var G__326717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326718 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326717,G__326718) : tailrecursion.hoplon.span.call(null,G__326717,G__326718));
})();
var G__326488 = "[";
var G__326489 = (function (){var G__326719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326720 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326719,G__326720) : tailrecursion.hoplon.span.call(null,G__326719,G__326720));
})();
var G__326490 = " (";
var G__326491 = (function (){var G__326721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326722 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326721,G__326722) : tailrecursion.hoplon.span.call(null,G__326721,G__326722));
})();
var G__326492 = ")\n         ";
var G__326493 = (function (){var G__326723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326724 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326723,G__326724) : tailrecursion.hoplon.span.call(null,G__326723,G__326724));
})();
var G__326494 = (function (){var G__326725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326726 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326725,G__326726) : tailrecursion.hoplon.span.call(null,G__326725,G__326726));
})();
var G__326495 = "]\n    (";
var G__326496 = (function (){var G__326727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326728 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326727,G__326728) : tailrecursion.hoplon.span.call(null,G__326727,G__326728));
})();
var G__326497 = "(";
var G__326498 = (function (){var G__326729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326730 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326729,G__326730) : tailrecursion.hoplon.span.call(null,G__326729,G__326730));
})();
var G__326499 = " ";
var G__326500 = (function (){var G__326731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326732 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326731,G__326732) : tailrecursion.hoplon.span.call(null,G__326731,G__326732));
})();
var G__326501 = ") ";
var G__326502 = (function (){var G__326733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326734 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326733,G__326734) : tailrecursion.hoplon.span.call(null,G__326733,G__326734));
})();
var G__326503 = "\n          (";
var G__326504 = (function (){var G__326735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326736 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326735,G__326736) : tailrecursion.hoplon.span.call(null,G__326735,G__326736));
})();
var G__326505 = "(";
var G__326506 = (function (){var G__326737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326738 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326737,G__326738) : tailrecursion.hoplon.span.call(null,G__326737,G__326738));
})();
var G__326507 = (function (){var G__326739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326740 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326739,G__326740) : tailrecursion.hoplon.span.call(null,G__326739,G__326740));
})();
var G__326508 = ") ";
var G__326509 = (function (){var G__326741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326742 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326741,G__326742) : tailrecursion.hoplon.span.call(null,G__326741,G__326742));
})();
var G__326510 = ") (";
var G__326511 = (function (){var G__326743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326744 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326743,G__326744) : tailrecursion.hoplon.span.call(null,G__326743,G__326744));
})();
var G__326512 = " ";
var G__326513 = (function (){var G__326745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326746 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326745,G__326746) : tailrecursion.hoplon.span.call(null,G__326745,G__326746));
})();
var G__326514 = "\n                                      (";
var G__326515 = (function (){var G__326747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326748 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326747,G__326748) : tailrecursion.hoplon.span.call(null,G__326747,G__326748));
})();
var G__326516 = "(";
var G__326517 = (function (){var G__326749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326750 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326749,G__326750) : tailrecursion.hoplon.span.call(null,G__326749,G__326750));
})();
var G__326518 = (function (){var G__326751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326752 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326751,G__326752) : tailrecursion.hoplon.span.call(null,G__326751,G__326752));
})();
var G__326519 = " ";
var G__326520 = (function (){var G__326753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326754 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326753,G__326754) : tailrecursion.hoplon.span.call(null,G__326753,G__326754));
})();
var G__326521 = ")\n                                            (";
var G__326522 = (function (){var G__326755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326756 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326755,G__326756) : tailrecursion.hoplon.span.call(null,G__326755,G__326756));
})();
var G__326523 = " (";
var G__326524 = (function (){var G__326757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326758 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326757,G__326758) : tailrecursion.hoplon.span.call(null,G__326757,G__326758));
})();
var G__326525 = (function (){var G__326759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326760 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326759,G__326760) : tailrecursion.hoplon.span.call(null,G__326759,G__326760));
})();
var G__326526 = ")\n                                                          (";
var G__326527 = (function (){var G__326761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326762 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326761,G__326762) : tailrecursion.hoplon.span.call(null,G__326761,G__326762));
})();
var G__326528 = (function (){var G__326763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326764 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326763,G__326764) : tailrecursion.hoplon.span.call(null,G__326763,G__326764));
})();
var G__326529 = "))))\n          ";
var G__326530 = (function (){var G__326765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326766 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326765,G__326766) : tailrecursion.hoplon.span.call(null,G__326765,G__326766));
})();
var G__326531 = " (";
var G__326532 = (function (){var G__326767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326768 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326767,G__326768) : tailrecursion.hoplon.span.call(null,G__326767,G__326768));
})();
var G__326533 = " (";
var G__326534 = (function (){var G__326769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326770 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326769,G__326770) : tailrecursion.hoplon.span.call(null,G__326769,G__326770));
})();
var G__326535 = (function (){var G__326771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326772 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326771,G__326772) : tailrecursion.hoplon.span.call(null,G__326771,G__326772));
})();
var G__326536 = " (";
var G__326537 = (function (){var G__326773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326774 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326773,G__326774) : tailrecursion.hoplon.span.call(null,G__326773,G__326774));
})();
var G__326538 = (function (){var G__326775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326776 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326775,G__326776) : tailrecursion.hoplon.span.call(null,G__326775,G__326776));
})();
var G__326539 = " ";
var G__326540 = (function (){var G__326777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326778 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326777,G__326778) : tailrecursion.hoplon.span.call(null,G__326777,G__326778));
})();
var G__326541 = "))\n                       (";
var G__326542 = (function (){var G__326779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326780 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326779,G__326780) : tailrecursion.hoplon.span.call(null,G__326779,G__326780));
})();
var G__326543 = (function (){var G__326781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326782 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326781,G__326782) : tailrecursion.hoplon.span.call(null,G__326781,G__326782));
})();
var G__326544 = " ";
var G__326545 = (function (){var G__326783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326784 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326783,G__326784) : tailrecursion.hoplon.span.call(null,G__326783,G__326784));
})();
var G__326546 = ")))))\n\n(";
var G__326547 = (function (){var G__326785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326786 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326785,G__326786) : tailrecursion.hoplon.span.call(null,G__326785,G__326786));
})();
var G__326548 = (function (){var G__326787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326788 = "addition";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326787,G__326788) : tailrecursion.hoplon.span.call(null,G__326787,G__326788));
})();
var G__326549 = " [";
var G__326550 = (function (){var G__326789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326790 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326789,G__326790) : tailrecursion.hoplon.span.call(null,G__326789,G__326790));
})();
var G__326551 = "]\n  (";
var G__326552 = (function (){var G__326791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326792 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326791,G__326792) : tailrecursion.hoplon.span.call(null,G__326791,G__326792));
})();
var G__326553 = "[";
var G__326554 = (function (){var G__326793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326794 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326793,G__326794) : tailrecursion.hoplon.span.call(null,G__326793,G__326794));
})();
var G__326555 = " (";
var G__326556 = (function (){var G__326795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326796 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326795,G__326796) : tailrecursion.hoplon.span.call(null,G__326795,G__326796));
})();
var G__326557 = ")\n         ";
var G__326558 = (function (){var G__326797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326798 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326797,G__326798) : tailrecursion.hoplon.span.call(null,G__326797,G__326798));
})();
var G__326559 = (function (){var G__326799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326800 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326799,G__326800) : tailrecursion.hoplon.span.call(null,G__326799,G__326800));
})();
var G__326560 = "]\n    (";
var G__326561 = (function (){var G__326801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326802 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326801,G__326802) : tailrecursion.hoplon.span.call(null,G__326801,G__326802));
})();
var G__326562 = "(";
var G__326563 = (function (){var G__326803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326804 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326803,G__326804) : tailrecursion.hoplon.span.call(null,G__326803,G__326804));
})();
var G__326564 = " ";
var G__326565 = (function (){var G__326805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326806 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326805,G__326806) : tailrecursion.hoplon.span.call(null,G__326805,G__326806));
})();
var G__326566 = ") ";
var G__326567 = (function (){var G__326807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326808 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326807,G__326808) : tailrecursion.hoplon.span.call(null,G__326807,G__326808));
})();
var G__326568 = "\n          (";
var G__326569 = (function (){var G__326809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326810 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326809,G__326810) : tailrecursion.hoplon.span.call(null,G__326809,G__326810));
})();
var G__326570 = "(";
var G__326571 = (function (){var G__326811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326812 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326811,G__326812) : tailrecursion.hoplon.span.call(null,G__326811,G__326812));
})();
var G__326572 = (function (){var G__326813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326814 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326813,G__326814) : tailrecursion.hoplon.span.call(null,G__326813,G__326814));
})();
var G__326573 = ") ";
var G__326574 = (function (){var G__326815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326816 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326815,G__326816) : tailrecursion.hoplon.span.call(null,G__326815,G__326816));
})();
var G__326575 = ") (";
var G__326576 = (function (){var G__326817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326818 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326817,G__326818) : tailrecursion.hoplon.span.call(null,G__326817,G__326818));
})();
var G__326577 = " ";
var G__326578 = (function (){var G__326819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326820 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326819,G__326820) : tailrecursion.hoplon.span.call(null,G__326819,G__326820));
})();
var G__326579 = "\n                                      (";
var G__326580 = (function (){var G__326821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326822 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326821,G__326822) : tailrecursion.hoplon.span.call(null,G__326821,G__326822));
})();
var G__326581 = "(";
var G__326582 = (function (){var G__326823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326824 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326823,G__326824) : tailrecursion.hoplon.span.call(null,G__326823,G__326824));
})();
var G__326583 = (function (){var G__326825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326826 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326825,G__326826) : tailrecursion.hoplon.span.call(null,G__326825,G__326826));
})();
var G__326584 = " ";
var G__326585 = (function (){var G__326827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326828 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326827,G__326828) : tailrecursion.hoplon.span.call(null,G__326827,G__326828));
})();
var G__326586 = ")\n                                            (";
var G__326587 = (function (){var G__326829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326830 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326829,G__326830) : tailrecursion.hoplon.span.call(null,G__326829,G__326830));
})();
var G__326588 = " (";
var G__326589 = (function (){var G__326831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326832 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326831,G__326832) : tailrecursion.hoplon.span.call(null,G__326831,G__326832));
})();
var G__326590 = (function (){var G__326833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326834 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326833,G__326834) : tailrecursion.hoplon.span.call(null,G__326833,G__326834));
})();
var G__326591 = ")\n                                                      (";
var G__326592 = (function (){var G__326835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326836 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326835,G__326836) : tailrecursion.hoplon.span.call(null,G__326835,G__326836));
})();
var G__326593 = (function (){var G__326837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326838 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326837,G__326838) : tailrecursion.hoplon.span.call(null,G__326837,G__326838));
})();
var G__326594 = "))))\n          ";
var G__326595 = (function (){var G__326839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326840 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326839,G__326840) : tailrecursion.hoplon.span.call(null,G__326839,G__326840));
})();
var G__326596 = " (";
var G__326597 = (function (){var G__326841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326842 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326841,G__326842) : tailrecursion.hoplon.span.call(null,G__326841,G__326842));
})();
var G__326598 = " (";
var G__326599 = (function (){var G__326843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326844 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326843,G__326844) : tailrecursion.hoplon.span.call(null,G__326843,G__326844));
})();
var G__326600 = (function (){var G__326845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326846 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326845,G__326846) : tailrecursion.hoplon.span.call(null,G__326845,G__326846));
})();
var G__326601 = " (";
var G__326602 = (function (){var G__326847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326848 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326847,G__326848) : tailrecursion.hoplon.span.call(null,G__326847,G__326848));
})();
var G__326603 = (function (){var G__326849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326850 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326849,G__326850) : tailrecursion.hoplon.span.call(null,G__326849,G__326850));
})();
var G__326604 = " ";
var G__326605 = (function (){var G__326851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326852 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326851,G__326852) : tailrecursion.hoplon.span.call(null,G__326851,G__326852));
})();
var G__326606 = "))\n                       (";
var G__326607 = (function (){var G__326853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326854 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326853,G__326854) : tailrecursion.hoplon.span.call(null,G__326853,G__326854));
})();
var G__326608 = (function (){var G__326855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326856 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326855,G__326856) : tailrecursion.hoplon.span.call(null,G__326855,G__326856));
})();
var G__326609 = " ";
var G__326610 = (function (){var G__326857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326858 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326857,G__326858) : tailrecursion.hoplon.span.call(null,G__326857,G__326858));
})();
var G__326611 = ")))))\n\n(";
var G__326612 = (function (){var G__326859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326860 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326859,G__326860) : tailrecursion.hoplon.span.call(null,G__326859,G__326860));
})();
var G__326613 = (function (){var G__326861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326862 = "pemdas";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326861,G__326862) : tailrecursion.hoplon.span.call(null,G__326861,G__326862));
})();
var G__326614 = " [";
var G__326615 = (function (){var G__326863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326864 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326863,G__326864) : tailrecursion.hoplon.span.call(null,G__326863,G__326864));
})();
var G__326616 = "]\n  (";
var G__326617 = (function (){var G__326865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326866 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326865,G__326866) : tailrecursion.hoplon.span.call(null,G__326865,G__326866));
})();
var G__326618 = "(";
var G__326619 = (function (){var G__326867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326868 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326867,G__326868) : tailrecursion.hoplon.span.call(null,G__326867,G__326868));
})();
var G__326620 = (function (){var G__326869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326870 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326869,G__326870) : tailrecursion.hoplon.span.call(null,G__326869,G__326870));
})();
var G__326621 = ") (";
var G__326622 = (function (){var G__326871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326872 = "->>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326871,G__326872) : tailrecursion.hoplon.span.call(null,G__326871,G__326872));
})();
var G__326623 = " (";
var G__326624 = (function (){var G__326873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326874 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326873,G__326874) : tailrecursion.hoplon.span.call(null,G__326873,G__326874));
})();
var G__326625 = (function (){var G__326875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326876 = "pemdas";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326875,G__326876) : tailrecursion.hoplon.span.call(null,G__326875,G__326876));
})();
var G__326626 = " ";
var G__326627 = (function (){var G__326877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326878 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326877,G__326878) : tailrecursion.hoplon.span.call(null,G__326877,G__326878));
})();
var G__326628 = ")\n                             (";
var G__326629 = (function (){var G__326879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326880 = "exponents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326879,G__326880) : tailrecursion.hoplon.span.call(null,G__326879,G__326880));
})();
var G__326630 = ")\n                             (";
var G__326631 = (function (){var G__326881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326882 = "multiplication";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326881,G__326882) : tailrecursion.hoplon.span.call(null,G__326881,G__326882));
})();
var G__326632 = ")\n                             (";
var G__326633 = (function (){var G__326883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326884 = "addition";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326883,G__326884) : tailrecursion.hoplon.span.call(null,G__326883,G__326884));
})();
var G__326634 = "))\n      ";
var G__326635 = (function (){var G__326885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326886 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326885,G__326886) : tailrecursion.hoplon.span.call(null,G__326885,G__326886));
})();
var G__326636 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222(G__326415,G__326416,G__326417,G__326418,G__326419,G__326420,G__326421,G__326422,G__326423,G__326424,G__326425,G__326426,G__326427,G__326428,G__326429,G__326430,G__326431,G__326432,G__326433,G__326434,G__326435,G__326436,G__326437,G__326438,G__326439,G__326440,G__326441,G__326442,G__326443,G__326444,G__326445,G__326446,G__326447,G__326448,G__326449,G__326450,G__326451,G__326452,G__326453,G__326454,G__326455,G__326456,G__326457,G__326458,G__326459,G__326460,G__326461,G__326462,G__326463,G__326464,G__326465,G__326466,G__326467,G__326468,G__326469,G__326470,G__326471,G__326472,G__326473,G__326474,G__326475,G__326476,G__326477,G__326478,G__326479,G__326480,G__326481,G__326482,G__326483,G__326484,G__326485,G__326486,G__326487,G__326488,G__326489,G__326490,G__326491,G__326492,G__326493,G__326494,G__326495,G__326496,G__326497,G__326498,G__326499,G__326500,G__326501,G__326502,G__326503,G__326504,G__326505,G__326506,G__326507,G__326508,G__326509,G__326510,G__326511,G__326512,G__326513,G__326514,G__326515,G__326516,G__326517,G__326518,G__326519,G__326520,G__326521,G__326522,G__326523,G__326524,G__326525,G__326526,G__326527,G__326528,G__326529,G__326530,G__326531,G__326532,G__326533,G__326534,G__326535,G__326536,G__326537,G__326538,G__326539,G__326540,G__326541,G__326542,G__326543,G__326544,G__326545,G__326546,G__326547,G__326548,G__326549,G__326550,G__326551,G__326552,G__326553,G__326554,G__326555,G__326556,G__326557,G__326558,G__326559,G__326560,G__326561,G__326562,G__326563,G__326564,G__326565,G__326566,G__326567,G__326568,G__326569,G__326570,G__326571,G__326572,G__326573,G__326574,G__326575,G__326576,G__326577,G__326578,G__326579,G__326580,G__326581,G__326582,G__326583,G__326584,G__326585,G__326586,G__326587,G__326588,G__326589,G__326590,G__326591,G__326592,G__326593,G__326594,G__326595,G__326596,G__326597,G__326598,G__326599,G__326600,G__326601,G__326602,G__326603,G__326604,G__326605,G__326606,G__326607,G__326608,G__326609,G__326610,G__326611,G__326612,G__326613,G__326614,G__326615,G__326616,G__326617,G__326618,G__326619,G__326620,G__326621,G__326622,G__326623,G__326624,G__326625,G__326626,G__326627,G__326628,G__326629,G__326630,G__326631,G__326632,G__326633,G__326634,G__326635,G__326636) : tailrecursion.hoplon.pre.call(null,G__326415,G__326416,G__326417,G__326418,G__326419,G__326420,G__326421,G__326422,G__326423,G__326424,G__326425,G__326426,G__326427,G__326428,G__326429,G__326430,G__326431,G__326432,G__326433,G__326434,G__326435,G__326436,G__326437,G__326438,G__326439,G__326440,G__326441,G__326442,G__326443,G__326444,G__326445,G__326446,G__326447,G__326448,G__326449,G__326450,G__326451,G__326452,G__326453,G__326454,G__326455,G__326456,G__326457,G__326458,G__326459,G__326460,G__326461,G__326462,G__326463,G__326464,G__326465,G__326466,G__326467,G__326468,G__326469,G__326470,G__326471,G__326472,G__326473,G__326474,G__326475,G__326476,G__326477,G__326478,G__326479,G__326480,G__326481,G__326482,G__326483,G__326484,G__326485,G__326486,G__326487,G__326488,G__326489,G__326490,G__326491,G__326492,G__326493,G__326494,G__326495,G__326496,G__326497,G__326498,G__326499,G__326500,G__326501,G__326502,G__326503,G__326504,G__326505,G__326506,G__326507,G__326508,G__326509,G__326510,G__326511,G__326512,G__326513,G__326514,G__326515,G__326516,G__326517,G__326518,G__326519,G__326520,G__326521,G__326522,G__326523,G__326524,G__326525,G__326526,G__326527,G__326528,G__326529,G__326530,G__326531,G__326532,G__326533,G__326534,G__326535,G__326536,G__326537,G__326538,G__326539,G__326540,G__326541,G__326542,G__326543,G__326544,G__326545,G__326546,G__326547,G__326548,G__326549,G__326550,G__326551,G__326552,G__326553,G__326554,G__326555,G__326556,G__326557,G__326558,G__326559,G__326560,G__326561,G__326562,G__326563,G__326564,G__326565,G__326566,G__326567,G__326568,G__326569,G__326570,G__326571,G__326572,G__326573,G__326574,G__326575,G__326576,G__326577,G__326578,G__326579,G__326580,G__326581,G__326582,G__326583,G__326584,G__326585,G__326586,G__326587,G__326588,G__326589,G__326590,G__326591,G__326592,G__326593,G__326594,G__326595,G__326596,G__326597,G__326598,G__326599,G__326600,G__326601,G__326602,G__326603,G__326604,G__326605,G__326606,G__326607,G__326608,G__326609,G__326610,G__326611,G__326612,G__326613,G__326614,G__326615,G__326616,G__326617,G__326618,G__326619,G__326620,G__326621,G__326622,G__326623,G__326624,G__326625,G__326626,G__326627,G__326628,G__326629,G__326630,G__326631,G__326632,G__326633,G__326634,G__326635,G__326636));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__326413,G__326414) : tailrecursion.hoplon.div.call(null,G__326413,G__326414));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__326412) : tailrecursion.hoplon.div.call(null,G__326412));
})(),(function (){var G__326887 = cljs.core.PersistentArrayMap.EMPTY;
var G__326888 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After this, our expression should be in prefix notation with only two arguments for each operation, so we can use procedures supplied in the book. If you are unclear about what I did here (with ",(function (){var G__326889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"->>"], null);
var G__326890 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326889,G__326890) : tailrecursion.hoplon.markdown.code_node.call(null,G__326889,G__326890));
})(),") look up Clojure",(function (){var G__326891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__326892 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__326891,G__326892) : tailrecursion.hoplon.markdown.simple_node.call(null,G__326891,G__326892));
})(),"s ",(function (){var G__326893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__326894 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["threading macro"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__326893,G__326894) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__326893,G__326894));
})()," or shoot me an email and I",(function (){var G__326895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__326896 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__326895,G__326896) : tailrecursion.hoplon.markdown.simple_node.call(null,G__326895,G__326896));
})(),"ll be happy to clarify things. Again, I would appreciate hearing exactly what is unclear so that I can make this site as clear as possible for future readers. So don",(function (){var G__326897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__326898 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__326897,G__326898) : tailrecursion.hoplon.markdown.simple_node.call(null,G__326897,G__326898));
})(),"t be shy! Email me! (My email address is in the footer)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326887,G__326888) : tailrecursion.hoplon.markdown.para_node.call(null,G__326887,G__326888));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325929;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325928;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325927;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325926;
}})()], 0))], 0))], 0));
var G__320063 = "";
var G__320064 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Representing Sets"], null),(function (){var _STAR_references_STAR_326899 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326900 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_326901 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326902 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__326903 = cljs.core.PersistentArrayMap.EMPTY;
var G__326904 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the previous examples we built representations for two kinds of compound data objects: rational numbers and algebraic expressions. In one of these examples we had the choice of simplifying (reducing) the expressions at either construction time or selection time, but other than that the choice of a representation for these structures in terms of lists was straightforward. When we turn to the representation of sets, the choice of a representation is not so obvious. Indeed, there are a number of possible representations, and they differ significantly from one another in several ways."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326903,G__326904) : tailrecursion.hoplon.markdown.para_node.call(null,G__326903,G__326904));
})(),(function (){var G__326905 = cljs.core.PersistentArrayMap.EMPTY;
var G__326906 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Informally, a set is simply a collection of distinct objects. To give a more precise definition we can employ the method of data abstraction. That is, we define ",(function (){var G__326907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__326908 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["set"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__326907,G__326908) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__326907,G__326908));
})()," by specifying the operations that are to be used on sets. These are ",(function (){var G__326909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__326910 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326909,G__326910) : tailrecursion.hoplon.markdown.code_node.call(null,G__326909,G__326910));
})(),", ",(function (){var G__326911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__326912 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326911,G__326912) : tailrecursion.hoplon.markdown.code_node.call(null,G__326911,G__326912));
})(),", ",(function (){var G__326913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__326914 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326913,G__326914) : tailrecursion.hoplon.markdown.code_node.call(null,G__326913,G__326914));
})(),", and ",(function (){var G__326915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__326916 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326915,G__326916) : tailrecursion.hoplon.markdown.code_node.call(null,G__326915,G__326916));
})(),". ",(function (){var G__326917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Element-of-set?"], null);
var G__326918 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326917,G__326918) : tailrecursion.hoplon.markdown.code_node.call(null,G__326917,G__326918));
})()," is a predicate that determines whether a given element is a member of a set. ",(function (){var G__326919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Adjoin-set"], null);
var G__326920 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326919,G__326920) : tailrecursion.hoplon.markdown.code_node.call(null,G__326919,G__326920));
})()," takes an object and a set as arguments and returns a set that contains the elements of the original set and also the adjoined element. ",(function (){var G__326921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Union-set"], null);
var G__326922 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326921,G__326922) : tailrecursion.hoplon.markdown.code_node.call(null,G__326921,G__326922));
})()," computes the union of two sets, which is the set containing each element that appears in either argument. ",(function (){var G__326923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Intersection-set"], null);
var G__326924 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326923,G__326924) : tailrecursion.hoplon.markdown.code_node.call(null,G__326923,G__326924));
})()," computes the intersection of two sets, which is the set containing only elements that appear in both arguments. From the viewpoint of data abstraction, we are free to design any representation that implements these operations in a way consistent with the interpretations given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326905,G__326906) : tailrecursion.hoplon.markdown.para_node.call(null,G__326905,G__326906));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326902;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326901;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326900;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326899;
}})()], 0));
var G__320065 = "";
var G__320066 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Unordered Lists"], null),(function (){var _STAR_references_STAR_326925 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326926 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_326927 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326928 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__326929 = cljs.core.PersistentArrayMap.EMPTY;
var G__326930 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One way to represent a set is as a list of its elements in which no element appears more than once. The empty set is represented by the empty list. In this representation, ",(function (){var G__326931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__326932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326931,G__326932) : tailrecursion.hoplon.markdown.code_node.call(null,G__326931,G__326932));
})()," is similar to the procedure ",(function (){var G__326933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__326934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326933,G__326934) : tailrecursion.hoplon.markdown.code_node.call(null,G__326933,G__326934));
})()," of section 2.3.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326929,G__326930) : tailrecursion.hoplon.markdown.para_node.call(null,G__326929,G__326930));
})(),(function (){var G__327015 = (function (){var G__327016 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327017 = (function (){var G__327018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327019 = "(";
var G__327020 = (function (){var G__327056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327057 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327056,G__327057) : tailrecursion.hoplon.span.call(null,G__327056,G__327057));
})();
var G__327021 = (function (){var G__327058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327059 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327058,G__327059) : tailrecursion.hoplon.span.call(null,G__327058,G__327059));
})();
var G__327022 = " [";
var G__327023 = (function (){var G__327060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327061 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327060,G__327061) : tailrecursion.hoplon.span.call(null,G__327060,G__327061));
})();
var G__327024 = " ";
var G__327025 = (function (){var G__327062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327063 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327062,G__327063) : tailrecursion.hoplon.span.call(null,G__327062,G__327063));
})();
var G__327026 = "]\n  (";
var G__327027 = (function (){var G__327064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327065 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327064,G__327065) : tailrecursion.hoplon.span.call(null,G__327064,G__327065));
})();
var G__327028 = "[";
var G__327029 = (function (){var G__327066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327067 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327066,G__327067) : tailrecursion.hoplon.span.call(null,G__327066,G__327067));
})();
var G__327030 = " ";
var G__327031 = (function (){var G__327068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327069 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327068,G__327069) : tailrecursion.hoplon.span.call(null,G__327068,G__327069));
})();
var G__327032 = "]\n    (";
var G__327033 = (function (){var G__327070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327071 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327070,G__327071) : tailrecursion.hoplon.span.call(null,G__327070,G__327071));
})();
var G__327034 = "(";
var G__327035 = (function (){var G__327072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327073 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327072,G__327073) : tailrecursion.hoplon.span.call(null,G__327072,G__327073));
})();
var G__327036 = " ";
var G__327037 = (function (){var G__327074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327075 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327074,G__327075) : tailrecursion.hoplon.span.call(null,G__327074,G__327075));
})();
var G__327038 = ") ";
var G__327039 = (function (){var G__327076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327077 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327076,G__327077) : tailrecursion.hoplon.span.call(null,G__327076,G__327077));
})();
var G__327040 = "\n          (";
var G__327041 = (function (){var G__327078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327079 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327078,G__327079) : tailrecursion.hoplon.span.call(null,G__327078,G__327079));
})();
var G__327042 = (function (){var G__327080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327081 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327080,G__327081) : tailrecursion.hoplon.span.call(null,G__327080,G__327081));
})();
var G__327043 = " (";
var G__327044 = (function (){var G__327082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327083 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327082,G__327083) : tailrecursion.hoplon.span.call(null,G__327082,G__327083));
})();
var G__327045 = (function (){var G__327084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327085 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327084,G__327085) : tailrecursion.hoplon.span.call(null,G__327084,G__327085));
})();
var G__327046 = ")) ";
var G__327047 = (function (){var G__327086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327087 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327086,G__327087) : tailrecursion.hoplon.span.call(null,G__327086,G__327087));
})();
var G__327048 = "\n          ";
var G__327049 = (function (){var G__327088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327089 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327088,G__327089) : tailrecursion.hoplon.span.call(null,G__327088,G__327089));
})();
var G__327050 = "  (";
var G__327051 = (function (){var G__327090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327091 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327090,G__327091) : tailrecursion.hoplon.span.call(null,G__327090,G__327091));
})();
var G__327052 = " (";
var G__327053 = (function (){var G__327092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327093 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327092,G__327093) : tailrecursion.hoplon.span.call(null,G__327092,G__327093));
})();
var G__327054 = (function (){var G__327094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327095 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327094,G__327095) : tailrecursion.hoplon.span.call(null,G__327094,G__327095));
})();
var G__327055 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__327018,G__327019,G__327020,G__327021,G__327022,G__327023,G__327024,G__327025,G__327026,G__327027,G__327028,G__327029,G__327030,G__327031,G__327032,G__327033,G__327034,G__327035,G__327036,G__327037,G__327038,G__327039,G__327040,G__327041,G__327042,G__327043,G__327044,G__327045,G__327046,G__327047,G__327048,G__327049,G__327050,G__327051,G__327052,G__327053,G__327054,G__327055) : tailrecursion.hoplon.pre.call(null,G__327018,G__327019,G__327020,G__327021,G__327022,G__327023,G__327024,G__327025,G__327026,G__327027,G__327028,G__327029,G__327030,G__327031,G__327032,G__327033,G__327034,G__327035,G__327036,G__327037,G__327038,G__327039,G__327040,G__327041,G__327042,G__327043,G__327044,G__327045,G__327046,G__327047,G__327048,G__327049,G__327050,G__327051,G__327052,G__327053,G__327054,G__327055));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327016,G__327017) : tailrecursion.hoplon.div.call(null,G__327016,G__327017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327015) : tailrecursion.hoplon.div.call(null,G__327015));
})(),(function (){var G__327096 = cljs.core.PersistentArrayMap.EMPTY;
var G__327097 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this, we can write ",(function (){var G__327098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__327099 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327098,G__327099) : tailrecursion.hoplon.markdown.code_node.call(null,G__327098,G__327099));
})(),". If the object to be adjoined is already in the set, we just return the set. Otherwise, we use ",(function (){var G__327100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__327101 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327100,G__327101) : tailrecursion.hoplon.markdown.code_node.call(null,G__327100,G__327101));
})()," to add the object to the list that represents the set:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327096,G__327097) : tailrecursion.hoplon.markdown.para_node.call(null,G__327096,G__327097));
})(),(function (){var G__327148 = (function (){var G__327149 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327150 = (function (){var G__327151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327152 = "(";
var G__327153 = (function (){var G__327173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327174 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327173,G__327174) : tailrecursion.hoplon.span.call(null,G__327173,G__327174));
})();
var G__327154 = (function (){var G__327175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327176 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327175,G__327176) : tailrecursion.hoplon.span.call(null,G__327175,G__327176));
})();
var G__327155 = " [";
var G__327156 = (function (){var G__327177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327178 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327177,G__327178) : tailrecursion.hoplon.span.call(null,G__327177,G__327178));
})();
var G__327157 = " ";
var G__327158 = (function (){var G__327179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327180 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327179,G__327180) : tailrecursion.hoplon.span.call(null,G__327179,G__327180));
})();
var G__327159 = "]\n  (";
var G__327160 = (function (){var G__327181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327182 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327181,G__327182) : tailrecursion.hoplon.span.call(null,G__327181,G__327182));
})();
var G__327161 = "(";
var G__327162 = (function (){var G__327183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327184 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327183,G__327184) : tailrecursion.hoplon.span.call(null,G__327183,G__327184));
})();
var G__327163 = " ";
var G__327164 = (function (){var G__327185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327186 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327185,G__327186) : tailrecursion.hoplon.span.call(null,G__327185,G__327186));
})();
var G__327165 = " ";
var G__327166 = (function (){var G__327187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327188 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327187,G__327188) : tailrecursion.hoplon.span.call(null,G__327187,G__327188));
})();
var G__327167 = ")\n      ";
var G__327168 = (function (){var G__327189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327190 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327189,G__327190) : tailrecursion.hoplon.span.call(null,G__327189,G__327190));
})();
var G__327169 = "\n      (";
var G__327170 = (function (){var G__327191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327192 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327191,G__327192) : tailrecursion.hoplon.span.call(null,G__327191,G__327192));
})();
var G__327171 = (function (){var G__327193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327194 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327193,G__327194) : tailrecursion.hoplon.span.call(null,G__327193,G__327194));
})();
var G__327172 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__327151,G__327152,G__327153,G__327154,G__327155,G__327156,G__327157,G__327158,G__327159,G__327160,G__327161,G__327162,G__327163,G__327164,G__327165,G__327166,G__327167,G__327168,G__327169,G__327170,G__327171,G__327172) : tailrecursion.hoplon.pre.call(null,G__327151,G__327152,G__327153,G__327154,G__327155,G__327156,G__327157,G__327158,G__327159,G__327160,G__327161,G__327162,G__327163,G__327164,G__327165,G__327166,G__327167,G__327168,G__327169,G__327170,G__327171,G__327172));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327149,G__327150) : tailrecursion.hoplon.div.call(null,G__327149,G__327150));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327148) : tailrecursion.hoplon.div.call(null,G__327148));
})(),(function (){var G__327195 = cljs.core.PersistentArrayMap.EMPTY;
var G__327196 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For ",(function (){var G__327197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-of-set"], null);
var G__327198 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327197,G__327198) : tailrecursion.hoplon.markdown.code_node.call(null,G__327197,G__327198));
})()," we can use a recursive strategy. If we know how to form the intersection of ",(function (){var G__327199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__327200 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327199,G__327200) : tailrecursion.hoplon.markdown.code_node.call(null,G__327199,G__327200));
})()," and the ",(function (){var G__327201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__327202 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327201,G__327202) : tailrecursion.hoplon.markdown.code_node.call(null,G__327201,G__327202));
})()," of ",(function (){var G__327203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__327204 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327203,G__327204) : tailrecursion.hoplon.markdown.code_node.call(null,G__327203,G__327204));
})(),", we only need to decide whether to include the ",(function (){var G__327205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__327206 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327205,G__327206) : tailrecursion.hoplon.markdown.code_node.call(null,G__327205,G__327206));
})()," of ",(function (){var G__327207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__327208 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327207,G__327208) : tailrecursion.hoplon.markdown.code_node.call(null,G__327207,G__327208));
})()," in this. But this depends on whether ",(function (){var G__327209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first set1)"], null);
var G__327210 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327209,G__327210) : tailrecursion.hoplon.markdown.code_node.call(null,G__327209,G__327210));
})()," is also in ",(function (){var G__327211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__327212 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327211,G__327212) : tailrecursion.hoplon.markdown.code_node.call(null,G__327211,G__327212));
})(),". Here is the resulting procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327195,G__327196) : tailrecursion.hoplon.markdown.para_node.call(null,G__327195,G__327196));
})(),(function (){var G__327320 = (function (){var G__327321 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327322 = (function (){var G__327323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327324 = "(";
var G__327325 = (function (){var G__327374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327375 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327374,G__327375) : tailrecursion.hoplon.span.call(null,G__327374,G__327375));
})();
var G__327326 = (function (){var G__327376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327377 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327376,G__327377) : tailrecursion.hoplon.span.call(null,G__327376,G__327377));
})();
var G__327327 = " [";
var G__327328 = (function (){var G__327378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327379 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327378,G__327379) : tailrecursion.hoplon.span.call(null,G__327378,G__327379));
})();
var G__327329 = " ";
var G__327330 = (function (){var G__327380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327381 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327380,G__327381) : tailrecursion.hoplon.span.call(null,G__327380,G__327381));
})();
var G__327331 = "]\n  (";
var G__327332 = (function (){var G__327382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327383 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327382,G__327383) : tailrecursion.hoplon.span.call(null,G__327382,G__327383));
})();
var G__327333 = "(";
var G__327334 = (function (){var G__327384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327385 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327384,G__327385) : tailrecursion.hoplon.span.call(null,G__327384,G__327385));
})();
var G__327335 = "(";
var G__327336 = (function (){var G__327386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327387 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327386,G__327387) : tailrecursion.hoplon.span.call(null,G__327386,G__327387));
})();
var G__327337 = " ";
var G__327338 = (function (){var G__327388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327389 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327388,G__327389) : tailrecursion.hoplon.span.call(null,G__327388,G__327389));
})();
var G__327339 = ") (";
var G__327340 = (function (){var G__327390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327391 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327390,G__327391) : tailrecursion.hoplon.span.call(null,G__327390,G__327391));
})();
var G__327341 = " ";
var G__327342 = (function (){var G__327392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327393 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327392,G__327393) : tailrecursion.hoplon.span.call(null,G__327392,G__327393));
})();
var G__327343 = ")) ";
var G__327344 = (function (){var G__327394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__327395 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327394,G__327395) : tailrecursion.hoplon.span.call(null,G__327394,G__327395));
})();
var G__327345 = "()\n        (";
var G__327346 = (function (){var G__327396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327397 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327396,G__327397) : tailrecursion.hoplon.span.call(null,G__327396,G__327397));
})();
var G__327347 = " (";
var G__327348 = (function (){var G__327398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327399 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327398,G__327399) : tailrecursion.hoplon.span.call(null,G__327398,G__327399));
})();
var G__327349 = (function (){var G__327400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327401 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327400,G__327401) : tailrecursion.hoplon.span.call(null,G__327400,G__327401));
})();
var G__327350 = ") ";
var G__327351 = (function (){var G__327402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327403 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327402,G__327403) : tailrecursion.hoplon.span.call(null,G__327402,G__327403));
})();
var G__327352 = ")\n          (";
var G__327353 = (function (){var G__327404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327405 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327404,G__327405) : tailrecursion.hoplon.span.call(null,G__327404,G__327405));
})();
var G__327354 = "(";
var G__327355 = (function (){var G__327406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327407 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327406,G__327407) : tailrecursion.hoplon.span.call(null,G__327406,G__327407));
})();
var G__327356 = " (";
var G__327357 = (function (){var G__327408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327409 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327408,G__327409) : tailrecursion.hoplon.span.call(null,G__327408,G__327409));
})();
var G__327358 = (function (){var G__327410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327411 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327410,G__327411) : tailrecursion.hoplon.span.call(null,G__327410,G__327411));
})();
var G__327359 = ") ";
var G__327360 = (function (){var G__327412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327413 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327412,G__327413) : tailrecursion.hoplon.span.call(null,G__327412,G__327413));
})();
var G__327361 = ")\n                (";
var G__327362 = (function (){var G__327414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327415 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327414,G__327415) : tailrecursion.hoplon.span.call(null,G__327414,G__327415));
})();
var G__327363 = (function (){var G__327416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327417 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327416,G__327417) : tailrecursion.hoplon.span.call(null,G__327416,G__327417));
})();
var G__327364 = "))\n        ";
var G__327365 = (function (){var G__327418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327419 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327418,G__327419) : tailrecursion.hoplon.span.call(null,G__327418,G__327419));
})();
var G__327366 = " (";
var G__327367 = (function (){var G__327420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327421 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327420,G__327421) : tailrecursion.hoplon.span.call(null,G__327420,G__327421));
})();
var G__327368 = " (";
var G__327369 = (function (){var G__327422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327423 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327422,G__327423) : tailrecursion.hoplon.span.call(null,G__327422,G__327423));
})();
var G__327370 = (function (){var G__327424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327425 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327424,G__327425) : tailrecursion.hoplon.span.call(null,G__327424,G__327425));
})();
var G__327371 = ") ";
var G__327372 = (function (){var G__327426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327427 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327426,G__327427) : tailrecursion.hoplon.span.call(null,G__327426,G__327427));
})();
var G__327373 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$51 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$51(G__327323,G__327324,G__327325,G__327326,G__327327,G__327328,G__327329,G__327330,G__327331,G__327332,G__327333,G__327334,G__327335,G__327336,G__327337,G__327338,G__327339,G__327340,G__327341,G__327342,G__327343,G__327344,G__327345,G__327346,G__327347,G__327348,G__327349,G__327350,G__327351,G__327352,G__327353,G__327354,G__327355,G__327356,G__327357,G__327358,G__327359,G__327360,G__327361,G__327362,G__327363,G__327364,G__327365,G__327366,G__327367,G__327368,G__327369,G__327370,G__327371,G__327372,G__327373) : tailrecursion.hoplon.pre.call(null,G__327323,G__327324,G__327325,G__327326,G__327327,G__327328,G__327329,G__327330,G__327331,G__327332,G__327333,G__327334,G__327335,G__327336,G__327337,G__327338,G__327339,G__327340,G__327341,G__327342,G__327343,G__327344,G__327345,G__327346,G__327347,G__327348,G__327349,G__327350,G__327351,G__327352,G__327353,G__327354,G__327355,G__327356,G__327357,G__327358,G__327359,G__327360,G__327361,G__327362,G__327363,G__327364,G__327365,G__327366,G__327367,G__327368,G__327369,G__327370,G__327371,G__327372,G__327373));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327321,G__327322) : tailrecursion.hoplon.div.call(null,G__327321,G__327322));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327320) : tailrecursion.hoplon.div.call(null,G__327320));
})(),(function (){var G__327428 = cljs.core.PersistentArrayMap.EMPTY;
var G__327429 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Can you turn this into an iterative procedure using ",(function (){var G__327430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__327431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327430,G__327431) : tailrecursion.hoplon.markdown.code_node.call(null,G__327430,G__327431));
})(),"?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327428,G__327429) : tailrecursion.hoplon.markdown.para_node.call(null,G__327428,G__327429));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326928;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326927;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326926;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326925;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327432 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327433 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327434 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327435 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327550 = (function (){var G__327551 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327552 = (function (){var G__327553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327554 = "(";
var G__327555 = (function (){var G__327607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327608 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327607,G__327608) : tailrecursion.hoplon.span.call(null,G__327607,G__327608));
})();
var G__327556 = (function (){var G__327609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327610 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327609,G__327610) : tailrecursion.hoplon.span.call(null,G__327609,G__327610));
})();
var G__327557 = " [";
var G__327558 = (function (){var G__327611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327612 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327611,G__327612) : tailrecursion.hoplon.span.call(null,G__327611,G__327612));
})();
var G__327559 = " ";
var G__327560 = (function (){var G__327613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327614 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327613,G__327614) : tailrecursion.hoplon.span.call(null,G__327613,G__327614));
})();
var G__327561 = "]\n  (";
var G__327562 = (function (){var G__327615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327616 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327615,G__327616) : tailrecursion.hoplon.span.call(null,G__327615,G__327616));
})();
var G__327563 = "[";
var G__327564 = (function (){var G__327617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327618 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327617,G__327618) : tailrecursion.hoplon.span.call(null,G__327617,G__327618));
})();
var G__327565 = "   ";
var G__327566 = (function (){var G__327619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__327620 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327619,G__327620) : tailrecursion.hoplon.span.call(null,G__327619,G__327620));
})();
var G__327567 = "()\n         ";
var G__327568 = (function (){var G__327621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327622 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327621,G__327622) : tailrecursion.hoplon.span.call(null,G__327621,G__327622));
})();
var G__327569 = " ";
var G__327570 = (function (){var G__327623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327624 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327623,G__327624) : tailrecursion.hoplon.span.call(null,G__327623,G__327624));
})();
var G__327571 = "]\n    (";
var G__327572 = (function (){var G__327625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327626 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327625,G__327626) : tailrecursion.hoplon.span.call(null,G__327625,G__327626));
})();
var G__327573 = "(";
var G__327574 = (function (){var G__327627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327628 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327627,G__327628) : tailrecursion.hoplon.span.call(null,G__327627,G__327628));
})();
var G__327575 = " ";
var G__327576 = (function (){var G__327629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327630 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327629,G__327630) : tailrecursion.hoplon.span.call(null,G__327629,G__327630));
})();
var G__327577 = ") ";
var G__327578 = (function (){var G__327631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327632 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327631,G__327632) : tailrecursion.hoplon.span.call(null,G__327631,G__327632));
})();
var G__327579 = "\n          (";
var G__327580 = (function (){var G__327633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327634 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327633,G__327634) : tailrecursion.hoplon.span.call(null,G__327633,G__327634));
})();
var G__327581 = " (";
var G__327582 = (function (){var G__327635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327636 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327635,G__327636) : tailrecursion.hoplon.span.call(null,G__327635,G__327636));
})();
var G__327583 = (function (){var G__327637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327638 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327637,G__327638) : tailrecursion.hoplon.span.call(null,G__327637,G__327638));
})();
var G__327584 = ") ";
var G__327585 = (function (){var G__327639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327640 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327639,G__327640) : tailrecursion.hoplon.span.call(null,G__327639,G__327640));
})();
var G__327586 = ") (";
var G__327587 = (function (){var G__327641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327642 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327641,G__327642) : tailrecursion.hoplon.span.call(null,G__327641,G__327642));
})();
var G__327588 = " (";
var G__327589 = (function (){var G__327643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327644 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327643,G__327644) : tailrecursion.hoplon.span.call(null,G__327643,G__327644));
})();
var G__327590 = (function (){var G__327645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327646 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327645,G__327646) : tailrecursion.hoplon.span.call(null,G__327645,G__327646));
})();
var G__327591 = " (";
var G__327592 = (function (){var G__327647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327648 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327647,G__327648) : tailrecursion.hoplon.span.call(null,G__327647,G__327648));
})();
var G__327593 = (function (){var G__327649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327650 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327649,G__327650) : tailrecursion.hoplon.span.call(null,G__327649,G__327650));
})();
var G__327594 = ")) (";
var G__327595 = (function (){var G__327651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327652 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327651,G__327652) : tailrecursion.hoplon.span.call(null,G__327651,G__327652));
})();
var G__327596 = (function (){var G__327653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327654 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327653,G__327654) : tailrecursion.hoplon.span.call(null,G__327653,G__327654));
})();
var G__327597 = "))\n          ";
var G__327598 = (function (){var G__327655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327656 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327655,G__327656) : tailrecursion.hoplon.span.call(null,G__327655,G__327656));
})();
var G__327599 = " (";
var G__327600 = (function (){var G__327657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327658 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327657,G__327658) : tailrecursion.hoplon.span.call(null,G__327657,G__327658));
})();
var G__327601 = " ";
var G__327602 = (function (){var G__327659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327660 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327659,G__327660) : tailrecursion.hoplon.span.call(null,G__327659,G__327660));
})();
var G__327603 = " (";
var G__327604 = (function (){var G__327661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327662 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327661,G__327662) : tailrecursion.hoplon.span.call(null,G__327661,G__327662));
})();
var G__327605 = (function (){var G__327663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327664 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327663,G__327664) : tailrecursion.hoplon.span.call(null,G__327663,G__327664));
})();
var G__327606 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__327553,G__327554,G__327555,G__327556,G__327557,G__327558,G__327559,G__327560,G__327561,G__327562,G__327563,G__327564,G__327565,G__327566,G__327567,G__327568,G__327569,G__327570,G__327571,G__327572,G__327573,G__327574,G__327575,G__327576,G__327577,G__327578,G__327579,G__327580,G__327581,G__327582,G__327583,G__327584,G__327585,G__327586,G__327587,G__327588,G__327589,G__327590,G__327591,G__327592,G__327593,G__327594,G__327595,G__327596,G__327597,G__327598,G__327599,G__327600,G__327601,G__327602,G__327603,G__327604,G__327605,G__327606) : tailrecursion.hoplon.pre.call(null,G__327553,G__327554,G__327555,G__327556,G__327557,G__327558,G__327559,G__327560,G__327561,G__327562,G__327563,G__327564,G__327565,G__327566,G__327567,G__327568,G__327569,G__327570,G__327571,G__327572,G__327573,G__327574,G__327575,G__327576,G__327577,G__327578,G__327579,G__327580,G__327581,G__327582,G__327583,G__327584,G__327585,G__327586,G__327587,G__327588,G__327589,G__327590,G__327591,G__327592,G__327593,G__327594,G__327595,G__327596,G__327597,G__327598,G__327599,G__327600,G__327601,G__327602,G__327603,G__327604,G__327605,G__327606));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327551,G__327552) : tailrecursion.hoplon.div.call(null,G__327551,G__327552));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327550) : tailrecursion.hoplon.div.call(null,G__327550));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327435;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327434;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327433;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327432;
}})()], 0)),"",(function (){var _STAR_references_STAR_327665 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327666 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327667 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327668 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327669 = cljs.core.PersistentArrayMap.EMPTY;
var G__327670 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In designing a representation, one of the issues we should be concerned with is efficiency. Consider the number of steps required by our set operations. Since they all use ",(function (){var G__327671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327671,G__327672) : tailrecursion.hoplon.markdown.code_node.call(null,G__327671,G__327672));
})(),", the speed of this operation has a major impact on the efficiency of the set implementation as a whole. Now, in order to check whether an object is a member of a set, ",(function (){var G__327673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327673,G__327674) : tailrecursion.hoplon.markdown.code_node.call(null,G__327673,G__327674));
})()," may have to scan the entire set. (In the worst case, the object turns out not to be in the set.) Hence, if the set has \\(n\\) elements, ",(function (){var G__327675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327675,G__327676) : tailrecursion.hoplon.markdown.code_node.call(null,G__327675,G__327676));
})()," might take up to \\(n\\) steps. Thus, the number of steps required grows as \\(\\Theta(n)\\). The number of steps required by ",(function (){var G__327677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__327678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327677,G__327678) : tailrecursion.hoplon.markdown.code_node.call(null,G__327677,G__327678));
})(),", which uses this operation, also grows as \\(\\Theta(n)\\). For ",(function (){var G__327679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-of-set"], null);
var G__327680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327679,G__327680) : tailrecursion.hoplon.markdown.code_node.call(null,G__327679,G__327680));
})(),", which does an ",(function (){var G__327681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327681,G__327682) : tailrecursion.hoplon.markdown.code_node.call(null,G__327681,G__327682));
})()," check for each element of ",(function (){var G__327683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__327684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327683,G__327684) : tailrecursion.hoplon.markdown.code_node.call(null,G__327683,G__327684));
})(),", the number of steps required grows as the product of the sizes of the sets involved, or \\(\\Theta(n^2)\\) for two sets of size \\(n\\). The same will be true of ",(function (){var G__327685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__327686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327685,G__327686) : tailrecursion.hoplon.markdown.code_node.call(null,G__327685,G__327686));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327669,G__327670) : tailrecursion.hoplon.markdown.para_node.call(null,G__327669,G__327670));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327668;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327667;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327666;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327665;
}})()], 0));
var G__320067 = "";
var G__320068 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327687 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327688 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327689 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327690 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327691 = cljs.core.PersistentArrayMap.EMPTY;
var G__327692 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement the ",(function (){var G__327693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__327694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327693,G__327694) : tailrecursion.hoplon.markdown.code_node.call(null,G__327693,G__327694));
})()," operation for the unordered-list representation of sets."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327691,G__327692) : tailrecursion.hoplon.markdown.para_node.call(null,G__327691,G__327692));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327690;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327689;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327688;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327687;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327695 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327696 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327697 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327698 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327813 = (function (){var G__327814 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327815 = (function (){var G__327816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327817 = "(";
var G__327818 = (function (){var G__327870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327871 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327870,G__327871) : tailrecursion.hoplon.span.call(null,G__327870,G__327871));
})();
var G__327819 = (function (){var G__327872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327873 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327872,G__327873) : tailrecursion.hoplon.span.call(null,G__327872,G__327873));
})();
var G__327820 = " [";
var G__327821 = (function (){var G__327874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327875 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327874,G__327875) : tailrecursion.hoplon.span.call(null,G__327874,G__327875));
})();
var G__327822 = " ";
var G__327823 = (function (){var G__327876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327877 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327876,G__327877) : tailrecursion.hoplon.span.call(null,G__327876,G__327877));
})();
var G__327824 = "]\n  (";
var G__327825 = (function (){var G__327878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327879 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327878,G__327879) : tailrecursion.hoplon.span.call(null,G__327878,G__327879));
})();
var G__327826 = "[";
var G__327827 = (function (){var G__327880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327881 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327880,G__327881) : tailrecursion.hoplon.span.call(null,G__327880,G__327881));
})();
var G__327828 = "   ";
var G__327829 = (function (){var G__327882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327883 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327882,G__327883) : tailrecursion.hoplon.span.call(null,G__327882,G__327883));
})();
var G__327830 = "\n         ";
var G__327831 = (function (){var G__327884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327885 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327884,G__327885) : tailrecursion.hoplon.span.call(null,G__327884,G__327885));
})();
var G__327832 = " ";
var G__327833 = (function (){var G__327886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327887 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327886,G__327887) : tailrecursion.hoplon.span.call(null,G__327886,G__327887));
})();
var G__327834 = "]\n    (";
var G__327835 = (function (){var G__327888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327889 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327888,G__327889) : tailrecursion.hoplon.span.call(null,G__327888,G__327889));
})();
var G__327836 = "(";
var G__327837 = (function (){var G__327890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327891 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327890,G__327891) : tailrecursion.hoplon.span.call(null,G__327890,G__327891));
})();
var G__327838 = " ";
var G__327839 = (function (){var G__327892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327893 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327892,G__327893) : tailrecursion.hoplon.span.call(null,G__327892,G__327893));
})();
var G__327840 = ") ";
var G__327841 = (function (){var G__327894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327895 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327894,G__327895) : tailrecursion.hoplon.span.call(null,G__327894,G__327895));
})();
var G__327842 = "\n          (";
var G__327843 = (function (){var G__327896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327897 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327896,G__327897) : tailrecursion.hoplon.span.call(null,G__327896,G__327897));
})();
var G__327844 = " (";
var G__327845 = (function (){var G__327898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327899 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327898,G__327899) : tailrecursion.hoplon.span.call(null,G__327898,G__327899));
})();
var G__327846 = (function (){var G__327900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327901 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327900,G__327901) : tailrecursion.hoplon.span.call(null,G__327900,G__327901));
})();
var G__327847 = ") ";
var G__327848 = (function (){var G__327902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327903 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327902,G__327903) : tailrecursion.hoplon.span.call(null,G__327902,G__327903));
})();
var G__327849 = ") (";
var G__327850 = (function (){var G__327904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327905 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327904,G__327905) : tailrecursion.hoplon.span.call(null,G__327904,G__327905));
})();
var G__327851 = " ";
var G__327852 = (function (){var G__327906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327907 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327906,G__327907) : tailrecursion.hoplon.span.call(null,G__327906,G__327907));
})();
var G__327853 = " (";
var G__327854 = (function (){var G__327908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327909 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327908,G__327909) : tailrecursion.hoplon.span.call(null,G__327908,G__327909));
})();
var G__327855 = (function (){var G__327910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327911 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327910,G__327911) : tailrecursion.hoplon.span.call(null,G__327910,G__327911));
})();
var G__327856 = "))\n          ";
var G__327857 = (function (){var G__327912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327913 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327912,G__327913) : tailrecursion.hoplon.span.call(null,G__327912,G__327913));
})();
var G__327858 = " (";
var G__327859 = (function (){var G__327914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327915 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327914,G__327915) : tailrecursion.hoplon.span.call(null,G__327914,G__327915));
})();
var G__327860 = " (";
var G__327861 = (function (){var G__327916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327917 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327916,G__327917) : tailrecursion.hoplon.span.call(null,G__327916,G__327917));
})();
var G__327862 = (function (){var G__327918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327919 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327918,G__327919) : tailrecursion.hoplon.span.call(null,G__327918,G__327919));
})();
var G__327863 = " (";
var G__327864 = (function (){var G__327920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327921 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327920,G__327921) : tailrecursion.hoplon.span.call(null,G__327920,G__327921));
})();
var G__327865 = (function (){var G__327922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327923 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327922,G__327923) : tailrecursion.hoplon.span.call(null,G__327922,G__327923));
})();
var G__327866 = ")) (";
var G__327867 = (function (){var G__327924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327925 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327924,G__327925) : tailrecursion.hoplon.span.call(null,G__327924,G__327925));
})();
var G__327868 = (function (){var G__327926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327927 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327926,G__327927) : tailrecursion.hoplon.span.call(null,G__327926,G__327927));
})();
var G__327869 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__327816,G__327817,G__327818,G__327819,G__327820,G__327821,G__327822,G__327823,G__327824,G__327825,G__327826,G__327827,G__327828,G__327829,G__327830,G__327831,G__327832,G__327833,G__327834,G__327835,G__327836,G__327837,G__327838,G__327839,G__327840,G__327841,G__327842,G__327843,G__327844,G__327845,G__327846,G__327847,G__327848,G__327849,G__327850,G__327851,G__327852,G__327853,G__327854,G__327855,G__327856,G__327857,G__327858,G__327859,G__327860,G__327861,G__327862,G__327863,G__327864,G__327865,G__327866,G__327867,G__327868,G__327869) : tailrecursion.hoplon.pre.call(null,G__327816,G__327817,G__327818,G__327819,G__327820,G__327821,G__327822,G__327823,G__327824,G__327825,G__327826,G__327827,G__327828,G__327829,G__327830,G__327831,G__327832,G__327833,G__327834,G__327835,G__327836,G__327837,G__327838,G__327839,G__327840,G__327841,G__327842,G__327843,G__327844,G__327845,G__327846,G__327847,G__327848,G__327849,G__327850,G__327851,G__327852,G__327853,G__327854,G__327855,G__327856,G__327857,G__327858,G__327859,G__327860,G__327861,G__327862,G__327863,G__327864,G__327865,G__327866,G__327867,G__327868,G__327869));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327814,G__327815) : tailrecursion.hoplon.div.call(null,G__327814,G__327815));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327813) : tailrecursion.hoplon.div.call(null,G__327813));
})(),(function (){var G__327928 = cljs.core.PersistentArrayMap.EMPTY;
var G__327929 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, we could take advantage of the function, ",(function (){var G__327930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__327931 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327930,G__327931) : tailrecursion.hoplon.markdown.code_node.call(null,G__327930,G__327931));
})()," we made in section 2.2.3"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327928,G__327929) : tailrecursion.hoplon.markdown.para_node.call(null,G__327928,G__327929));
})(),(function (){var G__327979 = (function (){var G__327980 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327981 = (function (){var G__327982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327983 = "(";
var G__327984 = (function (){var G__328005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328006 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328005,G__328006) : tailrecursion.hoplon.span.call(null,G__328005,G__328006));
})();
var G__327985 = (function (){var G__328007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328008 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328007,G__328008) : tailrecursion.hoplon.span.call(null,G__328007,G__328008));
})();
var G__327986 = " [";
var G__327987 = (function (){var G__328009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328010 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328009,G__328010) : tailrecursion.hoplon.span.call(null,G__328009,G__328010));
})();
var G__327988 = " ";
var G__327989 = (function (){var G__328011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328012 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328011,G__328012) : tailrecursion.hoplon.span.call(null,G__328011,G__328012));
})();
var G__327990 = "]\n  (";
var G__327991 = (function (){var G__328013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328014 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328013,G__328014) : tailrecursion.hoplon.span.call(null,G__328013,G__328014));
})();
var G__327992 = " ";
var G__327993 = (function (){var G__328015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__328016 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328015,G__328016) : tailrecursion.hoplon.span.call(null,G__328015,G__328016));
})();
var G__327994 = "(";
var G__327995 = (function (){var G__328017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328018 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328017,G__328018) : tailrecursion.hoplon.span.call(null,G__328017,G__328018));
})();
var G__327996 = " ";
var G__327997 = (function (){var G__328019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328020 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328019,G__328020) : tailrecursion.hoplon.span.call(null,G__328019,G__328020));
})();
var G__327998 = " ";
var G__327999 = (function (){var G__328021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328022 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328021,G__328022) : tailrecursion.hoplon.span.call(null,G__328021,G__328022));
})();
var G__328000 = ")\n              ";
var G__328001 = (function (){var G__328023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328024 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328023,G__328024) : tailrecursion.hoplon.span.call(null,G__328023,G__328024));
})();
var G__328002 = "\n              ";
var G__328003 = (function (){var G__328025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328026 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328025,G__328026) : tailrecursion.hoplon.span.call(null,G__328025,G__328026));
})();
var G__328004 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__327982,G__327983,G__327984,G__327985,G__327986,G__327987,G__327988,G__327989,G__327990,G__327991,G__327992,G__327993,G__327994,G__327995,G__327996,G__327997,G__327998,G__327999,G__328000,G__328001,G__328002,G__328003,G__328004) : tailrecursion.hoplon.pre.call(null,G__327982,G__327983,G__327984,G__327985,G__327986,G__327987,G__327988,G__327989,G__327990,G__327991,G__327992,G__327993,G__327994,G__327995,G__327996,G__327997,G__327998,G__327999,G__328000,G__328001,G__328002,G__328003,G__328004));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327980,G__327981) : tailrecursion.hoplon.div.call(null,G__327980,G__327981));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327979) : tailrecursion.hoplon.div.call(null,G__327979));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327698;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327697;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327696;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327695;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_328027 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328028 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_328029 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328030 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__328031 = cljs.core.PersistentArrayMap.EMPTY;
var G__328032 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We specified that a set would be represented as a list with no diplicates. Now suppose we allow duplicates. For instance, the set \\({1,2,3}\\) could be represented as the list ",(function (){var G__328033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3 2 1 3 2 2)"], null);
var G__328034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328033,G__328034) : tailrecursion.hoplon.markdown.code_node.call(null,G__328033,G__328034));
})(),". Design procedures ",(function (){var G__328035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__328036 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328035,G__328036) : tailrecursion.hoplon.markdown.code_node.call(null,G__328035,G__328036));
})(),", ",(function (){var G__328037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__328038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328037,G__328038) : tailrecursion.hoplon.markdown.code_node.call(null,G__328037,G__328038));
})(),", ",(function (){var G__328039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__328040 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328039,G__328040) : tailrecursion.hoplon.markdown.code_node.call(null,G__328039,G__328040));
})(),", and ",(function (){var G__328041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__328042 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328041,G__328042) : tailrecursion.hoplon.markdown.code_node.call(null,G__328041,G__328042));
})()," that operation on this representation. How does the efficiency of each compare with the corresponding procedure for the non-duplicate representation? Are there applications for which you would use this representatioin in preference to the non-duplicate one?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328031,G__328032) : tailrecursion.hoplon.markdown.para_node.call(null,G__328031,G__328032));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328030;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328029;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328028;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328027;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_328043 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328044 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_328045 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328046 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__328047 = cljs.core.PersistentArrayMap.EMPTY;
var G__328048 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__328049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__328050 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__328049,G__328050) : tailrecursion.hoplon.markdown.simple_node.call(null,G__328049,G__328050));
})(),"s use some of Clojure Core",(function (){var G__328051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__328052 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__328051,G__328052) : tailrecursion.hoplon.markdown.simple_node.call(null,G__328051,G__328052));
})(),"s functions for this. We",(function (){var G__328053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__328054 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__328053,G__328054) : tailrecursion.hoplon.markdown.simple_node.call(null,G__328053,G__328054));
})(),"ll have to make some assumptions about their efficiency (you can look this up if you",(function (){var G__328055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__328056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__328055,G__328056) : tailrecursion.hoplon.markdown.simple_node.call(null,G__328055,G__328056));
})(),"re actually interested)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328047,G__328048) : tailrecursion.hoplon.markdown.para_node.call(null,G__328047,G__328048));
})(),(function (){var G__328296 = (function (){var G__328297 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__328298 = (function (){var G__328299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__328300 = "(";
var G__328301 = (function (){var G__328412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328413 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328412,G__328413) : tailrecursion.hoplon.span.call(null,G__328412,G__328413));
})();
var G__328302 = (function (){var G__328414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328415 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328414,G__328415) : tailrecursion.hoplon.span.call(null,G__328414,G__328415));
})();
var G__328303 = " [";
var G__328304 = (function (){var G__328416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328417 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328416,G__328417) : tailrecursion.hoplon.span.call(null,G__328416,G__328417));
})();
var G__328305 = " ";
var G__328306 = (function (){var G__328418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328419 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328418,G__328419) : tailrecursion.hoplon.span.call(null,G__328418,G__328419));
})();
var G__328307 = "]\n  (";
var G__328308 = (function (){var G__328420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328421 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328420,G__328421) : tailrecursion.hoplon.span.call(null,G__328420,G__328421));
})();
var G__328309 = "[";
var G__328310 = (function (){var G__328422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328423 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328422,G__328423) : tailrecursion.hoplon.span.call(null,G__328422,G__328423));
})();
var G__328311 = " ";
var G__328312 = (function (){var G__328424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328425 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328424,G__328425) : tailrecursion.hoplon.span.call(null,G__328424,G__328425));
})();
var G__328313 = "]\n    (";
var G__328314 = (function (){var G__328426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328427 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328426,G__328427) : tailrecursion.hoplon.span.call(null,G__328426,G__328427));
})();
var G__328315 = "(";
var G__328316 = (function (){var G__328428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328429 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328428,G__328429) : tailrecursion.hoplon.span.call(null,G__328428,G__328429));
})();
var G__328317 = " ";
var G__328318 = (function (){var G__328430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328431 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328430,G__328431) : tailrecursion.hoplon.span.call(null,G__328430,G__328431));
})();
var G__328319 = ") ";
var G__328320 = (function (){var G__328432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328433 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328432,G__328433) : tailrecursion.hoplon.span.call(null,G__328432,G__328433));
})();
var G__328321 = "\n          (";
var G__328322 = (function (){var G__328434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328435 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328434,G__328435) : tailrecursion.hoplon.span.call(null,G__328434,G__328435));
})();
var G__328323 = "(";
var G__328324 = (function (){var G__328436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328437 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328436,G__328437) : tailrecursion.hoplon.span.call(null,G__328436,G__328437));
})();
var G__328325 = (function (){var G__328438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328439 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328438,G__328439) : tailrecursion.hoplon.span.call(null,G__328438,G__328439));
})();
var G__328326 = ") ";
var G__328327 = (function (){var G__328440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328441 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328440,G__328441) : tailrecursion.hoplon.span.call(null,G__328440,G__328441));
})();
var G__328328 = ") ";
var G__328329 = (function (){var G__328442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328443 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328442,G__328443) : tailrecursion.hoplon.span.call(null,G__328442,G__328443));
})();
var G__328330 = "\n          ";
var G__328331 = (function (){var G__328444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328445 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328444,G__328445) : tailrecursion.hoplon.span.call(null,G__328444,G__328445));
})();
var G__328332 = " (";
var G__328333 = (function (){var G__328446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328447 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328446,G__328447) : tailrecursion.hoplon.span.call(null,G__328446,G__328447));
})();
var G__328334 = " (";
var G__328335 = (function (){var G__328448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328449 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328448,G__328449) : tailrecursion.hoplon.span.call(null,G__328448,G__328449));
})();
var G__328336 = (function (){var G__328450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328451 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328450,G__328451) : tailrecursion.hoplon.span.call(null,G__328450,G__328451));
})();
var G__328337 = ")))))\n\n(";
var G__328338 = (function (){var G__328452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328453 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328452,G__328453) : tailrecursion.hoplon.span.call(null,G__328452,G__328453));
})();
var G__328339 = (function (){var G__328454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328455 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328454,G__328455) : tailrecursion.hoplon.span.call(null,G__328454,G__328455));
})();
var G__328340 = " [";
var G__328341 = (function (){var G__328456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328457 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328456,G__328457) : tailrecursion.hoplon.span.call(null,G__328456,G__328457));
})();
var G__328342 = " ";
var G__328343 = (function (){var G__328458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328459 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328458,G__328459) : tailrecursion.hoplon.span.call(null,G__328458,G__328459));
})();
var G__328344 = "]\n  (";
var G__328345 = (function (){var G__328460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328461 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328460,G__328461) : tailrecursion.hoplon.span.call(null,G__328460,G__328461));
})();
var G__328346 = (function (){var G__328462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328463 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328462,G__328463) : tailrecursion.hoplon.span.call(null,G__328462,G__328463));
})();
var G__328347 = "))\n\n(";
var G__328348 = (function (){var G__328464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328465 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328464,G__328465) : tailrecursion.hoplon.span.call(null,G__328464,G__328465));
})();
var G__328349 = (function (){var G__328466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328467 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328466,G__328467) : tailrecursion.hoplon.span.call(null,G__328466,G__328467));
})();
var G__328350 = " [";
var G__328351 = (function (){var G__328468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328469 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328468,G__328469) : tailrecursion.hoplon.span.call(null,G__328468,G__328469));
})();
var G__328352 = " ";
var G__328353 = (function (){var G__328470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328471 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328470,G__328471) : tailrecursion.hoplon.span.call(null,G__328470,G__328471));
})();
var G__328354 = "]\n  (";
var G__328355 = (function (){var G__328472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328473 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328472,G__328473) : tailrecursion.hoplon.span.call(null,G__328472,G__328473));
})();
var G__328356 = "[";
var G__328357 = (function (){var G__328474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328475 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328474,G__328475) : tailrecursion.hoplon.span.call(null,G__328474,G__328475));
})();
var G__328358 = "   ";
var G__328359 = (function (){var G__328476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__328477 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328476,G__328477) : tailrecursion.hoplon.span.call(null,G__328476,G__328477));
})();
var G__328360 = "()\n         ";
var G__328361 = (function (){var G__328478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328479 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328478,G__328479) : tailrecursion.hoplon.span.call(null,G__328478,G__328479));
})();
var G__328362 = " ";
var G__328363 = (function (){var G__328480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328481 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328480,G__328481) : tailrecursion.hoplon.span.call(null,G__328480,G__328481));
})();
var G__328364 = "]\n    (";
var G__328365 = (function (){var G__328482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328483 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328482,G__328483) : tailrecursion.hoplon.span.call(null,G__328482,G__328483));
})();
var G__328366 = "(";
var G__328367 = (function (){var G__328484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328485 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328484,G__328485) : tailrecursion.hoplon.span.call(null,G__328484,G__328485));
})();
var G__328368 = " ";
var G__328369 = (function (){var G__328486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328487 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328486,G__328487) : tailrecursion.hoplon.span.call(null,G__328486,G__328487));
})();
var G__328370 = ") ";
var G__328371 = (function (){var G__328488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328489 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328488,G__328489) : tailrecursion.hoplon.span.call(null,G__328488,G__328489));
})();
var G__328372 = "\n          (";
var G__328373 = (function (){var G__328490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328491 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328490,G__328491) : tailrecursion.hoplon.span.call(null,G__328490,G__328491));
})();
var G__328374 = " (";
var G__328375 = (function (){var G__328492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328493 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328492,G__328493) : tailrecursion.hoplon.span.call(null,G__328492,G__328493));
})();
var G__328376 = (function (){var G__328494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328495 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328494,G__328495) : tailrecursion.hoplon.span.call(null,G__328494,G__328495));
})();
var G__328377 = ") ";
var G__328378 = (function (){var G__328496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328497 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328496,G__328497) : tailrecursion.hoplon.span.call(null,G__328496,G__328497));
})();
var G__328379 = ") (";
var G__328380 = (function (){var G__328498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328499 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328498,G__328499) : tailrecursion.hoplon.span.call(null,G__328498,G__328499));
})();
var G__328381 = " (";
var G__328382 = (function (){var G__328500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328501 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328500,G__328501) : tailrecursion.hoplon.span.call(null,G__328500,G__328501));
})();
var G__328383 = (function (){var G__328502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328503 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328502,G__328503) : tailrecursion.hoplon.span.call(null,G__328502,G__328503));
})();
var G__328384 = " (";
var G__328385 = (function (){var G__328504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328505 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328504,G__328505) : tailrecursion.hoplon.span.call(null,G__328504,G__328505));
})();
var G__328386 = (function (){var G__328506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328507 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328506,G__328507) : tailrecursion.hoplon.span.call(null,G__328506,G__328507));
})();
var G__328387 = ")) (";
var G__328388 = (function (){var G__328508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328509 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328508,G__328509) : tailrecursion.hoplon.span.call(null,G__328508,G__328509));
})();
var G__328389 = (function (){var G__328510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328511 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328510,G__328511) : tailrecursion.hoplon.span.call(null,G__328510,G__328511));
})();
var G__328390 = "))\n          ";
var G__328391 = (function (){var G__328512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328513 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328512,G__328513) : tailrecursion.hoplon.span.call(null,G__328512,G__328513));
})();
var G__328392 = " (";
var G__328393 = (function (){var G__328514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328515 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328514,G__328515) : tailrecursion.hoplon.span.call(null,G__328514,G__328515));
})();
var G__328394 = " ";
var G__328395 = (function (){var G__328516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328517 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328516,G__328517) : tailrecursion.hoplon.span.call(null,G__328516,G__328517));
})();
var G__328396 = " (";
var G__328397 = (function (){var G__328518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328519 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328518,G__328519) : tailrecursion.hoplon.span.call(null,G__328518,G__328519));
})();
var G__328398 = (function (){var G__328520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328521 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328520,G__328521) : tailrecursion.hoplon.span.call(null,G__328520,G__328521));
})();
var G__328399 = ")))))\n\n(";
var G__328400 = (function (){var G__328522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328523 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328522,G__328523) : tailrecursion.hoplon.span.call(null,G__328522,G__328523));
})();
var G__328401 = (function (){var G__328524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328525 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328524,G__328525) : tailrecursion.hoplon.span.call(null,G__328524,G__328525));
})();
var G__328402 = " [";
var G__328403 = (function (){var G__328526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328527 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328526,G__328527) : tailrecursion.hoplon.span.call(null,G__328526,G__328527));
})();
var G__328404 = " ";
var G__328405 = (function (){var G__328528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328529 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328528,G__328529) : tailrecursion.hoplon.span.call(null,G__328528,G__328529));
})();
var G__328406 = "]\n  (";
var G__328407 = (function (){var G__328530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328531 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328530,G__328531) : tailrecursion.hoplon.span.call(null,G__328530,G__328531));
})();
var G__328408 = (function (){var G__328532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328533 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328532,G__328533) : tailrecursion.hoplon.span.call(null,G__328532,G__328533));
})();
var G__328409 = " ";
var G__328410 = (function (){var G__328534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328535 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328534,G__328535) : tailrecursion.hoplon.span.call(null,G__328534,G__328535));
})();
var G__328411 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$113 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$113(G__328299,G__328300,G__328301,G__328302,G__328303,G__328304,G__328305,G__328306,G__328307,G__328308,G__328309,G__328310,G__328311,G__328312,G__328313,G__328314,G__328315,G__328316,G__328317,G__328318,G__328319,G__328320,G__328321,G__328322,G__328323,G__328324,G__328325,G__328326,G__328327,G__328328,G__328329,G__328330,G__328331,G__328332,G__328333,G__328334,G__328335,G__328336,G__328337,G__328338,G__328339,G__328340,G__328341,G__328342,G__328343,G__328344,G__328345,G__328346,G__328347,G__328348,G__328349,G__328350,G__328351,G__328352,G__328353,G__328354,G__328355,G__328356,G__328357,G__328358,G__328359,G__328360,G__328361,G__328362,G__328363,G__328364,G__328365,G__328366,G__328367,G__328368,G__328369,G__328370,G__328371,G__328372,G__328373,G__328374,G__328375,G__328376,G__328377,G__328378,G__328379,G__328380,G__328381,G__328382,G__328383,G__328384,G__328385,G__328386,G__328387,G__328388,G__328389,G__328390,G__328391,G__328392,G__328393,G__328394,G__328395,G__328396,G__328397,G__328398,G__328399,G__328400,G__328401,G__328402,G__328403,G__328404,G__328405,G__328406,G__328407,G__328408,G__328409,G__328410,G__328411) : tailrecursion.hoplon.pre.call(null,G__328299,G__328300,G__328301,G__328302,G__328303,G__328304,G__328305,G__328306,G__328307,G__328308,G__328309,G__328310,G__328311,G__328312,G__328313,G__328314,G__328315,G__328316,G__328317,G__328318,G__328319,G__328320,G__328321,G__328322,G__328323,G__328324,G__328325,G__328326,G__328327,G__328328,G__328329,G__328330,G__328331,G__328332,G__328333,G__328334,G__328335,G__328336,G__328337,G__328338,G__328339,G__328340,G__328341,G__328342,G__328343,G__328344,G__328345,G__328346,G__328347,G__328348,G__328349,G__328350,G__328351,G__328352,G__328353,G__328354,G__328355,G__328356,G__328357,G__328358,G__328359,G__328360,G__328361,G__328362,G__328363,G__328364,G__328365,G__328366,G__328367,G__328368,G__328369,G__328370,G__328371,G__328372,G__328373,G__328374,G__328375,G__328376,G__328377,G__328378,G__328379,G__328380,G__328381,G__328382,G__328383,G__328384,G__328385,G__328386,G__328387,G__328388,G__328389,G__328390,G__328391,G__328392,G__328393,G__328394,G__328395,G__328396,G__328397,G__328398,G__328399,G__328400,G__328401,G__328402,G__328403,G__328404,G__328405,G__328406,G__328407,G__328408,G__328409,G__328410,G__328411));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__328297,G__328298) : tailrecursion.hoplon.div.call(null,G__328297,G__328298));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__328296) : tailrecursion.hoplon.div.call(null,G__328296));
})(),(function (){var G__328536 = cljs.core.PersistentArrayMap.EMPTY;
var G__328537 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This would be a useful representation for client-side computing (if we wanted to minimize client-side computation at the cost of server-side computation) where the client can only add things to sets, and never remove things (not even in the form of ",(function (){var G__328538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__328539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328538,G__328539) : tailrecursion.hoplon.markdown.code_node.call(null,G__328538,G__328539));
})(),"). That way everything is constant time \\(\\Theta(1)\\). For instance, if you wanted to keep a tally of the links each user clicks while on your site. Since a user cannot ",(function (){var G__328540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__328541 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unclick"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__328540,G__328541) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__328540,G__328541));
})()," a link, we will never have a need for removing items from our set (of links clicked for this user). Anything where you need to ensure an element is not in this list is going to be costly (because we have to use ",(function (){var G__328542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__328543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328542,G__328543) : tailrecursion.hoplon.markdown.code_node.call(null,G__328542,G__328543));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328536,G__328537) : tailrecursion.hoplon.markdown.para_node.call(null,G__328536,G__328537));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328046;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328045;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328044;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328043;
}})()], 0))], 0))], 0));
var G__320069 = "";
var G__320070 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Ordered Lists"], null),(function (){var _STAR_references_STAR_328544 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328545 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_328546 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328547 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__328548 = cljs.core.PersistentArrayMap.EMPTY;
var G__328549 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["one way to speed up our set operations is to change the representation so that the set elements are listed in increasing order. To do this, we need some way to compare two objects so that we can say which is bigger. For example, we could compare symbols lexicographically, or we could agree on some method for assigning a unique number to an object and then compare the elements by comparing the corresponding numbers. To keep our discussion simple, we will consider only the case where the set elements are numbers, so that we can compare elements using \\(\\gt\\) and \\(\\lt\\). We will represent a set of numbers by listing its elements in increasing order. Whereas our first representation above allowed us to represent the set \\({1,3,6,10}\\) by listing the elements in any order, our new representation allows only the list ",(function (){var G__328550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(1\n3 6 10)"], null);
var G__328551 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328550,G__328551) : tailrecursion.hoplon.markdown.code_node.call(null,G__328550,G__328551));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328548,G__328549) : tailrecursion.hoplon.markdown.para_node.call(null,G__328548,G__328549));
})(),(function (){var G__328552 = cljs.core.PersistentArrayMap.EMPTY;
var G__328553 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One advantage of ordering shows up in element-of-set?: In checking for the presence of an item, we no longer have to scan the entire set. If we reach a set element that is larger than the item we are looking for, then we know that the item is not in the set:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328552,G__328553) : tailrecursion.hoplon.markdown.para_node.call(null,G__328552,G__328553));
})(),(function (){var G__328642 = (function (){var G__328643 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__328644 = (function (){var G__328645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__328646 = "(";
var G__328647 = (function (){var G__328687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328688 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328687,G__328688) : tailrecursion.hoplon.span.call(null,G__328687,G__328688));
})();
var G__328648 = (function (){var G__328689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328690 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328689,G__328690) : tailrecursion.hoplon.span.call(null,G__328689,G__328690));
})();
var G__328649 = " [";
var G__328650 = (function (){var G__328691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328692 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328691,G__328692) : tailrecursion.hoplon.span.call(null,G__328691,G__328692));
})();
var G__328651 = " ";
var G__328652 = (function (){var G__328693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328694 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328693,G__328694) : tailrecursion.hoplon.span.call(null,G__328693,G__328694));
})();
var G__328653 = "]\n  (";
var G__328654 = (function (){var G__328695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328696 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328695,G__328696) : tailrecursion.hoplon.span.call(null,G__328695,G__328696));
})();
var G__328655 = "[";
var G__328656 = (function (){var G__328697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328698 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328697,G__328698) : tailrecursion.hoplon.span.call(null,G__328697,G__328698));
})();
var G__328657 = " ";
var G__328658 = (function (){var G__328699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328700 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328699,G__328700) : tailrecursion.hoplon.span.call(null,G__328699,G__328700));
})();
var G__328659 = "]\n    (";
var G__328660 = (function (){var G__328701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328702 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328701,G__328702) : tailrecursion.hoplon.span.call(null,G__328701,G__328702));
})();
var G__328661 = "(";
var G__328662 = (function (){var G__328703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328704 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328703,G__328704) : tailrecursion.hoplon.span.call(null,G__328703,G__328704));
})();
var G__328663 = "(";
var G__328664 = (function (){var G__328705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328706 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328705,G__328706) : tailrecursion.hoplon.span.call(null,G__328705,G__328706));
})();
var G__328665 = (function (){var G__328707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328708 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328707,G__328708) : tailrecursion.hoplon.span.call(null,G__328707,G__328708));
})();
var G__328666 = ") ";
var G__328667 = (function (){var G__328709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328710 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328709,G__328710) : tailrecursion.hoplon.span.call(null,G__328709,G__328710));
})();
var G__328668 = ") ";
var G__328669 = (function (){var G__328711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328712 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328711,G__328712) : tailrecursion.hoplon.span.call(null,G__328711,G__328712));
})();
var G__328670 = "\n          (";
var G__328671 = (function (){var G__328713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328714 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328713,G__328714) : tailrecursion.hoplon.span.call(null,G__328713,G__328714));
})();
var G__328672 = "(";
var G__328673 = (function (){var G__328715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328716 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328715,G__328716) : tailrecursion.hoplon.span.call(null,G__328715,G__328716));
})();
var G__328674 = (function (){var G__328717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328718 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328717,G__328718) : tailrecursion.hoplon.span.call(null,G__328717,G__328718));
})();
var G__328675 = ") ";
var G__328676 = (function (){var G__328719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328720 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328719,G__328720) : tailrecursion.hoplon.span.call(null,G__328719,G__328720));
})();
var G__328677 = ") ";
var G__328678 = (function (){var G__328721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328722 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328721,G__328722) : tailrecursion.hoplon.span.call(null,G__328721,G__328722));
})();
var G__328679 = "\n          ";
var G__328680 = (function (){var G__328723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328724 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328723,G__328724) : tailrecursion.hoplon.span.call(null,G__328723,G__328724));
})();
var G__328681 = " (";
var G__328682 = (function (){var G__328725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328726 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328725,G__328726) : tailrecursion.hoplon.span.call(null,G__328725,G__328726));
})();
var G__328683 = " (";
var G__328684 = (function (){var G__328727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328728 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328727,G__328728) : tailrecursion.hoplon.span.call(null,G__328727,G__328728));
})();
var G__328685 = (function (){var G__328729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328730 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328729,G__328730) : tailrecursion.hoplon.span.call(null,G__328729,G__328730));
})();
var G__328686 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__328645,G__328646,G__328647,G__328648,G__328649,G__328650,G__328651,G__328652,G__328653,G__328654,G__328655,G__328656,G__328657,G__328658,G__328659,G__328660,G__328661,G__328662,G__328663,G__328664,G__328665,G__328666,G__328667,G__328668,G__328669,G__328670,G__328671,G__328672,G__328673,G__328674,G__328675,G__328676,G__328677,G__328678,G__328679,G__328680,G__328681,G__328682,G__328683,G__328684,G__328685,G__328686) : tailrecursion.hoplon.pre.call(null,G__328645,G__328646,G__328647,G__328648,G__328649,G__328650,G__328651,G__328652,G__328653,G__328654,G__328655,G__328656,G__328657,G__328658,G__328659,G__328660,G__328661,G__328662,G__328663,G__328664,G__328665,G__328666,G__328667,G__328668,G__328669,G__328670,G__328671,G__328672,G__328673,G__328674,G__328675,G__328676,G__328677,G__328678,G__328679,G__328680,G__328681,G__328682,G__328683,G__328684,G__328685,G__328686));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__328643,G__328644) : tailrecursion.hoplon.div.call(null,G__328643,G__328644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__328642) : tailrecursion.hoplon.div.call(null,G__328642));
})(),(function (){var G__328731 = cljs.core.PersistentArrayMap.EMPTY;
var G__328732 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many steps does this save? In the worst case, the item we are looking for may be the largest one in the set, so the number of steps is the same as for the unordered representation. On the other hand, if we search for items of many different sizes we can expect that sometimes we will be able to stop searching at a point near the beginning of the list and that other times we will still need to examine most of the list. On the average we should expect to have to examine about half of the items in the set. Thus, the average number of steps required will be about \\(n/2\\). This is still \\(\\Theta(n)\\) growth, but it does save us, on the average, a factor of 2 in number of steps over the previous implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328731,G__328732) : tailrecursion.hoplon.markdown.para_node.call(null,G__328731,G__328732));
})(),(function (){var G__328733 = cljs.core.PersistentArrayMap.EMPTY;
var G__328734 = cljs.core.PersistentVector.fromArray(["We obtain a more impressive speedup with ",(function (){var G__328735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__328736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328735,G__328736) : tailrecursion.hoplon.markdown.code_node.call(null,G__328735,G__328736));
})(),". In the unordered representation this operation required \\(\\Theta(n^2)\\) steps, because we performed a complete scan of ",(function (){var G__328737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328738 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328737,G__328738) : tailrecursion.hoplon.markdown.code_node.call(null,G__328737,G__328738));
})()," for each element of ",(function (){var G__328739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__328740 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328739,G__328740) : tailrecursion.hoplon.markdown.code_node.call(null,G__328739,G__328740));
})(),". But with the ordered representation, we can use a more clever method. Begin by comparing the initial elements, ",(function (){var G__328741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328742 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328741,G__328742) : tailrecursion.hoplon.markdown.code_node.call(null,G__328741,G__328742));
})()," and ",(function (){var G__328743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328744 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328743,G__328744) : tailrecursion.hoplon.markdown.code_node.call(null,G__328743,G__328744));
})(),", of the two sets. If ",(function (){var G__328745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328746 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328745,G__328746) : tailrecursion.hoplon.markdown.code_node.call(null,G__328745,G__328746));
})()," equals ",(function (){var G__328747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328748 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328747,G__328748) : tailrecursion.hoplon.markdown.code_node.call(null,G__328747,G__328748));
})(),", then that gives an element of the intersection, and the rest of the intersection is the intersection of the ",(function (){var G__328749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__328750 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328749,G__328750) : tailrecursion.hoplon.markdown.code_node.call(null,G__328749,G__328750));
})()," of the two sets. Suppose, however, that ",(function (){var G__328751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328752 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328751,G__328752) : tailrecursion.hoplon.markdown.code_node.call(null,G__328751,G__328752));
})()," is less than ",(function (){var G__328753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328754 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328753,G__328754) : tailrecursion.hoplon.markdown.code_node.call(null,G__328753,G__328754));
})(),". Since ",(function (){var G__328755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328756 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328755,G__328756) : tailrecursion.hoplon.markdown.code_node.call(null,G__328755,G__328756));
})()," is the smallest element in ",(function (){var G__328757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328758 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328757,G__328758) : tailrecursion.hoplon.markdown.code_node.call(null,G__328757,G__328758));
})(),", we can immediately conclude that ",(function (){var G__328759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328760 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328759,G__328760) : tailrecursion.hoplon.markdown.code_node.call(null,G__328759,G__328760));
})()," cannot appear anywhere in ",(function (){var G__328761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328762 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328761,G__328762) : tailrecursion.hoplon.markdown.code_node.call(null,G__328761,G__328762));
})()," and hence is not in the intersection. Hence, the intersection is equal to the intersection of ",(function (){var G__328763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328764 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328763,G__328764) : tailrecursion.hoplon.markdown.code_node.call(null,G__328763,G__328764));
})()," with the ",(function (){var G__328765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__328766 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328765,G__328766) : tailrecursion.hoplon.markdown.code_node.call(null,G__328765,G__328766));
})()," of ",(function (){var G__328767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__328768 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328767,G__328768) : tailrecursion.hoplon.markdown.code_node.call(null,G__328767,G__328768));
})(),". Similarly, if ",(function (){var G__328769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328770 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328769,G__328770) : tailrecursion.hoplon.markdown.code_node.call(null,G__328769,G__328770));
})()," is less than ",(function (){var G__328771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328772 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328771,G__328772) : tailrecursion.hoplon.markdown.code_node.call(null,G__328771,G__328772));
})(),", then the intersection is given by the intersection of ",(function (){var G__328773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__328774 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328773,G__328774) : tailrecursion.hoplon.markdown.code_node.call(null,G__328773,G__328774));
})()," with the ",(function (){var G__328775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__328776 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328775,G__328776) : tailrecursion.hoplon.markdown.code_node.call(null,G__328775,G__328776));
})()," of ",(function (){var G__328777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328778 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328777,G__328778) : tailrecursion.hoplon.markdown.code_node.call(null,G__328777,G__328778));
})(),". Here is the procedure:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328733,G__328734) : tailrecursion.hoplon.markdown.para_node.call(null,G__328733,G__328734));
})(),(function (){var G__329015 = (function (){var G__329016 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__329017 = (function (){var G__329018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__329019 = "(";
var G__329020 = (function (){var G__329130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329131 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329130,G__329131) : tailrecursion.hoplon.span.call(null,G__329130,G__329131));
})();
var G__329021 = (function (){var G__329132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329133 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329132,G__329133) : tailrecursion.hoplon.span.call(null,G__329132,G__329133));
})();
var G__329022 = " [";
var G__329023 = (function (){var G__329134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329135 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329134,G__329135) : tailrecursion.hoplon.span.call(null,G__329134,G__329135));
})();
var G__329024 = " ";
var G__329025 = (function (){var G__329136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329137 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329136,G__329137) : tailrecursion.hoplon.span.call(null,G__329136,G__329137));
})();
var G__329026 = "]\n  (";
var G__329027 = (function (){var G__329138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329139 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329138,G__329139) : tailrecursion.hoplon.span.call(null,G__329138,G__329139));
})();
var G__329028 = "[";
var G__329029 = (function (){var G__329140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329141 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329140,G__329141) : tailrecursion.hoplon.span.call(null,G__329140,G__329141));
})();
var G__329030 = "    ";
var G__329031 = (function (){var G__329142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__329143 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329142,G__329143) : tailrecursion.hoplon.span.call(null,G__329142,G__329143));
})();
var G__329032 = "()\n         ";
var G__329033 = (function (){var G__329144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329145 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329144,G__329145) : tailrecursion.hoplon.span.call(null,G__329144,G__329145));
})();
var G__329034 = " ";
var G__329035 = (function (){var G__329146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329147 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329146,G__329147) : tailrecursion.hoplon.span.call(null,G__329146,G__329147));
})();
var G__329036 = "\n         ";
var G__329037 = (function (){var G__329148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329149 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329148,G__329149) : tailrecursion.hoplon.span.call(null,G__329148,G__329149));
})();
var G__329038 = " ";
var G__329039 = (function (){var G__329150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329151 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329150,G__329151) : tailrecursion.hoplon.span.call(null,G__329150,G__329151));
})();
var G__329040 = "]\n    (";
var G__329041 = (function (){var G__329152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329153 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329152,G__329153) : tailrecursion.hoplon.span.call(null,G__329152,G__329153));
})();
var G__329042 = "(";
var G__329043 = (function (){var G__329154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329155 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329154,G__329155) : tailrecursion.hoplon.span.call(null,G__329154,G__329155));
})();
var G__329044 = "(";
var G__329045 = (function (){var G__329156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329157 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329156,G__329157) : tailrecursion.hoplon.span.call(null,G__329156,G__329157));
})();
var G__329046 = " ";
var G__329047 = (function (){var G__329158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329159 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329158,G__329159) : tailrecursion.hoplon.span.call(null,G__329158,G__329159));
})();
var G__329048 = ") (";
var G__329049 = (function (){var G__329160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329161 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329160,G__329161) : tailrecursion.hoplon.span.call(null,G__329160,G__329161));
})();
var G__329050 = " ";
var G__329051 = (function (){var G__329162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329163 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329162,G__329163) : tailrecursion.hoplon.span.call(null,G__329162,G__329163));
})();
var G__329052 = ")) ";
var G__329053 = (function (){var G__329164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329165 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329164,G__329165) : tailrecursion.hoplon.span.call(null,G__329164,G__329165));
})();
var G__329054 = "\n      (";
var G__329055 = (function (){var G__329166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329167 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329166,G__329167) : tailrecursion.hoplon.span.call(null,G__329166,G__329167));
})();
var G__329056 = "[";
var G__329057 = (function (){var G__329168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329169 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329168,G__329169) : tailrecursion.hoplon.span.call(null,G__329168,G__329169));
})();
var G__329058 = " (";
var G__329059 = (function (){var G__329170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329171 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329170,G__329171) : tailrecursion.hoplon.span.call(null,G__329170,G__329171));
})();
var G__329060 = (function (){var G__329172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329173 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329172,G__329173) : tailrecursion.hoplon.span.call(null,G__329172,G__329173));
})();
var G__329061 = ")\n            ";
var G__329062 = (function (){var G__329174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329175 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329174,G__329175) : tailrecursion.hoplon.span.call(null,G__329174,G__329175));
})();
var G__329063 = " (";
var G__329064 = (function (){var G__329176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329177 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329176,G__329177) : tailrecursion.hoplon.span.call(null,G__329176,G__329177));
})();
var G__329065 = (function (){var G__329178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329179 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329178,G__329179) : tailrecursion.hoplon.span.call(null,G__329178,G__329179));
})();
var G__329066 = ")]\n        (";
var G__329067 = (function (){var G__329180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329181 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329180,G__329181) : tailrecursion.hoplon.span.call(null,G__329180,G__329181));
})();
var G__329068 = "(";
var G__329069 = (function (){var G__329182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329183 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329182,G__329183) : tailrecursion.hoplon.span.call(null,G__329182,G__329183));
})();
var G__329070 = (function (){var G__329184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329185 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329184,G__329185) : tailrecursion.hoplon.span.call(null,G__329184,G__329185));
})();
var G__329071 = " ";
var G__329072 = (function (){var G__329186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329187 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329186,G__329187) : tailrecursion.hoplon.span.call(null,G__329186,G__329187));
})();
var G__329073 = ") (";
var G__329074 = (function (){var G__329188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329189 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329188,G__329189) : tailrecursion.hoplon.span.call(null,G__329188,G__329189));
})();
var G__329075 = " (";
var G__329076 = (function (){var G__329190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329191 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329190,G__329191) : tailrecursion.hoplon.span.call(null,G__329190,G__329191));
})();
var G__329077 = (function (){var G__329192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329193 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329192,G__329193) : tailrecursion.hoplon.span.call(null,G__329192,G__329193));
})();
var G__329078 = " ";
var G__329079 = (function (){var G__329194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329195 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329194,G__329195) : tailrecursion.hoplon.span.call(null,G__329194,G__329195));
})();
var G__329080 = ") (";
var G__329081 = (function (){var G__329196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329197 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329196,G__329197) : tailrecursion.hoplon.span.call(null,G__329196,G__329197));
})();
var G__329082 = (function (){var G__329198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329199 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329198,G__329199) : tailrecursion.hoplon.span.call(null,G__329198,G__329199));
})();
var G__329083 = ") (";
var G__329084 = (function (){var G__329200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329201 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329200,G__329201) : tailrecursion.hoplon.span.call(null,G__329200,G__329201));
})();
var G__329085 = (function (){var G__329202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329203 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329202,G__329203) : tailrecursion.hoplon.span.call(null,G__329202,G__329203));
})();
var G__329086 = "))\n              (";
var G__329087 = (function (){var G__329204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329205 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329204,G__329205) : tailrecursion.hoplon.span.call(null,G__329204,G__329205));
})();
var G__329088 = (function (){var G__329206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329207 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329206,G__329207) : tailrecursion.hoplon.span.call(null,G__329206,G__329207));
})();
var G__329089 = " ";
var G__329090 = (function (){var G__329208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329209 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329208,G__329209) : tailrecursion.hoplon.span.call(null,G__329208,G__329209));
})();
var G__329091 = ") (";
var G__329092 = (function (){var G__329210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329211 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329210,G__329211) : tailrecursion.hoplon.span.call(null,G__329210,G__329211));
})();
var G__329093 = " ";
var G__329094 = (function (){var G__329212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329213 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329212,G__329213) : tailrecursion.hoplon.span.call(null,G__329212,G__329213));
})();
var G__329095 = " (";
var G__329096 = (function (){var G__329214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329215 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329214,G__329215) : tailrecursion.hoplon.span.call(null,G__329214,G__329215));
})();
var G__329097 = (function (){var G__329216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329217 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329216,G__329217) : tailrecursion.hoplon.span.call(null,G__329216,G__329217));
})();
var G__329098 = ") ";
var G__329099 = (function (){var G__329218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329219 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329218,G__329219) : tailrecursion.hoplon.span.call(null,G__329218,G__329219));
})();
var G__329100 = ")\n              (";
var G__329101 = (function (){var G__329220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329221 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329220,G__329221) : tailrecursion.hoplon.span.call(null,G__329220,G__329221));
})();
var G__329102 = (function (){var G__329222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329223 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329222,G__329223) : tailrecursion.hoplon.span.call(null,G__329222,G__329223));
})();
var G__329103 = " ";
var G__329104 = (function (){var G__329224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329225 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329224,G__329225) : tailrecursion.hoplon.span.call(null,G__329224,G__329225));
})();
var G__329105 = ") (";
var G__329106 = (function (){var G__329226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329227 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329226,G__329227) : tailrecursion.hoplon.span.call(null,G__329226,G__329227));
})();
var G__329107 = " ";
var G__329108 = (function (){var G__329228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329229 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329228,G__329229) : tailrecursion.hoplon.span.call(null,G__329228,G__329229));
})();
var G__329109 = " ";
var G__329110 = (function (){var G__329230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329231 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329230,G__329231) : tailrecursion.hoplon.span.call(null,G__329230,G__329231));
})();
var G__329111 = " (";
var G__329112 = (function (){var G__329232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329233 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329232,G__329233) : tailrecursion.hoplon.span.call(null,G__329232,G__329233));
})();
var G__329113 = (function (){var G__329234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329235 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329234,G__329235) : tailrecursion.hoplon.span.call(null,G__329234,G__329235));
})();
var G__329114 = ")))))))\n\n(";
var G__329115 = (function (){var G__329236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329237 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329236,G__329237) : tailrecursion.hoplon.span.call(null,G__329236,G__329237));
})();
var G__329116 = (function (){var G__329238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329239 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329238,G__329239) : tailrecursion.hoplon.span.call(null,G__329238,G__329239));
})();
var G__329117 = " [";
var G__329118 = (function (){var G__329240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329241 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329240,G__329241) : tailrecursion.hoplon.span.call(null,G__329240,G__329241));
})();
var G__329119 = " ";
var G__329120 = (function (){var G__329242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329243 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329242,G__329243) : tailrecursion.hoplon.span.call(null,G__329242,G__329243));
})();
var G__329121 = "]\n  (";
var G__329122 = (function (){var G__329244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329245 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329244,G__329245) : tailrecursion.hoplon.span.call(null,G__329244,G__329245));
})();
var G__329123 = "(";
var G__329124 = (function (){var G__329246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329247 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329246,G__329247) : tailrecursion.hoplon.span.call(null,G__329246,G__329247));
})();
var G__329125 = " ";
var G__329126 = (function (){var G__329248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329249 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329248,G__329249) : tailrecursion.hoplon.span.call(null,G__329248,G__329249));
})();
var G__329127 = " ";
var G__329128 = (function (){var G__329250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329251 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329250,G__329251) : tailrecursion.hoplon.span.call(null,G__329250,G__329251));
})();
var G__329129 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$112 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$112(G__329018,G__329019,G__329020,G__329021,G__329022,G__329023,G__329024,G__329025,G__329026,G__329027,G__329028,G__329029,G__329030,G__329031,G__329032,G__329033,G__329034,G__329035,G__329036,G__329037,G__329038,G__329039,G__329040,G__329041,G__329042,G__329043,G__329044,G__329045,G__329046,G__329047,G__329048,G__329049,G__329050,G__329051,G__329052,G__329053,G__329054,G__329055,G__329056,G__329057,G__329058,G__329059,G__329060,G__329061,G__329062,G__329063,G__329064,G__329065,G__329066,G__329067,G__329068,G__329069,G__329070,G__329071,G__329072,G__329073,G__329074,G__329075,G__329076,G__329077,G__329078,G__329079,G__329080,G__329081,G__329082,G__329083,G__329084,G__329085,G__329086,G__329087,G__329088,G__329089,G__329090,G__329091,G__329092,G__329093,G__329094,G__329095,G__329096,G__329097,G__329098,G__329099,G__329100,G__329101,G__329102,G__329103,G__329104,G__329105,G__329106,G__329107,G__329108,G__329109,G__329110,G__329111,G__329112,G__329113,G__329114,G__329115,G__329116,G__329117,G__329118,G__329119,G__329120,G__329121,G__329122,G__329123,G__329124,G__329125,G__329126,G__329127,G__329128,G__329129) : tailrecursion.hoplon.pre.call(null,G__329018,G__329019,G__329020,G__329021,G__329022,G__329023,G__329024,G__329025,G__329026,G__329027,G__329028,G__329029,G__329030,G__329031,G__329032,G__329033,G__329034,G__329035,G__329036,G__329037,G__329038,G__329039,G__329040,G__329041,G__329042,G__329043,G__329044,G__329045,G__329046,G__329047,G__329048,G__329049,G__329050,G__329051,G__329052,G__329053,G__329054,G__329055,G__329056,G__329057,G__329058,G__329059,G__329060,G__329061,G__329062,G__329063,G__329064,G__329065,G__329066,G__329067,G__329068,G__329069,G__329070,G__329071,G__329072,G__329073,G__329074,G__329075,G__329076,G__329077,G__329078,G__329079,G__329080,G__329081,G__329082,G__329083,G__329084,G__329085,G__329086,G__329087,G__329088,G__329089,G__329090,G__329091,G__329092,G__329093,G__329094,G__329095,G__329096,G__329097,G__329098,G__329099,G__329100,G__329101,G__329102,G__329103,G__329104,G__329105,G__329106,G__329107,G__329108,G__329109,G__329110,G__329111,G__329112,G__329113,G__329114,G__329115,G__329116,G__329117,G__329118,G__329119,G__329120,G__329121,G__329122,G__329123,G__329124,G__329125,G__329126,G__329127,G__329128,G__329129));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__329016,G__329017) : tailrecursion.hoplon.div.call(null,G__329016,G__329017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__329015) : tailrecursion.hoplon.div.call(null,G__329015));
})(),(function (){var G__329252 = cljs.core.PersistentArrayMap.EMPTY;
var G__329253 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To estimate the number of steps required by this process, observe that at each step we reduce the intersection problem to computing intersections of smaller sets ",(function (){var G__329254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__329255 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__329254,G__329255) : tailrecursion.hoplon.markdown.simple_node.call(null,G__329254,G__329255));
})()," removing the first element from ",(function (){var G__329256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__329257 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329256,G__329257) : tailrecursion.hoplon.markdown.code_node.call(null,G__329256,G__329257));
})()," or ",(function (){var G__329258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__329259 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329258,G__329259) : tailrecursion.hoplon.markdown.code_node.call(null,G__329258,G__329259));
})()," or both. Thus, the number of steps required is at most the sum of the sizes of ",(function (){var G__329260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__329261 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329260,G__329261) : tailrecursion.hoplon.markdown.code_node.call(null,G__329260,G__329261));
})()," and ",(function (){var G__329262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__329263 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329262,G__329263) : tailrecursion.hoplon.markdown.code_node.call(null,G__329262,G__329263));
})(),", rather than the product of the sizes as with the unordered representation. This is \\(\\Theta(n)\\) growth rather than \\(\\Theta(n^2)\\) ",(function (){var G__329264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__329265 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__329264,G__329265) : tailrecursion.hoplon.markdown.simple_node.call(null,G__329264,G__329265));
})()," a considerable speedup, even for sets of moderate size."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329252,G__329253) : tailrecursion.hoplon.markdown.para_node.call(null,G__329252,G__329253));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328547;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328546;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328545;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328544;
}})()], 0));
var G__320071 = "";
var G__320072 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329266 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329267 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329268 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329269 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329270 = cljs.core.PersistentArrayMap.EMPTY;
var G__329271 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give an implementation of ",(function (){var G__329272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__329273 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329272,G__329273) : tailrecursion.hoplon.markdown.code_node.call(null,G__329272,G__329273));
})()," using the ordered representation. By analogy with ",(function (){var G__329274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__329275 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329274,G__329275) : tailrecursion.hoplon.markdown.code_node.call(null,G__329274,G__329275));
})()," show how to take advantage of the ordering to produce a procedure that requires on average about half as many steps as with the unordered representatioin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329270,G__329271) : tailrecursion.hoplon.markdown.para_node.call(null,G__329270,G__329271));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329269;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329268;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329267;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329266;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329276 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329277 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329278 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329279 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329455 = (function (){var G__329456 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__329457 = (function (){var G__329458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__329459 = "(";
var G__329460 = (function (){var G__329539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329540 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329539,G__329540) : tailrecursion.hoplon.span.call(null,G__329539,G__329540));
})();
var G__329461 = (function (){var G__329541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329542 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329541,G__329542) : tailrecursion.hoplon.span.call(null,G__329541,G__329542));
})();
var G__329462 = " [";
var G__329463 = (function (){var G__329543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329544 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329543,G__329544) : tailrecursion.hoplon.span.call(null,G__329543,G__329544));
})();
var G__329464 = " ";
var G__329465 = (function (){var G__329545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329546 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329545,G__329546) : tailrecursion.hoplon.span.call(null,G__329545,G__329546));
})();
var G__329466 = "]\n  (";
var G__329467 = (function (){var G__329547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329548 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329547,G__329548) : tailrecursion.hoplon.span.call(null,G__329547,G__329548));
})();
var G__329468 = "[";
var G__329469 = (function (){var G__329549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329550 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329549,G__329550) : tailrecursion.hoplon.span.call(null,G__329549,G__329550));
})();
var G__329470 = "  ";
var G__329471 = (function (){var G__329551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__329552 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329551,G__329552) : tailrecursion.hoplon.span.call(null,G__329551,G__329552));
})();
var G__329472 = "()\n         ";
var G__329473 = (function (){var G__329553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329554 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329553,G__329554) : tailrecursion.hoplon.span.call(null,G__329553,G__329554));
})();
var G__329474 = " ";
var G__329475 = (function (){var G__329555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329556 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329555,G__329556) : tailrecursion.hoplon.span.call(null,G__329555,G__329556));
})();
var G__329476 = "]\n    (";
var G__329477 = (function (){var G__329557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329558 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329557,G__329558) : tailrecursion.hoplon.span.call(null,G__329557,G__329558));
})();
var G__329478 = "(";
var G__329479 = (function (){var G__329559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329560 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329559,G__329560) : tailrecursion.hoplon.span.call(null,G__329559,G__329560));
})();
var G__329480 = " ";
var G__329481 = (function (){var G__329561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329562 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329561,G__329562) : tailrecursion.hoplon.span.call(null,G__329561,G__329562));
})();
var G__329482 = ") (";
var G__329483 = (function (){var G__329563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329564 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329563,G__329564) : tailrecursion.hoplon.span.call(null,G__329563,G__329564));
})();
var G__329484 = "(";
var G__329485 = (function (){var G__329565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329566 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329565,G__329566) : tailrecursion.hoplon.span.call(null,G__329565,G__329566));
})();
var G__329486 = (function (){var G__329567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329568 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329567,G__329568) : tailrecursion.hoplon.span.call(null,G__329567,G__329568));
})();
var G__329487 = " ";
var G__329488 = (function (){var G__329569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329570 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329569,G__329570) : tailrecursion.hoplon.span.call(null,G__329569,G__329570));
})();
var G__329489 = "))\n          (";
var G__329490 = (function (){var G__329571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329572 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329571,G__329572) : tailrecursion.hoplon.span.call(null,G__329571,G__329572));
})();
var G__329491 = (function (){var G__329573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329574 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329573,G__329574) : tailrecursion.hoplon.span.call(null,G__329573,G__329574));
})();
var G__329492 = " (";
var G__329493 = (function (){var G__329575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329576 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329575,G__329576) : tailrecursion.hoplon.span.call(null,G__329575,G__329576));
})();
var G__329494 = (function (){var G__329577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329578 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329577,G__329578) : tailrecursion.hoplon.span.call(null,G__329577,G__329578));
})();
var G__329495 = ")) ";
var G__329496 = (function (){var G__329579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329580 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329579,G__329580) : tailrecursion.hoplon.span.call(null,G__329579,G__329580));
})();
var G__329497 = "\n          (";
var G__329498 = (function (){var G__329581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329582 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329581,G__329582) : tailrecursion.hoplon.span.call(null,G__329581,G__329582));
})();
var G__329499 = (function (){var G__329583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329584 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329583,G__329584) : tailrecursion.hoplon.span.call(null,G__329583,G__329584));
})();
var G__329500 = " (";
var G__329501 = (function (){var G__329585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329586 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329585,G__329586) : tailrecursion.hoplon.span.call(null,G__329585,G__329586));
})();
var G__329502 = (function (){var G__329587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329588 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329587,G__329588) : tailrecursion.hoplon.span.call(null,G__329587,G__329588));
})();
var G__329503 = ")) (";
var G__329504 = (function (){var G__329589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329590 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329589,G__329590) : tailrecursion.hoplon.span.call(null,G__329589,G__329590));
})();
var G__329505 = " (";
var G__329506 = (function (){var G__329591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329592 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329591,G__329592) : tailrecursion.hoplon.span.call(null,G__329591,G__329592));
})();
var G__329507 = (function (){var G__329593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329594 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329593,G__329594) : tailrecursion.hoplon.span.call(null,G__329593,G__329594));
})();
var G__329508 = " (";
var G__329509 = (function (){var G__329595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329596 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329595,G__329596) : tailrecursion.hoplon.span.call(null,G__329595,G__329596));
})();
var G__329510 = (function (){var G__329597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329598 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329597,G__329598) : tailrecursion.hoplon.span.call(null,G__329597,G__329598));
})();
var G__329511 = "))\n                                         (";
var G__329512 = (function (){var G__329599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329600 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329599,G__329600) : tailrecursion.hoplon.span.call(null,G__329599,G__329600));
})();
var G__329513 = (function (){var G__329601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329602 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329601,G__329602) : tailrecursion.hoplon.span.call(null,G__329601,G__329602));
})();
var G__329514 = "))\n          (";
var G__329515 = (function (){var G__329603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329604 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329603,G__329604) : tailrecursion.hoplon.span.call(null,G__329603,G__329604));
})();
var G__329516 = (function (){var G__329605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329606 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329605,G__329606) : tailrecursion.hoplon.span.call(null,G__329605,G__329606));
})();
var G__329517 = " (";
var G__329518 = (function (){var G__329607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329608 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329607,G__329608) : tailrecursion.hoplon.span.call(null,G__329607,G__329608));
})();
var G__329519 = (function (){var G__329609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329610 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329609,G__329610) : tailrecursion.hoplon.span.call(null,G__329609,G__329610));
})();
var G__329520 = ")) (";
var G__329521 = (function (){var G__329611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329612 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329611,G__329612) : tailrecursion.hoplon.span.call(null,G__329611,G__329612));
})();
var G__329522 = "(";
var G__329523 = (function (){var G__329613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329614 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329613,G__329614) : tailrecursion.hoplon.span.call(null,G__329613,G__329614));
})();
var G__329524 = (function (){var G__329615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329616 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329615,G__329616) : tailrecursion.hoplon.span.call(null,G__329615,G__329616));
})();
var G__329525 = ") (";
var G__329526 = (function (){var G__329617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329618 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329617,G__329618) : tailrecursion.hoplon.span.call(null,G__329617,G__329618));
})();
var G__329527 = (function (){var G__329619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329620 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329619,G__329620) : tailrecursion.hoplon.span.call(null,G__329619,G__329620));
})();
var G__329528 = " ";
var G__329529 = (function (){var G__329621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329622 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329621,G__329622) : tailrecursion.hoplon.span.call(null,G__329621,G__329622));
})();
var G__329530 = "))\n          ";
var G__329531 = (function (){var G__329623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329624 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329623,G__329624) : tailrecursion.hoplon.span.call(null,G__329623,G__329624));
})();
var G__329532 = " (";
var G__329533 = (function (){var G__329625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329626 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329625,G__329626) : tailrecursion.hoplon.span.call(null,G__329625,G__329626));
})();
var G__329534 = " (";
var G__329535 = (function (){var G__329627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329628 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329627,G__329628) : tailrecursion.hoplon.span.call(null,G__329627,G__329628));
})();
var G__329536 = " ";
var G__329537 = (function (){var G__329629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__329630 = "\"Something went wrong with the adjoin. Try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329629,G__329630) : tailrecursion.hoplon.span.call(null,G__329629,G__329630));
})();
var G__329538 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81(G__329458,G__329459,G__329460,G__329461,G__329462,G__329463,G__329464,G__329465,G__329466,G__329467,G__329468,G__329469,G__329470,G__329471,G__329472,G__329473,G__329474,G__329475,G__329476,G__329477,G__329478,G__329479,G__329480,G__329481,G__329482,G__329483,G__329484,G__329485,G__329486,G__329487,G__329488,G__329489,G__329490,G__329491,G__329492,G__329493,G__329494,G__329495,G__329496,G__329497,G__329498,G__329499,G__329500,G__329501,G__329502,G__329503,G__329504,G__329505,G__329506,G__329507,G__329508,G__329509,G__329510,G__329511,G__329512,G__329513,G__329514,G__329515,G__329516,G__329517,G__329518,G__329519,G__329520,G__329521,G__329522,G__329523,G__329524,G__329525,G__329526,G__329527,G__329528,G__329529,G__329530,G__329531,G__329532,G__329533,G__329534,G__329535,G__329536,G__329537,G__329538) : tailrecursion.hoplon.pre.call(null,G__329458,G__329459,G__329460,G__329461,G__329462,G__329463,G__329464,G__329465,G__329466,G__329467,G__329468,G__329469,G__329470,G__329471,G__329472,G__329473,G__329474,G__329475,G__329476,G__329477,G__329478,G__329479,G__329480,G__329481,G__329482,G__329483,G__329484,G__329485,G__329486,G__329487,G__329488,G__329489,G__329490,G__329491,G__329492,G__329493,G__329494,G__329495,G__329496,G__329497,G__329498,G__329499,G__329500,G__329501,G__329502,G__329503,G__329504,G__329505,G__329506,G__329507,G__329508,G__329509,G__329510,G__329511,G__329512,G__329513,G__329514,G__329515,G__329516,G__329517,G__329518,G__329519,G__329520,G__329521,G__329522,G__329523,G__329524,G__329525,G__329526,G__329527,G__329528,G__329529,G__329530,G__329531,G__329532,G__329533,G__329534,G__329535,G__329536,G__329537,G__329538));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__329456,G__329457) : tailrecursion.hoplon.div.call(null,G__329456,G__329457));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__329455) : tailrecursion.hoplon.div.call(null,G__329455));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329279;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329278;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329277;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329276;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329631 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329632 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329633 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329634 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329635 = cljs.core.PersistentArrayMap.EMPTY;
var G__329636 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give a \\(\\Theta(n)\\) implementation of ",(function (){var G__329637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__329638 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329637,G__329638) : tailrecursion.hoplon.markdown.code_node.call(null,G__329637,G__329638));
})()," for sets represented as ordered lists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329635,G__329636) : tailrecursion.hoplon.markdown.para_node.call(null,G__329635,G__329636));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329634;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329633;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329632;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329631;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329639 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329640 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329641 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329642 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329857 = (function (){var G__329858 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__329859 = (function (){var G__329860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__329861 = "(";
var G__329862 = (function (){var G__329962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329963 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329962,G__329963) : tailrecursion.hoplon.span.call(null,G__329962,G__329963));
})();
var G__329863 = (function (){var G__329964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329965 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329964,G__329965) : tailrecursion.hoplon.span.call(null,G__329964,G__329965));
})();
var G__329864 = " [";
var G__329865 = (function (){var G__329966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329967 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329966,G__329967) : tailrecursion.hoplon.span.call(null,G__329966,G__329967));
})();
var G__329866 = " ";
var G__329867 = (function (){var G__329968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329969 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329968,G__329969) : tailrecursion.hoplon.span.call(null,G__329968,G__329969));
})();
var G__329868 = "]\n  (";
var G__329869 = (function (){var G__329970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329971 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329970,G__329971) : tailrecursion.hoplon.span.call(null,G__329970,G__329971));
})();
var G__329870 = "[";
var G__329871 = (function (){var G__329972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329973 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329972,G__329973) : tailrecursion.hoplon.span.call(null,G__329972,G__329973));
})();
var G__329872 = "    ";
var G__329873 = (function (){var G__329974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__329975 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329974,G__329975) : tailrecursion.hoplon.span.call(null,G__329974,G__329975));
})();
var G__329874 = "()\n         ";
var G__329875 = (function (){var G__329976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329977 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329976,G__329977) : tailrecursion.hoplon.span.call(null,G__329976,G__329977));
})();
var G__329876 = " ";
var G__329877 = (function (){var G__329978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329979 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329978,G__329979) : tailrecursion.hoplon.span.call(null,G__329978,G__329979));
})();
var G__329878 = "\n         ";
var G__329879 = (function (){var G__329980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329981 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329980,G__329981) : tailrecursion.hoplon.span.call(null,G__329980,G__329981));
})();
var G__329880 = " ";
var G__329881 = (function (){var G__329982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329983 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329982,G__329983) : tailrecursion.hoplon.span.call(null,G__329982,G__329983));
})();
var G__329882 = "]\n    (";
var G__329883 = (function (){var G__329984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329985 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329984,G__329985) : tailrecursion.hoplon.span.call(null,G__329984,G__329985));
})();
var G__329884 = "[";
var G__329885 = (function (){var G__329986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329987 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329986,G__329987) : tailrecursion.hoplon.span.call(null,G__329986,G__329987));
})();
var G__329886 = " (";
var G__329887 = (function (){var G__329988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329989 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329988,G__329989) : tailrecursion.hoplon.span.call(null,G__329988,G__329989));
})();
var G__329888 = (function (){var G__329990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329991 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329990,G__329991) : tailrecursion.hoplon.span.call(null,G__329990,G__329991));
})();
var G__329889 = ")\n          ";
var G__329890 = (function (){var G__329992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329993 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329992,G__329993) : tailrecursion.hoplon.span.call(null,G__329992,G__329993));
})();
var G__329891 = " (";
var G__329892 = (function (){var G__329994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329995 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329994,G__329995) : tailrecursion.hoplon.span.call(null,G__329994,G__329995));
})();
var G__329893 = (function (){var G__329996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329997 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329996,G__329997) : tailrecursion.hoplon.span.call(null,G__329996,G__329997));
})();
var G__329894 = ")]\n      (";
var G__329895 = (function (){var G__329998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329999 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329998,G__329999) : tailrecursion.hoplon.span.call(null,G__329998,G__329999));
})();
var G__329896 = "(";
var G__329897 = (function (){var G__330000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330001 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330000,G__330001) : tailrecursion.hoplon.span.call(null,G__330000,G__330001));
})();
var G__329898 = " ";
var G__329899 = (function (){var G__330002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330003 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330002,G__330003) : tailrecursion.hoplon.span.call(null,G__330002,G__330003));
})();
var G__329900 = ") (";
var G__329901 = (function (){var G__330004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330005 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330004,G__330005) : tailrecursion.hoplon.span.call(null,G__330004,G__330005));
})();
var G__329902 = "(";
var G__329903 = (function (){var G__330006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330007 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330006,G__330007) : tailrecursion.hoplon.span.call(null,G__330006,G__330007));
})();
var G__329904 = (function (){var G__330008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330009 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330008,G__330009) : tailrecursion.hoplon.span.call(null,G__330008,G__330009));
})();
var G__329905 = ") (";
var G__329906 = (function (){var G__330010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330011 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330010,G__330011) : tailrecursion.hoplon.span.call(null,G__330010,G__330011));
})();
var G__329907 = "))\n            (";
var G__329908 = (function (){var G__330012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330013 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330012,G__330013) : tailrecursion.hoplon.span.call(null,G__330012,G__330013));
})();
var G__329909 = " ";
var G__329910 = (function (){var G__330014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330015 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330014,G__330015) : tailrecursion.hoplon.span.call(null,G__330014,G__330015));
})();
var G__329911 = ") (";
var G__329912 = (function (){var G__330016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330017 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330016,G__330017) : tailrecursion.hoplon.span.call(null,G__330016,G__330017));
})();
var G__329913 = "(";
var G__329914 = (function (){var G__330018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330019 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330018,G__330019) : tailrecursion.hoplon.span.call(null,G__330018,G__330019));
})();
var G__329915 = (function (){var G__330020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330021 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330020,G__330021) : tailrecursion.hoplon.span.call(null,G__330020,G__330021));
})();
var G__329916 = ") (";
var G__329917 = (function (){var G__330022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330023 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330022,G__330023) : tailrecursion.hoplon.span.call(null,G__330022,G__330023));
})();
var G__329918 = "))\n            (";
var G__329919 = (function (){var G__330024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330025 = "<= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330024,G__330025) : tailrecursion.hoplon.span.call(null,G__330024,G__330025));
})();
var G__329920 = (function (){var G__330026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330027 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330026,G__330027) : tailrecursion.hoplon.span.call(null,G__330026,G__330027));
})();
var G__329921 = " ";
var G__329922 = (function (){var G__330028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330029 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330028,G__330029) : tailrecursion.hoplon.span.call(null,G__330028,G__330029));
})();
var G__329923 = ") (";
var G__329924 = (function (){var G__330030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330031 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330030,G__330031) : tailrecursion.hoplon.span.call(null,G__330030,G__330031));
})();
var G__329925 = " (";
var G__329926 = (function (){var G__330032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330033 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330032,G__330033) : tailrecursion.hoplon.span.call(null,G__330032,G__330033));
})();
var G__329927 = (function (){var G__330034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330035 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330034,G__330035) : tailrecursion.hoplon.span.call(null,G__330034,G__330035));
})();
var G__329928 = " ";
var G__329929 = (function (){var G__330036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330037 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330036,G__330037) : tailrecursion.hoplon.span.call(null,G__330036,G__330037));
})();
var G__329930 = ") (";
var G__329931 = (function (){var G__330038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330039 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330038,G__330039) : tailrecursion.hoplon.span.call(null,G__330038,G__330039));
})();
var G__329932 = (function (){var G__330040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330041 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330040,G__330041) : tailrecursion.hoplon.span.call(null,G__330040,G__330041));
})();
var G__329933 = ") ";
var G__329934 = (function (){var G__330042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330043 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330042,G__330043) : tailrecursion.hoplon.span.call(null,G__330042,G__330043));
})();
var G__329935 = ")\n            (";
var G__329936 = (function (){var G__330044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330045 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330044,G__330045) : tailrecursion.hoplon.span.call(null,G__330044,G__330045));
})();
var G__329937 = " ";
var G__329938 = (function (){var G__330046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330047 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330046,G__330047) : tailrecursion.hoplon.span.call(null,G__330046,G__330047));
})();
var G__329939 = " ";
var G__329940 = (function (){var G__330048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330049 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330048,G__330049) : tailrecursion.hoplon.span.call(null,G__330048,G__330049));
})();
var G__329941 = ") (";
var G__329942 = (function (){var G__330050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330051 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330050,G__330051) : tailrecursion.hoplon.span.call(null,G__330050,G__330051));
})();
var G__329943 = " (";
var G__329944 = (function (){var G__330052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330053 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330052,G__330053) : tailrecursion.hoplon.span.call(null,G__330052,G__330053));
})();
var G__329945 = (function (){var G__330054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330055 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330054,G__330055) : tailrecursion.hoplon.span.call(null,G__330054,G__330055));
})();
var G__329946 = " ";
var G__329947 = (function (){var G__330056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330057 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330056,G__330057) : tailrecursion.hoplon.span.call(null,G__330056,G__330057));
})();
var G__329948 = ") ";
var G__329949 = (function (){var G__330058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330059 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330058,G__330059) : tailrecursion.hoplon.span.call(null,G__330058,G__330059));
})();
var G__329950 = " (";
var G__329951 = (function (){var G__330060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330061 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330060,G__330061) : tailrecursion.hoplon.span.call(null,G__330060,G__330061));
})();
var G__329952 = (function (){var G__330062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330063 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330062,G__330063) : tailrecursion.hoplon.span.call(null,G__330062,G__330063));
})();
var G__329953 = "))\n            ";
var G__329954 = (function (){var G__330064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330065 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330064,G__330065) : tailrecursion.hoplon.span.call(null,G__330064,G__330065));
})();
var G__329955 = " (";
var G__329956 = (function (){var G__330066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330067 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330066,G__330067) : tailrecursion.hoplon.span.call(null,G__330066,G__330067));
})();
var G__329957 = " (";
var G__329958 = (function (){var G__330068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330069 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330068,G__330069) : tailrecursion.hoplon.span.call(null,G__330068,G__330069));
})();
var G__329959 = " ";
var G__329960 = (function (){var G__330070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__330071 = "\"Something went wrong with the union. Try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330070,G__330071) : tailrecursion.hoplon.span.call(null,G__330070,G__330071));
})();
var G__329961 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$102 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$102(G__329860,G__329861,G__329862,G__329863,G__329864,G__329865,G__329866,G__329867,G__329868,G__329869,G__329870,G__329871,G__329872,G__329873,G__329874,G__329875,G__329876,G__329877,G__329878,G__329879,G__329880,G__329881,G__329882,G__329883,G__329884,G__329885,G__329886,G__329887,G__329888,G__329889,G__329890,G__329891,G__329892,G__329893,G__329894,G__329895,G__329896,G__329897,G__329898,G__329899,G__329900,G__329901,G__329902,G__329903,G__329904,G__329905,G__329906,G__329907,G__329908,G__329909,G__329910,G__329911,G__329912,G__329913,G__329914,G__329915,G__329916,G__329917,G__329918,G__329919,G__329920,G__329921,G__329922,G__329923,G__329924,G__329925,G__329926,G__329927,G__329928,G__329929,G__329930,G__329931,G__329932,G__329933,G__329934,G__329935,G__329936,G__329937,G__329938,G__329939,G__329940,G__329941,G__329942,G__329943,G__329944,G__329945,G__329946,G__329947,G__329948,G__329949,G__329950,G__329951,G__329952,G__329953,G__329954,G__329955,G__329956,G__329957,G__329958,G__329959,G__329960,G__329961) : tailrecursion.hoplon.pre.call(null,G__329860,G__329861,G__329862,G__329863,G__329864,G__329865,G__329866,G__329867,G__329868,G__329869,G__329870,G__329871,G__329872,G__329873,G__329874,G__329875,G__329876,G__329877,G__329878,G__329879,G__329880,G__329881,G__329882,G__329883,G__329884,G__329885,G__329886,G__329887,G__329888,G__329889,G__329890,G__329891,G__329892,G__329893,G__329894,G__329895,G__329896,G__329897,G__329898,G__329899,G__329900,G__329901,G__329902,G__329903,G__329904,G__329905,G__329906,G__329907,G__329908,G__329909,G__329910,G__329911,G__329912,G__329913,G__329914,G__329915,G__329916,G__329917,G__329918,G__329919,G__329920,G__329921,G__329922,G__329923,G__329924,G__329925,G__329926,G__329927,G__329928,G__329929,G__329930,G__329931,G__329932,G__329933,G__329934,G__329935,G__329936,G__329937,G__329938,G__329939,G__329940,G__329941,G__329942,G__329943,G__329944,G__329945,G__329946,G__329947,G__329948,G__329949,G__329950,G__329951,G__329952,G__329953,G__329954,G__329955,G__329956,G__329957,G__329958,G__329959,G__329960,G__329961));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__329858,G__329859) : tailrecursion.hoplon.div.call(null,G__329858,G__329859));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__329857) : tailrecursion.hoplon.div.call(null,G__329857));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329642;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329641;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329640;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329639;
}})()], 0))], 0))], 0));
var G__320073 = "";
var G__320074 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Binary Trees"], null),(function (){var _STAR_references_STAR_330072 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_330073 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_330074 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_330075 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__330076 = cljs.core.PersistentArrayMap.EMPTY;
var G__330077 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can do better than the ordered-list representation by arranging the set elements in the form of a tree. Each node of the tree holds one element of the set, called the ",(function (){var G__330078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__330079 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["entry"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330078,G__330079) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330078,G__330079));
})()," at that node, and a link to each of two other (possibly empty) nodes. The ",(function (){var G__330080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__330081 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["left"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330080,G__330081) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330080,G__330081));
})()," link points to elements smaller than the one at the node, and the ",(function (){var G__330082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__330083 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["right"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330082,G__330083) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330082,G__330083));
})()," link to elements greater than one at the node. Figure 2.16 shows some trees that represent the set \\({1,3,5,7,9,11}\\). The same set may be represented by a tree in a number of different ways. The only thing we require for valid representation is that all elements in the left subtree be smaller than the node entry and that all elements in the right subtree be larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330076,G__330077) : tailrecursion.hoplon.markdown.para_node.call(null,G__330076,G__330077));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_330075;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_330074;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_330073;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_330072;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Various binary trees represent the set {1,3,5,7,9,11}"], null)], 0)),"",(function (){var _STAR_references_STAR_330084 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_330085 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_330086 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_330087 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__330088 = cljs.core.PersistentArrayMap.EMPTY;
var G__330089 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The advantage of the tree representation is this: Suppose we want to check whether a number \\(x\\) is contained in a set. We begin by comparing \\(x\\) with the entry in the top node. If \\(x\\) is less than this, we know that we need only search the left subtree; if \\(x\\) is greater, we need only search the right subtree. Now, if the tree is ",(function (){var G__330090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__330091 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330090,G__330091) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330090,G__330091));
})()," each of these subtrees will be about half the size of the original. Thus, in one step we have reduced the problem of searching a tree of size \\(n\\) to searching a tree of size \\(n/2\\). Since the size of the tree is halved at each step, we should expect that the number of steps needed to search a tree of size \\(n\\) grows as \\(\\Theta(\\log n)\\).",(function (){var G__330092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__330093 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Halving the size of the problem at each step is the distinguishing characteristic of logarithmic growth, as we saw with the fast-exponentiation algorithm of section 1.2.4 and the half-interval search method of section 1.3.3."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330092,G__330093) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330092,G__330093));
})()," For large sets, this will be a significant speedup over the previous representations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330088,G__330089) : tailrecursion.hoplon.markdown.para_node.call(null,G__330088,G__330089));
})(),(function (){var G__330094 = cljs.core.PersistentArrayMap.EMPTY;
var G__330095 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can represent trees by using lists. Each node will be a list of three items: the entry at the node, the left subtree, and the right subtree. A left or right subtree of the empty list will indicate that there is no subtree connected there. We can describe this representation by the following procedure:",(function (){var G__330096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__330097 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are representing sets in terms of trees, and trees in terms of lists ",(function (){var G__330098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__330099 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__330098,G__330099) : tailrecursion.hoplon.markdown.simple_node.call(null,G__330098,G__330099));
})()," in effect, a data abstraction built upon a data abstraction. We can regard the procedures entry, left-branch, right-branch, and make-tree as a way of isolating the abstraction of a ",(function (){var G__330100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__330101 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binary tree"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330100,G__330101) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330100,G__330101));
})()," from the particular way we might wish to represent such a tree in terms of list structure."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__330096,G__330097) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__330096,G__330097));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330094,G__330095) : tailrecursion.hoplon.markdown.para_node.call(null,G__330094,G__330095));
})(),(function (){var G__330196 = (function (){var G__330197 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330198 = (function (){var G__330199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330200 = "(";
var G__330201 = (function (){var G__330241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330242 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330241,G__330242) : tailrecursion.hoplon.span.call(null,G__330241,G__330242));
})();
var G__330202 = (function (){var G__330243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330244 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330243,G__330244) : tailrecursion.hoplon.span.call(null,G__330243,G__330244));
})();
var G__330203 = " [";
var G__330204 = (function (){var G__330245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330246 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330245,G__330246) : tailrecursion.hoplon.span.call(null,G__330245,G__330246));
})();
var G__330205 = "]\n  (";
var G__330206 = (function (){var G__330247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330248 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330247,G__330248) : tailrecursion.hoplon.span.call(null,G__330247,G__330248));
})();
var G__330207 = (function (){var G__330249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330250 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330249,G__330250) : tailrecursion.hoplon.span.call(null,G__330249,G__330250));
})();
var G__330208 = "))\n\n(";
var G__330209 = (function (){var G__330251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330252 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330251,G__330252) : tailrecursion.hoplon.span.call(null,G__330251,G__330252));
})();
var G__330210 = (function (){var G__330253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330254 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330253,G__330254) : tailrecursion.hoplon.span.call(null,G__330253,G__330254));
})();
var G__330211 = " [";
var G__330212 = (function (){var G__330255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330256 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330255,G__330256) : tailrecursion.hoplon.span.call(null,G__330255,G__330256));
})();
var G__330213 = "]\n  (";
var G__330214 = (function (){var G__330257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330258 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330257,G__330258) : tailrecursion.hoplon.span.call(null,G__330257,G__330258));
})();
var G__330215 = (function (){var G__330259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330260 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330259,G__330260) : tailrecursion.hoplon.span.call(null,G__330259,G__330260));
})();
var G__330216 = "))\n\n(";
var G__330217 = (function (){var G__330261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330262 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330261,G__330262) : tailrecursion.hoplon.span.call(null,G__330261,G__330262));
})();
var G__330218 = (function (){var G__330263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330264 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330263,G__330264) : tailrecursion.hoplon.span.call(null,G__330263,G__330264));
})();
var G__330219 = " [";
var G__330220 = (function (){var G__330265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330266 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330265,G__330266) : tailrecursion.hoplon.span.call(null,G__330265,G__330266));
})();
var G__330221 = "]\n  (";
var G__330222 = (function (){var G__330267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330268 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330267,G__330268) : tailrecursion.hoplon.span.call(null,G__330267,G__330268));
})();
var G__330223 = (function (){var G__330269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330270 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330269,G__330270) : tailrecursion.hoplon.span.call(null,G__330269,G__330270));
})();
var G__330224 = " ";
var G__330225 = (function (){var G__330271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__330272 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330271,G__330272) : tailrecursion.hoplon.span.call(null,G__330271,G__330272));
})();
var G__330226 = "))\n\n(";
var G__330227 = (function (){var G__330273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330274 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330273,G__330274) : tailrecursion.hoplon.span.call(null,G__330273,G__330274));
})();
var G__330228 = (function (){var G__330275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330276 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330275,G__330276) : tailrecursion.hoplon.span.call(null,G__330275,G__330276));
})();
var G__330229 = " [";
var G__330230 = (function (){var G__330277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330278 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330277,G__330278) : tailrecursion.hoplon.span.call(null,G__330277,G__330278));
})();
var G__330231 = " ";
var G__330232 = (function (){var G__330279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330280 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330279,G__330280) : tailrecursion.hoplon.span.call(null,G__330279,G__330280));
})();
var G__330233 = (function (){var G__330281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330282 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330281,G__330282) : tailrecursion.hoplon.span.call(null,G__330281,G__330282));
})();
var G__330234 = "]\n  (";
var G__330235 = (function (){var G__330283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330284 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330283,G__330284) : tailrecursion.hoplon.span.call(null,G__330283,G__330284));
})();
var G__330236 = (function (){var G__330285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330286 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330285,G__330286) : tailrecursion.hoplon.span.call(null,G__330285,G__330286));
})();
var G__330237 = " ";
var G__330238 = (function (){var G__330287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330288 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330287,G__330288) : tailrecursion.hoplon.span.call(null,G__330287,G__330288));
})();
var G__330239 = (function (){var G__330289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330290 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330289,G__330290) : tailrecursion.hoplon.span.call(null,G__330289,G__330290));
})();
var G__330240 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__330199,G__330200,G__330201,G__330202,G__330203,G__330204,G__330205,G__330206,G__330207,G__330208,G__330209,G__330210,G__330211,G__330212,G__330213,G__330214,G__330215,G__330216,G__330217,G__330218,G__330219,G__330220,G__330221,G__330222,G__330223,G__330224,G__330225,G__330226,G__330227,G__330228,G__330229,G__330230,G__330231,G__330232,G__330233,G__330234,G__330235,G__330236,G__330237,G__330238,G__330239,G__330240) : tailrecursion.hoplon.pre.call(null,G__330199,G__330200,G__330201,G__330202,G__330203,G__330204,G__330205,G__330206,G__330207,G__330208,G__330209,G__330210,G__330211,G__330212,G__330213,G__330214,G__330215,G__330216,G__330217,G__330218,G__330219,G__330220,G__330221,G__330222,G__330223,G__330224,G__330225,G__330226,G__330227,G__330228,G__330229,G__330230,G__330231,G__330232,G__330233,G__330234,G__330235,G__330236,G__330237,G__330238,G__330239,G__330240));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330197,G__330198) : tailrecursion.hoplon.div.call(null,G__330197,G__330198));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330196) : tailrecursion.hoplon.div.call(null,G__330196));
})(),(function (){var G__330291 = cljs.core.PersistentArrayMap.EMPTY;
var G__330292 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can write the ",(function (){var G__330293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__330294 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__330293,G__330294) : tailrecursion.hoplon.markdown.code_node.call(null,G__330293,G__330294));
})()," procedure using the strategy described above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330291,G__330292) : tailrecursion.hoplon.markdown.para_node.call(null,G__330291,G__330292));
})(),(function (){var G__330427 = (function (){var G__330428 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330429 = (function (){var G__330430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330431 = "(";
var G__330432 = (function (){var G__330494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330495 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330494,G__330495) : tailrecursion.hoplon.span.call(null,G__330494,G__330495));
})();
var G__330433 = (function (){var G__330496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330497 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330496,G__330497) : tailrecursion.hoplon.span.call(null,G__330496,G__330497));
})();
var G__330434 = " [";
var G__330435 = (function (){var G__330498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330499 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330498,G__330499) : tailrecursion.hoplon.span.call(null,G__330498,G__330499));
})();
var G__330436 = " ";
var G__330437 = (function (){var G__330500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330501 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330500,G__330501) : tailrecursion.hoplon.span.call(null,G__330500,G__330501));
})();
var G__330438 = "]\n  (";
var G__330439 = (function (){var G__330502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330503 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330502,G__330503) : tailrecursion.hoplon.span.call(null,G__330502,G__330503));
})();
var G__330440 = "(";
var G__330441 = (function (){var G__330504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330505 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330504,G__330505) : tailrecursion.hoplon.span.call(null,G__330504,G__330505));
})();
var G__330442 = " ";
var G__330443 = (function (){var G__330506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330507 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330506,G__330507) : tailrecursion.hoplon.span.call(null,G__330506,G__330507));
})();
var G__330444 = ") ";
var G__330445 = (function (){var G__330508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330509 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330508,G__330509) : tailrecursion.hoplon.span.call(null,G__330508,G__330509));
})();
var G__330446 = "\n        (";
var G__330447 = (function (){var G__330510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330511 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330510,G__330511) : tailrecursion.hoplon.span.call(null,G__330510,G__330511));
})();
var G__330448 = (function (){var G__330512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330513 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330512,G__330513) : tailrecursion.hoplon.span.call(null,G__330512,G__330513));
})();
var G__330449 = " (";
var G__330450 = (function (){var G__330514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330515 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330514,G__330515) : tailrecursion.hoplon.span.call(null,G__330514,G__330515));
})();
var G__330451 = " ";
var G__330452 = (function (){var G__330516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330517 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330516,G__330517) : tailrecursion.hoplon.span.call(null,G__330516,G__330517));
})();
var G__330453 = ")) ";
var G__330454 = (function (){var G__330518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330519 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330518,G__330519) : tailrecursion.hoplon.span.call(null,G__330518,G__330519));
})();
var G__330455 = "\n        (";
var G__330456 = (function (){var G__330520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330521 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330520,G__330521) : tailrecursion.hoplon.span.call(null,G__330520,G__330521));
})();
var G__330457 = (function (){var G__330522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330523 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330522,G__330523) : tailrecursion.hoplon.span.call(null,G__330522,G__330523));
})();
var G__330458 = " (";
var G__330459 = (function (){var G__330524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330525 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330524,G__330525) : tailrecursion.hoplon.span.call(null,G__330524,G__330525));
})();
var G__330460 = " ";
var G__330461 = (function (){var G__330526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330527 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330526,G__330527) : tailrecursion.hoplon.span.call(null,G__330526,G__330527));
})();
var G__330462 = ")) (";
var G__330463 = (function (){var G__330528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330529 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330528,G__330529) : tailrecursion.hoplon.span.call(null,G__330528,G__330529));
})();
var G__330464 = " ";
var G__330465 = (function (){var G__330530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330531 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330530,G__330531) : tailrecursion.hoplon.span.call(null,G__330530,G__330531));
})();
var G__330466 = " (";
var G__330467 = (function (){var G__330532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330533 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330532,G__330533) : tailrecursion.hoplon.span.call(null,G__330532,G__330533));
})();
var G__330468 = " ";
var G__330469 = (function (){var G__330534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330535 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330534,G__330535) : tailrecursion.hoplon.span.call(null,G__330534,G__330535));
})();
var G__330470 = "))\n        (";
var G__330471 = (function (){var G__330536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330537 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330536,G__330537) : tailrecursion.hoplon.span.call(null,G__330536,G__330537));
})();
var G__330472 = (function (){var G__330538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330539 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330538,G__330539) : tailrecursion.hoplon.span.call(null,G__330538,G__330539));
})();
var G__330473 = " (";
var G__330474 = (function (){var G__330540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330541 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330540,G__330541) : tailrecursion.hoplon.span.call(null,G__330540,G__330541));
})();
var G__330475 = " ";
var G__330476 = (function (){var G__330542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330543 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330542,G__330543) : tailrecursion.hoplon.span.call(null,G__330542,G__330543));
})();
var G__330477 = ")) (";
var G__330478 = (function (){var G__330544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330545 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330544,G__330545) : tailrecursion.hoplon.span.call(null,G__330544,G__330545));
})();
var G__330479 = " ";
var G__330480 = (function (){var G__330546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330547 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330546,G__330547) : tailrecursion.hoplon.span.call(null,G__330546,G__330547));
})();
var G__330481 = " (";
var G__330482 = (function (){var G__330548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330549 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330548,G__330549) : tailrecursion.hoplon.span.call(null,G__330548,G__330549));
})();
var G__330483 = " ";
var G__330484 = (function (){var G__330550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330551 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330550,G__330551) : tailrecursion.hoplon.span.call(null,G__330550,G__330551));
})();
var G__330485 = "))\n        ";
var G__330486 = (function (){var G__330552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330553 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330552,G__330553) : tailrecursion.hoplon.span.call(null,G__330552,G__330553));
})();
var G__330487 = " (";
var G__330488 = (function (){var G__330554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330555 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330554,G__330555) : tailrecursion.hoplon.span.call(null,G__330554,G__330555));
})();
var G__330489 = " (";
var G__330490 = (function (){var G__330556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330557 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330556,G__330557) : tailrecursion.hoplon.span.call(null,G__330556,G__330557));
})();
var G__330491 = " ";
var G__330492 = (function (){var G__330558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__330559 = "\"Something went wrong with element-of-set?\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330558,G__330559) : tailrecursion.hoplon.span.call(null,G__330558,G__330559));
})();
var G__330493 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$64 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$64(G__330430,G__330431,G__330432,G__330433,G__330434,G__330435,G__330436,G__330437,G__330438,G__330439,G__330440,G__330441,G__330442,G__330443,G__330444,G__330445,G__330446,G__330447,G__330448,G__330449,G__330450,G__330451,G__330452,G__330453,G__330454,G__330455,G__330456,G__330457,G__330458,G__330459,G__330460,G__330461,G__330462,G__330463,G__330464,G__330465,G__330466,G__330467,G__330468,G__330469,G__330470,G__330471,G__330472,G__330473,G__330474,G__330475,G__330476,G__330477,G__330478,G__330479,G__330480,G__330481,G__330482,G__330483,G__330484,G__330485,G__330486,G__330487,G__330488,G__330489,G__330490,G__330491,G__330492,G__330493) : tailrecursion.hoplon.pre.call(null,G__330430,G__330431,G__330432,G__330433,G__330434,G__330435,G__330436,G__330437,G__330438,G__330439,G__330440,G__330441,G__330442,G__330443,G__330444,G__330445,G__330446,G__330447,G__330448,G__330449,G__330450,G__330451,G__330452,G__330453,G__330454,G__330455,G__330456,G__330457,G__330458,G__330459,G__330460,G__330461,G__330462,G__330463,G__330464,G__330465,G__330466,G__330467,G__330468,G__330469,G__330470,G__330471,G__330472,G__330473,G__330474,G__330475,G__330476,G__330477,G__330478,G__330479,G__330480,G__330481,G__330482,G__330483,G__330484,G__330485,G__330486,G__330487,G__330488,G__330489,G__330490,G__330491,G__330492,G__330493));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330428,G__330429) : tailrecursion.hoplon.div.call(null,G__330428,G__330429));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330427) : tailrecursion.hoplon.div.call(null,G__330427));
})(),(function (){var G__330560 = cljs.core.PersistentArrayMap.EMPTY;
var G__330561 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But since this involves recursion, we should try to formulate this using ",(function (){var G__330562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__330563 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__330562,G__330563) : tailrecursion.hoplon.markdown.code_node.call(null,G__330562,G__330563));
})()," and ",(function (){var G__330564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"recur"], null);
var G__330565 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__330564,G__330565) : tailrecursion.hoplon.markdown.code_node.call(null,G__330564,G__330565));
})()," as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330560,G__330561) : tailrecursion.hoplon.markdown.para_node.call(null,G__330560,G__330561));
})(),(function (){var G__330710 = (function (){var G__330711 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330712 = (function (){var G__330713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330714 = "(";
var G__330715 = (function (){var G__330783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330784 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330783,G__330784) : tailrecursion.hoplon.span.call(null,G__330783,G__330784));
})();
var G__330716 = (function (){var G__330785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330786 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330785,G__330786) : tailrecursion.hoplon.span.call(null,G__330785,G__330786));
})();
var G__330717 = " [";
var G__330718 = (function (){var G__330787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330788 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330787,G__330788) : tailrecursion.hoplon.span.call(null,G__330787,G__330788));
})();
var G__330719 = " ";
var G__330720 = (function (){var G__330789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330790 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330789,G__330790) : tailrecursion.hoplon.span.call(null,G__330789,G__330790));
})();
var G__330721 = "]\n  (";
var G__330722 = (function (){var G__330791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330792 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330791,G__330792) : tailrecursion.hoplon.span.call(null,G__330791,G__330792));
})();
var G__330723 = "[";
var G__330724 = (function (){var G__330793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330794 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330793,G__330794) : tailrecursion.hoplon.span.call(null,G__330793,G__330794));
})();
var G__330725 = " ";
var G__330726 = (function (){var G__330795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330796 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330795,G__330796) : tailrecursion.hoplon.span.call(null,G__330795,G__330796));
})();
var G__330727 = "]\n    (";
var G__330728 = (function (){var G__330797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330798 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330797,G__330798) : tailrecursion.hoplon.span.call(null,G__330797,G__330798));
})();
var G__330729 = "(";
var G__330730 = (function (){var G__330799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330800 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330799,G__330800) : tailrecursion.hoplon.span.call(null,G__330799,G__330800));
})();
var G__330731 = " ";
var G__330732 = (function (){var G__330801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330802 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330801,G__330802) : tailrecursion.hoplon.span.call(null,G__330801,G__330802));
})();
var G__330733 = ") ";
var G__330734 = (function (){var G__330803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330804 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330803,G__330804) : tailrecursion.hoplon.span.call(null,G__330803,G__330804));
})();
var G__330735 = "\n          (";
var G__330736 = (function (){var G__330805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330806 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330805,G__330806) : tailrecursion.hoplon.span.call(null,G__330805,G__330806));
})();
var G__330737 = (function (){var G__330807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330808 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330807,G__330808) : tailrecursion.hoplon.span.call(null,G__330807,G__330808));
})();
var G__330738 = " (";
var G__330739 = (function (){var G__330809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330810 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330809,G__330810) : tailrecursion.hoplon.span.call(null,G__330809,G__330810));
})();
var G__330740 = " ";
var G__330741 = (function (){var G__330811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330812 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330811,G__330812) : tailrecursion.hoplon.span.call(null,G__330811,G__330812));
})();
var G__330742 = ")) ";
var G__330743 = (function (){var G__330813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330814 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330813,G__330814) : tailrecursion.hoplon.span.call(null,G__330813,G__330814));
})();
var G__330744 = "\n          (";
var G__330745 = (function (){var G__330815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330816 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330815,G__330816) : tailrecursion.hoplon.span.call(null,G__330815,G__330816));
})();
var G__330746 = (function (){var G__330817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330818 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330817,G__330818) : tailrecursion.hoplon.span.call(null,G__330817,G__330818));
})();
var G__330747 = " (";
var G__330748 = (function (){var G__330819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330820 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330819,G__330820) : tailrecursion.hoplon.span.call(null,G__330819,G__330820));
})();
var G__330749 = " ";
var G__330750 = (function (){var G__330821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330822 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330821,G__330822) : tailrecursion.hoplon.span.call(null,G__330821,G__330822));
})();
var G__330751 = ")) (";
var G__330752 = (function (){var G__330823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330824 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330823,G__330824) : tailrecursion.hoplon.span.call(null,G__330823,G__330824));
})();
var G__330753 = " ";
var G__330754 = (function (){var G__330825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330826 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330825,G__330826) : tailrecursion.hoplon.span.call(null,G__330825,G__330826));
})();
var G__330755 = " (";
var G__330756 = (function (){var G__330827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330828 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330827,G__330828) : tailrecursion.hoplon.span.call(null,G__330827,G__330828));
})();
var G__330757 = " ";
var G__330758 = (function (){var G__330829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330830 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330829,G__330830) : tailrecursion.hoplon.span.call(null,G__330829,G__330830));
})();
var G__330759 = "))\n          (";
var G__330760 = (function (){var G__330831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330832 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330831,G__330832) : tailrecursion.hoplon.span.call(null,G__330831,G__330832));
})();
var G__330761 = (function (){var G__330833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330834 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330833,G__330834) : tailrecursion.hoplon.span.call(null,G__330833,G__330834));
})();
var G__330762 = " (";
var G__330763 = (function (){var G__330835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330836 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330835,G__330836) : tailrecursion.hoplon.span.call(null,G__330835,G__330836));
})();
var G__330764 = " ";
var G__330765 = (function (){var G__330837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330838 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330837,G__330838) : tailrecursion.hoplon.span.call(null,G__330837,G__330838));
})();
var G__330766 = ")) (";
var G__330767 = (function (){var G__330839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330840 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330839,G__330840) : tailrecursion.hoplon.span.call(null,G__330839,G__330840));
})();
var G__330768 = " ";
var G__330769 = (function (){var G__330841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330842 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330841,G__330842) : tailrecursion.hoplon.span.call(null,G__330841,G__330842));
})();
var G__330770 = " (";
var G__330771 = (function (){var G__330843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330844 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330843,G__330844) : tailrecursion.hoplon.span.call(null,G__330843,G__330844));
})();
var G__330772 = " ";
var G__330773 = (function (){var G__330845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330846 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330845,G__330846) : tailrecursion.hoplon.span.call(null,G__330845,G__330846));
})();
var G__330774 = "))\n          ";
var G__330775 = (function (){var G__330847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330848 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330847,G__330848) : tailrecursion.hoplon.span.call(null,G__330847,G__330848));
})();
var G__330776 = " (";
var G__330777 = (function (){var G__330849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330850 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330849,G__330850) : tailrecursion.hoplon.span.call(null,G__330849,G__330850));
})();
var G__330778 = " (";
var G__330779 = (function (){var G__330851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330852 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330851,G__330852) : tailrecursion.hoplon.span.call(null,G__330851,G__330852));
})();
var G__330780 = " ";
var G__330781 = (function (){var G__330853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__330854 = "\"Something went wrong with element-of-set?\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330853,G__330854) : tailrecursion.hoplon.span.call(null,G__330853,G__330854));
})();
var G__330782 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__330713,G__330714,G__330715,G__330716,G__330717,G__330718,G__330719,G__330720,G__330721,G__330722,G__330723,G__330724,G__330725,G__330726,G__330727,G__330728,G__330729,G__330730,G__330731,G__330732,G__330733,G__330734,G__330735,G__330736,G__330737,G__330738,G__330739,G__330740,G__330741,G__330742,G__330743,G__330744,G__330745,G__330746,G__330747,G__330748,G__330749,G__330750,G__330751,G__330752,G__330753,G__330754,G__330755,G__330756,G__330757,G__330758,G__330759,G__330760,G__330761,G__330762,G__330763,G__330764,G__330765,G__330766,G__330767,G__330768,G__330769,G__330770,G__330771,G__330772,G__330773,G__330774,G__330775,G__330776,G__330777,G__330778,G__330779,G__330780,G__330781,G__330782) : tailrecursion.hoplon.pre.call(null,G__330713,G__330714,G__330715,G__330716,G__330717,G__330718,G__330719,G__330720,G__330721,G__330722,G__330723,G__330724,G__330725,G__330726,G__330727,G__330728,G__330729,G__330730,G__330731,G__330732,G__330733,G__330734,G__330735,G__330736,G__330737,G__330738,G__330739,G__330740,G__330741,G__330742,G__330743,G__330744,G__330745,G__330746,G__330747,G__330748,G__330749,G__330750,G__330751,G__330752,G__330753,G__330754,G__330755,G__330756,G__330757,G__330758,G__330759,G__330760,G__330761,G__330762,G__330763,G__330764,G__330765,G__330766,G__330767,G__330768,G__330769,G__330770,G__330771,G__330772,G__330773,G__330774,G__330775,G__330776,G__330777,G__330778,G__330779,G__330780,G__330781,G__330782));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330711,G__330712) : tailrecursion.hoplon.div.call(null,G__330711,G__330712));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330710) : tailrecursion.hoplon.div.call(null,G__330710));
})(),(function (){var G__330855 = cljs.core.PersistentArrayMap.EMPTY;
var G__330856 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Adjoining an item to a set is implemented similarly and also requires \\(\\Theta(\\log n)\\) steps. To adjoin an item \\(x\\), we compare \\(x\\) with the node entry to determine whether \\(x\\) should be added to the right or to the left branch, and having adjoined \\(x\\) to the appropriate branch we piece this newly constructed branch together with the original entry and the other branch. If \\(x\\) is equal to the entry, we just return the node. If we are asked to adjoin \\(x\\) to an empty tree, we generate a tree that has \\(x\\) as the entry and empty right and left branches. Here is the procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330855,G__330856) : tailrecursion.hoplon.markdown.para_node.call(null,G__330855,G__330856));
})(),(function (){var G__331041 = (function (){var G__331042 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331043 = (function (){var G__331044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331045 = "(";
var G__331046 = (function (){var G__331134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331135 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331134,G__331135) : tailrecursion.hoplon.span.call(null,G__331134,G__331135));
})();
var G__331047 = (function (){var G__331136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331137 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331136,G__331137) : tailrecursion.hoplon.span.call(null,G__331136,G__331137));
})();
var G__331048 = " [";
var G__331049 = (function (){var G__331138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331139 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331138,G__331139) : tailrecursion.hoplon.span.call(null,G__331138,G__331139));
})();
var G__331050 = " ";
var G__331051 = (function (){var G__331140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331141 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331140,G__331141) : tailrecursion.hoplon.span.call(null,G__331140,G__331141));
})();
var G__331052 = "]\n  (";
var G__331053 = (function (){var G__331142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331143 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331142,G__331143) : tailrecursion.hoplon.span.call(null,G__331142,G__331143));
})();
var G__331054 = "(";
var G__331055 = (function (){var G__331144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331145 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331144,G__331145) : tailrecursion.hoplon.span.call(null,G__331144,G__331145));
})();
var G__331056 = " ";
var G__331057 = (function (){var G__331146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331147 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331146,G__331147) : tailrecursion.hoplon.span.call(null,G__331146,G__331147));
})();
var G__331058 = ") (";
var G__331059 = (function (){var G__331148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331149 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331148,G__331149) : tailrecursion.hoplon.span.call(null,G__331148,G__331149));
})();
var G__331060 = " ";
var G__331061 = (function (){var G__331150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331151 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331150,G__331151) : tailrecursion.hoplon.span.call(null,G__331150,G__331151));
})();
var G__331062 = " ";
var G__331063 = (function (){var G__331152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331153 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331152,G__331153) : tailrecursion.hoplon.span.call(null,G__331152,G__331153));
})();
var G__331064 = "() ";
var G__331065 = (function (){var G__331154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331155 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331154,G__331155) : tailrecursion.hoplon.span.call(null,G__331154,G__331155));
})();
var G__331066 = "())\n        (";
var G__331067 = (function (){var G__331156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331157 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331156,G__331157) : tailrecursion.hoplon.span.call(null,G__331156,G__331157));
})();
var G__331068 = (function (){var G__331158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331159 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331158,G__331159) : tailrecursion.hoplon.span.call(null,G__331158,G__331159));
})();
var G__331069 = " (";
var G__331070 = (function (){var G__331160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331161 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331160,G__331161) : tailrecursion.hoplon.span.call(null,G__331160,G__331161));
})();
var G__331071 = " ";
var G__331072 = (function (){var G__331162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331163 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331162,G__331163) : tailrecursion.hoplon.span.call(null,G__331162,G__331163));
})();
var G__331073 = ")) ";
var G__331074 = (function (){var G__331164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331165 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331164,G__331165) : tailrecursion.hoplon.span.call(null,G__331164,G__331165));
})();
var G__331075 = "\n        (";
var G__331076 = (function (){var G__331166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331167 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331166,G__331167) : tailrecursion.hoplon.span.call(null,G__331166,G__331167));
})();
var G__331077 = (function (){var G__331168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331169 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331168,G__331169) : tailrecursion.hoplon.span.call(null,G__331168,G__331169));
})();
var G__331078 = " (";
var G__331079 = (function (){var G__331170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331171 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331170,G__331171) : tailrecursion.hoplon.span.call(null,G__331170,G__331171));
})();
var G__331080 = " ";
var G__331081 = (function (){var G__331172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331173 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331172,G__331173) : tailrecursion.hoplon.span.call(null,G__331172,G__331173));
})();
var G__331082 = ")) (";
var G__331083 = (function (){var G__331174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331175 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331174,G__331175) : tailrecursion.hoplon.span.call(null,G__331174,G__331175));
})();
var G__331084 = " (";
var G__331085 = (function (){var G__331176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331177 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331176,G__331177) : tailrecursion.hoplon.span.call(null,G__331176,G__331177));
})();
var G__331086 = " ";
var G__331087 = (function (){var G__331178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331179 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331178,G__331179) : tailrecursion.hoplon.span.call(null,G__331178,G__331179));
})();
var G__331088 = ")\n                                     (";
var G__331089 = (function (){var G__331180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331181 = "adjoin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331180,G__331181) : tailrecursion.hoplon.span.call(null,G__331180,G__331181));
})();
var G__331090 = " ";
var G__331091 = (function (){var G__331182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331183 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331182,G__331183) : tailrecursion.hoplon.span.call(null,G__331182,G__331183));
})();
var G__331092 = " (";
var G__331093 = (function (){var G__331184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331185 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331184,G__331185) : tailrecursion.hoplon.span.call(null,G__331184,G__331185));
})();
var G__331094 = " ";
var G__331095 = (function (){var G__331186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331187 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331186,G__331187) : tailrecursion.hoplon.span.call(null,G__331186,G__331187));
})();
var G__331096 = "))\n                                     (";
var G__331097 = (function (){var G__331188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331189 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331188,G__331189) : tailrecursion.hoplon.span.call(null,G__331188,G__331189));
})();
var G__331098 = " ";
var G__331099 = (function (){var G__331190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331191 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331190,G__331191) : tailrecursion.hoplon.span.call(null,G__331190,G__331191));
})();
var G__331100 = "))\n        (";
var G__331101 = (function (){var G__331192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331193 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331192,G__331193) : tailrecursion.hoplon.span.call(null,G__331192,G__331193));
})();
var G__331102 = (function (){var G__331194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331195 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331194,G__331195) : tailrecursion.hoplon.span.call(null,G__331194,G__331195));
})();
var G__331103 = " (";
var G__331104 = (function (){var G__331196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331197 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331196,G__331197) : tailrecursion.hoplon.span.call(null,G__331196,G__331197));
})();
var G__331105 = " ";
var G__331106 = (function (){var G__331198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331199 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331198,G__331199) : tailrecursion.hoplon.span.call(null,G__331198,G__331199));
})();
var G__331107 = ")) (";
var G__331108 = (function (){var G__331200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331201 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331200,G__331201) : tailrecursion.hoplon.span.call(null,G__331200,G__331201));
})();
var G__331109 = " (";
var G__331110 = (function (){var G__331202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331203 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331202,G__331203) : tailrecursion.hoplon.span.call(null,G__331202,G__331203));
})();
var G__331111 = " ";
var G__331112 = (function (){var G__331204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331205 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331204,G__331205) : tailrecursion.hoplon.span.call(null,G__331204,G__331205));
})();
var G__331113 = ")\n                                     (";
var G__331114 = (function (){var G__331206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331207 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331206,G__331207) : tailrecursion.hoplon.span.call(null,G__331206,G__331207));
})();
var G__331115 = " ";
var G__331116 = (function (){var G__331208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331209 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331208,G__331209) : tailrecursion.hoplon.span.call(null,G__331208,G__331209));
})();
var G__331117 = ")\n                                     (";
var G__331118 = (function (){var G__331210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331211 = "adjoin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331210,G__331211) : tailrecursion.hoplon.span.call(null,G__331210,G__331211));
})();
var G__331119 = " ";
var G__331120 = (function (){var G__331212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331213 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331212,G__331213) : tailrecursion.hoplon.span.call(null,G__331212,G__331213));
})();
var G__331121 = " (";
var G__331122 = (function (){var G__331214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331215 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331214,G__331215) : tailrecursion.hoplon.span.call(null,G__331214,G__331215));
})();
var G__331123 = " ";
var G__331124 = (function (){var G__331216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331217 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331216,G__331217) : tailrecursion.hoplon.span.call(null,G__331216,G__331217));
})();
var G__331125 = ")))\n        ";
var G__331126 = (function (){var G__331218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331219 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331218,G__331219) : tailrecursion.hoplon.span.call(null,G__331218,G__331219));
})();
var G__331127 = " (";
var G__331128 = (function (){var G__331220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331221 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331220,G__331221) : tailrecursion.hoplon.span.call(null,G__331220,G__331221));
})();
var G__331129 = " (";
var G__331130 = (function (){var G__331222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331223 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331222,G__331223) : tailrecursion.hoplon.span.call(null,G__331222,G__331223));
})();
var G__331131 = " ";
var G__331132 = (function (){var G__331224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__331225 = "\"Something went wrong with adjoin-set\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331224,G__331225) : tailrecursion.hoplon.span.call(null,G__331224,G__331225));
})();
var G__331133 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90(G__331044,G__331045,G__331046,G__331047,G__331048,G__331049,G__331050,G__331051,G__331052,G__331053,G__331054,G__331055,G__331056,G__331057,G__331058,G__331059,G__331060,G__331061,G__331062,G__331063,G__331064,G__331065,G__331066,G__331067,G__331068,G__331069,G__331070,G__331071,G__331072,G__331073,G__331074,G__331075,G__331076,G__331077,G__331078,G__331079,G__331080,G__331081,G__331082,G__331083,G__331084,G__331085,G__331086,G__331087,G__331088,G__331089,G__331090,G__331091,G__331092,G__331093,G__331094,G__331095,G__331096,G__331097,G__331098,G__331099,G__331100,G__331101,G__331102,G__331103,G__331104,G__331105,G__331106,G__331107,G__331108,G__331109,G__331110,G__331111,G__331112,G__331113,G__331114,G__331115,G__331116,G__331117,G__331118,G__331119,G__331120,G__331121,G__331122,G__331123,G__331124,G__331125,G__331126,G__331127,G__331128,G__331129,G__331130,G__331131,G__331132,G__331133) : tailrecursion.hoplon.pre.call(null,G__331044,G__331045,G__331046,G__331047,G__331048,G__331049,G__331050,G__331051,G__331052,G__331053,G__331054,G__331055,G__331056,G__331057,G__331058,G__331059,G__331060,G__331061,G__331062,G__331063,G__331064,G__331065,G__331066,G__331067,G__331068,G__331069,G__331070,G__331071,G__331072,G__331073,G__331074,G__331075,G__331076,G__331077,G__331078,G__331079,G__331080,G__331081,G__331082,G__331083,G__331084,G__331085,G__331086,G__331087,G__331088,G__331089,G__331090,G__331091,G__331092,G__331093,G__331094,G__331095,G__331096,G__331097,G__331098,G__331099,G__331100,G__331101,G__331102,G__331103,G__331104,G__331105,G__331106,G__331107,G__331108,G__331109,G__331110,G__331111,G__331112,G__331113,G__331114,G__331115,G__331116,G__331117,G__331118,G__331119,G__331120,G__331121,G__331122,G__331123,G__331124,G__331125,G__331126,G__331127,G__331128,G__331129,G__331130,G__331131,G__331132,G__331133));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331042,G__331043) : tailrecursion.hoplon.div.call(null,G__331042,G__331043));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331041) : tailrecursion.hoplon.div.call(null,G__331041));
})(),(function (){var G__331226 = cljs.core.PersistentArrayMap.EMPTY;
var G__331227 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The above claim that searching the tree can be performed in a logarithmic number of steps rests on the assumption that the tree is ",(function (){var G__331228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331229 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331228,G__331229) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331228,G__331229));
})()," i.e., that the left and right subtree of every tree have approximately the same number of elements, so that each subtree contains about half the elements of its parent. But how can we be certain that the trees we construct will be balanced? Even if we start with a balanced tree, adding elements with ",(function (){var G__331230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__331231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331230,G__331231) : tailrecursion.hoplon.markdown.code_node.call(null,G__331230,G__331231));
})()," may produce an unbalanced result. Since the position of a newly adjoined element depends on how the element compares with the items already in the set, we can expect that if we add elements ",(function (){var G__331232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331233 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["randomly"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331232,G__331233) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331232,G__331233));
})()," the tree will tend to be balanced on the average (note: in this example, the top level might not be balanced, but as we add more and more elements in this ",(function (){var G__331234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331235 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["random"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331234,G__331235) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331234,G__331235));
})()," fashion, we can safely assume that on the average, each level approximately halves the number of elements, even if it",(function (){var G__331236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__331237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__331236,G__331237) : tailrecursion.hoplon.markdown.simple_node.call(null,G__331236,G__331237));
})(),"s not true for the first level in particular). But this is not a guarantee. For example, if we start with an ampty set and adjoin the numbers 1 through 7 in a sequence we end up with the highly unbalanced tree shown in figure 2.17. In this tree all the left subtrees are empty, so it has no advantage over a simple ordered list. One way to solve this problem is to define an operation that transforms an arbitrary tree into a balanced tree with the same elements. Then we can perform this transformation after every few ",(function (){var G__331238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__331239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331238,G__331239) : tailrecursion.hoplon.markdown.code_node.call(null,G__331238,G__331239));
})()," operations to keep our set in balance. There are also other ways to solve this problem, most of which involve designing new data structures for which searching and insertion both can be done in \\(\\Theta(\\log n)\\) setps.",(function (){var G__331240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__331241 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Examples of such structures include ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B-trees"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["red-black trees"], null)], 0)),". There is a large literature on data structures devoted to this problem. See Cormen, Leiserson, and Rivest 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331240,G__331241) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331240,G__331241));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331226,G__331227) : tailrecursion.hoplon.markdown.para_node.call(null,G__331226,G__331227));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_330087;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_330086;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_330085;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_330084;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Unbalanced tree produced by adjoining 1 through 7 in sequence."], null)], 0))], 0));
var G__320075 = "";
var G__320076 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331242 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331243 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331244 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331245 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331246 = cljs.core.PersistentArrayMap.EMPTY;
var G__331247 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures converts a binary tree to a list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331246,G__331247) : tailrecursion.hoplon.markdown.para_node.call(null,G__331246,G__331247));
})(),(function (){var G__331418 = (function (){var G__331419 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331420 = (function (){var G__331421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331422 = "(";
var G__331423 = (function (){var G__331505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331506 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331505,G__331506) : tailrecursion.hoplon.span.call(null,G__331505,G__331506));
})();
var G__331424 = (function (){var G__331507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331508 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331507,G__331508) : tailrecursion.hoplon.span.call(null,G__331507,G__331508));
})();
var G__331425 = " [";
var G__331426 = (function (){var G__331509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331510 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331509,G__331510) : tailrecursion.hoplon.span.call(null,G__331509,G__331510));
})();
var G__331427 = "]\n  (";
var G__331428 = (function (){var G__331511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331512 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331511,G__331512) : tailrecursion.hoplon.span.call(null,G__331511,G__331512));
})();
var G__331429 = "(";
var G__331430 = (function (){var G__331513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331514 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331513,G__331514) : tailrecursion.hoplon.span.call(null,G__331513,G__331514));
})();
var G__331431 = " ";
var G__331432 = (function (){var G__331515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331516 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331515,G__331516) : tailrecursion.hoplon.span.call(null,G__331515,G__331516));
})();
var G__331433 = ")\n      ";
var G__331434 = (function (){var G__331517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331518 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331517,G__331518) : tailrecursion.hoplon.span.call(null,G__331517,G__331518));
})();
var G__331435 = "()\n      (";
var G__331436 = (function (){var G__331519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331520 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331519,G__331520) : tailrecursion.hoplon.span.call(null,G__331519,G__331520));
})();
var G__331437 = "(";
var G__331438 = (function (){var G__331521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331522 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331521,G__331522) : tailrecursion.hoplon.span.call(null,G__331521,G__331522));
})();
var G__331439 = " (";
var G__331440 = (function (){var G__331523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331524 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331523,G__331524) : tailrecursion.hoplon.span.call(null,G__331523,G__331524));
})();
var G__331441 = " ";
var G__331442 = (function (){var G__331525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331526 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331525,G__331526) : tailrecursion.hoplon.span.call(null,G__331525,G__331526));
})();
var G__331443 = "))\n              (";
var G__331444 = (function (){var G__331527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331528 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331527,G__331528) : tailrecursion.hoplon.span.call(null,G__331527,G__331528));
})();
var G__331445 = "(";
var G__331446 = (function (){var G__331529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331530 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331529,G__331530) : tailrecursion.hoplon.span.call(null,G__331529,G__331530));
})();
var G__331447 = " (";
var G__331448 = (function (){var G__331531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331532 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331531,G__331532) : tailrecursion.hoplon.span.call(null,G__331531,G__331532));
})();
var G__331449 = " ";
var G__331450 = (function (){var G__331533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331534 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331533,G__331534) : tailrecursion.hoplon.span.call(null,G__331533,G__331534));
})();
var G__331451 = "))\n                    (";
var G__331452 = (function (){var G__331535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331536 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331535,G__331536) : tailrecursion.hoplon.span.call(null,G__331535,G__331536));
})();
var G__331453 = " ";
var G__331454 = (function (){var G__331537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331538 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331537,G__331538) : tailrecursion.hoplon.span.call(null,G__331537,G__331538));
})();
var G__331455 = ")))))\n\n(";
var G__331456 = (function (){var G__331539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331540 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331539,G__331540) : tailrecursion.hoplon.span.call(null,G__331539,G__331540));
})();
var G__331457 = (function (){var G__331541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331542 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331541,G__331542) : tailrecursion.hoplon.span.call(null,G__331541,G__331542));
})();
var G__331458 = " [";
var G__331459 = (function (){var G__331543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331544 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331543,G__331544) : tailrecursion.hoplon.span.call(null,G__331543,G__331544));
})();
var G__331460 = "]\n  (";
var G__331461 = (function (){var G__331545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331546 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331545,G__331546) : tailrecursion.hoplon.span.call(null,G__331545,G__331546));
})();
var G__331462 = "[";
var G__331463 = (function (){var G__331547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331548 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331547,G__331548) : tailrecursion.hoplon.span.call(null,G__331547,G__331548));
})();
var G__331464 = " (";
var G__331465 = (function (){var G__331549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331550 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331549,G__331550) : tailrecursion.hoplon.span.call(null,G__331549,G__331550));
})();
var G__331466 = "[";
var G__331467 = (function (){var G__331551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331552 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331551,G__331552) : tailrecursion.hoplon.span.call(null,G__331551,G__331552));
})();
var G__331468 = " ";
var G__331469 = (function (){var G__331553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331554 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331553,G__331554) : tailrecursion.hoplon.span.call(null,G__331553,G__331554));
})();
var G__331470 = "]\n                       (";
var G__331471 = (function (){var G__331555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331556 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331555,G__331556) : tailrecursion.hoplon.span.call(null,G__331555,G__331556));
})();
var G__331472 = "(";
var G__331473 = (function (){var G__331557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331558 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331557,G__331558) : tailrecursion.hoplon.span.call(null,G__331557,G__331558));
})();
var G__331474 = " ";
var G__331475 = (function (){var G__331559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331560 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331559,G__331560) : tailrecursion.hoplon.span.call(null,G__331559,G__331560));
})();
var G__331476 = ")\n                           ";
var G__331477 = (function (){var G__331561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331562 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331561,G__331562) : tailrecursion.hoplon.span.call(null,G__331561,G__331562));
})();
var G__331478 = "\n                           (";
var G__331479 = (function (){var G__331563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331564 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331563,G__331564) : tailrecursion.hoplon.span.call(null,G__331563,G__331564));
})();
var G__331480 = " (";
var G__331481 = (function (){var G__331565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331566 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331565,G__331566) : tailrecursion.hoplon.span.call(null,G__331565,G__331566));
})();
var G__331482 = " ";
var G__331483 = (function (){var G__331567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331568 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331567,G__331568) : tailrecursion.hoplon.span.call(null,G__331567,G__331568));
})();
var G__331484 = ")\n                                         (";
var G__331485 = (function (){var G__331569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331570 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331569,G__331570) : tailrecursion.hoplon.span.call(null,G__331569,G__331570));
})();
var G__331486 = "(";
var G__331487 = (function (){var G__331571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331572 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331571,G__331572) : tailrecursion.hoplon.span.call(null,G__331571,G__331572));
})();
var G__331488 = " \n                                                 (";
var G__331489 = (function (){var G__331573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331574 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331573,G__331574) : tailrecursion.hoplon.span.call(null,G__331573,G__331574));
})();
var G__331490 = " ";
var G__331491 = (function (){var G__331575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331576 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331575,G__331576) : tailrecursion.hoplon.span.call(null,G__331575,G__331576));
})();
var G__331492 = ")\n                                                 ";
var G__331493 = (function (){var G__331577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331578 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331577,G__331578) : tailrecursion.hoplon.span.call(null,G__331577,G__331578));
})();
var G__331494 = ")\n                                               (";
var G__331495 = (function (){var G__331579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331580 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331579,G__331580) : tailrecursion.hoplon.span.call(null,G__331579,G__331580));
})();
var G__331496 = " ";
var G__331497 = (function (){var G__331581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331582 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331581,G__331582) : tailrecursion.hoplon.span.call(null,G__331581,G__331582));
})();
var G__331498 = ")))))]\n    (";
var G__331499 = (function (){var G__331583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331584 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331583,G__331584) : tailrecursion.hoplon.span.call(null,G__331583,G__331584));
})();
var G__331500 = " ";
var G__331501 = (function (){var G__331585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331586 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331585,G__331586) : tailrecursion.hoplon.span.call(null,G__331585,G__331586));
})();
var G__331502 = " ";
var G__331503 = (function (){var G__331587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331588 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331587,G__331588) : tailrecursion.hoplon.span.call(null,G__331587,G__331588));
})();
var G__331504 = "())))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$84 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$84(G__331421,G__331422,G__331423,G__331424,G__331425,G__331426,G__331427,G__331428,G__331429,G__331430,G__331431,G__331432,G__331433,G__331434,G__331435,G__331436,G__331437,G__331438,G__331439,G__331440,G__331441,G__331442,G__331443,G__331444,G__331445,G__331446,G__331447,G__331448,G__331449,G__331450,G__331451,G__331452,G__331453,G__331454,G__331455,G__331456,G__331457,G__331458,G__331459,G__331460,G__331461,G__331462,G__331463,G__331464,G__331465,G__331466,G__331467,G__331468,G__331469,G__331470,G__331471,G__331472,G__331473,G__331474,G__331475,G__331476,G__331477,G__331478,G__331479,G__331480,G__331481,G__331482,G__331483,G__331484,G__331485,G__331486,G__331487,G__331488,G__331489,G__331490,G__331491,G__331492,G__331493,G__331494,G__331495,G__331496,G__331497,G__331498,G__331499,G__331500,G__331501,G__331502,G__331503,G__331504) : tailrecursion.hoplon.pre.call(null,G__331421,G__331422,G__331423,G__331424,G__331425,G__331426,G__331427,G__331428,G__331429,G__331430,G__331431,G__331432,G__331433,G__331434,G__331435,G__331436,G__331437,G__331438,G__331439,G__331440,G__331441,G__331442,G__331443,G__331444,G__331445,G__331446,G__331447,G__331448,G__331449,G__331450,G__331451,G__331452,G__331453,G__331454,G__331455,G__331456,G__331457,G__331458,G__331459,G__331460,G__331461,G__331462,G__331463,G__331464,G__331465,G__331466,G__331467,G__331468,G__331469,G__331470,G__331471,G__331472,G__331473,G__331474,G__331475,G__331476,G__331477,G__331478,G__331479,G__331480,G__331481,G__331482,G__331483,G__331484,G__331485,G__331486,G__331487,G__331488,G__331489,G__331490,G__331491,G__331492,G__331493,G__331494,G__331495,G__331496,G__331497,G__331498,G__331499,G__331500,G__331501,G__331502,G__331503,G__331504));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331419,G__331420) : tailrecursion.hoplon.div.call(null,G__331419,G__331420));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331418) : tailrecursion.hoplon.div.call(null,G__331418));
})(),(function (){var G__331589 = cljs.core.PersistentArrayMap.EMPTY;
var G__331590 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Do the two procedures produce the same result for every tree? If not, how do the results differ? What lists do the two procedures produce for the trees in figure 2.16?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331589,G__331590) : tailrecursion.hoplon.markdown.para_node.call(null,G__331589,G__331590));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331245;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331244;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331243;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331242;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331591 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331592 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331593 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331594 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331595 = cljs.core.PersistentArrayMap.EMPTY;
var G__331596 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since both procedures put the ",(function (){var G__331597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"entry"], null);
var G__331598 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331597,G__331598) : tailrecursion.hoplon.markdown.code_node.call(null,G__331597,G__331598));
})()," in the middle of the ",(function (){var G__331599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331600 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["lesser"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331599,G__331600) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331599,G__331600));
})()," elements and the ",(function (){var G__331601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331602 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["greater"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331601,G__331602) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331601,G__331602));
})()," elements, we can be guaranteed that the elements of the tree will show up in the same order. It is for that reason we also know that each of the trees in figure 2.16 will give the same list with both procedures. Each of them turns this sort of tree into an ordered list, so the trees from figure 2.16 would turn into,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331595,G__331596) : tailrecursion.hoplon.markdown.para_node.call(null,G__331595,G__331596));
})(),(function (){var G__331634 = (function (){var G__331635 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331636 = (function (){var G__331637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331638 = (function (){var G__331652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331653 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331652,G__331653) : tailrecursion.hoplon.span.call(null,G__331652,G__331653));
})();
var G__331639 = " (";
var G__331640 = (function (){var G__331654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331655 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331654,G__331655) : tailrecursion.hoplon.span.call(null,G__331654,G__331655));
})();
var G__331641 = " ";
var G__331642 = (function (){var G__331656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331657 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331656,G__331657) : tailrecursion.hoplon.span.call(null,G__331656,G__331657));
})();
var G__331643 = " ";
var G__331644 = (function (){var G__331658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331659 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331658,G__331659) : tailrecursion.hoplon.span.call(null,G__331658,G__331659));
})();
var G__331645 = " ";
var G__331646 = (function (){var G__331660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331661 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331660,G__331661) : tailrecursion.hoplon.span.call(null,G__331660,G__331661));
})();
var G__331647 = " ";
var G__331648 = (function (){var G__331662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331663 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331662,G__331663) : tailrecursion.hoplon.span.call(null,G__331662,G__331663));
})();
var G__331649 = " ";
var G__331650 = (function (){var G__331664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331665 = "11";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331664,G__331665) : tailrecursion.hoplon.span.call(null,G__331664,G__331665));
})();
var G__331651 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__331637,G__331638,G__331639,G__331640,G__331641,G__331642,G__331643,G__331644,G__331645,G__331646,G__331647,G__331648,G__331649,G__331650,G__331651) : tailrecursion.hoplon.pre.call(null,G__331637,G__331638,G__331639,G__331640,G__331641,G__331642,G__331643,G__331644,G__331645,G__331646,G__331647,G__331648,G__331649,G__331650,G__331651));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331635,G__331636) : tailrecursion.hoplon.div.call(null,G__331635,G__331636));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331634) : tailrecursion.hoplon.div.call(null,G__331634));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331594;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331593;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331592;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331591;
}})()], 0)),"",(function (){var _STAR_references_STAR_331666 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331667 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331668 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331669 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331670 = cljs.core.PersistentArrayMap.EMPTY;
var G__331671 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. Do the two procedures have the same order of growth in the number of steps required to convert a balanced tree with \\(n\\) elements to a list? If not, which one grows more slowly?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331670,G__331671) : tailrecursion.hoplon.markdown.para_node.call(null,G__331670,G__331671));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331669;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331668;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331667;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331666;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331672 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331673 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331674 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331675 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331676 = cljs.core.PersistentArrayMap.EMPTY;
var G__331677 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since the ",(function (){var G__331678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331679 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331678,G__331679) : tailrecursion.hoplon.markdown.code_node.call(null,G__331678,G__331679));
})()," function is \\(\\Theta(n)\\) in terms of steps required and the length of the first list (the prepending one), we can see that ",(function (){var G__331680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-1"], null);
var G__331681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331680,G__331681) : tailrecursion.hoplon.markdown.code_node.call(null,G__331680,G__331681));
})()," is going to take more steps than ",(function (){var G__331682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__331683 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331682,G__331683) : tailrecursion.hoplon.markdown.code_node.call(null,G__331682,G__331683));
})(),". Exactly how many more, we can only estimate (it depends on how balanced the tree is)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331676,G__331677) : tailrecursion.hoplon.markdown.para_node.call(null,G__331676,G__331677));
})(),(function (){var G__331684 = cljs.core.PersistentArrayMap.EMPTY;
var G__331685 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we assume that the tree is balanced, then every level doubles the number of calls to ",(function (){var G__331686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331687 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331686,G__331687) : tailrecursion.hoplon.markdown.code_node.call(null,G__331686,G__331687));
})()," but halves the number of elements in each ",(function (){var G__331688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331689 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331688,G__331689) : tailrecursion.hoplon.markdown.code_node.call(null,G__331688,G__331689));
})(),". Hence the number of computations done in an ",(function (){var G__331690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331691 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331690,G__331691) : tailrecursion.hoplon.markdown.code_node.call(null,G__331690,G__331691));
})()," procedure remains constant at \\(n\\) (roughly) accross all levels. Since there are approximately \\(\\log n\\) levels, we can conclude that the calls to ",(function (){var G__331692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331693 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331692,G__331693) : tailrecursion.hoplon.markdown.code_node.call(null,G__331692,G__331693));
})()," take \\(\\theta(n\\log n)\\) steps. If we are to include the calls to ",(function (){var G__331694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331695 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331694,G__331695) : tailrecursion.hoplon.markdown.code_node.call(null,G__331694,G__331695));
})()," as well, we find (through similar reasoning), that the total number of steps should be approximately \\(\\Theta(n\\log n+n)=\\Theta(n\\log n)\\) steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331684,G__331685) : tailrecursion.hoplon.markdown.para_node.call(null,G__331684,G__331685));
})(),(function (){var G__331696 = cljs.core.PersistentArrayMap.EMPTY;
var G__331697 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second procedure, ",(function (){var G__331698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__331699 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331698,G__331699) : tailrecursion.hoplon.markdown.code_node.call(null,G__331698,G__331699));
})(),", however, uses ",(function (){var G__331700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331701 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331700,G__331701) : tailrecursion.hoplon.markdown.code_node.call(null,G__331700,G__331701));
})()," which is always constant time \\(\\Theta(1)\\) as the main building block, which really speeds things up for larger trees. As a matter of fact, if we notice that ",(function (){var G__331702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331703 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331702,G__331703) : tailrecursion.hoplon.markdown.code_node.call(null,G__331702,G__331703));
})()," is called approximately once per element, we find that the number of steps required is approximately \\(\\Theta(n)\\). So, to answer the question, ",(function (){var G__331704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__331705 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331704,G__331705) : tailrecursion.hoplon.markdown.code_node.call(null,G__331704,G__331705));
})()," grows more slowly (which is to say it is faster) than ",(function (){var G__331706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-1"], null);
var G__331707 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331706,G__331707) : tailrecursion.hoplon.markdown.code_node.call(null,G__331706,G__331707));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331696,G__331697) : tailrecursion.hoplon.markdown.para_node.call(null,G__331696,G__331697));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331675;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331674;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331673;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331672;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331708 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331709 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331710 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331711 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331712 = cljs.core.PersistentArrayMap.EMPTY;
var G__331713 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure ",(function (){var G__331714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__331715 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331714,G__331715) : tailrecursion.hoplon.markdown.code_node.call(null,G__331714,G__331715));
})()," converts an ordered list to a balanced binary tree. The helper procedure ",(function (){var G__331716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__331717 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331716,G__331717) : tailrecursion.hoplon.markdown.code_node.call(null,G__331716,G__331717));
})()," takes as arguments an integer \\(n\\) and list of at least \\(n\\) elements and constructs a balanced tree containing the first \\(n\\) elements of the list. The result returned by ",(function (){var G__331718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__331719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331718,G__331719) : tailrecursion.hoplon.markdown.code_node.call(null,G__331718,G__331719));
})()," is a pair (formed with ",(function (){var G__331720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331721 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331720,G__331721) : tailrecursion.hoplon.markdown.code_node.call(null,G__331720,G__331721));
})(),") whose ",(function (){var G__331722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__331723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331722,G__331723) : tailrecursion.hoplon.markdown.code_node.call(null,G__331722,G__331723));
})()," is the constructed tree and whose ",(function (){var G__331724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__331725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331724,G__331725) : tailrecursion.hoplon.markdown.code_node.call(null,G__331724,G__331725));
})()," is the list of elements not included in the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331712,G__331713) : tailrecursion.hoplon.markdown.para_node.call(null,G__331712,G__331713));
})(),(function (){var G__331760 = (function (){var G__331761 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331762 = (function (){var G__331763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331764 = "(";
var G__331765 = (function (){var G__331779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331780 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331779,G__331780) : tailrecursion.hoplon.span.call(null,G__331779,G__331780));
})();
var G__331766 = (function (){var G__331781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331782 = "list->tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331781,G__331782) : tailrecursion.hoplon.span.call(null,G__331781,G__331782));
})();
var G__331767 = " [";
var G__331768 = (function (){var G__331783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331784 = "elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331783,G__331784) : tailrecursion.hoplon.span.call(null,G__331783,G__331784));
})();
var G__331769 = "]\n  (";
var G__331770 = (function (){var G__331785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331786 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331785,G__331786) : tailrecursion.hoplon.span.call(null,G__331785,G__331786));
})();
var G__331771 = "(";
var G__331772 = (function (){var G__331787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331788 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331787,G__331788) : tailrecursion.hoplon.span.call(null,G__331787,G__331788));
})();
var G__331773 = " ";
var G__331774 = (function (){var G__331789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331790 = "elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331789,G__331790) : tailrecursion.hoplon.span.call(null,G__331789,G__331790));
})();
var G__331775 = " (";
var G__331776 = (function (){var G__331791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331792 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331791,G__331792) : tailrecursion.hoplon.span.call(null,G__331791,G__331792));
})();
var G__331777 = (function (){var G__331793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331794 = "elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331793,G__331794) : tailrecursion.hoplon.span.call(null,G__331793,G__331794));
})();
var G__331778 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__331763,G__331764,G__331765,G__331766,G__331767,G__331768,G__331769,G__331770,G__331771,G__331772,G__331773,G__331774,G__331775,G__331776,G__331777,G__331778) : tailrecursion.hoplon.pre.call(null,G__331763,G__331764,G__331765,G__331766,G__331767,G__331768,G__331769,G__331770,G__331771,G__331772,G__331773,G__331774,G__331775,G__331776,G__331777,G__331778));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331761,G__331762) : tailrecursion.hoplon.div.call(null,G__331761,G__331762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331760) : tailrecursion.hoplon.div.call(null,G__331760));
})(),(function (){var G__331795 = cljs.core.PersistentArrayMap.EMPTY;
var G__331796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331795,G__331796) : tailrecursion.hoplon.markdown.para_node.call(null,G__331795,G__331796));
})(),(function (){var G__331996 = (function (){var G__331997 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331998 = (function (){var G__331999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332000 = "(";
var G__332001 = (function (){var G__332092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332093 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332092,G__332093) : tailrecursion.hoplon.span.call(null,G__332092,G__332093));
})();
var G__332002 = (function (){var G__332094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332095 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332094,G__332095) : tailrecursion.hoplon.span.call(null,G__332094,G__332095));
})();
var G__332003 = " [";
var G__332004 = (function (){var G__332096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332097 = "elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332096,G__332097) : tailrecursion.hoplon.span.call(null,G__332096,G__332097));
})();
var G__332005 = " ";
var G__332006 = (function (){var G__332098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332099 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332098,G__332099) : tailrecursion.hoplon.span.call(null,G__332098,G__332099));
})();
var G__332007 = "]\n  (";
var G__332008 = (function (){var G__332100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332101 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332100,G__332101) : tailrecursion.hoplon.span.call(null,G__332100,G__332101));
})();
var G__332009 = "(";
var G__332010 = (function (){var G__332102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332103 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332102,G__332103) : tailrecursion.hoplon.span.call(null,G__332102,G__332103));
})();
var G__332011 = (function (){var G__332104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332105 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332104,G__332105) : tailrecursion.hoplon.span.call(null,G__332104,G__332105));
})();
var G__332012 = " ";
var G__332013 = (function (){var G__332106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__332107 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332106,G__332107) : tailrecursion.hoplon.span.call(null,G__332106,G__332107));
})();
var G__332014 = ")\n      (";
var G__332015 = (function (){var G__332108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332109 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332108,G__332109) : tailrecursion.hoplon.span.call(null,G__332108,G__332109));
})();
var G__332016 = (function (){var G__332110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332111 = "elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332110,G__332111) : tailrecursion.hoplon.span.call(null,G__332110,G__332111));
})();
var G__332017 = " ";
var G__332018 = (function (){var G__332112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__332113 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332112,G__332113) : tailrecursion.hoplon.span.call(null,G__332112,G__332113));
})();
var G__332019 = "())\n      (";
var G__332020 = (function (){var G__332114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332115 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332114,G__332115) : tailrecursion.hoplon.span.call(null,G__332114,G__332115));
})();
var G__332021 = "[";
var G__332022 = (function (){var G__332116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332117 = "left-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332116,G__332117) : tailrecursion.hoplon.span.call(null,G__332116,G__332117));
})();
var G__332023 = "      (";
var G__332024 = (function (){var G__332118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332119 = "quotient";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332118,G__332119) : tailrecursion.hoplon.span.call(null,G__332118,G__332119));
})();
var G__332025 = " (";
var G__332026 = (function (){var G__332120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332121 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332120,G__332121) : tailrecursion.hoplon.span.call(null,G__332120,G__332121));
})();
var G__332027 = (function (){var G__332122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332123 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332122,G__332123) : tailrecursion.hoplon.span.call(null,G__332122,G__332123));
})();
var G__332028 = ") ";
var G__332029 = (function (){var G__332124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__332125 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332124,G__332125) : tailrecursion.hoplon.span.call(null,G__332124,G__332125));
})();
var G__332030 = ")\n            ";
var G__332031 = (function (){var G__332126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332127 = "left-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332126,G__332127) : tailrecursion.hoplon.span.call(null,G__332126,G__332127));
})();
var G__332032 = "    (";
var G__332033 = (function (){var G__332128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332129 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332128,G__332129) : tailrecursion.hoplon.span.call(null,G__332128,G__332129));
})();
var G__332034 = " ";
var G__332035 = (function (){var G__332130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332131 = "elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332130,G__332131) : tailrecursion.hoplon.span.call(null,G__332130,G__332131));
})();
var G__332036 = " ";
var G__332037 = (function (){var G__332132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332133 = "left-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332132,G__332133) : tailrecursion.hoplon.span.call(null,G__332132,G__332133));
})();
var G__332038 = ")\n            ";
var G__332039 = (function (){var G__332134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332135 = "left-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332134,G__332135) : tailrecursion.hoplon.span.call(null,G__332134,G__332135));
})();
var G__332040 = "      (";
var G__332041 = (function (){var G__332136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332137 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332136,G__332137) : tailrecursion.hoplon.span.call(null,G__332136,G__332137));
})();
var G__332042 = (function (){var G__332138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332139 = "left-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332138,G__332139) : tailrecursion.hoplon.span.call(null,G__332138,G__332139));
})();
var G__332043 = ")\n            ";
var G__332044 = (function (){var G__332140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332141 = "non-left-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332140,G__332141) : tailrecursion.hoplon.span.call(null,G__332140,G__332141));
})();
var G__332045 = "  (";
var G__332046 = (function (){var G__332142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332143 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332142,G__332143) : tailrecursion.hoplon.span.call(null,G__332142,G__332143));
})();
var G__332047 = (function (){var G__332144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332145 = "left-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332144,G__332145) : tailrecursion.hoplon.span.call(null,G__332144,G__332145));
})();
var G__332048 = ")\n            ";
var G__332049 = (function (){var G__332146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332147 = "right-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332146,G__332147) : tailrecursion.hoplon.span.call(null,G__332146,G__332147));
})();
var G__332050 = "     (";
var G__332051 = (function (){var G__332148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332149 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332148,G__332149) : tailrecursion.hoplon.span.call(null,G__332148,G__332149));
})();
var G__332052 = (function (){var G__332150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332151 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332150,G__332151) : tailrecursion.hoplon.span.call(null,G__332150,G__332151));
})();
var G__332053 = " (";
var G__332054 = (function (){var G__332152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332153 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332152,G__332153) : tailrecursion.hoplon.span.call(null,G__332152,G__332153));
})();
var G__332055 = (function (){var G__332154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332155 = "left-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332154,G__332155) : tailrecursion.hoplon.span.call(null,G__332154,G__332155));
})();
var G__332056 = "))\n            ";
var G__332057 = (function (){var G__332156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332157 = "this-entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332156,G__332157) : tailrecursion.hoplon.span.call(null,G__332156,G__332157));
})();
var G__332058 = "     (";
var G__332059 = (function (){var G__332158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332159 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332158,G__332159) : tailrecursion.hoplon.span.call(null,G__332158,G__332159));
})();
var G__332060 = (function (){var G__332160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332161 = "non-left-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332160,G__332161) : tailrecursion.hoplon.span.call(null,G__332160,G__332161));
})();
var G__332061 = ")\n            ";
var G__332062 = (function (){var G__332162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332163 = "right-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332162,G__332163) : tailrecursion.hoplon.span.call(null,G__332162,G__332163));
})();
var G__332063 = "   (";
var G__332064 = (function (){var G__332164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332165 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332164,G__332165) : tailrecursion.hoplon.span.call(null,G__332164,G__332165));
})();
var G__332065 = " (";
var G__332066 = (function (){var G__332166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332167 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332166,G__332167) : tailrecursion.hoplon.span.call(null,G__332166,G__332167));
})();
var G__332067 = (function (){var G__332168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332169 = "non-left-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332168,G__332169) : tailrecursion.hoplon.span.call(null,G__332168,G__332169));
})();
var G__332068 = ") ";
var G__332069 = (function (){var G__332170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332171 = "right-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332170,G__332171) : tailrecursion.hoplon.span.call(null,G__332170,G__332171));
})();
var G__332070 = ")\n            ";
var G__332071 = (function (){var G__332172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332173 = "right-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332172,G__332173) : tailrecursion.hoplon.span.call(null,G__332172,G__332173));
})();
var G__332072 = "     (";
var G__332073 = (function (){var G__332174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332175 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332174,G__332175) : tailrecursion.hoplon.span.call(null,G__332174,G__332175));
})();
var G__332074 = (function (){var G__332176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332177 = "right-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332176,G__332177) : tailrecursion.hoplon.span.call(null,G__332176,G__332177));
})();
var G__332075 = ")\n            ";
var G__332076 = (function (){var G__332178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332179 = "remaining-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332178,G__332179) : tailrecursion.hoplon.span.call(null,G__332178,G__332179));
})();
var G__332077 = " (";
var G__332078 = (function (){var G__332180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332181 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332180,G__332181) : tailrecursion.hoplon.span.call(null,G__332180,G__332181));
})();
var G__332079 = (function (){var G__332182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332183 = "right-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332182,G__332183) : tailrecursion.hoplon.span.call(null,G__332182,G__332183));
})();
var G__332080 = ")]\n        (";
var G__332081 = (function (){var G__332184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332185 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332184,G__332185) : tailrecursion.hoplon.span.call(null,G__332184,G__332185));
})();
var G__332082 = (function (){var G__332186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332187 = "remaining-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332186,G__332187) : tailrecursion.hoplon.span.call(null,G__332186,G__332187));
})();
var G__332083 = " (";
var G__332084 = (function (){var G__332188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332189 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332188,G__332189) : tailrecursion.hoplon.span.call(null,G__332188,G__332189));
})();
var G__332085 = " ";
var G__332086 = (function (){var G__332190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332191 = "this-entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332190,G__332191) : tailrecursion.hoplon.span.call(null,G__332190,G__332191));
})();
var G__332087 = " ";
var G__332088 = (function (){var G__332192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332193 = "left-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332192,G__332193) : tailrecursion.hoplon.span.call(null,G__332192,G__332193));
})();
var G__332089 = " ";
var G__332090 = (function (){var G__332194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332195 = "right-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332194,G__332195) : tailrecursion.hoplon.span.call(null,G__332194,G__332195));
})();
var G__332091 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$93 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$93(G__331999,G__332000,G__332001,G__332002,G__332003,G__332004,G__332005,G__332006,G__332007,G__332008,G__332009,G__332010,G__332011,G__332012,G__332013,G__332014,G__332015,G__332016,G__332017,G__332018,G__332019,G__332020,G__332021,G__332022,G__332023,G__332024,G__332025,G__332026,G__332027,G__332028,G__332029,G__332030,G__332031,G__332032,G__332033,G__332034,G__332035,G__332036,G__332037,G__332038,G__332039,G__332040,G__332041,G__332042,G__332043,G__332044,G__332045,G__332046,G__332047,G__332048,G__332049,G__332050,G__332051,G__332052,G__332053,G__332054,G__332055,G__332056,G__332057,G__332058,G__332059,G__332060,G__332061,G__332062,G__332063,G__332064,G__332065,G__332066,G__332067,G__332068,G__332069,G__332070,G__332071,G__332072,G__332073,G__332074,G__332075,G__332076,G__332077,G__332078,G__332079,G__332080,G__332081,G__332082,G__332083,G__332084,G__332085,G__332086,G__332087,G__332088,G__332089,G__332090,G__332091) : tailrecursion.hoplon.pre.call(null,G__331999,G__332000,G__332001,G__332002,G__332003,G__332004,G__332005,G__332006,G__332007,G__332008,G__332009,G__332010,G__332011,G__332012,G__332013,G__332014,G__332015,G__332016,G__332017,G__332018,G__332019,G__332020,G__332021,G__332022,G__332023,G__332024,G__332025,G__332026,G__332027,G__332028,G__332029,G__332030,G__332031,G__332032,G__332033,G__332034,G__332035,G__332036,G__332037,G__332038,G__332039,G__332040,G__332041,G__332042,G__332043,G__332044,G__332045,G__332046,G__332047,G__332048,G__332049,G__332050,G__332051,G__332052,G__332053,G__332054,G__332055,G__332056,G__332057,G__332058,G__332059,G__332060,G__332061,G__332062,G__332063,G__332064,G__332065,G__332066,G__332067,G__332068,G__332069,G__332070,G__332071,G__332072,G__332073,G__332074,G__332075,G__332076,G__332077,G__332078,G__332079,G__332080,G__332081,G__332082,G__332083,G__332084,G__332085,G__332086,G__332087,G__332088,G__332089,G__332090,G__332091));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331997,G__331998) : tailrecursion.hoplon.div.call(null,G__331997,G__331998));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331996) : tailrecursion.hoplon.div.call(null,G__331996));
})(),(function (){var G__332196 = cljs.core.PersistentArrayMap.EMPTY;
var G__332197 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and we can define ",(function (){var G__332198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"quotient"], null);
var G__332199 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332198,G__332199) : tailrecursion.hoplon.markdown.code_node.call(null,G__332198,G__332199));
})()," as,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332196,G__332197) : tailrecursion.hoplon.markdown.para_node.call(null,G__332196,G__332197));
})(),(function (){var G__332246 = (function (){var G__332247 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332248 = (function (){var G__332249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332250 = "(";
var G__332251 = (function (){var G__332271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332272 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332271,G__332272) : tailrecursion.hoplon.span.call(null,G__332271,G__332272));
})();
var G__332252 = (function (){var G__332273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332274 = "quotient";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332273,G__332274) : tailrecursion.hoplon.span.call(null,G__332273,G__332274));
})();
var G__332253 = " [";
var G__332254 = (function (){var G__332275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332276 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332275,G__332276) : tailrecursion.hoplon.span.call(null,G__332275,G__332276));
})();
var G__332255 = " ";
var G__332256 = (function (){var G__332277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332278 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332277,G__332278) : tailrecursion.hoplon.span.call(null,G__332277,G__332278));
})();
var G__332257 = "]\n  (";
var G__332258 = (function (){var G__332279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332280 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332279,G__332280) : tailrecursion.hoplon.span.call(null,G__332279,G__332280));
})();
var G__332259 = "(";
var G__332260 = (function (){var G__332281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332282 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332281,G__332282) : tailrecursion.hoplon.span.call(null,G__332281,G__332282));
})();
var G__332261 = (function (){var G__332283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332284 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332283,G__332284) : tailrecursion.hoplon.span.call(null,G__332283,G__332284));
})();
var G__332262 = " (";
var G__332263 = (function (){var G__332285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332286 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332285,G__332286) : tailrecursion.hoplon.span.call(null,G__332285,G__332286));
})();
var G__332264 = " ";
var G__332265 = (function (){var G__332287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332288 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332287,G__332288) : tailrecursion.hoplon.span.call(null,G__332287,G__332288));
})();
var G__332266 = " ";
var G__332267 = (function (){var G__332289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332290 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332289,G__332290) : tailrecursion.hoplon.span.call(null,G__332289,G__332290));
})();
var G__332268 = ")) ";
var G__332269 = (function (){var G__332291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332292 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332291,G__332292) : tailrecursion.hoplon.span.call(null,G__332291,G__332292));
})();
var G__332270 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__332249,G__332250,G__332251,G__332252,G__332253,G__332254,G__332255,G__332256,G__332257,G__332258,G__332259,G__332260,G__332261,G__332262,G__332263,G__332264,G__332265,G__332266,G__332267,G__332268,G__332269,G__332270) : tailrecursion.hoplon.pre.call(null,G__332249,G__332250,G__332251,G__332252,G__332253,G__332254,G__332255,G__332256,G__332257,G__332258,G__332259,G__332260,G__332261,G__332262,G__332263,G__332264,G__332265,G__332266,G__332267,G__332268,G__332269,G__332270));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332247,G__332248) : tailrecursion.hoplon.div.call(null,G__332247,G__332248));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332246) : tailrecursion.hoplon.div.call(null,G__332246));
})(),(function (){var G__332293 = cljs.core.PersistentArrayMap.EMPTY;
var G__332294 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Write a short paragraph explaining as clearly as you can how ",(function (){var G__332295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332296 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332295,G__332296) : tailrecursion.hoplon.markdown.code_node.call(null,G__332295,G__332296));
})()," works. Draw the tree produced by ",(function (){var G__332297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__332298 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332297,G__332298) : tailrecursion.hoplon.markdown.code_node.call(null,G__332297,G__332298));
})()," for the list ",(function (){var G__332299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(1 3 5 7 9 11)"], null);
var G__332300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332299,G__332300) : tailrecursion.hoplon.markdown.code_node.call(null,G__332299,G__332300));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332293,G__332294) : tailrecursion.hoplon.markdown.para_node.call(null,G__332293,G__332294));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331711;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331710;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331709;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331708;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332301 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332302 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332303 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332304 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332305 = cljs.core.PersistentArrayMap.EMPTY;
var G__332306 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For each \\(n\\), ",(function (){var G__332307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(partial-tree elts n)"], null);
var G__332308 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332307,G__332308) : tailrecursion.hoplon.markdown.code_node.call(null,G__332307,G__332308));
})()," breaks the tree into a list where the first element is a tree of the first \\(n\\) elements, and the rest of the list is the rest of the elements (after the first \\(n\\) are taken out). So in a sense, ",(function (){var G__332309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(partial-tree elts n)"], null);
var G__332310 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332309,G__332310) : tailrecursion.hoplon.markdown.code_node.call(null,G__332309,G__332310));
})()," is like ",(function (){var G__332311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (drop n elts)\ntree-made-from-first-n-elts)"], null);
var G__332312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332311,G__332312) : tailrecursion.hoplon.markdown.code_node.call(null,G__332311,G__332312));
})(),". So, if we define ",(function (){var G__332313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__332314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332313,G__332314) : tailrecursion.hoplon.markdown.code_node.call(null,G__332313,G__332314));
})()," as ",(function (){var G__332315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(count\nelts)"], null);
var G__332316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332315,G__332316) : tailrecursion.hoplon.markdown.code_node.call(null,G__332315,G__332316));
})()," and ",(function (){var G__332317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m"], null);
var G__332318 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332317,G__332318) : tailrecursion.hoplon.markdown.code_node.call(null,G__332317,G__332318));
})()," as ",(function (){var G__332319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quotient (dec n) 2)"], null);
var G__332320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332319,G__332320) : tailrecursion.hoplon.markdown.code_node.call(null,G__332319,G__332320));
})(),", then ",(function (){var G__332321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(partial-tree elts\nm)"], null);
var G__332322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332321,G__332322) : tailrecursion.hoplon.markdown.code_node.call(null,G__332321,G__332322));
})()," would be a list where the first element is a tree made from the first \\(m\\) elements, and the rest of the tree is ",(function (){var G__332323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(drop m elts)"], null);
var G__332324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332323,G__332324) : tailrecursion.hoplon.markdown.code_node.call(null,G__332323,G__332324));
})()," (a list of the remaining elements)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332305,G__332306) : tailrecursion.hoplon.markdown.para_node.call(null,G__332305,G__332306));
})(),(function (){var G__332325 = cljs.core.PersistentArrayMap.EMPTY;
var G__332326 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In our procedure we make use of this fact by using the same procedure again on the remaining elements (hence making the right branch of the tree)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332325,G__332326) : tailrecursion.hoplon.markdown.para_node.call(null,G__332325,G__332326));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332304;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332303;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332302;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332301;
}})()], 0)),"",(function (){var _STAR_references_STAR_332327 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332328 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332331 = cljs.core.PersistentArrayMap.EMPTY;
var G__332332 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in the number of steps required by ",(function (){var G__332333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__332334 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332333,G__332334) : tailrecursion.hoplon.markdown.code_node.call(null,G__332333,G__332334));
})()," to convert a list of \\(n\\) elements?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332331,G__332332) : tailrecursion.hoplon.markdown.para_node.call(null,G__332331,G__332332));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332329;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332328;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332327;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332335 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332336 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332337 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332338 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332339 = cljs.core.PersistentArrayMap.EMPTY;
var G__332340 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ",(function (){var G__332341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332341,G__332342) : tailrecursion.hoplon.markdown.code_node.call(null,G__332341,G__332342));
})()," uses only the most efficient list opperations (like ",(function (){var G__332343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__332344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332343,G__332344) : tailrecursion.hoplon.markdown.code_node.call(null,G__332343,G__332344));
})(),", ",(function (){var G__332345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__332346 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332345,G__332346) : tailrecursion.hoplon.markdown.code_node.call(null,G__332345,G__332346));
})(),", etc.) which are all constant time, if we temporarily exclude the recursive calls, ",(function (){var G__332347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332348 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332347,G__332348) : tailrecursion.hoplon.markdown.code_node.call(null,G__332347,G__332348));
})()," is a constant time procedure. Now let",(function (){var G__332349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__332350 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__332349,G__332350) : tailrecursion.hoplon.markdown.simple_node.call(null,G__332349,G__332350));
})(),"s compute how the recursive calls affect the order of growth. Note that ",(function (){var G__332351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332351,G__332352) : tailrecursion.hoplon.markdown.code_node.call(null,G__332351,G__332352));
})()," is called once per element of the list and once or twice for each leaf."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332339,G__332340) : tailrecursion.hoplon.markdown.para_node.call(null,G__332339,G__332340));
})(),(function (){var G__332353 = cljs.core.PersistentArrayMap.EMPTY;
var G__332354 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, the ",(function (){var G__332355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__332356 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332355,G__332356) : tailrecursion.hoplon.markdown.code_node.call(null,G__332355,G__332356));
})()," procedure, which uses ",(function (){var G__332357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count"], null);
var G__332358 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332357,G__332358) : tailrecursion.hoplon.markdown.code_node.call(null,G__332357,G__332358));
})()," (a \\(\\Theta(n)\\) procedure), would be about \\(\\Theta(2n+number-of-leaves)\\) which is \\(\\Theta(n)\\). So the procedure should have a growth rate of \\(\\Theta(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332353,G__332354) : tailrecursion.hoplon.markdown.para_node.call(null,G__332353,G__332354));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332338;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332337;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332336;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332335;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332359 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332360 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332361 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332362 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332363 = cljs.core.PersistentArrayMap.EMPTY;
var G__332364 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the results of exercises 2.63 and 2.64 to give \\(\\Theta(n)\\) implementations of ",(function (){var G__332365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"unioin-set"], null);
var G__332366 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332365,G__332366) : tailrecursion.hoplon.markdown.code_node.call(null,G__332365,G__332366));
})()," and ",(function (){var G__332367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__332368 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332367,G__332368) : tailrecursion.hoplon.markdown.code_node.call(null,G__332367,G__332368));
})()," for sets implemented as (balanced) binary trees.",(function (){var G__332369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__332370 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercises 2.63-2.65 are due to Paul Hilfinger."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__332369,G__332370) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__332369,G__332370));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332363,G__332364) : tailrecursion.hoplon.markdown.para_node.call(null,G__332363,G__332364));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332362;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332361;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332360;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332359;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332371 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332372 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332373 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332374 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332375 = cljs.core.PersistentArrayMap.EMPTY;
var G__332376 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the ",(function (){var G__332377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__332378 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332377,G__332378) : tailrecursion.hoplon.markdown.code_node.call(null,G__332377,G__332378));
})()," and ",(function (){var G__332379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"unioin-set"], null);
var G__332380 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332379,G__332380) : tailrecursion.hoplon.markdown.code_node.call(null,G__332379,G__332380));
})()," procedures developed for sets as ordered lists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332375,G__332376) : tailrecursion.hoplon.markdown.para_node.call(null,G__332375,G__332376));
})(),(function (){var G__332424 = (function (){var G__332425 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332426 = (function (){var G__332427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332428 = "(";
var G__332429 = (function (){var G__332448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332449 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332448,G__332449) : tailrecursion.hoplon.span.call(null,G__332448,G__332449));
})();
var G__332430 = (function (){var G__332450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332451 = "union-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332450,G__332451) : tailrecursion.hoplon.span.call(null,G__332450,G__332451));
})();
var G__332431 = " [";
var G__332432 = (function (){var G__332452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332453 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332452,G__332453) : tailrecursion.hoplon.span.call(null,G__332452,G__332453));
})();
var G__332433 = " ";
var G__332434 = (function (){var G__332454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332455 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332454,G__332455) : tailrecursion.hoplon.span.call(null,G__332454,G__332455));
})();
var G__332435 = "]\n  (";
var G__332436 = (function (){var G__332456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332457 = "list->tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332456,G__332457) : tailrecursion.hoplon.span.call(null,G__332456,G__332457));
})();
var G__332437 = "\n    (";
var G__332438 = (function (){var G__332458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332459 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332458,G__332459) : tailrecursion.hoplon.span.call(null,G__332458,G__332459));
})();
var G__332439 = " (";
var G__332440 = (function (){var G__332460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332461 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332460,G__332461) : tailrecursion.hoplon.span.call(null,G__332460,G__332461));
})();
var G__332441 = " ";
var G__332442 = (function (){var G__332462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332463 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332462,G__332463) : tailrecursion.hoplon.span.call(null,G__332462,G__332463));
})();
var G__332443 = ")\n               (";
var G__332444 = (function (){var G__332464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332465 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332464,G__332465) : tailrecursion.hoplon.span.call(null,G__332464,G__332465));
})();
var G__332445 = " ";
var G__332446 = (function (){var G__332466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332467 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332466,G__332467) : tailrecursion.hoplon.span.call(null,G__332466,G__332467));
})();
var G__332447 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__332427,G__332428,G__332429,G__332430,G__332431,G__332432,G__332433,G__332434,G__332435,G__332436,G__332437,G__332438,G__332439,G__332440,G__332441,G__332442,G__332443,G__332444,G__332445,G__332446,G__332447) : tailrecursion.hoplon.pre.call(null,G__332427,G__332428,G__332429,G__332430,G__332431,G__332432,G__332433,G__332434,G__332435,G__332436,G__332437,G__332438,G__332439,G__332440,G__332441,G__332442,G__332443,G__332444,G__332445,G__332446,G__332447));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332425,G__332426) : tailrecursion.hoplon.div.call(null,G__332425,G__332426));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332424) : tailrecursion.hoplon.div.call(null,G__332424));
})(),(function (){var G__332468 = cljs.core.PersistentArrayMap.EMPTY;
var G__332469 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And similarly,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332468,G__332469) : tailrecursion.hoplon.markdown.para_node.call(null,G__332468,G__332469));
})(),(function (){var G__332513 = (function (){var G__332514 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332515 = (function (){var G__332516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332517 = "(";
var G__332518 = (function (){var G__332537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332538 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332537,G__332538) : tailrecursion.hoplon.span.call(null,G__332537,G__332538));
})();
var G__332519 = (function (){var G__332539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332540 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332539,G__332540) : tailrecursion.hoplon.span.call(null,G__332539,G__332540));
})();
var G__332520 = " [";
var G__332521 = (function (){var G__332541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332542 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332541,G__332542) : tailrecursion.hoplon.span.call(null,G__332541,G__332542));
})();
var G__332522 = " ";
var G__332523 = (function (){var G__332543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332544 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332543,G__332544) : tailrecursion.hoplon.span.call(null,G__332543,G__332544));
})();
var G__332524 = "]\n  (";
var G__332525 = (function (){var G__332545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332546 = "list->tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332545,G__332546) : tailrecursion.hoplon.span.call(null,G__332545,G__332546));
})();
var G__332526 = "\n    (";
var G__332527 = (function (){var G__332547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332548 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332547,G__332548) : tailrecursion.hoplon.span.call(null,G__332547,G__332548));
})();
var G__332528 = " (";
var G__332529 = (function (){var G__332549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332550 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332549,G__332550) : tailrecursion.hoplon.span.call(null,G__332549,G__332550));
})();
var G__332530 = " ";
var G__332531 = (function (){var G__332551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332552 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332551,G__332552) : tailrecursion.hoplon.span.call(null,G__332551,G__332552));
})();
var G__332532 = ")\n                      (";
var G__332533 = (function (){var G__332553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332554 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332553,G__332554) : tailrecursion.hoplon.span.call(null,G__332553,G__332554));
})();
var G__332534 = " ";
var G__332535 = (function (){var G__332555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332556 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332555,G__332556) : tailrecursion.hoplon.span.call(null,G__332555,G__332556));
})();
var G__332536 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__332516,G__332517,G__332518,G__332519,G__332520,G__332521,G__332522,G__332523,G__332524,G__332525,G__332526,G__332527,G__332528,G__332529,G__332530,G__332531,G__332532,G__332533,G__332534,G__332535,G__332536) : tailrecursion.hoplon.pre.call(null,G__332516,G__332517,G__332518,G__332519,G__332520,G__332521,G__332522,G__332523,G__332524,G__332525,G__332526,G__332527,G__332528,G__332529,G__332530,G__332531,G__332532,G__332533,G__332534,G__332535,G__332536));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332514,G__332515) : tailrecursion.hoplon.div.call(null,G__332514,G__332515));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332513) : tailrecursion.hoplon.div.call(null,G__332513));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332374;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332373;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332372;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332371;
}})()], 0))], 0))], 0));
var G__320077 = "";
var G__320078 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets and Information Retrieval"], null),(function (){var _STAR_references_STAR_332557 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332558 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332559 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332560 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332561 = cljs.core.PersistentArrayMap.EMPTY;
var G__332562 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have examined options for using lists to represent sets and have seen how the choice of representation for a data object can have a large impact on the performance of the programs that use the data. Another reason for concentrating on sets is that the techniques discussed here appear again and again in applications involving information retrieval."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332561,G__332562) : tailrecursion.hoplon.markdown.para_node.call(null,G__332561,G__332562));
})(),(function (){var G__332563 = cljs.core.PersistentArrayMap.EMPTY;
var G__332564 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider a data base containing a large number of individual records, such as the personnel files for a company or the transactions in an accounting system. A typical data-management system spends a large amount of time accessing or modifying the data in the records and therefore requires an efficient method for accessing records. This is done by identifying a part of each record to serve as an identifying ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["key"], null)], 0)),". A key can be anything that uniquely identifies the record. For a personnel file, it might be an employee",(function (){var G__332565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__332566 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__332565,G__332566) : tailrecursion.hoplon.markdown.simple_node.call(null,G__332565,G__332566));
})(),"s ID number. For an accounting system, it might be a transaction number. Whatever the key is, when we define the record as a data structure we should include a key selector procedure that retrieves the key associated with a given record."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332563,G__332564) : tailrecursion.hoplon.markdown.para_node.call(null,G__332563,G__332564));
})(),(function (){var G__332567 = cljs.core.PersistentArrayMap.EMPTY;
var G__332568 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we represent the data base as a set of records. To locate the record with a given key we use a procedure ",(function (){var G__332569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lookup"], null);
var G__332570 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332569,G__332570) : tailrecursion.hoplon.markdown.code_node.call(null,G__332569,G__332570));
})(),", which takes as arguments a key and a data base and which returns the record that has that key, or ",(function (){var G__332571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__332572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332571,G__332572) : tailrecursion.hoplon.markdown.code_node.call(null,G__332571,G__332572));
})()," if there is no such record. ",(function (){var G__332573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Lookup"], null);
var G__332574 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332573,G__332574) : tailrecursion.hoplon.markdown.code_node.call(null,G__332573,G__332574));
})()," is implemented in almost the same way as ",(function (){var G__332575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__332576 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332575,G__332576) : tailrecursion.hoplon.markdown.code_node.call(null,G__332575,G__332576));
})(),". For example, if the set of records is implemented as an unordered list, we could use"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332567,G__332568) : tailrecursion.hoplon.markdown.para_node.call(null,G__332567,G__332568));
})(),(function (){var G__332664 = (function (){var G__332665 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332666 = (function (){var G__332667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332668 = "(";
var G__332669 = (function (){var G__332708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332709 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332708,G__332709) : tailrecursion.hoplon.span.call(null,G__332708,G__332709));
})();
var G__332670 = (function (){var G__332710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332711 = "lookup";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332710,G__332711) : tailrecursion.hoplon.span.call(null,G__332710,G__332711));
})();
var G__332671 = " [";
var G__332672 = (function (){var G__332712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332713 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332712,G__332713) : tailrecursion.hoplon.span.call(null,G__332712,G__332713));
})();
var G__332673 = " ";
var G__332674 = (function (){var G__332714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332715 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332714,G__332715) : tailrecursion.hoplon.span.call(null,G__332714,G__332715));
})();
var G__332675 = "]\n  (";
var G__332676 = (function (){var G__332716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332717 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332716,G__332717) : tailrecursion.hoplon.span.call(null,G__332716,G__332717));
})();
var G__332677 = "[";
var G__332678 = (function (){var G__332718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332719 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332718,G__332719) : tailrecursion.hoplon.span.call(null,G__332718,G__332719));
})();
var G__332679 = " ";
var G__332680 = (function (){var G__332720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332721 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332720,G__332721) : tailrecursion.hoplon.span.call(null,G__332720,G__332721));
})();
var G__332681 = "]\n    (";
var G__332682 = (function (){var G__332722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332723 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332722,G__332723) : tailrecursion.hoplon.span.call(null,G__332722,G__332723));
})();
var G__332683 = "(";
var G__332684 = (function (){var G__332724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332725 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332724,G__332725) : tailrecursion.hoplon.span.call(null,G__332724,G__332725));
})();
var G__332685 = " ";
var G__332686 = (function (){var G__332726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332727 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332726,G__332727) : tailrecursion.hoplon.span.call(null,G__332726,G__332727));
})();
var G__332687 = ") ";
var G__332688 = (function (){var G__332728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332729 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332728,G__332729) : tailrecursion.hoplon.span.call(null,G__332728,G__332729));
})();
var G__332689 = "\n          (";
var G__332690 = (function (){var G__332730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332731 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332730,G__332731) : tailrecursion.hoplon.span.call(null,G__332730,G__332731));
})();
var G__332691 = (function (){var G__332732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332733 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332732,G__332733) : tailrecursion.hoplon.span.call(null,G__332732,G__332733));
})();
var G__332692 = " (";
var G__332693 = (function (){var G__332734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332735 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332734,G__332735) : tailrecursion.hoplon.span.call(null,G__332734,G__332735));
})();
var G__332694 = "(";
var G__332695 = (function (){var G__332736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332737 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332736,G__332737) : tailrecursion.hoplon.span.call(null,G__332736,G__332737));
})();
var G__332696 = (function (){var G__332738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332739 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332738,G__332739) : tailrecursion.hoplon.span.call(null,G__332738,G__332739));
})();
var G__332697 = "))) (";
var G__332698 = (function (){var G__332740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332741 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332740,G__332741) : tailrecursion.hoplon.span.call(null,G__332740,G__332741));
})();
var G__332699 = (function (){var G__332742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332743 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332742,G__332743) : tailrecursion.hoplon.span.call(null,G__332742,G__332743));
})();
var G__332700 = ")\n          ";
var G__332701 = (function (){var G__332744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332745 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332744,G__332745) : tailrecursion.hoplon.span.call(null,G__332744,G__332745));
})();
var G__332702 = " (";
var G__332703 = (function (){var G__332746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332747 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332746,G__332747) : tailrecursion.hoplon.span.call(null,G__332746,G__332747));
})();
var G__332704 = " (";
var G__332705 = (function (){var G__332748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332749 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332748,G__332749) : tailrecursion.hoplon.span.call(null,G__332748,G__332749));
})();
var G__332706 = (function (){var G__332750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332751 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332750,G__332751) : tailrecursion.hoplon.span.call(null,G__332750,G__332751));
})();
var G__332707 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__332667,G__332668,G__332669,G__332670,G__332671,G__332672,G__332673,G__332674,G__332675,G__332676,G__332677,G__332678,G__332679,G__332680,G__332681,G__332682,G__332683,G__332684,G__332685,G__332686,G__332687,G__332688,G__332689,G__332690,G__332691,G__332692,G__332693,G__332694,G__332695,G__332696,G__332697,G__332698,G__332699,G__332700,G__332701,G__332702,G__332703,G__332704,G__332705,G__332706,G__332707) : tailrecursion.hoplon.pre.call(null,G__332667,G__332668,G__332669,G__332670,G__332671,G__332672,G__332673,G__332674,G__332675,G__332676,G__332677,G__332678,G__332679,G__332680,G__332681,G__332682,G__332683,G__332684,G__332685,G__332686,G__332687,G__332688,G__332689,G__332690,G__332691,G__332692,G__332693,G__332694,G__332695,G__332696,G__332697,G__332698,G__332699,G__332700,G__332701,G__332702,G__332703,G__332704,G__332705,G__332706,G__332707));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332665,G__332666) : tailrecursion.hoplon.div.call(null,G__332665,G__332666));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332664) : tailrecursion.hoplon.div.call(null,G__332664));
})(),(function (){var G__332752 = cljs.core.PersistentArrayMap.EMPTY;
var G__332753 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Of course, there are better ways to represent large sets than as unordered lists. Information-retrieval systems in which records have to be ",(function (){var G__332754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__332755 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["randomly accessed"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__332754,G__332755) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__332754,G__332755));
})()," are typically implemented by a tree-based method, such as the binary-tree representation discussed previously. In designing such a system the methodology of data abstraction can be a great help. The designer can create an initial implementation using a simple, straightforward representation such as unordered lists. This will be unsuitable for the eventual system, but it can be useful in providing a ",(function (){var G__332756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__332757 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quick and dirty"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__332756,G__332757) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__332756,G__332757));
})()," data base with which to test the rest of the system. Later on, the data representation can be modified to be more sophisticated. If the data base is accessed in terms of abstract selectors and constructors, this change in representation will not require any changes to the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332752,G__332753) : tailrecursion.hoplon.markdown.para_node.call(null,G__332752,G__332753));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332560;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332559;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332558;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332557;
}})()], 0));
var G__320079 = "";
var G__320080 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332758 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332759 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332760 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332761 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332762 = cljs.core.PersistentArrayMap.EMPTY;
var G__332763 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement the ",(function (){var G__332764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lookup"], null);
var G__332765 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332764,G__332765) : tailrecursion.hoplon.markdown.code_node.call(null,G__332764,G__332765));
})()," procedure for the case where the set of records is structured as a binary tree, ordered by the numerical values of the keys."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332762,G__332763) : tailrecursion.hoplon.markdown.para_node.call(null,G__332762,G__332763));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332761;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332760;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332759;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332758;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332768 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332769 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332770 = cljs.core.PersistentArrayMap.EMPTY;
var G__332771 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For now let",(function (){var G__332772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__332773 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__332772,G__332773) : tailrecursion.hoplon.markdown.simple_node.call(null,G__332772,G__332773));
})(),"s assume that the keys are all integers (so that we can use the ordering that already exists for integers). Before we can implement the ",(function (){var G__332774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lookup"], null);
var G__332775 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332774,G__332775) : tailrecursion.hoplon.markdown.code_node.call(null,G__332774,G__332775));
})()," procedure for binary trees, we need to define the ",(function (){var G__332776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"key"], null);
var G__332777 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332776,G__332777) : tailrecursion.hoplon.markdown.code_node.call(null,G__332776,G__332777));
})()," procedure we see in their definition (which amounts to defining how key-value pairs are to be stored). One way would be to consider key value pairs to be lists where the first element is the key and the second is the value. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332770,G__332771) : tailrecursion.hoplon.markdown.para_node.call(null,G__332770,G__332771));
})(),(function (){var G__332823 = (function (){var G__332824 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332825 = (function (){var G__332826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332827 = "(";
var G__332828 = (function (){var G__332845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332846 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332845,G__332846) : tailrecursion.hoplon.span.call(null,G__332845,G__332846));
})();
var G__332829 = (function (){var G__332847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332848 = "make-key-val-pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332847,G__332848) : tailrecursion.hoplon.span.call(null,G__332847,G__332848));
})();
var G__332830 = " [";
var G__332831 = (function (){var G__332849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332850 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332849,G__332850) : tailrecursion.hoplon.span.call(null,G__332849,G__332850));
})();
var G__332832 = (function (){var G__332851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332852 = "val";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332851,G__332852) : tailrecursion.hoplon.span.call(null,G__332851,G__332852));
})();
var G__332833 = "]\n  (";
var G__332834 = (function (){var G__332853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332854 = "list key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332853,G__332854) : tailrecursion.hoplon.span.call(null,G__332853,G__332854));
})();
var G__332835 = (function (){var G__332855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332856 = "val";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332855,G__332856) : tailrecursion.hoplon.span.call(null,G__332855,G__332856));
})();
var G__332836 = "))\n(";
var G__332837 = (function (){var G__332857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332858 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332857,G__332858) : tailrecursion.hoplon.span.call(null,G__332857,G__332858));
})();
var G__332838 = (function (){var G__332859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332860 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332859,G__332860) : tailrecursion.hoplon.span.call(null,G__332859,G__332860));
})();
var G__332839 = (function (){var G__332861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332862 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332861,G__332862) : tailrecursion.hoplon.span.call(null,G__332861,G__332862));
})();
var G__332840 = ")\n(";
var G__332841 = (function (){var G__332863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332864 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332863,G__332864) : tailrecursion.hoplon.span.call(null,G__332863,G__332864));
})();
var G__332842 = (function (){var G__332865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332866 = "val ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332865,G__332866) : tailrecursion.hoplon.span.call(null,G__332865,G__332866));
})();
var G__332843 = (function (){var G__332867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332868 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332867,G__332868) : tailrecursion.hoplon.span.call(null,G__332867,G__332868));
})();
var G__332844 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__332826,G__332827,G__332828,G__332829,G__332830,G__332831,G__332832,G__332833,G__332834,G__332835,G__332836,G__332837,G__332838,G__332839,G__332840,G__332841,G__332842,G__332843,G__332844) : tailrecursion.hoplon.pre.call(null,G__332826,G__332827,G__332828,G__332829,G__332830,G__332831,G__332832,G__332833,G__332834,G__332835,G__332836,G__332837,G__332838,G__332839,G__332840,G__332841,G__332842,G__332843,G__332844));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332824,G__332825) : tailrecursion.hoplon.div.call(null,G__332824,G__332825));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332823) : tailrecursion.hoplon.div.call(null,G__332823));
})(),(function (){var G__332869 = cljs.core.PersistentArrayMap.EMPTY;
var G__332870 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332869,G__332870) : tailrecursion.hoplon.markdown.para_node.call(null,G__332869,G__332870));
})(),(function (){var G__333025 = (function (){var G__333026 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333027 = (function (){var G__333028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333029 = "(";
var G__333030 = (function (){var G__333102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333103 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333102,G__333103) : tailrecursion.hoplon.span.call(null,G__333102,G__333103));
})();
var G__333031 = (function (){var G__333104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333105 = "lookup";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333104,G__333105) : tailrecursion.hoplon.span.call(null,G__333104,G__333105));
})();
var G__333032 = " [";
var G__333033 = (function (){var G__333106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333107 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333106,G__333107) : tailrecursion.hoplon.span.call(null,G__333106,G__333107));
})();
var G__333034 = " ";
var G__333035 = (function (){var G__333108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333109 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333108,G__333109) : tailrecursion.hoplon.span.call(null,G__333108,G__333109));
})();
var G__333036 = "]\n  (";
var G__333037 = (function (){var G__333110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333111 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333110,G__333111) : tailrecursion.hoplon.span.call(null,G__333110,G__333111));
})();
var G__333038 = "[";
var G__333039 = (function (){var G__333112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333113 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333112,G__333113) : tailrecursion.hoplon.span.call(null,G__333112,G__333113));
})();
var G__333040 = " ";
var G__333041 = (function (){var G__333114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333115 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333114,G__333115) : tailrecursion.hoplon.span.call(null,G__333114,G__333115));
})();
var G__333042 = "]\n    (";
var G__333043 = (function (){var G__333116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333117 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333116,G__333117) : tailrecursion.hoplon.span.call(null,G__333116,G__333117));
})();
var G__333044 = "(";
var G__333045 = (function (){var G__333118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333119 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333118,G__333119) : tailrecursion.hoplon.span.call(null,G__333118,G__333119));
})();
var G__333046 = " ";
var G__333047 = (function (){var G__333120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333121 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333120,G__333121) : tailrecursion.hoplon.span.call(null,G__333120,G__333121));
})();
var G__333048 = ") ";
var G__333049 = (function (){var G__333122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333123 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333122,G__333123) : tailrecursion.hoplon.span.call(null,G__333122,G__333123));
})();
var G__333050 = "\n          (";
var G__333051 = (function (){var G__333124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333125 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333124,G__333125) : tailrecursion.hoplon.span.call(null,G__333124,G__333125));
})();
var G__333052 = (function (){var G__333126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333127 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333126,G__333127) : tailrecursion.hoplon.span.call(null,G__333126,G__333127));
})();
var G__333053 = " (";
var G__333054 = (function (){var G__333128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333129 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333128,G__333129) : tailrecursion.hoplon.span.call(null,G__333128,G__333129));
})();
var G__333055 = "(";
var G__333056 = (function (){var G__333130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333131 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333130,G__333131) : tailrecursion.hoplon.span.call(null,G__333130,G__333131));
})();
var G__333057 = (function (){var G__333132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333133 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333132,G__333133) : tailrecursion.hoplon.span.call(null,G__333132,G__333133));
})();
var G__333058 = "))) (";
var G__333059 = (function (){var G__333134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333135 = "val ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333134,G__333135) : tailrecursion.hoplon.span.call(null,G__333134,G__333135));
})();
var G__333060 = "(";
var G__333061 = (function (){var G__333136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333137 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333136,G__333137) : tailrecursion.hoplon.span.call(null,G__333136,G__333137));
})();
var G__333062 = (function (){var G__333138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333139 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333138,G__333139) : tailrecursion.hoplon.span.call(null,G__333138,G__333139));
})();
var G__333063 = "))\n          (";
var G__333064 = (function (){var G__333140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333141 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333140,G__333141) : tailrecursion.hoplon.span.call(null,G__333140,G__333141));
})();
var G__333065 = (function (){var G__333142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333143 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333142,G__333143) : tailrecursion.hoplon.span.call(null,G__333142,G__333143));
})();
var G__333066 = " (";
var G__333067 = (function (){var G__333144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333145 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333144,G__333145) : tailrecursion.hoplon.span.call(null,G__333144,G__333145));
})();
var G__333068 = "(";
var G__333069 = (function (){var G__333146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333147 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333146,G__333147) : tailrecursion.hoplon.span.call(null,G__333146,G__333147));
})();
var G__333070 = " ";
var G__333071 = (function (){var G__333148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333149 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333148,G__333149) : tailrecursion.hoplon.span.call(null,G__333148,G__333149));
})();
var G__333072 = "))) (";
var G__333073 = (function (){var G__333150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333151 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333150,G__333151) : tailrecursion.hoplon.span.call(null,G__333150,G__333151));
})();
var G__333074 = " (";
var G__333075 = (function (){var G__333152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333153 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333152,G__333153) : tailrecursion.hoplon.span.call(null,G__333152,G__333153));
})();
var G__333076 = " ";
var G__333077 = (function (){var G__333154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333155 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333154,G__333155) : tailrecursion.hoplon.span.call(null,G__333154,G__333155));
})();
var G__333078 = "))\n          (";
var G__333079 = (function (){var G__333156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333157 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333156,G__333157) : tailrecursion.hoplon.span.call(null,G__333156,G__333157));
})();
var G__333080 = (function (){var G__333158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333159 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333158,G__333159) : tailrecursion.hoplon.span.call(null,G__333158,G__333159));
})();
var G__333081 = " (";
var G__333082 = (function (){var G__333160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333161 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333160,G__333161) : tailrecursion.hoplon.span.call(null,G__333160,G__333161));
})();
var G__333083 = "(";
var G__333084 = (function (){var G__333162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333163 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333162,G__333163) : tailrecursion.hoplon.span.call(null,G__333162,G__333163));
})();
var G__333085 = " ";
var G__333086 = (function (){var G__333164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333165 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333164,G__333165) : tailrecursion.hoplon.span.call(null,G__333164,G__333165));
})();
var G__333087 = "))) (";
var G__333088 = (function (){var G__333166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333167 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333166,G__333167) : tailrecursion.hoplon.span.call(null,G__333166,G__333167));
})();
var G__333089 = " (";
var G__333090 = (function (){var G__333168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333169 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333168,G__333169) : tailrecursion.hoplon.span.call(null,G__333168,G__333169));
})();
var G__333091 = " ";
var G__333092 = (function (){var G__333170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333171 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333170,G__333171) : tailrecursion.hoplon.span.call(null,G__333170,G__333171));
})();
var G__333093 = "))\n          ";
var G__333094 = (function (){var G__333172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333173 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333172,G__333173) : tailrecursion.hoplon.span.call(null,G__333172,G__333173));
})();
var G__333095 = " (";
var G__333096 = (function (){var G__333174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333175 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333174,G__333175) : tailrecursion.hoplon.span.call(null,G__333174,G__333175));
})();
var G__333097 = " (";
var G__333098 = (function (){var G__333176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333177 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333176,G__333177) : tailrecursion.hoplon.span.call(null,G__333176,G__333177));
})();
var G__333099 = " ";
var G__333100 = (function (){var G__333178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__333179 = "\"Something went wrong with binary-tree-lookup\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333178,G__333179) : tailrecursion.hoplon.span.call(null,G__333178,G__333179));
})();
var G__333101 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74(G__333028,G__333029,G__333030,G__333031,G__333032,G__333033,G__333034,G__333035,G__333036,G__333037,G__333038,G__333039,G__333040,G__333041,G__333042,G__333043,G__333044,G__333045,G__333046,G__333047,G__333048,G__333049,G__333050,G__333051,G__333052,G__333053,G__333054,G__333055,G__333056,G__333057,G__333058,G__333059,G__333060,G__333061,G__333062,G__333063,G__333064,G__333065,G__333066,G__333067,G__333068,G__333069,G__333070,G__333071,G__333072,G__333073,G__333074,G__333075,G__333076,G__333077,G__333078,G__333079,G__333080,G__333081,G__333082,G__333083,G__333084,G__333085,G__333086,G__333087,G__333088,G__333089,G__333090,G__333091,G__333092,G__333093,G__333094,G__333095,G__333096,G__333097,G__333098,G__333099,G__333100,G__333101) : tailrecursion.hoplon.pre.call(null,G__333028,G__333029,G__333030,G__333031,G__333032,G__333033,G__333034,G__333035,G__333036,G__333037,G__333038,G__333039,G__333040,G__333041,G__333042,G__333043,G__333044,G__333045,G__333046,G__333047,G__333048,G__333049,G__333050,G__333051,G__333052,G__333053,G__333054,G__333055,G__333056,G__333057,G__333058,G__333059,G__333060,G__333061,G__333062,G__333063,G__333064,G__333065,G__333066,G__333067,G__333068,G__333069,G__333070,G__333071,G__333072,G__333073,G__333074,G__333075,G__333076,G__333077,G__333078,G__333079,G__333080,G__333081,G__333082,G__333083,G__333084,G__333085,G__333086,G__333087,G__333088,G__333089,G__333090,G__333091,G__333092,G__333093,G__333094,G__333095,G__333096,G__333097,G__333098,G__333099,G__333100,G__333101));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333026,G__333027) : tailrecursion.hoplon.div.call(null,G__333026,G__333027));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333025) : tailrecursion.hoplon.div.call(null,G__333025));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332769;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332768;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332766;
}})()], 0))], 0))], 0));
var G__320081 = "";
var G__320082 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Huffman Encoding Trees"], null),(function (){var _STAR_references_STAR_333180 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333181 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333182 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333183 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333184 = cljs.core.PersistentArrayMap.EMPTY;
var G__333185 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section provides practice in the use of list structure and data abstraction to manipulate sets and trees. The application is to methods for representing data as sequences of ones and zeros (bits). For example, the ASCII standard code used to represent text in computers encodes each character as a sequence of seven bits. Using seven bits allows us to distinguish \\(2^7\\), or 128, possible different characters. In general, if we want to distinguish \\(n\\) different symbols, we will need to use \\(log_2 n\\) bits per symbol. If all our messages are made up of the eight symbols A, B, C, D, E, F, G, and H, we can choose a code with three bits per character, for example"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333184,G__333185) : tailrecursion.hoplon.markdown.para_node.call(null,G__333184,G__333185));
})(),(function (){var G__333186 = cljs.core.PersistentArrayMap.EMPTY;
var G__333187 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{array}{llll} \\text{A } 000 & \\text{C } 010 & \\text{E } 100 & \\text{G } 110\\\\ \\text{B } 001 & \\text{D } 011 & \\text{F } 101 & \\text{H } 111 \\end{array}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333186,G__333187) : tailrecursion.hoplon.markdown.para_node.call(null,G__333186,G__333187));
})(),(function (){var G__333188 = cljs.core.PersistentArrayMap.EMPTY;
var G__333189 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["with this code, the message"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333188,G__333189) : tailrecursion.hoplon.markdown.para_node.call(null,G__333188,G__333189));
})(),(function (){var G__333190 = cljs.core.PersistentArrayMap.EMPTY;
var G__333191 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["BACADAEAFABBAAAGAH"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333190,G__333191) : tailrecursion.hoplon.markdown.para_node.call(null,G__333190,G__333191));
})(),(function (){var G__333192 = cljs.core.PersistentArrayMap.EMPTY;
var G__333193 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is encoded into the string of 54 bits"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333192,G__333193) : tailrecursion.hoplon.markdown.para_node.call(null,G__333192,G__333193));
})(),(function (){var G__333194 = cljs.core.PersistentArrayMap.EMPTY;
var G__333195 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["001000010000011000100000101000001001000000000110000111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333194,G__333195) : tailrecursion.hoplon.markdown.para_node.call(null,G__333194,G__333195));
})(),(function (){var G__333196 = cljs.core.PersistentArrayMap.EMPTY;
var G__333197 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Codes such as ASCII and the A-through-H code above are known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fixed-length"], null)], 0))," codes, because they represent each symbol in the message with the same number of bits. It is sometimes advantageous to use ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["variable-length"], null)], 0))," codes, in which different symbols may be represented by different numbers of bits. For example, Morse code does not use the same number of dots and dashes for each letter of the alphabet. In particular, E, the most frequent letter, is represented by a single dot. In general, if our messages are such that some symbols appear very frequently and some very rarely, we can encode data more efficiently (i.e., using fewer bits per message) if we assign shorter codes to the frequent symbols. Consider the following alternative code for the letters A through H:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333196,G__333197) : tailrecursion.hoplon.markdown.para_node.call(null,G__333196,G__333197));
})(),(function (){var G__333198 = cljs.core.PersistentArrayMap.EMPTY;
var G__333199 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{array}{llll} \\text{A } 0 & \\text{C } 1010 & \\text{E } 1100 & \\text{G } 1110\\\\ \\text{B } 100 & \\text{D } 1011 & \\text{F } 1101 & \\text{H } 1111 \\end{array}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333198,G__333199) : tailrecursion.hoplon.markdown.para_node.call(null,G__333198,G__333199));
})(),(function (){var G__333200 = cljs.core.PersistentArrayMap.EMPTY;
var G__333201 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["with this code, the same message as above is encoded as the string"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333200,G__333201) : tailrecursion.hoplon.markdown.para_node.call(null,G__333200,G__333201));
})(),(function (){var G__333202 = cljs.core.PersistentArrayMap.EMPTY;
var G__333203 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["100010100101101100011010100100000111001111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333202,G__333203) : tailrecursion.hoplon.markdown.para_node.call(null,G__333202,G__333203));
})(),(function (){var G__333204 = cljs.core.PersistentArrayMap.EMPTY;
var G__333205 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This string contains 42 bits, so it saves more than 20% in space in comparison with the fixed-length code shown above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333204,G__333205) : tailrecursion.hoplon.markdown.para_node.call(null,G__333204,G__333205));
})(),(function (){var G__333206 = cljs.core.PersistentArrayMap.EMPTY;
var G__333207 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the difficulties of using a variable-length code is knowing when you have reached the end of a symbol in reading a sequence of zeros and ones. Morse code solves this problem by using a special ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["separator code"], null)], 0))," (in this case, a pause) after the sequence of dots and dashes for each letter. Another solution is to design the code in such a way that no complete code for any symbol is the beginning (or prefix) of the code for another symbol. Such a code is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["prefix code"], null)], 0)),". In the example above, A is encoded by 0 and B is encoded by 100, so no other symbol can have a code that begins with 0 or with 100."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333206,G__333207) : tailrecursion.hoplon.markdown.para_node.call(null,G__333206,G__333207));
})(),(function (){var G__333208 = cljs.core.PersistentArrayMap.EMPTY;
var G__333209 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, we can attain significant savings if we use variable-length prefix codes that take advantage of the relative frequencies of the symbols in the messages to be encoded. One particular scheme for doing this is called the Huffman encoding method, after its discoverer, David Huffman. A Huffman code can be represented as a binary tree whose leaves are the symbols that are encoded. At each non-leaf node of the tree there is a set containing all the symbols in the leaves that lie below the node. In addition, each symbol at a leaf is assigned a weight (which is its relative frequency), and each non-leaf node contains a weight that is the sum of all the weights of the leaves lying below it. The weights are not used in the encoding or the decoding process. We will see below how they are used to help construct the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333208,G__333209) : tailrecursion.hoplon.markdown.para_node.call(null,G__333208,G__333209));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333183;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333182;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333181;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333180;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A Huffman encoding tree."], null)], 0)),"",(function (){var _STAR_references_STAR_333210 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333211 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333212 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333213 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333214 = cljs.core.PersistentArrayMap.EMPTY;
var G__333215 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.18 shows the Huffman tree for the A-through-H code given above. The weights at the leaves indicate that the tree was designed for messages in which A appears with relative frequency 8, B with relative frequency 3, and the other letters each with relative frequency 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333214,G__333215) : tailrecursion.hoplon.markdown.para_node.call(null,G__333214,G__333215));
})(),(function (){var G__333216 = cljs.core.PersistentArrayMap.EMPTY;
var G__333217 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Given a Huffman tree, we can find the encoding of any symbol by starting at the root and moving down until we reach the leaf that holds the symbol. Each time we move down a left branch we add a 0 to the code, and each time we move down a right branch we add a 1. (We decide which branch to follow by testing to see which branch either is the leaf node for the symbol or contains the symbol in its set.) For example, starting from the root of the tree in figure 2.18, we arrive at the leaf for D by following a right branch, then a left branch, then a right branch, then a right branch; hence, the code for D is 1011."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333216,G__333217) : tailrecursion.hoplon.markdown.para_node.call(null,G__333216,G__333217));
})(),(function (){var G__333218 = cljs.core.PersistentArrayMap.EMPTY;
var G__333219 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To decode a bit sequence using a Huffman tree, we begin at the root and use the successive zeros and ones of the bit sequence to determine whether to move down the left or the right branch. Each time we come to a leaf, we have generated a new symbol in the message, at which point we start over from the root of the tree to find the next symbol. For example, suppose we are given the tree above and the sequence 10001010. Starting at the root, we move down the right branch, (since the first bit of the string is 1), then down the left branch (since the second bit is 0), then down the left branch (since the third bit is also 0). This brings us to the leaf for B, so the first symbol of the decoded message is B. Now we start again at the root, and we make a left move because the next bit in the string is 0. This brings us to the leaf for A. Then we start again at the root with the rest of the string 1010, so we move right, left, right, left and reach C. Thus, the entire message is BAC."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333218,G__333219) : tailrecursion.hoplon.markdown.para_node.call(null,G__333218,G__333219));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333213;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333212;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333211;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333210;
}})()], 0));
var G__320083 = "";
var G__320084 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Generating Huffman Trees"], null),(function (){var _STAR_references_STAR_333220 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333221 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333222 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333223 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333224 = cljs.core.PersistentArrayMap.EMPTY;
var G__333225 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Given an ",(function (){var G__333226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__333227 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["alphabet"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__333226,G__333227) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__333226,G__333227));
})()," of symbols and their relative frequencies, how do we construct the ",(function (){var G__333228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__333229 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["best"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__333228,G__333229) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__333228,G__333229));
})()," code? (In other words, which tree will encode messages with the fewest bits?) Huffman gave an algorithm for doing this and showed that the resulting code is indeed the best variable-length code for messages where the relative frequency of the symbols matches the frequencies with which the code was constructed. We will not prove this optimality of Huffman codes here, but we will show how Huffman trees are constructed.",(function (){var G__333230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__333231 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["See Hanning 1980 for a discussion of the mathematical properties of Huffman codes."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__333230,G__333231) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__333230,G__333231));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333224,G__333225) : tailrecursion.hoplon.markdown.para_node.call(null,G__333224,G__333225));
})(),(function (){var G__333232 = cljs.core.PersistentArrayMap.EMPTY;
var G__333233 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The algorithm for generating a Huffman tree is very simple. The idea is to arrange the tree so that the symbols with the lowest frequency appear farthest away from the root. Begin with the set of leaf nodes, containing symbols and their frequencies, as determined by the initial data from which the code is to be constructed. Now find two leaves with the lowest weights and merge them to produce a node that has these two nodes as its left and right branches. The weight of the new node is the sum of the two weights. Remove the two leaves from the original set and replace them by this new node. Now continue this process. At each step, merge two nodes with the smallest weights, removing them from the set and replacing them with a node that has these two as its left and right branches. The process stops when there is only one node left, which is the root of the entire tree. Here is how the Huffman tree of figure 2.18 was generated:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333232,G__333233) : tailrecursion.hoplon.markdown.para_node.call(null,G__333232,G__333233));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333223;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333222;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333221;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333220;
}})(),"",(function (){var G__333234 = cljs.core.PersistentArrayMap.EMPTY;
var G__333235 = (function (){var G__333243 = cljs.core.PersistentArrayMap.EMPTY;
var G__333244 = (function (){var G__333246 = cljs.core.PersistentArrayMap.EMPTY;
var G__333247 = "Initial leaves";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333246,G__333247) : tailrecursion.hoplon.td.call(null,G__333246,G__333247));
})();
var G__333245 = (function (){var G__333248 = cljs.core.PersistentArrayMap.EMPTY;
var G__333249 = "{(A 8) (B 3) (C 1) (D 1) (E 1) (F 1) (G 1) (H 1)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333248,G__333249) : tailrecursion.hoplon.td.call(null,G__333248,G__333249));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333243,G__333244,G__333245) : tailrecursion.hoplon.tr.call(null,G__333243,G__333244,G__333245));
})();
var G__333236 = (function (){var G__333250 = cljs.core.PersistentArrayMap.EMPTY;
var G__333251 = (function (){var G__333253 = cljs.core.PersistentArrayMap.EMPTY;
var G__333254 = "Merge   ";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333253,G__333254) : tailrecursion.hoplon.td.call(null,G__333253,G__333254));
})();
var G__333252 = (function (){var G__333255 = cljs.core.PersistentArrayMap.EMPTY;
var G__333256 = "{(A 8) (B 3) ({C D} 2) (E 1) (F 1) (G 1) (H 1)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333255,G__333256) : tailrecursion.hoplon.td.call(null,G__333255,G__333256));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333250,G__333251,G__333252) : tailrecursion.hoplon.tr.call(null,G__333250,G__333251,G__333252));
})();
var G__333237 = (function (){var G__333257 = cljs.core.PersistentArrayMap.EMPTY;
var G__333258 = (function (){var G__333260 = cljs.core.PersistentArrayMap.EMPTY;
var G__333261 = "Merge ";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333260,G__333261) : tailrecursion.hoplon.td.call(null,G__333260,G__333261));
})();
var G__333259 = (function (){var G__333262 = cljs.core.PersistentArrayMap.EMPTY;
var G__333263 = "{(A 8) (B 3) ({C D} 2) ({E F} 2) (G 1) (H 1)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333262,G__333263) : tailrecursion.hoplon.td.call(null,G__333262,G__333263));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333257,G__333258,G__333259) : tailrecursion.hoplon.tr.call(null,G__333257,G__333258,G__333259));
})();
var G__333238 = (function (){var G__333264 = cljs.core.PersistentArrayMap.EMPTY;
var G__333265 = (function (){var G__333267 = cljs.core.PersistentArrayMap.EMPTY;
var G__333268 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333267,G__333268) : tailrecursion.hoplon.td.call(null,G__333267,G__333268));
})();
var G__333266 = (function (){var G__333269 = cljs.core.PersistentArrayMap.EMPTY;
var G__333270 = "{(A 8) (B 3) ({C D} 2) ({E F} 2) ({G H} 2)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333269,G__333270) : tailrecursion.hoplon.td.call(null,G__333269,G__333270));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333264,G__333265,G__333266) : tailrecursion.hoplon.tr.call(null,G__333264,G__333265,G__333266));
})();
var G__333239 = (function (){var G__333271 = cljs.core.PersistentArrayMap.EMPTY;
var G__333272 = (function (){var G__333274 = cljs.core.PersistentArrayMap.EMPTY;
var G__333275 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333274,G__333275) : tailrecursion.hoplon.td.call(null,G__333274,G__333275));
})();
var G__333273 = (function (){var G__333276 = cljs.core.PersistentArrayMap.EMPTY;
var G__333277 = "{(A 8) (B 3) ({C D} 2) ({E F G H} 4)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333276,G__333277) : tailrecursion.hoplon.td.call(null,G__333276,G__333277));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333271,G__333272,G__333273) : tailrecursion.hoplon.tr.call(null,G__333271,G__333272,G__333273));
})();
var G__333240 = (function (){var G__333278 = cljs.core.PersistentArrayMap.EMPTY;
var G__333279 = (function (){var G__333281 = cljs.core.PersistentArrayMap.EMPTY;
var G__333282 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333281,G__333282) : tailrecursion.hoplon.td.call(null,G__333281,G__333282));
})();
var G__333280 = (function (){var G__333283 = cljs.core.PersistentArrayMap.EMPTY;
var G__333284 = "{(A 8) ({B C D} 5) ({E F G H} 4)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333283,G__333284) : tailrecursion.hoplon.td.call(null,G__333283,G__333284));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333278,G__333279,G__333280) : tailrecursion.hoplon.tr.call(null,G__333278,G__333279,G__333280));
})();
var G__333241 = (function (){var G__333285 = cljs.core.PersistentArrayMap.EMPTY;
var G__333286 = (function (){var G__333288 = cljs.core.PersistentArrayMap.EMPTY;
var G__333289 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333288,G__333289) : tailrecursion.hoplon.td.call(null,G__333288,G__333289));
})();
var G__333287 = (function (){var G__333290 = cljs.core.PersistentArrayMap.EMPTY;
var G__333291 = "{(A 8) ({B C D E F G H} 9)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333290,G__333291) : tailrecursion.hoplon.td.call(null,G__333290,G__333291));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333285,G__333286,G__333287) : tailrecursion.hoplon.tr.call(null,G__333285,G__333286,G__333287));
})();
var G__333242 = (function (){var G__333292 = cljs.core.PersistentArrayMap.EMPTY;
var G__333293 = (function (){var G__333295 = cljs.core.PersistentArrayMap.EMPTY;
var G__333296 = "Final merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333295,G__333296) : tailrecursion.hoplon.td.call(null,G__333295,G__333296));
})();
var G__333294 = (function (){var G__333297 = cljs.core.PersistentArrayMap.EMPTY;
var G__333298 = "{({A B C D E F G H} 17)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333297,G__333298) : tailrecursion.hoplon.td.call(null,G__333297,G__333298));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333292,G__333293,G__333294) : tailrecursion.hoplon.tr.call(null,G__333292,G__333293,G__333294));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$9 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$9(G__333234,G__333235,G__333236,G__333237,G__333238,G__333239,G__333240,G__333241,G__333242) : tailrecursion.hoplon.table.call(null,G__333234,G__333235,G__333236,G__333237,G__333238,G__333239,G__333240,G__333241,G__333242));
})(),"",(function (){var _STAR_references_STAR_333299 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333300 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333301 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333302 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333303 = cljs.core.PersistentArrayMap.EMPTY;
var G__333304 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The algorithm does not always specify a unique tree, because there may not be unique smallest-weight nodes at each step. Also, the choice of the order in which the two nodes are merged (i.e., which will be the right branch and which will be the left branch) is arbitrary."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333303,G__333304) : tailrecursion.hoplon.markdown.para_node.call(null,G__333303,G__333304));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333302;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333301;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333300;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333299;
}})()], 0));
var G__320085 = "";
var G__320086 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Huffman Trees"], null),(function (){var _STAR_references_STAR_333305 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333306 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333307 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333308 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333309 = cljs.core.PersistentArrayMap.EMPTY;
var G__333310 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the exercises below we will work with a system that uses Huffman trees to encode and decode messages and generates Huffman trees according to the algorithm outlined above. We will begin by discussing how trees are represented."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333309,G__333310) : tailrecursion.hoplon.markdown.para_node.call(null,G__333309,G__333310));
})(),(function (){var G__333311 = cljs.core.PersistentArrayMap.EMPTY;
var G__333312 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Leaves of the tree are represented by a list consisting of the symbol ",(function (){var G__333313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"leaf"], null);
var G__333314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333313,G__333314) : tailrecursion.hoplon.markdown.code_node.call(null,G__333313,G__333314));
})(),", the symbol at the leaf, and the weight:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333311,G__333312) : tailrecursion.hoplon.markdown.para_node.call(null,G__333311,G__333312));
})(),(function (){var G__333413 = (function (){var G__333414 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333415 = (function (){var G__333416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333417 = "(";
var G__333418 = (function (){var G__333460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333461 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333460,G__333461) : tailrecursion.hoplon.span.call(null,G__333460,G__333461));
})();
var G__333419 = (function (){var G__333462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333463 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333462,G__333463) : tailrecursion.hoplon.span.call(null,G__333462,G__333463));
})();
var G__333420 = " [";
var G__333421 = (function (){var G__333464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333465 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333464,G__333465) : tailrecursion.hoplon.span.call(null,G__333464,G__333465));
})();
var G__333422 = (function (){var G__333466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333467 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333466,G__333467) : tailrecursion.hoplon.span.call(null,G__333466,G__333467));
})();
var G__333423 = "]\n  (";
var G__333424 = (function (){var G__333468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333469 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333468,G__333469) : tailrecursion.hoplon.span.call(null,G__333468,G__333469));
})();
var G__333425 = (function (){var G__333470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333471 = "'leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333470,G__333471) : tailrecursion.hoplon.span.call(null,G__333470,G__333471));
})();
var G__333426 = " ";
var G__333427 = (function (){var G__333472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333473 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333472,G__333473) : tailrecursion.hoplon.span.call(null,G__333472,G__333473));
})();
var G__333428 = (function (){var G__333474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333475 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333474,G__333475) : tailrecursion.hoplon.span.call(null,G__333474,G__333475));
})();
var G__333429 = "))\n(";
var G__333430 = (function (){var G__333476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333477 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333476,G__333477) : tailrecursion.hoplon.span.call(null,G__333476,G__333477));
})();
var G__333431 = (function (){var G__333478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333479 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333478,G__333479) : tailrecursion.hoplon.span.call(null,G__333478,G__333479));
})();
var G__333432 = " [";
var G__333433 = (function (){var G__333480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333481 = "object";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333480,G__333481) : tailrecursion.hoplon.span.call(null,G__333480,G__333481));
})();
var G__333434 = "]\n  (";
var G__333435 = (function (){var G__333482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333483 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333482,G__333483) : tailrecursion.hoplon.span.call(null,G__333482,G__333483));
})();
var G__333436 = "(";
var G__333437 = (function (){var G__333484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333485 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333484,G__333485) : tailrecursion.hoplon.span.call(null,G__333484,G__333485));
})();
var G__333438 = (function (){var G__333486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333487 = "object";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333486,G__333487) : tailrecursion.hoplon.span.call(null,G__333486,G__333487));
})();
var G__333439 = ") ";
var G__333440 = (function (){var G__333488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333489 = "'leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333488,G__333489) : tailrecursion.hoplon.span.call(null,G__333488,G__333489));
})();
var G__333441 = "))\n(";
var G__333442 = (function (){var G__333490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333491 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333490,G__333491) : tailrecursion.hoplon.span.call(null,G__333490,G__333491));
})();
var G__333443 = (function (){var G__333492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333493 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333492,G__333493) : tailrecursion.hoplon.span.call(null,G__333492,G__333493));
})();
var G__333444 = " [";
var G__333445 = (function (){var G__333494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333495 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333494,G__333495) : tailrecursion.hoplon.span.call(null,G__333494,G__333495));
})();
var G__333446 = "] (";
var G__333447 = (function (){var G__333496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333497 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333496,G__333497) : tailrecursion.hoplon.span.call(null,G__333496,G__333497));
})();
var G__333448 = (function (){var G__333498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333499 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333498,G__333499) : tailrecursion.hoplon.span.call(null,G__333498,G__333499));
})();
var G__333449 = "))\n(";
var G__333450 = (function (){var G__333500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333501 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333500,G__333501) : tailrecursion.hoplon.span.call(null,G__333500,G__333501));
})();
var G__333451 = (function (){var G__333502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333503 = "weight-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333502,G__333503) : tailrecursion.hoplon.span.call(null,G__333502,G__333503));
})();
var G__333452 = " [";
var G__333453 = (function (){var G__333504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333505 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333504,G__333505) : tailrecursion.hoplon.span.call(null,G__333504,G__333505));
})();
var G__333454 = "] (";
var G__333455 = (function (){var G__333506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333507 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333506,G__333507) : tailrecursion.hoplon.span.call(null,G__333506,G__333507));
})();
var G__333456 = (function (){var G__333508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333509 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333508,G__333509) : tailrecursion.hoplon.span.call(null,G__333508,G__333509));
})();
var G__333457 = " ";
var G__333458 = (function (){var G__333510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__333511 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333510,G__333511) : tailrecursion.hoplon.span.call(null,G__333510,G__333511));
})();
var G__333459 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__333416,G__333417,G__333418,G__333419,G__333420,G__333421,G__333422,G__333423,G__333424,G__333425,G__333426,G__333427,G__333428,G__333429,G__333430,G__333431,G__333432,G__333433,G__333434,G__333435,G__333436,G__333437,G__333438,G__333439,G__333440,G__333441,G__333442,G__333443,G__333444,G__333445,G__333446,G__333447,G__333448,G__333449,G__333450,G__333451,G__333452,G__333453,G__333454,G__333455,G__333456,G__333457,G__333458,G__333459) : tailrecursion.hoplon.pre.call(null,G__333416,G__333417,G__333418,G__333419,G__333420,G__333421,G__333422,G__333423,G__333424,G__333425,G__333426,G__333427,G__333428,G__333429,G__333430,G__333431,G__333432,G__333433,G__333434,G__333435,G__333436,G__333437,G__333438,G__333439,G__333440,G__333441,G__333442,G__333443,G__333444,G__333445,G__333446,G__333447,G__333448,G__333449,G__333450,G__333451,G__333452,G__333453,G__333454,G__333455,G__333456,G__333457,G__333458,G__333459));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333414,G__333415) : tailrecursion.hoplon.div.call(null,G__333414,G__333415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333413) : tailrecursion.hoplon.div.call(null,G__333413));
})(),(function (){var G__333512 = cljs.core.PersistentArrayMap.EMPTY;
var G__333513 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A general tree will be a list of a left branch, a right branch, a set of symbols, and a weight. The set of symbols will be simply a list of the symbols, rather than some more sophisticated set representation. When we make a tree by merging two nodes, we obtain the weight of the tree as the sum of the weights of the nodes, and the set of symbols as the union of the sets of symbols for the nodes. Since our symbol sets are represented as lists, we can form the union by using the ",(function (){var G__333514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__333515 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333514,G__333515) : tailrecursion.hoplon.markdown.code_node.call(null,G__333514,G__333515));
})()," procedure we defined in section 2.2.1:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333512,G__333513) : tailrecursion.hoplon.markdown.para_node.call(null,G__333512,G__333513));
})(),(function (){var G__333585 = (function (){var G__333586 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333587 = (function (){var G__333588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333589 = "(";
var G__333590 = (function (){var G__333621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333622 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333621,G__333622) : tailrecursion.hoplon.span.call(null,G__333621,G__333622));
})();
var G__333591 = (function (){var G__333623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333624 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333623,G__333624) : tailrecursion.hoplon.span.call(null,G__333623,G__333624));
})();
var G__333592 = " [";
var G__333593 = (function (){var G__333625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333626 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333625,G__333626) : tailrecursion.hoplon.span.call(null,G__333625,G__333626));
})();
var G__333594 = (function (){var G__333627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333628 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333627,G__333628) : tailrecursion.hoplon.span.call(null,G__333627,G__333628));
})();
var G__333595 = "]\n  (";
var G__333596 = (function (){var G__333629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333630 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333629,G__333630) : tailrecursion.hoplon.span.call(null,G__333629,G__333630));
})();
var G__333597 = (function (){var G__333631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333632 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333631,G__333632) : tailrecursion.hoplon.span.call(null,G__333631,G__333632));
})();
var G__333598 = "\n        ";
var G__333599 = (function (){var G__333633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333634 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333633,G__333634) : tailrecursion.hoplon.span.call(null,G__333633,G__333634));
})();
var G__333600 = "\n        (";
var G__333601 = (function (){var G__333635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333636 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333635,G__333636) : tailrecursion.hoplon.span.call(null,G__333635,G__333636));
})();
var G__333602 = "(";
var G__333603 = (function (){var G__333637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333638 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333637,G__333638) : tailrecursion.hoplon.span.call(null,G__333637,G__333638));
})();
var G__333604 = " ";
var G__333605 = (function (){var G__333639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333640 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333639,G__333640) : tailrecursion.hoplon.span.call(null,G__333639,G__333640));
})();
var G__333606 = ") (";
var G__333607 = (function (){var G__333641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333642 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333641,G__333642) : tailrecursion.hoplon.span.call(null,G__333641,G__333642));
})();
var G__333608 = " ";
var G__333609 = (function (){var G__333643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333644 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333643,G__333644) : tailrecursion.hoplon.span.call(null,G__333643,G__333644));
})();
var G__333610 = "))\n        (";
var G__333611 = (function (){var G__333645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333646 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333645,G__333646) : tailrecursion.hoplon.span.call(null,G__333645,G__333646));
})();
var G__333612 = "(";
var G__333613 = (function (){var G__333647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333648 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333647,G__333648) : tailrecursion.hoplon.span.call(null,G__333647,G__333648));
})();
var G__333614 = " ";
var G__333615 = (function (){var G__333649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333650 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333649,G__333650) : tailrecursion.hoplon.span.call(null,G__333649,G__333650));
})();
var G__333616 = ") (";
var G__333617 = (function (){var G__333651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333652 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333651,G__333652) : tailrecursion.hoplon.span.call(null,G__333651,G__333652));
})();
var G__333618 = " ";
var G__333619 = (function (){var G__333653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333654 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333653,G__333654) : tailrecursion.hoplon.span.call(null,G__333653,G__333654));
})();
var G__333620 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__333588,G__333589,G__333590,G__333591,G__333592,G__333593,G__333594,G__333595,G__333596,G__333597,G__333598,G__333599,G__333600,G__333601,G__333602,G__333603,G__333604,G__333605,G__333606,G__333607,G__333608,G__333609,G__333610,G__333611,G__333612,G__333613,G__333614,G__333615,G__333616,G__333617,G__333618,G__333619,G__333620) : tailrecursion.hoplon.pre.call(null,G__333588,G__333589,G__333590,G__333591,G__333592,G__333593,G__333594,G__333595,G__333596,G__333597,G__333598,G__333599,G__333600,G__333601,G__333602,G__333603,G__333604,G__333605,G__333606,G__333607,G__333608,G__333609,G__333610,G__333611,G__333612,G__333613,G__333614,G__333615,G__333616,G__333617,G__333618,G__333619,G__333620));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333586,G__333587) : tailrecursion.hoplon.div.call(null,G__333586,G__333587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333585) : tailrecursion.hoplon.div.call(null,G__333585));
})(),(function (){var G__333655 = cljs.core.PersistentArrayMap.EMPTY;
var G__333656 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we make a tree in this way, we have the following selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333655,G__333656) : tailrecursion.hoplon.markdown.para_node.call(null,G__333655,G__333656));
})(),(function (){var G__333785 = (function (){var G__333786 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333787 = (function (){var G__333788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333789 = "(";
var G__333790 = (function (){var G__333848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333849 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333848,G__333849) : tailrecursion.hoplon.span.call(null,G__333848,G__333849));
})();
var G__333791 = (function (){var G__333850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333851 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333850,G__333851) : tailrecursion.hoplon.span.call(null,G__333850,G__333851));
})();
var G__333792 = " [";
var G__333793 = (function (){var G__333852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333853 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333852,G__333853) : tailrecursion.hoplon.span.call(null,G__333852,G__333853));
})();
var G__333794 = "] (";
var G__333795 = (function (){var G__333854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333855 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333854,G__333855) : tailrecursion.hoplon.span.call(null,G__333854,G__333855));
})();
var G__333796 = (function (){var G__333856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333857 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333856,G__333857) : tailrecursion.hoplon.span.call(null,G__333856,G__333857));
})();
var G__333797 = "))\n\n(";
var G__333798 = (function (){var G__333858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333859 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333858,G__333859) : tailrecursion.hoplon.span.call(null,G__333858,G__333859));
})();
var G__333799 = (function (){var G__333860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333861 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333860,G__333861) : tailrecursion.hoplon.span.call(null,G__333860,G__333861));
})();
var G__333800 = " [";
var G__333801 = (function (){var G__333862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333863 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333862,G__333863) : tailrecursion.hoplon.span.call(null,G__333862,G__333863));
})();
var G__333802 = "] (";
var G__333803 = (function (){var G__333864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333865 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333864,G__333865) : tailrecursion.hoplon.span.call(null,G__333864,G__333865));
})();
var G__333804 = (function (){var G__333866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333867 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333866,G__333867) : tailrecursion.hoplon.span.call(null,G__333866,G__333867));
})();
var G__333805 = "))\n(";
var G__333806 = (function (){var G__333868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333869 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333868,G__333869) : tailrecursion.hoplon.span.call(null,G__333868,G__333869));
})();
var G__333807 = (function (){var G__333870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333871 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333870,G__333871) : tailrecursion.hoplon.span.call(null,G__333870,G__333871));
})();
var G__333808 = " [";
var G__333809 = (function (){var G__333872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333873 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333872,G__333873) : tailrecursion.hoplon.span.call(null,G__333872,G__333873));
})();
var G__333810 = "]\n  (";
var G__333811 = (function (){var G__333874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333875 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333874,G__333875) : tailrecursion.hoplon.span.call(null,G__333874,G__333875));
})();
var G__333812 = "(";
var G__333813 = (function (){var G__333876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333877 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333876,G__333877) : tailrecursion.hoplon.span.call(null,G__333876,G__333877));
})();
var G__333814 = " ";
var G__333815 = (function (){var G__333878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333879 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333878,G__333879) : tailrecursion.hoplon.span.call(null,G__333878,G__333879));
})();
var G__333816 = ")\n      (";
var G__333817 = (function (){var G__333880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333881 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333880,G__333881) : tailrecursion.hoplon.span.call(null,G__333880,G__333881));
})();
var G__333818 = "(";
var G__333819 = (function (){var G__333882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333883 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333882,G__333883) : tailrecursion.hoplon.span.call(null,G__333882,G__333883));
})();
var G__333820 = " ";
var G__333821 = (function (){var G__333884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333885 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333884,G__333885) : tailrecursion.hoplon.span.call(null,G__333884,G__333885));
})();
var G__333822 = "))\n      (";
var G__333823 = (function (){var G__333886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333887 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333886,G__333887) : tailrecursion.hoplon.span.call(null,G__333886,G__333887));
})();
var G__333824 = (function (){var G__333888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333889 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333888,G__333889) : tailrecursion.hoplon.span.call(null,G__333888,G__333889));
})();
var G__333825 = " ";
var G__333826 = (function (){var G__333890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__333891 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333890,G__333891) : tailrecursion.hoplon.span.call(null,G__333890,G__333891));
})();
var G__333827 = ")))\n(";
var G__333828 = (function (){var G__333892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333893 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333892,G__333893) : tailrecursion.hoplon.span.call(null,G__333892,G__333893));
})();
var G__333829 = (function (){var G__333894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333895 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333894,G__333895) : tailrecursion.hoplon.span.call(null,G__333894,G__333895));
})();
var G__333830 = " [";
var G__333831 = (function (){var G__333896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333897 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333896,G__333897) : tailrecursion.hoplon.span.call(null,G__333896,G__333897));
})();
var G__333832 = "]\n  (";
var G__333833 = (function (){var G__333898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333899 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333898,G__333899) : tailrecursion.hoplon.span.call(null,G__333898,G__333899));
})();
var G__333834 = "(";
var G__333835 = (function (){var G__333900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333901 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333900,G__333901) : tailrecursion.hoplon.span.call(null,G__333900,G__333901));
})();
var G__333836 = " ";
var G__333837 = (function (){var G__333902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333903 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333902,G__333903) : tailrecursion.hoplon.span.call(null,G__333902,G__333903));
})();
var G__333838 = ")\n      (";
var G__333839 = (function (){var G__333904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333905 = "weight-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333904,G__333905) : tailrecursion.hoplon.span.call(null,G__333904,G__333905));
})();
var G__333840 = " ";
var G__333841 = (function (){var G__333906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333907 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333906,G__333907) : tailrecursion.hoplon.span.call(null,G__333906,G__333907));
})();
var G__333842 = ")\n      (";
var G__333843 = (function (){var G__333908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333909 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333908,G__333909) : tailrecursion.hoplon.span.call(null,G__333908,G__333909));
})();
var G__333844 = (function (){var G__333910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333911 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333910,G__333911) : tailrecursion.hoplon.span.call(null,G__333910,G__333911));
})();
var G__333845 = " ";
var G__333846 = (function (){var G__333912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__333913 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333912,G__333913) : tailrecursion.hoplon.span.call(null,G__333912,G__333913));
})();
var G__333847 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__333788,G__333789,G__333790,G__333791,G__333792,G__333793,G__333794,G__333795,G__333796,G__333797,G__333798,G__333799,G__333800,G__333801,G__333802,G__333803,G__333804,G__333805,G__333806,G__333807,G__333808,G__333809,G__333810,G__333811,G__333812,G__333813,G__333814,G__333815,G__333816,G__333817,G__333818,G__333819,G__333820,G__333821,G__333822,G__333823,G__333824,G__333825,G__333826,G__333827,G__333828,G__333829,G__333830,G__333831,G__333832,G__333833,G__333834,G__333835,G__333836,G__333837,G__333838,G__333839,G__333840,G__333841,G__333842,G__333843,G__333844,G__333845,G__333846,G__333847) : tailrecursion.hoplon.pre.call(null,G__333788,G__333789,G__333790,G__333791,G__333792,G__333793,G__333794,G__333795,G__333796,G__333797,G__333798,G__333799,G__333800,G__333801,G__333802,G__333803,G__333804,G__333805,G__333806,G__333807,G__333808,G__333809,G__333810,G__333811,G__333812,G__333813,G__333814,G__333815,G__333816,G__333817,G__333818,G__333819,G__333820,G__333821,G__333822,G__333823,G__333824,G__333825,G__333826,G__333827,G__333828,G__333829,G__333830,G__333831,G__333832,G__333833,G__333834,G__333835,G__333836,G__333837,G__333838,G__333839,G__333840,G__333841,G__333842,G__333843,G__333844,G__333845,G__333846,G__333847));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333786,G__333787) : tailrecursion.hoplon.div.call(null,G__333786,G__333787));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333785) : tailrecursion.hoplon.div.call(null,G__333785));
})(),(function (){var G__333914 = cljs.core.PersistentArrayMap.EMPTY;
var G__333915 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedures ",(function (){var G__333916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbols"], null);
var G__333917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333916,G__333917) : tailrecursion.hoplon.markdown.code_node.call(null,G__333916,G__333917));
})()," and ",(function (){var G__333918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"weight"], null);
var G__333919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333918,G__333919) : tailrecursion.hoplon.markdown.code_node.call(null,G__333918,G__333919));
})()," must do something slightly different depending on whether they are called with a leaf or a general tree. These are simple examples of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["generic procedures"], null)], 0))," (procedures that can handle more than one kind of data), which we will have much more to say about in sections 2.4 and 2.5."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333914,G__333915) : tailrecursion.hoplon.markdown.para_node.call(null,G__333914,G__333915));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333308;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333307;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333306;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333305;
}})()], 0));
var G__320087 = "";
var G__320088 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Decoding Procedure"], null),(function (){var _STAR_references_STAR_333920 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333921 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333922 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333923 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333924 = cljs.core.PersistentArrayMap.EMPTY;
var G__333925 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure implements the decoding algorithm. It takes as arguments a list of zeros and ones, together with a Huffman tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333924,G__333925) : tailrecursion.hoplon.markdown.para_node.call(null,G__333924,G__333925));
})(),(function (){var G__334156 = (function (){var G__334157 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__334158 = (function (){var G__334159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__334160 = "(";
var G__334161 = (function (){var G__334269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334270 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334269,G__334270) : tailrecursion.hoplon.span.call(null,G__334269,G__334270));
})();
var G__334162 = (function (){var G__334271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334272 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334271,G__334272) : tailrecursion.hoplon.span.call(null,G__334271,G__334272));
})();
var G__334163 = " [";
var G__334164 = (function (){var G__334273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334274 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334273,G__334274) : tailrecursion.hoplon.span.call(null,G__334273,G__334274));
})();
var G__334165 = " ";
var G__334166 = (function (){var G__334275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334276 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334275,G__334276) : tailrecursion.hoplon.span.call(null,G__334275,G__334276));
})();
var G__334167 = "]\n  (";
var G__334168 = (function (){var G__334277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334278 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334277,G__334278) : tailrecursion.hoplon.span.call(null,G__334277,G__334278));
})();
var G__334169 = "(";
var G__334170 = (function (){var G__334279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334280 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334279,G__334280) : tailrecursion.hoplon.span.call(null,G__334279,G__334280));
})();
var G__334171 = (function (){var G__334281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334282 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334281,G__334282) : tailrecursion.hoplon.span.call(null,G__334281,G__334282));
})();
var G__334172 = " ";
var G__334173 = (function (){var G__334283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334284 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334283,G__334284) : tailrecursion.hoplon.span.call(null,G__334283,G__334284));
})();
var G__334174 = ") (";
var G__334175 = (function (){var G__334285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334286 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334285,G__334286) : tailrecursion.hoplon.span.call(null,G__334285,G__334286));
})();
var G__334176 = " ";
var G__334177 = (function (){var G__334287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334288 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334287,G__334288) : tailrecursion.hoplon.span.call(null,G__334287,G__334288));
})();
var G__334178 = ")\n        (";
var G__334179 = (function (){var G__334289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334290 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334289,G__334290) : tailrecursion.hoplon.span.call(null,G__334289,G__334290));
})();
var G__334180 = (function (){var G__334291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334292 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334291,G__334292) : tailrecursion.hoplon.span.call(null,G__334291,G__334292));
})();
var G__334181 = " ";
var G__334182 = (function (){var G__334293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334294 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334293,G__334294) : tailrecursion.hoplon.span.call(null,G__334293,G__334294));
})();
var G__334183 = ") (";
var G__334184 = (function (){var G__334295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334296 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334295,G__334296) : tailrecursion.hoplon.span.call(null,G__334295,G__334296));
})();
var G__334185 = " ";
var G__334186 = (function (){var G__334297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334298 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334297,G__334298) : tailrecursion.hoplon.span.call(null,G__334297,G__334298));
})();
var G__334187 = ")\n        ";
var G__334188 = (function (){var G__334299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334300 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334299,G__334300) : tailrecursion.hoplon.span.call(null,G__334299,G__334300));
})();
var G__334189 = " (";
var G__334190 = (function (){var G__334301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334302 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334301,G__334302) : tailrecursion.hoplon.span.call(null,G__334301,G__334302));
})();
var G__334191 = " (";
var G__334192 = (function (){var G__334303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334304 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334303,G__334304) : tailrecursion.hoplon.span.call(null,G__334303,G__334304));
})();
var G__334193 = " (";
var G__334194 = (function (){var G__334305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334306 = "str ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334305,G__334306) : tailrecursion.hoplon.span.call(null,G__334305,G__334306));
})();
var G__334195 = (function (){var G__334307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__334308 = "\"Bad bit -- CHOOSE-BRANCH \"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334307,G__334308) : tailrecursion.hoplon.span.call(null,G__334307,G__334308));
})();
var G__334196 = " ";
var G__334197 = (function (){var G__334309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334310 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334309,G__334310) : tailrecursion.hoplon.span.call(null,G__334309,G__334310));
})();
var G__334198 = ")))))\n\n(";
var G__334199 = (function (){var G__334311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334312 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334311,G__334312) : tailrecursion.hoplon.span.call(null,G__334311,G__334312));
})();
var G__334200 = (function (){var G__334313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334314 = "decode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334313,G__334314) : tailrecursion.hoplon.span.call(null,G__334313,G__334314));
})();
var G__334201 = " [";
var G__334202 = (function (){var G__334315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334316 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334315,G__334316) : tailrecursion.hoplon.span.call(null,G__334315,G__334316));
})();
var G__334203 = " ";
var G__334204 = (function (){var G__334317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334318 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334317,G__334318) : tailrecursion.hoplon.span.call(null,G__334317,G__334318));
})();
var G__334205 = "]\n  (";
var G__334206 = (function (){var G__334319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334320 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334319,G__334320) : tailrecursion.hoplon.span.call(null,G__334319,G__334320));
})();
var G__334207 = "[";
var G__334208 = (function (){var G__334321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334322 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334321,G__334322) : tailrecursion.hoplon.span.call(null,G__334321,G__334322));
})();
var G__334209 = " ";
var G__334210 = (function (){var G__334323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334324 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334323,G__334324) : tailrecursion.hoplon.span.call(null,G__334323,G__334324));
})();
var G__334211 = "()\n         ";
var G__334212 = (function (){var G__334325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334326 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334325,G__334326) : tailrecursion.hoplon.span.call(null,G__334325,G__334326));
})();
var G__334213 = " ";
var G__334214 = (function (){var G__334327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334328 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334327,G__334328) : tailrecursion.hoplon.span.call(null,G__334327,G__334328));
})();
var G__334215 = "\n         ";
var G__334216 = (function (){var G__334329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334330 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334329,G__334330) : tailrecursion.hoplon.span.call(null,G__334329,G__334330));
})();
var G__334217 = " ";
var G__334218 = (function (){var G__334331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334332 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334331,G__334332) : tailrecursion.hoplon.span.call(null,G__334331,G__334332));
})();
var G__334219 = "]\n    (";
var G__334220 = (function (){var G__334333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334334 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334333,G__334334) : tailrecursion.hoplon.span.call(null,G__334333,G__334334));
})();
var G__334221 = "(";
var G__334222 = (function (){var G__334335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334336 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334335,G__334336) : tailrecursion.hoplon.span.call(null,G__334335,G__334336));
})();
var G__334223 = " ";
var G__334224 = (function (){var G__334337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334338 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334337,G__334338) : tailrecursion.hoplon.span.call(null,G__334337,G__334338));
})();
var G__334225 = ") (";
var G__334226 = (function (){var G__334339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334340 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334339,G__334340) : tailrecursion.hoplon.span.call(null,G__334339,G__334340));
})();
var G__334227 = (function (){var G__334341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334342 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334341,G__334342) : tailrecursion.hoplon.span.call(null,G__334341,G__334342));
})();
var G__334228 = ")\n      (";
var G__334229 = (function (){var G__334343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334344 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334343,G__334344) : tailrecursion.hoplon.span.call(null,G__334343,G__334344));
})();
var G__334230 = "[";
var G__334231 = (function (){var G__334345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334346 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334345,G__334346) : tailrecursion.hoplon.span.call(null,G__334345,G__334346));
})();
var G__334232 = "(";
var G__334233 = (function (){var G__334347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334348 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334347,G__334348) : tailrecursion.hoplon.span.call(null,G__334347,G__334348));
})();
var G__334234 = " (";
var G__334235 = (function (){var G__334349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334350 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334349,G__334350) : tailrecursion.hoplon.span.call(null,G__334349,G__334350));
})();
var G__334236 = (function (){var G__334351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334352 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334351,G__334352) : tailrecursion.hoplon.span.call(null,G__334351,G__334352));
})();
var G__334237 = ") ";
var G__334238 = (function (){var G__334353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334354 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334353,G__334354) : tailrecursion.hoplon.span.call(null,G__334353,G__334354));
})();
var G__334239 = ")]\n        (";
var G__334240 = (function (){var G__334355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334356 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334355,G__334356) : tailrecursion.hoplon.span.call(null,G__334355,G__334356));
})();
var G__334241 = "(";
var G__334242 = (function (){var G__334357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334358 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334357,G__334358) : tailrecursion.hoplon.span.call(null,G__334357,G__334358));
})();
var G__334243 = " ";
var G__334244 = (function (){var G__334359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334360 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334359,G__334360) : tailrecursion.hoplon.span.call(null,G__334359,G__334360));
})();
var G__334245 = ")\n            (";
var G__334246 = (function (){var G__334361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334362 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334361,G__334362) : tailrecursion.hoplon.span.call(null,G__334361,G__334362));
})();
var G__334247 = " (";
var G__334248 = (function (){var G__334363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334364 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334363,G__334364) : tailrecursion.hoplon.span.call(null,G__334363,G__334364));
})();
var G__334249 = (function (){var G__334365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334366 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334365,G__334366) : tailrecursion.hoplon.span.call(null,G__334365,G__334366));
})();
var G__334250 = " (";
var G__334251 = (function (){var G__334367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334368 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334367,G__334368) : tailrecursion.hoplon.span.call(null,G__334367,G__334368));
})();
var G__334252 = " ";
var G__334253 = (function (){var G__334369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334370 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334369,G__334370) : tailrecursion.hoplon.span.call(null,G__334369,G__334370));
})();
var G__334254 = "))\n                   (";
var G__334255 = (function (){var G__334371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334372 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334371,G__334372) : tailrecursion.hoplon.span.call(null,G__334371,G__334372));
})();
var G__334256 = (function (){var G__334373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334374 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334373,G__334374) : tailrecursion.hoplon.span.call(null,G__334373,G__334374));
})();
var G__334257 = ")\n                   ";
var G__334258 = (function (){var G__334375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334376 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334375,G__334376) : tailrecursion.hoplon.span.call(null,G__334375,G__334376));
})();
var G__334259 = ")\n            (";
var G__334260 = (function (){var G__334377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334378 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334377,G__334378) : tailrecursion.hoplon.span.call(null,G__334377,G__334378));
})();
var G__334261 = " ";
var G__334262 = (function (){var G__334379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334380 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334379,G__334380) : tailrecursion.hoplon.span.call(null,G__334379,G__334380));
})();
var G__334263 = " (";
var G__334264 = (function (){var G__334381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334382 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334381,G__334382) : tailrecursion.hoplon.span.call(null,G__334381,G__334382));
})();
var G__334265 = (function (){var G__334383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334384 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334383,G__334384) : tailrecursion.hoplon.span.call(null,G__334383,G__334384));
})();
var G__334266 = ") ";
var G__334267 = (function (){var G__334385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334386 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334385,G__334386) : tailrecursion.hoplon.span.call(null,G__334385,G__334386));
})();
var G__334268 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$110 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$110(G__334159,G__334160,G__334161,G__334162,G__334163,G__334164,G__334165,G__334166,G__334167,G__334168,G__334169,G__334170,G__334171,G__334172,G__334173,G__334174,G__334175,G__334176,G__334177,G__334178,G__334179,G__334180,G__334181,G__334182,G__334183,G__334184,G__334185,G__334186,G__334187,G__334188,G__334189,G__334190,G__334191,G__334192,G__334193,G__334194,G__334195,G__334196,G__334197,G__334198,G__334199,G__334200,G__334201,G__334202,G__334203,G__334204,G__334205,G__334206,G__334207,G__334208,G__334209,G__334210,G__334211,G__334212,G__334213,G__334214,G__334215,G__334216,G__334217,G__334218,G__334219,G__334220,G__334221,G__334222,G__334223,G__334224,G__334225,G__334226,G__334227,G__334228,G__334229,G__334230,G__334231,G__334232,G__334233,G__334234,G__334235,G__334236,G__334237,G__334238,G__334239,G__334240,G__334241,G__334242,G__334243,G__334244,G__334245,G__334246,G__334247,G__334248,G__334249,G__334250,G__334251,G__334252,G__334253,G__334254,G__334255,G__334256,G__334257,G__334258,G__334259,G__334260,G__334261,G__334262,G__334263,G__334264,G__334265,G__334266,G__334267,G__334268) : tailrecursion.hoplon.pre.call(null,G__334159,G__334160,G__334161,G__334162,G__334163,G__334164,G__334165,G__334166,G__334167,G__334168,G__334169,G__334170,G__334171,G__334172,G__334173,G__334174,G__334175,G__334176,G__334177,G__334178,G__334179,G__334180,G__334181,G__334182,G__334183,G__334184,G__334185,G__334186,G__334187,G__334188,G__334189,G__334190,G__334191,G__334192,G__334193,G__334194,G__334195,G__334196,G__334197,G__334198,G__334199,G__334200,G__334201,G__334202,G__334203,G__334204,G__334205,G__334206,G__334207,G__334208,G__334209,G__334210,G__334211,G__334212,G__334213,G__334214,G__334215,G__334216,G__334217,G__334218,G__334219,G__334220,G__334221,G__334222,G__334223,G__334224,G__334225,G__334226,G__334227,G__334228,G__334229,G__334230,G__334231,G__334232,G__334233,G__334234,G__334235,G__334236,G__334237,G__334238,G__334239,G__334240,G__334241,G__334242,G__334243,G__334244,G__334245,G__334246,G__334247,G__334248,G__334249,G__334250,G__334251,G__334252,G__334253,G__334254,G__334255,G__334256,G__334257,G__334258,G__334259,G__334260,G__334261,G__334262,G__334263,G__334264,G__334265,G__334266,G__334267,G__334268));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__334157,G__334158) : tailrecursion.hoplon.div.call(null,G__334157,G__334158));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__334156) : tailrecursion.hoplon.div.call(null,G__334156));
})(),(function (){var G__334387 = cljs.core.PersistentArrayMap.EMPTY;
var G__334388 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__334389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__334390 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334389,G__334390) : tailrecursion.hoplon.markdown.code_node.call(null,G__334389,G__334390));
})()," in this procedure moves ",(function (){var G__334391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__334392 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["down"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__334391,G__334392) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__334391,G__334392));
})()," the tree, choosing a left or a right branch according to whether the next bit in the list is a zero or a one. (This is done with the procedure ",(function (){var G__334393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"choose-branch"], null);
var G__334394 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334393,G__334394) : tailrecursion.hoplon.markdown.code_node.call(null,G__334393,G__334394));
})(),".) When it reaches a leaf, it returns the symbol at that leaf as the next symbol in the message by ",(function (){var G__334395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__334396 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334395,G__334396) : tailrecursion.hoplon.markdown.code_node.call(null,G__334395,G__334396));
})(),"ing it onto the accumulator (",(function (){var G__334397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accu"], null);
var G__334398 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334397,G__334398) : tailrecursion.hoplon.markdown.code_node.call(null,G__334397,G__334398));
})(),"). Note the error check in the final clause of choose-branch, which complains if the procedure finds something other than a zero or a one in the input data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__334387,G__334388) : tailrecursion.hoplon.markdown.para_node.call(null,G__334387,G__334388));
})(),(function (){var G__334399 = cljs.core.PersistentArrayMap.EMPTY;
var G__334400 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As a little supplemental exercise, tweak the ",(function (){var G__334401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"decode"], null);
var G__334402 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334401,G__334402) : tailrecursion.hoplon.markdown.code_node.call(null,G__334401,G__334402));
})()," procedure to warn the user if the decoding ends on a node rather than a leaf."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__334399,G__334400) : tailrecursion.hoplon.markdown.para_node.call(null,G__334399,G__334400));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333923;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333922;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333921;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333920;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_334403 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_334404 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_334405 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_334406 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__334595 = (function (){var G__334596 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__334597 = (function (){var G__334598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__334599 = "(";
var G__334600 = (function (){var G__334688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334689 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334688,G__334689) : tailrecursion.hoplon.span.call(null,G__334688,G__334689));
})();
var G__334601 = (function (){var G__334690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334691 = "decode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334690,G__334691) : tailrecursion.hoplon.span.call(null,G__334690,G__334691));
})();
var G__334602 = " [";
var G__334603 = (function (){var G__334692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334693 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334692,G__334693) : tailrecursion.hoplon.span.call(null,G__334692,G__334693));
})();
var G__334604 = " ";
var G__334605 = (function (){var G__334694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334695 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334694,G__334695) : tailrecursion.hoplon.span.call(null,G__334694,G__334695));
})();
var G__334606 = "]\n  (";
var G__334607 = (function (){var G__334696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334697 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334696,G__334697) : tailrecursion.hoplon.span.call(null,G__334696,G__334697));
})();
var G__334608 = "[";
var G__334609 = (function (){var G__334698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334699 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334698,G__334699) : tailrecursion.hoplon.span.call(null,G__334698,G__334699));
})();
var G__334610 = " ";
var G__334611 = (function (){var G__334700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334701 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334700,G__334701) : tailrecursion.hoplon.span.call(null,G__334700,G__334701));
})();
var G__334612 = "()\n         ";
var G__334613 = (function (){var G__334702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334703 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334702,G__334703) : tailrecursion.hoplon.span.call(null,G__334702,G__334703));
})();
var G__334614 = " ";
var G__334615 = (function (){var G__334704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334705 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334704,G__334705) : tailrecursion.hoplon.span.call(null,G__334704,G__334705));
})();
var G__334616 = "\n         ";
var G__334617 = (function (){var G__334706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334707 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334706,G__334707) : tailrecursion.hoplon.span.call(null,G__334706,G__334707));
})();
var G__334618 = " ";
var G__334619 = (function (){var G__334708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334709 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334708,G__334709) : tailrecursion.hoplon.span.call(null,G__334708,G__334709));
})();
var G__334620 = "]\n    (";
var G__334621 = (function (){var G__334710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334711 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334710,G__334711) : tailrecursion.hoplon.span.call(null,G__334710,G__334711));
})();
var G__334622 = "(";
var G__334623 = (function (){var G__334712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334713 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334712,G__334713) : tailrecursion.hoplon.span.call(null,G__334712,G__334713));
})();
var G__334624 = " ";
var G__334625 = (function (){var G__334714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334715 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334714,G__334715) : tailrecursion.hoplon.span.call(null,G__334714,G__334715));
})();
var G__334626 = ") \n      (";
var G__334627 = (function (){var G__334716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334717 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334716,G__334717) : tailrecursion.hoplon.span.call(null,G__334716,G__334717));
})();
var G__334628 = "(";
var G__334629 = (function (){var G__334718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334719 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334718,G__334719) : tailrecursion.hoplon.span.call(null,G__334718,G__334719));
})();
var G__334630 = (function (){var G__334720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334721 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334720,G__334721) : tailrecursion.hoplon.span.call(null,G__334720,G__334721));
})();
var G__334631 = " ";
var G__334632 = (function (){var G__334722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334723 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334722,G__334723) : tailrecursion.hoplon.span.call(null,G__334722,G__334723));
})();
var G__334633 = ")\n          (";
var G__334634 = (function (){var G__334724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334725 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334724,G__334725) : tailrecursion.hoplon.span.call(null,G__334724,G__334725));
})();
var G__334635 = (function (){var G__334726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334727 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334726,G__334727) : tailrecursion.hoplon.span.call(null,G__334726,G__334727));
})();
var G__334636 = ")\n          (";
var G__334637 = (function (){var G__334728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334729 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334728,G__334729) : tailrecursion.hoplon.span.call(null,G__334728,G__334729));
})();
var G__334638 = "(";
var G__334639 = (function (){var G__334730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334731 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334730,G__334731) : tailrecursion.hoplon.span.call(null,G__334730,G__334731));
})();
var G__334640 = " (";
var G__334641 = (function (){var G__334732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334733 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334732,G__334733) : tailrecursion.hoplon.span.call(null,G__334732,G__334733));
})();
var G__334642 = " ";
var G__334643 = (function (){var G__334734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__334735 = "\"Error: DECODE ended on a partial code.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334734,G__334735) : tailrecursion.hoplon.span.call(null,G__334734,G__334735));
})();
var G__334644 = "))\n              (";
var G__334645 = (function (){var G__334736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334737 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334736,G__334737) : tailrecursion.hoplon.span.call(null,G__334736,G__334737));
})();
var G__334646 = (function (){var G__334738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334739 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334738,G__334739) : tailrecursion.hoplon.span.call(null,G__334738,G__334739));
})();
var G__334647 = ")))\n      (";
var G__334648 = (function (){var G__334740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334741 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334740,G__334741) : tailrecursion.hoplon.span.call(null,G__334740,G__334741));
})();
var G__334649 = "[";
var G__334650 = (function (){var G__334742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334743 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334742,G__334743) : tailrecursion.hoplon.span.call(null,G__334742,G__334743));
})();
var G__334651 = "(";
var G__334652 = (function (){var G__334744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334745 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334744,G__334745) : tailrecursion.hoplon.span.call(null,G__334744,G__334745));
})();
var G__334653 = " (";
var G__334654 = (function (){var G__334746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334747 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334746,G__334747) : tailrecursion.hoplon.span.call(null,G__334746,G__334747));
})();
var G__334655 = (function (){var G__334748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334749 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334748,G__334749) : tailrecursion.hoplon.span.call(null,G__334748,G__334749));
})();
var G__334656 = ") ";
var G__334657 = (function (){var G__334750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334751 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334750,G__334751) : tailrecursion.hoplon.span.call(null,G__334750,G__334751));
})();
var G__334658 = ")]\n        (";
var G__334659 = (function (){var G__334752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334753 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334752,G__334753) : tailrecursion.hoplon.span.call(null,G__334752,G__334753));
})();
var G__334660 = "(";
var G__334661 = (function (){var G__334754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334755 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334754,G__334755) : tailrecursion.hoplon.span.call(null,G__334754,G__334755));
})();
var G__334662 = " ";
var G__334663 = (function (){var G__334756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334757 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334756,G__334757) : tailrecursion.hoplon.span.call(null,G__334756,G__334757));
})();
var G__334664 = ") (";
var G__334665 = (function (){var G__334758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334759 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334758,G__334759) : tailrecursion.hoplon.span.call(null,G__334758,G__334759));
})();
var G__334666 = " (";
var G__334667 = (function (){var G__334760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334761 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334760,G__334761) : tailrecursion.hoplon.span.call(null,G__334760,G__334761));
})();
var G__334668 = (function (){var G__334762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334763 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334762,G__334763) : tailrecursion.hoplon.span.call(null,G__334762,G__334763));
})();
var G__334669 = " (";
var G__334670 = (function (){var G__334764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334765 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334764,G__334765) : tailrecursion.hoplon.span.call(null,G__334764,G__334765));
})();
var G__334671 = " ";
var G__334672 = (function (){var G__334766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334767 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334766,G__334767) : tailrecursion.hoplon.span.call(null,G__334766,G__334767));
})();
var G__334673 = "))\n                                (";
var G__334674 = (function (){var G__334768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334769 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334768,G__334769) : tailrecursion.hoplon.span.call(null,G__334768,G__334769));
})();
var G__334675 = (function (){var G__334770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334771 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334770,G__334771) : tailrecursion.hoplon.span.call(null,G__334770,G__334771));
})();
var G__334676 = ")\n                                ";
var G__334677 = (function (){var G__334772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334773 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334772,G__334773) : tailrecursion.hoplon.span.call(null,G__334772,G__334773));
})();
var G__334678 = ")\n            (";
var G__334679 = (function (){var G__334774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334775 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334774,G__334775) : tailrecursion.hoplon.span.call(null,G__334774,G__334775));
})();
var G__334680 = " ";
var G__334681 = (function (){var G__334776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334777 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334776,G__334777) : tailrecursion.hoplon.span.call(null,G__334776,G__334777));
})();
var G__334682 = " (";
var G__334683 = (function (){var G__334778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334779 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334778,G__334779) : tailrecursion.hoplon.span.call(null,G__334778,G__334779));
})();
var G__334684 = (function (){var G__334780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334781 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334780,G__334781) : tailrecursion.hoplon.span.call(null,G__334780,G__334781));
})();
var G__334685 = ") ";
var G__334686 = (function (){var G__334782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334783 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334782,G__334783) : tailrecursion.hoplon.span.call(null,G__334782,G__334783));
})();
var G__334687 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90(G__334598,G__334599,G__334600,G__334601,G__334602,G__334603,G__334604,G__334605,G__334606,G__334607,G__334608,G__334609,G__334610,G__334611,G__334612,G__334613,G__334614,G__334615,G__334616,G__334617,G__334618,G__334619,G__334620,G__334621,G__334622,G__334623,G__334624,G__334625,G__334626,G__334627,G__334628,G__334629,G__334630,G__334631,G__334632,G__334633,G__334634,G__334635,G__334636,G__334637,G__334638,G__334639,G__334640,G__334641,G__334642,G__334643,G__334644,G__334645,G__334646,G__334647,G__334648,G__334649,G__334650,G__334651,G__334652,G__334653,G__334654,G__334655,G__334656,G__334657,G__334658,G__334659,G__334660,G__334661,G__334662,G__334663,G__334664,G__334665,G__334666,G__334667,G__334668,G__334669,G__334670,G__334671,G__334672,G__334673,G__334674,G__334675,G__334676,G__334677,G__334678,G__334679,G__334680,G__334681,G__334682,G__334683,G__334684,G__334685,G__334686,G__334687) : tailrecursion.hoplon.pre.call(null,G__334598,G__334599,G__334600,G__334601,G__334602,G__334603,G__334604,G__334605,G__334606,G__334607,G__334608,G__334609,G__334610,G__334611,G__334612,G__334613,G__334614,G__334615,G__334616,G__334617,G__334618,G__334619,G__334620,G__334621,G__334622,G__334623,G__334624,G__334625,G__334626,G__334627,G__334628,G__334629,G__334630,G__334631,G__334632,G__334633,G__334634,G__334635,G__334636,G__334637,G__334638,G__334639,G__334640,G__334641,G__334642,G__334643,G__334644,G__334645,G__334646,G__334647,G__334648,G__334649,G__334650,G__334651,G__334652,G__334653,G__334654,G__334655,G__334656,G__334657,G__334658,G__334659,G__334660,G__334661,G__334662,G__334663,G__334664,G__334665,G__334666,G__334667,G__334668,G__334669,G__334670,G__334671,G__334672,G__334673,G__334674,G__334675,G__334676,G__334677,G__334678,G__334679,G__334680,G__334681,G__334682,G__334683,G__334684,G__334685,G__334686,G__334687));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__334596,G__334597) : tailrecursion.hoplon.div.call(null,G__334596,G__334597));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__334595) : tailrecursion.hoplon.div.call(null,G__334595));
})(),(function (){var G__334784 = cljs.core.PersistentArrayMap.EMPTY;
var G__334785 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But with that, we notice that we have to determine equality of trees, which is probably a very taxing procedure. To shorten it, we can instead compare their respective weights. Since we are guaranteed that ",(function (){var G__334786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree"], null);
var G__334787 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334786,G__334787) : tailrecursion.hoplon.markdown.code_node.call(null,G__334786,G__334787));
})()," will either be ",(function (){var G__334788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"huffman-tree"], null);
var G__334789 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334788,G__334789) : tailrecursion.hoplon.markdown.code_node.call(null,G__334788,G__334789));
})()," or a subtree of it, we know that if their respective weights are equal, ",(function (){var G__334790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree"], null);
var G__334791 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334790,G__334791) : tailrecursion.hoplon.markdown.code_node.call(null,G__334790,G__334791));
})()," must be ",(function (){var G__334792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"huffman-tree"], null);
var G__334793 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334792,G__334793) : tailrecursion.hoplon.markdown.code_node.call(null,G__334792,G__334793));
})(),". So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__334784,G__334785) : tailrecursion.hoplon.markdown.para_node.call(null,G__334784,G__334785));
})(),(function (){var G__334991 = (function (){var G__334992 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__334993 = (function (){var G__334994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__334995 = "(";
var G__334996 = (function (){var G__335089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335090 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335089,G__335090) : tailrecursion.hoplon.span.call(null,G__335089,G__335090));
})();
var G__334997 = (function (){var G__335091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335092 = "decode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335091,G__335092) : tailrecursion.hoplon.span.call(null,G__335091,G__335092));
})();
var G__334998 = " [";
var G__334999 = (function (){var G__335093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335094 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335093,G__335094) : tailrecursion.hoplon.span.call(null,G__335093,G__335094));
})();
var G__335000 = " ";
var G__335001 = (function (){var G__335095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335096 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335095,G__335096) : tailrecursion.hoplon.span.call(null,G__335095,G__335096));
})();
var G__335002 = "]\n  (";
var G__335003 = (function (){var G__335097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335098 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335097,G__335098) : tailrecursion.hoplon.span.call(null,G__335097,G__335098));
})();
var G__335004 = "[";
var G__335005 = (function (){var G__335099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335100 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335099,G__335100) : tailrecursion.hoplon.span.call(null,G__335099,G__335100));
})();
var G__335006 = " ";
var G__335007 = (function (){var G__335101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335102 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335101,G__335102) : tailrecursion.hoplon.span.call(null,G__335101,G__335102));
})();
var G__335008 = "()\n         ";
var G__335009 = (function (){var G__335103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335104 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335103,G__335104) : tailrecursion.hoplon.span.call(null,G__335103,G__335104));
})();
var G__335010 = " ";
var G__335011 = (function (){var G__335105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335106 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335105,G__335106) : tailrecursion.hoplon.span.call(null,G__335105,G__335106));
})();
var G__335012 = "\n         ";
var G__335013 = (function (){var G__335107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335108 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335107,G__335108) : tailrecursion.hoplon.span.call(null,G__335107,G__335108));
})();
var G__335014 = " ";
var G__335015 = (function (){var G__335109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335110 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335109,G__335110) : tailrecursion.hoplon.span.call(null,G__335109,G__335110));
})();
var G__335016 = "]\n    (";
var G__335017 = (function (){var G__335111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335112 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335111,G__335112) : tailrecursion.hoplon.span.call(null,G__335111,G__335112));
})();
var G__335018 = "(";
var G__335019 = (function (){var G__335113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335114 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335113,G__335114) : tailrecursion.hoplon.span.call(null,G__335113,G__335114));
})();
var G__335020 = " ";
var G__335021 = (function (){var G__335115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335116 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335115,G__335116) : tailrecursion.hoplon.span.call(null,G__335115,G__335116));
})();
var G__335022 = ") \n      (";
var G__335023 = (function (){var G__335117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335118 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335117,G__335118) : tailrecursion.hoplon.span.call(null,G__335117,G__335118));
})();
var G__335024 = "(";
var G__335025 = (function (){var G__335119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335120 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335119,G__335120) : tailrecursion.hoplon.span.call(null,G__335119,G__335120));
})();
var G__335026 = "(";
var G__335027 = (function (){var G__335121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335122 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335121,G__335122) : tailrecursion.hoplon.span.call(null,G__335121,G__335122));
})();
var G__335028 = " ";
var G__335029 = (function (){var G__335123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335124 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335123,G__335124) : tailrecursion.hoplon.span.call(null,G__335123,G__335124));
})();
var G__335030 = ") (";
var G__335031 = (function (){var G__335125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335126 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335125,G__335126) : tailrecursion.hoplon.span.call(null,G__335125,G__335126));
})();
var G__335032 = " ";
var G__335033 = (function (){var G__335127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335128 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335127,G__335128) : tailrecursion.hoplon.span.call(null,G__335127,G__335128));
})();
var G__335034 = "))\n          (";
var G__335035 = (function (){var G__335129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335130 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335129,G__335130) : tailrecursion.hoplon.span.call(null,G__335129,G__335130));
})();
var G__335036 = (function (){var G__335131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335132 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335131,G__335132) : tailrecursion.hoplon.span.call(null,G__335131,G__335132));
})();
var G__335037 = ")\n          (";
var G__335038 = (function (){var G__335133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335134 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335133,G__335134) : tailrecursion.hoplon.span.call(null,G__335133,G__335134));
})();
var G__335039 = "(";
var G__335040 = (function (){var G__335135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335136 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335135,G__335136) : tailrecursion.hoplon.span.call(null,G__335135,G__335136));
})();
var G__335041 = " (";
var G__335042 = (function (){var G__335137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335138 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335137,G__335138) : tailrecursion.hoplon.span.call(null,G__335137,G__335138));
})();
var G__335043 = " ";
var G__335044 = (function (){var G__335139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__335140 = "\"Error: DECODE ended on a partial code.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335139,G__335140) : tailrecursion.hoplon.span.call(null,G__335139,G__335140));
})();
var G__335045 = "))\n              (";
var G__335046 = (function (){var G__335141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335142 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335141,G__335142) : tailrecursion.hoplon.span.call(null,G__335141,G__335142));
})();
var G__335047 = (function (){var G__335143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335144 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335143,G__335144) : tailrecursion.hoplon.span.call(null,G__335143,G__335144));
})();
var G__335048 = ")))\n      (";
var G__335049 = (function (){var G__335145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335146 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335145,G__335146) : tailrecursion.hoplon.span.call(null,G__335145,G__335146));
})();
var G__335050 = "[";
var G__335051 = (function (){var G__335147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335148 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335147,G__335148) : tailrecursion.hoplon.span.call(null,G__335147,G__335148));
})();
var G__335052 = "(";
var G__335053 = (function (){var G__335149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335150 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335149,G__335150) : tailrecursion.hoplon.span.call(null,G__335149,G__335150));
})();
var G__335054 = " (";
var G__335055 = (function (){var G__335151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335152 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335151,G__335152) : tailrecursion.hoplon.span.call(null,G__335151,G__335152));
})();
var G__335056 = (function (){var G__335153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335154 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335153,G__335154) : tailrecursion.hoplon.span.call(null,G__335153,G__335154));
})();
var G__335057 = ") ";
var G__335058 = (function (){var G__335155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335156 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335155,G__335156) : tailrecursion.hoplon.span.call(null,G__335155,G__335156));
})();
var G__335059 = ")]\n        (";
var G__335060 = (function (){var G__335157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335158 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335157,G__335158) : tailrecursion.hoplon.span.call(null,G__335157,G__335158));
})();
var G__335061 = "(";
var G__335062 = (function (){var G__335159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335160 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335159,G__335160) : tailrecursion.hoplon.span.call(null,G__335159,G__335160));
})();
var G__335063 = " ";
var G__335064 = (function (){var G__335161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335162 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335161,G__335162) : tailrecursion.hoplon.span.call(null,G__335161,G__335162));
})();
var G__335065 = ") (";
var G__335066 = (function (){var G__335163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335164 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335163,G__335164) : tailrecursion.hoplon.span.call(null,G__335163,G__335164));
})();
var G__335067 = " (";
var G__335068 = (function (){var G__335165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335166 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335165,G__335166) : tailrecursion.hoplon.span.call(null,G__335165,G__335166));
})();
var G__335069 = (function (){var G__335167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335168 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335167,G__335168) : tailrecursion.hoplon.span.call(null,G__335167,G__335168));
})();
var G__335070 = " (";
var G__335071 = (function (){var G__335169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335170 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335169,G__335170) : tailrecursion.hoplon.span.call(null,G__335169,G__335170));
})();
var G__335072 = " ";
var G__335073 = (function (){var G__335171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335172 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335171,G__335172) : tailrecursion.hoplon.span.call(null,G__335171,G__335172));
})();
var G__335074 = "))\n                                (";
var G__335075 = (function (){var G__335173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335174 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335173,G__335174) : tailrecursion.hoplon.span.call(null,G__335173,G__335174));
})();
var G__335076 = (function (){var G__335175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335176 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335175,G__335176) : tailrecursion.hoplon.span.call(null,G__335175,G__335176));
})();
var G__335077 = ")\n                                ";
var G__335078 = (function (){var G__335177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335178 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335177,G__335178) : tailrecursion.hoplon.span.call(null,G__335177,G__335178));
})();
var G__335079 = ")\n            (";
var G__335080 = (function (){var G__335179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335180 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335179,G__335180) : tailrecursion.hoplon.span.call(null,G__335179,G__335180));
})();
var G__335081 = " ";
var G__335082 = (function (){var G__335181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335182 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335181,G__335182) : tailrecursion.hoplon.span.call(null,G__335181,G__335182));
})();
var G__335083 = " (";
var G__335084 = (function (){var G__335183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335184 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335183,G__335184) : tailrecursion.hoplon.span.call(null,G__335183,G__335184));
})();
var G__335085 = (function (){var G__335185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335186 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335185,G__335186) : tailrecursion.hoplon.span.call(null,G__335185,G__335186));
})();
var G__335086 = ") ";
var G__335087 = (function (){var G__335187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335188 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335187,G__335188) : tailrecursion.hoplon.span.call(null,G__335187,G__335188));
})();
var G__335088 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95(G__334994,G__334995,G__334996,G__334997,G__334998,G__334999,G__335000,G__335001,G__335002,G__335003,G__335004,G__335005,G__335006,G__335007,G__335008,G__335009,G__335010,G__335011,G__335012,G__335013,G__335014,G__335015,G__335016,G__335017,G__335018,G__335019,G__335020,G__335021,G__335022,G__335023,G__335024,G__335025,G__335026,G__335027,G__335028,G__335029,G__335030,G__335031,G__335032,G__335033,G__335034,G__335035,G__335036,G__335037,G__335038,G__335039,G__335040,G__335041,G__335042,G__335043,G__335044,G__335045,G__335046,G__335047,G__335048,G__335049,G__335050,G__335051,G__335052,G__335053,G__335054,G__335055,G__335056,G__335057,G__335058,G__335059,G__335060,G__335061,G__335062,G__335063,G__335064,G__335065,G__335066,G__335067,G__335068,G__335069,G__335070,G__335071,G__335072,G__335073,G__335074,G__335075,G__335076,G__335077,G__335078,G__335079,G__335080,G__335081,G__335082,G__335083,G__335084,G__335085,G__335086,G__335087,G__335088) : tailrecursion.hoplon.pre.call(null,G__334994,G__334995,G__334996,G__334997,G__334998,G__334999,G__335000,G__335001,G__335002,G__335003,G__335004,G__335005,G__335006,G__335007,G__335008,G__335009,G__335010,G__335011,G__335012,G__335013,G__335014,G__335015,G__335016,G__335017,G__335018,G__335019,G__335020,G__335021,G__335022,G__335023,G__335024,G__335025,G__335026,G__335027,G__335028,G__335029,G__335030,G__335031,G__335032,G__335033,G__335034,G__335035,G__335036,G__335037,G__335038,G__335039,G__335040,G__335041,G__335042,G__335043,G__335044,G__335045,G__335046,G__335047,G__335048,G__335049,G__335050,G__335051,G__335052,G__335053,G__335054,G__335055,G__335056,G__335057,G__335058,G__335059,G__335060,G__335061,G__335062,G__335063,G__335064,G__335065,G__335066,G__335067,G__335068,G__335069,G__335070,G__335071,G__335072,G__335073,G__335074,G__335075,G__335076,G__335077,G__335078,G__335079,G__335080,G__335081,G__335082,G__335083,G__335084,G__335085,G__335086,G__335087,G__335088));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__334992,G__334993) : tailrecursion.hoplon.div.call(null,G__334992,G__334993));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__334991) : tailrecursion.hoplon.div.call(null,G__334991));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_334406;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_334405;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_334404;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_334403;
}})()], 0))], 0));
var G__320089 = "\n";
var G__320090 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets of Weighted Elements"], null),(function (){var _STAR_references_STAR_335189 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335190 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335191 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335192 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335193 = cljs.core.PersistentArrayMap.EMPTY;
var G__335194 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In our representation of trees, each non-leaf node contains a set of symbols, which we have represented as a simple list. However, the tree-generating algorithm discussed above requires that we also work with sets of leaves and trees, successively merging the two smallest items. Since we will be required to repeatedly find the smallest item in a set, it is convenient to use an ordered representation for this kind of set."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335193,G__335194) : tailrecursion.hoplon.markdown.para_node.call(null,G__335193,G__335194));
})(),(function (){var G__335195 = cljs.core.PersistentArrayMap.EMPTY;
var G__335196 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We will represent a set of leaves and trees as a list of elements, arranged in increasing order of weight. The following ",(function (){var G__335197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__335198 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335197,G__335198) : tailrecursion.hoplon.markdown.code_node.call(null,G__335197,G__335198));
})()," procedure for constructing sets is similar to the one described in exercise 2.61; however, items are compared by their weights, and the element being added to the set is never already in it."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335195,G__335196) : tailrecursion.hoplon.markdown.para_node.call(null,G__335195,G__335196));
})(),(function (){var G__335297 = (function (){var G__335298 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335299 = (function (){var G__335300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335301 = "(";
var G__335302 = (function (){var G__335346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335347 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335346,G__335347) : tailrecursion.hoplon.span.call(null,G__335346,G__335347));
})();
var G__335303 = (function (){var G__335348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335349 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335348,G__335349) : tailrecursion.hoplon.span.call(null,G__335348,G__335349));
})();
var G__335304 = " [";
var G__335305 = (function (){var G__335350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335351 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335350,G__335351) : tailrecursion.hoplon.span.call(null,G__335350,G__335351));
})();
var G__335306 = " ";
var G__335307 = (function (){var G__335352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335353 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335352,G__335353) : tailrecursion.hoplon.span.call(null,G__335352,G__335353));
})();
var G__335308 = "]\n  (";
var G__335309 = (function (){var G__335354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335355 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335354,G__335355) : tailrecursion.hoplon.span.call(null,G__335354,G__335355));
})();
var G__335310 = "(";
var G__335311 = (function (){var G__335356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335357 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335356,G__335357) : tailrecursion.hoplon.span.call(null,G__335356,G__335357));
})();
var G__335312 = " ";
var G__335313 = (function (){var G__335358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335359 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335358,G__335359) : tailrecursion.hoplon.span.call(null,G__335358,G__335359));
})();
var G__335314 = ") (";
var G__335315 = (function (){var G__335360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335361 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335360,G__335361) : tailrecursion.hoplon.span.call(null,G__335360,G__335361));
})();
var G__335316 = (function (){var G__335362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335363 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335362,G__335363) : tailrecursion.hoplon.span.call(null,G__335362,G__335363));
})();
var G__335317 = ")\n        (";
var G__335318 = (function (){var G__335364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335365 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335364,G__335365) : tailrecursion.hoplon.span.call(null,G__335364,G__335365));
})();
var G__335319 = "(";
var G__335320 = (function (){var G__335366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335367 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335366,G__335367) : tailrecursion.hoplon.span.call(null,G__335366,G__335367));
})();
var G__335321 = " ";
var G__335322 = (function (){var G__335368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335369 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335368,G__335369) : tailrecursion.hoplon.span.call(null,G__335368,G__335369));
})();
var G__335323 = ") (";
var G__335324 = (function (){var G__335370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335371 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335370,G__335371) : tailrecursion.hoplon.span.call(null,G__335370,G__335371));
})();
var G__335325 = " (";
var G__335326 = (function (){var G__335372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335373 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335372,G__335373) : tailrecursion.hoplon.span.call(null,G__335372,G__335373));
})();
var G__335327 = (function (){var G__335374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335375 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335374,G__335375) : tailrecursion.hoplon.span.call(null,G__335374,G__335375));
})();
var G__335328 = ")))\n          (";
var G__335329 = (function (){var G__335376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335377 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335376,G__335377) : tailrecursion.hoplon.span.call(null,G__335376,G__335377));
})();
var G__335330 = (function (){var G__335378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335379 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335378,G__335379) : tailrecursion.hoplon.span.call(null,G__335378,G__335379));
})();
var G__335331 = ")\n        ";
var G__335332 = (function (){var G__335380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335381 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335380,G__335381) : tailrecursion.hoplon.span.call(null,G__335380,G__335381));
})();
var G__335333 = " (";
var G__335334 = (function (){var G__335382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335383 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335382,G__335383) : tailrecursion.hoplon.span.call(null,G__335382,G__335383));
})();
var G__335335 = "(";
var G__335336 = (function (){var G__335384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335385 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335384,G__335385) : tailrecursion.hoplon.span.call(null,G__335384,G__335385));
})();
var G__335337 = " ";
var G__335338 = (function (){var G__335386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335387 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335386,G__335387) : tailrecursion.hoplon.span.call(null,G__335386,G__335387));
})();
var G__335339 = " (";
var G__335340 = (function (){var G__335388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335389 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335388,G__335389) : tailrecursion.hoplon.span.call(null,G__335388,G__335389));
})();
var G__335341 = (function (){var G__335390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335391 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335390,G__335391) : tailrecursion.hoplon.span.call(null,G__335390,G__335391));
})();
var G__335342 = "))\n                    (";
var G__335343 = (function (){var G__335392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335393 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335392,G__335393) : tailrecursion.hoplon.span.call(null,G__335392,G__335393));
})();
var G__335344 = (function (){var G__335394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335395 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335394,G__335395) : tailrecursion.hoplon.span.call(null,G__335394,G__335395));
})();
var G__335345 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__335300,G__335301,G__335302,G__335303,G__335304,G__335305,G__335306,G__335307,G__335308,G__335309,G__335310,G__335311,G__335312,G__335313,G__335314,G__335315,G__335316,G__335317,G__335318,G__335319,G__335320,G__335321,G__335322,G__335323,G__335324,G__335325,G__335326,G__335327,G__335328,G__335329,G__335330,G__335331,G__335332,G__335333,G__335334,G__335335,G__335336,G__335337,G__335338,G__335339,G__335340,G__335341,G__335342,G__335343,G__335344,G__335345) : tailrecursion.hoplon.pre.call(null,G__335300,G__335301,G__335302,G__335303,G__335304,G__335305,G__335306,G__335307,G__335308,G__335309,G__335310,G__335311,G__335312,G__335313,G__335314,G__335315,G__335316,G__335317,G__335318,G__335319,G__335320,G__335321,G__335322,G__335323,G__335324,G__335325,G__335326,G__335327,G__335328,G__335329,G__335330,G__335331,G__335332,G__335333,G__335334,G__335335,G__335336,G__335337,G__335338,G__335339,G__335340,G__335341,G__335342,G__335343,G__335344,G__335345));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335298,G__335299) : tailrecursion.hoplon.div.call(null,G__335298,G__335299));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335297) : tailrecursion.hoplon.div.call(null,G__335297));
})(),(function (){var G__335396 = cljs.core.PersistentArrayMap.EMPTY;
var G__335397 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: If we want our program to deal with large lists, we would have to alter our ",(function (){var G__335398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__335399 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335398,G__335399) : tailrecursion.hoplon.markdown.code_node.call(null,G__335398,G__335399));
})()," procedure so as to avoid stack overflows. Design a non-recursive version of ",(function (){var G__335400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__335401 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335400,G__335401) : tailrecursion.hoplon.markdown.code_node.call(null,G__335400,G__335401));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335396,G__335397) : tailrecursion.hoplon.markdown.para_node.call(null,G__335396,G__335397));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335192;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335191;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335190;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335189;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_335402 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335403 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335404 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335405 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335546 = (function (){var G__335547 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335548 = (function (){var G__335549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335550 = "(";
var G__335551 = (function (){var G__335615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335616 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335615,G__335616) : tailrecursion.hoplon.span.call(null,G__335615,G__335616));
})();
var G__335552 = (function (){var G__335617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335618 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335617,G__335618) : tailrecursion.hoplon.span.call(null,G__335617,G__335618));
})();
var G__335553 = " [";
var G__335554 = (function (){var G__335619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335620 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335619,G__335620) : tailrecursion.hoplon.span.call(null,G__335619,G__335620));
})();
var G__335555 = " ";
var G__335556 = (function (){var G__335621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335622 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335621,G__335622) : tailrecursion.hoplon.span.call(null,G__335621,G__335622));
})();
var G__335557 = "]\n  (";
var G__335558 = (function (){var G__335623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335624 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335623,G__335624) : tailrecursion.hoplon.span.call(null,G__335623,G__335624));
})();
var G__335559 = "[";
var G__335560 = (function (){var G__335625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335626 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335625,G__335626) : tailrecursion.hoplon.span.call(null,G__335625,G__335626));
})();
var G__335561 = "   ";
var G__335562 = (function (){var G__335627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335628 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335627,G__335628) : tailrecursion.hoplon.span.call(null,G__335627,G__335628));
})();
var G__335563 = "()\n         ";
var G__335564 = (function (){var G__335629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335630 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335629,G__335630) : tailrecursion.hoplon.span.call(null,G__335629,G__335630));
})();
var G__335565 = " ";
var G__335566 = (function (){var G__335631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335632 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335631,G__335632) : tailrecursion.hoplon.span.call(null,G__335631,G__335632));
})();
var G__335567 = "]\n    (";
var G__335568 = (function (){var G__335633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335634 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335633,G__335634) : tailrecursion.hoplon.span.call(null,G__335633,G__335634));
})();
var G__335569 = "(";
var G__335570 = (function (){var G__335635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335636 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335635,G__335636) : tailrecursion.hoplon.span.call(null,G__335635,G__335636));
})();
var G__335571 = " ";
var G__335572 = (function (){var G__335637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335638 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335637,G__335638) : tailrecursion.hoplon.span.call(null,G__335637,G__335638));
})();
var G__335573 = ") (";
var G__335574 = (function (){var G__335639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335640 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335639,G__335640) : tailrecursion.hoplon.span.call(null,G__335639,G__335640));
})();
var G__335575 = "(";
var G__335576 = (function (){var G__335641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335642 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335641,G__335642) : tailrecursion.hoplon.span.call(null,G__335641,G__335642));
})();
var G__335577 = (function (){var G__335643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335644 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335643,G__335644) : tailrecursion.hoplon.span.call(null,G__335643,G__335644));
})();
var G__335578 = " ";
var G__335579 = (function (){var G__335645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335646 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335645,G__335646) : tailrecursion.hoplon.span.call(null,G__335645,G__335646));
})();
var G__335580 = "))\n          (";
var G__335581 = (function (){var G__335647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335648 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335647,G__335648) : tailrecursion.hoplon.span.call(null,G__335647,G__335648));
})();
var G__335582 = "(";
var G__335583 = (function (){var G__335649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335650 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335649,G__335650) : tailrecursion.hoplon.span.call(null,G__335649,G__335650));
})();
var G__335584 = " ";
var G__335585 = (function (){var G__335651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335652 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335651,G__335652) : tailrecursion.hoplon.span.call(null,G__335651,G__335652));
})();
var G__335586 = ") (";
var G__335587 = (function (){var G__335653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335654 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335653,G__335654) : tailrecursion.hoplon.span.call(null,G__335653,G__335654));
})();
var G__335588 = " (";
var G__335589 = (function (){var G__335655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335656 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335655,G__335656) : tailrecursion.hoplon.span.call(null,G__335655,G__335656));
})();
var G__335590 = (function (){var G__335657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335658 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335657,G__335658) : tailrecursion.hoplon.span.call(null,G__335657,G__335658));
})();
var G__335591 = ")))\n            (";
var G__335592 = (function (){var G__335659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335660 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335659,G__335660) : tailrecursion.hoplon.span.call(null,G__335659,G__335660));
})();
var G__335593 = "(";
var G__335594 = (function (){var G__335661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335662 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335661,G__335662) : tailrecursion.hoplon.span.call(null,G__335661,G__335662));
})();
var G__335595 = (function (){var G__335663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335664 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335663,G__335664) : tailrecursion.hoplon.span.call(null,G__335663,G__335664));
})();
var G__335596 = ") (";
var G__335597 = (function (){var G__335665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335666 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335665,G__335666) : tailrecursion.hoplon.span.call(null,G__335665,G__335666));
})();
var G__335598 = (function (){var G__335667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335668 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335667,G__335668) : tailrecursion.hoplon.span.call(null,G__335667,G__335668));
})();
var G__335599 = " ";
var G__335600 = (function (){var G__335669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335670 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335669,G__335670) : tailrecursion.hoplon.span.call(null,G__335669,G__335670));
})();
var G__335601 = "))\n          ";
var G__335602 = (function (){var G__335671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335672 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335671,G__335672) : tailrecursion.hoplon.span.call(null,G__335671,G__335672));
})();
var G__335603 = " (";
var G__335604 = (function (){var G__335673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335674 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335673,G__335674) : tailrecursion.hoplon.span.call(null,G__335673,G__335674));
})();
var G__335605 = " (";
var G__335606 = (function (){var G__335675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335676 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335675,G__335676) : tailrecursion.hoplon.span.call(null,G__335675,G__335676));
})();
var G__335607 = (function (){var G__335677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335678 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335677,G__335678) : tailrecursion.hoplon.span.call(null,G__335677,G__335678));
})();
var G__335608 = " (";
var G__335609 = (function (){var G__335679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335680 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335679,G__335680) : tailrecursion.hoplon.span.call(null,G__335679,G__335680));
})();
var G__335610 = (function (){var G__335681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335682 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335681,G__335682) : tailrecursion.hoplon.span.call(null,G__335681,G__335682));
})();
var G__335611 = ")) (";
var G__335612 = (function (){var G__335683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335684 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335683,G__335684) : tailrecursion.hoplon.span.call(null,G__335683,G__335684));
})();
var G__335613 = (function (){var G__335685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335686 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335685,G__335686) : tailrecursion.hoplon.span.call(null,G__335685,G__335686));
})();
var G__335614 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__335549,G__335550,G__335551,G__335552,G__335553,G__335554,G__335555,G__335556,G__335557,G__335558,G__335559,G__335560,G__335561,G__335562,G__335563,G__335564,G__335565,G__335566,G__335567,G__335568,G__335569,G__335570,G__335571,G__335572,G__335573,G__335574,G__335575,G__335576,G__335577,G__335578,G__335579,G__335580,G__335581,G__335582,G__335583,G__335584,G__335585,G__335586,G__335587,G__335588,G__335589,G__335590,G__335591,G__335592,G__335593,G__335594,G__335595,G__335596,G__335597,G__335598,G__335599,G__335600,G__335601,G__335602,G__335603,G__335604,G__335605,G__335606,G__335607,G__335608,G__335609,G__335610,G__335611,G__335612,G__335613,G__335614) : tailrecursion.hoplon.pre.call(null,G__335549,G__335550,G__335551,G__335552,G__335553,G__335554,G__335555,G__335556,G__335557,G__335558,G__335559,G__335560,G__335561,G__335562,G__335563,G__335564,G__335565,G__335566,G__335567,G__335568,G__335569,G__335570,G__335571,G__335572,G__335573,G__335574,G__335575,G__335576,G__335577,G__335578,G__335579,G__335580,G__335581,G__335582,G__335583,G__335584,G__335585,G__335586,G__335587,G__335588,G__335589,G__335590,G__335591,G__335592,G__335593,G__335594,G__335595,G__335596,G__335597,G__335598,G__335599,G__335600,G__335601,G__335602,G__335603,G__335604,G__335605,G__335606,G__335607,G__335608,G__335609,G__335610,G__335611,G__335612,G__335613,G__335614));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335547,G__335548) : tailrecursion.hoplon.div.call(null,G__335547,G__335548));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335546) : tailrecursion.hoplon.div.call(null,G__335546));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335405;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335404;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335403;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335402;
}})()], 0)),"",(function (){var _STAR_references_STAR_335687 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335688 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335689 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335690 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335691 = cljs.core.PersistentArrayMap.EMPTY;
var G__335692 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure takes a list of symbol-requency pairs such as ",(function (){var G__335693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"((A 4) (B 2) (C 1) (D 1))"], null);
var G__335694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335693,G__335694) : tailrecursion.hoplon.markdown.code_node.call(null,G__335693,G__335694));
})()," and constructs an initial ordered set of leaves, ready to be merged according to the Huffman algorithm:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335691,G__335692) : tailrecursion.hoplon.markdown.para_node.call(null,G__335691,G__335692));
})(),(function (){var G__335782 = (function (){var G__335783 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335784 = (function (){var G__335785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335786 = "(";
var G__335787 = (function (){var G__335826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335827 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335826,G__335827) : tailrecursion.hoplon.span.call(null,G__335826,G__335827));
})();
var G__335788 = (function (){var G__335828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335829 = "make-leaf-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335828,G__335829) : tailrecursion.hoplon.span.call(null,G__335828,G__335829));
})();
var G__335789 = " [";
var G__335790 = (function (){var G__335830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335831 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335830,G__335831) : tailrecursion.hoplon.span.call(null,G__335830,G__335831));
})();
var G__335791 = "]\n  (";
var G__335792 = (function (){var G__335832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335833 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335832,G__335833) : tailrecursion.hoplon.span.call(null,G__335832,G__335833));
})();
var G__335793 = "(";
var G__335794 = (function (){var G__335834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335835 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335834,G__335835) : tailrecursion.hoplon.span.call(null,G__335834,G__335835));
})();
var G__335795 = " ";
var G__335796 = (function (){var G__335836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335837 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335836,G__335837) : tailrecursion.hoplon.span.call(null,G__335836,G__335837));
})();
var G__335797 = ")\n      ";
var G__335798 = (function (){var G__335838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335839 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335838,G__335839) : tailrecursion.hoplon.span.call(null,G__335838,G__335839));
})();
var G__335799 = "()\n      (";
var G__335800 = (function (){var G__335840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335841 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335840,G__335841) : tailrecursion.hoplon.span.call(null,G__335840,G__335841));
})();
var G__335801 = "[";
var G__335802 = (function (){var G__335842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335843 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335842,G__335843) : tailrecursion.hoplon.span.call(null,G__335842,G__335843));
})();
var G__335803 = " (";
var G__335804 = (function (){var G__335844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335845 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335844,G__335845) : tailrecursion.hoplon.span.call(null,G__335844,G__335845));
})();
var G__335805 = (function (){var G__335846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335847 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335846,G__335847) : tailrecursion.hoplon.span.call(null,G__335846,G__335847));
})();
var G__335806 = ")]\n        (";
var G__335807 = (function (){var G__335848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335849 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335848,G__335849) : tailrecursion.hoplon.span.call(null,G__335848,G__335849));
})();
var G__335808 = " (";
var G__335809 = (function (){var G__335850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335851 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335850,G__335851) : tailrecursion.hoplon.span.call(null,G__335850,G__335851));
})();
var G__335810 = " (";
var G__335811 = (function (){var G__335852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335853 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335852,G__335853) : tailrecursion.hoplon.span.call(null,G__335852,G__335853));
})();
var G__335812 = (function (){var G__335854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335855 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335854,G__335855) : tailrecursion.hoplon.span.call(null,G__335854,G__335855));
})();
var G__335813 = ")   ";
var G__335814 = (function (){var G__335856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__335857 = "; symbol";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335856,G__335857) : tailrecursion.hoplon.span.call(null,G__335856,G__335857));
})();
var G__335815 = "\n                               (";
var G__335816 = (function (){var G__335858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335859 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335858,G__335859) : tailrecursion.hoplon.span.call(null,G__335858,G__335859));
})();
var G__335817 = (function (){var G__335860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335861 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335860,G__335861) : tailrecursion.hoplon.span.call(null,G__335860,G__335861));
})();
var G__335818 = ")) ";
var G__335819 = (function (){var G__335862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__335863 = "; frequency";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335862,G__335863) : tailrecursion.hoplon.span.call(null,G__335862,G__335863));
})();
var G__335820 = "\n                    (";
var G__335821 = (function (){var G__335864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335865 = "make-leaf-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335864,G__335865) : tailrecursion.hoplon.span.call(null,G__335864,G__335865));
})();
var G__335822 = " (";
var G__335823 = (function (){var G__335866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335867 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335866,G__335867) : tailrecursion.hoplon.span.call(null,G__335866,G__335867));
})();
var G__335824 = (function (){var G__335868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335869 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335868,G__335869) : tailrecursion.hoplon.span.call(null,G__335868,G__335869));
})();
var G__335825 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__335785,G__335786,G__335787,G__335788,G__335789,G__335790,G__335791,G__335792,G__335793,G__335794,G__335795,G__335796,G__335797,G__335798,G__335799,G__335800,G__335801,G__335802,G__335803,G__335804,G__335805,G__335806,G__335807,G__335808,G__335809,G__335810,G__335811,G__335812,G__335813,G__335814,G__335815,G__335816,G__335817,G__335818,G__335819,G__335820,G__335821,G__335822,G__335823,G__335824,G__335825) : tailrecursion.hoplon.pre.call(null,G__335785,G__335786,G__335787,G__335788,G__335789,G__335790,G__335791,G__335792,G__335793,G__335794,G__335795,G__335796,G__335797,G__335798,G__335799,G__335800,G__335801,G__335802,G__335803,G__335804,G__335805,G__335806,G__335807,G__335808,G__335809,G__335810,G__335811,G__335812,G__335813,G__335814,G__335815,G__335816,G__335817,G__335818,G__335819,G__335820,G__335821,G__335822,G__335823,G__335824,G__335825));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335783,G__335784) : tailrecursion.hoplon.div.call(null,G__335783,G__335784));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335782) : tailrecursion.hoplon.div.call(null,G__335782));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335690;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335689;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335688;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335687;
}})()], 0));
var G__320091 = "";
var G__320092 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_335870 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335871 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335872 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335873 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335874 = cljs.core.PersistentArrayMap.EMPTY;
var G__335875 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define an encoding tree and a sample message:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335874,G__335875) : tailrecursion.hoplon.markdown.para_node.call(null,G__335874,G__335875));
})(),(function (){var G__336010 = (function (){var G__336011 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336012 = (function (){var G__336013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336014 = "(";
var G__336015 = (function (){var G__336079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336080 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336079,G__336080) : tailrecursion.hoplon.span.call(null,G__336079,G__336080));
})();
var G__336016 = (function (){var G__336081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336082 = "sample-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336081,G__336082) : tailrecursion.hoplon.span.call(null,G__336081,G__336082));
})();
var G__336017 = "\n  (";
var G__336018 = (function (){var G__336083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336084 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336083,G__336084) : tailrecursion.hoplon.span.call(null,G__336083,G__336084));
})();
var G__336019 = " (";
var G__336020 = (function (){var G__336085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336086 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336085,G__336086) : tailrecursion.hoplon.span.call(null,G__336085,G__336086));
})();
var G__336021 = " ";
var G__336022 = (function (){var G__336087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336088 = "'A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336087,G__336088) : tailrecursion.hoplon.span.call(null,G__336087,G__336088));
})();
var G__336023 = " ";
var G__336024 = (function (){var G__336089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336090 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336089,G__336090) : tailrecursion.hoplon.span.call(null,G__336089,G__336090));
})();
var G__336025 = ")\n                  (";
var G__336026 = (function (){var G__336091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336092 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336091,G__336092) : tailrecursion.hoplon.span.call(null,G__336091,G__336092));
})();
var G__336027 = "\n                    (";
var G__336028 = (function (){var G__336093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336094 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336093,G__336094) : tailrecursion.hoplon.span.call(null,G__336093,G__336094));
})();
var G__336029 = " ";
var G__336030 = (function (){var G__336095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336096 = "'B";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336095,G__336096) : tailrecursion.hoplon.span.call(null,G__336095,G__336096));
})();
var G__336031 = " ";
var G__336032 = (function (){var G__336097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336098 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336097,G__336098) : tailrecursion.hoplon.span.call(null,G__336097,G__336098));
})();
var G__336033 = ")\n                    (";
var G__336034 = (function (){var G__336099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336100 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336099,G__336100) : tailrecursion.hoplon.span.call(null,G__336099,G__336100));
})();
var G__336035 = " (";
var G__336036 = (function (){var G__336101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336102 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336101,G__336102) : tailrecursion.hoplon.span.call(null,G__336101,G__336102));
})();
var G__336037 = " ";
var G__336038 = (function (){var G__336103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336104 = "'D";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336103,G__336104) : tailrecursion.hoplon.span.call(null,G__336103,G__336104));
})();
var G__336039 = " ";
var G__336040 = (function (){var G__336105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336106 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336105,G__336106) : tailrecursion.hoplon.span.call(null,G__336105,G__336106));
})();
var G__336041 = ")\n                                    (";
var G__336042 = (function (){var G__336107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336108 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336107,G__336108) : tailrecursion.hoplon.span.call(null,G__336107,G__336108));
})();
var G__336043 = " ";
var G__336044 = (function (){var G__336109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336110 = "'C";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336109,G__336110) : tailrecursion.hoplon.span.call(null,G__336109,G__336110));
})();
var G__336045 = " ";
var G__336046 = (function (){var G__336111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336112 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336111,G__336112) : tailrecursion.hoplon.span.call(null,G__336111,G__336112));
})();
var G__336047 = ")))))\n\n(";
var G__336048 = (function (){var G__336113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336114 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336113,G__336114) : tailrecursion.hoplon.span.call(null,G__336113,G__336114));
})();
var G__336049 = (function (){var G__336115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336116 = "sample-message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336115,G__336116) : tailrecursion.hoplon.span.call(null,G__336115,G__336116));
})();
var G__336050 = "\n  ";
var G__336051 = (function (){var G__336117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336118 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336117,G__336118) : tailrecursion.hoplon.span.call(null,G__336117,G__336118));
})();
var G__336052 = "(";
var G__336053 = (function (){var G__336119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336120 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336119,G__336120) : tailrecursion.hoplon.span.call(null,G__336119,G__336120));
})();
var G__336054 = " ";
var G__336055 = (function (){var G__336121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336122 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336121,G__336122) : tailrecursion.hoplon.span.call(null,G__336121,G__336122));
})();
var G__336056 = " ";
var G__336057 = (function (){var G__336123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336124 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336123,G__336124) : tailrecursion.hoplon.span.call(null,G__336123,G__336124));
})();
var G__336058 = " ";
var G__336059 = (function (){var G__336125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336126 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336125,G__336126) : tailrecursion.hoplon.span.call(null,G__336125,G__336126));
})();
var G__336060 = " ";
var G__336061 = (function (){var G__336127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336128 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336127,G__336128) : tailrecursion.hoplon.span.call(null,G__336127,G__336128));
})();
var G__336062 = " ";
var G__336063 = (function (){var G__336129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336130 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336129,G__336130) : tailrecursion.hoplon.span.call(null,G__336129,G__336130));
})();
var G__336064 = " ";
var G__336065 = (function (){var G__336131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336132 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336131,G__336132) : tailrecursion.hoplon.span.call(null,G__336131,G__336132));
})();
var G__336066 = " ";
var G__336067 = (function (){var G__336133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336134 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336133,G__336134) : tailrecursion.hoplon.span.call(null,G__336133,G__336134));
})();
var G__336068 = " ";
var G__336069 = (function (){var G__336135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336136 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336135,G__336136) : tailrecursion.hoplon.span.call(null,G__336135,G__336136));
})();
var G__336070 = " ";
var G__336071 = (function (){var G__336137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336138 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336137,G__336138) : tailrecursion.hoplon.span.call(null,G__336137,G__336138));
})();
var G__336072 = " ";
var G__336073 = (function (){var G__336139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336140 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336139,G__336140) : tailrecursion.hoplon.span.call(null,G__336139,G__336140));
})();
var G__336074 = " ";
var G__336075 = (function (){var G__336141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336142 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336141,G__336142) : tailrecursion.hoplon.span.call(null,G__336141,G__336142));
})();
var G__336076 = " ";
var G__336077 = (function (){var G__336143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336144 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336143,G__336144) : tailrecursion.hoplon.span.call(null,G__336143,G__336144));
})();
var G__336078 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__336013,G__336014,G__336015,G__336016,G__336017,G__336018,G__336019,G__336020,G__336021,G__336022,G__336023,G__336024,G__336025,G__336026,G__336027,G__336028,G__336029,G__336030,G__336031,G__336032,G__336033,G__336034,G__336035,G__336036,G__336037,G__336038,G__336039,G__336040,G__336041,G__336042,G__336043,G__336044,G__336045,G__336046,G__336047,G__336048,G__336049,G__336050,G__336051,G__336052,G__336053,G__336054,G__336055,G__336056,G__336057,G__336058,G__336059,G__336060,G__336061,G__336062,G__336063,G__336064,G__336065,G__336066,G__336067,G__336068,G__336069,G__336070,G__336071,G__336072,G__336073,G__336074,G__336075,G__336076,G__336077,G__336078) : tailrecursion.hoplon.pre.call(null,G__336013,G__336014,G__336015,G__336016,G__336017,G__336018,G__336019,G__336020,G__336021,G__336022,G__336023,G__336024,G__336025,G__336026,G__336027,G__336028,G__336029,G__336030,G__336031,G__336032,G__336033,G__336034,G__336035,G__336036,G__336037,G__336038,G__336039,G__336040,G__336041,G__336042,G__336043,G__336044,G__336045,G__336046,G__336047,G__336048,G__336049,G__336050,G__336051,G__336052,G__336053,G__336054,G__336055,G__336056,G__336057,G__336058,G__336059,G__336060,G__336061,G__336062,G__336063,G__336064,G__336065,G__336066,G__336067,G__336068,G__336069,G__336070,G__336071,G__336072,G__336073,G__336074,G__336075,G__336076,G__336077,G__336078));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336011,G__336012) : tailrecursion.hoplon.div.call(null,G__336011,G__336012));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336010) : tailrecursion.hoplon.div.call(null,G__336010));
})(),(function (){var G__336145 = cljs.core.PersistentArrayMap.EMPTY;
var G__336146 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__336147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"decode"], null);
var G__336148 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336147,G__336148) : tailrecursion.hoplon.markdown.code_node.call(null,G__336147,G__336148));
})()," procedure to decode the message, and give the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336145,G__336146) : tailrecursion.hoplon.markdown.para_node.call(null,G__336145,G__336146));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335873;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335872;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335871;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335870;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336149 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336150 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336151 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336152 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336244 = (function (){var G__336245 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336246 = (function (){var G__336247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336248 = (function (){var G__336292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336293 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336292,G__336293) : tailrecursion.hoplon.span.call(null,G__336292,G__336293));
})();
var G__336249 = "(";
var G__336250 = (function (){var G__336294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336295 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336294,G__336295) : tailrecursion.hoplon.span.call(null,G__336294,G__336295));
})();
var G__336251 = " ";
var G__336252 = (function (){var G__336296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336297 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336296,G__336297) : tailrecursion.hoplon.span.call(null,G__336296,G__336297));
})();
var G__336253 = " ";
var G__336254 = (function (){var G__336298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336299 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336298,G__336299) : tailrecursion.hoplon.span.call(null,G__336298,G__336299));
})();
var G__336255 = " ";
var G__336256 = (function (){var G__336300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336301 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336300,G__336301) : tailrecursion.hoplon.span.call(null,G__336300,G__336301));
})();
var G__336257 = " ";
var G__336258 = (function (){var G__336302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336303 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336302,G__336303) : tailrecursion.hoplon.span.call(null,G__336302,G__336303));
})();
var G__336259 = " ";
var G__336260 = (function (){var G__336304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336305 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336304,G__336305) : tailrecursion.hoplon.span.call(null,G__336304,G__336305));
})();
var G__336261 = " ";
var G__336262 = (function (){var G__336306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336307 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336306,G__336307) : tailrecursion.hoplon.span.call(null,G__336306,G__336307));
})();
var G__336263 = " ";
var G__336264 = (function (){var G__336308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336309 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336308,G__336309) : tailrecursion.hoplon.span.call(null,G__336308,G__336309));
})();
var G__336265 = " ";
var G__336266 = (function (){var G__336310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336311 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336310,G__336311) : tailrecursion.hoplon.span.call(null,G__336310,G__336311));
})();
var G__336267 = " ";
var G__336268 = (function (){var G__336312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336313 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336312,G__336313) : tailrecursion.hoplon.span.call(null,G__336312,G__336313));
})();
var G__336269 = " ";
var G__336270 = (function (){var G__336314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336315 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336314,G__336315) : tailrecursion.hoplon.span.call(null,G__336314,G__336315));
})();
var G__336271 = " ";
var G__336272 = (function (){var G__336316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336317 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336316,G__336317) : tailrecursion.hoplon.span.call(null,G__336316,G__336317));
})();
var G__336273 = " ";
var G__336274 = (function (){var G__336318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336319 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336318,G__336319) : tailrecursion.hoplon.span.call(null,G__336318,G__336319));
})();
var G__336275 = ")\n";
var G__336276 = (function (){var G__336320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336321 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336320,G__336321) : tailrecursion.hoplon.span.call(null,G__336320,G__336321));
})();
var G__336277 = "(";
var G__336278 = (function (){var G__336322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336323 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336322,G__336323) : tailrecursion.hoplon.span.call(null,G__336322,G__336323));
})();
var G__336279 = "     ";
var G__336280 = (function (){var G__336324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336325 = "D";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336324,G__336325) : tailrecursion.hoplon.span.call(null,G__336324,G__336325));
})();
var G__336281 = " ";
var G__336282 = (function (){var G__336326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336327 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336326,G__336327) : tailrecursion.hoplon.span.call(null,G__336326,G__336327));
})();
var G__336283 = "   ";
var G__336284 = (function (){var G__336328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336329 = "B";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336328,G__336329) : tailrecursion.hoplon.span.call(null,G__336328,G__336329));
})();
var G__336285 = "   ";
var G__336286 = (function (){var G__336330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336331 = "B";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336330,G__336331) : tailrecursion.hoplon.span.call(null,G__336330,G__336331));
})();
var G__336287 = "     ";
var G__336288 = (function (){var G__336332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336333 = "C";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336332,G__336333) : tailrecursion.hoplon.span.call(null,G__336332,G__336333));
})();
var G__336289 = " ";
var G__336290 = (function (){var G__336334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336335 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336334,G__336335) : tailrecursion.hoplon.span.call(null,G__336334,G__336335));
})();
var G__336291 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__336247,G__336248,G__336249,G__336250,G__336251,G__336252,G__336253,G__336254,G__336255,G__336256,G__336257,G__336258,G__336259,G__336260,G__336261,G__336262,G__336263,G__336264,G__336265,G__336266,G__336267,G__336268,G__336269,G__336270,G__336271,G__336272,G__336273,G__336274,G__336275,G__336276,G__336277,G__336278,G__336279,G__336280,G__336281,G__336282,G__336283,G__336284,G__336285,G__336286,G__336287,G__336288,G__336289,G__336290,G__336291) : tailrecursion.hoplon.pre.call(null,G__336247,G__336248,G__336249,G__336250,G__336251,G__336252,G__336253,G__336254,G__336255,G__336256,G__336257,G__336258,G__336259,G__336260,G__336261,G__336262,G__336263,G__336264,G__336265,G__336266,G__336267,G__336268,G__336269,G__336270,G__336271,G__336272,G__336273,G__336274,G__336275,G__336276,G__336277,G__336278,G__336279,G__336280,G__336281,G__336282,G__336283,G__336284,G__336285,G__336286,G__336287,G__336288,G__336289,G__336290,G__336291));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336245,G__336246) : tailrecursion.hoplon.div.call(null,G__336245,G__336246));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336244) : tailrecursion.hoplon.div.call(null,G__336244));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336152;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336151;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336150;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336149;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336336 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336337 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336338 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336339 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336340 = cljs.core.PersistentArrayMap.EMPTY;
var G__336341 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__336342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode"], null);
var G__336343 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336342,G__336343) : tailrecursion.hoplon.markdown.code_node.call(null,G__336342,G__336343));
})()," procedure takes as arguments a message and a tree and produces the list of bits that gives the encoded message."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336340,G__336341) : tailrecursion.hoplon.markdown.para_node.call(null,G__336340,G__336341));
})(),(function (){var G__336413 = (function (){var G__336414 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336415 = (function (){var G__336416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336417 = "(";
var G__336418 = (function (){var G__336449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336450 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336449,G__336450) : tailrecursion.hoplon.span.call(null,G__336449,G__336450));
})();
var G__336419 = (function (){var G__336451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336452 = "encode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336451,G__336452) : tailrecursion.hoplon.span.call(null,G__336451,G__336452));
})();
var G__336420 = " [";
var G__336421 = (function (){var G__336453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336454 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336453,G__336454) : tailrecursion.hoplon.span.call(null,G__336453,G__336454));
})();
var G__336422 = " ";
var G__336423 = (function (){var G__336455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336456 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336455,G__336456) : tailrecursion.hoplon.span.call(null,G__336455,G__336456));
})();
var G__336424 = "]\n  (";
var G__336425 = (function (){var G__336457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336458 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336457,G__336458) : tailrecursion.hoplon.span.call(null,G__336457,G__336458));
})();
var G__336426 = "(";
var G__336427 = (function (){var G__336459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336460 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336459,G__336460) : tailrecursion.hoplon.span.call(null,G__336459,G__336460));
})();
var G__336428 = " ";
var G__336429 = (function (){var G__336461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336462 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336461,G__336462) : tailrecursion.hoplon.span.call(null,G__336461,G__336462));
})();
var G__336430 = ")\n      ";
var G__336431 = (function (){var G__336463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336464 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336463,G__336464) : tailrecursion.hoplon.span.call(null,G__336463,G__336464));
})();
var G__336432 = "()\n      (";
var G__336433 = (function (){var G__336465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336466 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336465,G__336466) : tailrecursion.hoplon.span.call(null,G__336465,G__336466));
})();
var G__336434 = "(";
var G__336435 = (function (){var G__336467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336468 = "encode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336467,G__336468) : tailrecursion.hoplon.span.call(null,G__336467,G__336468));
})();
var G__336436 = " (";
var G__336437 = (function (){var G__336469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336470 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336469,G__336470) : tailrecursion.hoplon.span.call(null,G__336469,G__336470));
})();
var G__336438 = (function (){var G__336471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336472 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336471,G__336472) : tailrecursion.hoplon.span.call(null,G__336471,G__336472));
})();
var G__336439 = ") ";
var G__336440 = (function (){var G__336473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336474 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336473,G__336474) : tailrecursion.hoplon.span.call(null,G__336473,G__336474));
})();
var G__336441 = ")\n              (";
var G__336442 = (function (){var G__336475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336476 = "encode-symbol";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336475,G__336476) : tailrecursion.hoplon.span.call(null,G__336475,G__336476));
})();
var G__336443 = " (";
var G__336444 = (function (){var G__336477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336478 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336477,G__336478) : tailrecursion.hoplon.span.call(null,G__336477,G__336478));
})();
var G__336445 = (function (){var G__336479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336480 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336479,G__336480) : tailrecursion.hoplon.span.call(null,G__336479,G__336480));
})();
var G__336446 = ") ";
var G__336447 = (function (){var G__336481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336482 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336481,G__336482) : tailrecursion.hoplon.span.call(null,G__336481,G__336482));
})();
var G__336448 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__336416,G__336417,G__336418,G__336419,G__336420,G__336421,G__336422,G__336423,G__336424,G__336425,G__336426,G__336427,G__336428,G__336429,G__336430,G__336431,G__336432,G__336433,G__336434,G__336435,G__336436,G__336437,G__336438,G__336439,G__336440,G__336441,G__336442,G__336443,G__336444,G__336445,G__336446,G__336447,G__336448) : tailrecursion.hoplon.pre.call(null,G__336416,G__336417,G__336418,G__336419,G__336420,G__336421,G__336422,G__336423,G__336424,G__336425,G__336426,G__336427,G__336428,G__336429,G__336430,G__336431,G__336432,G__336433,G__336434,G__336435,G__336436,G__336437,G__336438,G__336439,G__336440,G__336441,G__336442,G__336443,G__336444,G__336445,G__336446,G__336447,G__336448));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336414,G__336415) : tailrecursion.hoplon.div.call(null,G__336414,G__336415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336413) : tailrecursion.hoplon.div.call(null,G__336413));
})(),(function (){var G__336483 = cljs.core.PersistentArrayMap.EMPTY;
var G__336484 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode-symbol"], null);
var G__336486 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336485,G__336486) : tailrecursion.hoplon.markdown.code_node.call(null,G__336485,G__336486));
})()," is a procedure, which you must write, that returns the list of bits that encodes a given symbol according to a given tree. You should design ",(function (){var G__336487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode-symbol"], null);
var G__336488 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336487,G__336488) : tailrecursion.hoplon.markdown.code_node.call(null,G__336487,G__336488));
})()," so that it signals an error if the symbol is not in the tree at all. Test your procedure by encoding the result you obtained in exercise 2.67 with the sample tree and seeing whether it is the same as the original sample message."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336483,G__336484) : tailrecursion.hoplon.markdown.para_node.call(null,G__336483,G__336484));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336339;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336338;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336337;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336336;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336489 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336490 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336491 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336492 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336679 = (function (){var G__336680 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336681 = (function (){var G__336682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336683 = "(";
var G__336684 = (function (){var G__336770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336771 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336770,G__336771) : tailrecursion.hoplon.span.call(null,G__336770,G__336771));
})();
var G__336685 = (function (){var G__336772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336773 = "encode-symbol*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336772,G__336773) : tailrecursion.hoplon.span.call(null,G__336772,G__336773));
})();
var G__336686 = " [";
var G__336687 = (function (){var G__336774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336775 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336774,G__336775) : tailrecursion.hoplon.span.call(null,G__336774,G__336775));
})();
var G__336688 = (function (){var G__336776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336777 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336776,G__336777) : tailrecursion.hoplon.span.call(null,G__336776,G__336777));
})();
var G__336689 = "]\n  (";
var G__336690 = (function (){var G__336778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336779 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336778,G__336779) : tailrecursion.hoplon.span.call(null,G__336778,G__336779));
})();
var G__336691 = "[";
var G__336692 = (function (){var G__336780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336781 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336780,G__336781) : tailrecursion.hoplon.span.call(null,G__336780,G__336781));
})();
var G__336693 = "   ";
var G__336694 = (function (){var G__336782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336783 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336782,G__336783) : tailrecursion.hoplon.span.call(null,G__336782,G__336783));
})();
var G__336695 = "()\n         ";
var G__336696 = (function (){var G__336784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336785 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336784,G__336785) : tailrecursion.hoplon.span.call(null,G__336784,G__336785));
})();
var G__336697 = " ";
var G__336698 = (function (){var G__336786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336787 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336786,G__336787) : tailrecursion.hoplon.span.call(null,G__336786,G__336787));
})();
var G__336699 = "]\n    (";
var G__336700 = (function (){var G__336788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336789 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336788,G__336789) : tailrecursion.hoplon.span.call(null,G__336788,G__336789));
})();
var G__336701 = "(";
var G__336702 = (function (){var G__336790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336791 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336790,G__336791) : tailrecursion.hoplon.span.call(null,G__336790,G__336791));
})();
var G__336703 = " ";
var G__336704 = (function (){var G__336792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336793 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336792,G__336793) : tailrecursion.hoplon.span.call(null,G__336792,G__336793));
})();
var G__336705 = ")\n            (";
var G__336706 = (function (){var G__336794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336795 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336794,G__336795) : tailrecursion.hoplon.span.call(null,G__336794,G__336795));
})();
var G__336707 = (function (){var G__336796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336797 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336796,G__336797) : tailrecursion.hoplon.span.call(null,G__336796,G__336797));
})();
var G__336708 = ")\n          (";
var G__336709 = (function (){var G__336798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336799 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336798,G__336799) : tailrecursion.hoplon.span.call(null,G__336798,G__336799));
})();
var G__336710 = " (";
var G__336711 = (function (){var G__336800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336801 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336800,G__336801) : tailrecursion.hoplon.span.call(null,G__336800,G__336801));
})();
var G__336712 = " (";
var G__336713 = (function (){var G__336802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336803 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336802,G__336803) : tailrecursion.hoplon.span.call(null,G__336802,G__336803));
})();
var G__336714 = " ";
var G__336715 = (function (){var G__336804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336805 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336804,G__336805) : tailrecursion.hoplon.span.call(null,G__336804,G__336805));
})();
var G__336716 = ")))\n            (";
var G__336717 = (function (){var G__336806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336807 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336806,G__336807) : tailrecursion.hoplon.span.call(null,G__336806,G__336807));
})();
var G__336718 = " (";
var G__336719 = (function (){var G__336808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336809 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336808,G__336809) : tailrecursion.hoplon.span.call(null,G__336808,G__336809));
})();
var G__336720 = (function (){var G__336810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336811 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336810,G__336811) : tailrecursion.hoplon.span.call(null,G__336810,G__336811));
})();
var G__336721 = " ";
var G__336722 = (function (){var G__336812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336813 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336812,G__336813) : tailrecursion.hoplon.span.call(null,G__336812,G__336813));
})();
var G__336723 = ") (";
var G__336724 = (function (){var G__336814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336815 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336814,G__336815) : tailrecursion.hoplon.span.call(null,G__336814,G__336815));
})();
var G__336725 = " ";
var G__336726 = (function (){var G__336816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336817 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336816,G__336817) : tailrecursion.hoplon.span.call(null,G__336816,G__336817));
})();
var G__336727 = "))\n          ";
var G__336728 = (function (){var G__336818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336819 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336818,G__336819) : tailrecursion.hoplon.span.call(null,G__336818,G__336819));
})();
var G__336729 = " (";
var G__336730 = (function (){var G__336820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336821 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336820,G__336821) : tailrecursion.hoplon.span.call(null,G__336820,G__336821));
})();
var G__336731 = " (";
var G__336732 = (function (){var G__336822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336823 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336822,G__336823) : tailrecursion.hoplon.span.call(null,G__336822,G__336823));
})();
var G__336733 = (function (){var G__336824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336825 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336824,G__336825) : tailrecursion.hoplon.span.call(null,G__336824,G__336825));
})();
var G__336734 = " ";
var G__336735 = (function (){var G__336826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336827 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336826,G__336827) : tailrecursion.hoplon.span.call(null,G__336826,G__336827));
})();
var G__336736 = ") (";
var G__336737 = (function (){var G__336828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336829 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336828,G__336829) : tailrecursion.hoplon.span.call(null,G__336828,G__336829));
})();
var G__336738 = " ";
var G__336739 = (function (){var G__336830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336831 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336830,G__336831) : tailrecursion.hoplon.span.call(null,G__336830,G__336831));
})();
var G__336740 = ")))))\n\n(";
var G__336741 = (function (){var G__336832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336833 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336832,G__336833) : tailrecursion.hoplon.span.call(null,G__336832,G__336833));
})();
var G__336742 = (function (){var G__336834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336835 = "encode-symbol";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336834,G__336835) : tailrecursion.hoplon.span.call(null,G__336834,G__336835));
})();
var G__336743 = " [";
var G__336744 = (function (){var G__336836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336837 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336836,G__336837) : tailrecursion.hoplon.span.call(null,G__336836,G__336837));
})();
var G__336745 = (function (){var G__336838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336839 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336838,G__336839) : tailrecursion.hoplon.span.call(null,G__336838,G__336839));
})();
var G__336746 = "]\n  (";
var G__336747 = (function (){var G__336840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336841 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336840,G__336841) : tailrecursion.hoplon.span.call(null,G__336840,G__336841));
})();
var G__336748 = "(";
var G__336749 = (function (){var G__336842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336843 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336842,G__336843) : tailrecursion.hoplon.span.call(null,G__336842,G__336843));
})();
var G__336750 = " (";
var G__336751 = (function (){var G__336844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336845 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336844,G__336845) : tailrecursion.hoplon.span.call(null,G__336844,G__336845));
})();
var G__336752 = " ";
var G__336753 = (function (){var G__336846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336847 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336846,G__336847) : tailrecursion.hoplon.span.call(null,G__336846,G__336847));
})();
var G__336754 = "))\n      (";
var G__336755 = (function (){var G__336848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336849 = "encode-symbol*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336848,G__336849) : tailrecursion.hoplon.span.call(null,G__336848,G__336849));
})();
var G__336756 = " ";
var G__336757 = (function (){var G__336850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336851 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336850,G__336851) : tailrecursion.hoplon.span.call(null,G__336850,G__336851));
})();
var G__336758 = (function (){var G__336852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336853 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336852,G__336853) : tailrecursion.hoplon.span.call(null,G__336852,G__336853));
})();
var G__336759 = ")\n      (";
var G__336760 = (function (){var G__336854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336855 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336854,G__336855) : tailrecursion.hoplon.span.call(null,G__336854,G__336855));
})();
var G__336761 = "\n        (";
var G__336762 = (function (){var G__336856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336857 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336856,G__336857) : tailrecursion.hoplon.span.call(null,G__336856,G__336857));
})();
var G__336763 = " \n          (";
var G__336764 = (function (){var G__336858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336859 = "str ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336858,G__336859) : tailrecursion.hoplon.span.call(null,G__336858,G__336859));
})();
var G__336765 = (function (){var G__336860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__336861 = "\"The symbol: \"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336860,G__336861) : tailrecursion.hoplon.span.call(null,G__336860,G__336861));
})();
var G__336766 = " ";
var G__336767 = (function (){var G__336862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336863 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336862,G__336863) : tailrecursion.hoplon.span.call(null,G__336862,G__336863));
})();
var G__336768 = (function (){var G__336864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__336865 = "\"was not recognized. Please remove it and try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336864,G__336865) : tailrecursion.hoplon.span.call(null,G__336864,G__336865));
})();
var G__336769 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$88 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$88(G__336682,G__336683,G__336684,G__336685,G__336686,G__336687,G__336688,G__336689,G__336690,G__336691,G__336692,G__336693,G__336694,G__336695,G__336696,G__336697,G__336698,G__336699,G__336700,G__336701,G__336702,G__336703,G__336704,G__336705,G__336706,G__336707,G__336708,G__336709,G__336710,G__336711,G__336712,G__336713,G__336714,G__336715,G__336716,G__336717,G__336718,G__336719,G__336720,G__336721,G__336722,G__336723,G__336724,G__336725,G__336726,G__336727,G__336728,G__336729,G__336730,G__336731,G__336732,G__336733,G__336734,G__336735,G__336736,G__336737,G__336738,G__336739,G__336740,G__336741,G__336742,G__336743,G__336744,G__336745,G__336746,G__336747,G__336748,G__336749,G__336750,G__336751,G__336752,G__336753,G__336754,G__336755,G__336756,G__336757,G__336758,G__336759,G__336760,G__336761,G__336762,G__336763,G__336764,G__336765,G__336766,G__336767,G__336768,G__336769) : tailrecursion.hoplon.pre.call(null,G__336682,G__336683,G__336684,G__336685,G__336686,G__336687,G__336688,G__336689,G__336690,G__336691,G__336692,G__336693,G__336694,G__336695,G__336696,G__336697,G__336698,G__336699,G__336700,G__336701,G__336702,G__336703,G__336704,G__336705,G__336706,G__336707,G__336708,G__336709,G__336710,G__336711,G__336712,G__336713,G__336714,G__336715,G__336716,G__336717,G__336718,G__336719,G__336720,G__336721,G__336722,G__336723,G__336724,G__336725,G__336726,G__336727,G__336728,G__336729,G__336730,G__336731,G__336732,G__336733,G__336734,G__336735,G__336736,G__336737,G__336738,G__336739,G__336740,G__336741,G__336742,G__336743,G__336744,G__336745,G__336746,G__336747,G__336748,G__336749,G__336750,G__336751,G__336752,G__336753,G__336754,G__336755,G__336756,G__336757,G__336758,G__336759,G__336760,G__336761,G__336762,G__336763,G__336764,G__336765,G__336766,G__336767,G__336768,G__336769));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336680,G__336681) : tailrecursion.hoplon.div.call(null,G__336680,G__336681));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336679) : tailrecursion.hoplon.div.call(null,G__336679));
})(),(function (){var G__336866 = cljs.core.PersistentArrayMap.EMPTY;
var G__336867 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The function ",(function (){var G__336868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"throw"], null);
var G__336869 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336868,G__336869) : tailrecursion.hoplon.markdown.code_node.call(null,G__336868,G__336869));
})()," is very important. As you can see, this function does not simply return a string value if the symbol is not in the tree. It throws an exception, which means that it stops all further computation that the function would call and sends this message directly to the top. So any function calling ",(function (){var G__336870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode-symbol"], null);
var G__336871 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336870,G__336871) : tailrecursion.hoplon.markdown.code_node.call(null,G__336870,G__336871));
})()," is notified immediately when an error occurs, and you can see the benefit therein. Note that the function ",(function (){var G__336872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"str"], null);
var G__336873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336872,G__336873) : tailrecursion.hoplon.markdown.code_node.call(null,G__336872,G__336873));
})()," takes any number of arguments and places them in a string in the same order. Test it out using variables and whatnot. It",(function (){var G__336874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__336875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__336874,G__336875) : tailrecursion.hoplon.markdown.simple_node.call(null,G__336874,G__336875));
})(),"s a very useful function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336866,G__336867) : tailrecursion.hoplon.markdown.para_node.call(null,G__336866,G__336867));
})(),(function (){var G__336876 = cljs.core.PersistentArrayMap.EMPTY;
var G__336877 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many arguments does this call to ",(function (){var G__336878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"str"], null);
var G__336879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336878,G__336879) : tailrecursion.hoplon.markdown.code_node.call(null,G__336878,G__336879));
})()," have?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336876,G__336877) : tailrecursion.hoplon.markdown.para_node.call(null,G__336876,G__336877));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336492;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336491;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336490;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336489;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336880 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336881 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336884 = cljs.core.PersistentArrayMap.EMPTY;
var G__336885 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336886 = cljs.core.PersistentArrayMap.EMPTY;
var G__336887 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_336888 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336889 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__336891 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The symbol: "], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__336890,G__336891) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__336890,G__336891));
})()," is the first, ",(function (){var G__336892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbol"], null);
var G__336893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336892,G__336893) : tailrecursion.hoplon.markdown.code_node.call(null,G__336892,G__336893));
})()," is the second, and the remaining string is the third."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336889;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336888;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__336886,G__336887) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__336886,G__336887));
})()], null);
return (tailrecursion.hoplon.markdown.ordered_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.ordered_list_node.cljs$core$IFn$_invoke$arity$2(G__336884,G__336885) : tailrecursion.hoplon.markdown.ordered_list_node.call(null,G__336884,G__336885));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336882;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336881;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336880;
}})()], 0))], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336894 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336895 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336896 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336897 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336898 = cljs.core.PersistentArrayMap.EMPTY;
var G__336899 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure takes as its argument a list of symbol-frequency pairs (where no symbol appears in more than one pair) and generates a Huffman encoding tree according to the Huffman algorithm."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336898,G__336899) : tailrecursion.hoplon.markdown.para_node.call(null,G__336898,G__336899));
})(),(function (){var G__336927 = (function (){var G__336928 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336929 = (function (){var G__336930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336931 = "(";
var G__336932 = (function (){var G__336943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336944 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336943,G__336944) : tailrecursion.hoplon.span.call(null,G__336943,G__336944));
})();
var G__336933 = (function (){var G__336945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336946 = "generate-huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336945,G__336946) : tailrecursion.hoplon.span.call(null,G__336945,G__336946));
})();
var G__336934 = " [";
var G__336935 = (function (){var G__336947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336948 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336947,G__336948) : tailrecursion.hoplon.span.call(null,G__336947,G__336948));
})();
var G__336936 = "]\n  (";
var G__336937 = (function (){var G__336949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336950 = "successive-merge";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336949,G__336950) : tailrecursion.hoplon.span.call(null,G__336949,G__336950));
})();
var G__336938 = " (";
var G__336939 = (function (){var G__336951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336952 = "make-leaf-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336951,G__336952) : tailrecursion.hoplon.span.call(null,G__336951,G__336952));
})();
var G__336940 = " ";
var G__336941 = (function (){var G__336953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336954 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336953,G__336954) : tailrecursion.hoplon.span.call(null,G__336953,G__336954));
})();
var G__336942 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__336930,G__336931,G__336932,G__336933,G__336934,G__336935,G__336936,G__336937,G__336938,G__336939,G__336940,G__336941,G__336942) : tailrecursion.hoplon.pre.call(null,G__336930,G__336931,G__336932,G__336933,G__336934,G__336935,G__336936,G__336937,G__336938,G__336939,G__336940,G__336941,G__336942));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336928,G__336929) : tailrecursion.hoplon.div.call(null,G__336928,G__336929));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336927) : tailrecursion.hoplon.div.call(null,G__336927));
})(),(function (){var G__336955 = cljs.core.PersistentArrayMap.EMPTY;
var G__336956 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-leaf-set"], null);
var G__336958 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336957,G__336958) : tailrecursion.hoplon.markdown.code_node.call(null,G__336957,G__336958));
})()," is the procedure given above that transforms the list of pairs into an ordered set of leaves. ",(function (){var G__336959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"successive-merge"], null);
var G__336960 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336959,G__336960) : tailrecursion.hoplon.markdown.code_node.call(null,G__336959,G__336960));
})()," is the procedure you must write, using ",(function (){var G__336961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-code-tree"], null);
var G__336962 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336961,G__336962) : tailrecursion.hoplon.markdown.code_node.call(null,G__336961,G__336962));
})()," to successively merge the smallest-weight elements of the set until there is only one element left, which is hte desired Huffman tree. (This procedure is slightly tricky, but not really complicated. If you find yourself designing a complex procedure, then you are almost certainly doing something wrong. You can take advantage of the fact that we are using an ordered set representation.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336955,G__336956) : tailrecursion.hoplon.markdown.para_node.call(null,G__336955,G__336956));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336897;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336896;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336895;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336894;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336963 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336964 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336965 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336966 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337087 = (function (){var G__337088 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__337089 = (function (){var G__337090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__337091 = "(";
var G__337092 = (function (){var G__337148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__337149 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337148,G__337149) : tailrecursion.hoplon.span.call(null,G__337148,G__337149));
})();
var G__337093 = (function (){var G__337150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337151 = "successive-merge";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337150,G__337151) : tailrecursion.hoplon.span.call(null,G__337150,G__337151));
})();
var G__337094 = " [";
var G__337095 = (function (){var G__337152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337153 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337152,G__337153) : tailrecursion.hoplon.span.call(null,G__337152,G__337153));
})();
var G__337096 = "]\n  (";
var G__337097 = (function (){var G__337154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__337155 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337154,G__337155) : tailrecursion.hoplon.span.call(null,G__337154,G__337155));
})();
var G__337098 = "[";
var G__337099 = (function (){var G__337156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337157 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337156,G__337157) : tailrecursion.hoplon.span.call(null,G__337156,G__337157));
})();
var G__337100 = " ";
var G__337101 = (function (){var G__337158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337159 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337158,G__337159) : tailrecursion.hoplon.span.call(null,G__337158,G__337159));
})();
var G__337102 = "]\n    (";
var G__337103 = (function (){var G__337160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__337161 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337160,G__337161) : tailrecursion.hoplon.span.call(null,G__337160,G__337161));
})();
var G__337104 = "[";
var G__337105 = (function (){var G__337162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337163 = "right ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337162,G__337163) : tailrecursion.hoplon.span.call(null,G__337162,G__337163));
})();
var G__337106 = "(";
var G__337107 = (function (){var G__337164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337165 = "last ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337164,G__337165) : tailrecursion.hoplon.span.call(null,G__337164,G__337165));
})();
var G__337108 = (function (){var G__337166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337167 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337166,G__337167) : tailrecursion.hoplon.span.call(null,G__337166,G__337167));
})();
var G__337109 = ")\n          ";
var G__337110 = (function (){var G__337168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337169 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337168,G__337169) : tailrecursion.hoplon.span.call(null,G__337168,G__337169));
})();
var G__337111 = " (";
var G__337112 = (function (){var G__337170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337171 = "drop-last";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337170,G__337171) : tailrecursion.hoplon.span.call(null,G__337170,G__337171));
})();
var G__337113 = " ";
var G__337114 = (function (){var G__337172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337173 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337172,G__337173) : tailrecursion.hoplon.span.call(null,G__337172,G__337173));
})();
var G__337115 = ")]\n      (";
var G__337116 = (function (){var G__337174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__337175 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337174,G__337175) : tailrecursion.hoplon.span.call(null,G__337174,G__337175));
})();
var G__337117 = "(";
var G__337118 = (function (){var G__337176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337177 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337176,G__337177) : tailrecursion.hoplon.span.call(null,G__337176,G__337177));
})();
var G__337119 = " ";
var G__337120 = (function (){var G__337178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337179 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337178,G__337179) : tailrecursion.hoplon.span.call(null,G__337178,G__337179));
})();
var G__337121 = ")\n          ";
var G__337122 = (function (){var G__337180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337181 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337180,G__337181) : tailrecursion.hoplon.span.call(null,G__337180,G__337181));
})();
var G__337123 = "\n          (";
var G__337124 = (function (){var G__337182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__337183 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337182,G__337183) : tailrecursion.hoplon.span.call(null,G__337182,G__337183));
})();
var G__337125 = "[";
var G__337126 = (function (){var G__337184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337185 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337184,G__337185) : tailrecursion.hoplon.span.call(null,G__337184,G__337185));
})();
var G__337127 = "  (";
var G__337128 = (function (){var G__337186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337187 = "last ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337186,G__337187) : tailrecursion.hoplon.span.call(null,G__337186,G__337187));
})();
var G__337129 = (function (){var G__337188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337189 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337188,G__337189) : tailrecursion.hoplon.span.call(null,G__337188,G__337189));
})();
var G__337130 = ")\n                ";
var G__337131 = (function (){var G__337190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337191 = "others";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337190,G__337191) : tailrecursion.hoplon.span.call(null,G__337190,G__337191));
})();
var G__337132 = " (";
var G__337133 = (function (){var G__337192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337193 = "drop-last";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337192,G__337193) : tailrecursion.hoplon.span.call(null,G__337192,G__337193));
})();
var G__337134 = " ";
var G__337135 = (function (){var G__337194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337195 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337194,G__337195) : tailrecursion.hoplon.span.call(null,G__337194,G__337195));
})();
var G__337136 = ")]\n            (";
var G__337137 = (function (){var G__337196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337197 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337196,G__337197) : tailrecursion.hoplon.span.call(null,G__337196,G__337197));
})();
var G__337138 = " \n              (";
var G__337139 = (function (){var G__337198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337199 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337198,G__337199) : tailrecursion.hoplon.span.call(null,G__337198,G__337199));
})();
var G__337140 = "\n                (";
var G__337141 = (function (){var G__337200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337201 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337200,G__337201) : tailrecursion.hoplon.span.call(null,G__337200,G__337201));
})();
var G__337142 = " ";
var G__337143 = (function (){var G__337202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337203 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337202,G__337203) : tailrecursion.hoplon.span.call(null,G__337202,G__337203));
})();
var G__337144 = (function (){var G__337204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337205 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337204,G__337205) : tailrecursion.hoplon.span.call(null,G__337204,G__337205));
})();
var G__337145 = ")\n                ";
var G__337146 = (function (){var G__337206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337207 = "others";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337206,G__337207) : tailrecursion.hoplon.span.call(null,G__337206,G__337207));
})();
var G__337147 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__337090,G__337091,G__337092,G__337093,G__337094,G__337095,G__337096,G__337097,G__337098,G__337099,G__337100,G__337101,G__337102,G__337103,G__337104,G__337105,G__337106,G__337107,G__337108,G__337109,G__337110,G__337111,G__337112,G__337113,G__337114,G__337115,G__337116,G__337117,G__337118,G__337119,G__337120,G__337121,G__337122,G__337123,G__337124,G__337125,G__337126,G__337127,G__337128,G__337129,G__337130,G__337131,G__337132,G__337133,G__337134,G__337135,G__337136,G__337137,G__337138,G__337139,G__337140,G__337141,G__337142,G__337143,G__337144,G__337145,G__337146,G__337147) : tailrecursion.hoplon.pre.call(null,G__337090,G__337091,G__337092,G__337093,G__337094,G__337095,G__337096,G__337097,G__337098,G__337099,G__337100,G__337101,G__337102,G__337103,G__337104,G__337105,G__337106,G__337107,G__337108,G__337109,G__337110,G__337111,G__337112,G__337113,G__337114,G__337115,G__337116,G__337117,G__337118,G__337119,G__337120,G__337121,G__337122,G__337123,G__337124,G__337125,G__337126,G__337127,G__337128,G__337129,G__337130,G__337131,G__337132,G__337133,G__337134,G__337135,G__337136,G__337137,G__337138,G__337139,G__337140,G__337141,G__337142,G__337143,G__337144,G__337145,G__337146,G__337147));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__337088,G__337089) : tailrecursion.hoplon.div.call(null,G__337088,G__337089));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__337087) : tailrecursion.hoplon.div.call(null,G__337087));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336966;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336965;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336964;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336963;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337208 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337209 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337210 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337211 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337212 = cljs.core.PersistentArrayMap.EMPTY;
var G__337213 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following eight-symbol alphabet with associated relative frequencies was designed to efficiently encode the lyrics of 1950s rock songs. (Note that the ",(function (){var G__337214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337215 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["symbols"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337214,G__337215) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337214,G__337215));
})()," of an ",(function (){var G__337216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337217 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["alphabet"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337216,G__337217) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337216,G__337217));
})()," need not be individual letters.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337212,G__337213) : tailrecursion.hoplon.markdown.para_node.call(null,G__337212,G__337213));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337211;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337210;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337209;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337208;
}})(),"",(function (){var G__337218 = cljs.core.PersistentArrayMap.EMPTY;
var G__337219 = (function (){var G__337223 = cljs.core.PersistentArrayMap.EMPTY;
var G__337224 = (function (){var G__337228 = cljs.core.PersistentArrayMap.EMPTY;
var G__337229 = "A";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337228,G__337229) : tailrecursion.hoplon.td.call(null,G__337228,G__337229));
})();
var G__337225 = (function (){var G__337230 = cljs.core.PersistentArrayMap.EMPTY;
var G__337231 = "2";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337230,G__337231) : tailrecursion.hoplon.td.call(null,G__337230,G__337231));
})();
var G__337226 = (function (){var G__337232 = cljs.core.PersistentArrayMap.EMPTY;
var G__337233 = "NA";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337232,G__337233) : tailrecursion.hoplon.td.call(null,G__337232,G__337233));
})();
var G__337227 = (function (){var G__337234 = cljs.core.PersistentArrayMap.EMPTY;
var G__337235 = "16";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337234,G__337235) : tailrecursion.hoplon.td.call(null,G__337234,G__337235));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337223,G__337224,G__337225,G__337226,G__337227) : tailrecursion.hoplon.tr.call(null,G__337223,G__337224,G__337225,G__337226,G__337227));
})();
var G__337220 = (function (){var G__337236 = cljs.core.PersistentArrayMap.EMPTY;
var G__337237 = (function (){var G__337241 = cljs.core.PersistentArrayMap.EMPTY;
var G__337242 = "BOOM";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337241,G__337242) : tailrecursion.hoplon.td.call(null,G__337241,G__337242));
})();
var G__337238 = (function (){var G__337243 = cljs.core.PersistentArrayMap.EMPTY;
var G__337244 = "1";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337243,G__337244) : tailrecursion.hoplon.td.call(null,G__337243,G__337244));
})();
var G__337239 = (function (){var G__337245 = cljs.core.PersistentArrayMap.EMPTY;
var G__337246 = "SHA";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337245,G__337246) : tailrecursion.hoplon.td.call(null,G__337245,G__337246));
})();
var G__337240 = (function (){var G__337247 = cljs.core.PersistentArrayMap.EMPTY;
var G__337248 = "3";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337247,G__337248) : tailrecursion.hoplon.td.call(null,G__337247,G__337248));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337236,G__337237,G__337238,G__337239,G__337240) : tailrecursion.hoplon.tr.call(null,G__337236,G__337237,G__337238,G__337239,G__337240));
})();
var G__337221 = (function (){var G__337249 = cljs.core.PersistentArrayMap.EMPTY;
var G__337250 = (function (){var G__337254 = cljs.core.PersistentArrayMap.EMPTY;
var G__337255 = "GET";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337254,G__337255) : tailrecursion.hoplon.td.call(null,G__337254,G__337255));
})();
var G__337251 = (function (){var G__337256 = cljs.core.PersistentArrayMap.EMPTY;
var G__337257 = "2";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337256,G__337257) : tailrecursion.hoplon.td.call(null,G__337256,G__337257));
})();
var G__337252 = (function (){var G__337258 = cljs.core.PersistentArrayMap.EMPTY;
var G__337259 = "YIP";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337258,G__337259) : tailrecursion.hoplon.td.call(null,G__337258,G__337259));
})();
var G__337253 = (function (){var G__337260 = cljs.core.PersistentArrayMap.EMPTY;
var G__337261 = "9";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337260,G__337261) : tailrecursion.hoplon.td.call(null,G__337260,G__337261));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337249,G__337250,G__337251,G__337252,G__337253) : tailrecursion.hoplon.tr.call(null,G__337249,G__337250,G__337251,G__337252,G__337253));
})();
var G__337222 = (function (){var G__337262 = cljs.core.PersistentArrayMap.EMPTY;
var G__337263 = (function (){var G__337267 = cljs.core.PersistentArrayMap.EMPTY;
var G__337268 = "JOB";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337267,G__337268) : tailrecursion.hoplon.td.call(null,G__337267,G__337268));
})();
var G__337264 = (function (){var G__337269 = cljs.core.PersistentArrayMap.EMPTY;
var G__337270 = "2";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337269,G__337270) : tailrecursion.hoplon.td.call(null,G__337269,G__337270));
})();
var G__337265 = (function (){var G__337271 = cljs.core.PersistentArrayMap.EMPTY;
var G__337272 = "WAH";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337271,G__337272) : tailrecursion.hoplon.td.call(null,G__337271,G__337272));
})();
var G__337266 = (function (){var G__337273 = cljs.core.PersistentArrayMap.EMPTY;
var G__337274 = "1";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337273,G__337274) : tailrecursion.hoplon.td.call(null,G__337273,G__337274));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337262,G__337263,G__337264,G__337265,G__337266) : tailrecursion.hoplon.tr.call(null,G__337262,G__337263,G__337264,G__337265,G__337266));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$5(G__337218,G__337219,G__337220,G__337221,G__337222) : tailrecursion.hoplon.table.call(null,G__337218,G__337219,G__337220,G__337221,G__337222));
})(),"",(function (){var _STAR_references_STAR_337275 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337276 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337277 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337278 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337279 = cljs.core.PersistentArrayMap.EMPTY;
var G__337280 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use ",(function (){var G__337281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"generate-huffman-tree"], null);
var G__337282 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337281,G__337282) : tailrecursion.hoplon.markdown.code_node.call(null,G__337281,G__337282));
})()," (exercise 2.69) to generate a corresponding Huffman tree, and use ",(function (){var G__337283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode"], null);
var G__337284 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337283,G__337284) : tailrecursion.hoplon.markdown.code_node.call(null,G__337283,G__337284));
})()," (exercise 2.68) to encode the following message:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337279,G__337280) : tailrecursion.hoplon.markdown.para_node.call(null,G__337279,G__337280));
})(),(function (){var G__337285 = cljs.core.PersistentArrayMap.EMPTY;
var G__337286 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Get a job"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337285,G__337286) : tailrecursion.hoplon.markdown.para_node.call(null,G__337285,G__337286));
})(),(function (){var G__337287 = cljs.core.PersistentArrayMap.EMPTY;
var G__337288 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sha na na na na na na na na"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337287,G__337288) : tailrecursion.hoplon.markdown.para_node.call(null,G__337287,G__337288));
})(),(function (){var G__337289 = cljs.core.PersistentArrayMap.EMPTY;
var G__337290 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Get a job"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337289,G__337290) : tailrecursion.hoplon.markdown.para_node.call(null,G__337289,G__337290));
})(),(function (){var G__337291 = cljs.core.PersistentArrayMap.EMPTY;
var G__337292 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sha na na na na na na na na"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337291,G__337292) : tailrecursion.hoplon.markdown.para_node.call(null,G__337291,G__337292));
})(),(function (){var G__337293 = cljs.core.PersistentArrayMap.EMPTY;
var G__337294 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Wah yip yip yip yip yip yip yip yip yip"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337293,G__337294) : tailrecursion.hoplon.markdown.para_node.call(null,G__337293,G__337294));
})(),(function (){var G__337295 = cljs.core.PersistentArrayMap.EMPTY;
var G__337296 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sha boom"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337295,G__337296) : tailrecursion.hoplon.markdown.para_node.call(null,G__337295,G__337296));
})(),(function (){var G__337297 = cljs.core.PersistentArrayMap.EMPTY;
var G__337298 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many bits are required for the encoding? What is the smallest number of bits that would be needed to encode this song if we used a fixed-length code for the eight-symbol alphabet?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337297,G__337298) : tailrecursion.hoplon.markdown.para_node.call(null,G__337297,G__337298));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337278;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337277;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337276;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337275;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337299 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337300 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337301 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337302 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337303 = cljs.core.PersistentArrayMap.EMPTY;
var G__337304 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The encoding for this will depend on the order in which the elements are given to ",(function (){var G__337305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-leaf-set"], null);
var G__337306 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337305,G__337306) : tailrecursion.hoplon.markdown.code_node.call(null,G__337305,G__337306));
})()," among other things. As an example, the version of ",(function (){var G__337307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"successive-merge"], null);
var G__337308 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337307,G__337308) : tailrecursion.hoplon.markdown.code_node.call(null,G__337307,G__337308));
})()," we used in the previous exercise creates a tree with the ",(function (){var G__337309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337310 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smaller"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337309,G__337310) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337309,G__337310));
})()," weight on the right which will affect things, as we",(function (){var G__337311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__337312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337311,G__337312) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337311,G__337312));
})(),"ll see. The key is all in the map. One acceptable code might be:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337303,G__337304) : tailrecursion.hoplon.markdown.para_node.call(null,G__337303,G__337304));
})(),(function (){var G__337313 = cljs.core.PersistentArrayMap.EMPTY;
var G__337314 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["00011000100010"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337313,G__337314) : tailrecursion.hoplon.markdown.para_node.call(null,G__337313,G__337314));
})(),(function (){var G__337315 = cljs.core.PersistentArrayMap.EMPTY;
var G__337316 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["000011111111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337315,G__337316) : tailrecursion.hoplon.markdown.para_node.call(null,G__337315,G__337316));
})(),(function (){var G__337317 = cljs.core.PersistentArrayMap.EMPTY;
var G__337318 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["00011000100010"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337317,G__337318) : tailrecursion.hoplon.markdown.para_node.call(null,G__337317,G__337318));
})(),(function (){var G__337319 = cljs.core.PersistentArrayMap.EMPTY;
var G__337320 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["000011111111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337319,G__337320) : tailrecursion.hoplon.markdown.para_node.call(null,G__337319,G__337320));
})(),(function (){var G__337321 = cljs.core.PersistentArrayMap.EMPTY;
var G__337322 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["00111010101010101010101"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337321,G__337322) : tailrecursion.hoplon.markdown.para_node.call(null,G__337321,G__337322));
})(),(function (){var G__337323 = cljs.core.PersistentArrayMap.EMPTY;
var G__337324 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["000000110"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337323,G__337324) : tailrecursion.hoplon.markdown.para_node.call(null,G__337323,G__337324));
})(),(function (){var G__337325 = cljs.core.PersistentArrayMap.EMPTY;
var G__337326 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are a total of 5 bits required for this encoding. We would need 3 bits if it were a fixed-length encdoding. The reason why we would need 3 bits is, \\(2^3=8\\) and there are 8 symbols."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337325,G__337326) : tailrecursion.hoplon.markdown.para_node.call(null,G__337325,G__337326));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337302;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337301;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337300;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337299;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337327 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337328 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337331 = cljs.core.PersistentArrayMap.EMPTY;
var G__337332 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we have a Huffman tree for an alphabet of \\(n\\) symbols, and that the relative frequencies of the symbols are \\(1, 2, 4, ",(function (){var G__337333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__337334 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337333,G__337334) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337333,G__337334));
})(),", 2^{n-1}\\). Sketch the tree for \\(n=5\\); for \\(n=10\\). In such a tree (for general \\(n\\)) how many bits are required to encode the most frequent symbol? the least frequent?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337331,G__337332) : tailrecursion.hoplon.markdown.para_node.call(null,G__337331,G__337332));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337329;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337328;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337327;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337335 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337336 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337337 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337338 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337339 = cljs.core.PersistentArrayMap.EMPTY;
var G__337340 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Due to some technical difficulties (read ",(function (){var G__337341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337342 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I really want to get through this section already"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337341,G__337342) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337341,G__337342));
})(),") I wion",(function (){var G__337343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__337344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337343,G__337344) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337343,G__337344));
})(),"t be including the drawings. If you would like them, please feel free to contact me and let me know!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337339,G__337340) : tailrecursion.hoplon.markdown.para_node.call(null,G__337339,G__337340));
})(),(function (){var G__337345 = cljs.core.PersistentArrayMap.EMPTY;
var G__337346 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for the frequencies: the most frequent symbol will need only one bit. The reason for this is that the frequency of that symbol is greater than or equal to the sum of the frequencies of all the other symbols. So it will only be combined at the very end of the combination process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337345,G__337346) : tailrecursion.hoplon.markdown.para_node.call(null,G__337345,G__337346));
})(),(function (){var G__337347 = cljs.core.PersistentArrayMap.EMPTY;
var G__337348 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming that there are at least 2 elements in the tree, the least frequent symbol will require \\(n-1\\) bits to encode. The reason for this one is a bit more complicated, but at every step, the partial tree containing the least frequent symbol has the least weight, so it is combined. Since only two things can be combined at a time, we see that the partial tree containing the least frequent element must be combined with a leaf at every stage. So we can reduce our problem to the problem of ",(function (){var G__337349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337350 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["how many leaves are there that can be combined with this leaf containing the least frequent symbol?"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337349,G__337350) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337349,G__337350));
})()," The answer to that is clearly \\(n-1\\) because there are \\(n\\) leaves."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337347,G__337348) : tailrecursion.hoplon.markdown.para_node.call(null,G__337347,G__337348));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337338;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337337;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337336;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337335;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337351 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337352 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337353 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337354 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337355 = cljs.core.PersistentArrayMap.EMPTY;
var G__337356 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the encoding procedure that you designed in exercise 2.68. What is the order of growth in the number of steps needed to encode a symbol? Be sure to include the number of steps needed to search the symbol list at each node encountered. To answer this question in general is difficult. Consider the special case where the relative frequencies of the \\(n\\) symbols are as described in exercise 2.71, and give the order of growth (as a function of \\(n\\)) of the number of steps needed to encode the most frequent and least frequent symbols in the alphabet."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337355,G__337356) : tailrecursion.hoplon.markdown.para_node.call(null,G__337355,G__337356));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337354;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337353;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337352;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337351;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337357 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337358 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337359 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337360 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337361 = cljs.core.PersistentArrayMap.EMPTY;
var G__337362 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We first note that the most expensive operations in this procedure is the search through the list at each level, and the ",(function (){var G__337363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"reverse"], null);
var G__337364 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337363,G__337364) : tailrecursion.hoplon.markdown.code_node.call(null,G__337363,G__337364));
})()," at the end. The ",(function (){var G__337365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"reverse"], null);
var G__337366 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337365,G__337366) : tailrecursion.hoplon.markdown.code_node.call(null,G__337365,G__337366));
})()," is \\(\\Theta(m)\\) where \\(m\\) is the length of the code, and the search is \\(\\Theta(k)\\) where \\(k\\) is the length of the left branch at the current stage."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337361,G__337362) : tailrecursion.hoplon.markdown.para_node.call(null,G__337361,G__337362));
})(),(function (){var G__337367 = cljs.core.PersistentArrayMap.EMPTY;
var G__337368 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since our sets are ordered by frequency (with the most frequent in front), and the most frequent symbol is encoded as a single bit each time (due to the distribution given in exercise 2.71), we know that the very first left branch will be the leaf containing the most frequent symbol. Also, since the code is only a single bit, the ",(function (){var G__337369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"reverse"], null);
var G__337370 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337369,G__337370) : tailrecursion.hoplon.markdown.code_node.call(null,G__337369,G__337370));
})()," procedure can be done in constant time as well. Hence we can encode the most frequent symbol in constant time, so \\(\\Theta(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337367,G__337368) : tailrecursion.hoplon.markdown.para_node.call(null,G__337367,G__337368));
})(),(function (){var G__337371 = cljs.core.PersistentArrayMap.EMPTY;
var G__337372 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To encode the least fequent symbol, we would have to traverse the lists all the way down to the end, but each time the left branch has only one element in it, so the traversing would be \\(\\Theta(1)+\\Theta(1)+",(function (){var G__337373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__337374 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337373,G__337374) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337373,G__337374));
})(),"+\\Theta(1)\\). The length of the code will be the number of symbols in the list (i.e. \\(n\\)). So our order of growth should be"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337371,G__337372) : tailrecursion.hoplon.markdown.para_node.call(null,G__337371,G__337372));
})(),(function (){var G__337375 = cljs.core.PersistentArrayMap.EMPTY;
var G__337376 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} &\\Theta(n)+\\underbrace{\\Theta(1)+\\Theta(1)+",(function (){var G__337377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__337378 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337377,G__337378) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337377,G__337378));
})(),"+\\Theta(1)}_{n-1\\text{ times}} \\\\=&\\Theta(n) \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337375,G__337376) : tailrecursion.hoplon.markdown.para_node.call(null,G__337375,G__337376));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337360;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337359;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337358;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337357;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$44(G__320049,G__320050,G__320051,G__320052,G__320053,G__320054,G__320055,G__320056,G__320057,G__320058,G__320059,G__320060,G__320061,G__320062,G__320063,G__320064,G__320065,G__320066,G__320067,G__320068,G__320069,G__320070,G__320071,G__320072,G__320073,G__320074,G__320075,G__320076,G__320077,G__320078,G__320079,G__320080,G__320081,G__320082,G__320083,G__320084,G__320085,G__320086,G__320087,G__320088,G__320089,G__320090,G__320091,G__320092) : tailrecursion.hoplon.div.call(null,G__320049,G__320050,G__320051,G__320052,G__320053,G__320054,G__320055,G__320056,G__320057,G__320058,G__320059,G__320060,G__320061,G__320062,G__320063,G__320064,G__320065,G__320066,G__320067,G__320068,G__320069,G__320070,G__320071,G__320072,G__320073,G__320074,G__320075,G__320076,G__320077,G__320078,G__320079,G__320080,G__320081,G__320082,G__320083,G__320084,G__320085,G__320086,G__320087,G__320088,G__320089,G__320090,G__320091,G__320092));
};
var book$sicp$texts$ch2sect3$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__337379__i = 0, G__337379__a = new Array(arguments.length -  0);
while (G__337379__i < G__337379__a.length) {G__337379__a[G__337379__i] = arguments[G__337379__i + 0]; ++G__337379__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__337379__a,0);
} 
return book$sicp$texts$ch2sect3$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect3$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect3$content.cljs$lang$applyTo = (function (arglist__337380){
var args__8262__auto__ = cljs.core.seq(arglist__337380);
return book$sicp$texts$ch2sect3$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect3$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect3$content__delegate;
return book$sicp$texts$ch2sect3$content;
})()
;
